{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Real-Dev-Squad/website-backend"
		},
		"file": {
			"name": "apiSchema.json",
			"size": 0,
			"path": "public/apiSchema.json",
			"byteSize": 54315,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"RDS API documentation\",\n    \"description\": \"This is documentation for Real Dev Squad's API. Find out more about Real dev squad at [http://realdevsquad.com](http://realdevsquad.com)\",\n    \"contact\": { \"name\": \"Real Dev Squad\", \"url\": \"http://realdevsquad.com\" }\n  },\n  \"tags\": [\n    { \"name\": \"Healthcheck\", \"description\": \"API for health check in the system\" },\n    { \"name\": \"Authentication\", \"description\": \"Authentication routes\" }\n  ],\n  \"servers\": [{ \"url\": \"http://localhost:3000\", \"description\": \"Local server URL\" }],\n  \"components\": {\n    \"securitySchemes\": { \"bearerAuth\": { \"type\": \"http\", \"scheme\": \"bearer\", \"bearerFormat\": \"JWT\" } },\n    \"schemas\": {\n      \"healthCheck\": { \"type\": \"object\", \"properties\": { \"uptime\": { \"type\": \"number\" } } },\n      \"tasks\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": { \"type\": \"string\" },\n          \"purpose\": { \"type\": \"string\" },\n          \"featureUrl\": { \"type\": \"string\" },\n          \"type\": { \"type\": \"string\" },\n          \"links\": { \"type\": \"array\", \"items\": { \"link1\": { \"type\": \"string\" } } },\n          \"endsOn\": { \"type\": \"string\" },\n          \"startedOn\": { \"type\": \"string\" },\n          \"status\": { \"type\": \"string\" },\n          \"assignee\": { \"type\": \"string\" },\n          \"percentCompleted\": { \"type\": \"number\" },\n          \"dependsOn\": { \"type\": \"array\", \"items\": { \"taskid\": { \"type\": \"string\" } } },\n          \"participants\": { \"type\": \"array\", \"items\": { \"username\": { \"type\": \"string\" } } },\n          \"completionAward\": {\n            \"type\": \"object\",\n            \"properties\": { \"neelam\": { \"type\": \"number\" }, \"dinero\": { \"type\": \"number\" } }\n          },\n          \"lossRate\": {\n            \"type\": \"object\",\n            \"properties\": { \"neelam\": { \"type\": \"number\" }, \"dinero\": { \"type\": \"number\" } }\n          },\n          \"isNoteworthy\": { \"type\": \"boolean\" }\n        }\n      },\n      \"contributions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"noteworthy\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"task\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": { \"type\": \"string\" },\n                    \"purpose\": { \"type\": \"string\" },\n                    \"featureUrl\": { \"type\": \"string\" },\n                    \"endsOn\": { \"type\": \"string\" },\n                    \"startedOn\": { \"type\": \"string\" },\n                    \"status\": { \"type\": \"string\" },\n                    \"dependsOn\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n                    \"participants\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"firstname\": { \"type\": \"string\" },\n                          \"lastname\": { \"type\": \"string\" },\n                          \"img\": { \"type\": \"string\" },\n                          \"username\": { \"type\": \"string\" }\n                        }\n                      }\n                    },\n                    \"isNoteworthy\": { \"type\": \"boolean\" }\n                  }\n                },\n                \"prList\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"title\": { \"type\": \"string\" },\n                      \"url\": { \"type\": \"string\" },\n                      \"state\": { \"type\": \"string\" },\n                      \"createdAt\": { \"type\": \"string\" },\n                      \"updatedAt\": { \"type\": \"string\" },\n                      \"raisedBy\": { \"type\": \"string\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"all\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"task\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"title\": { \"type\": \"string\" },\n                    \"purpose\": { \"type\": \"string\" },\n                    \"featureUrl\": { \"type\": \"string\" },\n                    \"endsOn\": { \"type\": \"string\" },\n                    \"startedOn\": { \"type\": \"string\" },\n                    \"status\": { \"type\": \"string\" },\n                    \"dependsOn\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n                    \"participants\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"firstname\": { \"type\": \"string\" },\n                          \"lastname\": { \"type\": \"string\" },\n                          \"img\": { \"type\": \"string\" },\n                          \"username\": { \"type\": \"string\" }\n                        }\n                      }\n                    },\n                    \"isNoteworthy\": { \"type\": \"boolean\" }\n                  }\n                },\n                \"prList\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"title\": { \"type\": \"string\" },\n                      \"url\": { \"type\": \"string\" },\n                      \"state\": { \"type\": \"string\" },\n                      \"createdAt\": { \"type\": \"string\" },\n                      \"updatedAt\": { \"type\": \"string\" },\n                      \"raisedBy\": { \"type\": \"string\" }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"challenges\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"title\": { \"type\": \"string\" },\n          \"level\": { \"type\": \"string\" },\n          \"start_date\": { \"type\": \"string\" },\n          \"end_date\": { \"type\": \"string\" },\n          \"is_active\": { \"type\": \"boolean\" },\n          \"participants\": { \"type\": \"array\", \"items\": [] }\n        }\n      },\n      \"pullRequests\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": { \"type\": \"string\" },\n          \"url\": { \"type\": \"string\" },\n          \"state\": { \"type\": \"string\" },\n          \"createdAt\": { \"type\": \"string\" },\n          \"updatedAt\": { \"type\": \"string\" },\n          \"readyForReview\": { \"type\": \"boolean\" },\n          \"labels\": { \"type\": \"array\", \"items\": [] },\n          \"assignees\": { \"type\": \"array\", \"items\": [] }\n        }\n      },\n      \"recruiters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"company\": { \"type\": \"string\" },\n          \"first_name\": { \"type\": \"string\" },\n          \"last_name\": { \"type\": \"string\" },\n          \"designation\": { \"type\": \"string\" },\n          \"reason\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" },\n          \"currency\": { \"type\": \"string\" },\n          \"package\": { \"type\": \"number\" }\n        }\n      },\n      \"migratedUsers\": {\n        \"type\": \"object\",\n        \"properties\": { \"count\": { \"type\": \"number\" }, \"users\": { \"type\": \"array\" } }\n      },\n      \"users\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"first_name\": { \"type\": \"string\" },\n          \"last_name\": { \"type\": \"string\" },\n          \"yoe\": { \"type\": \"number\" },\n          \"company\": { \"type\": \"string\" },\n          \"designation\": { \"type\": \"string\" },\n          \"img\": { \"type\": \"string\" },\n          \"github_display_name\": { \"type\": \"string\" },\n          \"github_id\": { \"type\": \"string\" },\n          \"linkedin_id\": { \"type\": \"string\" },\n          \"twitter_id\": { \"type\": \"string\" },\n          \"instagram_id\": { \"type\": \"string\" },\n          \"site\": { \"type\": \"string\" },\n          \"isMember\": { \"type\": \"boolean\" },\n          \"tokens\": { \"type\": \"object\" },\n          \"status\": { \"type\": \"string\" }\n        }\n      },\n      \"badges\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": { \"type\": \"string\" },\n          \"description\": { \"type\": \"string\" },\n          \"imgUrl\": { \"type\": \"string\" },\n          \"users\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        }\n      },\n      \"userBadges\": {\n        \"type\": \"object\",\n        \"properties\": { \"title\": { \"type\": \"string\" }, \"description\": { \"type\": \"string\" } }\n      },\n      \"userAvailable\": { \"type\": \"object\", \"properties\": { \"isUsernameAvailable\": { \"type\": \"boolean\" } } },\n      \"stocks\": {\n        \"type\": \"object\",\n        \"properties\": { \"name\": { \"type\": \"string\" }, \"price\": { \"type\": \"number\" }, \"quantity\": { \"type\": \"number\" } }\n      },\n      \"trading\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"stockId\": { \"type\": \"string\" },\n          \"tradeType\": { \"type\": \"string\" },\n          \"stockName\": { \"type\": \"string\" },\n          \"quantity\": { \"type\": \"number\" },\n          \"listedPrice\": { \"type\": \"number\" },\n          \"totalPrice\": { \"type\": \"number\" }\n        }\n      },\n      \"tradingSuccess\": { \"type\": \"object\", \"properties\": { \"userBalance\": { \"type\": \"number\" } } },\n      \"userStocks\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": { \"type\": \"string\" },\n          \"stockId\": { \"type\": \"string\" },\n          \"stockName\": { \"type\": \"string\" },\n          \"quantity\": { \"type\": \"number\" },\n          \"orderValue\": { \"type\": \"number\" },\n          \"initialStockValue\": { \"type\": \"number\" }\n        }\n      },\n      \"auctions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"seller\": { \"type\": \"string\" },\n          \"item_type\": { \"type\": \"string\" },\n          \"quantity\": { \"type\": \"number\" },\n          \"highest_bid\": { \"type\": \"number\" },\n          \"highest_bidder\": { \"type\": \"number\" },\n          \"start_time\": { \"type\": \"number\" },\n          \"end_time\": { \"type\": \"number\" },\n          \"bidders_and_bids\": { \"type\": \"array\" }\n        }\n      },\n      \"featureFlag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"id\": { \"type\": \"string\" },\n          \"title\": { \"type\": \"string\" },\n          \"created_at\": { \"type\": \"number\" },\n          \"updated_at\": { \"type\": \"number\" },\n          \"config\": { \"type\": \"object\" },\n          \"owner\": { \"type\": \"string\" },\n          \"launched_at\": { \"type\": \"number\" }\n        }\n      },\n      \"errors\": {\n        \"unAuthorized\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"notFound\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"forbidden\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"badImplementation\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"entityTooLarge\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"unsupportedMediaType\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        },\n        \"serverUnavailable\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"statusCode\": { \"type\": \"integer\" },\n            \"error\": { \"type\": \"string\" },\n            \"message\": { \"type\": \"string\" }\n          }\n        }\n      }\n    }\n  },\n  \"paths\": {\n    \"/auctions/:id\": {\n      \"get\": {\n        \"summary\": \"Fetches auction details for given auctionId\",\n        \"tags\": [\"Auctions\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Auction details\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/auctions\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/auctions\": {\n      \"get\": {\n        \"summary\": \"Get all the active (ongoing) auctions\",\n        \"tags\": [\"Auctions\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All ongoing auctions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Auctions returned successfully!\" },\n                    \"auctions\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/auctions\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Creates a new auction\",\n        \"tags\": [\"Auctions\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New auction\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Auction created successfully!\" },\n                    \"id\": { \"type\": \"string\" }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/auctions/bid/:id\": {\n      \"post\": {\n        \"summary\": \"Makes a new bid given auctionId\",\n        \"tags\": [\"Auctions\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New bid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Successfully placed bid!\" },\n                    \"id\": { \"type\": \"string\" }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/auth/github/callback\": {\n      \"get\": {\n        \"summary\": \"Authenticates the user using the GitHub Oauth 2.0. Redirects to the UI on successful login\",\n        \"tags\": [\"Authentication\"],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"code\",\n            \"required\": true,\n            \"type\": \"string\",\n            \"description\": \"Temporary code returned by GitHub Oauth\"\n          }\n        ],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Redirects to the UI on successful login\",\n            \"headers\": {\n              \"Cookie\": { \"type\": \"string\", \"description\": \"Cookie containing authentication token\" },\n              \"Location\": { \"type\": \"string\", \"description\": \"Redirection URL\" }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          }\n        }\n      }\n    },\n    \"/badges\": {\n      \"get\": {\n        \"summary\": \"Get all the badges in system.\",\n        \"tags\": [\"Badges\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Badge details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Badges returned successfully!\" },\n                    \"badges\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/badges\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/badges/:username\": {\n      \"get\": {\n        \"summary\": \"Get all the badges of a particular user.\",\n        \"tags\": [\"Badges\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User badegs\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"User badges returned successfully!\" },\n                    \"userBadges\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/userBadges\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/challenges\": {\n      \"get\": {\n        \"summary\": \"Used to get all the challenges\",\n        \"tags\": [\"Challenges\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return challenges\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/challenges\" } } }\n          },\n          \"404\": {\n            \"description\": \"No challenges found\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Post new challenge\",\n        \"tags\": [\"Challenges\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Post challenge\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/challenges\" } } }\n          },\n          \"404\": {\n            \"description\": \"Unable to add challenge\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/challenges/subscribe\": {\n      \"post\": {\n        \"summary\": \"Subscribe user to challenge\",\n        \"tags\": [\"Challenges\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Subscribed sucessfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": { \"message\": { \"type\": \"string\", \"example\": \"User has subscribed to challenge\" } }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Unable to add challenge\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/contributions/{username}\": {\n      \"get\": {\n        \"summary\": \"Used to get all the contributions of user\",\n        \"tags\": [\"Contributions\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return contributions\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/contributions\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/featureFlags\": {\n      \"get\": {\n        \"summary\": \"Gets details of all the featureFlags\",\n        \"tags\": [\"FeatureFlags\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of all the featureFlags\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/featureFlags\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Use to Post the details of featureFlag data.\",\n        \"requestBody\": {\n          \"description\": \"featureFlag data\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/featureFlag\" } } }\n        },\n        \"tags\": [\"FeatureFlag\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": { \"description\": \"No content\" },\n          \"400\": {\n            \"description\": \"badRequest\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badRequest\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/featureFlags/:id\": {\n      \"patch\": {\n        \"summary\": \"Use to update the featureFlag data.\",\n        \"requestBody\": {\n          \"description\": \"featureFlag data to be updated\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/featureFlag\" } } }\n        },\n        \"tags\": [\"FeatureFlag\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": { \"description\": \"No content\" },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Use to delete the featureFlag data.\",\n        \"requestBody\": {\n          \"description\": \"Id of featureFlag to be deleted\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/featureFlag\" } } }\n        },\n        \"tags\": [\"FeatureFlag\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": { \"description\": \"No content\" },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/healthcheck\": {\n      \"get\": {\n        \"summary\": \"Use to check health status of the server.\",\n        \"tags\": [\"Healthcheck\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Server uptime status\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/healthCheck\" } } }\n          }\n        }\n      }\n    },\n    \"/healthcheck/v2\": {\n      \"get\": {\n        \"summary\": \"Sample route to test authentication middleware.\",\n        \"tags\": [\"Healthcheck\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Server uptime status\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/healthCheck\" } } }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          }\n        }\n      }\n    },\n    \"/members\": {\n      \"get\": {\n        \"summary\": \"Gets details of all the Real Dev Squad members\",\n        \"tags\": [\"Members\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of all the RDS members\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/members/idle\": {\n      \"get\": {\n        \"summary\": \"Gets details of idle members of the Real Dev Squad\",\n        \"tags\": [\"Members\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of inactive/idle members of the RDS members\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/members/intro/:username\": {\n      \"post\": {\n        \"summary\": \"Posts details of the recruiter\",\n        \"tags\": [\"Members\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of the recruiter and the member in which recruiter is interested\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/recruiters\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/moveToMembers/:username\": {\n      \"patch\": {\n        \"summary\": \"Changes the role of a new member(the username provided in params) to member\",\n        \"tags\": [\"Members\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": { \"description\": \"no content\" },\n          \"400\": {\n            \"description\": \"badRequest\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": { \"message\": { \"type\": \"string\", \"example\": \"User Already is a member\" } }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/members/member-to-role-migration\": {\n      \"patch\": {\n        \"summary\": \"One time call to update roles of the users\",\n        \"tags\": [\"Members\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of the users migrated\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/migratedUsers\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/members/delete-isMember\": {\n      \"patch\": {\n        \"summary\": \"One time call to remove isMember field for all the migrated users\",\n        \"tags\": [\"Members\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Details of the users migrated\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/migratedUsers\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/archiveMembers/:username\": {\n      \"patch\": {\n        \"summary\": \"Changes the role of a old member(the username provided in params) in new members list to archive_member\",\n        \"tags\": [\"Members\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": { \"description\": \"no content\" },\n          \"400\": {\n            \"description\": \"badRequest\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": { \"message\": { \"type\": \"string\", \"example\": \"User Already is a member\" } }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/pullrequests/open\": {\n      \"get\": {\n        \"summary\": \"Latest 10 Pull Requests in Real Dev Squad\",\n        \"tags\": [\"Pull Requests\"],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"size\",\n            \"schema\": { \"type\": \"integer\" },\n            \"description\": \"Number of pull requests to be returned\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": { \"type\": \"integer\" },\n            \"description\": \"Page number for pagination\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pull Requests\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Open PRs\" },\n                    \"pullRequests\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/pullRequests\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/pullrequests/stale\": {\n      \"get\": {\n        \"summary\": \"All open Pull Requests in Real Dev Squad\",\n        \"tags\": [\"Pull Requests\"],\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"size\",\n            \"schema\": { \"type\": \"integer\" },\n            \"description\": \"Number of pull requests to be returned\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": { \"type\": \"integer\" },\n            \"description\": \"Page number for pagination\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pull Requests\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Stale PRs\" },\n                    \"pullRequests\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/pullRequests\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/pullrequests/user/:username\": {\n      \"get\": {\n        \"summary\": \"Pull Requests by a user in Real Dev Squad\",\n        \"tags\": [\"Pull Requests\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Pull Requests\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Pull requests returned successfully!\" },\n                    \"pullRequests\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/pullRequests\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/stocks\": {\n      \"get\": {\n        \"summary\": \"Used to get all the stocks\",\n        \"tags\": [\"Stocks\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns stocks\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/stocks\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Used to create new stock\",\n        \"tags\": [\"Stocks\"],\n        \"requestBody\": {\n          \"description\": \"Stock data\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/stocks\" } } }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns newly created stock\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/stocks\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/stocks/user/self\": {\n      \"get\": {\n        \"summary\": \"Used to get all the stocks of the user\",\n        \"tags\": [\"User Stocks\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns stocks of the user\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/userStocks\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/tasks\": {\n      \"get\": {\n        \"summary\": \"Used to get all the tasks\",\n        \"tags\": [\"Tasks\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns tasks\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Used to create new task\",\n        \"tags\": [\"Tasks\"],\n        \"requestBody\": {\n          \"description\": \"Task data\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns newly created task\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Used to update task details\",\n        \"tags\": [\"Tasks\"],\n        \"requestBody\": {\n          \"description\": \"Task data to be updated\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n        },\n        \"responses\": {\n          \"204\": { \"description\": \"no content\" },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/tasks/self\": {\n      \"get\": {\n        \"summary\": \"Use to get all the tasks of the logged in user\",\n        \"tags\": [\"Tasks\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns all tasks\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/tasks/username\": {\n      \"get\": {\n        \"summary\": \"Use to get all the tasks of the requested user\",\n        \"tags\": [\"Tasks\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns all tasks of the requested user\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/tasks/self/:id\": {\n      \"patch\": {\n        \"summary\": \"used to update self task status\",\n        \"tags\": [\"Tasks\"],\n        \"requestBody\": {\n          \"desciption\": \"Task status\",\n          \"required\": true,\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Status of self task udpated\",\n            \"content\": { \"application/json\": { \"schma\": { \"$ref\": \"#/components/schemas/tasks\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/trade/stock/new/self\": {\n      \"post\": {\n        \"summary\": \"Used for new trading request\",\n        \"tags\": [\"Trading\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"requestBody\": {\n          \"description\": \"Trading details\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/trading\" } } }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful trading details\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/tradingSuccess\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/users/self\": {\n      \"patch\": {\n        \"summary\": \"Use to update the user data.\",\n        \"requestBody\": {\n          \"description\": \"User data to be updated\",\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users\" } } }\n        },\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": { \"description\": \"No content\" },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Use to get self details.\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User details\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"Get all the users in system.\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": { \"type\": \"string\", \"example\": \"Users returned successfully!\" },\n                    \"users\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/users\" } }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"503\": {\n            \"description\": \"serverUnavailable\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/serverUnavailable\" } } }\n          }\n        }\n      }\n    },\n    \"/users/isUsernameAvailable/:username\": {\n      \"get\": {\n        \"summary\": \"check user exists or not\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User Availability\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/userAvailable\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/users/:username\": {\n      \"get\": {\n        \"summary\": \"Get the details of user with provided id.\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User details\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/users/picture\": {\n      \"post\": {\n        \"summary\": \"Post user profile picture\",\n        \"consumes\": [\"multipart/form-data\"],\n        \"parameters\": [\n          { \"in\": \"formData\", \"name\": \"profile\", \"type\": \"file\", \"description\": \"Profile picture to upload\" }\n        ],\n        \"tags\": [\"Users\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User image\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/users/img\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"404\": {\n            \"description\": \"notFound\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/notFound\" } } }\n          },\n          \"413\": {\n            \"description\": \"entityTooLarge\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/entityTooLarge\" } } }\n          },\n          \"415\": {\n            \"description\": \"unsupportedMediaType\",\n            \"content\": {\n              \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unsupportedMediaType\" } }\n            }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/wallet/\": {\n      \"get\": {\n        \"summary\": \"Gets the user wallet details\",\n        \"tags\": [\"wallet\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return wallet\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/wallet\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    },\n    \"/wallet/:username\": {\n      \"get\": {\n        \"summary\": \"Gets the user wallet details for a username, if you are an authorized superuser\",\n        \"tags\": [\"wallet\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return wallet\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/wallet\" } } }\n          },\n          \"401\": {\n            \"description\": \"unAuthorized\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/unAuthorized\" } } }\n          },\n          \"403\": {\n            \"description\": \"forbidden\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/forbidden\" } } }\n          },\n          \"500\": {\n            \"description\": \"badImplementation\",\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/errors/badImplementation\" } } }\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.items of type ogen.Schema"
}