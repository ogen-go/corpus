{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/docs-v2"
		},
		"file": {
			"name": "ref.yml",
			"size": 0,
			"path": "api-docs/cloud/ref.yml",
			"byteSize": 583315,
			"content": "components:\n  parameters:\n    After:\n      description: \u003e\n        Resource ID to seek from. Results are not inclusive of this ID. Use\n        `after` instead of `offset`.\n      in: query\n      name: after\n      required: false\n      schema:\n        type: string\n    Descending:\n      in: query\n      name: descending\n      required: false\n      schema:\n        default: false\n        type: boolean\n    Limit:\n      description: |\n        Limits the number of records returned. Default is `20`.\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 20\n        maximum: 100\n        minimum: 1\n        type: integer\n    Offset:\n      description: |\n        The offset for pagination.\n        The number of records to skip.\n      in: query\n      name: offset\n      required: false\n      schema:\n        minimum: 0\n        type: integer\n    SortBy:\n      in: query\n      name: sortBy\n      required: false\n      schema:\n        type: string\n    TraceSpan:\n      description: OpenTracing span context\n      example:\n        baggage:\n          key: value\n        span_id: '1'\n        trace_id: '1'\n      in: header\n      name: Zap-Trace-Span\n      required: false\n      schema:\n        type: string\n  responses:\n    AuthorizationError:\n      content:\n        application/json:\n          examples:\n            tokenNotAuthorized:\n              summary: Token is not authorized to access a resource\n              value:\n                code: unauthorized\n                message: unauthorized access\n          schema:\n            properties:\n              code:\n                description: |\n                  The HTTP status code description. Default is `unauthorized`.\n                enum:\n                  - unauthorized\n                readOnly: true\n                type: string\n              message:\n                description: \u003e-\n                  A human-readable message that may contain detail about the\n                  error.\n                readOnly: true\n                type: string\n      description: |\n        Unauthorized. The error may indicate one of the following:\n\n          * The `Authorization: Token` header is missing or malformed.\n          * The API token value is missing from the header.\n          * The token doesn't have sufficient permissions to write to this organization and bucket.\n    BadRequestError:\n      content:\n        application/json:\n          examples:\n            orgProvidedNotFound:\n              summary: \u003e-\n                The org or orgID passed doesn't own the token passed in the\n                header\n              value:\n                code: invalid\n                message: 'failed to decode request body: organization not found'\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: \u003e\n        Bad request.\n\n        The response body contains detail about the error.\n\n\n        #### InfluxDB OSS\n\n\n        - Returns this error if an incorrect value is passed for `org` or\n        `orgID`.\n    GeneralServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Non 2XX error response from server.\n    InternalServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: |\n        Internal server error.\n        The server encountered an unexpected situation.\n    ResourceNotFoundError:\n      content:\n        application/json:\n          examples:\n            bucket-not-found:\n              summary: Bucket name not found\n              value:\n                code: not found\n                message: bucket \"air_sensor\" not found\n            org-not-found:\n              summary: Organization name not found\n              value:\n                code: not found\n                message: organization name \"my-org\" not found\n            orgID-not-found:\n              summary: Organization ID not found\n              value:\n                code: not found\n                message: organization not found\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: \u003e\n        Not found.\n\n        A requested resource was not found.\n\n        The response body contains the requested resource type and the name\n        value\n\n        (if you passed it)--for example:\n\n\n        - `\"organization name \\\"my-org\\\" not found\"`\n\n        - `\"organization not found\"`: indicates you passed an ID that did not\n        match\n           an organization.\n    ServerError:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Non 2XX error response from server.\n  schemas:\n    ASTResponse:\n      description: Contains the AST for the supplied Flux query\n      properties:\n        ast:\n          $ref: '#/components/schemas/Package'\n      type: object\n    AddResourceMemberRequestBody:\n      properties:\n        id:\n          description: |\n            The ID of the user to add to the resource.\n          type: string\n        name:\n          description: |\n            The name of the user to add to the resource.\n          type: string\n      required:\n        - id\n      type: object\n    AnalyzeQueryResponse:\n      properties:\n        errors:\n          items:\n            properties:\n              character:\n                type: integer\n              column:\n                type: integer\n              line:\n                type: integer\n              message:\n                type: string\n            type: object\n          type: array\n      type: object\n    ArrayExpression:\n      description: Used to create and directly specify the elements of an array object\n      properties:\n        elements:\n          description: Elements of the array\n          items:\n            $ref: '#/components/schemas/Expression'\n          type: array\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Authorization:\n      allOf:\n        - $ref: '#/components/schemas/AuthorizationUpdateRequest'\n        - properties:\n            createdAt:\n              format: date-time\n              readOnly: true\n              type: string\n            id:\n              readOnly: true\n              type: string\n            links:\n              example:\n                self: /api/v2/authorizations/1\n                user: /api/v2/users/12\n              properties:\n                self:\n                  $ref: '#/components/schemas/Link'\n                  readOnly: true\n                user:\n                  $ref: '#/components/schemas/Link'\n                  readOnly: true\n              readOnly: true\n              type: object\n            org:\n              description: The name of the organization that owns the token.\n              readOnly: true\n              type: string\n            orgID:\n              description: The ID of the organization.\n              type: string\n            permissions:\n              description: |\n                A list of permissions for an authorization.\n                An authorization must have at least one permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n              minItems: 1\n              type: array\n            token:\n              description: |\n                The API token for authenticating InfluxDB API and CLI requests.\n              readOnly: true\n              type: string\n            updatedAt:\n              format: date-time\n              readOnly: true\n              type: string\n            user:\n              description: The name of the user that the token is scoped to.\n              readOnly: true\n              type: string\n            userID:\n              description: The ID of the user that the token is scoped to.\n              readOnly: true\n              type: string\n          type: object\n      required:\n        - orgID\n        - permissions\n    AuthorizationUpdateRequest:\n      properties:\n        description:\n          description: A description of the token.\n          type: string\n        status:\n          default: active\n          description: \u003e-\n            Status of the token. If `inactive`, requests using the token will be\n            rejected.\n          enum:\n            - active\n            - inactive\n          type: string\n    Authorizations:\n      properties:\n        authorizations:\n          items:\n            $ref: '#/components/schemas/Authorization'\n          type: array\n        links:\n          $ref: '#/components/schemas/Links'\n          readOnly: true\n      type: object\n    Axes:\n      description: The viewport for a View's visualizations\n      properties:\n        x:\n          $ref: '#/components/schemas/Axis'\n        'y':\n          $ref: '#/components/schemas/Axis'\n      required:\n        - x\n        - 'y'\n      type: object\n    Axis:\n      description: Axis used in a visualization.\n      properties:\n        base:\n          description: Radix for formatting axis values.\n          enum:\n            - ''\n            - '2'\n            - '10'\n          type: string\n        bounds:\n          description: \u003e-\n            The extents of the axis in the form [lower, upper]. Clients\n            determine whether bounds are inclusive or exclusive of their limits.\n          items:\n            type: string\n          maxItems: 2\n          minItems: 0\n          type: array\n        label:\n          description: Description of the axis.\n          type: string\n        prefix:\n          description: Label prefix for formatting axis values.\n          type: string\n        scale:\n          $ref: '#/components/schemas/AxisScale'\n        suffix:\n          description: Label suffix for formatting axis values.\n          type: string\n      type: object\n    AxisScale:\n      description: 'Scale is the axis formatting scale. Supported: \"log\", \"linear\"'\n      enum:\n        - log\n        - linear\n      type: string\n    BadStatement:\n      description: \u003e-\n        A placeholder for statements for which no correct statement nodes can be\n        created\n      properties:\n        text:\n          description: Raw source text\n          type: string\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    BandViewProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        axes:\n          $ref: '#/components/schemas/Axes'\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        generateYAxisTicks:\n          items:\n            type: string\n          type: array\n        geom:\n          $ref: '#/components/schemas/XYGeom'\n        hoverDimension:\n          enum:\n            - auto\n            - x\n            - 'y'\n            - xy\n          type: string\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        lowerColumn:\n          type: string\n        mainColumn:\n          type: string\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        staticLegend:\n          $ref: '#/components/schemas/StaticLegend'\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - band\n          type: string\n        upperColumn:\n          type: string\n        xColumn:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yColumn:\n          type: string\n        yTickStart:\n          format: float\n          type: number\n        yTickStep:\n          format: float\n          type: number\n        yTotalTicks:\n          type: integer\n      required:\n        - type\n        - geom\n        - queries\n        - shape\n        - axes\n        - colors\n        - note\n        - showNoteWhenEmpty\n      type: object\n    BinaryExpression:\n      description: uses binary operators to act on two operands in an expression\n      properties:\n        left:\n          $ref: '#/components/schemas/Expression'\n        operator:\n          type: string\n        right:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Block:\n      description: A set of statements\n      properties:\n        body:\n          description: Block body\n          items:\n            $ref: '#/components/schemas/Statement'\n          type: array\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    BooleanLiteral:\n      description: Represents boolean values\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: boolean\n      type: object\n    Bucket:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        links:\n          example:\n            labels: /api/v2/buckets/1/labels\n            members: /api/v2/buckets/1/members\n            org: /api/v2/orgs/2\n            owners: /api/v2/buckets/1/owners\n            self: /api/v2/buckets/1\n            write: /api/v2/write?org=2\u0026bucket=1\n          properties:\n            labels:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve labels for this bucket.\n            members:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve members that can read this bucket.\n            org:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve parent organization for this bucket.\n            owners:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve owners that can read and write to this bucket.\n            self:\n              $ref: '#/components/schemas/Link'\n              description: URL for this bucket.\n            write:\n              $ref: '#/components/schemas/Link'\n              description: URL to write line protocol to this bucket.\n          readOnly: true\n          type: object\n        name:\n          type: string\n        orgID:\n          type: string\n        retentionRules:\n          $ref: '#/components/schemas/RetentionRules'\n        rp:\n          type: string\n        schemaType:\n          $ref: '#/components/schemas/SchemaType'\n          default: implicit\n        type:\n          default: user\n          enum:\n            - user\n            - system\n          readOnly: true\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - name\n        - retentionRules\n    Buckets:\n      properties:\n        buckets:\n          items:\n            $ref: '#/components/schemas/Bucket'\n          type: array\n        links:\n          $ref: '#/components/schemas/Links'\n          readOnly: true\n      type: object\n    BuilderAggregateFunctionType:\n      enum:\n        - filter\n        - group\n      type: string\n    BuilderConfig:\n      properties:\n        aggregateWindow:\n          properties:\n            fillValues:\n              type: boolean\n            period:\n              type: string\n          type: object\n        buckets:\n          items:\n            type: string\n          type: array\n        functions:\n          items:\n            $ref: '#/components/schemas/BuilderFunctionsType'\n          type: array\n        tags:\n          items:\n            $ref: '#/components/schemas/BuilderTagsType'\n          type: array\n      type: object\n    BuilderFunctionsType:\n      properties:\n        name:\n          type: string\n      type: object\n    BuilderTagsType:\n      properties:\n        aggregateFunctionType:\n          $ref: '#/components/schemas/BuilderAggregateFunctionType'\n        key:\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n      type: object\n    BuiltinStatement:\n      description: Declares a builtin identifier and its type\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    CallExpression:\n      description: Represents a function call\n      properties:\n        arguments:\n          description: Function arguments\n          items:\n            $ref: '#/components/schemas/Expression'\n          type: array\n        callee:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Cell:\n      properties:\n        h:\n          format: int32\n          type: integer\n        id:\n          type: string\n        links:\n          properties:\n            self:\n              type: string\n            view:\n              type: string\n          type: object\n        viewID:\n          description: The reference to a view from the views API.\n          type: string\n        w:\n          format: int32\n          type: integer\n        x:\n          format: int32\n          type: integer\n        'y':\n          format: int32\n          type: integer\n      type: object\n    CellUpdate:\n      properties:\n        h:\n          format: int32\n          type: integer\n        w:\n          format: int32\n          type: integer\n        x:\n          format: int32\n          type: integer\n        'y':\n          format: int32\n          type: integer\n      type: object\n    CellWithViewProperties:\n      allOf:\n        - $ref: '#/components/schemas/Cell'\n        - properties:\n            name:\n              type: string\n            properties:\n              $ref: '#/components/schemas/ViewProperties'\n          type: object\n      type: object\n    Cells:\n      items:\n        $ref: '#/components/schemas/Cell'\n      type: array\n    CellsWithViewProperties:\n      items:\n        $ref: '#/components/schemas/CellWithViewProperties'\n      type: array\n    Check:\n      allOf:\n        - $ref: '#/components/schemas/CheckDiscriminator'\n    CheckBase:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: An optional description of the check.\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        lastRunError:\n          readOnly: true\n          type: string\n        lastRunStatus:\n          enum:\n            - failed\n            - success\n            - canceled\n          readOnly: true\n          type: string\n        latestCompleted:\n          description: \u003e-\n            A timestamp ([RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp))\n            of the latest scheduled and completed run.\n          format: date-time\n          readOnly: true\n          type: string\n        links:\n          example:\n            labels: /api/v2/checks/1/labels\n            members: /api/v2/checks/1/members\n            owners: /api/v2/checks/1/owners\n            query: /api/v2/checks/1/query\n            self: /api/v2/checks/1\n          properties:\n            labels:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve labels for this check\n            members:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve members for this check\n            owners:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve owners for this check\n            query:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve flux script for this check\n            self:\n              $ref: '#/components/schemas/Link'\n              description: URL for this check\n          readOnly: true\n          type: object\n        name:\n          type: string\n        orgID:\n          description: The ID of the organization that owns this check.\n          type: string\n        ownerID:\n          description: The ID of creator used to create this check.\n          readOnly: true\n          type: string\n        query:\n          $ref: '#/components/schemas/DashboardQuery'\n        status:\n          $ref: '#/components/schemas/TaskStatusType'\n        taskID:\n          description: The ID of the task associated with this check.\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - name\n        - orgID\n        - query\n    CheckDiscriminator:\n      discriminator:\n        mapping:\n          custom: '#/components/schemas/CustomCheck'\n          deadman: '#/components/schemas/DeadmanCheck'\n          threshold: '#/components/schemas/ThresholdCheck'\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/DeadmanCheck'\n        - $ref: '#/components/schemas/ThresholdCheck'\n        - $ref: '#/components/schemas/CustomCheck'\n    CheckPatch:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n            - active\n            - inactive\n          type: string\n      type: object\n    CheckStatusLevel:\n      description: The state to record if check matches a criteria.\n      enum:\n        - UNKNOWN\n        - OK\n        - INFO\n        - CRIT\n        - WARN\n      type: string\n    CheckViewProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        check:\n          $ref: '#/components/schemas/Check'\n        checkID:\n          type: string\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        type:\n          enum:\n            - check\n          type: string\n      required:\n        - type\n        - shape\n        - checkID\n        - queries\n        - colors\n      type: object\n    Checks:\n      properties:\n        checks:\n          items:\n            $ref: '#/components/schemas/Check'\n          type: array\n        links:\n          $ref: '#/components/schemas/Links'\n    ColorMapping:\n      additionalProperties:\n        type: string\n      description: \u003e-\n        A color mapping is an object that maps time series data to a UI color\n        scheme to allow the UI to render graphs consistent colors across\n        reloads.\n      example:\n        configcat_deployments-autopromotionblocker: '#663cd0'\n        measurement_birdmigration_europe: '#663cd0'\n        series_id_1: '#edf529'\n        series_id_2: '#edf529'\n      type: object\n    ColumnDataType:\n      enum:\n        - integer\n        - float\n        - boolean\n        - string\n        - unsigned\n      type: string\n    ColumnSemanticType:\n      enum:\n        - timestamp\n        - tag\n        - field\n      nullable: false\n      type: string\n    ConditionalExpression:\n      description: \u003e-\n        Selects one of two expressions, `Alternate` or `Consequent`, depending\n        on a third boolean expression, `Test`\n      properties:\n        alternate:\n          $ref: '#/components/schemas/Expression'\n        consequent:\n          $ref: '#/components/schemas/Expression'\n        test:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    ConstantVariableProperties:\n      properties:\n        type:\n          enum:\n            - constant\n          type: string\n        values:\n          items:\n            type: string\n          type: array\n    CreateCell:\n      properties:\n        h:\n          format: int32\n          type: integer\n        name:\n          type: string\n        usingView:\n          description: Makes a copy of the provided view.\n          type: string\n        w:\n          format: int32\n          type: integer\n        x:\n          format: int32\n          type: integer\n        'y':\n          format: int32\n          type: integer\n      type: object\n    CreateDashboardRequest:\n      properties:\n        description:\n          description: The user-facing description of the dashboard.\n          type: string\n        name:\n          description: The user-facing name of the dashboard.\n          type: string\n        orgID:\n          description: The ID of the organization that owns the dashboard.\n          type: string\n      required:\n        - orgID\n        - name\n    CustomCheck:\n      allOf:\n        - $ref: '#/components/schemas/CheckBase'\n        - properties:\n            type:\n              enum:\n                - custom\n              type: string\n          required:\n            - type\n          type: object\n    DBRP:\n      properties:\n        bucketID:\n          description: The ID of the bucket used as the target for the translation.\n          type: string\n        database:\n          description: InfluxDB v1 database\n          type: string\n        default:\n          description: \u003e-\n            Mapping represents the default retention policy for the database\n            specified.\n          type: boolean\n        id:\n          description: The ID of the DBRP mapping.\n          readOnly: true\n          type: string\n        links:\n          $ref: '#/components/schemas/Links'\n        orgID:\n          description: The ID of the organization.\n          type: string\n        retention_policy:\n          description: InfluxDB v1 retention policy\n          type: string\n        virtual:\n          description: \u003e-\n            Indicates an autogenerated, virtual mapping based on the bucket\n            name. Currently only available in OSS.\n          type: boolean\n      required:\n        - id\n        - orgID\n        - bucketID\n        - database\n        - retention_policy\n        - default\n      type: object\n    DBRPCreate:\n      properties:\n        bucketID:\n          description: The ID of the bucket used as the target for the translation.\n          type: string\n        database:\n          description: InfluxDB v1 database\n          type: string\n        default:\n          description: \u003e-\n            Mapping represents the default retention policy for the database\n            specified.\n          type: boolean\n        org:\n          description: The name of the organization that owns this mapping.\n          type: string\n        orgID:\n          description: The ID of the organization.\n          type: string\n        retention_policy:\n          description: InfluxDB v1 retention policy\n          type: string\n      required:\n        - bucketID\n        - database\n        - retention_policy\n      type: object\n    DBRPGet:\n      properties:\n        content:\n          $ref: '#/components/schemas/DBRP'\n          required: true\n      type: object\n    DBRPUpdate:\n      properties:\n        default:\n          type: boolean\n        retention_policy:\n          description: InfluxDB v1 retention policy\n          type: string\n    DBRPs:\n      properties:\n        content:\n          items:\n            $ref: '#/components/schemas/DBRP'\n          type: array\n    Dashboard:\n      allOf:\n        - $ref: '#/components/schemas/CreateDashboardRequest'\n        - properties:\n            cells:\n              $ref: '#/components/schemas/Cells'\n            id:\n              readOnly: true\n              type: string\n            labels:\n              $ref: '#/components/schemas/Labels'\n            links:\n              example:\n                cells: /api/v2/dashboards/1/cells\n                labels: /api/v2/dashboards/1/labels\n                members: /api/v2/dashboards/1/members\n                org: /api/v2/labels/1\n                owners: /api/v2/dashboards/1/owners\n                self: /api/v2/dashboards/1\n              properties:\n                cells:\n                  $ref: '#/components/schemas/Link'\n                labels:\n                  $ref: '#/components/schemas/Link'\n                members:\n                  $ref: '#/components/schemas/Link'\n                org:\n                  $ref: '#/components/schemas/Link'\n                owners:\n                  $ref: '#/components/schemas/Link'\n                self:\n                  $ref: '#/components/schemas/Link'\n              type: object\n            meta:\n              properties:\n                createdAt:\n                  format: date-time\n                  type: string\n                updatedAt:\n                  format: date-time\n                  type: string\n              type: object\n          type: object\n      type: object\n    DashboardColor:\n      description: Defines an encoding of data value into color space.\n      properties:\n        hex:\n          description: The hex number of the color\n          maxLength: 7\n          minLength: 7\n          type: string\n        id:\n          description: The unique ID of the view color.\n          type: string\n        name:\n          description: The user-facing name of the hex color.\n          type: string\n        type:\n          description: Type is how the color is used.\n          enum:\n            - min\n            - max\n            - threshold\n            - scale\n            - text\n            - background\n          type: string\n        value:\n          description: The data value mapped to this color.\n          format: float\n          type: number\n      required:\n        - id\n        - type\n        - hex\n        - name\n        - value\n      type: object\n    DashboardQuery:\n      properties:\n        builderConfig:\n          $ref: '#/components/schemas/BuilderConfig'\n        editMode:\n          $ref: '#/components/schemas/QueryEditMode'\n        name:\n          type: string\n        text:\n          description: The text of the Flux query.\n          type: string\n      type: object\n    DashboardWithViewProperties:\n      allOf:\n        - $ref: '#/components/schemas/CreateDashboardRequest'\n        - properties:\n            cells:\n              $ref: '#/components/schemas/CellsWithViewProperties'\n            id:\n              readOnly: true\n              type: string\n            labels:\n              $ref: '#/components/schemas/Labels'\n            links:\n              example:\n                cells: /api/v2/dashboards/1/cells\n                labels: /api/v2/dashboards/1/labels\n                members: /api/v2/dashboards/1/members\n                org: /api/v2/labels/1\n                owners: /api/v2/dashboards/1/owners\n                self: /api/v2/dashboards/1\n              properties:\n                cells:\n                  $ref: '#/components/schemas/Link'\n                labels:\n                  $ref: '#/components/schemas/Link'\n                members:\n                  $ref: '#/components/schemas/Link'\n                org:\n                  $ref: '#/components/schemas/Link'\n                owners:\n                  $ref: '#/components/schemas/Link'\n                self:\n                  $ref: '#/components/schemas/Link'\n              type: object\n            meta:\n              properties:\n                createdAt:\n                  format: date-time\n                  type: string\n                updatedAt:\n                  format: date-time\n                  type: string\n              type: object\n          type: object\n      type: object\n    Dashboards:\n      properties:\n        dashboards:\n          items:\n            $ref: '#/components/schemas/Dashboard'\n          type: array\n        links:\n          $ref: '#/components/schemas/Links'\n      type: object\n    DateTimeLiteral:\n      description: \u003e-\n        Represents an instant in time with nanosecond precision in [RFC3339Nano\n        date/time\n        format](/influxdb/cloud/reference/glossary/#rfc3339nano-timestamp).\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          format: date-time\n          type: string\n      type: object\n    DeadmanCheck:\n      allOf:\n        - $ref: '#/components/schemas/CheckBase'\n        - properties:\n            every:\n              description: Check repetition interval.\n              type: string\n            level:\n              $ref: '#/components/schemas/CheckStatusLevel'\n            offset:\n              description: Duration to delay after the schedule, before executing check.\n              type: string\n            reportZero:\n              description: If only zero values reported since time, trigger an alert\n              type: boolean\n            staleTime:\n              description: \u003e-\n                String duration for time that a series is considered stale and\n                should not trigger deadman.\n              type: string\n            statusMessageTemplate:\n              description: The template used to generate and write a status message.\n              type: string\n            tags:\n              description: List of tags to write to each status.\n              items:\n                properties:\n                  key:\n                    type: string\n                  value:\n                    type: string\n                type: object\n              type: array\n            timeSince:\n              description: String duration before deadman triggers.\n              type: string\n            type:\n              enum:\n                - deadman\n              type: string\n          required:\n            - type\n          type: object\n    DecimalPlaces:\n      description: \u003e-\n        Indicates whether decimal places should be enforced, and how many digits\n        it should show.\n      properties:\n        digits:\n          description: The number of digits after decimal to display\n          format: int32\n          type: integer\n        isEnforced:\n          description: Indicates whether decimal point setting should be enforced\n          type: boolean\n      type: object\n    DeletePredicateRequest:\n      description: The delete predicate request.\n      properties:\n        predicate:\n          description: \u003e\n            An expression in [delete predicate\n            syntax](https://docs.influxdata.com/influxdb/cloud/reference/syntax/delete-predicate/).\n          example: tag1=\"value1\" and (tag2=\"value2\" and tag3!=\"value3\")\n          type: string\n        start:\n          description: \u003e\n            A timestamp ([RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp)).\n\n            The earliest time to delete from.\n          format: date-time\n          type: string\n        stop:\n          description: \u003e\n            A timestamp ([RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp)).\n\n            The latest time to delete from.\n          format: date-time\n          type: string\n      required:\n        - start\n        - stop\n      type: object\n    Dialect:\n      description: \u003e\n        Options for tabular data output.\n\n        Default output is [annotated\n        CSV](/influxdb/cloud/reference/syntax/annotated-csv/#csv-response-format)\n        with headers.\n\n\n        For more information about tabular data **dialect**,\n\n        see [W3 metadata vocabulary for tabular\n        data](https://www.w3.org/TR/2015/REC-tabular-metadata-20151217/#dialect-descriptions).\n      properties:\n        annotations:\n          description: \u003e\n            Annotation rows to include in the results.\n\n            An _annotation_ is metadata associated with an object (column) in\n            the data model.\n\n\n            #### Related guides\n\n\n            - See [Annotated CSV\n            annotations](https://docs.influxdata.com/influxdb/cloud/reference/syntax/annotated-csv/#annotations)\n            for examples and more information.\n\n\n            For more information about **annotations** in tabular data,\n\n            see [W3 metadata vocabulary for tabular\n            data](https://www.w3.org/TR/2015/REC-tabular-data-model-20151217/#columns).\n          items:\n            enum:\n              - group\n              - datatype\n              - default\n            type: string\n          type: array\n          uniqueItems: true\n        commentPrefix:\n          default: '#'\n          description: \u003e-\n            The character prefixed to comment strings. Default is a number sign\n            (`#`).\n          maxLength: 1\n          minLength: 0\n          type: string\n        dateTimeFormat:\n          default: RFC3339\n          description: \u003e\n            The format for timestamps in results.\n\n            Default is [`RFC3339` date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp).\n\n            To include nanoseconds in timestamps, use `RFC3339Nano`.\n\n\n            #### Example formatted date/time values\n\n\n            | Format      | Value                       |\n\n            |:------------|:----------------------------|\n\n            | `RFC3339`    | `\"2006-01-02T15:04:05Z07:00\"` |\n\n            | `RFC3339Nano` | `\"2006-01-02T15:04:05.999999999Z07:00\"` |\n          enum:\n            - RFC3339\n            - RFC3339Nano\n          type: string\n        delimiter:\n          default: ','\n          description: The separator used between cells. Default is a comma (`,`).\n          maxLength: 1\n          minLength: 1\n          type: string\n        header:\n          default: true\n          description: If true, the results contain a header row.\n          type: boolean\n      type: object\n    DictExpression:\n      description: Used to create and directly specify the elements of a dictionary\n      properties:\n        elements:\n          description: Elements of the dictionary\n          items:\n            $ref: '#/components/schemas/DictItem'\n          type: array\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    DictItem:\n      description: A key-value pair in a dictionary.\n      properties:\n        key:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n        val:\n          $ref: '#/components/schemas/Expression'\n      type: object\n    Duration:\n      description: \u003e-\n        A pair consisting of length of time and the unit of time measured. It is\n        the atomic unit from which all duration literals are composed.\n      properties:\n        magnitude:\n          type: integer\n        type:\n          $ref: '#/components/schemas/NodeType'\n        unit:\n          type: string\n      type: object\n    DurationLiteral:\n      description: \u003e-\n        Represents the elapsed time between two instants as an int64 nanosecond\n        count with syntax of golang's time.Duration\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        values:\n          description: Duration values\n          items:\n            $ref: '#/components/schemas/Duration'\n          type: array\n      type: object\n    Error:\n      properties:\n        code:\n          $ref: '#/components/schemas/ErrorCode'\n          description: code is the machine-readable error code.\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - unprocessable entity\n            - empty value\n            - unavailable\n            - forbidden\n            - too many requests\n            - unauthorized\n            - method not allowed\n            - request too large\n            - unsupported media type\n          readOnly: true\n          type: string\n        err:\n          description: \u003e-\n            Stack of errors that occurred during processing of the request.\n            Useful for debugging.\n          readOnly: true\n          type: string\n        message:\n          description: Human-readable message.\n          readOnly: true\n          type: string\n        op:\n          description: \u003e-\n            Describes the logical code operation when the error occurred. Useful\n            for debugging.\n          readOnly: true\n          type: string\n      required:\n        - code\n    ErrorCode:\n      description: code is the machine-readable error code.\n      enum:\n        - internal error\n        - not found\n        - conflict\n        - invalid\n        - unprocessable entity\n        - empty value\n        - unavailable\n        - forbidden\n        - too many requests\n        - unauthorized\n        - method not allowed\n        - request too large\n        - unsupported media type\n      readOnly: true\n      type: string\n    Expression:\n      oneOf:\n        - $ref: '#/components/schemas/ArrayExpression'\n        - $ref: '#/components/schemas/DictExpression'\n        - $ref: '#/components/schemas/FunctionExpression'\n        - $ref: '#/components/schemas/BinaryExpression'\n        - $ref: '#/components/schemas/CallExpression'\n        - $ref: '#/components/schemas/ConditionalExpression'\n        - $ref: '#/components/schemas/LogicalExpression'\n        - $ref: '#/components/schemas/MemberExpression'\n        - $ref: '#/components/schemas/IndexExpression'\n        - $ref: '#/components/schemas/ObjectExpression'\n        - $ref: '#/components/schemas/ParenExpression'\n        - $ref: '#/components/schemas/PipeExpression'\n        - $ref: '#/components/schemas/UnaryExpression'\n        - $ref: '#/components/schemas/BooleanLiteral'\n        - $ref: '#/components/schemas/DateTimeLiteral'\n        - $ref: '#/components/schemas/DurationLiteral'\n        - $ref: '#/components/schemas/FloatLiteral'\n        - $ref: '#/components/schemas/IntegerLiteral'\n        - $ref: '#/components/schemas/PipeLiteral'\n        - $ref: '#/components/schemas/RegexpLiteral'\n        - $ref: '#/components/schemas/StringLiteral'\n        - $ref: '#/components/schemas/UnsignedIntegerLiteral'\n        - $ref: '#/components/schemas/Identifier'\n    ExpressionStatement:\n      description: \u003e-\n        May consist of an expression that doesn't return a value and is executed\n        solely for its side-effects\n      properties:\n        expression:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Field:\n      properties:\n        alias:\n          description: \u003e-\n            Alias overrides the field name in the returned response.  Applies\n            only if type is `func`\n          type: string\n        args:\n          description: Args are the arguments to the function\n          items:\n            $ref: '#/components/schemas/Field'\n          type: array\n        type:\n          description: \u003e-\n            `type` describes the field type. `func` is a function. `field` is a\n            field reference.\n          enum:\n            - func\n            - field\n            - integer\n            - number\n            - regex\n            - wildcard\n          type: string\n        value:\n          description: \u003e-\n            value is the value of the field.  Meaning of the value is implied by\n            the `type` key\n          type: string\n      type: object\n    File:\n      description: Represents a source from a single file\n      properties:\n        body:\n          description: List of Flux statements\n          items:\n            $ref: '#/components/schemas/Statement'\n          type: array\n        imports:\n          description: A list of package imports\n          items:\n            $ref: '#/components/schemas/ImportDeclaration'\n          type: array\n        name:\n          description: The name of the file.\n          type: string\n        package:\n          $ref: '#/components/schemas/PackageClause'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Flags:\n      additionalProperties: true\n      type: object\n    FloatLiteral:\n      description: \u003e-\n        Represents floating point numbers according to the double\n        representations defined by the IEEE-754-1985\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: number\n      type: object\n    FluxResponse:\n      description: Rendered flux that backs the check or notification.\n      properties:\n        flux:\n          type: string\n    FluxSuggestion:\n      properties:\n        name:\n          type: string\n        params:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    FluxSuggestions:\n      properties:\n        funcs:\n          items:\n            $ref: '#/components/schemas/FluxSuggestion'\n          type: array\n      type: object\n    FunctionExpression:\n      description: Function expression\n      properties:\n        body:\n          $ref: '#/components/schemas/Node'\n        params:\n          description: Function parameters\n          items:\n            $ref: '#/components/schemas/Property'\n          type: array\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    GaugeViewProperties:\n      properties:\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        decimalPlaces:\n          $ref: '#/components/schemas/DecimalPlaces'\n        note:\n          type: string\n        prefix:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        suffix:\n          type: string\n        tickPrefix:\n          type: string\n        tickSuffix:\n          type: string\n        type:\n          enum:\n            - gauge\n          type: string\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - prefix\n        - tickPrefix\n        - suffix\n        - tickSuffix\n        - decimalPlaces\n      type: object\n    GeoCircleViewLayer:\n      allOf:\n        - $ref: '#/components/schemas/GeoViewLayerProperties'\n        - properties:\n            colorDimension:\n              $ref: '#/components/schemas/Axis'\n            colorField:\n              description: Circle color field\n              type: string\n            colors:\n              description: Colors define color encoding of data into a visualization\n              items:\n                $ref: '#/components/schemas/DashboardColor'\n              type: array\n            interpolateColors:\n              description: Interpolate circle color based on displayed value\n              type: boolean\n            radius:\n              description: Maximum radius size in pixels\n              type: integer\n            radiusDimension:\n              $ref: '#/components/schemas/Axis'\n            radiusField:\n              description: Radius field\n              type: string\n          required:\n            - radiusField\n            - radiusDimension\n            - colorField\n            - colorDimension\n            - colors\n          type: object\n    GeoHeatMapViewLayer:\n      allOf:\n        - $ref: '#/components/schemas/GeoViewLayerProperties'\n        - properties:\n            blur:\n              description: Blur for heatmap points\n              type: integer\n            colors:\n              description: Colors define color encoding of data into a visualization\n              items:\n                $ref: '#/components/schemas/DashboardColor'\n              type: array\n            intensityDimension:\n              $ref: '#/components/schemas/Axis'\n            intensityField:\n              description: Intensity field\n              type: string\n            radius:\n              description: Radius size in pixels\n              type: integer\n          required:\n            - intensityField\n            - intensityDimension\n            - radius\n            - blur\n            - colors\n          type: object\n    GeoPointMapViewLayer:\n      allOf:\n        - $ref: '#/components/schemas/GeoViewLayerProperties'\n        - properties:\n            colorDimension:\n              $ref: '#/components/schemas/Axis'\n            colorField:\n              description: Marker color field\n              type: string\n            colors:\n              description: Colors define color encoding of data into a visualization\n              items:\n                $ref: '#/components/schemas/DashboardColor'\n              type: array\n            isClustered:\n              description: Cluster close markers together\n              type: boolean\n            tooltipColumns:\n              description: An array for which columns to display in tooltip\n              items:\n                type: string\n              type: array\n          required:\n            - colorField\n            - colorDimension\n            - colors\n          type: object\n    GeoTrackMapViewLayer:\n      allOf:\n        - $ref: '#/components/schemas/GeoViewLayerProperties'\n        - required:\n            - trackWidth\n            - speed\n            - randomColors\n            - trackPointVisualization\n          type: object\n      properties:\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        randomColors:\n          description: Assign different colors to different tracks\n          type: boolean\n        speed:\n          description: Speed of the track animation\n          type: integer\n        trackWidth:\n          description: Width of the track\n          type: integer\n    GeoViewLayer:\n      oneOf:\n        - $ref: '#/components/schemas/GeoCircleViewLayer'\n        - $ref: '#/components/schemas/GeoHeatMapViewLayer'\n        - $ref: '#/components/schemas/GeoPointMapViewLayer'\n        - $ref: '#/components/schemas/GeoTrackMapViewLayer'\n      type: object\n    GeoViewLayerProperties:\n      properties:\n        type:\n          enum:\n            - heatmap\n            - circleMap\n            - pointMap\n            - trackMap\n          type: string\n      required:\n        - type\n      type: object\n    GeoViewProperties:\n      properties:\n        allowPanAndZoom:\n          default: true\n          description: If true, map zoom and pan controls are enabled on the dashboard view\n          type: boolean\n        center:\n          description: Coordinates of the center of the map\n          properties:\n            lat:\n              description: Latitude of the center of the map\n              format: double\n              type: number\n            lon:\n              description: Longitude of the center of the map\n              format: double\n              type: number\n          required:\n            - lat\n            - lon\n          type: object\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        detectCoordinateFields:\n          default: true\n          description: \u003e-\n            If true, search results get automatically regroupped so that lon,lat\n            and value are treated as columns\n          type: boolean\n        latLonColumns:\n          $ref: '#/components/schemas/LatLonColumns'\n        layers:\n          description: List of individual layers shown in the map\n          items:\n            $ref: '#/components/schemas/GeoViewLayer'\n          type: array\n        mapStyle:\n          description: Define map type - regular, satellite etc.\n          type: string\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        s2Column:\n          description: String to define the column\n          type: string\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        type:\n          enum:\n            - geo\n          type: string\n        useS2CellID:\n          description: If true, S2 column is used to calculate lat/lon\n          type: boolean\n        zoom:\n          description: Zoom level used for initial display of the map\n          format: double\n          maximum: 28\n          minimum: 1\n          type: number\n      required:\n        - type\n        - shape\n        - queries\n        - note\n        - showNoteWhenEmpty\n        - center\n        - zoom\n        - allowPanAndZoom\n        - detectCoordinateFields\n        - layers\n      type: object\n    GreaterThreshold:\n      allOf:\n        - $ref: '#/components/schemas/ThresholdBase'\n        - properties:\n            type:\n              enum:\n                - greater\n              type: string\n            value:\n              format: float\n              type: number\n          required:\n            - type\n            - value\n          type: object\n    HTTPNotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointBase'\n        - properties:\n            authMethod:\n              enum:\n                - none\n                - basic\n                - bearer\n              type: string\n            contentTemplate:\n              type: string\n            headers:\n              additionalProperties:\n                type: string\n              description: Customized headers.\n              type: object\n            method:\n              enum:\n                - POST\n                - GET\n                - PUT\n              type: string\n            password:\n              type: string\n            token:\n              type: string\n            url:\n              type: string\n            username:\n              type: string\n          required:\n            - url\n            - authMethod\n            - method\n          type: object\n      type: object\n    HTTPNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleBase'\n        - $ref: '#/components/schemas/HTTPNotificationRuleBase'\n    HTTPNotificationRuleBase:\n      properties:\n        type:\n          enum:\n            - http\n          type: string\n        url:\n          type: string\n      required:\n        - type\n      type: object\n    HealthCheck:\n      properties:\n        checks:\n          items:\n            $ref: '#/components/schemas/HealthCheck'\n          type: array\n        commit:\n          type: string\n        message:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n            - pass\n            - fail\n          type: string\n        version:\n          type: string\n      required:\n        - name\n        - status\n      type: object\n    HeatmapViewProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        binSize:\n          type: number\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            type: string\n          type: array\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        generateYAxisTicks:\n          items:\n            type: string\n          type: array\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - heatmap\n          type: string\n        xAxisLabel:\n          type: string\n        xColumn:\n          type: string\n        xDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        xPrefix:\n          type: string\n        xSuffix:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yAxisLabel:\n          type: string\n        yColumn:\n          type: string\n        yDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        yPrefix:\n          type: string\n        ySuffix:\n          type: string\n        yTickStart:\n          format: float\n          type: number\n        yTickStep:\n          format: float\n          type: number\n        yTotalTicks:\n          type: integer\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - xColumn\n        - yColumn\n        - xDomain\n        - yDomain\n        - xAxisLabel\n        - yAxisLabel\n        - xPrefix\n        - yPrefix\n        - xSuffix\n        - ySuffix\n        - binSize\n      type: object\n    HistogramViewProperties:\n      properties:\n        binCount:\n          type: integer\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        fillColumns:\n          items:\n            type: string\n          type: array\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        position:\n          enum:\n            - overlaid\n            - stacked\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        type:\n          enum:\n            - histogram\n          type: string\n        xAxisLabel:\n          type: string\n        xColumn:\n          type: string\n        xDomain:\n          items:\n            format: float\n            type: number\n          type: array\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - xColumn\n        - fillColumns\n        - xDomain\n        - xAxisLabel\n        - position\n        - binCount\n      type: object\n    Identifier:\n      description: A valid Flux identifier\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    ImportDeclaration:\n      description: Declares a package import\n      properties:\n        as:\n          $ref: '#/components/schemas/Identifier'\n        path:\n          $ref: '#/components/schemas/StringLiteral'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    IndexExpression:\n      description: Represents indexing into an array\n      properties:\n        array:\n          $ref: '#/components/schemas/Expression'\n        index:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    InfluxqlCsvResponse:\n      description: CSV Response to InfluxQL Query\n      example: \u003e\n        name,tags,time,test_field,test_tag\n        test_measurement,,1603740794286107366,1,tag_value\n        test_measurement,,1603740870053205649,2,tag_value\n        test_measurement,,1603741221085428881,3,tag_value\n      type: string\n    InfluxqlJsonResponse:\n      description: JSON Response to InfluxQL Query\n      properties:\n        results:\n          items:\n            properties:\n              error:\n                type: string\n              series:\n                items:\n                  properties:\n                    columns:\n                      items:\n                        type: string\n                      type: array\n                    name:\n                      type: string\n                    partial:\n                      type: boolean\n                    tags:\n                      additionalProperties:\n                        type: string\n                      type: object\n                    values:\n                      items:\n                        items: {}\n                        type: array\n                      type: array\n                  type: object\n                type: array\n              statement_id:\n                type: integer\n            type: object\n          type: array\n      type: object\n    IntegerLiteral:\n      description: Represents integer numbers\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: string\n      type: object\n    IsOnboarding:\n      properties:\n        allowed:\n          description: |\n            If `true`, the InfluxDB instance hasn't had initial setup;\n            `false` otherwise.\n          type: boolean\n      type: object\n    Label:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        orgID:\n          readOnly: true\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: \u003e\n            Key-value pairs associated with this label.\n\n            To remove a property, send an update with an empty value (`\"\"`) for\n            the key.\n          example:\n            color: ffb3b3\n            description: this is a description\n          type: object\n      type: object\n    LabelCreateRequest:\n      properties:\n        name:\n          type: string\n        orgID:\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: \u003e\n            Key-value pairs associated with this label.\n\n\n            To remove a property, send an update with an empty value (`\"\"`) for\n            the key.\n          example:\n            color: ffb3b3\n            description: this is a description\n          type: object\n      required:\n        - orgID\n        - name\n      type: object\n    LabelMapping:\n      properties:\n        labelID:\n          description: |\n            Label ID.\n            The ID of the label to attach.\n          type: string\n      type: object\n    LabelResponse:\n      properties:\n        label:\n          $ref: '#/components/schemas/Label'\n        links:\n          $ref: '#/components/schemas/Links'\n      type: object\n    LabelUpdate:\n      properties:\n        name:\n          type: string\n        properties:\n          additionalProperties:\n            description: \u003e\n              Key-value pairs associated with this label.\n\n\n              To remove a property, send an update with an empty value (`\"\"`)\n              for the key.\n            type: string\n          example:\n            color: ffb3b3\n            description: this is a description\n          type: object\n      type: object\n    Labels:\n      items:\n        $ref: '#/components/schemas/Label'\n      type: array\n    LabelsResponse:\n      properties:\n        labels:\n          $ref: '#/components/schemas/Labels'\n        links:\n          $ref: '#/components/schemas/Links'\n      type: object\n    LanguageRequest:\n      description: Flux query to be analyzed.\n      properties:\n        query:\n          description: |\n            The Flux query script to be analyzed.\n          type: string\n      required:\n        - query\n      type: object\n    LatLonColumn:\n      description: Object type for key and column definitions\n      properties:\n        column:\n          description: Column to look up Lat/Lon\n          type: string\n        key:\n          description: Key to determine whether the column is tag/field\n          type: string\n      required:\n        - key\n        - column\n      type: object\n    LatLonColumns:\n      description: Object type to define lat/lon columns\n      properties:\n        lat:\n          $ref: '#/components/schemas/LatLonColumn'\n        lon:\n          $ref: '#/components/schemas/LatLonColumn'\n      required:\n        - lat\n        - lon\n      type: object\n    LegacyAuthorizationPostRequest:\n      allOf:\n        - $ref: '#/components/schemas/AuthorizationUpdateRequest'\n        - properties:\n            orgID:\n              description: The ID of the organization that the authorization is scoped to.\n              type: string\n            permissions:\n              description: \u003e\n                A list of permissions that provide `read` and `write` access to\n                organization resources.\n\n                An authorization must contain at least one permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n              minItems: 1\n              type: array\n            token:\n              description: A name that you provide for the authorization.\n              type: string\n            userID:\n              description: The ID of the user that the authorization is scoped to.\n              type: string\n          type: object\n      required:\n        - orgID\n        - permissions\n    LesserThreshold:\n      allOf:\n        - $ref: '#/components/schemas/ThresholdBase'\n        - properties:\n            type:\n              enum:\n                - lesser\n              type: string\n            value:\n              format: float\n              type: number\n          required:\n            - type\n            - value\n          type: object\n    Limit:\n      description: These are org limits similar to those configured in/by quartz.\n      properties:\n        bucket:\n          properties:\n            maxBuckets:\n              type: integer\n            maxRetentionDuration:\n              description: Max bucket retention duration in nanoseconds. 0 is unlimited.\n              type: integer\n          required:\n            - maxBuckets\n            - maxRetentionDuration\n          type: object\n        check:\n          properties:\n            maxChecks:\n              type: integer\n          required:\n            - maxChecks\n          type: object\n        dashboard:\n          properties:\n            maxDashboards:\n              type: integer\n          required:\n            - maxDashboards\n          type: object\n        features:\n          properties:\n            allowDelete:\n              description: allow delete predicate endpoint\n              type: boolean\n          type: object\n        notificationEndpoint:\n          properties:\n            blockedNotificationEndpoints:\n              description: comma separated list of notification endpoints\n              example: http,pagerduty\n              type: string\n          required:\n            - blockNotificationEndpoints\n          type: object\n        notificationRule:\n          properties:\n            blockedNotificationRules:\n              description: comma separated list of notification rules\n              example: http,pagerduty\n              type: string\n            maxNotifications:\n              type: integer\n          required:\n            - maxNotifications\n            - blockNotificationRules\n          type: object\n        orgID:\n          type: string\n        rate:\n          properties:\n            cardinality:\n              description: Allowed organization total cardinality. 0 is unlimited.\n              type: integer\n            concurrentDeleteRequests:\n              description: Allowed organization concurrent outstanding delete requests.\n              type: integer\n            concurrentReadRequests:\n              description: Allowed concurrent queries. 0 is unlimited.\n              type: integer\n            concurrentWriteRequests:\n              description: Allowed concurrent writes. 0 is unlimited.\n              type: integer\n            deleteRequestsPerSecond:\n              description: Allowed organization delete request rate.\n              type: integer\n            queryTime:\n              description: Query Time in nanoseconds\n              type: integer\n            readKBs:\n              description: Query limit in kb/sec. 0 is unlimited.\n              type: integer\n            writeKBs:\n              description: Write limit in kb/sec. 0 is unlimited.\n              type: integer\n          required:\n            - readKBs\n            - queryTime\n            - concurrentReadRequests\n            - writeKBs\n            - concurrentWriteRequests\n            - cardinality\n          type: object\n        task:\n          properties:\n            maxTasks:\n              type: integer\n          required:\n            - maxTasks\n          type: object\n      required:\n        - rate\n        - bucket\n        - task\n        - dashboard\n        - check\n        - notificationRule\n        - notificationEndpoint\n      type: object\n    LinePlusSingleStatProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        axes:\n          $ref: '#/components/schemas/Axes'\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        decimalPlaces:\n          $ref: '#/components/schemas/DecimalPlaces'\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        generateYAxisTicks:\n          items:\n            type: string\n          type: array\n        hoverDimension:\n          enum:\n            - auto\n            - x\n            - 'y'\n            - xy\n          type: string\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        position:\n          enum:\n            - overlaid\n            - stacked\n          type: string\n        prefix:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shadeBelow:\n          type: boolean\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        staticLegend:\n          $ref: '#/components/schemas/StaticLegend'\n        suffix:\n          type: string\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - line-plus-single-stat\n          type: string\n        xColumn:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yColumn:\n          type: string\n        yTickStart:\n          format: float\n          type: number\n        yTickStep:\n          format: float\n          type: number\n        yTotalTicks:\n          type: integer\n      required:\n        - type\n        - queries\n        - shape\n        - axes\n        - colors\n        - note\n        - showNoteWhenEmpty\n        - prefix\n        - suffix\n        - decimalPlaces\n        - position\n      type: object\n    LineProtocolError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          enum:\n            - internal error\n            - not found\n            - conflict\n            - invalid\n            - empty value\n            - unavailable\n          readOnly: true\n          type: string\n        err:\n          description: \u003e-\n            Stack of errors that occurred during processing of the request.\n            Useful for debugging.\n          readOnly: true\n          type: string\n        line:\n          description: First line in the request body that contains malformed data.\n          format: int32\n          readOnly: true\n          type: integer\n        message:\n          description: Human-readable message.\n          readOnly: true\n          type: string\n        op:\n          description: \u003e-\n            Describes the logical code operation when the error occurred. Useful\n            for debugging.\n          readOnly: true\n          type: string\n      required:\n        - code\n    LineProtocolLengthError:\n      properties:\n        code:\n          description: Code is the machine-readable error code.\n          enum:\n            - invalid\n          readOnly: true\n          type: string\n        message:\n          description: Human-readable message.\n          readOnly: true\n          type: string\n      required:\n        - code\n        - message\n    Link:\n      description: URI of resource.\n      format: uri\n      readOnly: true\n      type: string\n    Links:\n      description: |\n        URI pointers for additional paged results.\n      properties:\n        next:\n          $ref: '#/components/schemas/Link'\n        prev:\n          $ref: '#/components/schemas/Link'\n        self:\n          $ref: '#/components/schemas/Link'\n      required:\n        - self\n      type: object\n    LogEvent:\n      properties:\n        message:\n          description: A description of the event that occurred.\n          example: Halt and catch fire\n          readOnly: true\n          type: string\n        runID:\n          description: The ID of the task run that generated the event.\n          readOnly: true\n          type: string\n        time:\n          description: \u003e-\n            The time ([RFC3339Nano date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339nano-timestamp))\n            that the event occurred.\n          example: 2006-01-02T15:04:05.999999999Z07:00\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    LogicalExpression:\n      description: \u003e-\n        Represents the rule conditions that collectively evaluate to either true\n        or false\n      properties:\n        left:\n          $ref: '#/components/schemas/Expression'\n        operator:\n          type: string\n        right:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Logs:\n      properties:\n        events:\n          items:\n            $ref: '#/components/schemas/LogEvent'\n          readOnly: true\n          type: array\n      type: object\n    MapVariableProperties:\n      properties:\n        type:\n          enum:\n            - map\n          type: string\n        values:\n          additionalProperties:\n            type: string\n          type: object\n    MarkdownViewProperties:\n      properties:\n        note:\n          type: string\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        type:\n          enum:\n            - markdown\n          type: string\n      required:\n        - type\n        - shape\n        - note\n      type: object\n    MeasurementSchema:\n      description: Definition of a measurement schema.\n      example:\n        bucketID: ba3c5e7f9b0a0010\n        columns:\n          - format: unix timestamp\n            name: time\n            type: integer\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - dataType: float\n            name: usage_user\n            type: field\n          - dataType: float\n            name: usage_user\n            type: field\n        createdAt: '2021-01-21T00:48:40.993Z'\n        id: 1a3c5e7f9b0a8642\n        name: cpu\n        orgID: 0a3c5e7f9b0a0001\n        updatedAt: '2021-01-21T00:48:40.993Z'\n      properties:\n        bucketID:\n          description: The ID of the bucket that the measurement schema is associated with.\n          type: string\n        columns:\n          description: Ordered collection of column definitions.\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n          type: array\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        name:\n          nullable: false\n          type: string\n        orgID:\n          description: The ID of the organization.\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - id\n        - name\n        - columns\n        - createdAt\n        - updatedAt\n      type: object\n    MeasurementSchemaColumn:\n      description: Definition of a measurement schema column.\n      example:\n        format: unix timestamp\n        name: time\n        type: integer\n      properties:\n        dataType:\n          $ref: '#/components/schemas/ColumnDataType'\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/ColumnSemanticType'\n      required:\n        - name\n        - type\n      type: object\n    MeasurementSchemaCreateRequest:\n      description: Create a new measurement schema.\n      example:\n        columns:\n          - format: unix timestamp\n            name: time\n            type: integer\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - dataType: float\n            name: usage_user\n            type: field\n          - dataType: float\n            name: usage_user\n            type: field\n        name: cpu\n      properties:\n        columns:\n          description: Ordered collection of column definitions.\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n          type: array\n        name:\n          type: string\n      required:\n        - name\n        - columns\n      type: object\n    MeasurementSchemaList:\n      description: A list of measurement schemas returning summary information\n      example:\n        measurementSchemas:\n          - bucketID: ba3c5e7f9b0a0010\n            createdAt: '2021-01-21T00:48:40.993Z'\n            id: 1a3c5e7f9b0a8642\n            name: cpu\n            orgID: 0a3c5e7f9b0a0001\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - bucketID: ba3c5e7f9b0a0010\n            createdAt: '2021-01-21T00:48:40.993Z'\n            id: 1a3c5e7f9b0a8643\n            name: memory\n            orgID: 0a3c5e7f9b0a0001\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - bucketID: ba3c5e7f9b0a0010\n            createdAt: '2021-01-21T00:48:40.993Z'\n            id: 1a3c5e7f9b0a8644\n            name: disk\n            orgID: 0a3c5e7f9b0a0001\n            updatedAt: '2021-01-21T00:48:40.993Z'\n      properties:\n        measurementSchemas:\n          items:\n            $ref: '#/components/schemas/MeasurementSchema'\n          type: array\n      required:\n        - measurementSchemas\n      type: object\n    MeasurementSchemaUpdateRequest:\n      description: Update an existing measurement schema\n      example:\n        columns:\n          - format: unix timestamp\n            name: time\n            type: integer\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - dataType: float\n            name: usage_user\n            type: field\n          - dataType: float\n            name: usage_user\n            type: field\n      properties:\n        columns:\n          description: An ordered collection of column definitions\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n          type: array\n      required:\n        - columns\n      type: object\n    MemberAssignment:\n      description: Object property assignment\n      properties:\n        init:\n          $ref: '#/components/schemas/Expression'\n        member:\n          $ref: '#/components/schemas/MemberExpression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    MemberExpression:\n      description: Represents accessing a property of an object\n      properties:\n        object:\n          $ref: '#/components/schemas/Expression'\n        property:\n          $ref: '#/components/schemas/PropertyKey'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    MosaicViewProperties:\n      properties:\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            type: string\n          type: array\n        fillColumns:\n          items:\n            type: string\n          type: array\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        hoverDimension:\n          enum:\n            - auto\n            - x\n            - 'y'\n            - xy\n          type: string\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - mosaic\n          type: string\n        xAxisLabel:\n          type: string\n        xColumn:\n          type: string\n        xDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        xPrefix:\n          type: string\n        xSuffix:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yAxisLabel:\n          type: string\n        yDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        yLabelColumnSeparator:\n          type: string\n        yLabelColumns:\n          items:\n            type: string\n          type: array\n        yPrefix:\n          type: string\n        ySeriesColumns:\n          items:\n            type: string\n          type: array\n        ySuffix:\n          type: string\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - xColumn\n        - ySeriesColumns\n        - fillColumns\n        - xDomain\n        - yDomain\n        - xAxisLabel\n        - yAxisLabel\n        - xPrefix\n        - yPrefix\n        - xSuffix\n        - ySuffix\n      type: object\n    Node:\n      oneOf:\n        - $ref: '#/components/schemas/Expression'\n        - $ref: '#/components/schemas/Block'\n    NodeType:\n      description: Type of AST node\n      type: string\n    NotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointDiscriminator'\n    NotificationEndpointBase:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: An optional description of the notification endpoint.\n          type: string\n        id:\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        links:\n          example:\n            labels: /api/v2/notificationEndpoints/1/labels\n            members: /api/v2/notificationEndpoints/1/members\n            owners: /api/v2/notificationEndpoints/1/owners\n            self: /api/v2/notificationEndpoints/1\n          properties:\n            labels:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve labels for this endpoint.\n            members:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve members for this endpoint.\n            owners:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve owners for this endpoint.\n            self:\n              $ref: '#/components/schemas/Link'\n              description: URL for this endpoint.\n          readOnly: true\n          type: object\n        name:\n          type: string\n        orgID:\n          type: string\n        status:\n          default: active\n          description: The status of the endpoint.\n          enum:\n            - active\n            - inactive\n          type: string\n        type:\n          $ref: '#/components/schemas/NotificationEndpointType'\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n        userID:\n          type: string\n      required:\n        - type\n        - name\n      type: object\n    NotificationEndpointDiscriminator:\n      discriminator:\n        mapping:\n          http: '#/components/schemas/HTTPNotificationEndpoint'\n          pagerduty: '#/components/schemas/PagerDutyNotificationEndpoint'\n          slack: '#/components/schemas/SlackNotificationEndpoint'\n          telegram: '#/components/schemas/TelegramNotificationEndpoint'\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/SlackNotificationEndpoint'\n        - $ref: '#/components/schemas/PagerDutyNotificationEndpoint'\n        - $ref: '#/components/schemas/HTTPNotificationEndpoint'\n        - $ref: '#/components/schemas/TelegramNotificationEndpoint'\n    NotificationEndpointType:\n      enum:\n        - slack\n        - pagerduty\n        - http\n        - telegram\n      type: string\n    NotificationEndpointUpdate:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n            - active\n            - inactive\n          type: string\n      type: object\n    NotificationEndpoints:\n      properties:\n        links:\n          $ref: '#/components/schemas/Links'\n        notificationEndpoints:\n          items:\n            $ref: '#/components/schemas/NotificationEndpoint'\n          type: array\n    NotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleDiscriminator'\n    NotificationRuleBase:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: An optional description of the notification rule.\n          type: string\n        endpointID:\n          type: string\n        every:\n          description: The notification repetition interval.\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        lastRunError:\n          readOnly: true\n          type: string\n        lastRunStatus:\n          enum:\n            - failed\n            - success\n            - canceled\n          readOnly: true\n          type: string\n        latestCompleted:\n          description: \u003e-\n            A timestamp ([RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp))\n            of the latest scheduled and completed run.\n          format: date-time\n          readOnly: true\n          type: string\n        limit:\n          description: \u003e-\n            Don't notify me more than \u003climit\u003e times every \u003climitEvery\u003e seconds.\n            If set, limitEvery cannot be empty.\n          type: integer\n        limitEvery:\n          description: \u003e-\n            Don't notify me more than \u003climit\u003e times every \u003climitEvery\u003e seconds.\n            If set, limit cannot be empty.\n          type: integer\n        links:\n          example:\n            labels: /api/v2/notificationRules/1/labels\n            members: /api/v2/notificationRules/1/members\n            owners: /api/v2/notificationRules/1/owners\n            query: /api/v2/notificationRules/1/query\n            self: /api/v2/notificationRules/1\n          properties:\n            labels:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve labels for this notification rule.\n            members:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve members for this notification rule.\n            owners:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve owners for this notification rule.\n            query:\n              $ref: '#/components/schemas/Link'\n              description: URL to retrieve flux script for this notification rule.\n            self:\n              $ref: '#/components/schemas/Link'\n              description: URL for this endpoint.\n          readOnly: true\n          type: object\n        name:\n          description: Human-readable name describing the notification rule.\n          type: string\n        offset:\n          description: Duration to delay after the schedule, before executing check.\n          type: string\n        orgID:\n          description: The ID of the organization that owns this notification rule.\n          type: string\n        ownerID:\n          description: The ID of creator used to create this notification rule.\n          readOnly: true\n          type: string\n        runbookLink:\n          type: string\n        sleepUntil:\n          type: string\n        status:\n          $ref: '#/components/schemas/TaskStatusType'\n        statusRules:\n          description: List of status rules the notification rule attempts to match.\n          items:\n            $ref: '#/components/schemas/StatusRule'\n          minItems: 1\n          type: array\n        tagRules:\n          description: List of tag rules the notification rule attempts to match.\n          items:\n            $ref: '#/components/schemas/TagRule'\n          type: array\n        taskID:\n          description: The ID of the task associated with this notification rule.\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - orgID\n        - status\n        - name\n        - statusRules\n        - endpointID\n      type: object\n    NotificationRuleDiscriminator:\n      discriminator:\n        mapping:\n          http: '#/components/schemas/HTTPNotificationRule'\n          pagerduty: '#/components/schemas/PagerDutyNotificationRule'\n          slack: '#/components/schemas/SlackNotificationRule'\n          smtp: '#/components/schemas/SMTPNotificationRule'\n          telegram: '#/components/schemas/TelegramNotificationRule'\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/SlackNotificationRule'\n        - $ref: '#/components/schemas/SMTPNotificationRule'\n        - $ref: '#/components/schemas/PagerDutyNotificationRule'\n        - $ref: '#/components/schemas/HTTPNotificationRule'\n        - $ref: '#/components/schemas/TelegramNotificationRule'\n    NotificationRuleUpdate:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n            - active\n            - inactive\n          type: string\n      type: object\n    NotificationRules:\n      properties:\n        links:\n          $ref: '#/components/schemas/Links'\n        notificationRules:\n          items:\n            $ref: '#/components/schemas/NotificationRule'\n          type: array\n    ObjectExpression:\n      description: Allows the declaration of an anonymous object within a declaration\n      properties:\n        properties:\n          description: Object properties\n          items:\n            $ref: '#/components/schemas/Property'\n          type: array\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    OnboardingRequest:\n      properties:\n        bucket:\n          type: string\n        limit:\n          $ref: '#/components/schemas/Limit'\n        org:\n          type: string\n        password:\n          type: string\n        retentionPeriodHrs:\n          deprecated: true\n          type: integer\n        retentionPeriodSeconds:\n          type: integer\n        username:\n          type: string\n      required:\n        - username\n        - org\n        - bucket\n      type: object\n    OnboardingResponse:\n      properties:\n        auth:\n          $ref: '#/components/schemas/Authorization'\n        bucket:\n          $ref: '#/components/schemas/Bucket'\n        org:\n          $ref: '#/components/schemas/Organization'\n        user:\n          $ref: '#/components/schemas/UserResponse'\n      type: object\n    OptionStatement:\n      description: A single variable declaration\n      properties:\n        assignment:\n          oneOf:\n            - $ref: '#/components/schemas/VariableAssignment'\n            - $ref: '#/components/schemas/MemberAssignment'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Organization:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        links:\n          example:\n            buckets: /api/v2/buckets?org=myorg\n            dashboards: /api/v2/dashboards?org=myorg\n            labels: /api/v2/orgs/1/labels\n            members: /api/v2/orgs/1/members\n            owners: /api/v2/orgs/1/owners\n            secrets: /api/v2/orgs/1/secrets\n            self: /api/v2/orgs/1\n            tasks: /api/v2/tasks?org=myorg\n          properties:\n            buckets:\n              $ref: '#/components/schemas/Link'\n            dashboards:\n              $ref: '#/components/schemas/Link'\n            labels:\n              $ref: '#/components/schemas/Link'\n            members:\n              $ref: '#/components/schemas/Link'\n            owners:\n              $ref: '#/components/schemas/Link'\n            secrets:\n              $ref: '#/components/schemas/Link'\n            self:\n              $ref: '#/components/schemas/Link'\n            tasks:\n              $ref: '#/components/schemas/Link'\n          readOnly: true\n          type: object\n        name:\n          type: string\n        status:\n          default: active\n          description: If inactive the organization is inactive.\n          enum:\n            - active\n            - inactive\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - name\n    Organizations:\n      properties:\n        links:\n          $ref: '#/components/schemas/Links'\n        orgs:\n          items:\n            $ref: '#/components/schemas/Organization'\n          type: array\n      type: object\n    Package:\n      description: Represents a complete package source tree.\n      properties:\n        files:\n          description: Package files\n          items:\n            $ref: '#/components/schemas/File'\n          type: array\n        package:\n          description: Package name\n          type: string\n        path:\n          description: Package import path\n          type: string\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    PackageClause:\n      description: Defines a package identifier\n      properties:\n        name:\n          $ref: '#/components/schemas/Identifier'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    PagerDutyNotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointBase'\n        - properties:\n            clientURL:\n              type: string\n            routingKey:\n              type: string\n          required:\n            - routingKey\n          type: object\n      type: object\n    PagerDutyNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleBase'\n        - $ref: '#/components/schemas/PagerDutyNotificationRuleBase'\n    PagerDutyNotificationRuleBase:\n      properties:\n        messageTemplate:\n          type: string\n        type:\n          enum:\n            - pagerduty\n          type: string\n      required:\n        - type\n        - messageTemplate\n      type: object\n    ParenExpression:\n      description: Represents an expression wrapped in parenthesis\n      properties:\n        expression:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    PasswordResetBody:\n      properties:\n        password:\n          type: string\n      required:\n        - password\n    PatchBucketRequest:\n      description: |\n        An object that contains updated bucket properties to apply.\n      properties:\n        description:\n          description: |\n            A description of the bucket.\n          type: string\n        name:\n          description: |\n            The name of the bucket.\n          type: string\n        retentionRules:\n          $ref: '#/components/schemas/PatchRetentionRules'\n      type: object\n    PatchOrganizationRequest:\n      description: |\n        An object that contains updated organization properties to apply.\n      properties:\n        description:\n          description: |\n            The description of the organization.\n          type: string\n        name:\n          description: |\n            The name of the organization.\n          type: string\n      type: object\n    PatchRetentionRule:\n      properties:\n        everySeconds:\n          default: 2592000\n          description: |\n            The number of seconds to keep data.\n            Default duration is `2592000` (30 days).\n            `0` represents infinite retention.\n          example: 86400\n          format: int64\n          minimum: 0\n          type: integer\n        shardGroupDurationSeconds:\n          description: \u003e\n            The [shard group\n            duration](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#shard).\n\n            The number of seconds that each shard group covers.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't use `shardGroupDurationsSeconds`.\n\n\n            #### InfluxDB OSS\n\n\n            - Default value depends on the [bucket retention\n            period](https://docs.influxdata.com/influxdb/cloud/reference/internals/shards/#shard-group-duration).\n\n\n            #### Related guides\n\n\n            - InfluxDB [shards and shard\n            groups](https://docs.influxdata.com/influxdb/cloud/reference/internals/shards/)\n          format: int64\n          type: integer\n        type:\n          default: expire\n          enum:\n            - expire\n          type: string\n      required:\n        - everySeconds\n      type: object\n    PatchRetentionRules:\n      description: Updates to rules to expire or retain data. No rules means no updates.\n      items:\n        $ref: '#/components/schemas/PatchRetentionRule'\n      type: array\n    Permission:\n      properties:\n        action:\n          enum:\n            - read\n            - write\n          type: string\n        resource:\n          $ref: '#/components/schemas/Resource'\n          properties:\n            id:\n              description: \u003e\n                The ID of a specific resource.\n\n                In a `permission`, applies the permission to only the resource\n                with this ID.\n              type: string\n            name:\n              description: |\n                Optional: A name for the resource.\n                Not all resource types have a name field.\n              type: string\n            org:\n              description: |\n                Optional: The name of the organization with `orgID`.\n              type: string\n            orgID:\n              description: \u003e\n                The ID of the organization that owns the resource.\n\n                In a `permission`, applies the permission to all resources of\n                `type` owned by this organization.\n              type: string\n            type:\n              description: \u003e\n                The type of resource.\n\n                In a `permission`, applies the permission to all resources of\n                this type.\n              enum:\n                - authorizations\n                - buckets\n                - dashboards\n                - orgs\n                - sources\n                - tasks\n                - telegrafs\n                - users\n                - variables\n                - scrapers\n                - secrets\n                - labels\n                - views\n                - documents\n                - notificationRules\n                - notificationEndpoints\n                - checks\n                - dbrp\n                - notebooks\n                - annotations\n                - remotes\n                - replications\n                - instance\n              type: string\n          required:\n            - type\n          type: object\n      required:\n        - action\n        - resource\n    PipeExpression:\n      description: Call expression with pipe argument\n      properties:\n        argument:\n          $ref: '#/components/schemas/Expression'\n        call:\n          $ref: '#/components/schemas/CallExpression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    PipeLiteral:\n      description: \u003e-\n        Represents a specialized literal value, indicating the left hand value\n        of a pipe expression\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    PostBucketRequest:\n      properties:\n        description:\n          description: |\n            A description of the bucket.\n          type: string\n        name:\n          description: |\n            The name of the bucket.\n          type: string\n        orgID:\n          description: |\n            Organization ID.\n            The ID of the organization.\n          type: string\n        retentionRules:\n          $ref: '#/components/schemas/RetentionRules'\n        rp:\n          default: '0'\n          description: \u003e\n            Retention policy is an InfluxDB 1.x concept that represents the\n            duration\n\n            of time that each data point in the retention policy persists. Use\n            `rp`\n\n            for compatibility with InfluxDB 1.x.\n\n            The InfluxDB 2.x and Cloud equivalent is\n\n            [retention\n            period](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#retention-period).\n          type: string\n        schemaType:\n          $ref: '#/components/schemas/SchemaType'\n          default: implicit\n          description: \u003e\n            Schema Type.\n\n            Use `explicit` to enforce column names, tags, fields, and data types\n            for\n\n            your data.\n\n\n            #### InfluxDB Cloud\n\n\n            - Default is `implicit`.\n\n\n            #### InfluxDB OSS\n\n\n            - Doesn't support `schemaType`.\n      required:\n        - orgID\n        - name\n    PostCheck:\n      allOf:\n        - $ref: '#/components/schemas/CheckDiscriminator'\n    PostNotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointDiscriminator'\n    PostNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleDiscriminator'\n    PostOrganizationRequest:\n      properties:\n        description:\n          description: |\n            The description of the organization.\n          type: string\n        name:\n          description: |\n            The name of the organization.\n          type: string\n      required:\n        - name\n      type: object\n    Property:\n      description: The value associated with a key\n      properties:\n        key:\n          $ref: '#/components/schemas/PropertyKey'\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          $ref: '#/components/schemas/Expression'\n      type: object\n    PropertyKey:\n      oneOf:\n        - $ref: '#/components/schemas/Identifier'\n        - $ref: '#/components/schemas/StringLiteral'\n    Query:\n      description: Query InfluxDB with the Flux language\n      properties:\n        dialect:\n          $ref: '#/components/schemas/Dialect'\n        extern:\n          $ref: '#/components/schemas/File'\n        now:\n          description: |\n            Specifies the time that should be reported as `now` in the query.\n            Default is the server `now` time.\n          format: date-time\n          type: string\n        params:\n          additionalProperties: true\n          description: \u003e\n            Key-value pairs passed as parameters during query execution.\n\n\n            To use parameters in your query, pass a _`query`_ with `params`\n            references (in dot notation)--for example:\n\n\n            ```json\n              query: \"from(bucket: params.mybucket) |\u003e range(start: params.rangeStart) |\u003e limit(n:1)\"\n            ```\n\n\n            and pass _`params`_ with the key-value pairs--for example:\n\n\n            ```json\n              params: {\n                \"mybucket\": \"environment\",\n                \"rangeStart\": \"-30d\"\n              }\n            ```\n\n\n            During query execution, InfluxDB passes _`params`_ to your script\n            and substitutes the values.\n\n\n            #### Limitations\n\n\n            - If you use _`params`_, you can't use _`extern`_.\n          type: object\n        query:\n          description: The query script to execute.\n          type: string\n        type:\n          description: The type of query. Must be \"flux\".\n          enum:\n            - flux\n          type: string\n      required:\n        - query\n      type: object\n    QueryEditMode:\n      enum:\n        - builder\n        - advanced\n      type: string\n    QueryVariableProperties:\n      properties:\n        type:\n          enum:\n            - query\n          type: string\n        values:\n          properties:\n            language:\n              type: string\n            query:\n              type: string\n          type: object\n    RangeThreshold:\n      allOf:\n        - $ref: '#/components/schemas/ThresholdBase'\n        - properties:\n            max:\n              format: float\n              type: number\n            min:\n              format: float\n              type: number\n            type:\n              enum:\n                - range\n              type: string\n            within:\n              type: boolean\n          required:\n            - type\n            - min\n            - max\n            - within\n          type: object\n    Ready:\n      properties:\n        started:\n          example: '2019-03-13T10:09:33.891196-04:00'\n          format: date-time\n          type: string\n        status:\n          enum:\n            - ready\n          type: string\n        up:\n          example: 14m45.911966424s\n          type: string\n      type: object\n    RegexpLiteral:\n      description: \u003e-\n        Expressions begin and end with `/` and are regular expressions with\n        syntax accepted by RE2\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: string\n      type: object\n    RenamableField:\n      description: Describes a field that can be renamed and made visible or invisible.\n      properties:\n        displayName:\n          description: The name that a field is renamed to by the user.\n          type: string\n        internalName:\n          description: The calculated name of a field.\n          readOnly: true\n          type: string\n        visible:\n          description: Indicates whether this field should be visible on the table.\n          type: boolean\n      type: object\n    Resource:\n      properties:\n        id:\n          description: \u003e-\n            If ID is set that is a permission for a specific resource. if it is\n            not set it is a permission for all resources of that resource type.\n          nullable: true\n          type: string\n        name:\n          description: Optional name of the resource if the resource has a name field.\n          nullable: true\n          type: string\n        org:\n          description: Optional name of the organization of the organization with orgID.\n          nullable: true\n          type: string\n        orgID:\n          description: \u003e-\n            If orgID is set that is a permission for all resources owned my that\n            org. if it is not set it is a permission for all resources of that\n            resource type.\n          nullable: true\n          type: string\n        type:\n          enum:\n            - authorizations\n            - buckets\n            - dashboards\n            - orgs\n            - tasks\n            - telegrafs\n            - users\n            - variables\n            - secrets\n            - labels\n            - views\n            - documents\n            - notificationRules\n            - notificationEndpoints\n            - checks\n            - dbrp\n            - flows\n            - annotations\n            - functions\n          type: string\n      required:\n        - type\n      type: object\n    ResourceMember:\n      allOf:\n        - $ref: '#/components/schemas/UserResponse'\n        - properties:\n            role:\n              default: member\n              enum:\n                - member\n              type: string\n          type: object\n    ResourceMembers:\n      properties:\n        links:\n          properties:\n            self:\n              format: uri\n              type: string\n          type: object\n        users:\n          items:\n            $ref: '#/components/schemas/ResourceMember'\n          type: array\n      type: object\n    ResourceOwner:\n      allOf:\n        - $ref: '#/components/schemas/UserResponse'\n        - properties:\n            role:\n              default: owner\n              enum:\n                - owner\n              type: string\n          type: object\n    ResourceOwners:\n      properties:\n        links:\n          properties:\n            self:\n              format: uri\n              type: string\n          type: object\n        users:\n          items:\n            $ref: '#/components/schemas/ResourceOwner'\n          type: array\n      type: object\n    RetentionRule:\n      properties:\n        everySeconds:\n          default: 2592000\n          description: \u003e\n            The duration in seconds for how long data will be kept in the\n            database.\n\n            The default duration is 2592000 (30 days).\n\n            0 represents infinite retention.\n          example: 86400\n          format: int64\n          minimum: 0\n          type: integer\n        shardGroupDurationSeconds:\n          description: \u003e\n            The shard group duration.\n\n            The duration or interval (in seconds) that each shard group covers.\n\n\n            #### InfluxDB Cloud\n\n\n            - Does not use `shardGroupDurationsSeconds`.\n\n\n            #### InfluxDB OSS\n\n\n            - Default value depends on the\n\n            [bucket retention\n            period](https://docs.influxdata.com/influxdb/cloud/v2.3/reference/internals/shards/#shard-group-duration).\n          format: int64\n          type: integer\n        type:\n          default: expire\n          enum:\n            - expire\n          type: string\n      required:\n        - everySeconds\n      type: object\n    RetentionRules:\n      description: |\n        Retention rules to expire or retain data.\n        #### InfluxDB Cloud\n\n        - `retentionRules` is required.\n\n        #### InfluxDB OSS\n\n        - `retentionRules` isn't required.\n      items:\n        $ref: '#/components/schemas/RetentionRule'\n      type: array\n    ReturnStatement:\n      description: Defines an expression to return\n      properties:\n        argument:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Routes:\n      properties:\n        authorizations:\n          format: uri\n          type: string\n        buckets:\n          format: uri\n          type: string\n        dashboards:\n          format: uri\n          type: string\n        external:\n          properties:\n            statusFeed:\n              format: uri\n              type: string\n          type: object\n        flags:\n          format: uri\n          type: string\n        me:\n          format: uri\n          type: string\n        orgs:\n          format: uri\n          type: string\n        query:\n          properties:\n            analyze:\n              format: uri\n              type: string\n            ast:\n              format: uri\n              type: string\n            self:\n              format: uri\n              type: string\n            suggestions:\n              format: uri\n              type: string\n          type: object\n        setup:\n          format: uri\n          type: string\n        signin:\n          format: uri\n          type: string\n        signout:\n          format: uri\n          type: string\n        sources:\n          format: uri\n          type: string\n        system:\n          properties:\n            debug:\n              format: uri\n              type: string\n            health:\n              format: uri\n              type: string\n            metrics:\n              format: uri\n              type: string\n          type: object\n        tasks:\n          format: uri\n          type: string\n        telegrafs:\n          format: uri\n          type: string\n        users:\n          format: uri\n          type: string\n        variables:\n          format: uri\n          type: string\n        write:\n          format: uri\n          type: string\n    RuleStatusLevel:\n      description: The state to record if check matches a criteria.\n      enum:\n        - UNKNOWN\n        - OK\n        - INFO\n        - CRIT\n        - WARN\n        - ANY\n      type: string\n    Run:\n      properties:\n        finishedAt:\n          description: \u003e-\n            The time ([RFC3339Nano date/time\n            format](https://go.dev/src/time/format.go)) the run finished\n            executing.\n          example: 2006-01-02T15:04:05.999999999Z07:00\n          format: date-time\n          readOnly: true\n          type: string\n        flux:\n          description: Flux used for the task\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        links:\n          example:\n            retry: /api/v2/tasks/1/runs/1/retry\n            self: /api/v2/tasks/1/runs/1\n            task: /api/v2/tasks/1\n          properties:\n            retry:\n              format: uri\n              type: string\n            self:\n              format: uri\n              type: string\n            task:\n              format: uri\n              type: string\n          readOnly: true\n          type: object\n        log:\n          description: An array of logs associated with the run.\n          items:\n            $ref: '#/components/schemas/LogEvent'\n          readOnly: true\n          type: array\n        requestedAt:\n          description: \u003e-\n            The time ([RFC3339Nano date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339nano-timestamp))\n            the run was manually requested.\n          example: 2006-01-02T15:04:05.999999999Z07:00\n          format: date-time\n          readOnly: true\n          type: string\n        scheduledFor:\n          description: \u003e-\n            The time [RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp)\n            used for the run's `now` option.\n          format: date-time\n          type: string\n        startedAt:\n          description: \u003e-\n            The time ([RFC3339Nano date/time\n            format](https://go.dev/src/time/format.go)) the run started\n            executing.\n          example: 2006-01-02T15:04:05.999999999Z07:00\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          enum:\n            - scheduled\n            - started\n            - failed\n            - success\n            - canceled\n          readOnly: true\n          type: string\n        taskID:\n          readOnly: true\n          type: string\n    RunManually:\n      properties:\n        scheduledFor:\n          description: \u003e\n            The time [RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp)\n\n            used for the run's `now` option.\n\n            Default is the server _now_ time.\n          format: date-time\n          nullable: true\n          type: string\n    Runs:\n      properties:\n        links:\n          $ref: '#/components/schemas/Links'\n        runs:\n          items:\n            $ref: '#/components/schemas/Run'\n          type: array\n      type: object\n    SMTPNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleBase'\n        - $ref: '#/components/schemas/SMTPNotificationRuleBase'\n    SMTPNotificationRuleBase:\n      properties:\n        bodyTemplate:\n          type: string\n        subjectTemplate:\n          type: string\n        to:\n          type: string\n        type:\n          enum:\n            - smtp\n          type: string\n      required:\n        - type\n        - subjectTemplate\n        - to\n      type: object\n    ScatterViewProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            type: string\n          type: array\n        fillColumns:\n          items:\n            type: string\n          type: array\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        generateYAxisTicks:\n          items:\n            type: string\n          type: array\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        symbolColumns:\n          items:\n            type: string\n          type: array\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - scatter\n          type: string\n        xAxisLabel:\n          type: string\n        xColumn:\n          type: string\n        xDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        xPrefix:\n          type: string\n        xSuffix:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yAxisLabel:\n          type: string\n        yColumn:\n          type: string\n        yDomain:\n          items:\n            type: number\n          maxItems: 2\n          type: array\n        yPrefix:\n          type: string\n        ySuffix:\n          type: string\n        yTickStart:\n          format: float\n          type: number\n        yTickStep:\n          format: float\n          type: number\n        yTotalTicks:\n          type: integer\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - xColumn\n        - yColumn\n        - fillColumns\n        - symbolColumns\n        - xDomain\n        - yDomain\n        - xAxisLabel\n        - yAxisLabel\n        - xPrefix\n        - yPrefix\n        - xSuffix\n        - ySuffix\n      type: object\n    SchemaType:\n      enum:\n        - implicit\n        - explicit\n      type: string\n    Script:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          description: The list of label names associated with the script.\n          items:\n            type: string\n          type: array\n        language:\n          $ref: '#/components/schemas/ScriptLanguage'\n        name:\n          type: string\n        orgID:\n          type: string\n        script:\n          description: script to be executed\n          type: string\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n        url:\n          description: invocation endpoint address\n          type: string\n      required:\n        - name\n        - orgID\n        - script\n    ScriptCreateRequest:\n      properties:\n        description:\n          description: Script description. A description of the script.\n          type: string\n        language:\n          $ref: '#/components/schemas/ScriptLanguage'\n        name:\n          description: Script name. The name must be unique within the organization.\n          type: string\n        script:\n          description: The script to execute.\n          type: string\n      required:\n        - name\n        - script\n        - language\n        - description\n      type: object\n    ScriptHTTPResponseData:\n      description: |\n        The response body contains the results of the executed script.\n        The response is user-defined and dynamic.\n      format: binary\n      type: string\n    ScriptInvocationParams:\n      properties:\n        params:\n          additionalProperties: true\n          description: \u003e\n            The script parameters.\n\n            `params` contains key-value pairs that map values to the\n            **params.keys**\n\n            in a script.\n\n            When you invoke a script with `params`, InfluxDB passes the values\n            as\n\n            invocation parameters to the script.\n          type: object\n      type: object\n    ScriptLanguage:\n      enum:\n        - flux\n      type: string\n    ScriptUpdateRequest:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n        script:\n          description: script is script to be executed\n          type: string\n      type: object\n    Scripts:\n      properties:\n        scripts:\n          items:\n            $ref: '#/components/schemas/Script'\n          type: array\n      type: object\n    SecretKeys:\n      properties:\n        secrets:\n          items:\n            type: string\n          type: array\n      type: object\n    SecretKeysResponse:\n      allOf:\n        - $ref: '#/components/schemas/SecretKeys'\n        - properties:\n            links:\n              properties:\n                org:\n                  type: string\n                self:\n                  type: string\n              readOnly: true\n              type: object\n          type: object\n    Secrets:\n      additionalProperties:\n        type: string\n      example:\n        apikey: abc123xyz\n    SimpleTableViewProperties:\n      properties:\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showAll:\n          type: boolean\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        type:\n          enum:\n            - simple-table\n          type: string\n      required:\n        - type\n        - showAll\n        - queries\n        - shape\n        - note\n        - showNoteWhenEmpty\n      type: object\n    SingleStatViewProperties:\n      properties:\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        decimalPlaces:\n          $ref: '#/components/schemas/DecimalPlaces'\n        note:\n          type: string\n        prefix:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        staticLegend:\n          $ref: '#/components/schemas/StaticLegend'\n        suffix:\n          type: string\n        tickPrefix:\n          type: string\n        tickSuffix:\n          type: string\n        type:\n          enum:\n            - single-stat\n          type: string\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - prefix\n        - tickPrefix\n        - suffix\n        - tickSuffix\n        - decimalPlaces\n      type: object\n    SlackNotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointBase'\n        - properties:\n            token:\n              description: Specifies the API token string. Specify either `URL` or `Token`.\n              type: string\n            url:\n              description: \u003e-\n                Specifies the URL of the Slack endpoint. Specify either `URL` or\n                `Token`.\n              type: string\n          type: object\n      type: object\n    SlackNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleBase'\n        - $ref: '#/components/schemas/SlackNotificationRuleBase'\n    SlackNotificationRuleBase:\n      properties:\n        channel:\n          type: string\n        messageTemplate:\n          type: string\n        type:\n          enum:\n            - slack\n          type: string\n      required:\n        - type\n        - messageTemplate\n      type: object\n    Stack:\n      properties:\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        events:\n          items:\n            properties:\n              description:\n                type: string\n              eventType:\n                type: string\n              name:\n                type: string\n              resources:\n                items:\n                  properties:\n                    apiVersion:\n                      type: string\n                    associations:\n                      items:\n                        properties:\n                          kind:\n                            $ref: '#/components/schemas/TemplateKind'\n                          metaName:\n                            type: string\n                        type: object\n                      type: array\n                    kind:\n                      $ref: '#/components/schemas/TemplateKind'\n                    links:\n                      properties:\n                        self:\n                          type: string\n                      type: object\n                    resourceID:\n                      type: string\n                    templateMetaName:\n                      type: string\n                  type: object\n                type: array\n              sources:\n                items:\n                  type: string\n                type: array\n              updatedAt:\n                format: date-time\n                readOnly: true\n                type: string\n              urls:\n                items:\n                  type: string\n                type: array\n            type: object\n          type: array\n        id:\n          type: string\n        orgID:\n          type: string\n      type: object\n    Statement:\n      oneOf:\n        - $ref: '#/components/schemas/BadStatement'\n        - $ref: '#/components/schemas/VariableAssignment'\n        - $ref: '#/components/schemas/MemberAssignment'\n        - $ref: '#/components/schemas/ExpressionStatement'\n        - $ref: '#/components/schemas/ReturnStatement'\n        - $ref: '#/components/schemas/OptionStatement'\n        - $ref: '#/components/schemas/BuiltinStatement'\n        - $ref: '#/components/schemas/TestStatement'\n    StaticLegend:\n      description: StaticLegend represents the options specific to the static legend\n      properties:\n        colorizeRows:\n          type: boolean\n        heightRatio:\n          format: float\n          type: number\n        opacity:\n          format: float\n          type: number\n        orientationThreshold:\n          type: integer\n        show:\n          type: boolean\n        valueAxis:\n          type: string\n        widthRatio:\n          format: float\n          type: number\n      type: object\n    StatusRule:\n      properties:\n        count:\n          type: integer\n        currentLevel:\n          $ref: '#/components/schemas/RuleStatusLevel'\n        period:\n          type: string\n        previousLevel:\n          $ref: '#/components/schemas/RuleStatusLevel'\n      type: object\n    StringLiteral:\n      description: Expressions begin and end with double quote marks\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: string\n      type: object\n    TableViewProperties:\n      properties:\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        decimalPlaces:\n          $ref: '#/components/schemas/DecimalPlaces'\n        fieldOptions:\n          description: \u003e-\n            fieldOptions represent the fields retrieved by the query with\n            customization options\n          items:\n            $ref: '#/components/schemas/RenamableField'\n          type: array\n        note:\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        tableOptions:\n          properties:\n            fixFirstColumn:\n              description: \u003e-\n                fixFirstColumn indicates whether the first column of the table\n                should be locked\n              type: boolean\n            sortBy:\n              $ref: '#/components/schemas/RenamableField'\n            verticalTimeAxis:\n              description: \u003e-\n                verticalTimeAxis describes the orientation of the table by\n                indicating whether the time axis will be displayed vertically\n              type: boolean\n            wrapping:\n              description: \u003e-\n                Wrapping describes the text wrapping style to be used in table\n                views\n              enum:\n                - truncate\n                - wrap\n                - single-line\n              type: string\n          type: object\n        timeFormat:\n          description: \u003e-\n            timeFormat describes the display format for time values according to\n            moment.js date formatting\n          type: string\n        type:\n          enum:\n            - table\n          type: string\n      required:\n        - type\n        - queries\n        - colors\n        - shape\n        - note\n        - showNoteWhenEmpty\n        - tableOptions\n        - fieldOptions\n        - timeFormat\n        - decimalPlaces\n      type: object\n    TagRule:\n      properties:\n        key:\n          type: string\n        operator:\n          enum:\n            - equal\n            - notequal\n            - equalregex\n            - notequalregex\n          type: string\n        value:\n          type: string\n      type: object\n    Task:\n      properties:\n        authorizationID:\n          description: \u003e-\n            The ID of the authorization used when the task communicates with the\n            query engine.\n          type: string\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        cron:\n          description: \u003e-\n            A [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview)\n            that defines the schedule on which the task runs. InfluxDB uses the\n            system time when evaluating Cron expressions.\n          type: string\n        description:\n          description: The description of the task.\n          type: string\n        every:\n          description: \u003e-\n            The interval ([duration\n            literal](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp))\n            at which the task runs. `every` also determines when the task first\n            runs, depending on the specified time.\n          format: duration\n          type: string\n        flux:\n          description: \u003e\n            The Flux script that the task runs.\n\n\n            #### Limitations\n\n\n            - If you use the `flux` property, you can't use the `scriptID` and\n            `scriptParameters` properties.\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        lastRunError:\n          readOnly: true\n          type: string\n        lastRunStatus:\n          enum:\n            - failed\n            - success\n            - canceled\n          readOnly: true\n          type: string\n        latestCompleted:\n          description: \u003e-\n            A timestamp ([RFC3339 date/time\n            format](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#rfc3339-timestamp))\n            of the latest scheduled and completed run.\n          format: date-time\n          readOnly: true\n          type: string\n        links:\n          example:\n            labels: /api/v2/tasks/1/labels\n            logs: /api/v2/tasks/1/logs\n            members: /api/v2/tasks/1/members\n            owners: /api/v2/tasks/1/owners\n            runs: /api/v2/tasks/1/runs\n            self: /api/v2/tasks/1\n          properties:\n            labels:\n              $ref: '#/components/schemas/Link'\n            logs:\n              $ref: '#/components/schemas/Link'\n            members:\n              $ref: '#/components/schemas/Link'\n            owners:\n              $ref: '#/components/schemas/Link'\n            runs:\n              $ref: '#/components/schemas/Link'\n            self:\n              $ref: '#/components/schemas/Link'\n          readOnly: true\n          type: object\n        name:\n          description: The name of the task.\n          type: string\n        offset:\n          description: \u003e-\n            A\n            [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)\n            to delay execution of the task after the scheduled time has elapsed.\n            `0` removes the offset.\n          format: duration\n          type: string\n        org:\n          description: The name of the organization that owns the task.\n          type: string\n        orgID:\n          description: The ID of the organization that owns the task.\n          type: string\n        ownerID:\n          description: The ID of the user who owns the task.\n          type: string\n        scriptID:\n          description: \u003e\n            The ID of the script that the task runs.\n\n\n            #### Limitations\n\n\n            - If you use the `scriptID` property, you can't use the `flux`\n            property.\n          type: string\n        scriptParameters:\n          description: \u003e\n            The parameter key-value pairs passed to the script (referenced by\n            `scriptID`) during the task run.\n\n\n            #### Limitations\n\n\n            - `scriptParameters` requires `scriptID`.\n\n            - If you use the `scriptID` and `scriptParameters` properties, you\n            can't use the `flux` property.\n          type: object\n        status:\n          $ref: '#/components/schemas/TaskStatusType'\n        updatedAt:\n          format: date-time\n          readOnly: true\n          type: string\n      required:\n        - id\n        - name\n        - orgID\n      type: object\n    TaskCreateRequest:\n      properties:\n        cron:\n          description: \u003e-\n            A [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview)\n            that defines the schedule on which the task runs. InfluxDB bases\n            cron runs on the system time.\n          type: string\n        description:\n          description: The description of the task.\n          type: string\n        every:\n          description: \u003e\n            The interval ([duration\n            literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)))\n            at which the task runs.\n\n            `every` also determines when the task first runs, depending on the\n            specified time.\n          type: string\n        flux:\n          description: \u003e\n            The Flux script that the task runs.\n\n\n            #### Limitations\n\n\n            - If you use the `flux` property, you can't use the `scriptID` and\n            `scriptParameters` properties.\n          type: string\n        name:\n          description: The name of the task\n          type: string\n        offset:\n          description: \u003e-\n            A\n            [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals)\n            to delay execution of the task after the scheduled time has elapsed.\n            `0` removes the offset.\n          format: duration\n          type: string\n        org:\n          description: The name of the organization that owns the task.\n          type: string\n        orgID:\n          description: The ID of the organization that owns the task.\n          type: string\n        scriptID:\n          description: \u003e\n            The ID of the script that the task runs.\n\n\n            #### Limitations\n\n\n            - If you use the `scriptID` property, you can't use the `flux`\n            property.\n          type: string\n        scriptParameters:\n          description: \u003e\n            The parameter key-value pairs passed to the script (referenced by\n            `scriptID`) during the task run.\n\n\n            #### Limitations\n\n\n            - `scriptParameters` requires `scriptID`.\n\n            - If you use the `scriptID` and `scriptParameters` properties, you\n            can't use the `flux` property.\n          type: object\n        status:\n          $ref: '#/components/schemas/TaskStatusType'\n      type: object\n    TaskStatusType:\n      description: |\n        `inactive` cancels scheduled runs and prevents manual runs of the task.\n      enum:\n        - active\n        - inactive\n      type: string\n    TaskUpdateRequest:\n      properties:\n        cron:\n          description: Update the 'cron' option in the flux script.\n          type: string\n        description:\n          description: Update the description of the task.\n          type: string\n        every:\n          description: Update the 'every' option in the flux script.\n          type: string\n        flux:\n          description: Update the Flux script that the task runs.\n          type: string\n        name:\n          description: Update the 'name' option in the flux script.\n          type: string\n        offset:\n          description: Update the 'offset' option in the flux script.\n          type: string\n        scriptID:\n          description: Update the 'scriptID' of the task.\n          type: string\n        scriptParameters:\n          description: Update the 'scriptParameters' of the task.\n          type: object\n        status:\n          $ref: '#/components/schemas/TaskStatusType'\n      type: object\n    Tasks:\n      properties:\n        links:\n          $ref: '#/components/schemas/Links'\n          readOnly: true\n        tasks:\n          items:\n            $ref: '#/components/schemas/Task'\n          type: array\n      type: object\n    Telegraf:\n      allOf:\n        - $ref: '#/components/schemas/TelegrafRequest'\n        - properties:\n            id:\n              readOnly: true\n              type: string\n            labels:\n              $ref: '#/components/schemas/Labels'\n              readOnly: true\n            links:\n              example:\n                lables: /api/v2/telegrafs/1/labels\n                members: /api/v2/telegrafs/1/members\n                owners: /api/v2/telegrafs/1/owners\n                self: /api/v2/telegrafs/1\n              properties:\n                labels:\n                  $ref: '#/components/schemas/Link'\n                members:\n                  $ref: '#/components/schemas/Link'\n                owners:\n                  $ref: '#/components/schemas/Link'\n                self:\n                  $ref: '#/components/schemas/Link'\n              readOnly: true\n              type: object\n          type: object\n      type: object\n    TelegrafPlugin:\n      properties:\n        config:\n          type: string\n        description:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n      type: object\n    TelegrafPluginRequest:\n      properties:\n        config:\n          type: string\n        description:\n          type: string\n        metadata:\n          properties:\n            buckets:\n              items:\n                type: string\n              type: array\n          type: object\n        name:\n          type: string\n        orgID:\n          type: string\n        plugins:\n          items:\n            properties:\n              alias:\n                type: string\n              config:\n                type: string\n              description:\n                type: string\n              name:\n                type: string\n              type:\n                type: string\n            type: object\n          type: array\n      type: object\n    TelegrafPlugins:\n      properties:\n        os:\n          type: string\n        plugins:\n          items:\n            $ref: '#/components/schemas/TelegrafPlugin'\n          type: array\n        version:\n          type: string\n      type: object\n    TelegrafRequest:\n      properties:\n        config:\n          type: string\n        description:\n          type: string\n        metadata:\n          properties:\n            buckets:\n              items:\n                type: string\n              type: array\n          type: object\n        name:\n          type: string\n        orgID:\n          type: string\n      type: object\n    Telegrafs:\n      properties:\n        configurations:\n          items:\n            $ref: '#/components/schemas/Telegraf'\n          type: array\n      type: object\n    TelegramNotificationEndpoint:\n      allOf:\n        - $ref: '#/components/schemas/NotificationEndpointBase'\n        - properties:\n            channel:\n              description: \u003e-\n                The ID of the telegram channel; a chat_id in\n                https://core.telegram.org/bots/api#sendmessage .\n              type: string\n            token:\n              description: \u003e-\n                Specifies the Telegram bot token. See\n                https://core.telegram.org/bots#creating-a-new-bot .\n              type: string\n          required:\n            - token\n            - channel\n          type: object\n      type: object\n    TelegramNotificationRule:\n      allOf:\n        - $ref: '#/components/schemas/NotificationRuleBase'\n        - $ref: '#/components/schemas/TelegramNotificationRuleBase'\n    TelegramNotificationRuleBase:\n      properties:\n        disableWebPagePreview:\n          description: \u003e-\n            Disables preview of web links in the sent messages when \"true\".\n            Defaults to \"false\".\n          type: boolean\n        messageTemplate:\n          description: The message template as a flux interpolated string.\n          type: string\n        parseMode:\n          description: \u003e-\n            Parse mode of the message text per\n            https://core.telegram.org/bots/api#formatting-options. Defaults to\n            \"MarkdownV2\".\n          enum:\n            - MarkdownV2\n            - HTML\n            - Markdown\n          type: string\n        type:\n          description: \u003e-\n            The discriminator between other types of notification rules is\n            \"telegram\".\n          enum:\n            - telegram\n          type: string\n      required:\n        - type\n        - messageTemplate\n        - channel\n      type: object\n    Template:\n      items:\n        description: |\n          A template entry.\n          Defines an InfluxDB resource in a template.\n        properties:\n          apiVersion:\n            example: influxdata.com/v2alpha1\n            type: string\n          kind:\n            $ref: '#/components/schemas/TemplateKind'\n          metadata:\n            description: \u003e\n              Metadata properties used for the resource when the template is\n              applied.\n            properties:\n              name:\n                type: string\n            type: object\n          spec:\n            description: \u003e\n              Configuration properties used for the resource when the template\n              is applied.\n\n              Key-value pairs map to the specification for the resource.\n\n\n              The following code samples show `spec` configurations for template\n              resources:\n\n\n              - A bucket:\n\n                ```json\n                { \"spec\": {\n                    \"name\": \"iot_center\",\n                    \"retentionRules\": [{\n                        \"everySeconds\": 2.592e+06,\n                        \"type\": \"expire\"\n                      }]\n                  }\n                }\n                ```\n\n              - A variable:\n\n                ```json\n                { \"spec\": {\n                    \"language\": \"flux\",\n                    \"name\": \"Node_Service\",\n                    \"query\": \"import \\\"influxdata/influxdb/v1\\\"\\r\\nv1.tagValues(bucket: \\\"iot_center\\\",\n                        tag: \\\"service\\\")\",\n                    \"type\": \"query\"\n                  }\n                }\n                ```\n            type: object\n        type: object\n      type: array\n    TemplateApply:\n      properties:\n        actions:\n          description: \u003e\n            A list of `action` objects.\n\n            Actions let you customize how InfluxDB applies templates in the\n            request.\n\n\n            You can use the following actions to prevent creating or updating\n            resources:\n\n\n            - A `skipKind` action skips template resources of a specified\n            `kind`.\n\n            - A `skipResource` action skips template resources with a specified\n            `metadata.name`\n              and `kind`.\n          items:\n            oneOf:\n              - properties:\n                  action:\n                    enum:\n                      - skipKind\n                    type: string\n                  properties:\n                    properties:\n                      kind:\n                        $ref: '#/components/schemas/TemplateKind'\n                    required:\n                      - kind\n                    type: object\n                type: object\n              - properties:\n                  action:\n                    enum:\n                      - skipResource\n                    type: string\n                  properties:\n                    properties:\n                      kind:\n                        $ref: '#/components/schemas/TemplateKind'\n                      resourceTemplateName:\n                        type: string\n                    required:\n                      - kind\n                      - resourceTemplateName\n                    type: object\n                type: object\n          type: array\n        dryRun:\n          description: \u003e\n            Only applies a dry run of the templates passed in the request.\n\n\n            - Validates the template and generates a resource diff and summary.\n\n            - Doesn't install templates or make changes to the InfluxDB\n            instance.\n          type: boolean\n        envRefs:\n          additionalProperties:\n            oneOf:\n              - type: string\n              - type: integer\n              - type: number\n              - type: boolean\n          description: \u003e\n            An object with key-value pairs that map to **environment\n            references** in templates.\n\n\n            Environment references in templates are `envRef` objects with an\n            `envRef.key`\n\n            property.\n\n            To substitute a custom environment reference value when applying\n            templates,\n\n            pass `envRefs` with the `envRef.key` and the value.\n\n\n            When you apply a template, InfluxDB replaces `envRef` objects in the\n            template\n\n            with the values that you provide in the `envRefs` parameter.\n\n            For more examples, see how to [define environment\n            references](https://docs.influxdata.com/influxdb/cloud/influxdb-templates/use/#define-environment-references).\n\n\n            The following template fields may use environment references:\n\n              - `metadata.name`\n              - `spec.endpointName`\n              - `spec.associations.name`\n\n            For more information about including environment references in\n            template fields, see how to\n\n            [include user-definable resource\n            names](https://docs.influxdata.com/influxdb/cloud/influxdb-templates/create/#include-user-definable-resource-names).\n          type: object\n        orgID:\n          description: \u003e\n            Organization ID.\n\n            InfluxDB applies templates to this organization.\n\n            The organization owns all resources created by the template.\n\n\n            To find your organization, see how to\n\n            [view\n            organizations](https://docs.influxdata.com/influxdb/cloud/organizations/view-orgs/).\n          type: string\n        remotes:\n          description: |\n            A list of URLs for template files.\n\n            To apply a template manifest file located at a URL, pass `remotes`\n            with an array that contains the URL.\n          items:\n            properties:\n              contentType:\n                type: string\n              url:\n                type: string\n            required:\n              - url\n            type: object\n          type: array\n        secrets:\n          additionalProperties:\n            type: string\n          description: \u003e\n            An object with key-value pairs that map to **secrets** in queries.\n\n\n            Queries may reference secrets stored in InfluxDB--for example,\n\n            the following Flux script retrieves `POSTGRES_USERNAME` and\n            `POSTGRES_PASSWORD`\n\n            secrets and then uses them to connect to a PostgreSQL database:\n\n              ```js\n              import \"sql\"\n              import \"influxdata/influxdb/secrets\"\n\n              username = secrets.get(key: \"POSTGRES_USERNAME\")\n              password = secrets.get(key: \"POSTGRES_PASSWORD\")\n\n              sql.from(\n                driverName: \"postgres\",\n                dataSourceName: \"postgresql://${username}:${password}@localhost:5432\",\n                query: \"SELECT * FROM example_table\",\n              )\n              ```\n\n            To define secret values in your `/api/v2/templates/apply` request,\n\n            pass the `secrets` parameter with key-value pairs--for example:\n\n              ```json\n              {\n                ...\n                \"secrets\": {\n                  \"POSTGRES_USERNAME\": \"pguser\",\n                  \"POSTGRES_PASSWORD\": \"foo\"\n                }\n                ...\n              }\n              ```\n\n            InfluxDB stores the key-value pairs as secrets that you can access\n            with `secrets.get()`.\n\n            Once stored, you can't view secret values in InfluxDB.\n\n\n            #### Related guides\n\n\n            - [How to pass secrets when installing a\n            template](https://docs.influxdata.com/influxdb/cloud/influxdb-templates/use/#pass-secrets-when-installing-a-template)\n          type: object\n        stackID:\n          description: \u003e\n            ID of the stack to update.\n\n\n            To apply templates to an existing stack in the organization, use the\n            `stackID` parameter.\n\n            If you apply templates without providing a stack ID,\n\n            InfluxDB initializes a new stack with all new resources.\n\n\n            To find a stack ID, use the InfluxDB [`/api/v2/stacks` API\n            endpoint](#operation/ListStacks) to list stacks.\n\n\n            #### Related guides\n\n\n            -\n            [Stacks](https://docs.influxdata.com/influxdb/cloud/influxdb-templates/stacks/)\n\n            - [View\n            stacks](https://docs.influxdata.com/influxdb/cloud/influxdb-templates/stacks/view/)\n          type: string\n        template:\n          description: \u003e\n            A template object to apply.\n\n            A template object has a `contents` property\n\n            with an array of InfluxDB resource configurations.\n\n\n            Pass `template` to apply only one template object.\n\n            If you use `template`, you can't use the `templates` parameter.\n\n            If you want to apply multiple template objects, use `templates`\n            instead.\n          properties:\n            contentType:\n              type: string\n            contents:\n              $ref: '#/components/schemas/Template'\n            sources:\n              items:\n                type: string\n              type: array\n          type: object\n        templates:\n          description: |\n            A list of template objects to apply.\n            A template object has a `contents` property\n            with an array of InfluxDB resource configurations.\n\n            Use the `templates` parameter to apply multiple template objects.\n            If you use `templates`, you can't use the `template` parameter.\n          items:\n            properties:\n              contentType:\n                type: string\n              contents:\n                $ref: '#/components/schemas/Template'\n              sources:\n                items:\n                  type: string\n                type: array\n            type: object\n          type: array\n      type: object\n    TemplateChart:\n      properties:\n        height:\n          type: integer\n        properties:\n          $ref: '#/components/schemas/ViewProperties'\n        width:\n          type: integer\n        xPos:\n          type: integer\n        yPos:\n          type: integer\n      type: object\n    TemplateEnvReferences:\n      items:\n        properties:\n          defaultValue:\n            description: \u003e-\n              Default value that will be provided for the reference when no\n              value is provided\n            nullable: true\n            oneOf:\n              - type: string\n              - type: integer\n              - type: number\n              - type: boolean\n          envRefKey:\n            description: \u003e-\n              Key identified as environment reference and is the key identified\n              in the template\n            type: string\n          resourceField:\n            description: Field the environment reference corresponds too\n            type: string\n          value:\n            description: Value provided to fulfill reference\n            nullable: true\n            oneOf:\n              - type: string\n              - type: integer\n              - type: number\n              - type: boolean\n        required:\n          - resourceField\n          - envRefKey\n        type: object\n      type: array\n    TemplateExportByID:\n      properties:\n        orgIDs:\n          items:\n            properties:\n              orgID:\n                type: string\n              resourceFilters:\n                properties:\n                  byLabel:\n                    items:\n                      type: string\n                    type: array\n                  byResourceKind:\n                    items:\n                      $ref: '#/components/schemas/TemplateKind'\n                    type: array\n                type: object\n            type: object\n          type: array\n        resources:\n          items:\n            properties:\n              id:\n                type: string\n              kind:\n                $ref: '#/components/schemas/TemplateKind'\n              name:\n                description: \u003e-\n                  if defined with id, name is used for resource exported by id.\n                  if defined independently, resources strictly matching name are\n                  exported\n                type: string\n            required:\n              - id\n              - kind\n            type: object\n          type: array\n        stackID:\n          type: string\n      type: object\n    TemplateExportByName:\n      properties:\n        orgIDs:\n          items:\n            properties:\n              orgID:\n                type: string\n              resourceFilters:\n                properties:\n                  byLabel:\n                    items:\n                      type: string\n                    type: array\n                  byResourceKind:\n                    items:\n                      $ref: '#/components/schemas/TemplateKind'\n                    type: array\n                type: object\n            type: object\n          type: array\n        resources:\n          items:\n            properties:\n              kind:\n                $ref: '#/components/schemas/TemplateKind'\n              name:\n                type: string\n            required:\n              - name\n              - kind\n            type: object\n          type: array\n        stackID:\n          type: string\n      type: object\n    TemplateKind:\n      enum:\n        - Bucket\n        - Check\n        - CheckDeadman\n        - CheckThreshold\n        - Dashboard\n        - Label\n        - NotificationEndpoint\n        - NotificationEndpointHTTP\n        - NotificationEndpointPagerDuty\n        - NotificationEndpointSlack\n        - NotificationRule\n        - Task\n        - Telegraf\n        - Variable\n      type: string\n    TemplateSummary:\n      properties:\n        diff:\n          properties:\n            buckets:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      description:\n                        type: string\n                      name:\n                        type: string\n                      retentionRules:\n                        $ref: '#/components/schemas/RetentionRules'\n                    type: object\n                  old:\n                    properties:\n                      description:\n                        type: string\n                      name:\n                        type: string\n                      retentionRules:\n                        $ref: '#/components/schemas/RetentionRules'\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            checks:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    $ref: '#/components/schemas/CheckDiscriminator'\n                  old:\n                    $ref: '#/components/schemas/CheckDiscriminator'\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            dashboards:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      charts:\n                        items:\n                          $ref: '#/components/schemas/TemplateChart'\n                        type: array\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  old:\n                    properties:\n                      charts:\n                        items:\n                          $ref: '#/components/schemas/TemplateChart'\n                        type: array\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            labelMappings:\n              items:\n                properties:\n                  labelID:\n                    type: string\n                  labelName:\n                    type: string\n                  labelTemplateMetaName:\n                    type: string\n                  resourceID:\n                    type: string\n                  resourceName:\n                    type: string\n                  resourceTemplateMetaName:\n                    type: string\n                  resourceType:\n                    type: string\n                  status:\n                    type: string\n                type: object\n              type: array\n            labels:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      color:\n                        type: string\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  old:\n                    properties:\n                      color:\n                        type: string\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            notificationEndpoints:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    $ref: '#/components/schemas/NotificationEndpointDiscriminator'\n                  old:\n                    $ref: '#/components/schemas/NotificationEndpointDiscriminator'\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            notificationRules:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      description:\n                        type: string\n                      endpointID:\n                        type: string\n                      endpointName:\n                        type: string\n                      endpointType:\n                        type: string\n                      every:\n                        type: string\n                      messageTemplate:\n                        type: string\n                      name:\n                        type: string\n                      offset:\n                        type: string\n                      status:\n                        type: string\n                      statusRules:\n                        items:\n                          properties:\n                            currentLevel:\n                              type: string\n                            previousLevel:\n                              type: string\n                          type: object\n                        type: array\n                      tagRules:\n                        items:\n                          properties:\n                            key:\n                              type: string\n                            operator:\n                              type: string\n                            value:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  old:\n                    properties:\n                      description:\n                        type: string\n                      endpointID:\n                        type: string\n                      endpointName:\n                        type: string\n                      endpointType:\n                        type: string\n                      every:\n                        type: string\n                      messageTemplate:\n                        type: string\n                      name:\n                        type: string\n                      offset:\n                        type: string\n                      status:\n                        type: string\n                      statusRules:\n                        items:\n                          properties:\n                            currentLevel:\n                              type: string\n                            previousLevel:\n                              type: string\n                          type: object\n                        type: array\n                      tagRules:\n                        items:\n                          properties:\n                            key:\n                              type: string\n                            operator:\n                              type: string\n                            value:\n                              type: string\n                          type: object\n                        type: array\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            tasks:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      cron:\n                        type: string\n                      description:\n                        type: string\n                      every:\n                        type: string\n                      name:\n                        type: string\n                      offset:\n                        type: string\n                      query:\n                        type: string\n                      status:\n                        type: string\n                    type: object\n                  old:\n                    properties:\n                      cron:\n                        type: string\n                      description:\n                        type: string\n                      every:\n                        type: string\n                      name:\n                        type: string\n                      offset:\n                        type: string\n                      query:\n                        type: string\n                      status:\n                        type: string\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            telegrafConfigs:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    $ref: '#/components/schemas/TelegrafRequest'\n                  old:\n                    $ref: '#/components/schemas/TelegrafRequest'\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            variables:\n              items:\n                properties:\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  new:\n                    properties:\n                      args:\n                        $ref: '#/components/schemas/VariableProperties'\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  old:\n                    properties:\n                      args:\n                        $ref: '#/components/schemas/VariableProperties'\n                      description:\n                        type: string\n                      name:\n                        type: string\n                    type: object\n                  stateStatus:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n          type: object\n        errors:\n          items:\n            properties:\n              fields:\n                items:\n                  type: string\n                type: array\n              indexes:\n                items:\n                  type: integer\n                type: array\n              kind:\n                $ref: '#/components/schemas/TemplateKind'\n              reason:\n                type: string\n            type: object\n          type: array\n        sources:\n          items:\n            type: string\n          type: array\n        stackID:\n          type: string\n        summary:\n          properties:\n            buckets:\n              items:\n                properties:\n                  description:\n                    type: string\n                  envReferences:\n                    $ref: '#/components/schemas/TemplateEnvReferences'\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  labelAssociations:\n                    items:\n                      $ref: '#/components/schemas/TemplateSummaryLabel'\n                    type: array\n                  name:\n                    type: string\n                  orgID:\n                    type: string\n                  retentionPeriod:\n                    type: integer\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            checks:\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/CheckDiscriminator'\n                  - properties:\n                      envReferences:\n                        $ref: '#/components/schemas/TemplateEnvReferences'\n                      kind:\n                        $ref: '#/components/schemas/TemplateKind'\n                      labelAssociations:\n                        items:\n                          $ref: '#/components/schemas/TemplateSummaryLabel'\n                        type: array\n                      templateMetaName:\n                        type: string\n                    type: object\n              type: array\n            dashboards:\n              items:\n                properties:\n                  charts:\n                    items:\n                      $ref: '#/components/schemas/TemplateChart'\n                    type: array\n                  description:\n                    type: string\n                  envReferences:\n                    $ref: '#/components/schemas/TemplateEnvReferences'\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  labelAssociations:\n                    items:\n                      $ref: '#/components/schemas/TemplateSummaryLabel'\n                    type: array\n                  name:\n                    type: string\n                  orgID:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            labelMappings:\n              items:\n                properties:\n                  labelID:\n                    type: string\n                  labelName:\n                    type: string\n                  labelTemplateMetaName:\n                    type: string\n                  resourceID:\n                    type: string\n                  resourceName:\n                    type: string\n                  resourceTemplateMetaName:\n                    type: string\n                  resourceType:\n                    type: string\n                  status:\n                    type: string\n                type: object\n              type: array\n            labels:\n              items:\n                $ref: '#/components/schemas/TemplateSummaryLabel'\n              type: array\n            missingEnvRefs:\n              items:\n                type: string\n              type: array\n            missingSecrets:\n              items:\n                type: string\n              type: array\n            notificationEndpoints:\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/NotificationEndpointDiscriminator'\n                  - properties:\n                      envReferences:\n                        $ref: '#/components/schemas/TemplateEnvReferences'\n                      kind:\n                        $ref: '#/components/schemas/TemplateKind'\n                      labelAssociations:\n                        items:\n                          $ref: '#/components/schemas/TemplateSummaryLabel'\n                        type: array\n                      templateMetaName:\n                        type: string\n                    type: object\n              type: array\n            notificationRules:\n              items:\n                properties:\n                  description:\n                    type: string\n                  endpointID:\n                    type: string\n                  endpointTemplateMetaName:\n                    type: string\n                  endpointType:\n                    type: string\n                  envReferences:\n                    $ref: '#/components/schemas/TemplateEnvReferences'\n                  every:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  labelAssociations:\n                    items:\n                      $ref: '#/components/schemas/TemplateSummaryLabel'\n                    type: array\n                  messageTemplate:\n                    type: string\n                  name:\n                    type: string\n                  offset:\n                    type: string\n                  status:\n                    type: string\n                  statusRules:\n                    items:\n                      properties:\n                        currentLevel:\n                          type: string\n                        previousLevel:\n                          type: string\n                      type: object\n                    type: array\n                  tagRules:\n                    items:\n                      properties:\n                        key:\n                          type: string\n                        operator:\n                          type: string\n                        value:\n                          type: string\n                      type: object\n                    type: array\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            tasks:\n              items:\n                properties:\n                  cron:\n                    type: string\n                  description:\n                    type: string\n                  envReferences:\n                    $ref: '#/components/schemas/TemplateEnvReferences'\n                  every:\n                    type: string\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  name:\n                    type: string\n                  offset:\n                    type: string\n                  query:\n                    type: string\n                  status:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n            telegrafConfigs:\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/TelegrafRequest'\n                  - properties:\n                      envReferences:\n                        $ref: '#/components/schemas/TemplateEnvReferences'\n                      kind:\n                        $ref: '#/components/schemas/TemplateKind'\n                      labelAssociations:\n                        items:\n                          $ref: '#/components/schemas/TemplateSummaryLabel'\n                        type: array\n                      templateMetaName:\n                        type: string\n                    type: object\n              type: array\n            variables:\n              items:\n                properties:\n                  arguments:\n                    $ref: '#/components/schemas/VariableProperties'\n                  description:\n                    type: string\n                  envReferences:\n                    $ref: '#/components/schemas/TemplateEnvReferences'\n                  id:\n                    type: string\n                  kind:\n                    $ref: '#/components/schemas/TemplateKind'\n                  labelAssociations:\n                    items:\n                      $ref: '#/components/schemas/TemplateSummaryLabel'\n                    type: array\n                  name:\n                    type: string\n                  orgID:\n                    type: string\n                  templateMetaName:\n                    type: string\n                type: object\n              type: array\n          type: object\n      type: object\n    TemplateSummaryLabel:\n      properties:\n        envReferences:\n          $ref: '#/components/schemas/TemplateEnvReferences'\n        id:\n          type: string\n        kind:\n          $ref: '#/components/schemas/TemplateKind'\n        name:\n          type: string\n        orgID:\n          type: string\n        properties:\n          properties:\n            color:\n              type: string\n            description:\n              type: string\n          type: object\n        templateMetaName:\n          type: string\n      type: object\n    TestStatement:\n      description: Declares a Flux test case\n      properties:\n        assignment:\n          $ref: '#/components/schemas/VariableAssignment'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    Threshold:\n      discriminator:\n        mapping:\n          greater: '#/components/schemas/GreaterThreshold'\n          lesser: '#/components/schemas/LesserThreshold'\n          range: '#/components/schemas/RangeThreshold'\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/GreaterThreshold'\n        - $ref: '#/components/schemas/LesserThreshold'\n        - $ref: '#/components/schemas/RangeThreshold'\n    ThresholdBase:\n      properties:\n        allValues:\n          description: If true, only alert if all values meet threshold.\n          type: boolean\n        level:\n          $ref: '#/components/schemas/CheckStatusLevel'\n    ThresholdCheck:\n      allOf:\n        - $ref: '#/components/schemas/CheckBase'\n        - properties:\n            every:\n              description: Check repetition interval.\n              type: string\n            offset:\n              description: Duration to delay after the schedule, before executing check.\n              type: string\n            statusMessageTemplate:\n              description: The template used to generate and write a status message.\n              type: string\n            tags:\n              description: List of tags to write to each status.\n              items:\n                properties:\n                  key:\n                    type: string\n                  value:\n                    type: string\n                type: object\n              type: array\n            thresholds:\n              items:\n                $ref: '#/components/schemas/Threshold'\n              type: array\n            type:\n              enum:\n                - threshold\n              type: string\n          required:\n            - type\n          type: object\n    Token:\n      properties:\n        token:\n          type: string\n      type: object\n    UnaryExpression:\n      description: Uses operators to act on a single operand in an expression\n      properties:\n        argument:\n          $ref: '#/components/schemas/Expression'\n        operator:\n          type: string\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    UnsignedIntegerLiteral:\n      description: Represents integer numbers\n      properties:\n        type:\n          $ref: '#/components/schemas/NodeType'\n        value:\n          type: string\n      type: object\n    User:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        oauthID:\n          type: string\n        org_id:\n          type: string\n        role:\n          enum:\n            - owner\n            - member\n          type: string\n        status:\n          default: active\n          description: If inactive the user is inactive.\n          enum:\n            - active\n            - inactive\n          type: string\n      required:\n        - name\n    UserResponse:\n      properties:\n        id:\n          description: |\n            The ID of the user.\n          readOnly: true\n          type: string\n        links:\n          example:\n            self: /api/v2/users/1\n          properties:\n            self:\n              format: uri\n              type: string\n          readOnly: true\n          type: object\n        name:\n          description: |\n            The name of the user.\n          type: string\n        status:\n          default: active\n          description: \u003e\n            The status of a user. An inactive user won't have access to\n            resources.\n          enum:\n            - active\n            - inactive\n          type: string\n      required:\n        - name\n    Users:\n      properties:\n        links:\n          properties:\n            self:\n              format: uri\n              type: string\n          type: object\n        users:\n          items:\n            $ref: '#/components/schemas/UserResponse'\n          type: array\n      type: object\n    Variable:\n      properties:\n        arguments:\n          $ref: '#/components/schemas/VariableProperties'\n        createdAt:\n          format: date-time\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        links:\n          properties:\n            labels:\n              format: uri\n              type: string\n            org:\n              format: uri\n              type: string\n            self:\n              format: uri\n              type: string\n          readOnly: true\n          type: object\n        name:\n          type: string\n        orgID:\n          type: string\n        selected:\n          items:\n            type: string\n          type: array\n        sort_order:\n          type: integer\n        updatedAt:\n          format: date-time\n          type: string\n      required:\n        - name\n        - orgID\n        - arguments\n      type: object\n    VariableAssignment:\n      description: Represents the declaration of a variable\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        init:\n          $ref: '#/components/schemas/Expression'\n        type:\n          $ref: '#/components/schemas/NodeType'\n      type: object\n    VariableProperties:\n      oneOf:\n        - $ref: '#/components/schemas/QueryVariableProperties'\n        - $ref: '#/components/schemas/ConstantVariableProperties'\n        - $ref: '#/components/schemas/MapVariableProperties'\n      type: object\n    Variables:\n      example:\n        variables:\n          - arguments:\n              type: constant\n              values:\n                - howdy\n                - hello\n                - hi\n                - yo\n                - oy\n            id: '1221432'\n            name: ':ok:'\n            selected:\n              - hello\n          - arguments:\n              type: map\n              values:\n                a: fdjaklfdjkldsfjlkjdsa\n                b: dfaksjfkljekfajekdljfas\n                c: fdjksajfdkfeawfeea\n            id: '1221432'\n            name: ':ok:'\n            selected:\n              - c\n          - arguments:\n              language: flux\n              query: 'from(bucket: \"foo\") |\u003e showMeasurements()'\n              type: query\n            id: '1221432'\n            name: ':ok:'\n            selected:\n              - host\n      properties:\n        variables:\n          items:\n            $ref: '#/components/schemas/Variable'\n          type: array\n      type: object\n    View:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        links:\n          properties:\n            self:\n              type: string\n          readOnly: true\n          type: object\n        name:\n          type: string\n        properties:\n          $ref: '#/components/schemas/ViewProperties'\n      required:\n        - name\n        - properties\n    ViewProperties:\n      oneOf:\n        - $ref: '#/components/schemas/LinePlusSingleStatProperties'\n        - $ref: '#/components/schemas/XYViewProperties'\n        - $ref: '#/components/schemas/SingleStatViewProperties'\n        - $ref: '#/components/schemas/HistogramViewProperties'\n        - $ref: '#/components/schemas/GaugeViewProperties'\n        - $ref: '#/components/schemas/TableViewProperties'\n        - $ref: '#/components/schemas/SimpleTableViewProperties'\n        - $ref: '#/components/schemas/MarkdownViewProperties'\n        - $ref: '#/components/schemas/CheckViewProperties'\n        - $ref: '#/components/schemas/ScatterViewProperties'\n        - $ref: '#/components/schemas/HeatmapViewProperties'\n        - $ref: '#/components/schemas/MosaicViewProperties'\n        - $ref: '#/components/schemas/BandViewProperties'\n        - $ref: '#/components/schemas/GeoViewProperties'\n    Views:\n      properties:\n        links:\n          properties:\n            self:\n              type: string\n          type: object\n        views:\n          items:\n            $ref: '#/components/schemas/View'\n          type: array\n      type: object\n    WritePrecision:\n      enum:\n        - ms\n        - s\n        - us\n        - ns\n      type: string\n    XYGeom:\n      enum:\n        - line\n        - step\n        - stacked\n        - bar\n        - monotoneX\n        - stepBefore\n        - stepAfter\n      type: string\n    XYViewProperties:\n      properties:\n        adaptiveZoomHide:\n          type: boolean\n        axes:\n          $ref: '#/components/schemas/Axes'\n        colorMapping:\n          $ref: '#/components/schemas/ColorMapping'\n          description: An object that contains information about the color mapping\n        colors:\n          description: Colors define color encoding of data into a visualization\n          items:\n            $ref: '#/components/schemas/DashboardColor'\n          type: array\n        generateXAxisTicks:\n          items:\n            type: string\n          type: array\n        generateYAxisTicks:\n          items:\n            type: string\n          type: array\n        geom:\n          $ref: '#/components/schemas/XYGeom'\n        hoverDimension:\n          enum:\n            - auto\n            - x\n            - 'y'\n            - xy\n          type: string\n        legendColorizeRows:\n          type: boolean\n        legendHide:\n          type: boolean\n        legendOpacity:\n          format: float\n          type: number\n        legendOrientationThreshold:\n          type: integer\n        note:\n          type: string\n        position:\n          enum:\n            - overlaid\n            - stacked\n          type: string\n        queries:\n          items:\n            $ref: '#/components/schemas/DashboardQuery'\n          type: array\n        shadeBelow:\n          type: boolean\n        shape:\n          enum:\n            - chronograf-v2\n          type: string\n        showNoteWhenEmpty:\n          description: If true, will display note when empty\n          type: boolean\n        staticLegend:\n          $ref: '#/components/schemas/StaticLegend'\n        timeFormat:\n          type: string\n        type:\n          enum:\n            - xy\n          type: string\n        xColumn:\n          type: string\n        xTickStart:\n          format: float\n          type: number\n        xTickStep:\n          format: float\n          type: number\n        xTotalTicks:\n          type: integer\n        yColumn:\n          type: string\n        yTickStart:\n          format: float\n          type: number\n        yTickStep:\n          format: float\n          type: number\n        yTotalTicks:\n          type: integer\n      required:\n        - type\n        - geom\n        - queries\n        - shape\n        - axes\n        - colors\n        - note\n        - showNoteWhenEmpty\n        - position\n      type: object\n  securitySchemes:\n    BasicAuthentication:\n      description: \u003e\n        ### Basic authentication scheme\n\n\n        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API\n        operations that support it:\n          - **username**: InfluxDB Cloud username\n          - **password**: InfluxDB Cloud API token\n\n        #### Example\n\n\n        `curl --get \"https://europe-west1-1.gcp.cloud2.influxdata.com/query\"\n              --user \"exampleuser@influxdata.com\":\"INFLUX_API_TOKEN\"`\n\n        Replace the following:\n\n        - *`exampleuser@influxdata.com`*: the email address that you signed up\n        with\n\n        - *`INFLUX_API_TOKEN`*: your [InfluxDB API\n        token](/influxdb/cloud/reference/glossary/#token)\n      scheme: basic\n      type: http\n    TokenAuthentication:\n      description: \u003e\n        Use the [Token\n        authentication](#section/Authentication/TokenAuthentication)\n\n        scheme to authenticate to the InfluxDB API.\n\n\n\n        In your API requests, send an `Authorization` header.\n\n        For the header value, provide the word `Token` followed by a space and\n        an InfluxDB API token.\n\n        The word `Token` is case-sensitive.\n\n\n\n        ### Syntax\n\n\n        `Authorization: Token YOUR_INFLUX_API_TOKEN`\n\n\n\n        For more information and examples, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests](/influxdb/cloud/api-guide/api_intro/#authentication).\n          - [Manage API tokens](/influxdb/cloud/security/tokens/).\n      in: header\n      name: Authorization\n      type: apiKey\ninfo:\n  title: InfluxDB Cloud API Service\n  version: Cloud 2.x\n  description: \u003e\n    The InfluxDB v2 API provides a programmatic interface for all interactions\n    with InfluxDB.\n\n    Access the InfluxDB API using the `/api/v2/` endpoint.\n\n\n    This documentation is generated from the\n\n    [InfluxDB OpenAPI\n    specification](https://raw.githubusercontent.com/influxdata/openapi/master/contracts/ref/cloud.yml).\nopenapi: 3.0.0\npaths:\n  /api/v2:\n    get:\n      operationId: GetRoutes\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Routes'\n          description: All routes\n      summary: List all top level routes\n      tags:\n        - Routes\n        - System information endpoints\n  /api/v2/authorizations:\n    get:\n      description: \u003e\n        Retrieves a list of authorizations.\n\n\n        To limit which authorizations are returned, pass query parameters in\n        your request.\n\n        If no query parameters are passed, InfluxDB returns all authorizations\n        for the organization.\n\n\n        #### InfluxDB Cloud\n\n\n        - InfluxDB Cloud doesn't expose [API\n        token](/influxdb/cloud/reference/glossary/#token)\n          values in `GET /api/v2/authorizations` responses;\n          returns `token: redacted` for all authorizations.\n\n        #### Required permissions for InfluxDB Cloud\n\n\n        - `read-authorizations`\n\n\n        #### Related guides\n\n\n        - [View tokens](/influxdb/cloud/security/tokens/view-tokens/).\n      operationId: GetAuthorizations\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            A user ID.\n            Only returns authorizations scoped to this user.\n          in: query\n          name: userID\n          schema:\n            type: string\n        - description: |\n            A user name.\n            Only returns authorizations scoped to this user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: |\n            An organization ID.\n            Only returns authorizations that belong to this organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: |\n            An organization name.\n            Only returns authorizations that belong to this organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: |\n            A token value.\n            Only returns the authorization that has this token.\n          in: query\n          name: token\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorizations'\n          description: Success. The response body contains a list of authorizations.\n        '400':\n          $ref: '#/components/responses/GeneralServerError'\n          description: Invalid request\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: List authorizations\n      tags:\n        - Authorizations\n    post:\n      description: \u003e\n        Creates an authorization.\n\n\n        Use this endpoint to create an authorization, which generates an API\n        token\n\n        with permissions to `read` or `write` to a specific resource or `type`\n        of resource.\n\n        The response contains the new authorization with the generated API\n        token.\n\n\n        Keep the following in mind when creating and updating authorizations:\n\n\n        - To apply a permission to a specific resource, specify the resource\n        `id` field.\n\n        - To apply a permission to all resources with the type, omit the\n        resource `id`.\n\n        - To scope an authorization to a specific user, provide the `userID`\n        property.\n\n\n        #### Limitations\n\n\n        To follow best practices for secure API token generation and retrieval,\n\n        InfluxDB Cloud enforces access restrictions on API tokens.\n\n\n        - InfluxDB Cloud only allows access to the API token value immediately\n        after the authorization is created.\n\n        - You can’t change access (read/write) permissions for an API token\n        after it’s created.\n\n        - Tokens stop working when the user who created the token is deleted.\n\n\n        We recommend the following for managing your tokens:\n\n\n        - Create a generic user to create and manage tokens for writing data.\n\n        - Store your tokens in a secure password vault for future access.\n\n\n        #### Related guides\n\n\n        - [Create a token](/influxdb/cloud/security/tokens/create-token/).\n      operationId: PostAuthorizations\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Authorization'\n        description: The authorization to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: Authorization created\n        '400':\n          $ref: '#/components/responses/GeneralServerError'\n          description: Invalid request\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Create an authorization\n      tags:\n        - Authorizations\n      x-codeSample:\n        - label: 'cURL: Create auth to read all buckets'\n          lang: Shell\n          source: |\n            curl --request POST \\\n            \"http://localhost:8086/api/v2/authorizations\" \\\n            --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n            --header 'Content-Type: application/json' \\\n            --data @- \u003c\u003c EOF\n              {\n                \"orgID\": \"INFLUX_ORG_ID\",\n                \"description\": \"iot_users read buckets\",\n                \"permissions\": [\n                  {\"action\": \"read\", \"resource\": {\"type\": \"buckets\"}}\n                ]\n              }\n            EOF\n        - label: 'cURL: Create auth scoped to a user'\n          lang: Shell\n          source: |\n            curl --request POST \\\n            \"http://localhost:8086/api/v2/authorizations\" \\\n            --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n            --header 'Content-Type: application/json' \\\n            --data @- \u003c\u003c EOF\n              {\n                \"orgID\": \"INFLUX_ORG_ID\",\n                \"userID\": \"INFLUX_USER_ID\",\n                \"description\": \"iot_user write to bucket\",\n                \"permissions\": [\n                  {\"action\": \"write\", \"resource\": {\"type\": \"buckets\", \"id: \"INFLUX_BUCKET_ID\"}}\n                ]\n              }\n            EOF\n  /api/v2/authorizations/{authID}:\n    delete:\n      operationId: DeleteAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The identifier of the authorization to delete.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Authorization deleted\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Delete an authorization\n      tags:\n        - Authorizations\n    get:\n      operationId: GetAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The identifier of the authorization to get.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: Authorization details\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Retrieve an authorization\n      tags:\n        - Authorizations\n    patch:\n      description: Update an authorization's status to `active` or `inactive`.\n      operationId: PatchAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The identifier of the authorization to update.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationUpdateRequest'\n        description: The updated Authorization object.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: The updated authorization.\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Update authorization status\n      tags:\n        - Authorizations\n  /api/v2/buckets:\n    get:\n      description: \u003e\n        Retrieves a list of\n        [buckets](/influxdb/cloud/reference/glossary/#bucket).\n\n\n        To limit which buckets are returned, pass query parameters in your\n        request.\n\n        If no query parameters are passed, InfluxDB returns all buckets up to\n        the\n\n        default `limit`.\n\n\n        #### Limitations\n\n\n        - Paging with an `offset` greater than the number of records will result\n        in\n\n        an empty list of buckets--for example:\n\n          The following request is paging to the 50th record, but the user only has\n          10 buckets.\n\n          ```sh\n          $ curl --request GET \"INFLUX_URL/api/v2/scripts?limit=1\u0026offset=50\"\n\n          $ {\n              \"links\": {\n                  \"prev\": \"/api/v2/buckets?descending=false\\u0026limit=1\\u0026offset=49\\u0026orgID=ORG_ID\",\n                  \"self\": \"/api/v2/buckets?descending=false\\u0026limit=1\\u0026offset=50\\u0026orgID=ORG_ID\"\n              },\n              \"buckets\": []\n            }\n          ```\n\n        #### Related Guides\n\n\n        - [Manage buckets](/influxdb/cloud/organizations/buckets/)\n      operationId: GetBuckets\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/After'\n        - description: |\n            Organization name.\n            The name of the organization.\n\n            #### InfluxDB Cloud\n\n             - Doesn't use `org` or `orgID`.\n             - Creates a bucket in the organization associated with the authorization (API token).\n\n             #### InfluxDB OSS\n\n             - Accepts either `org` or `orgID`.\n             - InfluxDB creates the bucket within this organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: |\n            Organization ID.\n            The organization ID.\n\n            #### InfluxDB Cloud\n\n             - Doesn't use `org` or `orgID`.\n             - Creates a bucket in the organization associated with the authorization (API token).\n\n             #### InfluxDB OSS\n\n             - Accepts either `org` or `orgID`.\n             - InfluxDB creates the bucket within this organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: |\n            Bucket name.\n            Only returns buckets with this specific name.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: |\n            Bucket ID.\n            Only returns the bucket with this ID.\n          in: query\n          name: id\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    buckets:\n                      - createdAt: '2022-03-15T17:22:33.72617939Z'\n                        description: System bucket for monitoring logs\n                        id: 77ca9dace40a9bfc\n                        labels: []\n                        links:\n                          labels: /api/v2/buckets/77ca9dace40a9bfc/labels\n                          members: /api/v2/buckets/77ca9dace40a9bfc/members\n                          org: /api/v2/orgs/INFLUX_ORG_ID\n                          owners: /api/v2/buckets/77ca9dace40a9bfc/owners\n                          self: /api/v2/buckets/77ca9dace40a9bfc\n                          write: /api/v2/write?org=ORG_ID\u0026bucket=77ca9dace40a9bfc\n                        name: _monitoring\n                        orgID: INFLUX_ORG_ID\n                        retentionRules:\n                          - everySeconds: 604800\n                            type: expire\n                        schemaType: implicit\n                        type: system\n                        updatedAt: '2022-03-15T17:22:33.726179487Z'\n                    links:\n                      self: \u003e-\n                        /api/v2/buckets?descending=false\u0026limit=20\u0026name=_monitoring\u0026offset=0\u0026orgID=ORG_ID\n              schema:\n                $ref: '#/components/schemas/Buckets'\n          description: |\n            Success.\n            The response body contains a list of buckets.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List buckets\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request GET\n            \"http://localhost:8086/api/v2/buckets?name=_monitoring\" \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\"\n    post:\n      description: \u003e\n        Creates a [bucket](/influxdb/cloud/reference/glossary/#bucket)\n\n        and returns the created bucket along with metadata. The default data\n\n        [retention period](/influxdb/cloud/reference/glossary/#retention-period)\n\n        is 30 days.\n\n\n        #### InfluxDB OSS\n\n\n        - A single InfluxDB OSS instance supports active writes or queries for\n\n        approximately 20 buckets across all organizations at a given time.\n        Reading\n\n        or writing to more than 20 buckets at a time can adversely affect\n\n        performance.\n\n\n        #### Limitations\n\n\n        - InfluxDB Cloud Free Plan allows users to create up to two buckets.\n\n        Exceeding the bucket quota will result in an HTTP `403` status code.\n\n        For additional information regarding InfluxDB Cloud offerings, see\n\n        [InfluxDB Cloud\n        Pricing](https://www.influxdata.com/influxdb-cloud-pricing/).\n\n\n        #### Related Guides\n\n\n        - [Create bucket](/influxdb/cloud/organizations/buckets/create-bucket/)\n\n        - [Create bucket CLI\n        reference](/influxdb/cloud/reference/cli/influx/bucket/create)\n      operationId: PostBuckets\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostBucketRequest'\n        description: Bucket to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    createdAt: '2022-08-03T23:04:41.073704121Z'\n                    description: bucket holding air sensor data\n                    id: 37407e232b3911d8\n                    labels: []\n                    links:\n                      labels: /api/v2/buckets/37407e232b3911d8/labels\n                      members: /api/v2/buckets/37407e232b3911d8/members\n                      org: /api/v2/orgs/INFLUX_ORG_ID\n                      owners: /api/v2/buckets/37407e232b3911d8/owners\n                      self: /api/v2/buckets/37407e232b3911d8\n                      write: /api/v2/write?org=INFLUX_ORG_ID\u0026bucket=37407e232b3911d8\n                    name: air_sensor\n                    orgID: INFLUX_ORG_ID\n                    retentionRules:\n                      - everySeconds: 2592000\n                        type: expire\n                    schemaType: implicit\n                    type: user\n                    updatedAt: '2022-08-03T23:04:41.073704228Z'\n              schema:\n                $ref: '#/components/schemas/Bucket'\n          description: |\n            Success.\n            The bucket was created.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '403':\n          content:\n            application/json:\n              examples:\n                quotaExceeded:\n                  summary: Bucket quota exceeded\n                  value:\n                    code: forbidden\n                    message: creating bucket would exceed quota\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Forbidden.\n            The bucket quota is exceeded.\n          headers:\n            X-Platform-Error-Code:\n              description: |\n                The reason for the error.\n              schema:\n                example: forbidden\n                type: string\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Unprocessable Entity.\n            The request body failed validation.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a bucket\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: |\n            curl --request POST \"http://localhost:8086/api/v2/buckets \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"name\": \"air_sensor\",\n                  \"description\": \"bucket holding air sensor data\",\n                  \"orgID\": \"INFLUX_ORG_ID\",\n                  \"retentionRules\": [\n                      {\n                          \"type\": \"expire\",\n                          \"everySeconds\": 2592000,\n                      }\n                  ]\n                }'\n  /api/v2/buckets/{bucketID}:\n    delete:\n      description: \u003e\n        Deletes a bucket and all associated records.\n\n\n        #### InfluxDB Cloud\n\n\n        - Does the following when you send a delete request:\n\n          1. Validates the request and queues the delete.\n          2. Returns an HTTP `204` status code if queued; _error_ otherwise.\n          3. Handles the delete asynchronously.\n\n        #### InfluxDB OSS\n\n\n        - Validates the request, handles the delete synchronously,\n\n        and then responds with success or failure.\n\n\n        #### Limitations\n\n\n        - Only one bucket can be deleted per request.\n\n\n        #### Related Guides\n\n\n        - [Delete a\n        bucket](/influxdb/cloud/organizations/buckets/delete-bucket/#delete-a-bucket-in-the-influxdb-ui)\n      operationId: DeleteBucketsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            Bucket ID.\n            The ID of the bucket to delete.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success.\n\n            #### InfluxDB Cloud\n              - The bucket is queued for deletion.\n\n            #### InfluxDB OSS\n              - The bucket is deleted.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidID:\n                  summary: |\n                    Invalid ID.\n                  value:\n                    code: invalid\n                    message: id must have a length of 16 bytes\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad Request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested bucket was not found.\n                  value:\n                    code: not found\n                    message: bucket not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            Bucket not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a bucket\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request DELETE\n            \"http://localhost:8086/api/v2/buckets/BUCKET_ID\" \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header 'Accept: application/json'\n    get:\n      description: |\n        Retrieves a bucket.\n\n        Use this endpoint to retrieve information for a specific bucket.\n      operationId: GetBucketsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the bucket to retrieve.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    createdAt: '2022-08-03T23:04:41.073704121Z'\n                    description: bucket for air sensor data\n                    id: 37407e232b3911d8\n                    labels: []\n                    links:\n                      labels: /api/v2/buckets/37407e232b3911d8/labels\n                      members: /api/v2/buckets/37407e232b3911d8/members\n                      org: /api/v2/orgs/INFLUX_ORG_ID\n                      owners: /api/v2/buckets/37407e232b3911d8/owners\n                      self: /api/v2/buckets/37407e232b3911d8\n                      write: /api/v2/write?org=INFLUX_ORG_ID\u0026bucket=37407e232b3911d8\n                    name: air-sensor\n                    orgID: bea7ea952287f70d\n                    retentionRules:\n                      - everySeconds: 2592000\n                        type: expire\n                    schemaType: implicit\n                    type: user\n                    updatedAt: '2022-08-03T23:04:41.073704228Z'\n              schema:\n                $ref: '#/components/schemas/Bucket'\n          description: |\n            Success.\n            The response body contains the bucket information.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested bucket wasn't found.\n                  value:\n                    code: not found\n                    message: bucket not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            Bucket not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a bucket\n      tags:\n        - Buckets\n    patch:\n      description: \u003e\n        Updates a bucket.\n\n\n        Use this endpoint to update properties\n\n        (`name`, `description`, and `retentionRules`) of a bucket.\n\n\n        #### InfluxDB Cloud\n\n\n        - Requires the `retentionRules` property in the request body. If you\n        don't\n\n        provide `retentionRules`, InfluxDB responds with an HTTP `403` status\n        code.\n\n\n        #### InfluxDB OSS\n\n\n        - Doesn't require `retentionRules`.\n\n\n        #### Related Guides\n\n\n        - [Update a\n        bucket](/influxdb/cloud/organizations/buckets/update-bucket/)\n      operationId: PatchBucketsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The bucket ID.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchBucketRequest'\n        description: The bucket update to apply.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    createdAt: '2022-08-03T23:04:41.073704121Z'\n                    description: bucket holding air sensor data\n                    id: 37407e232b3911d8\n                    labels: []\n                    links:\n                      labels: /api/v2/buckets/37407e232b3911d8/labels\n                      members: /api/v2/buckets/37407e232b3911d8/members\n                      org: /api/v2/orgs/INFLUX_ORG_ID\n                      owners: /api/v2/buckets/37407e232b3911d8/owners\n                      self: /api/v2/buckets/37407e232b3911d8\n                      write: /api/v2/write?org=INFLUX_ORG_ID\u0026bucket=37407e232b3911d8\n                    name: air_sensor\n                    orgID: INFLUX_ORG_ID\n                    retentionRules:\n                      - everySeconds: 2592000\n                        type: expire\n                    schemaType: implicit\n                    type: user\n                    updatedAt: '2022-08-07T22:49:49.422962913Z'\n              schema:\n                $ref: '#/components/schemas/Bucket'\n          description: An updated bucket\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidJSONStringValue:\n                  description: \u003e\n                    If the request body contains invalid JSON, InfluxDB returns\n                    `invalid`\n\n                    with detail about the problem.\n                  summary: Invalid JSON\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      invalid json: invalid character '\\'' looking for beginning\n                      of value\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad Request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '403':\n          content:\n            application/json:\n              examples:\n                invalidRetention:\n                  summary: \u003e\n                    The retention policy provided exceeds the max retention for\n                    the\n\n                    organization.\n                  value:\n                    code: forbidden\n                    message: provided retention exceeds orgs maximum retention duration\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Forbidden.\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested bucket wasn't found.\n                  value:\n                    code: not found\n                    message: bucket not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            Bucket not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a bucket\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request PATCH \"http://localhost:8086/api/v2/buckets/BUCKET_ID\n            \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"name\": \"air_sensor\",\n                  \"description\": \"bucket holding air sensor data\",\n                  \"retentionRules\": [\n                      {\n                          \"type\": \"expire\",\n                          \"everySeconds\": 2592000\n                      }\n                  ]\n                }'\n  /api/v2/buckets/{bucketID}/labels:\n    get:\n      description: \u003e\n        Retrieves a list of all labels for a bucket.\n\n\n        Labels are objects that contain `labelID`, `name`, `description`, and\n        `color`\n\n        key-value pairs. They may be used for grouping and filtering InfluxDB\n\n        resources.\n\n        Labels are also capable of grouping across different resources--for\n        example,\n\n        you can apply a label named `air_sensor` to a bucket and a task to\n        quickly\n\n        organize resources.\n\n\n        #### Related guides\n\n\n        - Use the [`/api/v2/labels` InfluxDB API endpoint](#tag/Labels) to\n        retrieve and manage labels.\n\n        - [Manage labels in the InfluxDB\n        UI](/influxdb/cloud/visualize-data/labels/)\n      operationId: GetBucketsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the bucket to retrieve labels for.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    labels:\n                      - id: 09cbd068e7ebb000\n                        name: production_buckets\n                        orgID: INFLUX_ORG_ID\n                    links:\n                      self: /api/v2/labels\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: |\n            Success.\n            The response body contains a list of all labels for the bucket.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a bucket\n      tags:\n        - Buckets\n    post:\n      description: \u003e\n        Adds a label to a bucket and returns the new label information.\n\n\n        Labels are objects that contain `labelID`, `name`, `description`, and\n        `color`\n\n        key-value pairs. They may be used for grouping and filtering across one\n        or\n\n        more kinds of **resources**--for example, you can apply a label named\n\n        `air_sensor` to a bucket and a task to quickly organize resources.\n\n\n        #### Limitations\n\n\n        - Before adding a label to a bucket, you must create the label if you\n          haven't already. To create a label with the InfluxDB API, send a `POST`\n          request to the [`/api/v2/labels` endpoint](#operation/PostLabels)).\n\n        #### Related guides\n\n\n        - Use the [`/api/v2/labels` InfluxDB API endpoint](#tag/Labels) to\n        retrieve and manage labels.\n\n        - [Manage labels in the InfluxDB\n        UI](/influxdb/cloud/visualize-data/labels/)\n      operationId: PostBucketsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            Bucket ID.\n            The ID of the bucket to label.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: An object that contains a _`labelID`_ to add to the bucket.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    label:\n                      id: 09cbd068e7ebb000\n                      name: production_buckets\n                      orgID: INFLUX_ORG_ID\n                    links:\n                      self: /api/v2/labels\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: |\n            Success.\n            The response body contains the label information.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n          examples:\n            invalidRequest:\n              summary: The `labelID` is missing from the request body.\n              value:\n                code: invalid\n                message: label id is required\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '422':\n          content:\n            application/json:\n              examples:\n                conflictingResource:\n                  summary: |\n                    Label already exists on the resource.\n                  value:\n                    code: conflict\n                    message: Cannot add label, label already exists on resource\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Unprocessable entity.\n            Label already exists on the resource.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a bucket\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            \"http://localhost:8086/api/v2/buckets/BUCKETS_ID/labels \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"labelID\": \"09cbd068e7ebb000\"\n                }'\n  /api/v2/buckets/{bucketID}/labels/{labelID}:\n    delete:\n      operationId: DeleteBucketsIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The bucket ID.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bucket not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a label from a bucket\n      tags:\n        - Buckets\n  /api/v2/buckets/{bucketID}/members:\n    get:\n      description: |\n        Retrieves a list of all users for a bucket.\n\n        InfluxDB [users](/influxdb/cloud/reference/glossary/#user) have\n        permission to access InfluxDB.\n\n        [Members](/influxdb/cloud/reference/glossary/#member) are users in\n        an organization with access to the specified resource.\n\n        Use this endpoint to retrieve all users with access to a bucket.\n\n        #### Related guides\n\n        - [Manage users](/influxdb/cloud/users/)\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: GetBucketsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the bucket to retrieve users for.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    links:\n                      self: /api/v2/buckets/37407e232b3911d8/members\n                    users:\n                      - id: 791df274afd48a83\n                        links:\n                          self: /api/v2/users/791df274afd48a83\n                        name: example_user_1\n                        role: member\n                        status: active\n                      - id: 09cfb87051cbe000\n                        links:\n                          self: /api/v2/users/09cfb87051cbe000\n                        name: example_user_2\n                        role: owner\n                        status: active\n              schema:\n                $ref: '#/components/schemas/ResourceMembers'\n          description: |\n            Success.\n            The response body contains a list of all users for the bucket.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all users with member privileges for a bucket\n      tags:\n        - Buckets\n    post:\n      description: |\n        Add a user to a bucket and return the new user information.\n\n        InfluxDB [users](/influxdb/cloud/reference/glossary/#user) have\n        permission to access InfluxDB.\n\n        [Members](/influxdb/cloud/reference/glossary/#member) are users in\n        an organization.\n\n        Use this endpoint to give a user member privileges to a bucket.\n\n        #### Related guides\n\n        - [Manage users](/influxdb/cloud/users/)\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: PostBucketsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the bucket to retrieve users for.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: A user to add as a member to the bucket.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    id: 09cfb87051cbe000\n                    links:\n                      self: /api/v2/users/09cfb87051cbe000\n                    name: example_user_1\n                    role: member\n                    status: active\n              schema:\n                $ref: '#/components/schemas/ResourceMember'\n          description: |\n            Success.\n            The response body contains the user information.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n          examples:\n            invalidRequest:\n              summary: The `userID` is missing from the request body.\n              value:\n                code: invalid\n                message: user id missing or invalid\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a member to a bucket\n      tags:\n        - Buckets\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            \"http://localhost:8086/api/v2/buckets/BUCKET_ID/members \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"id\": \"09cfb87051cbe000\"\n                }\n  /api/v2/buckets/{bucketID}/members/{userID}:\n    delete:\n      description: \u003e\n        Removes a member from a bucket.\n\n\n        Use this endpoint to remove a user's member privileges from a bucket.\n        This\n\n        removes the user's `read` and `write` permissions for the bucket.\n\n\n        #### Related guides\n\n\n        - [Manage users](/influxdb/cloud/users/)\n\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: DeleteBucketsIDMembersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the user to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: |\n            The ID of the bucket to remove a user from.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success.\n            The user is no longer a member of the bucket.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove a member from a bucket\n      tags:\n        - Buckets\n  /api/v2/buckets/{bucketID}/owners:\n    get:\n      operationId: GetBucketsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The bucket ID.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwners'\n          description: A list of bucket owners\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all owners of a bucket\n      tags:\n        - Buckets\n    post:\n      operationId: PostBucketsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The bucket ID.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: User to add as owner\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwner'\n          description: Success. The user is an owner of the bucket\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add an owner to a bucket\n      tags:\n        - Buckets\n  /api/v2/buckets/{bucketID}/owners/{userID}:\n    delete:\n      operationId: DeleteBucketsIDOwnersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the owner to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The bucket ID.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Owner removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove an owner from a bucket\n      tags:\n        - Buckets\n  /api/v2/buckets/{bucketID}/schema/measurements:\n    get:\n      operationId: getMeasurementSchemas\n      parameters:\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: The name of the measurement to return schemas for.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: The identifier of the bucket.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchemaList'\n          description: A list of measurement schemas returning summary information.\n          headers:\n            ETag:\n              description: The current version of the bucket schema\n              schema:\n                type: string\n        '404':\n          $ref: '#/components/responses/GeneralServerError'\n          description: Bucket not found\n      summary: List all measurement schemas of a bucket\n      tags:\n        - Bucket Schemas\n    post:\n      operationId: createMeasurementSchema\n      parameters:\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: The identifier of the bucket.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaCreateRequest'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n          description: The created measurement schema.\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n        '400':\n          content:\n            application/json:\n              examples:\n                badNameExample:\n                  description: \u003e-\n                    The error returned when the name is invalid, such as too few\n                    or too many characters or the name contains non-printable\n                    ASCII or is not valid UTF-8.\n                  summary: Invalid name\n                  value:\n                    code: invalid\n                    message: name is invalid\n                duplicateColumnNamesExample:\n                  description: \u003e-\n                    The error returned when the request body contains duplicate\n                    column names.\n                  summary: Duplicate column names\n                  value:\n                    code: invalid\n                    message: Duplicate column names\n                missingColumnsExample:\n                  description: \u003e-\n                    The error returned when the request body is missing the\n                    columns property.\n                  summary: Missing columns\n                  value:\n                    code: invalid\n                    message: columns is required\n                missingFieldExample:\n                  description: \u003e-\n                    The error returned when the request body is missing at least\n                    one field type column.\n                  summary: Missing field\n                  value:\n                    code: invalid\n                    message: At least one field column is required\n                missingTimestampExample:\n                  description: \u003e-\n                    The error returned when the request body is missing a\n                    timestamp type column.\n                  summary: Missing timestamp\n                  value:\n                    code: invalid\n                    message: Timestamp column is required\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Client error with create request\n      summary: Create a measurement schema for a bucket\n      tags:\n        - Bucket Schemas\n    summary: Bucket schemas\n  /api/v2/buckets/{bucketID}/schema/measurements/{measurementID}:\n    get:\n      operationId: getMeasurementSchema\n      parameters:\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: The identifier of the bucket.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n        - description: The identifier of the measurement.\n          in: path\n          name: measurementID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n          description: Schema definition for a single measurement\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n      summary: Retrieve measurement schema information\n      tags:\n        - Bucket Schemas\n    patch:\n      operationId: updateMeasurementSchema\n      parameters:\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: The identifier of the bucket.\n          in: path\n          name: bucketID\n          required: true\n          schema:\n            type: string\n        - description: The identifier of the measurement.\n          in: path\n          name: measurementID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaUpdateRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n          description: The updated measurement schema\n        '400':\n          content:\n            application/json:\n              examples:\n                missingColumnsExample:\n                  description: \u003e-\n                    The error returned when the request body does not contain\n                    all the columns from the source.\n                  summary: Deleted columns\n                  value:\n                    code: invalid\n                    message: Unable to delete columns from schema\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Client error updating measurement schema\n      summary: Update a measurement schema\n      tags:\n        - Bucket Schemas\n    summary: Bucket Schema\n  /api/v2/checks:\n    get:\n      operationId: GetChecks\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n        - description: Only show checks that belong to a specific organization ID.\n          in: query\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Checks'\n          description: A list of checks\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all checks\n      tags:\n        - Checks\n    post:\n      operationId: CreateCheck\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostCheck'\n        description: Check to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Check'\n          description: Check created\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add new check\n      tags:\n        - Checks\n  /api/v2/checks/{checkID}:\n    delete:\n      operationId: DeleteChecksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The check was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a check\n      tags:\n        - Checks\n    get:\n      operationId: GetChecksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Check'\n          description: The check requested\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a check\n      tags:\n        - Checks\n    patch:\n      operationId: PatchChecksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckPatch'\n        description: Check update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Check'\n          description: An updated check\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The check was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a check\n      tags:\n        - Checks\n    put:\n      operationId: PutChecksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Check'\n        description: Check update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Check'\n          description: An updated check\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The check was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a check\n      tags:\n        - Checks\n  /api/v2/checks/{checkID}/labels:\n    get:\n      operationId: GetChecksIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a check\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a check\n      tags:\n        - Checks\n    post:\n      operationId: PostChecksIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The label was added to the check\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a check\n      tags:\n        - Checks\n  /api/v2/checks/{checkID}/labels/{labelID}:\n    delete:\n      operationId: DeleteChecksIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Check or label not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete label from a check\n      tags:\n        - Checks\n  /api/v2/checks/{checkID}/query:\n    get:\n      operationId: GetChecksIDQuery\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The check ID.\n          in: path\n          name: checkID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FluxResponse'\n          description: The check query requested\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid request\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Check not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a check query\n      tags:\n        - Checks\n  /api/v2/dashboards:\n    get:\n      operationId: GetDashboards\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Descending'\n        - description: The non-zero number of dashboards to return\n          in: query\n          name: limit\n          schema:\n            default: 20\n            maximum: 100\n            minimum: -1\n            type: integer\n        - description: \u003e-\n            A user identifier. Returns only dashboards where this user has the\n            `owner` role.\n          in: query\n          name: owner\n          schema:\n            type: string\n        - description: The column to sort by.\n          in: query\n          name: sortBy\n          schema:\n            enum:\n              - ID\n              - CreatedAt\n              - UpdatedAt\n            type: string\n        - description: \u003e-\n            A list of dashboard identifiers. Returns only the listed dashboards.\n            If both `id` and `owner` are specified, only `id` is used.\n          in: query\n          name: id\n          schema:\n            items:\n              type: string\n            type: array\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboards'\n          description: All dashboards\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all dashboards\n      tags:\n        - Dashboards\n    post:\n      operationId: PostDashboards\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDashboardRequest'\n        description: Dashboard to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Dashboard'\n                  - $ref: '#/components/schemas/DashboardWithViewProperties'\n          description: Added dashboard\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}:\n    delete:\n      operationId: DeleteDashboardsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a dashboard\n      tags:\n        - Dashboards\n    get:\n      operationId: GetDashboardsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: If `properties`, includes the cell view properties in the response.\n          in: query\n          name: include\n          required: false\n          schema:\n            enum:\n              - properties\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Dashboard'\n                  - $ref: '#/components/schemas/DashboardWithViewProperties'\n          description: Retrieve a single dashboard\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a dashboard\n      tags:\n        - Dashboards\n    patch:\n      operationId: PatchDashboardsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                cells:\n                  $ref: '#/components/schemas/CellWithViewProperties'\n                  description: \u003e-\n                    optional, when provided will replace all existing cells with\n                    the cells provided\n                description:\n                  description: optional, when provided will replace the description\n                  type: string\n                name:\n                  description: optional, when provided will replace the name\n                  type: string\n              title: PatchDashboardRequest\n              type: object\n        description: Patching of a dashboard\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n          description: Updated dashboard\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/cells:\n    post:\n      operationId: PostDashboardsIDCells\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCell'\n        description: Cell that will be added\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cell'\n          description: Cell successfully added\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a dashboard cell\n      tags:\n        - Cells\n        - Dashboards\n    put:\n      description: \u003e-\n        Replaces all cells in a dashboard. This is used primarily to update the\n        positional information of all cells.\n      operationId: PutDashboardsIDCells\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cells'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n          description: Replaced dashboard cells\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Replace cells in a dashboard\n      tags:\n        - Cells\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/cells/{cellID}:\n    delete:\n      operationId: DeleteDashboardsIDCellsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to delete.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the cell to delete.\n          in: path\n          name: cellID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Cell successfully deleted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cell or dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a dashboard cell\n      tags:\n        - Cells\n        - Dashboards\n    patch:\n      description: \u003e-\n        Updates the non positional information related to a cell. Updates to a\n        single cell's positional data could cause grid conflicts.\n      operationId: PatchDashboardsIDCellsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the cell to update.\n          in: path\n          name: cellID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CellUpdate'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cell'\n          description: Updated dashboard cell\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cell or dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update the non-positional information related to a cell\n      tags:\n        - Cells\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/cells/{cellID}/view:\n    get:\n      operationId: GetDashboardsIDCellsIDView\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: The cell ID.\n          in: path\n          name: cellID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/View'\n          description: A dashboard cells view\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cell or dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve the view for a cell\n      tags:\n        - Cells\n        - Dashboards\n        - Views\n    patch:\n      operationId: PatchDashboardsIDCellsIDView\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the dashboard to update.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the cell to update.\n          in: path\n          name: cellID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/View'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/View'\n          description: Updated cell view\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cell or dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update the view for a cell\n      tags:\n        - Cells\n        - Dashboards\n        - Views\n  /api/v2/dashboards/{dashboardID}/labels:\n    get:\n      operationId: GetDashboardsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a dashboard\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a dashboard\n      tags:\n        - Dashboards\n    post:\n      operationId: PostDashboardsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The label added to the dashboard\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/labels/{labelID}:\n    delete:\n      operationId: DeleteDashboardsIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Dashboard not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a label from a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/members:\n    get:\n      operationId: GetDashboardsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMembers'\n          description: A list of users who have member privileges for a dashboard\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all dashboard members\n      tags:\n        - Dashboards\n    post:\n      operationId: PostDashboardsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: User to add as member\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMember'\n          description: Added to dashboard members\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a member to a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/members/{userID}:\n    delete:\n      operationId: DeleteDashboardsIDMembersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the member to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Member removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove a member from a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/owners:\n    get:\n      operationId: GetDashboardsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwners'\n          description: A list of users who have owner privileges for a dashboard\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all dashboard owners\n      tags:\n        - Dashboards\n    post:\n      operationId: PostDashboardsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: User to add as owner\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwner'\n          description: Added to dashboard owners\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add an owner to a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dashboards/{dashboardID}/owners/{userID}:\n    delete:\n      operationId: DeleteDashboardsIDOwnersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the owner to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The dashboard ID.\n          in: path\n          name: dashboardID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Owner removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove an owner from a dashboard\n      tags:\n        - Dashboards\n  /api/v2/dbrps:\n    get:\n      operationId: GetDBRPs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: Specifies the organization ID to filter on\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: Specifies the organization name to filter on\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: Specifies the mapping ID to filter on\n          in: query\n          name: id\n          schema:\n            type: string\n        - description: Specifies the bucket ID to filter on\n          in: query\n          name: bucketID\n          schema:\n            type: string\n        - description: Specifies filtering on default\n          in: query\n          name: default\n          schema:\n            type: boolean\n        - description: Specifies the database to filter on\n          in: query\n          name: db\n          schema:\n            type: string\n        - description: Specifies the retention policy to filter on\n          in: query\n          name: rp\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DBRPs'\n          description: Success. Returns a list of database retention policy mappings.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request. The request has one or more invalid parameters.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List database retention policy mappings\n      tags:\n        - DBRPs\n    post:\n      operationId: PostDBRP\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DBRPCreate'\n        description: The database retention policy mapping to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DBRP'\n          description: Created. Returns the created database retention policy mapping.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad request. The mapping in the request has one or more invalid IDs.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a database retention policy mapping\n      tags:\n        - DBRPs\n  /api/v2/dbrps/{dbrpID}:\n    delete:\n      operationId: DeleteDBRPID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: Specifies the organization ID of the mapping\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: Specifies the organization name of the mapping\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The database retention policy mapping\n          in: path\n          name: dbrpID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: if any of the IDs passed is invalid\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a database retention policy\n      tags:\n        - DBRPs\n    get:\n      operationId: GetDBRPsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: Specifies the organization ID of the mapping\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: Specifies the organization name of the mapping\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The database retention policy mapping ID\n          in: path\n          name: dbrpID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DBRPGet'\n          description: The database retention policy requested\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: if any of the IDs passed is invalid\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a database retention policy mapping\n      tags:\n        - DBRPs\n    patch:\n      operationId: PatchDBRPID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: Specifies the organization ID of the mapping\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: Specifies the organization name of the mapping\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The database retention policy mapping.\n          in: path\n          name: dbrpID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DBRPUpdate'\n        description: Database retention policy update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DBRPGet'\n          description: An updated mapping\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: if any of the IDs passed is invalid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The mapping was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a database retention policy mapping\n      tags:\n        - DBRPs\n  /api/v2/delete:\n    post:\n      description: \u003e\n        Deletes data from a bucket.\n\n\n        Use this endpoint to delete points from a bucket in a specified time\n        range.\n\n\n        #### InfluxDB Cloud\n\n\n        - Does the following when you send a delete request:\n\n          1. Validates the request and queues the delete.\n          2. Returns _success_ if queued; _error_ otherwise.\n          3. Handles the delete asynchronously.\n\n        #### InfluxDB OSS\n\n\n        - Validates the request, handles the delete synchronously,\n          and then responds with success or failure.\n\n        #### Required permissions\n\n\n        - `write-buckets` or `write-bucket BUCKET_ID`.\n\n          `BUCKET_ID` is the ID of the destination bucket.\n\n        #### Rate limits (with InfluxDB Cloud)\n\n\n        `write` rate limits apply.\n\n        For more information, see [limits and adjustable\n        quotas](/influxdb/cloud/account-management/limits/).\n\n\n        #### Related guides\n\n\n        - [Delete data](/influxdb/cloud/write-data/delete-data/).\n\n        - Learn how to use [delete predicate\n        syntax](/influxdb/cloud/reference/syntax/delete-predicate/).\n\n        - Learn how InfluxDB handles [deleted\n        tags](https://docs.influxdata.com/flux/v0.x/stdlib/influxdata/influxdb/schema/measurementtagkeys/)\n          and [deleted fields](https://docs.influxdata.com/flux/v0.x/stdlib/influxdata/influxdb/schema/measurementfieldkeys/).\n      operationId: PostDelete\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: \u003e\n            The organization to delete data from.\n\n            If you pass both `orgID` and `org`, they must both be valid.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't require `org` or `orgID`.\n\n            - Deletes data from the bucket in the organization associated with\n            the authorization (API token).\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n          in: query\n          name: org\n          schema:\n            description: The organization name or ID.\n            type: string\n        - description: \u003e\n            The name or ID of the bucket to delete data from.\n\n            If you pass both `bucket` and `bucketID`, `bucketID` takes\n            precedence.\n          in: query\n          name: bucket\n          schema:\n            description: The bucket name or ID.\n            type: string\n        - description: \u003e\n            The ID of the organization to delete data from.\n\n            If you pass both `orgID` and `org`, they must both be valid.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't require `org` or `orgID`.\n\n            - Deletes data from the bucket in the organization associated with\n            the authorization (API token).\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n          in: query\n          name: orgID\n          schema:\n            description: The organization ID.\n            type: string\n        - description: \u003e\n            The ID of the bucket to delete data from.\n\n            If you pass both `bucket` and `bucketID`, `bucketID` takes\n            precedence.\n          in: query\n          name: bucketID\n          schema:\n            description: The bucket ID.\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeletePredicateRequest'\n        description: \u003e\n          Time range parameters and an optional **delete predicate expression**.\n\n\n          To select points to delete within the specified time range, pass a\n\n          **delete predicate expression** in the `predicate` property of the\n          request body.\n\n          If you don't pass a `predicate`, InfluxDB deletes all data with\n          timestamps\n\n          in the specified time range.\n\n\n          #### Related guides\n\n\n          - [Delete data](/influxdb/cloud/write-data/delete-data/).\n\n          - Learn how to use [delete predicate\n          syntax](/influxdb/cloud/reference/syntax/delete-predicate/).\n        required: true\n      responses:\n        '204':\n          description: \u003e\n            Success.\n\n\n            #### InfluxDB Cloud\n\n\n            - Validated and queued the request.\n\n            - Handles the delete asynchronously - the deletion might not have\n            completed yet.\n\n\n            An HTTP `2xx` status code acknowledges that the write or delete is\n            queued.\n\n            To ensure that InfluxDB Cloud handles writes and deletes in the\n            order you request them,\n\n            wait for a response before you send the next request.\n\n\n            Because writes are asynchronous, data might not yet be written\n\n            when you receive the response.\n\n\n            #### InfluxDB OSS\n\n\n            - Deleted the data.\n        '400':\n          content:\n            application/json:\n              examples:\n                orgNotFound:\n                  summary: Organization not found\n                  value:\n                    code: invalid\n                    message: 'failed to decode request body: organization not found'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Bad request.\n\n            The response body contains detail about the error.\n\n\n            #### InfluxDB OSS\n\n\n            - Returns this error if `org` or `orgID` doesn't match an\n            organization.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Delete data\n      tags:\n        - Data I/O endpoints\n        - Delete\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            INFLUX_URL/api/v2/delete?org=INFLUX_ORG\u0026bucket=INFLUX_BUCKET \\\n              --header 'Authorization: Token INFLUX_API_TOKEN' \\\n              --header 'Content-Type: application/json' \\\n              --data '{\n                \"start\": \"2020-03-01T00:00:00Z\",\n                \"stop\": \"2020-11-14T00:00:00Z\",\n                \"predicate\": \"tag1=\\\"value1\\\" and (tag2=\\\"value2\\\" and tag3!=\\\"value3\\\")\"\n              }'\n  /api/v2/flags:\n    get:\n      operationId: GetFlags\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flags'\n          description: Feature flags for the currently authenticated user\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Return the feature flags for the currently authenticated user\n      tags:\n        - Users\n  /api/v2/labels:\n    get:\n      operationId: GetLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID.\n          in: query\n          name: orgID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: Success. The response body contains a list of labels.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: List all labels\n      tags:\n        - Labels\n    post:\n      operationId: PostLabels\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelCreateRequest'\n        description: The label to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: Success. The label was created.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Create a label\n      tags:\n        - Labels\n  /api/v2/labels/{labelID}:\n    delete:\n      operationId: DeleteLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success. The delete was accepted.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Delete a label\n      tags:\n        - Labels\n    get:\n      operationId: GetLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the label to update.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: Success. The response body contains the label.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve a label\n      tags:\n        - Labels\n    patch:\n      operationId: PatchLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the label to update.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelUpdate'\n        description: A label update.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: Success. The response body contains the updated label.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Update a label\n      tags:\n        - Labels\n  /api/v2/maps/mapToken:\n    get:\n      operationId: getMapboxToken\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n          description: Temporary token for Mapbox.\n        '401':\n          $ref: '#/components/responses/ServerError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        default:\n          $ref: '#/components/responses/ServerError'\n      summary: Get a mapbox token\n  /api/v2/me:\n    get:\n      operationId: GetMe\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: \u003e-\n            Success. The response body contains the currently authenticated\n            user.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve the currently authenticated user\n      tags:\n        - Users\n  /api/v2/me/password:\n    put:\n      description: |\n        #### InfluxDB Cloud\n\n        InfluxDB Cloud doesn't support changing user passwords through the API.\n        Use the InfluxDB Cloud user interface to update your password.\n      operationId: PutMePassword\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetBody'\n        description: The new password.\n        required: true\n      responses:\n        '204':\n          description: Success. The password was updated.\n        '400':\n          description: \u003e\n            Bad request.\n\n            InfluxDB Cloud doesn't support changing passwords through the API\n            and always responds with this status.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsuccessful authentication\n      security:\n        - BasicAuthentication: []\n      summary: Update a password\n      tags:\n        - Users\n  /api/v2/notificationEndpoints:\n    get:\n      operationId: GetNotificationEndpoints\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n        - description: \u003e-\n            Only show notification endpoints that belong to specific\n            organization ID.\n          in: query\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationEndpoints'\n          description: A list of notification endpoints\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all notification endpoints\n      tags:\n        - NotificationEndpoints\n    post:\n      operationId: CreateNotificationEndpoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostNotificationEndpoint'\n        description: Notification endpoint to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationEndpoint'\n          description: Notification endpoint created\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a notification endpoint\n      tags:\n        - NotificationEndpoints\n  /api/v2/notificationEndpoints/{endpointID}:\n    delete:\n      operationId: DeleteNotificationEndpointsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The endpoint was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a notification endpoint\n      tags:\n        - NotificationEndpoints\n    get:\n      operationId: GetNotificationEndpointsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationEndpoint'\n          description: The notification endpoint requested\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a notification endpoint\n      tags:\n        - NotificationEndpoints\n    patch:\n      operationId: PatchNotificationEndpointsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationEndpointUpdate'\n        description: Check update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationEndpoint'\n          description: An updated notification endpoint\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The notification endpoint was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a notification endpoint\n      tags:\n        - NotificationEndpoints\n    put:\n      operationId: PutNotificationEndpointsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationEndpoint'\n        description: A new notification endpoint to replace the existing endpoint with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationEndpoint'\n          description: An updated notification endpoint\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The notification endpoint was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a notification endpoint\n      tags:\n        - NotificationEndpoints\n  /api/v2/notificationEndpoints/{endpointID}/labels:\n    get:\n      operationId: GetNotificationEndpointsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a notification endpoint\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a notification endpoint\n      tags:\n        - NotificationEndpoints\n    post:\n      operationId: PostNotificationEndpointIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The label was added to the notification endpoint\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a notification endpoint\n      tags:\n        - NotificationEndpoints\n  /api/v2/notificationEndpoints/{endpointID}/labels/{labelID}:\n    delete:\n      operationId: DeleteNotificationEndpointsIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification endpoint ID.\n          in: path\n          name: endpointID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Endpoint or label not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a label from a notification endpoint\n      tags:\n        - NotificationEndpoints\n  /api/v2/notificationRules:\n    get:\n      operationId: GetNotificationRules\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n        - description: \u003e-\n            Only show notification rules that belong to a specific organization\n            ID.\n          in: query\n          name: orgID\n          required: true\n          schema:\n            type: string\n        - description: Only show notifications that belong to the specific check ID.\n          in: query\n          name: checkID\n          schema:\n            type: string\n        - description: \u003e-\n            Only return notification rules that \"would match\" statuses which\n            contain the tag key value pairs provided.\n          in: query\n          name: tag\n          schema:\n            example: env:prod\n            pattern: ^[a-zA-Z0-9_]+:[a-zA-Z0-9_]+$\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRules'\n          description: A list of notification rules\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all notification rules\n      tags:\n        - NotificationRules\n    post:\n      operationId: CreateNotificationRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostNotificationRule'\n        description: Notification rule to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: Notification rule created\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a notification rule\n      tags:\n        - NotificationRules\n  /api/v2/notificationRules/{ruleID}:\n    delete:\n      operationId: DeleteNotificationRulesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The check was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a notification rule\n      tags:\n        - NotificationRules\n    get:\n      operationId: GetNotificationRulesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: The notification rule requested\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a notification rule\n      tags:\n        - NotificationRules\n    patch:\n      operationId: PatchNotificationRulesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRuleUpdate'\n        description: Notification rule update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: An updated notification rule\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The notification rule was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a notification rule\n      tags:\n        - NotificationRules\n    put:\n      operationId: PutNotificationRulesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRule'\n        description: Notification rule update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationRule'\n          description: An updated notification rule\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The notification rule was not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a notification rule\n      tags:\n        - NotificationRules\n  /api/v2/notificationRules/{ruleID}/labels:\n    get:\n      operationId: GetNotificationRulesIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a notification rule\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a notification rule\n      tags:\n        - NotificationRules\n    post:\n      operationId: PostNotificationRuleIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The label was added to the notification rule\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a notification rule\n      tags:\n        - NotificationRules\n  /api/v2/notificationRules/{ruleID}/labels/{labelID}:\n    delete:\n      operationId: DeleteNotificationRulesIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Rule or label not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete label from a notification rule\n      tags:\n        - NotificationRules\n  /api/v2/notificationRules/{ruleID}/query:\n    get:\n      operationId: GetNotificationRulesIDQuery\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The notification rule ID.\n          in: path\n          name: ruleID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FluxResponse'\n          description: The notification rule query requested\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid request\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Notification rule not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a notification rule query\n      tags:\n        - Rules\n  /api/v2/orgs:\n    get:\n      description: \u003e\n        Retrieves a list of\n        [organizations](/influxdb/cloud/reference/glossary/#organization/).\n\n\n        To limit which organizations are returned, pass query parameters in your\n        request.\n\n        If no query parameters are passed, InfluxDB returns all organizations up\n        to the default `limit`.\n\n\n        #### InfluxDB Cloud\n\n\n        - Only returns the organization that owns the token passed in the\n        request.\n\n\n        #### Related guides\n\n\n        - [View organizations](/influxdb/cloud/organizations/view-orgs/).\n      operationId: GetOrgs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - $ref: '#/components/parameters/Offset'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/Descending'\n        - description: |\n            An organization name.\n            Only returns organizations with this name.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: |\n            An organization ID.\n            Only returns the organization with this ID.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: |\n            A user ID.\n            Only returns organizations where this user is a member or owner.\n          in: query\n          name: userID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    links:\n                      self: /api/v2/orgs\n                    orgs:\n                      - createdAt: '2022-07-17T23:00:30.778487Z'\n                        description: Example InfluxDB organization\n                        id: INFLUX_ORG_ID\n                        links:\n                          buckets: /api/v2/buckets?org=INFLUX_ORG\n                          dashboards: /api/v2/dashboards?org=INFLUX_ORG\n                          labels: /api/v2/orgs/INFLUX_ORG_ID/labels\n                          logs: /api/v2/orgs/INFLUX_ORG_ID/logs\n                          members: /api/v2/orgs/INFLUX_ORG_ID/members\n                          owners: /api/v2/orgs/INFLUX_ORG_ID/owners\n                          secrets: /api/v2/orgs/INFLUX_ORG_ID/secrets\n                          self: /api/v2/orgs/INFLUX_ORG_ID\n                          tasks: /api/v2/tasks?org=InfluxData\n                        name: INFLUX_ORG\n                        updatedAt: '2022-07-17T23:00:30.778487Z'\n              schema:\n                $ref: '#/components/schemas/Organizations'\n          description: Success. The response body contains a list of organizations.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: List organizations\n      tags:\n        - Organizations\n        - Security and access endpoints\n    post:\n      description: \u003e\n        Creates an\n        [organization](/influxdb/cloud/reference/glossary/#organization)\n\n        and returns the newly created organization.\n\n\n        #### InfluxDB Cloud\n\n\n        - Doesn't allow you to use this endpoint to create organizations.\n\n\n        #### Related guides\n\n\n        - [Manage organizations](/influxdb/cloud/organizations)\n      operationId: PostOrgs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostOrganizationRequest'\n        description: The organization to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    createdAt: '2022-08-24T23:05:52.881317Z'\n                    description: ''\n                    id: INFLUX_ORG_ID\n                    links:\n                      buckets: /api/v2/buckets?org=INFLUX_ORG\n                      dashboards: /api/v2/dashboards?org=INFLUX_ORG\n                      labels: /api/v2/orgs/INFLUX_ORG_ID/labels\n                      logs: /api/v2/orgs/INFLUX_ORG_ID/logs\n                      members: /api/v2/orgs/INFLUX_ORG_ID/members\n                      owners: /api/v2/orgs/INFLUX_ORG_ID/owners\n                      secrets: /api/v2/orgs/INFLUX_ORG_ID/secrets\n                      self: /api/v2/orgs/INFLUX_ORG_ID\n                      tasks: /api/v2/tasks?org=INFLUX_ORG\n                    name: INFLUX_ORG\n                    updatedAt: '2022-08-24T23:05:52.881318Z'\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: Created. The response body contains the organization information.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n          examples:\n            invalidRequest:\n              summary: The `name` field is missing from the request body.\n              value:\n                code: invalid\n                message: org name is empty\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create an organization\n      tags:\n        - Organizations\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: |\n            curl --request POST \"http://localhost:8086/api/v2/orgs \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"name\": \"INFLUX_ORG\",\n                  \"description: \"Example InfluxDB organization\"\n                }'\n  /api/v2/orgs/{orgID}:\n    delete:\n      description: |\n        Deletes an organization.\n\n        Deleting an organization from InfluxDB Cloud can't be undone.\n        Once deleted, all data associated with the organization is removed.\n\n        #### InfluxDB Cloud\n\n        - Does the following when you send a delete request:\n\n          1. Validates the request and queues the delete.\n          2. Returns an HTTP `204` status code if queued; _error_ otherwise.\n          3. Handles the delete asynchronously.\n\n        #### InfluxDB OSS\n\n        - Validates the request, handles the delete synchronously,\n        and then responds with success or failure.\n\n        #### Limitations\n\n        - Only one organization can be deleted per request.\n\n        #### Related guides\n\n        - [Delete organization](/influxdb/cloud/organizations/delete-orgs/)\n      operationId: DeleteOrgsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization to delete.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success.\n\n            #### InfluxDB Cloud\n              - The organization is queued for deletion.\n\n            #### InfluxDB OSS\n              - The organization is deleted.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested organization was not found.\n                  value:\n                    code: not found\n                    message: org not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            InfluxDB can't find the organization.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete an organization\n      tags:\n        - Organizations\n    get:\n      description: |\n        Retrieves an organization.\n\n        Use this endpoint to retrieve information for a specific organization.\n\n        #### Related guides\n\n        - [View organization](/influxdb/cloud/organizations/view-orgs/)\n      operationId: GetOrgsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization to retrieve.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: |\n            Success.\n            The response body contains the organization information.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested organization wasn't found.\n                  value:\n                    code: not found\n                    message: organization not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            Organization not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve an organization\n      tags:\n        - Organizations\n        - Security and access endpoints\n    patch:\n      description: \u003e\n        Updates an organization.\n\n\n        Use this endpoint to update properties\n\n        (`name`, `description`) of an organization.\n\n\n        Updating an organization’s name affects all resources that reference the\n\n        organization by name, including the following:\n\n\n        - Queries\n\n        - Dashboards\n\n        - Tasks\n\n        - Telegraf configurations\n\n        - Templates\n\n\n        If you change an organization name, be sure to update the organization\n        name\n\n        in these resources as well.\n\n\n        #### Related Guides\n\n\n        - [Update an organization](/influxdb/cloud/organizations/update-org/)\n      operationId: PatchOrgsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization to update.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchOrganizationRequest'\n        description: The organization update to apply.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: Success. The response body contains the updated organization.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update an organization\n      tags:\n        - Organizations\n  /api/v2/orgs/{orgID}/limits:\n    get:\n      operationId: GetOrgLimitsID\n      parameters:\n        - description: The ID of the organization.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: These are org limits similar to those configured in/by quartz.\n                properties:\n                  limits:\n                    $ref: '#/components/schemas/Limit'\n                  links:\n                    $ref: '#/components/schemas/Links'\n                type: object\n          description: Limits defined for the organization.\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: unexpected error\n      summary: Retrieve limits for an organization\n      tags:\n        - Limits\n  /api/v2/orgs/{orgID}/members:\n    get:\n      description: \u003e\n        Retrieves a list of all users that belong to an organization.\n\n\n        InfluxDB [users](/influxdb/cloud/reference/glossary/#user) have\n\n        permission to access InfluxDB.\n\n\n        [Members](/influxdb/cloud/reference/glossary/#member) are users\n\n        within the organization.\n\n\n        #### InfluxDB Cloud\n\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Limitations\n\n\n        - Member permissions are separate from API token permissions.\n\n        - Member permissions are used in the context of the InfluxDB UI.\n\n\n        #### Required permissions\n\n\n        - `read-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you retrieve a list\n        of\n\n        members from.\n\n\n        #### Related guides\n\n\n        - [Manage users](/influxdb/cloud/users/)\n\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: GetOrgsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization to retrieve users for.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    links:\n                      self: /api/v2/orgs/055aa4783aa38398/members\n                    users:\n                      - id: 791df274afd48a83\n                        links:\n                          self: /api/v2/users/791df274afd48a83\n                        name: example_user_1\n                        role: member\n                        status: active\n                      - id: 09cfb87051cbe000\n                        links:\n                          self: /api/v2/users/09cfb87051cbe000\n                        name: example_user_2\n                        role: owner\n                        status: active\n              schema:\n                $ref: '#/components/schemas/ResourceMembers'\n          description: \u003e\n            Success.\n\n            The response body contains a list of all users within the\n            organization.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                notFound:\n                  summary: |\n                    The requested organization wasn't found.\n                  value:\n                    code: not found\n                    message: 404 page not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n            InfluxDB can't find the organization.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all members of an organization\n      tags:\n        - Organizations\n        - Security and access endpoints\n    post:\n      description: \u003e\n        Adds a user to an organization.\n\n\n        InfluxDB [users](/influxdb/cloud/reference/glossary/#user) have\n\n        permission to access InfluxDB.\n\n\n        [Members](/influxdb/cloud/reference/glossary/#member) are users\n\n        within the organization.\n\n\n        #### InfluxDB Cloud\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Limitations\n\n\n        - Member permissions are separate from API token permissions.\n\n        - Member permissions are used in the context of the InfluxDB UI.\n\n\n        #### Required permissions\n\n\n        - `write-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you want add a member\n        to.\n\n\n        #### Related guides\n\n\n        - [Manage users](/influxdb/cloud/users/)\n\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: PostOrgsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: |\n          The user to add to the organization.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    id: 09cfb87051cbe000\n                    links:\n                      self: /api/v2/users/09cfb87051cbe000\n                    name: example_user_1\n                    role: member\n                    status: active\n              schema:\n                $ref: '#/components/schemas/ResourceMember'\n          description: |\n            Success.\n            The response body contains the user.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n          examples:\n            invalidRequest:\n              summary: The user `id` is missing from the request body.\n              value:\n                code: invalid\n                message: user id missing or invalid\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a member to an organization\n      tags:\n        - Organizations\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            \"http://localhost:8086/api/v2/orgs/INFLUX_ORG_ID/members \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"id\": \"09cfb87051cbe000\"\n                }'\n  /api/v2/orgs/{orgID}/members/{userID}:\n    delete:\n      description: \u003e\n        Removes a member from an organization.\n\n\n        Use this endpoint to remove a user's `read` and `write` permissions for the organization.\n\n\n        #### InfluxDB Cloud\n\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Limitations\n\n\n        - Member permissions are separate from API token permissions.\n\n        - Member permissions are used in the context of the InfluxDB UI.\n\n\n        #### Required permissions\n\n\n        - `write-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you want to remove an\n\n        owner from.\n\n\n        #### Related guides\n\n\n        - [Manage members](/influxdb/cloud/organizations/members/)\n      operationId: DeleteOrgsIDMembersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the user to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the organization to remove a user from.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success.\n            The user is no longer a member of the organization.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove a member from an organization\n      tags:\n        - Organizations\n        - Security and access endpoints\n  /api/v2/orgs/{orgID}/owners:\n    get:\n      description: \u003e\n        Retrieves a list of all owners of an organization.\n\n\n        #### InfluxDB Cloud\n\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Required permissions\n\n\n        - `read-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you want to retrieve\n        a\n\n        list of owners from.\n      operationId: GetOrgsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the organization to list owners for.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    links:\n                      self: /api/v2/orgs/055aa4783aa38398/owners\n                    users:\n                      - id: 09cfb87051cbe000\n                        links:\n                          self: /api/v2/users/09cfb87051cbe000\n                        name: example_user_2\n                        role: owner\n                        status: active\n              schema:\n                $ref: '#/components/schemas/ResourceOwners'\n          description: A list of organization owners\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Organization not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all owners of an organization\n      tags:\n        - Organizations\n        - Security and access endpoints\n    post:\n      description: \u003e\n        Adds an owner to an organization.\n\n\n        Use this endpoint to assign the organization `owner` role to a user.\n\n\n        #### InfluxDB Cloud\n\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Required permissions\n\n\n        - `write-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you want add an owner\n        for.\n\n\n        #### Related endpoints\n\n\n        - [Authorizations](#tag/Authorizations)\n      operationId: PostOrgsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the organization that you want to add an owner for.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              successResponse:\n                value:\n                  id: 09cfb87051cbe000\n                  links:\n                    self: /api/v2/users/09cfb87051cbe000\n                  name: example_user_1\n                  role: owner\n                  status: active\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: The user to add as an owner of the organization.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwner'\n          description: |\n            Success. The user is an owner of the organization.\n            The response body contains the owner with role and user detail.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add an owner to an organization\n      tags:\n        - Organizations\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            \"http://localhost:8086/api/v2/orgs/INFLUX_ORG_ID/owners \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"id\": \"09cfb87051cbe000\"\n                }'\n  /api/v2/orgs/{orgID}/owners/{userID}:\n    delete:\n      description: \u003e\n        Removes an [owner](/influxdb/cloud/reference/glossary/#owner) from\n\n        the organization.\n\n\n        Organization owners have permission to delete organizations and remove\n        user and member\n\n        permissions from the organization.\n\n\n        #### InfluxDB Cloud\n\n        - Doesn't use `owner` and `member` roles.\n          Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user permissions.\n\n        #### Limitations\n\n\n        - Owner permissions are separate from API token permissions.\n\n        - Owner permissions are used in the context of the InfluxDB UI.\n\n\n        #### Required permissions\n\n\n        - `write-orgs INFLUX_ORG_ID`\n\n\n        `INFLUX_ORG_ID` is the ID of the organization that you want remove an\n        owner\n\n        from.\n\n\n        #### Related endpoints\n\n        - [Authorizations](#tag/Authorizations)\n      operationId: DeleteOrgsIDOwnersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the user to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: |\n            The ID of the organization to remove an owner from.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success.\n            The user is no longer an owner of the organization.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove an owner from an organization\n      tags:\n        - Organizations\n        - Security and access endpoints\n  /api/v2/orgs/{orgID}/secrets:\n    get:\n      operationId: GetOrgsIDSecrets\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretKeysResponse'\n          description: A list of all secret keys\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all secret keys for an organization\n      tags:\n        - Secrets\n        - Security and access endpoints\n    patch:\n      operationId: PatchOrgsIDSecrets\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Secrets'\n        description: Secret key value pairs to update/add\n        required: true\n      responses:\n        '204':\n          description: Keys successfully patched\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update secrets in an organization\n      tags:\n        - Secrets\n  /api/v2/orgs/{orgID}/secrets/{secretID}:\n    delete:\n      operationId: DeleteOrgsIDSecretsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n        - description: The secret ID.\n          in: path\n          name: secretID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Keys successfully deleted\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Delete a secret from an organization\n      tags:\n        - Secrets\n        - Security and access endpoints\n  /api/v2/orgs/{orgID}/secrets/delete:\n    post:\n      deprecated: true\n      operationId: PostOrgsIDSecrets\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecretKeys'\n        description: Secret key to delete\n        required: true\n      responses:\n        '204':\n          description: Keys successfully patched\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete secrets from an organization\n      tags:\n        - Secrets\n        - Security and access endpoints\n  /api/v2/orgs/{orgID}/usage:\n    get:\n      operationId: GetOrgUsageID\n      parameters:\n        - description: The ID of the organization.\n          in: path\n          name: orgID\n          required: true\n          schema:\n            type: string\n        - description: \u003e\n            Earliest time to include in results.\n\n            For more information about timestamps, see [Manipulate timestamps\n            with Flux](/influxdb/cloud/query-data/flux/manipulate-timestamps/).\n          in: query\n          name: start\n          required: true\n          schema:\n            format: unix timestamp\n            type: integer\n        - description: \u003e\n            Latest time to include in results.\n\n            For more information about timestamps, see [Manipulate timestamps\n            with Flux](/influxdb/cloud/query-data/flux/manipulate-timestamps/).\n          in: query\n          name: stop\n          required: false\n          schema:\n            format: unix timestamp\n            type: integer\n        - description: return raw usage data\n          in: query\n          name: raw\n          required: false\n          schema:\n            default: false\n            type: boolean\n      responses:\n        '200':\n          content:\n            text/csv:\n              schema:\n                example: \u003e\n                  #group,false,false,true,true,false,false,true,true,true,true\n                  #datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string\n                  #default,_result,,,,,,,,,\n                  ,result,table,_start,_stop,_time,_value,_field,_measurement,bucket_id,org_id\n                  ,,0,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,5434066,gauge,storage_usage_bucket_bytes,2f6ba0cf9a2fdcbb,cec6fc1d2176dc11\n                  ,,1,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,9924053.966666665,gauge,storage_usage_bucket_bytes,8af67bcaf69d9daf,cec6fc1d2176dc11\n                type: string\n          description: Usage data\n          headers:\n            Content-Encoding:\n              description: \u003e-\n                Lists any encodings (usually compression algorithms) that have\n                been applied to the response payload.\n              schema:\n                default: identity\n                description: \u003e-\n                  The content coding. `gzip` for compressed data or `identity`\n                  for unmodified, uncompressed data.\n                enum:\n                  - gzip\n                  - identity\n                type: string\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: unexpected error\n      summary: Retrieve usage for an organization\n      tags:\n        - Usage\n  /ping:\n    get:\n      description: Returns the status and InfluxDB version of the instance.\n      operationId: GetPing\n      responses:\n        '204':\n          description: |\n            OK.\n            Headers contain InfluxDB version information.\n          headers:\n            X-Influxdb-Build:\n              description: The type of InfluxDB build.\n              schema:\n                type: string\n            X-Influxdb-Version:\n              description: The version of InfluxDB.\n              schema:\n                type: integer\n      servers: []\n      summary: Get the status and version of the instance\n      tags:\n        - Ping\n        - System information endpoints\n    head:\n      description: Returns the status and InfluxDB version of the instance.\n      operationId: HeadPing\n      responses:\n        '204':\n          description: |\n            OK.\n            Headers contain InfluxDB version information.\n          headers:\n            X-Influxdb-Build:\n              description: The type of InfluxDB build.\n              schema:\n                type: string\n            X-Influxdb-Version:\n              description: The version of InfluxDB.\n              schema:\n                type: integer\n      servers: []\n      summary: Get the status and version of the instance\n      tags:\n        - Ping\n  /api/v2/query:\n    post:\n      description: \u003e\n        Retrieves data from buckets.\n\n\n        Use this endpoint to send a Flux query request and retrieve data from a\n        bucket.\n\n\n        #### Rate limits (with InfluxDB Cloud)\n\n\n        `read` rate limits apply.\n\n        For more information, see [limits and adjustable\n        quotas](/influxdb/cloud/account-management/limits/).\n\n\n        #### Related guides\n\n\n        - [Query with the InfluxDB\n        API](/influxdb/cloud/query-data/execute-queries/influx-api/).\n\n        - [Get started with\n        Flux](https://docs.influxdata.com/flux/v0.x/get-started/)\n      operationId: PostQuery\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: \u003e-\n            The content encoding (usually a compression algorithm) that the\n            client can understand.\n          in: header\n          name: Accept-Encoding\n          schema:\n            default: identity\n            description: \u003e-\n              The content coding.  Use `gzip` for compressed data or `identity`\n              for unmodified, uncompressed data.\n            enum:\n              - gzip\n              - identity\n            type: string\n        - in: header\n          name: Content-Type\n          schema:\n            enum:\n              - application/json\n              - application/vnd.flux\n            type: string\n        - description: \u003e\n            The name or ID of the organization executing the query.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't use `org` or `orgID`.\n\n            - Queries the bucket in the organization associated with the\n            authorization (API token).\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: \u003e\n            The ID of the organization executing the query.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't use `org` or `orgID`.\n\n            - Queries the bucket in the organization associated with the\n            authorization (API token).\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n          in: query\n          name: orgID\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n          application/vnd.flux:\n            example: |\n              from(bucket: \"example-bucket\")\n                  |\u003e range(start: -5m)\n                  |\u003e filter(fn: (r) =\u003e r._measurement == \"example-measurement\")\n            schema:\n              type: string\n        description: Flux query or specification to execute\n      responses:\n        '200':\n          content:\n            application/csv:\n              example: \u003e\n                result,table,_start,_stop,_time,region,host,_value\n\n                mean,0,2018-05-08T20:50:00Z,2018-05-08T20:51:00Z,2018-05-08T20:50:00Z,east,A,15.43\n\n                mean,0,2018-05-08T20:50:00Z,2018-05-08T20:51:00Z,2018-05-08T20:50:20Z,east,B,59.25\n\n                mean,0,2018-05-08T20:50:00Z,2018-05-08T20:51:00Z,2018-05-08T20:50:40Z,east,C,52.62\n              schema:\n                type: string\n          description: Success. The response body contains query results.\n          headers:\n            Content-Encoding:\n              description: \u003e-\n                Lists encodings (usually compression algorithms) that have been\n                applied to the response payload.\n              schema:\n                default: identity\n                description: \u003e\n                  The content coding: `gzip` for compressed data or `identity`\n                  for unmodified, uncompressed data.\n                enum:\n                  - gzip\n                  - identity\n                type: string\n            Trace-Id:\n              description: The trace ID, if generated, of the request.\n              schema:\n                description: Trace ID of a request.\n                type: string\n        '400':\n          content:\n            application/json:\n              examples:\n                orgNotFound:\n                  summary: Organization not found\n                  value:\n                    code: invalid\n                    message: 'failed to decode request body: organization not found'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Bad request.\n\n            The response body contains detail about the error.\n\n\n            #### InfluxDB OSS\n\n\n            - Returns this error if `org` or `orgID` doesn't match an\n            organization.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '429':\n          description: |\n            #### InfluxDB Cloud:\n              - returns this error if a **read** or **write** request exceeds your\n                plan's [adjustable service quotas](/influxdb/cloud/account-management/limits/#adjustable-service-quotas)\n                or if a **delete** request exceeds the maximum\n                [global limit](/influxdb/cloud/account-management/limits/#global-limits)\n              - returns `Retry-After` header that describes when to try the write again.\n\n            #### InfluxDB OSS:\n              - doesn't return this error.\n          headers:\n            Retry-After:\n              description: \u003e-\n                Non-negative decimal integer indicating seconds to wait before\n                retrying the request.\n              schema:\n                format: int32\n                type: integer\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Query data\n      tags:\n        - Data I/O endpoints\n        - Query\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: |\n            curl --request POST 'INFLUX_URL/api/v2/query?org=INFLUX_ORG' \\\n            --header 'Content-Type: application/vnd.flux' \\\n            --header 'Accept: application/csv \\\n            --header 'Authorization: Token INFLUX_API_TOKEN' \\\n            --data 'from(bucket: \"example-bucket\")\n                      |\u003e range(start: -5m)\n                      |\u003e filter(fn: (r) =\u003e r._measurement == \"example-measurement\")'\n  /api/v2/query/analyze:\n    post:\n      description: \u003e\n        Analyzes a [Flux query](https://docs.influxdata.com/flux/v0.x/) for\n        syntax\n\n        errors and returns the list of errors.\n\n\n        In the following sample query, `from()` is missing the property key.\n\n            ```json\n            { \"query\": \"from(: \\\"iot_center\\\")\\\n                        |\u003e range(start: -90d)\\\n                        |\u003e filter(fn: (r) =\u003e r._measurement == \\\"environment\\\")\",\n              \"type\": \"flux\"\n            }\n            ```\n\n        If you pass this in a request to the `/api/v2/analyze` endpoint,\n\n        InfluxDB returns an `errors` list that contains an error object for the\n        missing key.\n\n\n        #### Limitations\n\n\n        -  The endpoint doesn't validate values in the query--for example:\n\n          - The following sample query has correct syntax, but contains an incorrect `from()` property key:\n\n            ```json\n            { \"query\": \"from(foo: \\\"iot_center\\\")\\\n                        |\u003e range(start: -90d)\\\n                        |\u003e filter(fn: (r) =\u003e r._measurement == \\\"environment\\\")\",\n              \"type\": \"flux\"\n            }\n            ```\n\n            If you pass this in a request to the `/api/v2/analyze` endpoint,\n            InfluxDB returns an empty `errors` list.\n      operationId: PostQueryAnalyze\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - in: header\n          name: Content-Type\n          schema:\n            enum:\n              - application/json\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n        description: Flux query to analyze\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                missingQueryPropertyKey:\n                  description: \u003e\n                    Returns an error object if the Flux query is missing a\n                    property key.\n\n\n                    The following sample query is missing the _`bucket`_\n                    property key:\n\n                      ```json\n                      {\n                        \"query\": \"from(: \\\"iot_center\\\")\\\n\n                        ...\n\n                      }\n                      ```\n                  summary: Missing property key error\n                  value:\n                    errors:\n                      - character: 0\n                        column: 6\n                        line: 1\n                        message: missing property key\n              schema:\n                $ref: '#/components/schemas/AnalyzeQueryResponse'\n          description: \u003e\n            Success.\n\n            The response body contains the list of `errors`.\n\n            If the query syntax is valid, the endpoint returns an empty `errors`\n            list.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidJSONStringValue:\n                  description: \u003e-\n                    If the request body contains invalid JSON, returns `invalid`\n                    and problem detail.\n                  summary: Invalid JSON\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      invalid json: invalid character '\\'' looking for beginning\n                      of value\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n            InfluxDB is unable to parse the request.\n            The response body contains detail about the problem.\n          headers:\n            X-Platform-Error-Code:\n              description: |\n                The reason for the error.\n              schema:\n                example: invalid\n                type: string\n        default:\n          content:\n            application/json:\n              examples:\n                emptyJSONObject:\n                  description: \u003e\n                    If the request body contains an empty JSON object, returns\n                    `internal error`.\n                  summary: Empty JSON object in request body\n                  value:\n                    code: internal error\n                    message: An internal error has occurred - check server logs\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n          headers:\n            X-Influx-Error:\n              description: A string that describes the problem.\n              schema:\n                type: string\n            X-Influx-Reference:\n              description: The numeric reference code for the error type.\n              schema:\n                type: integer\n            X-Platform-Error-Code:\n              description: The reason for the error.\n              schema:\n                example: internal error\n                type: string\n      summary: Analyze a Flux query\n      tags:\n        - Query\n      x-codeSamples:\n        - label: 'cURL: Analyze a Flux query'\n          lang: Shell\n          source: |\n            curl -v --request POST \\\n              \"http://localhost:8086/api/v2/query/analyze\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header 'Content-type: application/json' \\\n              --header 'Accept: application/json' \\\n              --data-binary @- \u003c\u003c EOF\n              { \"query\": \"from(bucket: \\\"iot_center\\\")\\\n                          |\u003e range(start: -90d)\\\n                          |\u003e filter(fn: (r) =\u003e r._measurement == \\\"environment\\\")\",\n                \"type\": \"flux\"\n              }\n            EOF\n  /api/v2/query/ast:\n    post:\n      description: \u003e\n        Analyzes a Flux query and returns a complete package source [Abstract\n        Syntax\n\n        Tree\n        (AST)](/influxdb/cloud/reference/glossary/#abstract-syntax-tree-ast)\n\n        for the query.\n\n\n        Use this endpoint for deep query analysis such as debugging unexpected\n        query\n\n        results.\n\n\n        A Flux query AST provides a semantic, tree-like representation with\n        contextual\n\n        information about the query. The AST illustrates how the query is\n        distributed\n\n        into different components for execution.\n\n\n        #### Limitations\n\n\n        -  The endpoint doesn't validate values in the query--for example:\n\n            The following sample Flux query has correct syntax, but contains an incorrect `from()` property key:\n\n            ```js\n            from(foo: \"iot_center\")\n                |\u003e range(start: -90d)\n                |\u003e filter(fn: (r) =\u003e r._measurement == \"environment\")\n            ```\n\n            The following sample JSON shows how to pass the query in the request body:\n\n            ```js\n            from(foo: \"iot_center\")\n            |\u003e range(start: -90d)\n            |\u003e filter(fn: (r) =\u003e r._measurement == \"environment\")\n            ```\n\n            The following code sample shows how to pass the query as JSON in the request body:\n            ```json\n            { \"query\": \"from(foo: \\\"iot_center\\\")\\\n                            |\u003e range(start: -90d)\\\n                            |\u003e filter(fn: (r) =\u003e r._measurement == \\\"environment\\\")\"\n            }\n            ```\n\n            Passing this to `/api/v2/query/ast` will return a successful response\n            with a generated AST.\n      operationId: PostQueryAst\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - in: header\n          name: Content-Type\n          schema:\n            enum:\n              - application/json\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LanguageRequest'\n        description: The Flux query to analyze.\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    ast:\n                      files:\n                        - body:\n                            - expression:\n                                argument:\n                                  argument:\n                                    arguments:\n                                      - location:\n                                          end:\n                                            column: 25\n                                            line: 1\n                                          source: 'bucket: \"example-bucket\"'\n                                          start:\n                                            column: 6\n                                            line: 1\n                                        properties:\n                                          - key:\n                                              location:\n                                                end:\n                                                  column: 12\n                                                  line: 1\n                                                source: bucket\n                                                start:\n                                                  column: 6\n                                                  line: 1\n                                              name: bucket\n                                              type: Identifier\n                                            location:\n                                              end:\n                                                column: 25\n                                                line: 1\n                                              source: 'bucket: \"example-bucket\"'\n                                              start:\n                                                column: 6\n                                                line: 1\n                                            type: Property\n                                            value:\n                                              location:\n                                                end:\n                                                  column: 25\n                                                  line: 1\n                                                source: '\"example-bucket\"'\n                                                start:\n                                                  column: 14\n                                                  line: 1\n                                              type: StringLiteral\n                                              value: example-bucket\n                                        type: ObjectExpression\n                                    callee:\n                                      location:\n                                        end:\n                                          column: 5\n                                          line: 1\n                                        source: from\n                                        start:\n                                          column: 1\n                                          line: 1\n                                      name: from\n                                      type: Identifier\n                                    location:\n                                      end:\n                                        column: 26\n                                        line: 1\n                                      source: 'from(bucket: \"example-bucket\")'\n                                      start:\n                                        column: 1\n                                        line: 1\n                                    type: CallExpression\n                                  call:\n                                    arguments:\n                                      - location:\n                                          end:\n                                            column: 46\n                                            line: 1\n                                          source: 'start: -5m'\n                                          start:\n                                            column: 36\n                                            line: 1\n                                        properties:\n                                          - key:\n                                              location:\n                                                end:\n                                                  column: 41\n                                                  line: 1\n                                                source: start\n                                                start:\n                                                  column: 36\n                                                  line: 1\n                                              name: start\n                                              type: Identifier\n                                            location:\n                                              end:\n                                                column: 46\n                                                line: 1\n                                              source: 'start: -5m'\n                                              start:\n                                                column: 36\n                                                line: 1\n                                            type: Property\n                                            value:\n                                              argument:\n                                                location:\n                                                  end:\n                                                    column: 46\n                                                    line: 1\n                                                  source: 5m\n                                                  start:\n                                                    column: 44\n                                                    line: 1\n                                                type: DurationLiteral\n                                                values:\n                                                  - magnitude: 5\n                                                    unit: m\n                                              location:\n                                                end:\n                                                  column: 46\n                                                  line: 1\n                                                source: '-5m'\n                                                start:\n                                                  column: 43\n                                                  line: 1\n                                              operator: '-'\n                                              type: UnaryExpression\n                                        type: ObjectExpression\n                                    callee:\n                                      location:\n                                        end:\n                                          column: 35\n                                          line: 1\n                                        source: range\n                                        start:\n                                          column: 30\n                                          line: 1\n                                      name: range\n                                      type: Identifier\n                                    location:\n                                      end:\n                                        column: 47\n                                        line: 1\n                                      source: 'range(start: -5m)'\n                                      start:\n                                        column: 30\n                                        line: 1\n                                    type: CallExpression\n                                  location:\n                                    end:\n                                      column: 47\n                                      line: 1\n                                    source: \u003e-\n                                      from(bucket: \"example-bucket\") |\u003e\n                                      range(start: -5m)\n                                    start:\n                                      column: 1\n                                      line: 1\n                                  type: PipeExpression\n                                call:\n                                  arguments:\n                                    - location:\n                                        end:\n                                          column: 108\n                                          line: 1\n                                        source: \u003e-\n                                          fn: (r) =\u003e r._measurement ==\n                                          \"example-measurement\"\n                                        start:\n                                          column: 58\n                                          line: 1\n                                      properties:\n                                        - key:\n                                            location:\n                                              end:\n                                                column: 60\n                                                line: 1\n                                              source: fn\n                                              start:\n                                                column: 58\n                                                line: 1\n                                            name: fn\n                                            type: Identifier\n                                          location:\n                                            end:\n                                              column: 108\n                                              line: 1\n                                            source: \u003e-\n                                              fn: (r) =\u003e r._measurement ==\n                                              \"example-measurement\"\n                                            start:\n                                              column: 58\n                                              line: 1\n                                          type: Property\n                                          value:\n                                            body:\n                                              left:\n                                                location:\n                                                  end:\n                                                    column: 83\n                                                    line: 1\n                                                  source: r._measurement\n                                                  start:\n                                                    column: 69\n                                                    line: 1\n                                                object:\n                                                  location:\n                                                    end:\n                                                      column: 70\n                                                      line: 1\n                                                    source: r\n                                                    start:\n                                                      column: 69\n                                                      line: 1\n                                                  name: r\n                                                  type: Identifier\n                                                property:\n                                                  location:\n                                                    end:\n                                                      column: 83\n                                                      line: 1\n                                                    source: _measurement\n                                                    start:\n                                                      column: 71\n                                                      line: 1\n                                                  name: _measurement\n                                                  type: Identifier\n                                                type: MemberExpression\n                                              location:\n                                                end:\n                                                  column: 108\n                                                  line: 1\n                                                source: r._measurement == \"example-measurement\"\n                                                start:\n                                                  column: 69\n                                                  line: 1\n                                              operator: '=='\n                                              right:\n                                                location:\n                                                  end:\n                                                    column: 108\n                                                    line: 1\n                                                  source: '\"example-measurement\"'\n                                                  start:\n                                                    column: 87\n                                                    line: 1\n                                                type: StringLiteral\n                                                value: example-measurement\n                                              type: BinaryExpression\n                                            location:\n                                              end:\n                                                column: 108\n                                                line: 1\n                                              source: \u003e-\n                                                (r) =\u003e r._measurement ==\n                                                \"example-measurement\"\n                                              start:\n                                                column: 62\n                                                line: 1\n                                            params:\n                                              - key:\n                                                  location:\n                                                    end:\n                                                      column: 64\n                                                      line: 1\n                                                    source: r\n                                                    start:\n                                                      column: 63\n                                                      line: 1\n                                                  name: r\n                                                  type: Identifier\n                                                location:\n                                                  end:\n                                                    column: 64\n                                                    line: 1\n                                                  source: r\n                                                  start:\n                                                    column: 63\n                                                    line: 1\n                                                type: Property\n                                                value: null\n                                            type: FunctionExpression\n                                      type: ObjectExpression\n                                  callee:\n                                    location:\n                                      end:\n                                        column: 57\n                                        line: 1\n                                      source: filter\n                                      start:\n                                        column: 51\n                                        line: 1\n                                    name: filter\n                                    type: Identifier\n                                  location:\n                                    end:\n                                      column: 109\n                                      line: 1\n                                    source: \u003e-\n                                      filter(fn: (r) =\u003e r._measurement ==\n                                      \"example-measurement\")\n                                    start:\n                                      column: 51\n                                      line: 1\n                                  type: CallExpression\n                                location:\n                                  end:\n                                    column: 109\n                                    line: 1\n                                  source: \u003e-\n                                    from(bucket: \"example-bucket\") |\u003e\n                                    range(start: -5m) |\u003e filter(fn: (r) =\u003e\n                                    r._measurement == \"example-measurement\")\n                                  start:\n                                    column: 1\n                                    line: 1\n                                type: PipeExpression\n                              location:\n                                end:\n                                  column: 109\n                                  line: 1\n                                source: \u003e-\n                                  from(bucket: \"example-bucket\") |\u003e range(start:\n                                  -5m) |\u003e filter(fn: (r) =\u003e r._measurement ==\n                                  \"example-measurement\")\n                                start:\n                                  column: 1\n                                  line: 1\n                              type: ExpressionStatement\n                          imports: null\n                          location:\n                            end:\n                              column: 109\n                              line: 1\n                            source: \u003e-\n                              from(bucket: \"example-bucket\") |\u003e range(start:\n                              -5m) |\u003e filter(fn: (r) =\u003e r._measurement ==\n                              \"example-measurement\")\n                            start:\n                              column: 1\n                              line: 1\n                          metadata: parser-type=rust\n                          package: null\n                          type: File\n                      package: main\n                      type: Package\n              schema:\n                $ref: '#/components/schemas/ASTResponse'\n          description: \u003e\n            Success.\n\n            The response body contains an Abstract Syntax Tree (AST) of the Flux\n            query.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidASTValue:\n                  description: \u003e\n                    If the request body contains a missing property key in\n                    `from()`,\n\n                    returns `invalid` and problem detail.\n                  summary: Invalid AST\n                  value:\n                    code: invalid\n                    message: 'invalid AST: loc 1:6-1:19: missing property key'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n            InfluxDB is unable to parse the request.\n            The response body contains detail about the problem.\n          headers:\n            X-Platform-Error-Code:\n              description: |\n                The reason for the error.\n              schema:\n                example: invalid\n                type: string\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      summary: Generate a query Abstract Syntax Tree (AST)\n      tags:\n        - Query\n      x-codeSamples:\n        - label: 'cURL: Analyze and generate AST for the query'\n          lang: Shell\n          source: |\n            curl --request POST \"http://localhost:8086/api/v2/query/ast\" \\\n              --header 'Content-Type: application/json' \\\n              --header 'Accept: application/json' \\\n              --header \"Authorization: Token INFLUX_TOKEN\" \\\n              --data-binary @- \u003c\u003c EOL\n                  {\n                    \"query\": \"from(bucket: \\\"INFLUX_BUCKET_NAME\\\")\\\n                    |\u003e range(start: -5m)\\\n                    |\u003e filter(fn: (r) =\u003e r._measurement == \\\"example-measurement\\\")\"\n                  }\n            EOL\n  /api/v2/query/suggestions:\n    get:\n      description: \u003e\n        Retrieves a list of Flux query suggestions. Each suggestion contains a\n\n        [Flux\n        function](https://docs.influxdata.com/flux/v0.x/stdlib/all-functions/)\n\n        name and parameters.\n\n\n        Use this endpoint to retrieve a list of Flux query suggestions used in\n        the\n\n        InfluxDB Flux Query Builder. Helper function names have an underscore\n        (`_`)\n\n        prefix and aren't meant to be used directly in queries--for example:\n\n\n        - **Recommended**:  Use `top(n, columns=[\"_value\"], tables=\u003c-)` to sort\n          on a column and keep the top n records instead of `_sortLimit_`.\n          `top` uses the `_sortLimit` helper function.\n\n        #### Limitations\n\n\n        - Using `/api/v2/query/suggestions/` (note the trailing slash) with cURL\n\n        will result in a HTTP `301 Moved Permanently` status code. Please use\n\n        `/api/v2/query/suggestions` without a trailing slash.\n\n\n        - When writing a query, avoid using `_functionName()` helper functions\n\n        exposed by this endpoint.\n\n\n        #### Related Guides\n\n\n        - [List of all Flux\n        functions](/influxdb/cloud/flux/v0.x/stdlib/all-functions/).\n      operationId: GetQuerySuggestions\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    funcs:\n                      - name: _fillEmpty\n                        params:\n                          createEmpty: bool\n                          tables: stream\n                      - name: _highestOrLowest\n                        params:\n                          _sortLimit: function\n                          column: invalid\n                          groupColumns: array\n                          'n': invalid\n                          reducer: function\n                          tables: stream\n                      - name: _hourSelection\n                        params:\n                          location: object\n                          start: int\n                          stop: int\n                          tables: stream\n                          timeColumn: string\n                      - name: _sortLimit\n                        params:\n                          columns: array\n                          desc: bool\n                          'n': int\n                          tables: stream\n                      - name: _window\n                        params:\n                          createEmpty: bool\n                          every: duration\n                          location: object\n                          offset: duration\n                          period: duration\n                          startColumn: string\n                          stopColumn: string\n                          tables: stream\n                          timeColumn: string\n                      - name: aggregateWindow\n                        params:\n                          column: invalid\n                          createEmpty: bool\n                          every: duration\n                          fn: function\n                          location: object\n                          offset: duration\n                          period: duration\n                          tables: stream\n                          timeDst: string\n                          timeSrc: string\n                      - name: bool\n                        params:\n                          v: invalid\n                      - name: bottom\n                        params:\n                          columns: array\n                          'n': int\n                          tables: stream\n                      - name: buckets\n                        params:\n                          host: string\n                          org: string\n                          orgID: string\n                          token: string\n                      - name: bytes\n                        params:\n                          v: invalid\n                      - name: cardinality\n                        params:\n                          bucket: string\n                          bucketID: string\n                          host: string\n                          org: string\n                          orgID: string\n                          predicate: function\n                          start: invalid\n                          stop: invalid\n                          token: string\n                      - name: chandeMomentumOscillator\n                        params:\n                          columns: array\n                          'n': int\n                          tables: stream\n                      - name: columns\n                        params:\n                          column: string\n                          tables: stream\n                      - name: contains\n                        params:\n                          set: array\n                          value: invalid\n                      - name: count\n                        params:\n                          column: string\n                          tables: stream\n                      - name: cov\n                        params:\n                          'on': array\n                          pearsonr: bool\n                          x: invalid\n                          'y': invalid\n                      - name: covariance\n                        params:\n                          columns: array\n                          pearsonr: bool\n                          tables: stream\n                          valueDst: string\n                      - name: cumulativeSum\n                        params:\n                          columns: array\n                          tables: stream\n                      - name: derivative\n                        params:\n                          columns: array\n                          initialZero: bool\n                          nonNegative: bool\n                          tables: stream\n                          timeColumn: string\n                          unit: duration\n                      - name: die\n                        params:\n                          msg: string\n                      - name: difference\n                        params:\n                          columns: array\n                          initialZero: bool\n                          keepFirst: bool\n                          nonNegative: bool\n                          tables: stream\n                      - name: display\n                        params:\n                          v: invalid\n                      - name: distinct\n                        params:\n                          column: string\n                          tables: stream\n                      - name: doubleEMA\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: drop\n                        params:\n                          columns: array\n                          fn: function\n                          tables: stream\n                      - name: duplicate\n                        params:\n                          as: string\n                          column: string\n                          tables: stream\n                      - name: duration\n                        params:\n                          v: invalid\n                      - name: elapsed\n                        params:\n                          columnName: string\n                          tables: stream\n                          timeColumn: string\n                          unit: duration\n                      - name: exponentialMovingAverage\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: fill\n                        params:\n                          column: string\n                          tables: stream\n                          usePrevious: bool\n                          value: invalid\n                      - name: filter\n                        params:\n                          fn: function\n                          onEmpty: string\n                          tables: stream\n                      - name: findColumn\n                        params:\n                          column: string\n                          fn: function\n                          tables: stream\n                      - name: findRecord\n                        params:\n                          fn: function\n                          idx: int\n                          tables: stream\n                      - name: first\n                        params:\n                          column: string\n                          tables: stream\n                      - name: float\n                        params:\n                          v: invalid\n                      - name: from\n                        params:\n                          bucket: string\n                          bucketID: string\n                          host: string\n                          org: string\n                          orgID: string\n                          token: string\n                      - name: getColumn\n                        params:\n                          column: string\n                      - name: getRecord\n                        params:\n                          idx: int\n                      - name: group\n                        params:\n                          columns: array\n                          mode: string\n                          tables: stream\n                      - name: highestAverage\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: highestCurrent\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: highestMax\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: histogram\n                        params:\n                          bins: array\n                          column: string\n                          countColumn: string\n                          normalize: bool\n                          tables: stream\n                          upperBoundColumn: string\n                      - name: histogramQuantile\n                        params:\n                          countColumn: string\n                          minValue: float\n                          quantile: float\n                          tables: stream\n                          upperBoundColumn: string\n                          valueColumn: string\n                      - name: holtWinters\n                        params:\n                          column: string\n                          interval: duration\n                          'n': int\n                          seasonality: int\n                          tables: stream\n                          timeColumn: string\n                          withFit: bool\n                      - name: hourSelection\n                        params:\n                          location: object\n                          start: int\n                          stop: int\n                          tables: stream\n                          timeColumn: string\n                      - name: increase\n                        params:\n                          columns: array\n                          tables: stream\n                      - name: int\n                        params:\n                          v: invalid\n                      - name: integral\n                        params:\n                          column: string\n                          interpolate: string\n                          tables: stream\n                          timeColumn: string\n                          unit: duration\n                      - name: join\n                        params:\n                          method: string\n                          'on': array\n                          tables: invalid\n                      - name: kaufmansAMA\n                        params:\n                          column: string\n                          'n': int\n                          tables: stream\n                      - name: kaufmansER\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: keep\n                        params:\n                          columns: array\n                          fn: function\n                          tables: stream\n                      - name: keyValues\n                        params:\n                          keyColumns: array\n                          tables: stream\n                      - name: keys\n                        params:\n                          column: string\n                          tables: stream\n                      - name: last\n                        params:\n                          column: string\n                          tables: stream\n                      - name: length\n                        params:\n                          arr: array\n                      - name: limit\n                        params:\n                          'n': int\n                          offset: int\n                          tables: stream\n                      - name: linearBins\n                        params:\n                          count: int\n                          infinity: bool\n                          start: float\n                          width: float\n                      - name: logarithmicBins\n                        params:\n                          count: int\n                          factor: float\n                          infinity: bool\n                          start: float\n                      - name: lowestAverage\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: lowestCurrent\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: lowestMin\n                        params:\n                          column: string\n                          groupColumns: array\n                          'n': int\n                          tables: stream\n                      - name: map\n                        params:\n                          fn: function\n                          mergeKey: bool\n                          tables: stream\n                      - name: max\n                        params:\n                          column: string\n                          tables: stream\n                      - name: mean\n                        params:\n                          column: string\n                          tables: stream\n                      - name: median\n                        params:\n                          column: string\n                          compression: float\n                          method: string\n                          tables: stream\n                      - name: min\n                        params:\n                          column: string\n                          tables: stream\n                      - name: mode\n                        params:\n                          column: string\n                          tables: stream\n                      - name: movingAverage\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: now\n                        params: {}\n                      - name: pearsonr\n                        params:\n                          'on': array\n                          x: invalid\n                          'y': invalid\n                      - name: pivot\n                        params:\n                          columnKey: array\n                          rowKey: array\n                          tables: stream\n                          valueColumn: string\n                      - name: quantile\n                        params:\n                          column: string\n                          compression: float\n                          method: string\n                          q: float\n                          tables: stream\n                      - name: range\n                        params:\n                          start: invalid\n                          stop: invalid\n                          tables: stream\n                      - name: reduce\n                        params:\n                          fn: function\n                          identity: invalid\n                          tables: stream\n                      - name: relativeStrengthIndex\n                        params:\n                          columns: array\n                          'n': int\n                          tables: stream\n                      - name: rename\n                        params:\n                          columns: invalid\n                          fn: function\n                          tables: stream\n                      - name: sample\n                        params:\n                          column: string\n                          'n': int\n                          pos: int\n                          tables: stream\n                      - name: set\n                        params:\n                          key: string\n                          tables: stream\n                          value: string\n                      - name: skew\n                        params:\n                          column: string\n                          tables: stream\n                      - name: sort\n                        params:\n                          columns: array\n                          desc: bool\n                          tables: stream\n                      - name: spread\n                        params:\n                          column: string\n                          tables: stream\n                      - name: stateCount\n                        params:\n                          column: string\n                          fn: function\n                          tables: stream\n                      - name: stateDuration\n                        params:\n                          column: string\n                          fn: function\n                          tables: stream\n                          timeColumn: string\n                          unit: duration\n                      - name: stateTracking\n                        params:\n                          countColumn: string\n                          durationColumn: string\n                          durationUnit: duration\n                          fn: function\n                          tables: stream\n                          timeColumn: string\n                      - name: stddev\n                        params:\n                          column: string\n                          mode: string\n                          tables: stream\n                      - name: string\n                        params:\n                          v: invalid\n                      - name: sum\n                        params:\n                          column: string\n                          tables: stream\n                      - name: tableFind\n                        params:\n                          fn: function\n                          tables: stream\n                      - name: tail\n                        params:\n                          'n': int\n                          offset: int\n                          tables: stream\n                      - name: time\n                        params:\n                          v: invalid\n                      - name: timeShift\n                        params:\n                          columns: array\n                          duration: duration\n                          tables: stream\n                      - name: timeWeightedAvg\n                        params:\n                          tables: stream\n                          unit: duration\n                      - name: timedMovingAverage\n                        params:\n                          column: string\n                          every: duration\n                          period: duration\n                          tables: stream\n                      - name: to\n                        params:\n                          bucket: string\n                          bucketID: string\n                          fieldFn: function\n                          host: string\n                          measurementColumn: string\n                          org: string\n                          orgID: string\n                          tables: stream\n                          tagColumns: array\n                          timeColumn: string\n                          token: string\n                      - name: toBool\n                        params:\n                          tables: stream\n                      - name: toFloat\n                        params:\n                          tables: stream\n                      - name: toInt\n                        params:\n                          tables: stream\n                      - name: toString\n                        params:\n                          tables: stream\n                      - name: toTime\n                        params:\n                          tables: stream\n                      - name: toUInt\n                        params:\n                          tables: stream\n                      - name: today\n                        params: {}\n                      - name: top\n                        params:\n                          columns: array\n                          'n': int\n                          tables: stream\n                      - name: tripleEMA\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: tripleExponentialDerivative\n                        params:\n                          'n': int\n                          tables: stream\n                      - name: truncateTimeColumn\n                        params:\n                          tables: stream\n                          timeColumn: invalid\n                          unit: duration\n                      - name: uint\n                        params:\n                          v: invalid\n                      - name: union\n                        params:\n                          tables: array\n                      - name: unique\n                        params:\n                          column: string\n                          tables: stream\n                      - name: wideTo\n                        params:\n                          bucket: string\n                          bucketID: string\n                          host: string\n                          org: string\n                          orgID: string\n                          tables: stream\n                          token: string\n                      - name: window\n                        params:\n                          createEmpty: bool\n                          every: duration\n                          location: object\n                          offset: duration\n                          period: duration\n                          startColumn: string\n                          stopColumn: string\n                          tables: stream\n                          timeColumn: string\n                      - name: yield\n                        params:\n                          name: string\n                          tables: stream\n              schema:\n                $ref: '#/components/schemas/FluxSuggestions'\n          description: \u003e\n            Success.\n\n            The response body contains a list of Flux query\n            suggestions--function\n\n            names used in the Flux Query Builder autocomplete suggestions.\n        '301':\n          content:\n            text/html:\n              examples:\n                movedPermanently:\n                  description: \u003e\n                    The URL has been permanently moved. Use\n                    `/api/v2/query/suggestions`.\n                  summary: Invalid URL\n                  value: \u003e\n                    \u003ca\n                    href=\"/api/v2/query/suggestions?orgID=INFLUX_ORG_ID\"\u003eMoved\n                    Permanently\u003c/a\u003e\n              schema:\n                properties:\n                  body:\n                    description: Response message with URL of requested resource.\n                    readOnly: true\n                    type: string\n          description: |\n            Moved Permanently.\n            InfluxData has moved the URL of the endpoint.\n            Use `/api/v2/query/suggestions`.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      summary: Retrieve Flux query suggestions\n      tags:\n        - Query\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request GET\n            \"https://cloud2.influxdata.com/api/v2/query/suggestions\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\"\n  /api/v2/query/suggestions/{name}:\n    get:\n      description: \u003e\n        Retrieves a query suggestion that contains the name and parameters of\n        the\n\n        requested function.\n\n\n        Use this endpoint to pass a branching suggestion (a Flux function name)\n        and\n\n        retrieve the parameters of the requested function.\n\n\n        #### Limitations\n\n\n        - Use `/api/v2/query/suggestions/{name}` (without a trailing slash).\n\n        `/api/v2/query/suggestions/{name}/` (note the trailing slash) results in\n        a\n\n        HTTP `301 Moved Permanently` status.\n\n\n        - The function `name` must exist and must be spelled correctly.\n\n\n        #### Related Guides\n\n\n        - [List of all Flux\n        functions](/influxdb/cloud/flux/v0.x/stdlib/all-functions/).\n      operationId: GetQuerySuggestionsName\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            A Flux Function name.\n            Only returns functions with this name.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    name: sum\n                    params:\n                      column: string\n                      tables: stream\n              schema:\n                $ref: '#/components/schemas/FluxSuggestion'\n          description: |\n            Success.\n            The response body contains the function name and parameters.\n        '500':\n          content:\n            application/json:\n              examples:\n                internalError:\n                  description: |\n                    The requested function doesn't exist.\n                  summary: Invalid function\n                  value:\n                    code: internal error\n                    message: An internal error has occurred\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Internal server error.\n            The value passed for _`name`_ may have been misspelled.\n      summary: Retrieve a query suggestion for a branching suggestion\n      tags:\n        - Query\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request GET\n            \"https://cloud2.influxdata.com/api/v2/query/suggestions/sum/\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\"\n  /api/v2/resources:\n    get:\n      operationId: GetResources\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: All resources targets\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      summary: List all known resources\n      tags:\n        - Resources\n        - System information endpoints\n  /api/v2/scripts:\n    get:\n      description: \u003e\n        Retrieves a list of\n        [scripts](/influxdb/cloud/api-guide/api-invokable-scripts/).\n\n\n        #### Limitations\n\n\n        - Paging with an `offset` greater than the number of records will result\n        in\n\n        an empty response--for example:\n\n          The following request is paging to the 50th record, but the user has only\n          created two scripts.\n\n            ```sh\n            $ curl --request GET \"INFLUX_URL/api/v2/scripts?limit=1\u0026offset=50\"\n\n            $ {\"scripts\":[]}\n            ```\n\n        #### Related Guides\n\n\n        - [Invoke custom\n        scripts](/influxdb/cloud/api-guide/api-invokable-scripts/)\n      operationId: GetScripts\n      parameters:\n        - description: |\n            Limits the number of scripts returned. Default is `100`.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            maximum: 500\n            minimum: 0\n            type: integer\n        - description: |\n            The offset for pagination.\n            The number of records to skip.\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            minimum: 0\n            type: integer\n        - description: The name of the script.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: \u003e\n            A list of label names.\n\n            Only returns scripts that have all these labels.\n\n            To retrieve a script, each name you pass in `labelNames` must\n            exactly match the label for a script.\n          in: query\n          name: labelNames\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n        - description: |\n            A part of the label name.\n            Returns scripts that have a label that contains this phrase.\n          in: query\n          name: labelContains\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    scripts:\n                      - createdAt: '2022-07-17T23:49:45.731237Z'\n                        description: find the last point from Sample Bucket\n                        id: 09afa3b220fe4000\n                        language: flux\n                        name: getLastPointFromSampleBucket\n                        orgID: bea7ea952287f70d\n                        script: \u003e-\n                          from(bucket: SampleBucket) |\u003e range(start: -7d) |\u003e\n                          limit(n:1)\n                        updatedAt: '2022-07-17T23:49:45.731237Z'\n                      - createdAt: '2022-07-17T23:43:26.660308Z'\n                        description: getLastPoint finds the last point in a bucket\n                        id: 09afa23ff13e4000\n                        language: flux\n                        name: getLastPoint\n                        orgID: bea7ea952287f70d\n                        script: \u003e-\n                          from(bucket: params.mybucket) |\u003e range(start: -7d) |\u003e\n                          limit(n:1)\n                        updatedAt: '2022-07-17T23:43:26.660308Z'\n              schema:\n                $ref: '#/components/schemas/Scripts'\n          description: |\n            Success.\n            The response body contains the list of scripts.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidSyntaxError:\n                  summary: Query parameter contains invalid syntax.\n                  value:\n                    code: 3\n                    details: []\n                    message: \u003e-\n                      parsing field \"limit\": strconv.ParseUint: parsing \"-1\":\n                      invalid syntax\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error.\n      summary: List scripts\n      tags:\n        - Data I/O endpoints\n        - Invokable Scripts\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request GET\n            \"https://cloud2.influxdata.com/api/v2/scripts?limit=100\u0026offset=0\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\"\n    post:\n      description: \u003e\n        Creates an [invokable\n        script](https://docs.influxdata.com/resources/videos/api-invokable-scripts/)\n\n        and returns the created script.\n\n\n        #### Related Guides\n\n\n        - [Invokable scripts](/influxdb/cloud/api-guide/api-invokable-scripts/).\n\n        - [Creating custom InfluxDB\n        endpoints](https://docs.influxdata.com/resources/videos/api-invokable-scripts/).\n      operationId: PostScripts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptCreateRequest'\n        description: The script to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                successResponse:\n                  value:\n                    createdAt: '2022-07-17T23:43:26.660308Z'\n                    description: getLastPoint finds the last point in a bucket\n                    id: 09afa23ff13e4000\n                    language: flux\n                    name: getLastPoint\n                    orgID: bea7ea952287f70d\n                    script: \u003e-\n                      from(bucket: params.mybucket) |\u003e range(start: -7d) |\u003e\n                      limit(n:1)\n                    updatedAt: '2022-07-17T23:43:26.660308Z'\n              schema:\n                $ref: '#/components/schemas/Script'\n          description: |\n            Success.\n            The response body contains the script and its metadata.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidCharacterValue:\n                  description: |\n                    If the request body contains an invalid character, returns\n                    `invalid` with detail about the problem.\n                  summary: Invalid character\n                  value:\n                    code: invalid\n                    details: []\n                    message: invalid character ',' looking for beginning of value\n                invalidJSONStringValue:\n                  description: |\n                    If the request body contains invalid JSON, returns `invalid`\n                    with detail about the problem.\n                  summary: Invalid JSON\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      invalid json: invalid character '\\'' looking for beginning\n                      of value\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '422':\n          content:\n            application/json:\n              examples:\n                uniquenessError:\n                  description: |\n                    A script with the same `name` exists.\n                  value:\n                    code: conflict\n                    message: uniqueness violation\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Unprocessable entity.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error.\n      summary: Create a script\n      tags:\n        - Invokable Scripts\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: |\n            curl --request POST \"https://cloud2.influxdata.com/api/v2/scripts\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --header \"Accept: application/json\" \\\n              --header \"Content-Type: application/json\" \\\n              --data '{\n                  \"name\": \"getLastPoint\",\n                  \"description\": \"getLastPoint finds the last point in a bucket\",\n                  \"orgID\": \"INFLUX_ORG_ID\",\n                  \"script\": \"from(bucket: INFLUX_BUCKET) |\u003e range(start: -7d) |\u003e limit(n:1)\",\n                  \"language\": \"flux\"\n                }'\n  /api/v2/scripts/{scriptID}:\n    delete:\n      description: Deletes a script and all associated records.\n      operationId: DeleteScriptsID\n      parameters:\n        - description: The ID of the script to delete.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The script is deleted.\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Delete a script\n      tags:\n        - Invokable Scripts\n    get:\n      description: Uses script ID to retrieve details of an invokable script.\n      operationId: GetScriptsID\n      parameters:\n        - description: The script ID.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n          description: The requested script object.\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Retrieve a script\n      tags:\n        - Data I/O endpoints\n        - Invokable Scripts\n    patch:\n      description: \u003e\n        Updates properties (`name`, `description`, and `script`) of an invokable\n        script.\n      operationId: PatchScriptsID\n      parameters:\n        - description: The script ID.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptUpdateRequest'\n        description: Script update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n          description: The updated script.\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Update a script\n      tags:\n        - Invokable Scripts\n  /api/v2/scripts/{scriptID}/invoke:\n    post:\n      description: \u003e\n        Invokes a script and substitutes `params` keys referenced in the script\n        with\n\n        `params` key-values sent in the request body--for example:\n\n\n        The following script contains the parameter _`mybucket`_:\n\n\n        ```json\n\n        \"script\": \"from(bucket: params.mybucket)\n                    |\u003e range(start: -7d)\n                    |\u003e limit(n:1)\"\n        ```\n\n        The following example `POST /api/v2/scripts/SCRIPT_ID/invoke` request\n        body\n\n        passes a value for _`mybucket`_:\n\n\n        ```json\n\n        {\n          \"params\": {\n            \"mybucket\": \"air_sensor\"\n          }\n        }\n\n        ```\n\n\n        #### Related Guides\n\n        - [Invoke custom\n        scripts](/influxdb/cloud/api-guide/api-invokable-scripts/)\n      operationId: PostScriptsIDInvoke\n      parameters:\n        - description: |\n            Script ID.\n            Only returns scripts with this ID.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptInvocationParams'\n      responses:\n        '200':\n          content:\n            text/csv:\n              examples:\n                successResponse:\n                  value: \u003e\n                    ,result,table,_start,_stop,_time,_value,_field,_measurement,host\n\n                    ,_result,0,2019-10-30T01:28:02.52716421Z,2022-07-26T01:28:02.52716421Z,2020-01-01T00:00:00Z,72.01,used_percent,mem,host2\n              schema:\n                $ref: '#/components/schemas/ScriptHTTPResponseData'\n          description: |\n            Success.\n            The response body contains the result of the script execution.\n        '400':\n          content:\n            application/json:\n              examples:\n                invalidParameters:\n                  summary: The parameters passed to the script are invalid.\n                  value:\n                    code: invalid\n                    message: invalid parameters provided\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n          headers:\n            X-Platform-Error-Code:\n              description: |\n                The reason for the error.\n              schema:\n                example: invalid\n                type: string\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          content:\n            application/json:\n              examples:\n                bucketNotFound:\n                  summary: |\n                    The requested bucket was not found.\n                  value:\n                    code: not found\n                    message: \u003e-\n                      failed to initialize execute state: could not find bucket\n                      \"test-bucket\"\n                scriptNotFound:\n                  summary: |\n                    The requested script was not found.\n                  value:\n                    code: not found\n                    message: script \"09afa3b220fe400\" not found\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Not found.\n          headers:\n            X-Platform-Error-Code:\n              description: |\n                The reason for the error.\n              schema:\n                example: not found\n                type: string\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error.\n      summary: Invoke a script\n      tags:\n        - Data I/O endpoints\n        - Invokable Scripts\n      x-codeSamples:\n        - label: cURL\n          lang: Shell\n          source: \u003e\n            curl --request POST\n            \"https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID/invoke\" \\\n                      --header \"Authorization: Token INFLUX_TOKEN\" \\\n                      --header 'Accept: application/csv' \\\n                      --header 'Content-Type: application/json' \\\n                      --data '{\n                        \"params\": {\n                            \"mybucket\": \"air_sensor\"\n                            }\n                        }'\n  /api/v2/scripts/{scriptID}/labels/add:\n    patch:\n      description: Adds labels to a script and returns the updated script.\n      operationId: PatchScriptsIDAddLabels\n      parameters:\n        - description: The script ID.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: A list of label names to add.\n                  example:\n                    - label1\n                    - label2\n                    - label3\n                  items:\n                    type: string\n                  type: array\n              type: object\n        description: The names of labels to add to the script.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n          description: |\n            Success.\n            The response body contains the updated script.\n        '400':\n          $ref: '#/components/responses/ServerError'\n          description: Bad request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ServerError'\n          description: Script not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error.\n      summary: Adds labels to a script\n      tags:\n        - Data I/O endpoints\n        - Invokable Scripts\n  /api/v2/scripts/{scriptID}/labels/remove:\n    patch:\n      description: Removes labels from a script and returns the updated script.\n      operationId: PatchScriptsIDRemoveLabels\n      parameters:\n        - description: The script ID.\n          in: path\n          name: scriptID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: A list of label names to remove.\n                  example:\n                    - label1\n                    - label2\n                    - label3\n                  items:\n                    type: string\n                  type: array\n              type: object\n        description: The names of labels to remove from the script.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Script'\n          description: |\n            Success.\n            The response body contains the updated script.\n        '400':\n          $ref: '#/components/responses/ServerError'\n          description: Bad request.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ServerError'\n          description: Script not found.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error.\n      summary: Removes labels from a script\n      tags:\n        - Data I/O endpoints\n        - Invokable Scripts\n  /api/v2/setup:\n    get:\n      description: \u003e-\n        Check if setup is allowed. Returns `true` if no default user,\n        organization, or bucket have been created.\n      operationId: GetSetup\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IsOnboarding'\n          description: Setup is allowed, true or false\n      summary: Retrieve setup status\n      tags:\n        - Setup\n    post:\n      description: \u003e-\n        Post an onboarding request to create an initial user, organization, and\n        bucket.\n      operationId: PostSetup\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n        description: Source to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n          description: The created default user, bucket, and organization\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Create an initial user, organization, and bucket\n      tags:\n        - Setup\n  /api/v2/setup/user:\n    post:\n      description: \u003e-\n        Post an onboarding request to create a new user, organization, and\n        bucket.\n      operationId: PostSetupUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n        description: Source to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n          description: The created default user, bucket, and organization.\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Create a new user, organization, and bucket\n      tags:\n        - Setup\n  /api/v2/signin:\n    post:\n      description: \u003e-\n        Authenticates ***Basic Auth*** credentials for a user. If successful,\n        creates a new UI session for the user.\n      operationId: PostSignin\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '204':\n          description: Success. User authenticated.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized access.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User account is disabled.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsuccessful authentication.\n      security:\n        - BasicAuthentication: []\n      summary: Create a user session.\n      tags:\n        - Signin\n  /api/v2/signout:\n    post:\n      description: Expires the current UI session for the user.\n      operationId: PostSignout\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '204':\n          description: Session successfully expired\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized access\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsuccessful session expiry\n      summary: Expire the current UI session\n      tags:\n        - Signout\n  /api/v2/stacks:\n    get:\n      description: |\n        Retrieves a list of installed InfluxDB stacks.\n\n        To limit stacks in the response, pass query parameters in your request.\n        If no query parameters are passed, InfluxDB returns all installed stacks\n        for the organization.\n      operationId: ListStacks\n      parameters:\n        - description: |\n            The ID of the organization that owns the stacks.\n            Only returns stacks owned by this organization.\n\n            #### InfluxDB Cloud\n\n            - Doesn't require this parameter;\n              InfluxDB only returns resources allowed by the API token.\n          in: query\n          name: orgID\n          required: true\n          schema:\n            type: string\n        - description: \u003e\n            The stack name.\n\n            Finds stack `events` with this name and returns the stacks.\n\n\n            Repeatable.\n\n            To filter for more than one stack name,\n\n            repeat this parameter with each name--for example:\n\n\n            -\n            `http://localhost:8086/api/v2/stacks?\u0026orgID=INFLUX_ORG_ID\u0026name=project-stack-0\u0026name=project-stack-1`\n          examples:\n            findStackByName:\n              summary: Find stacks with the event name\n              value: project-stack-0\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: \u003e\n            The stack ID.\n\n            Only returns stacks with this ID.\n\n\n            Repeatable.\n\n            To filter for more than one stack ID,\n\n            repeat this parameter with each ID--for example:\n\n\n            -\n            `http://localhost:8086/api/v2/stacks?\u0026orgID=INFLUX_ORG_ID\u0026stackID=09bd87cd33be3000\u0026stackID=09bef35081fe3000`\n          examples:\n            findStackByID:\n              summary: Find a stack with the ID\n              value: 09bd87cd33be3000\n          in: query\n          name: stackID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  stacks:\n                    items:\n                      $ref: '#/components/schemas/Stack'\n                    type: array\n                type: object\n          description: Success. The response body contains the list of stacks.\n        '400':\n          content:\n            application/json:\n              examples:\n                orgIdMissing:\n                  summary: The orgID query parameter is missing\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      organization id[\"\"] is invalid: id must have a length of\n                      16 bytes\n                orgProvidedNotFound:\n                  summary: \u003e-\n                    The org or orgID passed doesn't own the token passed in the\n                    header\n                  value:\n                    code: invalid\n                    message: 'failed to decode request body: organization not found'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Bad request.\n\n            The response body contains detail about the error.\n\n\n            #### InfluxDB OSS\n\n\n            - Returns this error if an incorrect value is passed for `org` or\n            `orgID`.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List installed stacks\n      tags:\n        - Templates\n    post:\n      description: \u003e\n        Creates or initializes a stack.\n\n\n        Use this endpoint to _manually_ initialize a new stack with the\n        following\n\n        optional information:\n\n          - Stack name\n          - Stack description\n          - URLs for template manifest files\n\n        To automatically create a stack when applying templates,\n\n        use the [/api/v2/templates/apply endpoint](#operation/ApplyTemplate).\n\n\n        #### Required permissions\n\n\n        - `write` permission for the organization\n\n\n        #### Related guides\n\n\n        - [InfluxDB stacks](/influxdb/cloud/influxdb-templates/stacks/)\n\n        - [Use InfluxDB\n        templates](/influxdb/cloud/influxdb-templates/use/#apply-templates-to-an-influxdb-instance)\n      operationId: CreateStack\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  type: string\n                name:\n                  type: string\n                orgID:\n                  type: string\n                urls:\n                  items:\n                    type: string\n                  type: array\n              title: PostStackRequest\n              type: object\n        description: The stack to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stack'\n          description: Success. Returns the newly created stack.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Unprocessable entity.\n\n\n            The error may indicate one of the following problems:\n\n\n            - The request body isn't valid--the request is well-formed, but\n            InfluxDB can't process it due to semantic errors.\n\n            - You passed a parameter combination that InfluxDB doesn't support.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a stack\n      tags:\n        - Templates\n  /api/v2/stacks/{stack_id}:\n    delete:\n      operationId: DeleteStack\n      parameters:\n        - description: The identifier of the stack.\n          in: path\n          name: stack_id\n          required: true\n          schema:\n            type: string\n        - description: The identifier of the organization.\n          in: query\n          name: orgID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: The stack and its associated resources were deleted.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a stack and associated resources\n      tags:\n        - Templates\n    get:\n      operationId: ReadStack\n      parameters:\n        - description: The identifier of the stack.\n          in: path\n          name: stack_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stack'\n          description: Returns the stack.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a stack\n      tags:\n        - Templates\n    patch:\n      operationId: UpdateStack\n      parameters:\n        - description: The identifier of the stack.\n          in: path\n          name: stack_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                additionalResources:\n                  items:\n                    properties:\n                      kind:\n                        type: string\n                      resourceID:\n                        type: string\n                      templateMetaName:\n                        type: string\n                    required:\n                      - kind\n                      - resourceID\n                    type: object\n                  type: array\n                description:\n                  nullable: true\n                  type: string\n                name:\n                  nullable: true\n                  type: string\n                templateURLs:\n                  items:\n                    type: string\n                  nullable: true\n                  type: array\n              title: PatchStackRequest\n              type: object\n        description: The stack to update.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stack'\n          description: Returns the updated stack.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a stack\n      tags:\n        - Templates\n  /api/v2/stacks/{stack_id}/uninstall:\n    post:\n      operationId: UninstallStack\n      parameters:\n        - description: The identifier of the stack.\n          in: path\n          name: stack_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Stack'\n          description: Returns the uninstalled stack.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Uninstall a stack\n      tags:\n        - Templates\n  /api/v2/tasks:\n    get:\n      description: \u003e\n        Retrieves a list of [tasks](/influxdb/cloud/process-data/).\n\n\n        To limit which tasks are returned, pass query parameters in your\n        request.\n\n        If no query parameters are passed, InfluxDB returns all tasks up to the\n        default `limit`.\n      operationId: GetTasks\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            Task name.\n            Only returns tasks with this name.\n            Different tasks may have the same name.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: |\n            Task ID.\n            Only returns tasks created after this task.\n          in: query\n          name: after\n          schema:\n            type: string\n        - description: |\n            User ID.\n            Only returns tasks owned by this user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: |\n            Organization name.\n            Only returns tasks owned by this organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: |\n            Organization ID.\n            Only returns tasks owned by this organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - in: query\n          name: status\n          schema:\n            description: |\n              Task status (`active` or `inactive`).\n              Only returns tasks with this status.\n            enum:\n              - active\n              - inactive\n            type: string\n        - description: \u003e\n            Limits the number of tasks returned. Default is `100`.\n\n\n            To reduce the payload size, combine _`type=basic`_ and _`limit`_\n            (see _Request samples_)\n\n            For more information about the `basic` response, see the _`type`_\n            parameter.\n          examples:\n            all:\n              summary: Return all tasks, without pagination.\n              value: '-1'\n            minPaginated:\n              summary: Return a maximum of 50 tasks.\n              value: '50'\n          in: query\n          name: limit\n          schema:\n            default: 100\n            maximum: 500\n            minimum: -1\n            type: integer\n        - description: The number of records to skip.\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            minimum: 0\n            type: integer\n        - description: |\n            The field used for sorting records in the list.\n            Only `name` is supported.\n          in: query\n          name: sortBy\n          required: false\n          schema:\n            enum:\n              - name\n            type: string\n        - description: \u003e\n            Task type (`basic` or `system`).\n\n\n            The default (`system`) response contains all the metadata properties\n            for tasks.\n\n            To reduce the payload size, pass `basic` to omit some task\n            properties (`flux`, `createdAt`, `updatedAt`) from the response.\n          in: query\n          name: type\n          required: false\n          schema:\n            default: ''\n            enum:\n              - basic\n              - system\n            type: string\n        - description: |\n            Script ID.\n            Only returns tasks that use this script.\n          in: query\n          name: scriptID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tasks'\n          description: |\n            Success.\n            The response body contains the list of tasks.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: List all tasks\n      tags:\n        - Data I/O endpoints\n        - Tasks\n      x-codeSamples:\n        - label: 'cURL: all tasks, basic output'\n          lang: Shell\n          source: \u003e\n            curl https://cloud2.influxdata.com/api/v2/tasks/?limit=-1\u0026type=basic\n            \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Token INFLUX_API_TOKEN'\n    post:\n      description: \u003e\n        Creates a [task](/influxdb/cloud/process-data/) and returns the created\n        task.\n\n\n        Use this endpoint to create a scheduled task that runs a Flux script.\n\n\n        #### InfluxDB Cloud\n\n\n        - You can use either `flux` or `scriptID` to provide the task script.\n\n          - `flux`: a string of \"raw\" Flux that contains task options and the script--for example:\n\n              ```json\n              {\n                \"flux\": \"option task = {name: \\\"CPU Total 1 Hour New\\\", every: 1h}\\\n                from(bucket: \\\"telegraf\\\")\n                  |\u003e range(start: -1h)\n                  |\u003e filter(fn: (r) =\u003e (r._measurement == \\\"cpu\\\"))\n                  |\u003e filter(fn: (r) =\u003e\\n\\t\\t(r._field == \\\"usage_system\\\"))\n                  |\u003e filter(fn: (r) =\u003e (r.cpu == \\\"cpu-total\\\"))\n                  |\u003e aggregateWindow(every: 1h, fn: max)\n                  |\u003e to(bucket: \\\"cpu_usage_user_total_1h\\\", org: \\\"INFLUX_ORG\\\")\",\n                \"status\": \"active\",\n                \"description\": \"This task downsamples CPU data every hour\"\n              }\n              ```\n\n          - `scriptID`: the ID of an [invokable script](#tag/Invokable-Scripts)\n            for the task to run.\n            To pass task options when using `scriptID`, pass the options as\n            properties in the request body--for example:\n\n              ```json\n              {\n                \"name\": \"CPU Total 1 Hour New\",\n                \"description\": \"This task downsamples CPU data every hour\",\n                \"every\": \"1h\",\n                \"scriptID\": \"SCRIPT_ID\",\n                \"scriptParameters\":\n                  {\n                    \"rangeStart\": \"-1h\",\n                    \"bucket\": \"telegraf\",\n                    \"filterField\": \"cpu-total\"\n                  }\n                }\n              ```\n\n        #### Limitations:\n\n          - You can't use `flux` and `scriptID` for the same task.\n\n        #### Related guides\n\n\n        - [Get started with tasks](/influxdb/cloud/process-data/get-started/)\n\n        - [Create a\n        task](/influxdb/cloud/process-data/manage-tasks/create-task/)\n\n        - [Common tasks](/influxdb/cloud/process-data/common-tasks/)\n\n        - [Task configuration\n        options](/influxdb/cloud/process-data/task-options/)\n      operationId: PostTasks\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskCreateRequest'\n        description: The task to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: \u003e-\n            Success. The response body contains a `tasks` list with the new\n            task.\n        '400':\n          content:\n            application/json:\n              examples:\n                fluxAndScriptError:\n                  summary: The request body can't contain both flux and scriptID\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      failed to decode request: can not provide both scriptID\n                      and flux\n                missingFluxError:\n                  summary: \u003e-\n                    The request body requires either a flux parameter or\n                    scriptID parameter\n                  value:\n                    code: invalid\n                    message: 'failed to decode request: flux required'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n            The response body contains detail about the error.\n\n            #### InfluxDB Cloud\n\n              - Returns this error if the task doesn't contain one of _`flux`_ or _`scriptID`_.\n              - Returns this error if the task contains _`flux`_ _and_ _`scriptID`_.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a task\n      tags:\n        - Data I/O endpoints\n        - Tasks\n      x-codeSamples:\n        - label: 'cURL: create a Flux script task'\n          lang: Shell\n          source: |\n            curl https://cloud2.influxdata.com/api/v2/tasks \\\n            --header \"Content-type: application/json\" \\\n            --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n            --data-binary @- \u003c\u003c EOF\n              {\n                \"orgID\": \"INFLUX_ORG_ID\",\n                \"description\": \"IoT Center 30d environment average.\",\n                \"flux\": \"option task = {name: \\\"iot-center-task-1\\\", every: 30m}\\\n                        from(bucket: \\\"iot_center\\\")\\\n                          |\u003e range(start: -30d)\\\n                          |\u003e filter(fn: (r) =\u003e r._measurement == \\\"environment\\\")\\\n                          |\u003e aggregateWindow(every: 1h, fn: mean)\"\n              }\n            EOF\n        - label: 'cURL: create a Flux script reference task'\n          lang: Shell\n          source: |\n            curl https://cloud2.influxdata.com/api/v2/tasks \\\n            --header \"Content-type: application/json\" \\\n            --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n            --data-binary @- \u003c\u003c EOF\n              {\n                \"orgID\": \"INFLUX_ORG_ID\",\n                \"description\": \"IoT Center 30d environment average.\",\n                \"scriptID\": \"085138a111448000\",\n                \"scriptParameters\":\n                  {\n                    \"rangeStart\": \"-30d\",\n                    \"bucket\": \"air_sensor\",\n                    \"filterField\": \"temperature\",\n                    \"groupColumn\": \"_time\"\n                  }\n              }\n            EOF\n  /api/v2/tasks/{taskID}:\n    delete:\n      description: \u003e\n        Deletes a task and associated records.\n\n\n        Use this endpoint to delete a task and all associated records (task\n        runs, logs, and labels).\n\n        Once the task is deleted, InfluxDB cancels all scheduled runs of the\n        task.\n\n\n        If you want to disable a task instead of delete it, [update the task\n        status to `inactive`](#operation/PatchTasksID).\n      operationId: DeleteTasksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to delete.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success. The task and runs are deleted. Scheduled runs are canceled.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Delete a task\n      tags:\n        - Tasks\n    get:\n      description: |\n        Retrieves a [task](/influxdb/cloud/reference/glossary/#task).\n      operationId: GetTasksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to retrieve.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: Success. The response body contains the task.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve a task\n      tags:\n        - Data I/O endpoints\n        - Tasks\n    patch:\n      description: \u003e\n        Updates a task and then cancels all scheduled runs of the task.\n\n\n        Use this endpoint to set, modify, and clear task properties (for\n        example: `cron`, `name`, `flux`, `status`).\n\n        Once InfluxDB applies the update, it cancels all previously scheduled\n        runs of the task.\n\n\n        To update a task, pass an object that contains the updated key-value\n        pairs.\n\n        To activate or inactivate a task, set the `status` property.\n\n        _`\"status\": \"inactive\"`_ cancels scheduled runs and prevents manual runs\n        of the task.\n\n\n        #### InfluxDB Cloud\n\n\n        - You can use either `flux` or `scriptID` to provide the task script.\n\n          - `flux`: a string of \"raw\" Flux that contains task options and the script--for example:\n\n              ```json\n              {\n                \"flux\": \"option task = {name: \\\"CPU Total 1 Hour New\\\", every: 1h}\\\n                from(bucket: \\\"telegraf\\\")\n                  |\u003e range(start: -1h)\n                  |\u003e filter(fn: (r) =\u003e (r._measurement == \\\"cpu\\\"))\n                  |\u003e filter(fn: (r) =\u003e\\n\\t\\t(r._field == \\\"usage_system\\\"))\n                  |\u003e filter(fn: (r) =\u003e (r.cpu == \\\"cpu-total\\\"))\n                  |\u003e aggregateWindow(every: 1h, fn: max)\n                  |\u003e to(bucket: \\\"cpu_usage_user_total_1h\\\", org: \\\"INFLUX_ORG\\\")\",\n                \"status\": \"active\",\n                \"description\": \"This task downsamples CPU data every hour\"\n              }\n              ```\n\n          - `scriptID`: the ID of an [invokable script](#tag/Invokable-Scripts)\n            for the task to run.\n            To pass task options when using `scriptID`, pass the options as\n            properties in the request body--for example:\n\n              ```json\n              {\n                \"name\": \"CPU Total 1 Hour New\",\n                \"description\": \"This task downsamples CPU data every hour\",\n                \"every\": \"1h\",\n                \"scriptID\": \"SCRIPT_ID\",\n                \"scriptParameters\":\n                  {\n                    \"rangeStart\": \"-1h\",\n                    \"bucket\": \"telegraf\",\n                    \"filterField\": \"cpu-total\"\n                  }\n                }\n              ```\n\n        #### Limitations:\n\n\n        - You can't use `flux` and `scriptID` for the same task.\n      operationId: PatchTasksID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to update.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskUpdateRequest'\n        description: An object that contains updated task properties to apply.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: Success. The response body contains the updated task.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Update a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/labels:\n    get:\n      description: |\n        Retrieves a list of all labels for a task.\n\n        Labels may be used for grouping and filtering tasks.\n      operationId: GetTasksIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to retrieve labels for.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: \u003e-\n            Success. The response body contains a list of all labels for the\n            task.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: List labels for a task\n      tags:\n        - Tasks\n    post:\n      description: \u003e\n        Adds a label to a task.\n\n\n        Use this endpoint to add a label that you can use to filter tasks in the\n        InfluxDB UI.\n      operationId: PostTasksIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to label.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: An object that contains a _`labelID`_ to add to the task.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: \u003e-\n            Success. The response body contains a list of all labels for the\n            task.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Add a label to a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/labels/{labelID}:\n    delete:\n      description: |\n        Deletes a label from a task.\n      operationId: DeleteTasksIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to delete the label from.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the label to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Success. The label is deleted.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Delete a label from a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/logs:\n    get:\n      description: \u003e\n        Retrieves a list of all logs for a\n        [task](/influxdb/cloud/reference/glossary/#task).\n\n\n        When an InfluxDB task runs, a “run” record is created in the task’s\n        history.\n\n        Logs associated with each run provide relevant log messages, timestamps,\n        and the exit status of the run attempt.\n\n\n        Use this endpoint to retrieve only the log events for a task,\n\n        without additional task metadata.\n      operationId: GetTasksIDLogs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                taskFailure:\n                  summary: Events for a failed task run.\n                  value:\n                    events:\n                      - message: \u003e-\n                          Started task from script: \"option task = {name: \\\"test\n                          task\\\", every: 3d, offset: 0s}\"\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T07:06:54.198167Z'\n                      - message: Completed(failed)\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T07:07:13.104037Z'\n                      - message: \u003e-\n                          error exhausting result iterator: error in query\n                          specification while starting program: this Flux script\n                          returns no streaming data. Consider adding a \"yield\"\n                          or invoking streaming functions directly, without\n                          performing an assignment\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T08:24:37.115323Z'\n                taskSuccess:\n                  summary: Events for a successful task run.\n                  value:\n                    events:\n                      - message: \u003e-\n                          Started task from script: \"option task = {name:\n                          \\\"task1\\\", every: 30m} from(bucket: \\\"iot_center\\\") |\u003e\n                          range(start: -90d) |\u003e filter(fn: (r) =\u003e r._measurement\n                          == \\\"environment\\\") |\u003e aggregateWindow(every: 1h, fn:\n                          mean)\"\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.101231Z'\n                      - message: Completed(success)\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.242859Z'\n              schema:\n                $ref: '#/components/schemas/Logs'\n          description: \u003e\n            Success. The response body contains an `events` list with logs for\n            the task.\n\n            Each log event `message` contains detail about the event.\n\n            If a task run fails, InfluxDB logs an event with the reason for the\n            failure.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve all logs for a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/members:\n    get:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n      operationId: GetTasksIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMembers'\n          description: |\n            Success. The response body contains a list of `users` that have\n            the `member` role for a task.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all task members\n      tags:\n        - Tasks\n    post:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n\n\n        Adds a user to members of a task and returns the newly created member\n        with\n\n        role and user detail.\n      operationId: PostTasksIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: A user to add as a member of the task.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMember'\n          description: Created. The user is added to task members.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a member to a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/members/{userID}:\n    delete:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n      operationId: DeleteTasksIDMembersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the member to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Member removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove a member from a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/owners:\n    get:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n\n\n        Retrieves all users that have owner permission for a task.\n      operationId: GetTasksIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to retrieve owners for.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwners'\n          description: \u003e\n            Success.\n\n            The response contains a list of `users` that have the `owner` role\n            for the task.\n\n\n            If the task has no owners, the response contains an empty `users`\n            array.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Unprocessable entity.\n\n\n            The error may indicate one of the following problems:\n\n\n            - The request body isn't valid--the request is well-formed, but\n            InfluxDB can't process it due to semantic errors.\n\n            - You passed a parameter combination that InfluxDB doesn't support.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all owners of a task\n      tags:\n        - Tasks\n    post:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n\n\n        Assigns a task `owner` role to a user.\n\n\n        Use this endpoint to create a _resource owner_ for the task.\n\n        A _resource owner_ is a user with `role: owner` for a specific resource.\n      operationId: PostTasksIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: A user to add as an owner of the task.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              examples:\n                createdOwner:\n                  summary: User has the owner role for the resource\n                  value:\n                    id: 0772396d1f411000\n                    links:\n                      logs: /api/v2/users/0772396d1f411000/logs\n                      self: /api/v2/users/0772396d1f411000\n                    name: USER_NAME\n                    role: owner\n                    status: active\n              schema:\n                $ref: '#/components/schemas/ResourceOwner'\n          description: |\n            Created. The task `owner` role is assigned to the user.\n            The response body contains the resource owner with\n            role and user detail.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Unprocessable entity.\n\n\n            The error may indicate one of the following problems:\n\n\n            - The request body isn't valid--the request is well-formed, but\n            InfluxDB can't process it due to semantic errors.\n\n            - You passed a parameter combination that InfluxDB doesn't support.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add an owner for a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/owners/{userID}:\n    delete:\n      deprecated: true\n      description: \u003e\n        **Deprecated**: Tasks don't use `owner` and `member` roles.\n\n        Use [`/api/v2/authorizations`](#tag/Authorizations) to assign user\n        permissions.\n      operationId: DeleteTasksIDOwnersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the owner to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The task ID.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Owner removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove an owner from a task\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/runs:\n    get:\n      description: \u003e\n        Retrieves a list of runs for a [task](/influxdb/cloud/process-data/).\n\n\n        To limit which task runs are returned, pass query parameters in your\n        request.\n\n        If no query parameters are passed, InfluxDB returns all task runs up to\n        the default `limit`.\n      operationId: GetTasksIDRuns\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The ID of the task to get runs for.\n            Only returns runs for this task.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: A task run ID. Only returns runs created after this run.\n          in: query\n          name: after\n          schema:\n            type: string\n        - description: |\n            Limits the number of task runs returned. Default is `100`.\n          in: query\n          name: limit\n          schema:\n            default: 100\n            maximum: 500\n            minimum: 1\n            type: integer\n        - description: \u003e\n            A timestamp ([RFC3339 date/time\n            format](/influxdb/cloud/reference/glossary/#rfc3339-timestamp)).\n\n            Only returns runs scheduled after this time.\n          in: query\n          name: afterTime\n          schema:\n            format: date-time\n            type: string\n        - description: \u003e\n            A timestamp ([RFC3339 date/time\n            format](/influxdb/cloud/reference/glossary/#rfc3339-timestamp)).\n\n            Only returns runs scheduled before this time.\n          in: query\n          name: beforeTime\n          schema:\n            format: date-time\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Runs'\n          description: Success. The response body contains the list of task runs.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: List runs for a task\n      tags:\n        - Tasks\n    post:\n      description: \u003e\n        Schedules a task run to start immediately, ignoring scheduled runs.\n\n\n        Use this endpoint to manually start a task run.\n\n        Scheduled runs will continue to run as scheduled.\n\n        This may result in concurrently running tasks.\n\n\n        To _retry_ a previous run (and avoid creating a new run),\n\n        use the [`POST\n        /api/v2/tasks/{taskID}/runs/{runID}/retry`](#operation/PostTasksIDRunsIDRetry)\n        endpoint.\n      operationId: PostTasksIDRuns\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RunManually'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: Success. The run is scheduled to start.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Start a task run, overriding the schedule\n      tags:\n        - Data I/O endpoints\n        - Tasks\n  /api/v2/tasks/{taskID}/runs/{runID}:\n    delete:\n      description: |\n        Cancels a running [task](/influxdb/cloud/reference/glossary/#task).\n\n        Use this endpoint with InfluxDB OSS to cancel a running task.\n\n        #### InfluxDB Cloud\n\n        - Doesn't support this operation.\n      operationId: DeleteTasksIDRunsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to cancel.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the task run to cancel.\n          in: path\n          name: runID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: |\n            Success. The `DELETE` is accepted and the run will be cancelled.\n\n            #### InfluxDB Cloud\n\n            - Doesn't support this operation.\n            - Doesn't return this status.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '405':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Method not allowed.\n\n            #### InfluxDB Cloud\n\n              - Always returns this error; doesn't support cancelling tasks.\n\n            #### InfluxDB OSS\n\n              - Doesn't return this error.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Cancel a running task\n      tags:\n        - Tasks\n    get:\n      description: \u003e\n        Retrieves a specific run for a\n        [task](/influxdb/cloud/reference/glossary/#task).\n\n\n        Use this endpoint to retrieve detail and logs for a specific task run.\n      operationId: GetTasksIDRunsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to retrieve runs for.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the run to retrieve.\n          in: path\n          name: runID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                runSuccess:\n                  summary: A successful task run.\n                  value:\n                    finishedAt: '2022-07-18T14:46:07.308254Z'\n                    id: 09b070dadaa7d000\n                    links:\n                      logs: \u003e-\n                        /api/v2/tasks/0996e56b2f378000/runs/09b070dadaa7d000/logs\n                      retry: \u003e-\n                        /api/v2/tasks/0996e56b2f378000/runs/09b070dadaa7d000/retry\n                      self: /api/v2/tasks/0996e56b2f378000/runs/09b070dadaa7d000\n                      task: /api/v2/tasks/0996e56b2f378000\n                    log:\n                      - message: \u003e-\n                          Started task from script: \"option task = {name:\n                          \\\"task1\\\", every: 30m} from(bucket: \\\"iot_center\\\") |\u003e\n                          range(start: -90d) |\u003e filter(fn: (r) =\u003e r._measurement\n                          == \\\"environment\\\")               |\u003e\n                          aggregateWindow(every: 1h, fn: mean)\"\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.101231Z'\n                      - message: Completed(success)\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.242859Z'\n                    requestedAt: '2022-07-18T14:46:06Z'\n                    scheduledFor: '2022-07-18T14:46:06Z'\n                    startedAt: '2022-07-18T14:46:07.16222Z'\n                    status: success\n                    taskID: 0996e56b2f378000\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: Success. The response body contains the task run.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve a run for a task.\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/runs/{runID}/logs:\n    get:\n      description: \u003e\n        Retrieves all logs for a task run.\n\n        A log is a list of run events with `runID`, `time`, and `message`\n        properties.\n\n\n        Use this endpoint to help analyze task performance and troubleshoot\n        failed task runs.\n      operationId: GetTasksIDRunsIDLogs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to get logs for.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the run to get logs for.\n          in: path\n          name: runID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                taskFailure:\n                  summary: Events for a failed task.\n                  value:\n                    events:\n                      - message: \u003e-\n                          Started task from script: \"option task = {name: \\\"test\n                          task\\\", every: 3d, offset: 0s}\"\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T07:06:54.198167Z'\n                      - message: Completed(failed)\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T07:07:13.104037Z'\n                      - message: \u003e-\n                          error exhausting result iterator: error in query\n                          specification while starting program: this Flux script\n                          returns no streaming data. Consider adding a \"yield\"\n                          or invoking streaming functions directly, without\n                          performing an assignment\n                        runID: 09a946fc3167d000\n                        time: '2022-07-13T08:24:37.115323Z'\n                taskSuccess:\n                  summary: Events for a successful task run.\n                  value:\n                    events:\n                      - message: \u003e-\n                          Started task from script: \"option task = {name:\n                          \\\"task1\\\", every: 30m} from(bucket: \\\"iot_center\\\") |\u003e\n                          range(start: -90d) |\u003e filter(fn: (r) =\u003e r._measurement\n                          == \\\"environment\\\") |\u003e aggregateWindow(every: 1h, fn:\n                          mean)\"\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.101231Z'\n                      - message: Completed(success)\n                        runID: 09b070dadaa7d000\n                        time: '2022-07-18T14:46:07.242859Z'\n              schema:\n                $ref: '#/components/schemas/Logs'\n          description: \u003e\n            Success. The response body contains an `events` list with logs for\n            the task run.\n\n            Each log event `message` contains detail about the event.\n\n            If a run fails, InfluxDB logs an event with the reason for the\n            failure.\n        '400':\n          $ref: '#/components/responses/BadRequestError'\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retrieve all logs for a run\n      tags:\n        - Tasks\n  /api/v2/tasks/{taskID}/runs/{runID}/retry:\n    post:\n      description: \u003e\n        Queues a task run to retry and returns the newly scheduled run.\n\n\n        To manually start a _new_ task run, use the [`POST\n        /api/v2/tasks/{taskID}/runs`](#operation/PostTasksIDRuns) endpoint.\n\n\n        #### Limitations\n\n\n        - The task must be _active_ (`status: \"active\"`).\n      operationId: PostTasksIDRunsIDRetry\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the task to retry.\n          in: path\n          name: taskID\n          required: true\n          schema:\n            type: string\n        - description: The ID of the task run to retry.\n          in: path\n          name: runID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json; charset=utf-8:\n            schema:\n              type: object\n      responses:\n        '200':\n          content:\n            application/json:\n              examples:\n                retryTaskRun:\n                  summary: A task run scheduled to retry\n                  value:\n                    id: 09d60ffe08738000\n                    links:\n                      logs: \u003e-\n                        /api/v2/tasks/09a776832f381000/runs/09d60ffe08738000/logs\n                      retry: \u003e-\n                        /api/v2/tasks/09a776832f381000/runs/09d60ffe08738000/retry\n                      self: /api/v2/tasks/09a776832f381000/runs/09d60ffe08738000\n                      task: /api/v2/tasks/09a776832f381000\n                    requestedAt: '2022-08-16T20:05:11.84145Z'\n                    scheduledFor: '2022-08-15T00:00:00Z'\n                    status: scheduled\n                    taskID: 09a776832f381000\n              schema:\n                $ref: '#/components/schemas/Run'\n          description: Success. The response body contains the queued run.\n        '400':\n          content:\n            application/json:\n              examples:\n                inactiveTask:\n                  summary: Can't retry an inactive task\n                  value:\n                    code: invalid\n                    message: 'failed to retry run: inactive task'\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Bad request.\n            The response body contains detail about the error.\n\n            InfluxDB may return this error for the following reasons:\n\n            - The task has `status: inactive`.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Retry a task run\n      tags:\n        - Tasks\n  /api/v2/telegraf/plugins:\n    get:\n      operationId: GetTelegrafPlugins\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The type of plugin desired.\n          in: query\n          name: type\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TelegrafPlugins'\n          description: A list of Telegraf plugins.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all Telegraf plugins\n      tags:\n        - Telegraf Plugins\n  /api/v2/telegrafs:\n    get:\n      operationId: GetTelegrafs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The organization ID the Telegraf config belongs to.\n          in: query\n          name: orgID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Telegrafs'\n          description: A list of Telegraf configurations\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all Telegraf configurations\n      tags:\n        - Telegrafs\n    post:\n      operationId: PostTelegrafs\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TelegrafPluginRequest'\n        description: Telegraf configuration to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Telegraf'\n          description: Telegraf configuration created\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create a Telegraf configuration\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}:\n    delete:\n      operationId: DeleteTelegrafsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf configuration ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a Telegraf configuration\n      tags:\n        - Telegrafs\n    get:\n      operationId: GetTelegrafsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf configuration ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: Accept\n          required: false\n          schema:\n            default: application/toml\n            enum:\n              - application/toml\n              - application/json\n              - application/octet-stream\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Telegraf'\n            application/octet-stream:\n              example: |-\n                [agent]\n                interval = \"10s\"\n              schema:\n                type: string\n            application/toml:\n              example: |-\n                [agent]\n                interval = \"10s\"\n              schema:\n                type: string\n          description: Telegraf configuration details\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Retrieve a Telegraf configuration\n      tags:\n        - Telegrafs\n    put:\n      operationId: PutTelegrafsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TelegrafPluginRequest'\n        description: Telegraf configuration update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Telegraf'\n          description: An updated Telegraf configurations\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update a Telegraf configuration\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/labels:\n    get:\n      operationId: GetTelegrafsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a Telegraf config\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a Telegraf config\n      tags:\n        - Telegrafs\n    post:\n      operationId: PostTelegrafsIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The label added to the Telegraf config\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a Telegraf config\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/labels/{labelID}:\n    delete:\n      operationId: DeleteTelegrafsIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n        - description: The label ID.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Telegraf config not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a label from a Telegraf config\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/members:\n    get:\n      operationId: GetTelegrafsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMembers'\n          description: A list of Telegraf config members\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all users with member privileges for a Telegraf config\n      tags:\n        - Telegrafs\n    post:\n      operationId: PostTelegrafsIDMembers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: User to add as member\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceMember'\n          description: Member added to Telegraf config\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a member to a Telegraf config\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/members/{userID}:\n    delete:\n      operationId: DeleteTelegrafsIDMembersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the member to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Member removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove a member from a Telegraf config\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/owners:\n    get:\n      operationId: GetTelegrafsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf configuration ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwners'\n          description: Returns Telegraf configuration owners as a ResourceOwners list\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all owners of a Telegraf configuration\n      tags:\n        - Telegrafs\n    post:\n      operationId: PostTelegrafsIDOwners\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The Telegraf configuration ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddResourceMemberRequestBody'\n        description: User to add as owner\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceOwner'\n          description: \u003e-\n            Telegraf configuration owner was added. Returns a ResourceOwner that\n            references the User.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add an owner to a Telegraf configuration\n      tags:\n        - Telegrafs\n  /api/v2/telegrafs/{telegrafID}/owners/{userID}:\n    delete:\n      operationId: DeleteTelegrafsIDOwnersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the owner to remove.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n        - description: The Telegraf config ID.\n          in: path\n          name: telegrafID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Owner removed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Remove an owner from a Telegraf config\n      tags:\n        - Telegrafs\n  /api/v2/templates/apply:\n    post:\n      description: \u003e\n        Applies a template to\n\n        create or update a [stack](/influxdb/cloud/influxdb-templates/stacks/)\n        of InfluxDB\n\n        [resources](/influxdb/cloud/reference/cli/influx/export/all/#resources).\n\n        The response contains the diff of changes and the stack ID.\n\n\n        Use this endpoint to install an InfluxDB template to an organization.\n\n        Provide template URLs or template objects in your request.\n\n        To customize which template resources are installed, use the `actions`\n\n        parameter.\n\n\n        By default, when you apply a template, InfluxDB installs the template to\n\n        create and update stack resources and then generates a diff of the\n        changes.\n\n        If you pass `dryRun: true` in the request body, InfluxDB validates the\n\n        template and generates the resource diff, but doesn’t make any\n\n        changes to your instance.\n\n\n        #### Custom values for templates\n\n\n        - Some templates may contain [environment\n        references](/influxdb/cloud/influxdb-templates/create/#include-user-definable-resource-names)\n        for custom metadata.\n          To provide custom values for environment references, pass the _`envRefs`_\n          property in the request body.\n          For more information and examples, see how to\n          [define environment references](/influxdb/cloud/influxdb-templates/use/#define-environment-references).\n\n        - Some templates may contain queries that use\n          [secrets](/influxdb/cloud/security/secrets/).\n          To provide custom secret values, pass the _`secrets`_ property\n          in the request body.\n          Don't expose secret values in templates.\n          For more information, see [how to pass secrets when installing a template](/influxdb/cloud/influxdb-templates/use/#pass-secrets-when-installing-a-template).\n\n        #### Required permissions\n\n\n        - `write` permissions for resource types in the template.\n\n\n        #### Rate limits (with InfluxDB Cloud)\n\n\n        - Adjustable service quotas apply.\n          For more information, see [limits and adjustable quotas](/influxdb/cloud/account-management/limits/).\n\n        #### Related guides\n\n\n        - [Use templates](/influxdb/cloud/influxdb-templates/use/)\n\n        - [Stacks](/influxdb/cloud/influxdb-templates/stacks/)\n      operationId: ApplyTemplate\n      requestBody:\n        content:\n          application/json:\n            examples:\n              skipKindAction:\n                summary: Skip all bucket and task resources in the provided templates\n                value:\n                  actions:\n                    - action: skipKind\n                      properties:\n                        kind: Bucket\n                    - action: skipKind\n                      properties:\n                        kind: Task\n                  orgID: INFLUX_ORG_ID\n                  templates:\n                    - contents:\n                        - '[object Object]': null\n              skipResourceAction:\n                summary: Skip specific resources in the provided templates\n                value:\n                  actions:\n                    - action: skipResource\n                      properties:\n                        kind: Label\n                        resourceTemplateName: foo-001\n                    - action: skipResource\n                      properties:\n                        kind: Bucket\n                        resourceTemplateName: bar-020\n                    - action: skipResource\n                      properties:\n                        kind: Bucket\n                        resourceTemplateName: baz-500\n                  orgID: INFLUX_ORG_ID\n                  templates:\n                    - contents:\n                        - apiVersion: influxdata.com/v2alpha1\n                          kind: Bucket\n                          metadata:\n                            name: baz-500\n              templateObjectEnvRefs:\n                summary: envRefs for template objects\n                value:\n                  envRefs:\n                    docker-bucket: MY_DOCKER_BUCKET\n                    docker-spec-1: MY_DOCKER_SPEC\n                    linux-cpu-label: MY_CPU_LABEL\n                  orgID: INFLUX_ORG_ID\n                  templates:\n                    - contents:\n                        - apiVersion: influxdata.com/v2alpha1\n                          kind: Label\n                          metadata:\n                            name:\n                              envRef:\n                                key: linux-cpu-label\n                          spec:\n                            color: '#326BBA'\n                            name: inputs.cpu\n                    - contents:\n                        - apiVersion: influxdata.com/v2alpha1\n                          kind: Bucket\n                          metadata:\n                            name:\n                              envRef:\n                                key: docker-bucket\n            schema:\n              $ref: '#/components/schemas/TemplateApply'\n          application/x-jsonnet:\n            schema:\n              $ref: '#/components/schemas/TemplateApply'\n          text/yml:\n            schema:\n              $ref: '#/components/schemas/TemplateApply'\n        description: |\n          Parameters for applying templates.\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateSummary'\n          description: |\n            Success.\n            The template dry run succeeded.\n            The response body contains a resource diff of changes that the\n            template would have made if installed.\n            No resources were created or updated.\n            The diff and summary won't contain IDs for resources\n            that didn't exist at the time of the dry run.\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateSummary'\n          description: \u003e\n            Success.\n\n            The template applied successfully.\n\n            The response body contains the stack ID, a diff, and a summary.\n\n            The diff compares the initial state to the state after the template\n            installation.\n\n            The summary contains newly created resources.\n        '422':\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/TemplateSummary'\n                  - properties:\n                      code:\n                        type: string\n                      message:\n                        type: string\n                    required:\n                      - message\n                      - code\n                    type: object\n          description: |\n            Unprocessable entity.\n\n\n            The error may indicate one of the following problems:\n\n            - The template failed validation.\n            - You passed a parameter combination that InfluxDB doesn't support.\n        '500':\n          content:\n            application/json:\n              examples:\n                createExceedsQuota:\n                  summary: 'InfluxDB Cloud: Creating resource would exceed quota.'\n                  value:\n                    code: internal error\n                    message: \"resource_type=\\\"tasks\\\" err=\\\"failed to apply resource\\\"\\n\\tmetadata_name=\\\"alerting-gates-b84003\\\" err_msg=\\\"failed to create tasks[\\\\\\\"alerting-gates-b84003\\\\\\\"]: creating task would exceed quota\\\"\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Internal server error.\n\n            #### InfluxDB Cloud\n\n            - Returns this error if creating one of the template\n              resources (bucket, dashboard, task, user) exceeds your plan’s\n              adjustable service quotas.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Apply or dry-run a template\n      tags:\n        - Templates\n      x-codeSamples:\n        - label: 'cURL: Dry run with a remote template'\n          lang: Shell\n          source: |\n            curl --request POST \"http://localhost:8086/api/v2/templates/apply\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --data @- \u003c\u003c EOF\n                {\n                  \"dryRun\": true,\n                  \"orgID\": \"INFLUX_ORG_ID\",\n                  \"remotes\": [\n                    {\n                      \"url\": \"https://raw.githubusercontent.com/influxdata/community-templates/master/linux_system/linux_system.yml\"\n                    }\n                  ]\n                }\n            EOF\n        - label: 'cURL: Apply with secret values'\n          lang: Shell\n          source: |\n            curl \"http://localhost:8086/api/v2/templates/apply\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --data @- \u003c\u003c EOF | jq .\n                {\n                  \"orgID\": \"INFLUX_ORG_ID\",\n                  \"secrets\": {\n                    \"SLACK_WEBHOOK\": \"YOUR_SECRET_WEBHOOK_URL\"\n                  },\n                  \"remotes\": [\n                    {\n                      \"url\": \"https://raw.githubusercontent.com/influxdata/community-templates/master/fortnite/fn-template.yml\"\n                    }\n                  ]\n                }\n            EOF\n        - label: 'cURL: Apply template objects with environment references'\n          lang: Shell\n          source: |\n            curl --request POST \"http://localhost:8086/api/v2/templates/apply\" \\\n              --header \"Authorization: Token INFLUX_API_TOKEN\" \\\n              --data @- \u003c\u003c EOF\n              { \"orgID\": \"INFLUX_ORG_ID\",\n                \"envRefs\": {\n                  \"linux-cpu-label\": \"MY_CPU_LABEL\",\n                  \"docker-bucket\": \"MY_DOCKER_BUCKET\",\n                  \"docker-spec-1\": \"MY_DOCKER_SPEC\"\n                },\n                \"templates\": [\n                  { \"contents\": [{\n                      \"apiVersion\": \"influxdata.com/v2alpha1\",\n                      \"kind\": \"Label\",\n                      \"metadata\": {\n                        \"name\": {\n                          \"envRef\": {\n                            \"key\": \"linux-cpu-label\"\n                          }\n                        }\n                      },\n                      \"spec\": {\n                        \"color\": \"#326BBA\",\n                        \"name\": \"inputs.cpu\"\n                      }\n                    }]\n                  },\n                  \"templates\": [\n                    { \"contents\": [{\n                        \"apiVersion\": \"influxdata.com/v2alpha1\",\n                        \"kind\": \"Label\",\n                        \"metadata\": {\n                          \"name\": {\n                            \"envRef\": {\n                              \"key\": \"linux-cpu-label\"\n                            }\n                          }\n                        },\n                        \"spec\": {\n                          \"color\": \"#326BBA\",\n                          \"name\": \"inputs.cpu\"\n                        }\n                      }]\n                    },\n                    { \"contents\": [{\n                        \"apiVersion\": \"influxdata.com/v2alpha1\",\n                        \"kind\": \"Bucket\",\n                        \"metadata\": {\n                          \"name\": {\n                            \"envRef\": {\n                              \"key\": \"docker-bucket\"\n                            }\n                          }\n                        }\n                      }]\n                    }\n                  ]\n                }\n            EOF\n  /api/v2/templates/export:\n    post:\n      operationId: ExportTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/TemplateExportByID'\n                - $ref: '#/components/schemas/TemplateExportByName'\n        description: Export resources as an InfluxDB template.\n        required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Template'\n            application/x-yaml:\n              schema:\n                $ref: '#/components/schemas/Template'\n          description: \u003e-\n            The template was created successfully. Returns the newly created\n            template.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Export a new template\n      tags:\n        - Templates\n  /api/v2/users:\n    get:\n      description: |\n        Retrieves a list of users.\n      operationId: GetUsers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n          description: Success. The response contains a list of `users`.\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: List users\n      tags:\n        - Security and access endpoints\n        - Users\n    post:\n      description: |\n        Creates a user and returns the newly created user.\n      operationId: PostUsers\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: The user to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: |\n            Success.\n            The response contains the newly created user.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: |\n            Unauthorized.\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e\n            Unprocessable entity.\n\n\n            The error may indicate one of the following problems:\n\n\n            - The request body isn't valid--the request is well-formed, but\n            InfluxDB can't process it due to semantic errors.\n\n            - You passed a parameter combination that InfluxDB doesn't support.\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Create a user\n      tags:\n        - Users\n  /api/v2/users/{userID}:\n    delete:\n      operationId: DeleteUsersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the user to delete.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: User deleted\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Delete a user\n      tags:\n        - Users\n    get:\n      operationId: GetUsersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The user ID.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: User details\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Retrieve a user\n      tags:\n        - Users\n    patch:\n      operationId: PatchUsersID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the user to update.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        description: User update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: User updated\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Unexpected error\n      summary: Update a user\n      tags:\n        - Users\n  /api/v2/users/{userID}/password:\n    post:\n      description: |\n        #### InfluxDB Cloud\n\n        InfluxDB Cloud doesn't support changing user passwords through the API.\n        Use the InfluxDB Cloud user interface to update your password.\n      operationId: PostUsersIDPassword\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The user ID.\n          in: path\n          name: userID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetBody'\n        description: New password\n        required: true\n      responses:\n        '204':\n          description: Password successfully updated\n        '400':\n          description: \u003e\n            Bad request.\n\n            InfluxDB Cloud doesn't support changing passwords through the API\n            and always responds with this status.\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsuccessful authentication\n      security:\n        - BasicAuthentication: []\n      summary: Update a password\n      tags:\n        - Security and access endpoints\n        - Users\n  /api/v2/variables:\n    get:\n      operationId: GetVariables\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The name of the organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: The organization ID.\n          in: query\n          name: orgID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variables'\n          description: A list of variables for an organization.\n        '400':\n          $ref: '#/components/responses/GeneralServerError'\n          description: Invalid request\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: List all variables\n      tags:\n        - Variables\n    post:\n      operationId: PostVariables\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n        description: Variable to create\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n          description: Variable created\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: Create a variable\n      tags:\n        - Variables\n  /api/v2/variables/{variableID}:\n    delete:\n      operationId: DeleteVariablesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Variable deleted\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: Delete a variable\n      tags:\n        - Variables\n    get:\n      operationId: GetVariablesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n          description: Variable found\n        '404':\n          $ref: '#/components/responses/GeneralServerError'\n          description: Variable not found\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: Retrieve a variable\n      tags:\n        - Variables\n    patch:\n      operationId: PatchVariablesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n        description: Variable update to apply\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n          description: Variable updated\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: Update a variable\n      tags:\n        - Variables\n    put:\n      operationId: PutVariablesID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n        description: Variable to replace\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n          description: Variable updated\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n          description: Internal server error\n      summary: Replace a variable\n      tags:\n        - Variables\n  /api/v2/variables/{variableID}/labels:\n    get:\n      operationId: GetVariablesIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n          description: A list of all labels for a variable\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: List all labels for a variable\n      tags:\n        - Variables\n    post:\n      operationId: PostVariablesIDLabels\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LabelMapping'\n        description: Label to add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelResponse'\n          description: The newly added label\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Add a label to a variable\n      tags:\n        - Variables\n  /api/v2/variables/{variableID}/labels/{labelID}:\n    delete:\n      operationId: DeleteVariablesIDLabelsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The variable ID.\n          in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n        - description: The label ID to delete.\n          in: path\n          name: labelID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Delete has been accepted\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Variable not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete a label from a variable\n      tags:\n        - Variables\n  /api/v2/write:\n    post:\n      description: \u003e\n        Writes data to a bucket.\n\n\n        Use this endpoint to send data in [line\n        protocol](/influxdb/cloud/reference/syntax/line-protocol/) format to\n        InfluxDB.\n\n\n        #### InfluxDB Cloud\n\n\n        - Takes the following steps when you send a write request:\n\n          1. Validates the request and queues the write.\n          2. If the write is queued, responds with an HTTP `204` status code.\n          3. Handles the write asynchronously and reaches eventual consistency.\n\n          An HTTP `2xx` status code acknowledges that the write or delete is queued.\n          To ensure that InfluxDB Cloud handles writes and deletes in the order you request them,\n          wait for a response before you send the next request.\n\n          Because writes are asynchronous, data might not yet be written\n          when you receive the response.\n\n        #### InfluxDB OSS\n\n\n        - Validates the request, handles the write synchronously,\n          and then responds with success or failure.\n        - If all points were written successfully, responds with HTTP `204`\n        status code;\n          otherwise, returns the first line that failed.\n\n        #### Required permissions\n\n\n        - `write-buckets` or `write-bucket BUCKET_ID`.\n\n          `BUCKET_ID` is the ID of the destination bucket.\n\n        #### Rate limits (with InfluxDB Cloud)\n\n\n        `write` rate limits apply.\n\n        For more information, see [limits and adjustable\n        quotas](/influxdb/cloud/account-management/limits/).\n\n\n        #### Related guides\n\n\n        - [Write data with the InfluxDB\n        API](/influxdb/cloud/write-data/developer-tools/api).\n\n        - [Optimize writes to\n        InfluxDB](/influxdb/cloud/write-data/best-practices/optimize-writes/).\n\n        - [Troubleshoot issues writing\n        data](/influxdb/cloud/write-data/troubleshoot/)\n      operationId: PostWrite\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            The compression applied to the line protocol in the request payload.\n            To send a GZIP payload, pass `Content-Encoding: gzip` header.\n          in: header\n          name: Content-Encoding\n          schema:\n            default: identity\n            description: \u003e\n              Content coding.\n\n              Use `gzip` for compressed data or `identity` for unmodified,\n              uncompressed data.\n            enum:\n              - gzip\n              - identity\n            type: string\n        - description: \u003e\n            The format of the data in the request body.\n\n            To send a line protocol payload, pass `Content-Type: text/plain;\n            charset=utf-8`.\n          in: header\n          name: Content-Type\n          schema:\n            default: text/plain; charset=utf-8\n            description: \u003e\n              `text/plain` is the content type for line protocol. `UTF-8` is the\n              default character set.\n            enum:\n              - text/plain\n              - text/plain; charset=utf-8\n            type: string\n        - description: |\n            The size of the entity-body, in bytes, sent to InfluxDB.\n            If the length is greater than the `max body` configuration option,\n            the server responds with status code `413`.\n          in: header\n          name: Content-Length\n          schema:\n            description: The length in decimal number of octets.\n            type: integer\n        - description: |\n            The content type that the client can understand.\n            Writes only return a response body if they fail--for example,\n            due to a formatting problem or quota limit.\n\n            #### InfluxDB Cloud\n\n              - Returns only `application/json` for format and limit errors.\n              - Returns only `text/html` for some quota limit errors.\n\n            #### InfluxDB OSS\n\n              - Returns only `application/json` for format and limit errors.\n\n            #### Related guides\n              - [Troubleshoot issues writing data](/influxdb/cloud/write-data/troubleshoot/).\n          in: header\n          name: Accept\n          schema:\n            default: application/json\n            description: Error content type.\n            enum:\n              - application/json\n            type: string\n        - description: \u003e\n            The destination organization for writes.\n\n            InfluxDB writes all points in the batch to this organization.\n\n            If you pass both `orgID` and `org`, they must both be valid.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't require `org` or `orgID`.\n\n            - Writes to the bucket in the organization associated with the\n            authorization (API token).\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n\n            - InfluxDB writes all points in the batch to this organization.\n          in: query\n          name: org\n          required: true\n          schema:\n            description: The organization name or ID.\n            type: string\n        - description: \u003e\n            The ID of the destination organization for writes.\n\n            If you pass both `orgID` and `org`, they must both be valid.\n\n\n            #### InfluxDB Cloud\n\n\n            - Doesn't require `org` or `orgID`.\n\n            - Writes to the bucket in the organization associated with the\n            authorization (API token).\n\n\n\n            #### InfluxDB OSS\n\n\n            - Requires either `org` or `orgID`.\n\n            - InfluxDB writes all points in the batch to this organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: |\n            The destination bucket for writes.\n            InfluxDB writes all points in the batch to this bucket.\n          in: query\n          name: bucket\n          required: true\n          schema:\n            description: The bucket name or ID.\n            type: string\n        - description: The precision for unix timestamps in the line protocol batch.\n          in: query\n          name: precision\n          schema:\n            $ref: '#/components/schemas/WritePrecision'\n      requestBody:\n        content:\n          text/plain:\n            examples:\n              plain-utf8:\n                value: \u003e\n                  airSensors,sensor_id=TLM0201\n                  temperature=73.97038159354763,humidity=35.23103248356096,co=0.48445310567793615\n                  1630424257000000000\n\n                  airSensors,sensor_id=TLM0202\n                  temperature=75.30007505999716,humidity=35.651929918691714,co=0.5141876544505826\n                  1630424257000000000\n            schema:\n              format: byte\n              type: string\n        description: \u003e\n          Data in line protocol format.\n\n\n          To send compressed data, do the following:\n\n            1. Use [GZIP](https://www.gzip.org/) to compress the line protocol data.\n            2. In your request, send the compressed data and the\n               `Content-Encoding: gzip` header.\n\n          #### Related guides\n\n\n          - [Best practices for optimizing\n          writes](/influxdb/cloud/write-data/best-practices/optimize-writes/).\n        required: true\n      responses:\n        '204':\n          description: \u003e\n            Success.\n\n\n            #### InfluxDB Cloud\n\n\n            - Validated and queued the request.\n\n            - Handles the write asynchronously - the write might not have\n            completed yet.\n\n\n            #### InfluxDB OSS\n\n\n            - Successfully wrote all points in the batch.\n\n\n            #### Related guides\n\n\n            - [How to check for write\n            errors](/influxdb/cloud/write-data/troubleshoot/).\n        '400':\n          content:\n            application/json:\n              examples:\n                measurementSchemaFieldTypeConflict:\n                  summary: \u003e-\n                    (Cloud) field type conflict thrown by an explicit bucket\n                    schema\n                  value:\n                    code: invalid\n                    message: \u003e-\n                      partial write error (2 written): unable to parse\n                      'air_sensor,service=S1,sensor=L1\n                      temperature=\"90.5\",humidity=70.0 1632850122': schema:\n                      field type for field \"temperature\" not permitted by\n                      schema; got String but expected Float\n                orgNotFound:\n                  summary: (OSS) organization not found\n                  value:\n                    code: invalid\n                    message: 'failed to decode request body: organization not found'\n              schema:\n                $ref: '#/components/schemas/LineProtocolError'\n          description: \u003e\n            Bad request. The response body contains detail about the error.\n\n\n            InfluxDB returns this error if the line protocol data in the request\n            is malformed.\n\n            The response body contains the first malformed line in the data, and\n            indicates what was expected.\n\n            For partial writes, the number of points written and the number of\n            points rejected are also included.\n\n            For more information, check the `rejected_points` measurement in\n            your `_monitoring` bucket.\n\n\n            #### InfluxDB Cloud\n\n\n            - Returns this error for bucket schema conflicts.\n\n\n            #### InfluxDB OSS\n\n\n            - Returns this error if `org` or `orgID` doesn't match an\n            organization.\n        '401':\n          $ref: '#/components/responses/AuthorizationError'\n        '404':\n          $ref: '#/components/responses/ResourceNotFoundError'\n        '413':\n          content:\n            application/json:\n              examples:\n                dataExceedsSizeLimitOSS:\n                  summary: InfluxDB OSS response\n                  value: \u003e\n                    {\"code\":\"request too large\",\"message\":\"unable to read data:\n                    points batch is too large\"}\n              schema:\n                $ref: '#/components/schemas/LineProtocolLengthError'\n            text/html:\n              examples:\n                dataExceedsSizeLimit:\n                  summary: InfluxDB Cloud response\n                  value: |\n                    \u003chtml\u003e\n                      \u003chead\u003e\u003ctitle\u003e413 Request Entity Too Large\u003c/title\u003e\u003c/head\u003e\n                      \u003cbody\u003e\n                        \u003ccenter\u003e\u003ch1\u003e413 Request Entity Too Large\u003c/h1\u003e\u003c/center\u003e\n                        \u003chr\u003e\n                        \u003ccenter\u003enginx\u003c/center\u003e\n                      \u003c/body\u003e\n                    \u003c/html\u003e\n              schema:\n                type: string\n          description: |\n            The request payload is too large.\n            InfluxDB rejected the batch and did not write any data.\n\n            #### InfluxDB Cloud:\n\n             - Returns this error if the payload exceeds the 50MB size limit.\n             - Returns `Content-Type: text/html` for this error.\n\n            #### InfluxDB OSS:\n\n             - Returns this error only if the [Go (golang) `ioutil.ReadAll()`](https://pkg.go.dev/io/ioutil#ReadAll) function raises an error.\n             - Returns `Content-Type: application/json` for this error.\n        '429':\n          description: |\n            Too many requests.\n\n            #### InfluxDB Cloud\n\n              - Returns this error if a **read** or **write** request exceeds your plan's [adjustable service quotas](/influxdb/cloud/account-management/limits/#adjustable-service-quotas)\n                or if a **delete** request exceeds the maximum [global limit](/influxdb/cloud/account-management/limits/#global-limits).\n              - For rate limits that reset automatically, returns a `Retry-After` header that describes when to try the write again.\n              - For limits that can't reset (for example, **cardinality limit**), doesn't return a `Retry-After` header.\n\n              Rates (data-in (writes), queries (reads), and deletes) accrue within a fixed five-minute window.\n              Once a rate limit is exceeded, InfluxDB returns an error response until the current five-minute window resets.\n\n            #### InfluxDB OSS\n\n              - Doesn't return this error.\n          headers:\n            Retry-After:\n              description: \u003e-\n                Non-negative decimal integer indicating seconds to wait before\n                retrying the request.\n              schema:\n                format: int32\n                type: integer\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        '503':\n          description: \u003e\n            Service unavailable.\n\n\n            - Returns this error if\n              the server is temporarily unavailable to accept writes.\n            - Returns a `Retry-After` header that describes when to try the\n            write again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                Non-negative decimal integer indicating seconds to wait before\n                retrying the request.\n              schema:\n                format: int32\n                type: integer\n        default:\n          $ref: '#/components/responses/GeneralServerError'\n      summary: Write data\n      tags:\n        - Data I/O endpoints\n        - Write\n  /legacy/authorizations:\n    get:\n      operationId: GetLegacyAuthorizations\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: |\n            A user ID.\n            Only returns legacy authorizations scoped to this user.\n          in: query\n          name: userID\n          schema:\n            type: string\n        - description: |\n            A user name.\n            Only returns legacy authorizations scoped to this user.\n          in: query\n          name: user\n          schema:\n            type: string\n        - description: |\n            An organization ID.\n            Only returns legacy authorizations that belong to this organization.\n          in: query\n          name: orgID\n          schema:\n            type: string\n        - description: |\n            An organization name.\n            Only returns legacy authorizations that belong to this organization.\n          in: query\n          name: org\n          schema:\n            type: string\n        - description: |\n            An authorization name token.\n            Only returns legacy authorizations with this token (name).\n          in: query\n          name: token\n          schema:\n            type: string\n        - description: |\n            An authorization ID.\n            Only returns the legacy authorization with this ID.\n          in: query\n          name: authID\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  authorizations:\n                    items:\n                      $ref: '#/components/schemas/Authorization'\n                    type: array\n                  links:\n                    $ref: '#/components/schemas/Links'\n                    readOnly: true\n                type: object\n          description: \u003e-\n            Success. The response body contains a list of legacy\n            `authorizations`.\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: List all legacy authorizations\n      tags:\n        - Legacy Authorizations\n    post:\n      description: \u003e\n        Creates a legacy authorization and returns the newly created\n        authorization.\n\n\n        #### Required permissions\n\n\n        - `write-users USER_ID` if you pass the `userID` property in the request\n        body.\n\n\n        `USER_ID` is the ID of the user that you want to scope the authorization\n        to.\n      operationId: PostLegacyAuthorizations\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LegacyAuthorizationPostRequest'\n        description: The legacy authorization to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: |\n            Created. The legacy authorization is created.\n            The response body contains the newly created legacy authorization.\n        '400':\n          $ref: '#/components/responses/ServerError'\n          description: Invalid request\n        '401':\n          content:\n            application/json:\n              examples:\n                unauthorizedWriteUsers:\n                  summary: The token doesn't have the write:user permission\n                  value:\n                    code: unauthorized\n                    message: write:users/08028e90933bf000 is unauthorized\n              schema:\n                properties:\n                  code:\n                    description: \u003e\n                      The HTTP status code description. Default is\n                      `unauthorized`.\n                    enum:\n                      - unauthorized\n                    readOnly: true\n                    type: string\n                  message:\n                    description: \u003e-\n                      A human-readable message that may contain detail about the\n                      error.\n                    readOnly: true\n                    type: string\n          description: |\n            Unauthorized.\n            The API token passed doesn't have the permissions necessary for the\n            request.\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Create a legacy authorization\n      tags:\n        - Legacy Authorizations\n    servers:\n      - url: /private\n  /legacy/authorizations/{authID}:\n    delete:\n      operationId: DeleteLegacyAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the legacy authorization to delete.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Legacy authorization deleted\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Delete a legacy authorization\n      tags:\n        - Legacy Authorizations\n    get:\n      operationId: GetLegacyAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the legacy authorization to get.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: Legacy authorization details\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Retrieve a legacy authorization\n      tags:\n        - Legacy Authorizations\n    patch:\n      operationId: PatchLegacyAuthorizationsID\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the legacy authorization to update.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationUpdateRequest'\n        description: Legacy authorization to update\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n          description: The active or inactive legacy authorization\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Update a legacy authorization to be active or inactive\n      tags:\n        - Legacy Authorizations\n    servers:\n      - url: /private\n  /legacy/authorizations/{authID}/password:\n    post:\n      operationId: PostLegacyAuthorizationsIDPassword\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The ID of the legacy authorization to update.\n          in: path\n          name: authID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                password:\n                  type: string\n              required:\n                - password\n        description: New password\n        required: true\n      responses:\n        '204':\n          description: Legacy authorization password set\n        default:\n          $ref: '#/components/responses/ServerError'\n          description: Unexpected error\n      summary: Set a legacy authorization password\n      tags:\n        - Legacy Authorizations\n    servers:\n      - url: /private\n  /query:\n    get:\n      description: Queries InfluxDB using InfluxQL.\n      operationId: GetLegacyQuery\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - in: header\n          name: Accept\n          schema:\n            default: application/json\n            description: \u003e\n              Media type that the client can understand.\n\n\n              **Note**: With `application/csv`, query results include [**unix\n              timestamps**](/influxdb/cloud/reference/glossary/#unix-timestamp)\n              instead of [RFC3339\n              timestamps](/influxdb/cloud/reference/glossary/#rfc3339-timestamp).\n            enum:\n              - application/json\n              - application/csv\n              - text/csv\n              - application/x-msgpack\n            type: string\n        - description: \u003e-\n            The content encoding (usually a compression algorithm) that the\n            client can understand.\n          in: header\n          name: Accept-Encoding\n          schema:\n            default: identity\n            description: \u003e-\n              The content coding. Use `gzip` for compressed data or `identity`\n              for unmodified, uncompressed data.\n            enum:\n              - gzip\n              - identity\n            type: string\n        - in: header\n          name: Content-Type\n          schema:\n            enum:\n              - application/json\n            type: string\n        - description: The InfluxDB 1.x username to authenticate the request.\n          in: query\n          name: u\n          schema:\n            type: string\n        - description: The InfluxDB 1.x password to authenticate the request.\n          in: query\n          name: p\n          schema:\n            type: string\n        - description: \u003e\n            The database to query data from.\n\n            This is mapped to an InfluxDB\n            [bucket](/influxdb/cloud/reference/glossary/#bucket).\n\n            For more information, see [Database and retention policy\n            mapping](/influxdb/cloud/api/influxdb-1x/dbrp/).\n          in: query\n          name: db\n          required: true\n          schema:\n            type: string\n        - description: \u003e\n            The retention policy to query data from.\n\n            This is mapped to an InfluxDB\n            [bucket](/influxdb/cloud/reference/glossary/#bucket).\n\n            For more information, see [Database and retention policy\n            mapping](/influxdb/cloud/api/influxdb-1x/dbrp/).\n          in: query\n          name: rp\n          schema:\n            type: string\n        - description: \u003e-\n            The InfluxQL query to execute. To execute multiple queries, delimit\n            queries with a semicolon (`;`).\n          in: query\n          name: q\n          required: true\n          schema:\n            type: string\n        - description: \u003e\n            A unix timestamp precision.\n\n            Formats timestamps as [unix (epoch)\n            timestamps](/influxdb/cloud/reference/glossary/#unix-timestamp) the\n            specified precision\n\n            instead of [RFC3339\n            timestamps](/influxdb/cloud/reference/glossary/#rfc3339-timestamp)\n            with nanosecond precision.\n          in: query\n          name: epoch\n          schema:\n            enum:\n              - ns\n              - u\n              - µ\n              - ms\n              - s\n              - m\n              - h\n            type: string\n      responses:\n        '200':\n          content:\n            application/csv:\n              schema:\n                $ref: '#/components/schemas/InfluxqlCsvResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InfluxqlJsonResponse'\n            application/x-msgpack:\n              schema:\n                format: binary\n                type: string\n            text/csv:\n              schema:\n                $ref: '#/components/schemas/InfluxqlCsvResponse'\n          description: Query results\n          headers:\n            Content-Encoding:\n              description: \u003e-\n                Lists encodings (usually compression algorithms) that have been\n                applied to the response payload.\n              schema:\n                default: identity\n                description: |\n                  The content coding:\n                    - `gzip`: compressed data\n                    - `identity`: unmodified, uncompressed data.\n                enum:\n                  - gzip\n                  - identity\n                type: string\n            Trace-Id:\n              description: The trace ID, if generated, of the request.\n              schema:\n                description: Trace ID of a request.\n                type: string\n        '429':\n          description: |\n            #### InfluxDB Cloud:\n              - returns this error if a **read** or **write** request exceeds your\n                plan's [adjustable service quotas](/influxdb/cloud/account-management/limits/#adjustable-service-quotas)\n                or if a **delete** request exceeds the maximum\n                [global limit](/influxdb/cloud/account-management/limits/#global-limits)\n              - returns `Retry-After` header that describes when to try the write again.\n\n            #### InfluxDB OSS:\n              - doesn't return this error.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                format: int32\n                type: integer\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Error processing query\n      summary: Query with the 1.x compatibility API\n      tags:\n        - Legacy Query\n  /write:\n    post:\n      operationId: PostLegacyWrite\n      parameters:\n        - $ref: '#/components/parameters/TraceSpan'\n        - description: The InfluxDB 1.x username to authenticate the request.\n          in: query\n          name: u\n          schema:\n            type: string\n        - description: The InfluxDB 1.x password to authenticate the request.\n          in: query\n          name: p\n          schema:\n            type: string\n        - description: \u003e-\n            Bucket to write to. If none exists, InfluxDB creates a bucket with a\n            default 3-day retention policy.\n          in: query\n          name: db\n          required: true\n          schema:\n            type: string\n        - description: Retention policy name.\n          in: query\n          name: rp\n          schema:\n            type: string\n        - description: Write precision.\n          in: query\n          name: precision\n          schema:\n            type: string\n        - description: \u003e-\n            When present, its value indicates to the database that compression\n            is applied to the line protocol body.\n          in: header\n          name: Content-Encoding\n          schema:\n            default: identity\n            description: \u003e-\n              Specifies that the line protocol in the body is encoded with gzip\n              or not encoded with identity.\n            enum:\n              - gzip\n              - identity\n            type: string\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n        description: Line protocol body\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            Write data is correctly formatted and accepted for writing to the\n            bucket.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineProtocolError'\n          description: \u003e-\n            Line protocol poorly formed and no points were written.  Response\n            can be used to determine the first malformed line in the body\n            line-protocol. All data in body was rejected and not written.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: \u003e-\n            Token doesn't have sufficient permissions to write to this\n            organization and bucket or the organization and bucket do not exist.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No token was sent and they are required.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LineProtocolLengthError'\n          description: \u003e-\n            Write has been rejected because the payload is too large. Error\n            message returns max size supported. All data in body was rejected\n            and not written.\n        '429':\n          description: \u003e-\n            Token is temporarily over quota. The Retry-After header describes\n            when to try the write again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                format: int32\n                type: integer\n        '503':\n          description: \u003e-\n            Server is temporarily unavailable to accept writes.  The Retry-After\n            header describes when to try the write again.\n          headers:\n            Retry-After:\n              description: \u003e-\n                A non-negative decimal integer indicating the seconds to delay\n                after the response is received.\n              schema:\n                format: int32\n                type: integer\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      summary: Write time series data into InfluxDB in a V1-compatible format\n      tags:\n        - Legacy Write\nsecurity:\n  - TokenAuthentication: []\nservers:\n  - url: /\ntags:\n  - description: \u003e\n      Use one of the following schemes to authenticate to the InfluxDB API:\n\n\n      - [Token authentication](#section/Authentication/TokenAuthentication)\n\n      - [Basic authentication](#section/Authentication/BasicAuthentication)\n\n      - [Querystring\n      authentication](#section/Authentication/QuerystringAuthentication)\n\n      \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n    name: Authentication\n    x-traitTag: true\n  - description: \u003e\n      Create and manage authorizations (API tokens).\n\n\n      An _authorization_ contains a list of `read` and `write`\n\n      permissions for organization resources and provides an API token for\n      authentication.\n\n      An authorization belongs to an organization and only contains permissions\n      for that organization.\n\n\n      In InfluxDB Cloud, an authorization with `read-authorizations` permission\n\n      can be used to view other authorizations.\n\n      Optionally, when creating an authorization, you can scope it to a specific\n      user.\n\n\n      #### Limitations\n\n\n      To follow best practices for secure API token generation and retrieval,\n\n      InfluxDB Cloud enforces access restrictions on API tokens.\n\n\n      - InfluxDB Cloud only allows access to the API token value immediately\n      after the authorization is created.\n\n      - You can’t change access (read/write) permissions for an API token after\n      it’s created.\n\n      - Tokens stop working when the user who created the token is deleted.\n\n\n      We recommend the following for managing your tokens:\n\n\n      - Create a generic user to create and manage tokens for writing data.\n\n      - Store your tokens in a secure password vault for future access.\n\n\n      #### User sessions with authorizations\n\n\n      If a user signs in with username and password, creating a _user session_,\n\n      the session carries the permissions granted by all the user's\n      authorizations.\n\n      To create a user session, use the [`POST\n      /api/v2/signin`](#operation/PostSignin) endpoint.\n\n\n      ### Related endpoints\n\n\n      - [Signin](#tag/Signin)\n\n      - [Signout](#tag/Signout)\n\n\n      ### Related guides\n\n        - [Authorize API requests](/influxdb/cloud/api-guide/api_intro/#authentication).\n        - [Manage API tokens](/influxdb/cloud/security/tokens/).\n        - [Assign a token to a specific user](/influxdb/cloud/security/tokens/create-token/).\n    name: Authorizations\n  - name: Bucket Schemas\n  - description: \u003e\n      Store your data in InfluxDB\n      [buckets](/influxdb/cloud/reference/glossary/#bucket).\n\n      A bucket is a named location where time series data is stored. All buckets\n\n      have a [retention\n      period](/influxdb/cloud/reference/glossary/#retention-period),\n\n      a duration of time that each data point persists. InfluxDB drops all\n\n      points with timestamps older than the bucket’s retention period.\n\n      A bucket belongs to an organization.\n\n\n      ### Related guides\n\n        - [Manage buckets](/influxdb/cloud/organizations/buckets/)\n    name: Buckets\n  - name: Cells\n  - name: Checks\n  - description: \u003e\n      Many InfluxDB API endpoints require parameters to specify resources--for\n      example,\n\n      writing to a **bucket** in an **organization**.\n\n\n      ### Common query parameters\n\n\n      | Query parameter          | Value type            |\n      Description                                |\n\n      |:------------------------ |:---------------------\n      |:-------------------------------------------|\n\n      | `bucket`                 | string                | The bucket name or ID\n      ([find your bucket](/influxdb/cloud/organizations/buckets/view-buckets/).\n      |\n\n      | `bucketID`               | string                | The bucket ID ([find\n      your bucket](/influxdb/cloud/organizations/buckets/view-buckets/). |\n\n      | `org`                    | string                | The organization name\n      or ID ([find your organization](/influxdb/cloud/organizations/view-orgs/).\n      |\n\n      | `orgID`                  | 16-byte string        | The organization ID\n      ([find your organization](/influxdb/cloud/organizations/view-orgs/). |\n    name: Common parameters\n    x-traitTag: true\n  - name: Dashboards\n  - name: Data I/O endpoints\n  - name: DBRPs\n  - description: |\n      Delete data from an InfluxDB bucket.\n    name: Delete\n  - description: \u003e\n      InfluxDB API endpoints use standard HTTP request and response headers.\n\n\n      **Note**: Not all operations support all headers.\n\n\n      ### Request headers\n\n\n      | Header                   | Value type            |\n      Description                                |\n\n      |:------------------------ |:---------------------\n      |:-------------------------------------------|\n\n      | `Accept`                 | string                | The content type that\n      the client can understand. |\n\n      | `Authorization`          | string                | The authorization\n      scheme and credential. |\n\n      | `Content-Encoding`       | string                | The compression\n      applied to the line protocol in the request payload. |\n\n      | `Content-Length`         | integer               | The size of the\n      entity-body, in bytes, sent to the database. |\n\n      | `Content-Type`           | string                | The format of the\n      data in the request body. |\n    name: Headers\n    x-traitTag: true\n  - description: \u003e\n      Manage and execute scripts as API endpoints in InfluxDB.\n\n\n      An API Invokable Script assigns your custom Flux script to a new\n\n      InfluxDB API endpoint for your organization.\n\n      Invokable scripts let you execute your script as an HTTP request to the\n      endpoint.\n\n\n      Invokable scripts accept parameters.\n\n      Add parameter references in your script as `params.myparameter`.\n\n      When you `invoke` your script, you send parameters as key-value pairs in\n      the `params` object.\n\n      Then, InfluxDB executes your script with the key-value pairs as arguments,\n      and returns the result.\n\n\n      ### Related guides\n\n\n      - [Invoke custom\n      scripts](/influxdb/cloud/api-guide/api-invokable-scripts/).\n    name: Invokable Scripts\n  - name: Labels\n  - name: Legacy Authorizations\n  - name: Legacy Query\n  - name: Legacy Write\n  - name: Limits\n  - name: NotificationEndpoints\n  - name: NotificationRules\n  - description: \u003e\n      Manage your\n      [organization](/influxdb/cloud/reference/glossary/#organization).\n\n      An organization is a workspace for a group of users. Organizations can be\n\n      used to separate different environments, projects, teams or users within\n\n      InfluxDB.\n\n\n      Use the `/api/v2/orgs` endpoints to view and manage organizations.\n    name: Organizations\n  - name: Ping\n  - description: |\n      Retrieve data, analyze queries, and get query suggestions.\n    name: Query\n  - description: \u003e\n      See the [**API Quick Start**](/influxdb/cloud/api-guide/api_intro/) to get\n      up and running authenticating with tokens, writing to buckets, and\n      querying data.\n\n\n      [**InfluxDB API client\n      libraries**](/influxdb/cloud/api-guide/client-libraries/) are available\n      for popular languages and ready to import into your application.\n    name: Quick start\n    x-traitTag: true\n  - name: Resources\n  - description: \u003e\n      The InfluxDB API uses standard HTTP status codes for success and failure\n      responses.\n\n      The response body may include additional details. For details about a\n      specific operation's response, see **Responses** and **Response Samples**\n      for that operation.\n\n\n      API operations may return the following HTTP status codes:\n\n\n      | \u0026nbsp;Code\u0026nbsp; | Status                   | Description      |\n\n      |:-----------:|:------------------------ |:--------------------- |\n\n      | `200`       | Success                  |                       |\n\n      | `204`       | No content               | For a `POST` request, `204`\n      indicates that InfluxDB accepted the request and request data is valid.\n      Asynchronous operations, such as `write`, might not have completed yet. |\n\n      | `400`       | Bad request              | May indicate one of the\n      following: \u003cul\u003e\u003cli\u003eLine protocol is malformed. The response body contains\n      the first malformed line in the data and indicates what was expected. For\n      partial writes, the number of points written and the number of points\n      rejected are also included. For more information, check the\n      `rejected_points` measurement in your `_monitoring`\n      bucket.\u003c/li\u003e\u003cli\u003e`Authorization` header is missing or malformed or the API\n      token doesn't have permission for the operation.\u003c/li\u003e\u003c/ul\u003e |\n\n      | `401`       | Unauthorized             | May indicate one of the\n      following: \u003cul\u003e\u003cli\u003e`Authorization: Token` header is missing or\n      malformed\u003c/li\u003e\u003cli\u003eAPI token value is missing from the header\u003c/li\u003e\u003cli\u003eAPI\n      token doesn't have permission. For more information about token types and\n      permissions, see [Manage API\n      tokens](/influxdb/cloud/security/tokens/)\u003c/li\u003e\u003c/ul\u003e |\n\n      | `404`       | Not found                | Requested resource was not\n      found. `message` in the response body provides details about the requested\n      resource. |\n\n      | `413`       | Request entity too large | Request payload exceeds the\n      size limit. |\n\n      | `422`       | Unprocessable entity     | Request data is invalid. `code`\n      and `message` in the response body provide details about the problem. |\n\n      | `429`       | Too many requests        | API token is temporarily over\n      the request quota. The `Retry-After` header describes when to try the\n      request again. |\n\n      | `500`       | Internal server error    |                       |\n\n      | `503`       | Service unavailable      | Server is temporarily\n      unavailable to process the request. The `Retry-After` header describes\n      when to try the request again. |\n    name: Response codes\n    x-traitTag: true\n  - name: Routes\n  - name: Rules\n  - name: Secrets\n  - name: Security and access endpoints\n  - name: Setup\n  - name: Signin\n  - name: Signout\n  - name: System information endpoints\n  - description: \u003e\n      Process and analyze your data with tasks in the InfluxDB task engine.\n\n      With tasks, you can schedule Flux scripts to query, analyze, modify, and\n      act on data.\n\n      In InfluxDB Cloud, you can create tasks that run [invokable\n      scripts](#tag/Invokable-Scripts)\n\n      with parameters.\n\n\n      Use the `/api/v2/tasks` endpoints to create and manage tasks, retry task\n      runs, and retrieve run logs.\n\n\n      #### Related guides\n\n\n      - [Get started with tasks](/influxdb/cloud/process-data/get-started/).\n\n      - [Common data processing\n      tasks](/influxdb/cloud/process-data/common-tasks/)\n\n      - [Create a\n      script](/influxdb/cloud/api-guide/api-invokable-scripts/#create-an-invokable-script).\n    name: Tasks\n  - name: Telegraf Plugins\n  - name: Telegrafs\n  - description: \u003e\n      Export and apply InfluxDB **templates**.\n\n      Manage **stacks** of templated InfluxDB resources.\n\n\n      InfluxDB templates are prepackaged configurations for\n\n      everything from dashboards and Telegraf to notifications and alerts.\n\n      Use InfluxDB templates to quickly configure a fresh instance of InfluxDB,\n\n      back up your dashboard configuration, or share your configuration with the\n\n      InfluxData community.\n\n\n      Use the `/api/v2/templates` endpoints to export templates and apply\n      templates.\n\n\n      **InfluxDB stacks** are stateful InfluxDB templates that let you\n\n      add, update, and remove installed template resources over time, avoid\n      duplicating\n\n      resources when applying the same or similar templates more than once, and\n\n      apply changes to distributed instances of InfluxDB OSS or InfluxDB Cloud.\n\n\n      Use the `/api/v2/stacks` endpoints to manage installed template resources.\n\n\n      #### Related guides\n\n\n      - [InfluxDB stacks](/influxdb/cloud/influxdb-templates/stacks/)\n\n      - [InfluxDB templates](/influxdb/cloud/influxdb-templates/)\n    name: Templates\n  - name: Usage\n  - description: \u003e\n      Retrieve specific users.\n\n\n      InfluxDB Cloud lets you invite and collaborate with multiple users in your\n      organization.\n\n      To invite and remove users from your organization, use the InfluxDB Cloud\n      user interface (UI);\n\n      you can't use the InfluxDB API to manage users in InfluxDB Cloud.\n\n      Once a user is added to your organization, you can use the\n\n      `GET /api/v2/users` and `GET /api/v2/users/USER_ID` API endpoints to\n\n      view specific members.\n\n\n      #### User sessions with authorizations\n\n\n      Optionally, you can scope an authorization (and its API token) to a user.\n\n      If a user signs in with username and password, creating a _user session_,\n\n      the session carries the permissions granted by all the user's\n      authorizations.\n\n      To create a user session, use the [`POST\n      /api/v2/signin`](#operation/PostSignin) endpoint.\n\n\n      #### Related guides\n\n\n      - [Manage users](/influxdb/cloud/organizations/users/)\n    name: Users\n  - name: Variables\n  - name: Views\n  - description: |\n      Write time series data to buckets.\n    name: Write\nx-tagGroups:\n  - name: Overview\n    tags:\n      - Quick start\n      - Authentication\n      - Headers\n      - Response codes\n  - name: ''\n    tags:\n      - Data I/O endpoints\n      - Security and access endpoints\n      - System information endpoints\n  - name: All endpoints\n    tags:\n      - Authorizations\n      - Bucket Schemas\n      - Buckets\n      - Cells\n      - Checks\n      - Dashboards\n      - DBRPs\n      - Delete\n      - Invokable Scripts\n      - Labels\n      - Legacy Authorizations\n      - Legacy Query\n      - Legacy Write\n      - Limits\n      - NotificationEndpoints\n      - NotificationRules\n      - Organizations\n      - Ping\n      - Query\n      - Resources\n      - Routes\n      - Rules\n      - Secrets\n      - Setup\n      - Signin\n      - Signout\n      - Tasks\n      - Telegraf Plugins\n      - Telegrafs\n      - Templates\n      - Usage\n      - Users\n      - Variables\n      - Views\n      - Write\n",
			"canonicalURL": "/github.com/influxdata/docs-v2@10bc089d2defc799b209a3fb8a9b1018edd6f1b3/-/blob/api-docs/cloud/ref.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/docs-v2/blob/10bc089d2defc799b209a3fb8a9b1018edd6f1b3/api-docs/cloud/ref.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!bool `true` into []string"
}