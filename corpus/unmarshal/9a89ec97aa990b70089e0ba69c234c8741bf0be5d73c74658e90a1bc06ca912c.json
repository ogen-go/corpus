{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UpliftLab/al-mentoria-backend"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 7957,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\npaths:\n  \"/mentors/{mentor_id}/topics\":\n    parameters:\n    - name: mentor_id\n      in: path\n      description: Mentor id\n      required: true\n      schema:\n        type: integer\n    get:\n      summary: list topics of a specific mentor\n      tags:\n      - Mentor topics\n      security:\n      - bearerAuth: {}\n      responses:\n        '200':\n          description: Successful\n        '401':\n          description: Not authorized\n    post:\n      summary: add a topic for a mentor\n      tags:\n      - Mentor topics\n      security:\n      - bearerAuth: {}\n      parameters: []\n      responses:\n        '201':\n          description: Mentor topic saved successfully\n        '422':\n          description: Mentor topic couldn't be saved\n        '401':\n          description: Not authorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mentor_id:\n                  type: integer\n                topic_id:\n                  type: integer\n                rating:\n                  type: integer\n              required:\n              - mentor_id\n              - topic_id\n              - rating\n  \"/mentors/{mentor_id}/topics/{topic_id}\":\n    parameters:\n    - name: mentor_id\n      in: path\n      description: Mentor id\n      required: true\n      schema:\n        type: integer\n    - name: topic_id\n      in: path\n      description: Topic id\n      required: true\n      schema:\n        type: integer\n    delete:\n      summary: delete a topic for a mentor\n      tags:\n      - Mentor topics\n      security:\n      - bearerAuth: {}\n      responses:\n        '204':\n          description: Mentor topic got removed successfully\n        '409':\n          description: Mentor has a reservation with this topic\n        '401':\n          description: Not authorized\n        '404':\n          description: Mentor topic not found\n  \"/mentors\":\n    get:\n      summary: list mentors\n      tags:\n      - Mentors\n      responses:\n        '200':\n          description: Successful\n    post:\n      summary: add a mentor\n      tags:\n      - Mentors\n      security:\n      - bearerAuth: {}\n      parameters: []\n      responses:\n        '201':\n          description: Mentor got saved successfully\n        '422':\n          description: Mentor couldn't be saved\n        '401':\n          description: Not authorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                bio:\n                  type: string\n                photo:\n                  type: string\n              required:\n              - name\n              - bio\n              - photo\n  \"/mentors/{mentor_id}\":\n    parameters:\n    - name: mentor_id\n      in: path\n      description: Mentor id\n      required: true\n      schema:\n        type: integer\n    delete:\n      summary: delete a topic for a mentor\n      tags:\n      - Mentors\n      security:\n      - bearerAuth: {}\n      responses:\n        '204':\n          description: Mentor got removed successfully\n        '409':\n          description: There are reservations for this mentor\n        '401':\n          description: Not authorized\n        '404':\n          description: Mentor not found\n    get:\n      summary: get a mentor\n      tags:\n      - Mentors\n      responses:\n        '200':\n          description: Successful\n        '401':\n          description: Not authorized\n        '404':\n          description: Mentor not found\n  \"/reservations\":\n    get:\n      summary: list reservations\n      tags:\n      - Reservations\n      security:\n      - bearerAuth: {}\n      responses:\n        '200':\n          description: Successful\n        '401':\n          description: Not authorized\n    post:\n      summary: create reservation\n      tags:\n      - Reservations\n      security:\n      - bearerAuth: {}\n      parameters: []\n      responses:\n        '201':\n          description: Reservation got created successfully\n        '401':\n          description: Not authorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mentor_topic_id:\n                  type: integer\n                date:\n                  type: string\n              required:\n              - user_id\n              - mentor_topic_id\n              - date\n  \"/reservations/{id}\":\n    parameters:\n    - name: id\n      in: path\n      description: id\n      required: true\n      schema:\n        type: integer\n    delete:\n      summary: delete reservation\n      tags:\n      - Reservations\n      security:\n      - bearerAuth: {}\n      responses:\n        '204':\n          description: Reservation got deleted successfully\n        '401':\n          description: Not authorized\n        '404':\n          description: Reservation not found\n  \"/topics\":\n    get:\n      summary: list topics\n      tags:\n      - Topics\n      security:\n      - bearerAuth: {}\n      responses:\n        '200':\n          description: Successful\n        '401':\n          description: Not authorized\n    post:\n      summary: add a topic\n      tags:\n      - Topics\n      security:\n      - bearerAuth: {}\n      parameters: []\n      responses:\n        '201':\n          description: Topic saved successfully\n        '422':\n          description: Topic couldn't be saved\n        '401':\n          description: Not authorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                label:\n                  type: string\n                icon:\n                  type: string\n              required:\n              - label\n              - icon\n  \"/topics/{topic_id}\":\n    parameters:\n    - name: topic_id\n      in: path\n      description: Topic id\n      required: true\n      schema:\n        type: integer\n    delete:\n      summary: delete a topic for a mentor\n      tags:\n      - Topics\n      security:\n      - bearerAuth: {}\n      responses:\n        '204':\n          description: Mentor topic got removed successfully\n        '409':\n          description: There are reservations for this topic\n        '401':\n          description: Not authorized\n        '404':\n          description: Topic was not found\n        '422':\n          description: Topic was not deleted\n  \"/users/sign_in\":\n    post:\n      summary: sign-in\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '200':\n          description: Successful\n        '422':\n          description: One of the parameters is wrong\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n              - email\n              - password\n  \"/users\":\n    post:\n      summary: sign-up\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '200':\n          description: successful\n        '422':\n          description: One of the parameters is wrong\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n              - email\n              - password\nservers:\n- url: https://{heroku}\n  variables:\n    heroku:\n      default: almentoria-api.herokuapp.com\n- url: http://{localhost}\n  variables:\n    localhost:\n      default: localhost:3000\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      in: header\n      name: Authorization\nsecurity:\n  bearerAuth: []\n",
			"canonicalURL": "/github.com/UpliftLab/al-mentoria-backend@f1e0a09261fa3dc39e8bbbc5326555bb4e062c45/-/blob/swagger/v1/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/UpliftLab/al-mentoria-backend/blob/f1e0a09261fa3dc39e8bbbc5326555bb4e062c45/swagger/v1/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 20: cannot unmarshal !!map into []string; yaml: line 31: cannot unmarshal !!map into []string; yaml: line 75: cannot unmarshal !!map into []string; yaml: line 98: cannot unmarshal !!map into []string; yaml: line 136: cannot unmarshal !!map into []string; yaml: line 163: cannot unmarshal !!map into []string; yaml: line 174: cannot unmarshal !!map into []string; yaml: line 208: cannot unmarshal !!map into []string; yaml: line 222: cannot unmarshal !!map into []string; yaml: line 233: cannot unmarshal !!map into []string; yaml: line 268: cannot unmarshal !!map into []string; yaml: line 347: cannot unmarshal !!map into ogen.SecurityRequirements"
}