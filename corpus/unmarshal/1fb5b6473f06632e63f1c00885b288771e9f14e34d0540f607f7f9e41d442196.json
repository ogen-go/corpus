{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/IBM/openapi-validator"
		},
		"file": {
			"name": "testoneof.yaml",
			"size": 0,
			"path": "packages/validator/test/cli-validator/mock-files/oas3/testoneof.yaml",
			"byteSize": 2239,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://oneoftester.com/api\ncomponents:\n  responses:\n    Ok:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Ok'\n      description: Ok response.\n  schemas:\n    A:\n      description: a string\n      type: string\n      pattern: '[a-zA-Z0-9]'\n      minLength: 1\n      maxLength: 40\n    B:\n      description: a boolean\n      type: boolean\n    AorB:\n      description: either string or boolean\n      oneOf:\n      - $ref: '#/components/schemas/A'\n      - $ref: '#/components/schemas/B'\n    C:\n      description: one of two allOf schemas\n      oneOf:\n        - allOf:\n          - type: foo\n          - description: 'foo type'\n        - anyOf:\n          - type: string\n            format: bad_format\n            description: 'url string'\n            pattern: 'https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)'\n            minLength: 0\n            maxLength: 100\n    Ok:\n      description: ok object\n      type: object\n      properties:\n        ok:\n          description: ok\n          type: boolean\npaths:\n  /ref:\n    post:\n      description: accept an A or B (ref)\n      operationId: createRef\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: body with a test property\n              properties:\n                test:\n                  $ref: '#/components/schemas/AorB'\n              type: object\n          description: A body.\n      responses:\n        '200':\n          $ref: '#/components/responses/Ok'\n      summary: test ref\n  /inline:\n    post:\n      description: accept an A or B (inline)\n      operationId: createInline\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: body with a test property\n              properties:\n                test:\n                  oneOf:\n                  - $ref: '#/components/schemas/A'\n                  - $ref: '#/components/schemas/B'\n                  - $ref: '#/components/schemas/C'\n              type: object\n          description: A body.\n      responses:\n        '200':\n          $ref: '#/components/responses/Ok'\n      summary: test inline\n",
			"canonicalURL": "/github.com/IBM/openapi-validator@9e842152e087da146c8d66c3c4c92e242ee00c02/-/blob/packages/validator/test/cli-validator/mock-files/oas3/testoneof.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/IBM/openapi-validator/blob/9e842152e087da146c8d66c3c4c92e242ee00c02/packages/validator/test/cli-validator/mock-files/oas3/testoneof.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:1269: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal JSON string into Go value of type ogen.Media"
}