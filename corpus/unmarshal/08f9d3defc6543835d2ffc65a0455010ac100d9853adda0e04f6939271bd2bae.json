{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/strohne/Facepager"
		},
		"file": {
			"name": "YouTube.v3.oa3.json",
			"size": 0,
			"path": "apis/YouTube.v3.oa3.json",
			"byteSize": 174427,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"x-facepager-module\":\"YouTube\",\n\n\t\"x-facepager-extract\" : \"items\",\n\t\"x-facepager-objectid\" : \"id\",\n\t\"x-facepager-pagination\": {\n\t\t\"method\" : \"key\",\n\t\t\"param\" : \"pageToken\",\n\t\t\"key\" : \"nextPageToken\",\n\t\t\"stop\" : null\n\t},\n\n    \"info\": {\n        \"title\": \"YouTube Data API\",\n        \"description\": \"The YouTube Data API lets you incorporate functions normally executed on the YouTube website into your own website or application.\",\n        \"termsOfService\": \"https://developers.google.com/youtube/terms/api-services-terms-of-service\",\n        \"version\": \"3\"\n    },\n    \"externalDocs\": {\n        \"url\":\"https://developers.google.com/youtube/v3/docs/\"\n    },\n    \"servers\": [\n        {\n            \"url\":\"https://www.googleapis.com/youtube/v3\"\n        }\n    ],\n    \"paths\":{\n\t\t\"/activities\" : {\n            \"get\" : {\n                \"summary\" : \"An activity resource contains information about an action that a particular channel, or user, has taken on YouTube. The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/activities\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"id\", \"snippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelId parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities.\",\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve a feed of the authenticated user's activities.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\", \n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"publishedAfter\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The publishedAfter parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"datetime\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"publishedBefore\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"datetime\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"regionCode\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The regionCode parameter instructs the API to return results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code. YouTube uses this value when the authorized user's previous activity on YouTube does not provide enough information to generate the activity feed.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t],\n               \"responses\" : {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#activityListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/activities/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/captions\": {\n            \"get\" : {\n                \"summary\" : \"A caption resource represents a YouTube caption track. A caption track is associated with exactly one YouTube video.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/captions\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the caption resource parts that the API response will include.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"id\", \"snippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\t\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"description\": \"The videoId parameter specifies the YouTube video ID of the video for which the API should return caption tracks.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of IDs that identify the caption resources that should be retrieved. Each ID must identify a caption track associated with the specified video.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n               \"responses\" : {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of caption tracks that are associated with a specified video. Note that the API response does not contain the actual captions and that the captions.download method provides the ability to retrieve a caption track.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#captionListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#caption.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the caption track.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"The snippet object contains basic details about the caption.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"videoId\": {\"description\": \"The ID that YouTube uses to uniquely identify the video associated with the caption track.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"lastUpdated\": {\"description\": \"The date and time when the caption track was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"trackKind\": {\"description\": \"The caption track's type. Valid values for this property are: ASR - A caption track generated using automatic speech recognition, forced - A caption track that plays when no other track is selected in the player. For example, a video that shows aliens speaking in an alien language might have a forced caption track to only show subtitles for the alien language, standard - A regular caption track. This is the default value.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"language\": {\"description\": \"The language of the caption track. The property value is a BCP-47 language tag.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": {\"description\": \"The name of the caption track. The name is intended to be visible to the user as an option during playback.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"audioTrackType\": {\"description\": \"The type of audio track associated with the caption track. Valid values for this property are: commentary - The caption track corresponds to an alternate audio track that includes commentary, such as directory commentary, descriptive - The caption track corresponds to an alternate audio track that includes additional descriptive audio, primary - The caption track corresponds to the primary audio track for the video, which is the audio track normally associated with the video, unknown - This is the default value.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"isCC\": {\"description\": \"Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"isLarge\": {\"description\": \"Indicates whether the caption track uses large text for the vision-impaired. The default value is false.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"isEasyReader\": {\"description\": \"Indicates whether caption track is formatted for 'easy reader,' meaning it is at a third-grade level for language learners. The default value is false.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"isDraft\": {\"description\": \"Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"isAutoSynced\": {\"description\": \"Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"status\": {\"description\": \"The caption track's status. Valid values for this property are: failed, serving, syncing\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"failureReason\": {\"description\": \"The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed. Valid values for this property are: processingFailed - YouTube failed to process the uploaded caption track, unknownFormat - The caption track's format was not recognized, unsupportedFormat - The caption track's format is not supported.\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\t\t\"/channels\":{\n            \"get\" : {\n                \"summary\" : \"A channel resource contains information about a YouTube channel.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/channels\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails, the API response will also contain all of those nested properties.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"auditDetails\", \"brandingSettings\", \"contentDetails\", \"contentOwnerDetails\", \"id\", \"invideoPromotion\", \"localizations\", \"snippet\", \"statistics\", \"status\", \"topicDetails\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\t\n\t\t\t\t\t   \"example\": \"snippet\"\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"categoryID\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"forUsername\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channel's YouTube channel ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"managedByMe\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. Set this parameter's value to true to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies. The user must be authenticated as a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\", \n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to instruct the API to only return channels owned by the authenticated user.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t],\n               \"responses\" : {\n                    \"200\" : {\n                        \"description\" : \"Returns a collection of zero or more channel resources that match the request criteria.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#channelListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/channel/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t},\n\t\t\"/channelSections\": {\n            \"get\" : {\n                \"summary\" : \"A channelSection resource contains information about a set of videos that a channel has chosen to feature. For example, a section could feature a channel's latest uploads, most popular uploads, or videos from one or more playlists. Note that a channel's sections are only visible if the channel displays content in a browse view (rather than a feed view). To enable a channel to display content in a browse view, set the brandingSettings.channel.showBrowseView property to true for the specified channel. A channel can create a maximum of 10 shelves without setting targeting data and can create a maximum of 100 shelves with targeting data.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/channelSections\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the section. If you set part=snippet, the API response will also contain all of those nested properties.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"id\", \"localizations\", \"snippet\", \"targeting\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelId parameter specifies a YouTube channel ID. If a request specifies a value for this parameter, the API will only return the specified channel's sections.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of IDs that uniquely identify the channelSection resources that are being retrieved. In a channelSection resource, the id property specifies the section's ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve a feed of the channel sections associated with the authenticated user's YouTube channel.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n               \"responses\" : {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of channelSection resources that match the API request criteria.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#channelSectionListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/channelSections/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\n\t\t},\n\t\t\"/comments\": {\n            \"get\" : {\n                \"summary\" : \"A comment resource contains information about a single YouTube comment. A comment resource can represent a comment about either a video or a channel. In addition, the comment could be a top-level comment or a reply to a top-level comment.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/comments\"\n                },  \n                \"parameters\" : [ \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more comment resource properties that the API response will include. .\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"id\", \"snippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of comment IDs for the resources that are being retrieved. In a comment resource, the id property specifies the comment's ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},                \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"parentId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The parentId parameter specifies the ID of the comment for which replies should be retrieved. Note: YouTube currently supports replies only for top-level comments. However, replies to replies may be supported in the future.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},      \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Note: This parameter is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 100, inclusive. The default value is 20.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved. Note: This parameter is not supported for use in conjunction with the id parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"textFormat\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter indicates whether the API should return comments formatted as HTML or as plain text. The default value is html. Acceptable values are: html - Returns the comments in HTML format. This is the default value. plainText - Returns the comments in plain text format.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"html\", \"plainText\"]\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of comments that match the API request parameters.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#commentListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/comments/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t},\n\t\t\"/commentThreads\": {\n            \"get\" : {\n                \"summary\" : \"A commentThread resource contains information about a YouTube comment thread, which comprises a top-level comment and replies, if any exist, to that comment. A commentThread resource can represent comments about either a video or a channel. Both the top-level comment and the replies are actually comment resources nested inside the commentThread resource. The commentThread resource does not necessarily contain all replies to a comment, and you need to use the comments.list method if you want to retrieve all replies for a particular comment. Also note that some comments do not have replies.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/commentThreads\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include. The following list contains the part names that you can include in the parameter value and the quota cost for each part: id: 0, replies: 2,snippet: 2\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"id\", \"replies\", \"snippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"allThreadsRelatedToChannelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The allThreadsRelatedToChannelId parameter instructs the API to return all comment threads associated with the specified channel. The response can include comments about the channel or about the channel's videos.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelId parameter instructs the API to return comment threads containing comments about the specified channel. (The response will not include comments left on videos that the channel uploaded.)\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of comment thread IDs for the resources that should be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoId parameter instructs the API to return comment threads associated with the specified video ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Note: This parameter is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 100, inclusive. The default value is 20.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"moderationStatus\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter to limit the returned comment threads to a particular moderation state. Note: This parameter is not supported for use in conjunction with the id parameter. The default value is published. Acceptable values are: heldForReview - Retrieve comment threads that are awaiting review by a moderator. A comment thread can be included in the response if the top-level comment or at least one of the replies to that comment are awaiting review. likelySpam - Retrieve comment threads classified as likely to be spam. A comment thread can be included in the response if the top-level comment or at least one of the replies to that comment is considered likely to be spam. published - Retrieve threads of published comments. This is the default value. A comment thread can be included in the response if its top-level comment has been published.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"heldForReview\", \"likelySpam\", \"published\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"order\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The order parameter specifies the order in which the API response should list comment threads. Valid values are: time - Comment threads are ordered by time. This is the default behavior. relevance - Comment threads are ordered by relevance. Note: This parameter is not supported for use in conjunction with the id parameter. \",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"time\", \"relevance\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved. Note: This parameter is not supported for use in conjunction with the id parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"searchTerms\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The searchTerms parameter instructs the API to limit the API response to only contain comments that contain the specified search terms. Note: This parameter is not supported for use in conjunction with the id parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"textFormat\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Set this parameter's value to html or plainText to instruct the API to return the comments left by users in html formatted or in plain text. The default value is html. Acceptable values are: html - Returns the comments in HTML format. This is the default value. plainText - Returns the comments in plain text format.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"html\", \"plainText\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of comment threads that match the API request parameters.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#commentThreadListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/commentThreads/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t},\n\t\t\"/guideCategories\": {\n            \"get\" : {\n                \"summary\" : \"A guideCategory resource identifies a category that YouTube algorithmically assigns based on a channel's content or other indicators, such as the channel's popularity. The list is similar to video categories, with the difference being that a video's uploader can assign a video category but only YouTube can assign a channel category.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/guideCategories\"\n\t\t\t\t},  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the guideCategory resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units.\",\n\t\t\t\t\t    \"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"regionCode\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter specifies the language that will be used for text values in the API response. The default value is en-US.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of categories that can be associated with YouTube channels.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#guideCategoryListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/guideCategories/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\t\t\"/i18nLanguages\": {\n            \"get\" : {\n                \"summary\" : \"An i18nLanguage resource identifies an application language that the YouTube website supports. The application language can also be referred to as a UI language. For the YouTube website, an application language could be automatically selected based on Google Account settings, browser language, or IP location. A user could also manually select the desired UI language from the YouTube site footer. Each i18nLanguage resource identifies a language code and a name. The language code can be used as the value of the hl parameter when calling API methods like videoCategories.list and guideCategories.list.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/i18nLanguages\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 1 unit.\",\n\t\t\t\t\t    \"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"en_US\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of application languages that the YouTube website supports.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#i18nLanguageListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/i18nLanguage/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/i18nRegions\": {\n            \"get\" : {\n                \"summary\" : \"An i18nRegion resource identifies a geographic area that a YouTube user can select as the preferred content region. The content region can also be referred to as a content locale. For the YouTube website, a content region could be automatically selected based on heuristics like the YouTube domain or the user's IP location. A user could also manually select the desired content region from the YouTube site footer. Each i18nRegion resource identifies a region code and a name. The region code can be used as the value of the regionCode parameter when calling API methods like search.list, videos.list, activities.list, and videoCategories.list.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/i18nRegions\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 1 unit.\",\n\t\t\t\t\t    \"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"en_US\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of content regions that the YouTube website supports.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#i18nRegionListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/i18nRegion/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/playlistItems\": {\n            \"get\" : {\n                \"summary\" : \"A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem resource contains details about the included resource that pertain specifically to how that resource is used in that playlist. YouTube uses playlists to identify special collections of videos for a channel, such as: uploaded videos, favorite videos, positively rated (liked) videos, watch history, watch later. To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods. For example, if a user marks a video as a favorite video, you would insert that video into the favorite videos playlist for that user's channel.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/playlistItems\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value and the quota cost for each part: contentDetails: 2, id: 0, snippet: 2, status: 2.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"id\", \"snippet\", \"status\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of one or more unique playlist item IDs.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoId parameter specifies that the request should return only the playlist items that contain the specified video.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#playlistItemListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/playlistItem/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"/playlists\": {\n            \"get\" : {\n                \"summary\" : \"A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. By default, playlists are publicly visible to other users, but playlists can be public or private. YouTube also uses playlists to identify special collections of videos for a channel, such as: uploaded videos, positively rated (liked) videos. To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company's videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/playlists\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value and the quota cost for each part: contentDetails: 2, id: 0, localizations: 2, player: 0, snippet: 2, status: 2\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"id\", \"localizations\", \"player\", \"snippet\", \"status\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This value indicates that the API should only return the specified channel's playlists.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlist's YouTube playlist ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to instruct the API to only return playlists owned by the authenticated user.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwnerChannel\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#playlistListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/playlist/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\t\t\"/search\": {\n            \"get\" : {\n                \"summary\" : \"A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/search\"\n                },  \n                \"parameters\" : [  \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet.\",\n\t\t\t\t\t    \"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"snippet\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"forContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request, and it is intended exclusively for YouTube content partners. The forContentOwner parameter restricts the search to only retrieve videos owned by the content owner identified by the onBehalfOfContentOwner parameter. If forContentOwner is set to true, the request must also meet these requirements: The onBehalfOfContentOwner parameter is required, The user authorizing the request must be using an account linked to the specified content owner, The type parameter value must be set to video, None of the following other parameters can be set: videoDefinition, videoDimension, videoDuration, videoLicense, videoEmbeddable, videoSyndicated, videoType.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\", \n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"forDeveloper\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. The forDeveloper parameter restricts the search to only retrieve videos uploaded via the developer's application or website. The API server uses the request's authorization credentials to identify the developer. The forDeveloper parameter can be used in conjunction with optional search parameters like the q parameter. For this feature, each uploaded video is automatically tagged with the project number that is associated with the developer's application in the Google Developers Console. When a search request subsequently sets the forDeveloper parameter to true, the API server uses the request's authorization credentials to identify the developer. Therefore, a developer can restrict results to videos uploaded through the developer's own app or website but not to videos uploaded through other apps or sites.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\", \n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"forMine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. The forMine parameter restricts the search to only retrieve videos owned by the authenticated user. If you set this parameter to true, then the type parameter's value must also be set to video. In addition, none of the following other parameters can be set in the same request: videoDefinition, videoDimension, videoDuration, videoLicense, videoEmbeddable, videoSyndicated, videoType.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\", \n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"relatedToVideoId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video. Note that if the relatedToVideoId parameter is set, the only other supported parameters are part, maxResults, pageToken, regionCode, relevanceLanguage, safeSearch, type (which must be set to video), and fields.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelId parameter indicates that the API response should only contain resources created by the channel. Note: Search results are constrained to a maximum of 500 videos if your request specifies a value for the channelId parameter and sets the type parameter value to video, but it does not also set one of the forContentOwner, forDeveloper, or forMine filters.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelType\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelType parameter lets you restrict a search to a particular type of channel. Acceptable values are: any - Return all channels, show - Only retrieve shows.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"show\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"eventType\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The eventType parameter restricts a search to broadcast events. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are:completed - Only include completed broadcasts, live - Only include active broadcasts, upcoming - Only include upcoming broadcasts.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"completed\", \"live\", \"upcoming\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"location\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The location parameter, in conjunction with the locationRadius parameter, defines a circular geographic area and also restricts a search to videos that specify, in their metadata, a geographic location that falls within that area. The parameter value is a string that specifies latitude/longitude coordinates e.g. (37.42307,-122.08427). The location parameter value identifies the point at the center of the area. The locationRadius parameter specifies the maximum distance that the location associated with a video can be from that point for the video to still be included in the search results. The API returns an error if your request specifies a value for the location parameter but does not also specify a value for the locationRadius parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"locationRadius\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The locationRadius parameter, in conjunction with the location parameter, defines a circular geographic area. The parameter value must be a floating point number followed by a measurement unit. Valid measurement units are m, km, ft, and mi. For example, valid parameter values include 1500m, 5km, 10000ft, and 0.75mi. The API does not support locationRadius parameter values larger than 1000 kilometers. Note: See the definition of the location parameter for more information.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"order\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The order parameter specifies the method that will be used to order resources in the API response. The default value is relevance. Acceptable values are: date - Resources are sorted in reverse chronological order based on the date they were created, rating - Resources are sorted from highest to lowest rating, relevance - Resources are sorted based on their relevance to the search query. This is the default value for this parameter, title - Resources are sorted alphabetically by title, videoCount - Channels are sorted in descending order of their number of uploaded videos, viewCount - Resources are sorted from highest to lowest number of views. For live broadcasts, videos are sorted by number of concurrent viewers while the broadcasts are ongoing.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"date\", \"rating\", \"relevance\", \"title\", \"videoCount\", \"viewCount\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"publishedAfter\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The publishedAfter parameter indicates that the API response should only contain resources created at or after the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"publishedBefore\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The publishedBefore parameter indicates that the API response should only contain resources created before or at the specified time. The value is an RFC 3339 formatted date-time value (1970-01-01T00:00:00Z).\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"q\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The q parameter specifies the query term to search for. Your request can also use the Boolean NOT (-) and OR (|) operators to exclude videos or to find videos that are associated with one of several search terms. For example, to search for videos matching either 'boating' or 'sailing', set the q parameter value to boating|sailing. Similarly, to search for videos matching either 'boating' or 'sailing' but not 'fishing', set the q parameter value to boating|sailing -fishing. Note that the pipe character must be URL-escaped when it is sent in your API request. The URL-escaped value for the pipe character is %7C.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"regionCode\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The regionCode parameter instructs the API to return search results for videos that can be viewed in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"relevanceLanguage\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The relevanceLanguage parameter instructs the API to return search results that are most relevant to the specified language. The parameter value is typically an ISO 639-1 two-letter language code. However, you should use the values zh-Hans for simplified Chinese and zh-Hant for traditional Chinese. Please note that results in other languages will still be returned if they are highly relevant to the search query term.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"safeSearch\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The safeSearch parameter indicates whether the search results should include restricted content as well as standard content. Acceptable values are: moderate - YouTube will filter some content from search results and, at the least, will filter content that is restricted in your locale. Based on their content, search results could be removed from search results or demoted in search results. This is the default parameter value, none - YouTube will not filter the search result set, strict - YouTube will try to exclude all restricted content from the search result set. Based on their content, search results could be removed from search results or demoted in search results.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"moderate\", \"none\", \"strict\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"topicId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID. Important: Due to the deprecation of Freebase and the Freebase API, the topicId parameter started working differently as of February 27, 2017. At that time, YouTube started supporting a small set of curated topic IDs, and you can only use that smaller set of IDs as values for this parameter. See topic IDs supported as of February 15, 2017\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"type\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The type parameter restricts a search query to only retrieve a particular type of resource. The value is a comma-separated list of resource types. The default value is video,channel,playlist. Acceptable values are: channel, playlist, video.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"channel\", \"playlist\", \"video\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoCaption\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Do not filter results based on caption availability, closedCaption - Only include videos that have captions, none - Only include videos that do not have captions.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"closedCaption\", \"none\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoCategoryId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoCategoryId parameter filters video search results based on their category. If you specify a value for this parameter, you must also set the type parameter's value to video.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoDefinition\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Return all videos, regardless of their resolution, high - Only retrieve HD videos, standard - Only retrieve videos in standard definition.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"high\", \"standard\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoDimension\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: 2d - Restrict search results to exclude 3D videos, 3d - Restrict search results to only include 3D videos., any - Include both 3D and non-3D videos in returned results. This is the default value.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"2d\", \"3d\", \"any\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoDuration\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoDuration parameter filters video search results based on their duration. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Do not filter video search results based on their duration. This is the default value, long - Only include videos longer than 20 minutes, medium - Only include videos that are between four and 20 minutes long (inclusive), short - Only include videos that are less than four minutes long.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"long\", \"medium\", \"short\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoEmbeddable\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoEmbeddable parameter lets you to restrict a search to only videos that can be embedded into a webpage. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Return all videos, embeddable or not, true - Only retrieve embeddable videos.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"true\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoLicense\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Return all videos, regardless of which license they have, that match the query parameters, creativeCommon - Only return videos that have a Creative Commons license. Users can reuse videos with this license in other videos that they create. Learn more, youtube - Only return videos that have the standard YouTube license.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"creativeCommon\", \"youtube\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoSyndicated\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoSyndicated parameter lets you to restrict a search to only videos that can be played outside youtube.com. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Return all videos, syndicated or not, true - Only retrieve syndicated videos.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"true\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoType\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoType parameter lets you restrict a search to a particular type of videos. If you specify a value for this parameter, you must also set the type parameter's value to video. Acceptable values are: any - Return all videos, episode - Only retrieve episodes of shows, movie - Only retrieve movies.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"any\", \"episode\", \"movie\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"x-facepager-extract\" : \"items\",\n\t\t\t\t\t\t\t\t\t\"x-facepager-objectid\" : \"id.videoId\",\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#searchListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"regionCode\": {\"description\": \"The region code that was used for the search query. The property value is a two-letter ISO country code that identifies the region. The i18nRegions.list method returns a list of supported regions. The default value is US. If a non-supported region is specified, YouTube might still select another region, rather than the default value, to handle the query.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/search/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t},\n\t\t\"/subscriptions\": {\n            \"get\" : {\n                \"summary\" : \"A subscription resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/subscriptions\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet, the API response will also contain all of those nested properties. The following list contains the part names that you can include in the parameter value and the quota cost for each part: contentDetails: 2, id: 0, snippet: 2, subscriberSnippet: 2\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"id\", \"snippet\", \"subscriberSnippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"channelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The channelId parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a subscription resource, the id property specifies the YouTube subscription ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mine\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve a feed of the authenticated user's subscriptions.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"myRecentSubscribers\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in reverse chronological order (newest first). Note that this parameter only supports retrieval of the most recent 1000 subscribers to the authenticated user's channel. To retrieve a complete list of subscribers, use the mySubscribers parameter. That parameter, which does not return subscribers in a particular order, does not limit the number of subscribers that can be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"mySubscribers\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in no particular order.\",\n\t\t\t\t\t\t\"schema\":{\n\t\t\t\t\t\t\t\"type\":\"boolean\",\n\t\t\t\t\t\t\t\"enum\":[\"true\",\"false\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"forChannelId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The forChannelId parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwnerChannel\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"order\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The order parameter specifies the method that will be used to sort resources in the API response. The default value is SUBSCRIPTION_ORDER_RELEVANCE. Acceptable values are: alphabetical - Sort alphabetically. relevance - Sort by relevance. unread - Sort by order of activity.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"alphabetical\", \"relevance\", \"unread\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns subscription resources that match the API request criteria.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#subscriptionListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/subscription/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t},\n\t\t\"/videoAbuseReportReasons\": {\n            \"get\" : {\n                \"summary\" : \"A videoAbuseReportReason resource contains information about a reason that a video would be flagged for containing abusive content. When your application calls the videos.reportAbuse method to report an abusive video, the request uses the information from a videoAbuseReportReason resource to identify the reason that the video is being reported.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/videoAbuseReportReasons\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet. The snippet part has a quota cost of 2 units.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"id\", \"snippet\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n               \"responses\" : {\n                    \"200\" : {\n                        \"description\" : \"Retrieve a list of reasons that can be used to report abusive videos.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#videoAbuseReportReasonListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#videoAbuseReportReason.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to identify the reason. When calling the videos.reportAbuse method, your application should use this value to set the reasonId property.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the reason.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"label\": {\"description\":\"The localized label text for the abuse report reason.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"secondaryReasons\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"A list of secondary reasons associated with the reason, if any are available. (There might be 0 or more.)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\t\t\n\t\t},\n\t\t\"/videoCategories\": {\n            \"get\" : {\n                \"summary\" : \"A videoCategory resource identifies a category that has been or could be associated with uploaded videos.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/videoCategories\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet. The snippet part has a quota cost of 2 units. \",\n\t\t\t\t\t    \"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"regionCode\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter specifies the language that should be used for text values in the API response. The default value is en_US.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of categories that can be associated with YouTube videos.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#videoCategoryListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"kind\": {\"description\": \"Identifies the API resource's type. The value will be youtube#videoCategory.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the video category.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"The snippet object contains basic details about the video category, including its title.\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The YouTube channel that created the video category.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"title\": {\"description\":\"The video category's title.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"assignable\": {\"description\":\"Indicates whether videos can be associated with the category.\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t},\n\t\t\"/videos\": {\n            \"get\" : {\n                \"summary\" : \"A video resource represents a YouTube video.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/videos\"\n                },  \n                \"parameters\" : [                 \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\" : \"part\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\" : \"query\",\n\t\t\t\t\t\t\"description\" : \"The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties. The following list contains the part names that you can include in the parameter value and the quota cost for each part: contentDetails: 2, fileDetails: 1, id: 0, liveStreamingDetails: 2, localizations: 2, player: 0,  processingDetails: 1, recordingDetails: 2, snippet: 2, statistics: 2, status: 2, suggestions: 1, topicDetails: 2\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"contentDetails\", \"fileDetails\", \"id\", \"liveStreamingDetails\", \"localizations\", \"player\", \"processingDetails\", \"recordingDetails\",  \"snippet\", \"statistics\", \"status\", \"suggestions\", \"topicDetails\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t   \"example\": \"snippet\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"chart\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The chart parameter identifies the chart that you want to retrieve. Acceptable values are: mostPopular - Return the most popular videos for the specified content region and video category.\",\n\t\t\t\t\t\t\"schema\":  {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"mostPopular\"]\n\t\t\t\t\t\t\t\t},\t\t\t\t\t\n\t\t\t\t\t\t\"example\": \"mostPopular\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"myRating\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Set this parameter's value to like or dislike to instruct the API to only return videos liked or disliked by the authenticated user. Acceptable values are: dislike - Returns only videos disliked by the authenticated user. like - Returns only video liked by the authenticated user.\",\n\t\t\t\t\t\t\"schema\":\n\t\t\t\t\t\t\t{\"type\":\"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"enum\": [\"dislike\", \"like\"]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"hl\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the i18nLanguages.list method. If localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxHeight\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are 72 to 8192, inclusive.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxResults\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxResults parameter specifies the maximum number of items that should be returned in the result set. Note: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 50, inclusive. The default value is 5.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"maxWidth\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout. If the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are 72 to 8192, inclusive.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"unsigned integer\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"pageToken\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved. Note: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"regionCode\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the chart parameter. The parameter value is an ISO 3166-1 alpha-2 country code.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"videoCategoryId\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is 0.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Returns a list of videos that match the API request parameters.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#videoListResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\t\t\t\t\t\"nextPageToken\":{\"description\":\"The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"prevPageToken\": {\"description\": \"The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\"pageInfo\":{\n\t\t\t\t\t\t\t\t\t\t\t\"description\":\"The pageInfo object encapsulates paging information for the result set.\",\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"totalResults\": {\"description\": \"The total number of results in the result set.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\"resultsPerPage\": {\"description\": \"The number of results included in the API response.\"}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/video/properties\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t},\n\t\t\"/videos/getRating\": {\n            \"get\" : {\n                \"summary\" : \"Retrieves the ratings that the authorized user gave to a list of specified videos.\",\n                \"externalDocs\": {\n                    \"url\":\"https://developers.google.com/youtube/v3/docs/videos/getRating\"\n                },  \n                \"parameters\" : [  \n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"required\": true, \n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) for which you are retrieving rating data. In a video resource, the id property specifies the video's ID.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"},\n\t\t\t\t\t\t\"example\": \"\u003cObject ID\u003e\"\n\t\t\t\t\t},\t\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"onBehalfOfContentOwner\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"This parameter can only be used in a properly authorized request. Note: This parameter is intended exclusively for YouTube content partners. The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.\",\n\t\t\t\t\t\t\"schema\":{\"type\":\"string\"}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n                    \"200\" : {\n                        \"description\" : \"Retrieves the ratings that the authorized user gave to a list of specified videos.\",\n                        \"content\" : {\n                            \"application/json\" : {\n                                \"schema\" : {\n                                    \"type\" : \"object\",\n\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#videoGetRatingResponse.\"},\n\t\t\t\t\t\t\t\t\t\t\"etag\":{\"description\":\"The Etag of this resource.\"},\n                                        \"items\" : {\n                                            \"type\" : \"array\",\n                                            \"items\" : {\n                                                \"type\":\"object\",\n                                                \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"videoId\": {\"description\": \"The ID that YouTube uses to uniquely identify the video.\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"rating\": {\"description\": \"The rating that the authorized user gave to the video. Valid values for this property are: dislike, like, none, unspecified\"}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t},\n\t\"components\": {\n\t\t\"schema\":{\n\t\t\t\"activities\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#activity.\"},\n\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the activity.\"},\n\t\t\t\t\t\"snippet\":{\n\t\t\t\t\t\t\"description\": \"The snippet object contains basic details about the activity, including the activity's type and group ID.\", \n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\": \"The date and time that the activity occurred. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\": \"The ID that YouTube uses to uniquely identify the channel associated with the activity.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\": \"The title of the resource primarily associated with the activity.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\": \"The description of the resource primarily associated with the activity.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\": \"A map of thumbnail images associated with the resource that is primarily associated with the activity. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\": \"Channel title for the channel responsible for this activity\"},\n\t\t\t\t\t\t\t\"type\": {\"description\": \"The type of activity that the resource describes.\"},\n\t\t\t\t\t\t\t\"groupId\": {\"description\": \"The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user's activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentDetails object contains information about the content associated with the activity. For example, if the snippet.type value is videoRated, then the contentDetails object's content identifies the rated video.\", \n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"upload\": {\n\t\t\t\t\t\t\t\t\"description\": \"The upload object contains information about the uploaded video. This property is only present if the snippet.type is upload.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"like\": {\n\t\t\t\t\t\t\t\t\"description\": \"The like object contains information about a resource that received a positive (like) rating. This property is only present if the snippet.type is like.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"favorite\": {\n\t\t\t\t\t\t\t\t\"description\": \"The favorite object contains information about a video that was marked as a favorite video. This property is only present if the snippet.type is favorite.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"comment\": {\n\t\t\t\t\t\t\t\t\"description\": \"The comment object contains information about a resource that received a comment. This property is only present if the snippet.type is comment.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"subscription\": {\n\t\t\t\t\t\t\t\t\"description\": \"The subscription object contains information about a channel that a user subscribed to. This property is only present if the snippet.type is subscription.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"playlistItems\": {\n\t\t\t\t\t\t\t\t\"description\": \"The playlistItem object contains information about a new playlist item. This property is only present if the snippet.type is playlistItem.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"recommendation\": {\n\t\t\t\t\t\t\t\t\"description\": \"The recommendation object contains information about a recommended resource. This property is only present if the snippet.type is recommendation.\", \n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"bulletin\": {\n\t\t\t\t\t\t\t\t\"description\": \"The bulletin object contains details about a channel bulletin post. This object is only present if the snippet.type is bulletin.\", \n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"social\": {\n\t\t\t\t\t\t\t\t\"description\": \"The social object contains details about a social network post. This property is only present if the snippet.type is social.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelItem\": {\n\t\t\t\t\t\t\t\t\"description\": \"The channelItem object contains details about a resource that was added to a channel. This property is only present if the snippet.type is channelItem.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\"channel\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#channel.\"},\n\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the channel.\"},\n\t\t\t\t\t\"snippet\":{\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the channel, such as its title, description, and thumbnail images.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t  \t\"title\": {\"description\": \"The channel's title.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\": \"The channel's description. The property's value has a maximum length of 1000 characters.\"},\n\t\t\t\t\t\t\t\"customUrl\": {\"description\": \"The channel's custom URL. The YouTube Help Center explains eligibility requirements for getting a custom URL as well as how to set up the URL.\"},\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\": \"The date and time that the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\": \"A map of thumbnail images associated with the channel. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail. When displaying thumbnails in your application, make sure that your code uses the image URLs exactly as they are returned in API responses. For example, your application should not use the http domain instead of the https domain in a URL returned in an API response. Beginning in July 2018, channel thumbnail URLs will only be available in the https domain, which is how the URLs appear in API responses. After that time, you might see broken images in your application if it tries to load YouTube images from the http domain.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"defaultLanguage\": {\"description\": \"The language of the text in the channel resource's snippet.title and snippet.description properties.\"},\n\t\t\t\t\t\t\t\"localized\": {\n\t\t\t\t\t\t\t\t\"description\": \"The snippet.localized object contains a localized title and description for the channel or it contains the channel's title and description in the default language for the channel's metadata. Localized text is returned in the resource snippet if the channels.list request used the hl parameter to specify a language for which localized text should be returned, the hl parameter value identifies a YouTube application language, and localized text is available in that language. Metadata for the default language is returned if an hl parameter value is not specified or a value is specified but localized metadata is not available for the specified language. The property contains a read-only value. Use the localizations object to add, update, or delete localized metadata.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\t\t\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"country\": {\"description\": \"The country with which the channel is associated. To set this property's value, update the value of the brandingSettings.channel.country property.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentDetails object encapsulates information about the channel's content.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"relatedPlaylists\": {\n\t\t\t\t\t\t\t\t\"description\": \"The relatedPlaylists object is a map that identifies playlists associated with the channel, such as the channel's uploaded videos or liked videos. You can retrieve any of these playlists using the playlists.list method.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"statistics\": {\n\t\t\t\t\t\t\"description\": \"The statistics object encapsulates statistics for the channel.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"viewCount\": {\"description\": \"The number of times the channel has been viewed.\"},\n\t\t\t\t\t\t\t\"commentCount\": {\"description\": \"The number of comments for the channel.\"},\n\t\t\t\t\t\t\t\"subscriberCount\": {\"description\": \"The number of subscribers that the channel has.\"},\n\t\t\t\t\t\t\t\"hiddenSubscriberCount\": {\"description\": \"Indicates whether the channel's subscriber count is publicly visible.\"},\n\t\t\t\t\t\t\t\"videoCount\": {\"description\": \"The number of videos uploaded to the channel.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"status\": {\n\t\t\t\t\t\t\"description\": \"The status object encapsulates information about the privacy status of the channel.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"privacyStatus\": {\"description\": \"Privacy status of the channel.\"},\n\t\t\t\t\t\t\t\"isLinked\": {\"description\": \"Indicates whether the channel data identifies a user that is already linked to either a YouTube username or a Google+ account. A user that has one of these links already has a public YouTube identity, which is a prerequisite for several actions, such as uploading videos.\"},\n\t\t\t\t\t\t\t\"longUploadsStatus\": {\"description\": \"Indicates whether the channel is eligible to upload videos that are more than 15 minutes long. This property is only returned if the channel owner authorized the API request. See the YouTube Help Center for more information about this feature.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"brandSettings\": {\n\t\t\t\t\t\t\"description\": \"The brandingSettings object encapsulates information about the branding of the channel.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"channel\": {\n\t\t\t\t\t\t\t\t\"description\": \"The channel object encapsulates branding properties of the channel page.\", \n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"image\": {\n\t\t\t\t\t\t\t\t\"description\": \"The image object encapsulates information about images that display on the channel's channel page or video watch pages.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"hints\": {\n\t\t\t\t\t\t\t\t\"description\": \"The hints object encapsulates additional branding properties\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\"auditDetails\": {\n\t\t\t\t\t\t\"description\": \"The auditDetails object encapsulates channel data that a multichannel network (MCN) would evaluate while determining whether to accept or reject a particular channel. Note that any API request that retrieves this resource part must provide an authorization token that contains the https://www.googleapis.com/auth/youtubepartner-channel-audit scope. In addition, any token that uses that scope must be revoked when the MCN decides to accept or reject the channel or within two weeks of the date that the token was issued.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"overallGoodStanding\": {\"description\": \"This field indicates whether there are any issues with the channel. Currently, this field represents the result of the logical AND operation over the communityGuidelinesGoodStanding, copyrightStrikesGoodStanding, and contentIdClaimsGoodStanding properties, meaning that this property has a value of true if all of those other properties also have a value of true. However, this property will have a value of false if any of those properties has a value of false. Note, however, that the methodology used to set this property's value is subject to change.\"},\n\t\t\t\t\t\t\t\"communityGuidelinesGoodStanding\": {\"description\": \"Indicates whether the channel respects YouTube's community guidelines.\"},\n\t\t\t\t\t\t\t\"copyrightStrikesGoodStanding\": {\"description\": \"Indicates whether the channel has any copyright strikes.\"},\n\t\t\t\t\t\t\t\"contentIdClaimsGoodStanding\": {\"description\": \"Indicates whether the channel has any unresolved claims.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentOwnerDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentOwnerDetails object encapsulates channel data that is relevant for YouTube Partners linked with the channel.\", \n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"contentOwner\": {\"description\": \"The ID of the content owner linked to the channel\"},\n\t\t\t\t\t\t\t\"timeLinked\": {\"description\": \"The date and time of when the channel was linked to the content owner. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"}\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"localizations\": {\n\t\t\t\t\t\t\"description\": \"The localizations object encapsulates translations of the channel's metadata.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"channelSections\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\": \"Identifies the API resource's type. The value will be youtube#channelSection.\"},\n\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the channel section.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\": \"The snippet object contains basic details about the channel section, such as its type, display style, and title.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"type\": {\"description\": \"The channel section's type.\"},\n\t\t\t\t\t\t\t\"style\": {\"description\": \"The format in which the channel section displays.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\": \"The ID that YouTube uses to uniquely identify the channel that published the channel section.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\": \"The section's title. You can only set the title of a channel section that has a snippet.type value of either multiplePlaylists or multipleChannels, and, in fact, you must specify a title when inserting or updating either of those types of sections. If you specify a title for other types of channel sections, the value will be ignored. This property's value has a maximum length of 100 characters and may contain all valid UTF-8 characters except \u003c and \u003e.\"},\n\t\t\t\t\t\t\t\"position\": {\"description\": \"The section's position on the channel page. This property uses a 0-based index. A value of 0 identifies the first section that appears on the channel, a value of 1 identifies the second section, and so forth. If you do not specify a value for this property when inserting a channel section, the default behavior is to display the new section last.\"},\n\t\t\t\t\t\t\t\"defaultLanguage\": {\"description\": \"The language of the text in the channelSection resource's snippet.title property.\"},\n\t\t\t\t\t\t\t\"localized\": {\n\t\t\t\t\t\t\t\t\"description\": \"The snippet.localized object contains either a localized title for the channel section or the title in the default language for the channel section's metadata. Localized text is returned if the channelSections.list request used the hl parameter to specify a language for which localized text should be returned and localized text is available in that language. Metadata for the default language is returned if an hl parameter value is not specified or a value is specified but localized metadata is not available for the specified language. The property contains a read-only value. Use the localizations object to add, update, or delete localized titles.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentDetails object contains details about the channel section's content, such as a list of playlists or channels featured in the section.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t},\n\t\t\t\t\t\"localizations\": {\n\t\t\t\t\t\t\"description\": \"The localizations object encapsulates translations of the channel section's metadata.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t},\n\t\t\t\t\t\"targeting\": {\n\t\t\t\t\t\t\"description\": \"The targeting object contains targeting settings for the channel section. Note that a user must meet all of the targeting settings for a channel section to be visible. The following examples help to explain the behavior: If the targeting.languages[] property value is ['en','es'], the channel section will be visible to users who have selected English or Spanish as their application language.If the targeting.languages[] property value is ['en','es'], and the targeting.regions[] property value is ['CA','FR'], the channel section will be visible to users in Canada and France who also have selected English or Spanish as their application language.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"comments\" : {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\":{\"description\":\"Identifies the API resource's type. The value will be youtube#comment.\"},\n\t\t\t\t\t\"etag\": {\"description\": \"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\": \"The ID that YouTube uses to uniquely identify the comment.\"},\n\t\t\t\t\t\"snippet\":{\n\t\t\t\t\t\t\"description\": \"The snippet object contains basic details about the comment.\", \n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"authorDisplayName\":{\"description\":\"The display name of the user who posted the comment.\"},\n\t\t\t\t\t\t\t\"authorProfileImageUrl\": {\"description\":\"The URL for the avatar of the user who posted the comment.\"},\n\t\t\t\t\t\t\t\"authorChannelUrl\": {\"description\":\"The URL of the comment author's YouTube channel, if available.\"},\n\t\t\t\t\t\t\t\"authorChannelId\": {\n\t\t\t\t\t\t\t\t\"description\":\"This object encapsulates information about the comment author's YouTube channel, if available.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID of the YouTube channel associated with the comment. If the comment is a video comment, then this property identifies the video's channel, and the snippet.videoId property identifies the video. If the comment is a channel comment, then this property identifies the channel that the comment is about.\"},\n\t\t\t\t\t\t\t\"videoId\": {\"description\":\"The ID of the video that the comment refers to. This property is only present if the comment was made on a video.\"},\n\t\t\t\t\t\t\t\"textDisplay\": {\"description\":\"The comment's text. The text can be retrieved in either plain text or HTML. (The comments.list and commentThreads.list methods both support a textFormat parameter, which specifies the desired text format.) Note that even the plain text may differ from the original comment text. For example, it may replace video links with video titles.\"},\n\t\t\t\t\t\t\t\"textOriginal\": {\"description\":\"The original, raw text of the comment as it was initially posted or last updated. The original text is only returned if it is accessible to the authenticated user, which is only guaranteed if the user is the comment's author.\"},\n\t\t\t\t\t\t\t\"parentId\": {\"description\":\"The unique ID of the parent comment. This property is only set if the comment was submitted as a reply to another comment.\"},\n\t\t\t\t\t\t\t\"canRate\": {\"description\":\"This setting indicates whether the current viewer can rate the comment.\"},\n\t\t\t\t\t\t\t\"viewerRating\": {\"description\":\"The rating the viewer has given to this comment. Note that this property does not currently identify dislike ratings, though this behavior is subject to change. In the meantime, the property value is like if the viewer has rated the comment positively. The value is none in all other cases, including the user having given the comment a negative rating or not having rated the comment. Valid values for this property are: like, none.\"},\n\t\t\t\t\t\t\t\"likeCount\": {\"description\":\"The total number of likes (positive ratings) the comment has received.\"},\n\t\t\t\t\t\t\t\"moderationStatus\": {\"description\":\"The comment's moderation status. This property is only returned if the API request was authorized by the owner of the channel or the video on which the requested comments were made. In addition, note that this property is not set if the API request used the id filter parameter. Valid values for this property are: heldForReview, likelySpam, published, rejected\"},\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The date and time when the comment was orignally published. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"updatedAt\": {\"description\":\"The date and time when the comment was last updated. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\"commentThreads\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#commentThread.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the comment thread.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the comment thread. It also contains the thread's top-level comment, which is a comment resource.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The YouTube channel that is associated with the comments in the thread. (The snippet.videoId property identifies the video.) If the comments are about a video, then the value identifies the channel that uploaded the video. (The snippet.videoId property identifies the video.) If the comments refer to the channel itself, the snippet.videoId property will not have a value\"},\n\t\t\t\t\t\t\t\"videoId\": {\"description\": \"The ID of the video that the comments refer to, if any. If this property is not present or does not have a value, then the thread applies to the channel and not to a specific video.\"},\n\t\t\t\t\t\t\t\"topLevelComment\": {\n\t\t\t\t\t\t\t\t\"description\": \"The thread's top-level comment. The property's value is a comment resource.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/comments/properties\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"canReply\": {\"description\":\"This setting indicates whether the current viewer can reply to the thread.\"},\n\t\t\t\t\t\t\t\"totalReplyCount\": {\"description\":\"The total number of replies that have been submitted in response to the top-level comment.\"},\n\t\t\t\t\t\t\t\"isPublic\": {\"description\":\"This setting indicates whether the thread, including all of its comments and comment replies, is visible to all YouTube users.\"}\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\"replies\": {\n\t\t\t\t\t\t\"description\":\"The replies object is a container that contains a list of replies to the comment, if any exist. The replies.comments property represents the list of comments itself.\",\n\t\t\t\t\t\t\"type\":\"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"comments\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of one or more replies to the top-level comment. Each item in the list is a comment resource. The list contains a limited number of replies, and unless the number of items in the list equals the value of the snippet.totalReplyCount property, the list of replies is only a subset of the total number of replies available for the top-level comment. To retrieve all of the replies for the top-level comment, you need to call the comments.list method and use the parentId request parameter to identify the comment for which you want to retrieve replies.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\",\n                                \"items\" : {\n                                    \"type\":\"object\",\n                                    \"properties\": {\n\t\t\t\t\t\t\t\t\t\t\"$ref\" : \"#components/schema/comments/properties\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t},\n\t\t\t\"guideCategories\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#guideCategory.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the guide category.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the category, such as its title.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube uses to uniquely identify the channel publishing the guide category.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The category's title.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"i18nLanguage\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#i18nLanguage.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the i18n language.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the i18n language, such as its language code and name.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"hl\": {\"description\":\"A BCP-47 code that uniquely identifies a language.\"},\n\t\t\t\t\t\t\t\"name\": {\"description\":\"The name of the language as it is written in the language specified using the i18nLanguage.list method's hl parameter.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"i18nRegion\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#i18nRegion.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the i18n region.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the i18n region, such as its region code and name.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"gl\": {\"description\":\"The two-letter ISO country code that identifies the region.\"},\n\t\t\t\t\t\t\t\"name\": {\"description\":\"The name of the region.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"playlistItem\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#playlistItem.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the playlist item.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the playlist item, such as its title and position in the playlist.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube uses to uniquely identify the user that added the item to the playlist.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The item's title.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"The item's description.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\":\"A map of thumbnail images associated with the playlist item. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\":\"The channel title of the channel that the playlist item belongs to.\"},\n\t\t\t\t\t\t\t\"playlistId\": {\"description\":\"The ID that YouTube uses to uniquely identify the playlist that the playlist item is in.\"},\n\t\t\t\t\t\t\t\"position\": {\"description\":\"The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.\"},\n\t\t\t\t\t\t\t\"resourceId\": {\n\t\t\t\t\t\t\t\t\"description\":\"The id object contains information that can be used to uniquely identify the resource that is included in the playlist as the playlist item.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\":\"The contentDetails object is included in the resource if the included item is a YouTube video. The object contains additional information about the video.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"videoId\": {\"description\":\"The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.\"},\n\t\t\t\t\t\t\t\"note\": {\"description\":\"A user-generated note for this item. The property value has a maximum length of 280 characters.\"},\n\t\t\t\t\t\t\t\"videoPublishedAt\": {\"description\":\"The date and time that the video was published to YouTube. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"}\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t},\n\t\t\t\t\t\"status\": {\n\t\t\t\t\t\t\"description\":\"The status object contains information about the playlist item's privacy status.\",\n\t\t\t\t\t\t\"type\":\"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"privacyStatus\": {\"description\": \"The playlist item's privacy status. The channel that uploaded the video that the playlist item represents can set this value using either the videos.insert or videos.update method.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"playlist\":{\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#playlist.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the playlist.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the playlist, such as its title and description.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube uses to uniquely identify the channel that published the playlist.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The playlist's title.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"The playlist's description.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\":\"A map of thumbnail images associated with the playlist. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\":\"The channel title of the channel that the video belongs to.\"},\n\t\t\t\t\t\t\t\"tags\": {\n\t\t\t\t\t\t\t\t\"description\": \"Keyword tags associated with the playlist.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"defaultLanguage\": {\"description\":\"The language of the text in the playlist resource's snippet.title and snippet.description properties.\"},\n\t\t\t\t\t\t\t\"localized\": {\n\t\t\t\t\t\t\t\t\"description\": \"The snippet.localized object contains either a localized title and description for the playlist or the title in the default language for the playlist's metadata. Localized text is returned in the resource snippet if the playlists.list request used the hl parameter to specify a language for which localized text should be returned and localized text is available in that language. Metadata for the default language is returned if an hl parameter value is not specified or a value is specified but localized metadata is not available for the specified language. The property contains a read-only value. Use the localizations object to add, update, or delete localized titles.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"status\": {\n\t\t\t\t\t\t\"description\": \"The status object contains status information for the playlist.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"privacyStatus\": {\"description\":\"The playlist's privacy status. Valid values for this property are: private, public, unlisted.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentDetails object contains information about the playlist content, including the number of videos in the playlist.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"itemCount\": {\"description\":\"The number of videos in the playlist.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"player\": {\n\t\t\t\t\t\t\"description\": \"The player object contains information that you would use to play the playlist in an embedded player.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"embedHtml\": {\"description\":\"An \u003ciframe\u003e tag that embeds a player that will play the playlist.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"localizations\": {\n\t\t\t\t\t\t\"description\": \"The localizations object encapsulates translations of the playlist's metadata.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"embedHtml\": {\"description\":\"An \u003ciframe\u003e tag that embeds a player that will play the playlist.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"search\": {\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#searchResult.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\n\t\t\t\t\t\t\"description\":\"The id object contains information that can be used to uniquely identify the resource that matches the search request.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"kind\": {\"description\":\"The type of the API resource.\"},\n\t\t\t\t\t\t\t\"videoId\": {\"description\":\"If the id.type property's value is youtube#video, then this property will be present and its value will contain the ID that YouTube uses to uniquely identify a video that matches the search query.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"If the id.type property's value is youtube#channel, then this property will be present and its value will contain the ID that YouTube uses to uniquely identify a channel that matches the search query.\"},\n\t\t\t\t\t\t\t\"playlistId\": {\"description\":\"If the id.type property's value is youtube#playlist, then this property will be present and its value will contain the ID that YouTube uses to uniquely identify a playlist that matches the search query.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about a search result, such as its title or description. For example, if the search result is a video, then the title will be the video's title and the description will be the video's description.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The creation date and time of the resource that the search result identifies. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The title of the search result.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"A description of the search result.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\":\"A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\": \"The title of the channel that published the resource that the search result identifies.\"},\n\t\t\t\t\t\t\t\"liveBroadcastContent\": {\"description\": \"An indication of whether a video or channel resource has live broadcast content. Valid property values are upcoming, live, and none. For a video resource, a value of upcoming indicates that the video is a live broadcast that has not yet started, while a value of live indicates that the video is an active live broadcast. For a channel resource, a value of upcoming indicates that the channel has a scheduled broadcast that has not yet started, while a value of live indicates that the channel has an active live broadcast.\"}\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\t\t\t},\t\t\t\n\t\t\t\"subscription\":{\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#subscription.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the subscription.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the subscription, including its title and the channel that the user subscribed to.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The date and time that the subscription was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\":\"The title of the channel that the subscription belongs to.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The subscription's title.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"The subscription's details.\"},\n\t\t\t\t\t\t\t\"resourceId\": {\n\t\t\t\t\t\t\t\t\"description\": \"The id object contains information about the channel that the user subscribed to.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube uses to uniquely identify the subscriber's channel. The resource_id object identifies the channel that the user subscribed to.\"},\n\t\t\t\t\t\t\t\"thumbnail\": {\n\t\t\t\t\t\t\t\t\"description\": \"A map of thumbnail images associated with the subscription. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\":\"The contentDetails object contains basic statistics about the subscription.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"totalItemCount\": {\"description\":\"The approximate number of items that the subscription points to.\"},\n\t\t\t\t\t\t\t\"newItemCount\": {\"description\":\"The number of new items in the subscription since its content was last read.\"},\n\t\t\t\t\t\t\t\"activityType\": {\"description\":\"The type of activity this subscription is for (only uploads, everything). Valid values for this property are: all, uploads\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"subscriberSnippet\": {\n\t\t\t\t\t\t\"description\": \"The subscriberSnippet object contains basic details about the subscriber.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The title of the subscriber's channel.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"The description of the subscriber's channel.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube assigns to uniquely identify the subscriber's channel.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\":\"Thumbnail images for the subscriber's channel.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"video\":{\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"kind\": {\"description\":\"Identifies the API resource's type. The value will be youtube#video.\"},\n\t\t\t\t\t\"etag\": {\"description\":\"The Etag of this resource.\"},\n\t\t\t\t\t\"id\": {\"description\":\"The ID that YouTube uses to uniquely identify the video.\"},\n\t\t\t\t\t\"snippet\": {\n\t\t\t\t\t\t\"description\":\"The snippet object contains basic details about the video, such as its title, description, and category.\",\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"publishedAt\": {\"description\":\"The date and time that the video was published. Note that this time might be different than the time that the video was uploaded. For example, if a video is uploaded as a private video and then made public at a later time, this property will specify the time that the video was made public. There are a couple of special cases: If a video is uploaded as a private video and the video metadata is retrieved by the channel owner, then the property value specifies the date and time that the video was uploaded. If a video is uploaded as an unlisted video, the property value also specifies the date and time that the video was uploaded. In this case, anyone who knows the video's unique video ID can retrieve the video metadata. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"channelId\": {\"description\":\"The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.\"},\n\t\t\t\t\t\t\t\"title\": {\"description\":\"The video's title. The property value has a maximum length of 100 characters and may contain all valid UTF-8 characters except \u003c and \u003e. You must set a value for this property if you call the videos.update method and are updating the snippet part of a video resource.\"},\n\t\t\t\t\t\t\t\"description\": {\"description\":\"The video's description. The property value has a maximum length of 5000 bytes and may contain all valid UTF-8 characters except \u003c and \u003e.\"},\n\t\t\t\t\t\t\t\"thumbnails\": {\n\t\t\t\t\t\t\t\t\"description\":\"A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"channelTitle\": {\"description\":\"Channel title for the channel that the video belongs to.\"},\n\t\t\t\t\t\t\t\"tags\": {\n\t\t\t\t\t\t\t\t\"description\":\"A list of keyword tags associated with the video. Tags may contain spaces. The property value has a maximum length of 500 characters. Note the following rules regarding the way the character limit is calculated: The property value is a list, and commas between items in the list count toward the limit. If a tag contains a space, the API server handles the tag value as though it were wrapped in quotation marks, and the quotation marks count toward the character limit. So, for the purposes of character limits, the tag Foo-Baz contains seven characters, but the tag Foo Baz contains nine characters.\", \n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"categoryId\": {\"description\":\"The YouTube video category associated with the video. You must set a value for this property if you call the videos.update method and are updating the snippet part of a video resource.\"},\n\t\t\t\t\t\t\t\"liveBroadcastContent\": {\"description\":\"Indicates if the video is an upcoming/active live broadcast. Or it's 'none' if the video is not an upcoming/active live broadcast. Valid values for this property are: live, none, upcoming\"},\n\t\t\t\t\t\t\t\"defaultLanguage\": {\"description\":\"The language of the text in the video resource's snippet.title and snippet.description properties.\"},\n\t\t\t\t\t\t\t\"localized\": {\n\t\t\t\t\t\t\t\t\"description\":\"The snippet.localized object contains either a localized title and description for the video or the title in the default language for the video's metadata. Localized text is returned in the resource snippet if the videos.list request used the hl parameter to specify a language for which localized text should be returned and localized text is available in that language. Metadata for the default language is returned if an hl parameter value is not specified or a value is specified but localized metadata is not available for the specified language. The property contains a read-only value. Use the localizations object to add, update, or delete localized titles.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"contentDetails\": {\n\t\t\t\t\t\t\"description\": \"The contentDetails object contains information about the video content, including the length of the video and an indication of whether captions are available for the video.\", \n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"duration\": {\"description\":\"The length of the video. The property value is an ISO 8601 duration. For example, for a video that is at least one minute long and less than one hour long, the duration is in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M33S indicates that the video is 15 minutes and 33 seconds long. If the video is at least one hour long, the duration is in the format PT#H#M#S, in which the # preceding the letter H specifies the length of the video in hours and all of the other details are the same as described above. If the video is at least one day long, the letters P and T are separated, and the value's format is P#DT#H#M#S. Please refer to the ISO 8601 specification for complete details.\"},\n\t\t\t\t\t\t\t\"dimension\": {\"description\":\"Indicates whether the video is available in 3D or in 2D.\"},\n\t\t\t\t\t\t\t\"definition\": {\"description\":\"Indicates whether the video is available in high definition (HD) or only in standard definition. Valid values for this property are: hd, sd\"},\n\t\t\t\t\t\t\t\"caption\": {\"description\":\"Indicates whether captions are available for the video. Valid values for this property are: false, true.\"},\n\t\t\t\t\t\t\t\"licensedContent\": {\"description\":\"Indicates whether the video represents licensed content, which means that the content was uploaded to a channel linked to a YouTube content partner and then claimed by that partner.\"},\n\t\t\t\t\t\t\t\"regionRestriction\": {\n\t\t\t\t\t\t\t\t\"description\":\"The regionRestriction object contains information about the countries where a video is (or is not) viewable. The object will contain either the contentDetails.regionRestriction.allowed property or the contentDetails.regionRestriction.blocked property.\", \n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"contentRating\": {\n\t\t\t\t\t\t\t\t\"description\": \"Specifies the ratings that the video received under various rating schemes.\", \n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"projection\": {\"description\": \"Specifies the projection format of the video. Valid values for this property are: 360, rectangular\"},\n\t\t\t\t\t\t\t\"hasCustomThumbnail\": {\"description\": \"Indicates whether the video uploader has provided a custom thumbnail image for the video. This property is only visible to the video uploader.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"status\": {\n\t\t\t\t\t\t\"description\": \"The status object contains information about the video's uploading, processing, and privacy statuses.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"uploadStatus\": {\"description\":\"The status of the uploaded video. Valid values for this property are: deleted, failed, processed, rejected, uploaded\"},\n\t\t\t\t\t\t\t\"failureReason\": {\"description\":\"This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed. Valid values for this property are: codec, conversion, emptyFile, invalidFile, tooSmall, uploadAborted.\"},\n\t\t\t\t\t\t\t\"rejectionReason\": {\"description\":\"This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected. Valid values for this property are: claim, copyright, duplicate, inappropriate, legal, length, termsOfUse, trademark, uploaderAccountClosed, uploaderAccountSuspended.\"},\n\t\t\t\t\t\t\t\"privacyStatus\": {\"description\":\"The video's privacy status. Valid values for this property are: private, public, unlisted.\"},\n\t\t\t\t\t\t\t\"publishAt\": {\"description\":\"The date and time when the video is scheduled to publish. It can be set only if the privacy status of the video is private. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. Note the following two additional points about this property's behavior: If you set this property's value when calling the videos.update method, you must also set the status.privacyStatus property value to private even if the video is already private. If your request schedules a video to be published at some time in the past, the video will be published right away. As such, the effect of setting the status.publishAt property to a past date and time is the same as of changing the video's privacyStatus from private to public.\"},\n\t\t\t\t\t\t\t\"license\": {\"description\":\"The video's license. Valid values for this property are: creativeCommon, youtube\"},\n\t\t\t\t\t\t\t\"embeddable\": {\"description\":\"This value indicates whether the video can be embedded on another website.\"},\n\t\t\t\t\t\t\t\"publicStatsViewable\": {\"description\": \"This value indicates whether the extended video statistics on the video's watch page are publicly viewable. By default, those statistics are viewable, and statistics like a video's viewcount and ratings will still be publicly visible even if this property's value is set to false.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"statistics\": {\n\t\t\t\t\t\t\"description\": \"The statistics object contains statistics about the video.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"viewCount\": {\"description\":\"The number of times the video has been viewed.\"},\n\t\t\t\t\t\t\t\"likeCount\": {\"description\":\"The number of users who have indicated that they liked the video.\"},\n\t\t\t\t\t\t\t\"dislikeCount\": {\"description\":\"The number of users who have indicated that they disliked the video.\"},\n\t\t\t\t\t\t\t\"commentCount\": {\"description\":\"The number of comments for the video.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"player\": {\n\t\t\t\t\t\t\"description\": \"The player object contains information that you would use to play the video in an embedded player.\", \n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"embedHtml\": {\"description\":\"An \u003ciframe\u003e tag that embeds a player that plays the video. If the API request to retrieve the resource specifies a value for the maxHeight and/or maxWidth parameters, the size of the embedded player is scaled to satisfy the maxHeight and/or maxWidth requirements. If the video's aspect ratio is unknown, the embedded player defaults to a 4:3 format.\"},\n\t\t\t\t\t\t\t\"embedHeight\": {\"description\":\"The height of the embedded player returned in the player.embedHtml property. This property is only returned if the request specified a value for the maxHeight and/or maxWidth parameters and the video's aspect ratio is known.\"},\n\t\t\t\t\t\t\t\"embedWidth\": {\"description\":\"The width of the embedded player returned in the player.embedHtml property. This property is only returned if the request specified a value for the maxHeight and/or maxWidth parameters and the video's aspect ratio is known.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"topicDetails\": {\n\t\t\t\t\t\t\"description\": \"The topicDetails object encapsulates information about topics associated with the video. Important: See the definitions of the topicDetails.relevantTopicIds[] and topicDetails.topicIds[] properties as well as the revision history for more details about upcoming changes related to topic IDs.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"topicCategories\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of Wikipedia URLs that provide a high-level description of the video's content.\", \n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\"recordingDetails\": {\n\t\t\t\t\t\t\"description\": \"The recordingDetails object encapsulates information about the location, date and address where the video was recorded.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"location\": {\n\t\t\t\t\t\t\t\t\"description\": \"The geolocation information associated with the video. Note that the child property values identify the location that the video owner wants to associate with the video. The value is editable, searchable on public videos, and might be displayed to users for public videos.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"recordingDate\": {\"description\": \"The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sssZ) format.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"fileDetails\": {\n\t\t\t\t\t\t\"description\": \"The fileDetails object encapsulates information about the video file that was uploaded to YouTube, including the file's resolution, duration, audio and video codecs, stream bitrates, and more. This data can only be retrieved by the video owner. The fileDetails object will only be returned if the processingDetails.fileAvailability property has a value of available.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"fileName\": {\"description\":\"The uploaded file's name. This field is present whether a video file or another type of file was uploaded.\"},\n\t\t\t\t\t\t\t\"fileSize\": {\"description\":\"The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.\"},\n\t\t\t\t\t\t\t\"fileType\": {\"description\":\"The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded. Valid values for this property are: archive - The file is an archive file, such as a .zip archive, audio - The file is a known audio file type, such as an .mp3 file, document - The file is a document or text file, such as a MS Word document, image - The file is an image file, such as a .jpeg image, other - The file is another non-video file type, project - The file is a video project file, such as a Microsoft Windows Movie Maker project, that does not contain actual video data, video - The file is a known video file type, such as an .mp4 file.\"},\n\t\t\t\t\t\t\t\"container\": {\"description\":\"The uploaded video file's container format.\"},\n\t\t\t\t\t\t\t\"videoStreams\": {\n\t\t\t\t\t\t\t\t\"description\":\"A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"audioStreams\": {\n\t\t\t\t\t\t\t\t\"description\":\"A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"durationMs\": {\"description\":\"The length of the uploaded video in milliseconds.\"},\n\t\t\t\t\t\t\t\"bitrateBps\": {\"description\":\"The uploaded video file's combined (video and audio) bitrate in bits per second.\"},\n\t\t\t\t\t\t\t\"creationTime\": {\"description\":\"The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: Date only: YYYY-MM-DD, Naive time: YYYY-MM-DDTHH:MM:SS, Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"processingDetails\": {\n\t\t\t\t\t\t\"description\": \"The processingDetails object encapsulates information about YouTube's progress in processing the uploaded video file. The properties in the object identify the current processing status and an estimate of the time remaining until YouTube finishes processing the video. This part also indicates whether different types of data or content, such as file details or thumbnail images, are available for the video. The processingProgress object is designed to be polled so that the video uploaded can track the progress that YouTube has made in processing the uploaded video file. This data can only be retrieved by the video owner.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"processingStatus\": {\"description\": \"The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. Valid values for this property are: failed - Video processing has failed. See ProcessingFailureReason, processing - Video is currently being processed. See ProcessingProgress, succeeded - Video has been successfully processed, terminated - Processing information is no longer available.\"},\n\t\t\t\t\t\t\t\"processingProgress\": {\n\t\t\t\t\t\t\t\t\"description\": \"The processingProgress object contains information about the progress YouTube has made in processing the video. The values are really only relevant if the video's processing status is processing.\",\n\t\t\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\t\t\"properties\": {}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"processingFailureReason\": {\"description\":\"The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed. Valid values for this property are: other - Some other processing component has failed, streamingFailed - Video could not be sent to streamers, transcodeFailed - Content transcoding has failed, uploadFailed - File delivery has failed.\"},\n\t\t\t\t\t\t\t\"fileDetailsAvailability\": {\"description\":\"This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request.\"},\n\t\t\t\t\t\t\t\"processingIssuesAvailability\": {\"description\":\"This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.\"},\n\t\t\t\t\t\t\t\"tagSuggestionsAvailability\": {\"description\":\"This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.\"},\n\t\t\t\t\t\t\t\"editorSuggestionsAvailability\": {\"description\":\"This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.\"},\n\t\t\t\t\t\t\t\"thumbnailsAvailability\": {\"description\":\"This value indicates whether thumbnail images have been generated for the video.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"suggestions\": {\n\t\t\t\t\t\t\"description\": \"The suggestions object encapsulates suggestions that identify opportunities to improve the video quality or the metadata for the uploaded video. This data can only be retrieved by the video owner. The suggestions object will only be returned if the processingDetails.tagSuggestionsAvailability property or the processingDetails.editorSuggestionsAvailability property has a value of available.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"processingErrors\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of errors that will prevent YouTube from successfully processing the uploaded video. These errors indicate that, regardless of the video's current processing status, eventually, that status will almost certainly be failed. Valid values for this property are: archiveFile - An archive file (e.g., a ZIP archive), audioFile - File contains audio only (e.g., an MP3 file), docFile - Document or text file (e.g., MS Word document), imageFile - Image file (e.g., a JPEG image), notAVideoFile - Other non-video file, projectFile - Movie project file (e.g., Microsoft Windows Movie Maker project).\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"processingWarnings\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of reasons why YouTube may have difficulty transcoding the uploaded video or that might result in an erroneous transcoding. These warnings are generated before YouTube actually processes the uploaded video file. In addition, they identify issues that do not necessarily indicate that video processing will fail but that still might cause problems such as sync issues, video artifacts, or a missing audio track. Valid values for this property are: hasEditlist - Edit lists are not currently supported, inconsistentResolution - Conflicting container and stream resolutions, problematicAudioCodec - Audio codec that is known to cause problems was used, problematicVideoCodec - Video codec that is known to cause problems was used, unknownAudioCodec - Unrecognized audio codec, transcoding is likely to fail, unknownContainer - Unrecognized file format, transcoding is likely to fail, unknownVideoCodec - Unrecognized video codec, transcoding is likely to fail.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"processingHints\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of suggestions that may improve YouTube's ability to process the video. Valid values for this property are: nonStreamableMov - The MP4 file is not streamable, this will slow down the processing, sendBestQualityVideo - Probably a better quality version of the video exists.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"tagSuggestions\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of keyword tags that could be added to the video's metadata to increase the likelihood that users will locate your video when searching or browsing on YouTube.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"editorSuggestions\": {\n\t\t\t\t\t\t\t\t\"description\": \"A list of video editing operations that might improve the video quality or playback experience of the uploaded video. Valid values for this property are: audioQuietAudioSwap - The audio track appears silent and could be swapped with a better quality one, videoAutoLevels - Picture brightness levels seem off and could be corrected, videoCrop - Margins (mattes) detected around the picture could be cropped, videoStabilize - The video appears shaky and could be stabilized.\",\n\t\t\t\t\t\t\t\t\"type\": \"array\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"liveStreamingDetails\": {\n\t\t\t\t\t\t\"description\": \"The liveStreamingDetails object contains metadata about a live video broadcast. The object will only be present in a video resource if the video is an upcoming, live, or completed live broadcast.\",\n\t\t\t\t\t\t\"type\": \"object\", \n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"actualStartTime\": {\"description\":\"The time that the broadcast actually started. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast begins.\"},\n\t\t\t\t\t\t\t\"actualEndTime\": {\"description\":\"The time that the broadcast actually ended. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. This value will not be available until the broadcast is over.\"},\n\t\t\t\t\t\t\t\"scheduledStartTime\": {\"description\":\"The time that the broadcast is scheduled to begin. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"},\n\t\t\t\t\t\t\t\"scheduledEndTime\": {\"description\":\"The time that the broadcast is scheduled to end. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format. If the value is empty or the property is not present, then the broadcast is scheduled to continue indefinitely.\"},\n\t\t\t\t\t\t\t\"concurrentViewers\": {\"description\":\"The number of viewers currently watching the broadcast. The property and its value will be present if the broadcast has current viewers and the broadcast owner has not hidden the viewcount for the video. Note that YouTube stops tracking the number of concurrent viewers for a broadcast when the broadcast ends. So, this property would not identify the number of viewers watching an archived video of a live broadcast that already ended.\"},\n\t\t\t\t\t\t\t\"activeLiveChatId\": {\"description\":\"The ID of the currently active live chat attached to this video. This field is filled only if the video is a currently live broadcast that has live chat. Once the broadcast transitions to complete this field will be removed and the live chat closed down. For persistent broadcasts that live chat id will no longer be tied to this video but rather to the new video being displayed at the persistent page.\"}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"localizations\": {\n\t\t\t\t\t\t\"description\": \"The localizations object contains translations of the video's metadata.\",\n\t\t\t\t\t\t\"type\": \"object\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
			"canonicalURL": "/github.com/strohne/Facepager@960582a37b0eed870d40faf89d1c1545a0e9f097/-/blob/apis/YouTube.v3.oa3.json",
			"externalURLs": [
				{
					"url": "https://github.com/strohne/Facepager/blob/960582a37b0eed870d40faf89d1c1545a0e9f097/apis/YouTube.v3.oa3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 122: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 331: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 414: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 509: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 646: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 718: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 768: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 818: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 914: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 1025: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 1349: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 1490: cannot unmarshal !!str `#compon...` into ogen.Schema; yaml: line 1776: cannot unmarshal !!str `#compon...` into ogen.Schema"
}