{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "moonmoonmoonmoon.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/moonmoonmoonmoon.com-1.0-swagger.yaml",
			"byteSize": 3509,
			"content": "openapi: 3.0.0\ninfo:\n  description: Turn nothing into something â€“ make a drawing, make a mark.\n  title: Moon by Ai Weiwei \u0026 Olafur Eliasson\n  version: \"1.0\"\n  x-logo:\n    backgroundColor: \"#000000\"\n    url: http://moonmoonmoonmoon.com/logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.11\n      format: swagger\n      url: http://moonmoonmoonmoon.com/api/api-docs.json\n      version: \"1.2\"\n  x-providerName: moonmoonmoonmoon.com\ntags:\n  - description: Moon data\n    name: marks\npaths:\n  /api/hashtags:\n    get:\n      description: Search for specified tag (no pound sign necessary). If \u003cb\u003etag\u003c/b\u003e is\n        empty, the 50 most popular hashtags will be returned.\n      operationId: Marks#hashtags\n      parameters:\n        - description: Hashtag to search for\n          in: query\n          name: tag\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"400\":\n          description: Bad Request\n      summary: Fetches popular hashtags or marks tagged with specified hashtag\n      tags:\n        - marks\n  /api/marks:\n    get:\n      description: \u003e-\n        The main method for querying the marks database. You may use the\n        following options:\n                \u003col style='list-style-type: lower-roman;'\u003e\n                \u003cli\u003eNo parameters to retrieve all marks in descending chronological order (use \u003cb\u003ebefore\u003c/b\u003e for pagination)\u003c/li\u003e\n                \u003cli\u003e\u003cb\u003epopular\u003c/b\u003e (and optionally \u003cb\u003elast_popular_id\u003c/b\u003e) to retrieve all popular marks\u003c/li\u003e\n                \u003cli\u003e\u003cb\u003efeatured\u003c/b\u003e to retrieve all featured marks\u003c/li\u003e\n                \u003cli\u003e\u003cb\u003ex \u0026 y\u003c/b\u003e to retrieve mark at specific coordinate\u003c/li\u003e\n                \u003cli\u003e\u003cb\u003euser\u003c/b\u003e to retrieve all marks created by the specified user\u003c/li\u003e\n                \u003cli\u003e\u003cb\u003ecollection\u003c/b\u003e to retrieve all marks collected by the specified user\u003c/li\u003e\n                \u003c/ol\u003e\n      operationId: Marks#index\n      parameters:\n        - description: Before ID (pagination purposes)\n          in: query\n          name: before\n          required: false\n          schema:\n            type: string\n        - description: Popular marks\n          in: query\n          name: popular\n          required: false\n          schema:\n            type: boolean\n        - description: Last popular ID (for pagination purposes)\n          in: query\n          name: last_popular_id\n          required: false\n          schema:\n            type: string\n        - description: Featured marks\n          in: query\n          name: featured\n          required: false\n          schema:\n            type: boolean\n        - description: X coordinate\n          in: query\n          name: x\n          required: false\n          schema:\n            type: integer\n        - description: Y coordinate\n          in: query\n          name: y\n          required: false\n          schema:\n            type: integer\n        - description: Created by user ID\n          in: query\n          name: user\n          required: false\n          schema:\n            type: string\n        - description: Collection ID\n          in: query\n          name: collection\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: No response was specified\n        \"400\":\n          description: Bad Request\n      summary: Fetches marks\n      tags:\n        - marks\nservers:\n  - url: http://moonmoonmoonmoon.com/\n"
		}
	},
	"Error": "unmarshal: json: line 1:2715: json: cannot unmarshal bool into Go struct field Parameter.paths.get.parameters.name of type string"
}