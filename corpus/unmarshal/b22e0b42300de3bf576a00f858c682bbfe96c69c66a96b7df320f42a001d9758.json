{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hongquangraem/coders-tokyo-forum-backend"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "swagger.json",
			"byteSize": 73793,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"This is the APIs docs for Coders.Tokyo forum backend v1.0.0\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Coders.Tokyo Forum\",\n    \"contact\": {\n      \"email\": \"danghongquang99@gmail.com\"\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more in repo on Github\",\n    \"url\": \"http://github.com/hongquangraem/coders-tokyo-forum-backend\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000/api/v1\"\n    }\n  ],\n  \"basePath\": \"/v1\",\n  \"tags\": [\n    {\n      \"name\": \"auth\",\n      \"description\": \"APIs for authentication route\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"APIs for user route\"\n    },\n    {\n      \"name\": \"post\",\n      \"description\": \"APIs for post route\"\n    },\n    {\n      \"name\": \"stream\",\n      \"description\": \"APIs for stream route\"\n    },\n    {\n      \"name\": \"rank\",\n      \"description\": \"APIs for ranking route\"\n    }\n  ],\n  \"schemes\": [\n    \"https\",\n    \"http\"\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"Author\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"maximum\": 20\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"author\",\n              \"singer\",\n              \"composer\",\n              \"actor\",\n              \"actress\",\n              \"director\"\n            ]\n          },\n          \"posts\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"postId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Post\"\n            }\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"tagName\"\n        ],\n        \"properties\": {\n          \"tagName\": {\n            \"type\": \"string\",\n            \"maximum\": 30\n          },\n          \"posts\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"postId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Post\"\n            }\n          }\n        }\n      },\n      \"Post\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"type\",\n          \"topic\",\n          \"content\"\n        ],\n        \"properties\": {\n          \"userId\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tagId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"comments\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"commentId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            }\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"discussion\",\n              \"blog\",\n              \"book\",\n              \"food\",\n              \"movie\",\n              \"video\",\n              \"song\",\n              \"podcast\"\n            ]\n          },\n          \"topic\": {\n            \"type\": \"string\",\n            \"maximum\": 200\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"maximum\": 400\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"authors\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"authorId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Author\"\n            }\n          },\n          \"cover\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"public_id\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"likes\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"userId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"media\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"public_id\": {\n                \"type\": \"string\"\n              },\n              \"type\": {\n                \"type\": \"object\"\n              },\n              \"signature\": {\n                \"type\": \"string\"\n              },\n              \"width\": {\n                \"type\": \"number\"\n              },\n              \"height\": {\n                \"type\": \"number\"\n              },\n              \"format\": {\n                \"type\": \"string\"\n              },\n              \"resource_type\": {\n                \"type\": \"string\"\n              },\n              \"frame_rate\": {\n                \"type\": \"number\"\n              },\n              \"bit_rate\": {\n                \"type\": \"number\"\n              },\n              \"duration\": {\n                \"type\": \"number\"\n              }\n            }\n          },\n          \"food\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"foodName\": {\n                \"type\": \"string\",\n                \"required\": true\n              },\n              \"price\": {\n                \"type\": \"number\",\n                \"required\": true\n              },\n              \"location\": {\n                \"type\": \"string\",\n                \"maximum\": 100,\n                \"required\": true\n              },\n              \"star\": {\n                \"type\": \"number\",\n                \"maximum\": 5,\n                \"minium\": 0,\n                \"required\": true\n              },\n              \"photos\": {\n                \"type\": \"array\",\n                \"public_id\": {\n                  \"type\": \"string\"\n                },\n                \"required\": true\n              }\n            }\n          }\n        }\n      },\n      \"User\": {\n        \"required\": [\n          \"username\",\n          \"password\",\n          \"email\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"maximum\": 20\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"minimum\": 6,\n            \"maximum\": 128\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"unique\": true\n          },\n          \"avatar\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"public_id\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"links\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"items\": {}\n          },\n          \"sex\": {\n            \"type\": \"string\",\n            \"mininum\": 4,\n            \"maximum\": 6\n          },\n          \"age\": {\n            \"type\": \"number\"\n          },\n          \"job\": {\n            \"type\": \"string\",\n            \"maximum\": 30\n          },\n          \"hobbies\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"wrapped\": true\n            },\n            \"maximum\": 30\n          },\n          \"rankId\": {\n            \"$ref\": \"#/components/schemas/Rank\"\n          },\n          \"posts\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"postId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Post\"\n            }\n          },\n          \"likedPosts\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"postId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Post\"\n            }\n          },\n          \"savedPosts\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"postId\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Post\"\n            }\n          },\n          \"verifyCode\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"code\": {\n                \"type\": \"number\"\n              },\n              \"expiresIn\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      },\n      \"Comment\": {\n        \"properties\": {\n          \"parent\": {\n            \"$ref\": \"#/components/schemas/Comment\"\n          },\n          \"userId\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"postId\": {\n            \"$ref\": \"#/components/schemas/Post\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  },\n  \"paths\": {\n    \"/auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Sign up account\",\n        \"description\": \"\",\n        \"operationId\": \"register\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  },\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  }\n                },\n                \"example\": {\n                  \"username\": \"hongquangraem\",\n                  \"email\": \"danghongquang99@gmail.com\",\n                  \"password\": \"123456789\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Register successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Register successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Email already existed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"409\",\n                    \"message\": \"Email already existed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Login\",\n        \"description\": \"\",\n        \"operationId\": \"login\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  }\n                },\n                \"example\": {\n                  \"email\": \"danghongquang99@gmail.com\",\n                  \"password\": \"12346578\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Register successfully\",\n            \"headers\": {\n              \"Set-Cookie\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"example\": \"access_token=abcd.efgh.ijklm; Path=/; HttpOnly\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"user\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"_id\": {\n                              \"type\": \"string\"\n                            },\n                            \"links\": {\n                              \"type\": \"array\"\n                            },\n                            \"hobbies\": {\n                              \"type\": \"array\"\n                            },\n                            \"username\": {\n                              \"type\": \"string\"\n                            },\n                            \"email\": {\n                              \"type\": \"string\"\n                            },\n                            \"createdAt\": {\n                              \"type\": \"string\"\n                            },\n                            \"updatedAt\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"access_token\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Register successfully\",\n                    \"data\": {\n                      \"user\": {\n                        \"_id\": \"5d45334cc2077677930e60f2\",\n                        \"links\": [],\n                        \"hobbies\": [],\n                        \"username\": \"danghongquang\",\n                        \"email\": \"danghongquang99@gmail.com\",\n                        \"createdAt\": \"2019-08-03T07:10:04.739Z\",\n                        \"updatedAt\": \"2019-08-05T02:40:23.561Z\"\n                      },\n                      \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkNDUzMzRjYzIwNzc2Nzc5MzBlNjBmMiIsImVtYWlsIjoiZGFuZ2hvbmdxdWFuZzk5QGdtYWlsLmNvbSIsImlhdCI6MTU2NTEwNjk3NSwiZXhwIjoxNTY1MTEwNTc1fQ.BYXcssWsoK_aOvWCrcWnwXlM3kzUvYt-yNoMwR7822o\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Wrong password\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Wrong password\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"User not found\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/logout\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Logout\",\n        \"operationId\": \"logout\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Logout successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Logout successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid token or token expired time\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"401\",\n                    \"message\": \"Invalid token or token expired time\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Missing authorization token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Missing authorization token\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/forgot-password\": {\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Forgot Password\",\n        \"operationId\": \"forgot-password\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"require\": true\n                  },\n                  \"confirmPassword\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  },\n                  \"code\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Update password successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Update password successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Confirm password isn't matched\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Confirm password isn't matched\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Wrong code or code expired time\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Wrong code or code expired time\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/send-verify-code\": {\n      \"post\": {\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Send Verify Code\",\n        \"operationId\": \"send-verify-code\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"require\": true\n                  }\n                },\n                \"example\": {\n                  \"email\": \"danghongquang99@gmail.com\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Send email verify code successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Send email verify code successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Email is not registed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Email is not registed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/change-password\": {\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"auth\"\n        ],\n        \"summary\": \"Change Password\",\n        \"operationId\": \"change-password\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"oldPassword\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  },\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"require\": true\n                  },\n                  \"confirmPassword\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Change password successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Change password successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"2 cases: 1) Wrong old password; 2) Confirm passowrd wrong\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"2 cases: 1) Wrong old password; 2) Confirm passowrd wrong\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userId}\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get profile\",\n        \"operationId\": \"get-profile\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"sucess\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"sucess\",\n                    \"data\": {\n                      \"_id\": \"5d45334cc2077677930e60f2\",\n                      \"links\": [],\n                      \"hobbies\": [],\n                      \"posts\": [\n                        \"5d453353c2077677930e60f3\"\n                      ],\n                      \"likedPosts\": [\n                        \"5d453353c2077677930e60f3\"\n                      ],\n                      \"username\": \"danghongquang\",\n                      \"email\": \"danghongquang99@gmail.com\",\n                      \"createdAt\": \"2019-08-03T07:10:04.739Z\",\n                      \"updatedAt\": \"2019-08-07T04:05:05.883Z\",\n                      \"savedPosts\": []\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found user profile\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found user profile\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Update profile\",\n        \"operationId\": \"update-profile\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"hobbies\": {\n                    \"type\": \"array\"\n                  },\n                  \"links\": {\n                    \"type\": \"object\"\n                  },\n                  \"sex\": {\n                    \"type\": \"string\"\n                  },\n                  \"age\": {\n                    \"type\": \"string\"\n                  },\n                  \"job\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"example\": {\n                \"username\": \"mitxiu\",\n                \"sex\": \"male\",\n                \"age\": 20,\n                \"job\": \"dev\",\n                \"hobbies\": [\n                  \"music, reading book\"\n                ],\n                \"links\": [\n                  {\n                    \"github\": \"https://github.com/hongquangraem\"\n                  },\n                  {\n                    \"facebook\": \"https://facebook.com/spacemanraem\"\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Update profile successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Update profile successfully\",\n                    \"data\": {\n                      \"_id\": \"5d45334cc2077677930e60f2\",\n                      \"links\": [\n                        {\n                          \"github\": \"https://github.com/hongquangraem\"\n                        },\n                        {\n                          \"facebook\": \"https://facebook.com/spacemanraem\"\n                        }\n                      ],\n                      \"hobbies\": [\n                        \"music, reading book\"\n                      ],\n                      \"posts\": [\n                        \"5d453353c2077677930e60f3\"\n                      ],\n                      \"likedPosts\": [\n                        \"5d453353c2077677930e60f3\"\n                      ],\n                      \"username\": \"mitxiu\",\n                      \"email\": \"danghongquang99@gmail.com\",\n                      \"createdAt\": \"2019-08-03T07:10:04.739Z\",\n                      \"updatedAt\": \"2019-08-07T08:53:02.446Z\",\n                      \"savedPosts\": [\n                        \"5d45349aa9cc662a0b94dbfb\",\n                        \"5d453b0f757a757c42dfe781\"\n                      ],\n                      \"sex\": \"male\",\n                      \"age\": 20,\n                      \"job\": \"dev\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Update profile failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Update profile failed\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found user to update\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found user to update\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userId}/avatars\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Upload avatar\",\n        \"operationId\": \"upload-avatar\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"path\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Update profile successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": 200,\n                    \"message\": \"success\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Upload avatar failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Update profile failed\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found user to upload avatar\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found user to upload avatar\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userId}/avatar\": {\n      \"delete\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete avatar\",\n        \"operationId\": \"delete-avatar\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Delete avatar successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": 200,\n                    \"message\": \"success\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Delete avatar failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Delete avatar failed\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found user to delete avatar\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found user to delete  avatar\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/by-tag\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"get posts by tag\",\n        \"operationId\": \"get-posts-by-tag\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"tag\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pageSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"currentPage\": {\n                          \"type\": \"number\"\n                        },\n                        \"totalPage\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Get posts by tag failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Get posts by tag failed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/{postId}\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"get one post\",\n        \"operationId\": \"get-one-post\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"success\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"2 cases: 1) Type query is required 2) this ${type} is not supported yet\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"2 cases: 1) Type query is required 2) this ${type} is not supported yet\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found ${type}\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found ${type}\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"externalDocs\": {\n          \"description\": \"To edit post you have to follow in the detail docs here\",\n          \"url\": \"https://docs.google.com/document/d/1jBw9uiBkXc8R-5bOcgbJFNIGcbihT6367qNIY7njvYk/edit#\"\n        },\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"edit post\",\n        \"operationId\": \"edit-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"blog\",\n                \"discussion\",\n                \"book\",\n                \"food\",\n                \"movie\",\n                \"song\",\n                \"podcast\"\n              ]\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"coverImage\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"audio\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"video\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"foodPhotos\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"foodName\": {\n                    \"type\": \"string\"\n                  },\n                  \"url\": {\n                    \"type\": \"string\"\n                  },\n                  \"price\": {\n                    \"type\": \"number\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  },\n                  \"star\": {\n                    \"type\": \"number\"\n                  },\n                  \"topic\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"content\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"authors\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"author\",\n                            \"singer\",\n                            \"composer\",\n                            \"actor\",\n                            \"actress\",\n                            \"director\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"example\": {\n                  \"tags\": [\n                    \"ubuntu\",\n                    \"linux\"\n                  ],\n                  \"authors\": [\n                    {\n                      \"items\": {\n                        \"name\": \"trinh cong son\",\n                        \"type\": \"composer\"\n                      }\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Edit post successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Edit post successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Edit post failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Edit post failed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"delete post\",\n        \"operationId\": \"delete-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"blog\",\n                \"discussion\",\n                \"book\",\n                \"food\",\n                \"movie\",\n                \"song\",\n                \"podcast\"\n              ]\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Delete post successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Delete post successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Delete post failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Delete post failed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts\": {\n      \"post\": {\n        \"externalDocs\": {\n          \"description\": \"To create post you have to follow in the detail docs here\",\n          \"url\": \"https://docs.google.com/document/d/1jBw9uiBkXc8R-5bOcgbJFNIGcbihT6367qNIY7njvYk/edit#\"\n        },\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"create new post\",\n        \"operationId\": \"create-new-post\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"blog\",\n                \"discussion\",\n                \"book\",\n                \"food\",\n                \"movie\",\n                \"song\",\n                \"podcast\"\n              ]\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"coverImage\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"audio\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"video\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"foodPhotos\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"foodName\": {\n                    \"type\": \"string\"\n                  },\n                  \"url\": {\n                    \"type\": \"string\"\n                  },\n                  \"price\": {\n                    \"type\": \"number\"\n                  },\n                  \"location\": {\n                    \"type\": \"string\"\n                  },\n                  \"star\": {\n                    \"type\": \"number\"\n                  },\n                  \"topic\": {\n                    \"type\": \"string\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\"\n                  },\n                  \"content\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"authors\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"name\": {\n                          \"type\": \"string\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"author\",\n                            \"singer\",\n                            \"composer\",\n                            \"actor\",\n                            \"actress\",\n                            \"director\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Create new post successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Create new post successfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Create new $post failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Create new post failed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/users/{userId}/\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"get posts of user\",\n        \"operationId\": \"get-posts-of-user\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": false\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"enum\": [\n                  \"book\",\n                  \"blog\",\n                  \"dicussion\",\n                  \"movie\",\n                  \"food\",\n                  \"video\",\n                  \"song\",\n                  \"podcast\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pageSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"currentPage\": {\n                          \"type\": \"number\"\n                        },\n                        \"totalPage\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"2 cases: 1)Type query is required 2) This ${type} type is not supported yet`\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"2 cases: 1)Type query is required 2) This ${type} type is not supported yet`\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"2 cases: 1)Not found user to get ${type} 2) Not found ${type}`\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"2 cases: 1)Not found user to get ${type} 2) Not found ${type}`\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/saved-posts/users/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"get saved posts of user\",\n        \"operationId\": \"get-saved-posts-of-user\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"pageSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"currentPage\": {\n                          \"type\": \"number\"\n                        },\n                        \"totalPage\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Get saved posts failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Get saved posts failed\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/{postId}/like\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"like post\",\n        \"operationId\": \"like-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Like post succesfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Like post succesfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Like post failed, try later\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Like post failed, try later\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found post to like\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found post to like\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/{postId}/unlike\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"unlike post\",\n        \"operationId\": \"unlike-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Unlike post succesfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Unlike post succesfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Unlike post failed, try later\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Unlike post failed, try later\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found post to unlike\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found post to unlike\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/{postId}/save\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"save post\",\n        \"operationId\": \"save-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Save post succesfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Save post succesfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Save post failed, try later\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Save post failed, try later\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found post to save\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found post to save\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts/{postId}/unsave\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"post\"\n        ],\n        \"summary\": \"unsave post\",\n        \"operationId\": \"unsave-post\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"postId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Unsave post succesfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"200\",\n                    \"message\": \"Unsave post succesfully\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Unsave post failed, try later\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"400\",\n                    \"message\": \"Unsave post failed, try later\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found post to unsave\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Not found post to unsave\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/stream\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"stream\"\n        ],\n        \"summary\": \"index\",\n        \"description\": \"Get 5 newest posts of each type\",\n        \"operationId\": \"index-stream\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Get newest posts successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"totalPage\": {\n                          \"type\": \"number\"\n                        },\n                        \"pageSize\": {\n                          \"type\": \"number\"\n                        },\n                        \"currentPage\": {\n                          \"type\": \"number\"\n                        }\n                      }\n                    },\n                    \"data\": {\n                      \"type\": \"array\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": 200,\n                    \"message\": \"Get newest posts successfully\",\n                    \"metadata\": {\n                      \"totalPage\": 9,\n                      \"pageSize\": 5,\n                      \"currentPage\": 1\n                    },\n                    \"data\": [\n                      {\n                        \"newestBlogs\": [\n                          {\n                            \"_id\": \"5d4565d8285d506a34e9f984\",\n                            \"tags\": null,\n                            \"comments\": [],\n                            \"likes\": [],\n                            \"userId\": \"5d45334cc2077677930e60f2\",\n                            \"topic\": \"edit topic v2\",\n                            \"description\": \"edit description v2\",\n                            \"content\": \"edit content v2\",\n                            \"type\": \"blog\",\n                            \"cover\": null,\n                            \"createdAt\": \"2019-08-03T10:46:02.987Z\",\n                            \"updatedAt\": \"2019-08-03T10:46:02.987Z\"\n                          }\n                        ]\n                      },\n                      {\n                        \"newestBookReviews\": []\n                      },\n                      {\n                        \"newestBookReviews\": []\n                      },\n                      {\n                        \"newestFoodReviews\": []\n                      },\n                      {\n                        \"newestMovieReviews\": []\n                      },\n                      {\n                        \"newestVideos\": []\n                      },\n                      {\n                        \"newestSongs\": []\n                      },\n                      {\n                        \"newestPodcasts\": []\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error not defined yet\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"status\": {\n                      \"type\": \"string\"\n                    },\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"example\": {\n                    \"status\": \"404\",\n                    \"message\": \"Error not defined yet\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "unmarshal: callback: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}