{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kornicameister/axion"
		},
		"file": {
			"name": "test_primitive_types.yml",
			"size": 0,
			"path": "typesafety/test_primitive_types.yml",
			"byteSize": 7369,
			"content": "---\n- case: primitives_mismatch\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /{a}/{b}:\n        get:\n          operationId: main.primitives_mismatch\n          parameters:\n            - name: a\n              in: path\n              required: true\n              schema:\n                type: string\n            - name: b\n              in: path\n              required: true\n              schema:\n                type: number\n            - name: c\n              in: query\n              required: false\n              schema:\n                type: number\n                format: float\n            - name: d\n              in: query\n              required: false\n              schema:\n                type: number\n                format: double\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    from typing import Optional\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def primitives_mismatch(\n      a: int,   # E: [primitives_mismatch(a -\u003e a)] expected \"str\", but got \"int\"  [axion-arg-type]\n      b: str,   # E: [primitives_mismatch(b -\u003e b)] expected \"float\", but got \"str\"  [axion-arg-type]\n      c: float, # E: [primitives_mismatch(c -\u003e c)] expected \"Optional[float]\", but got \"float\"  [axion-arg-type]\n      d: bool,  # E: [primitives_mismatch(d -\u003e d)] expected \"Optional[float]\", but got \"bool\"  [axion-arg-type]\n    ) -\u003e pipeline.Response:\n      return {}\n- case: primitives_required\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /{a}/{b}/{c}/{d}/{e}/{f}/{g}/{h}:\n        get:\n          operationId: main.primitives_required\n          parameters:\n            - name: a\n              in: path\n              required: true\n              schema:\n                type: string\n            - name: b\n              in: path\n              required: true\n              schema:\n                type: number\n            - name: c\n              in: path\n              required: true\n              schema:\n                type: number\n                format: float\n            - name: d\n              in: path\n              required: true\n              schema:\n                type: number\n                format: double\n            - name: e\n              in: path\n              required: true\n              schema:\n                type: integer\n            - name: f\n              in: path\n              required: true\n              schema:\n                type: integer\n                format: int32\n            - name: g\n              in: path\n              required: true\n              schema:\n                type: integer\n                format: int64\n            - name: h\n              in: path\n              required: true\n              schema:\n                type: boolean\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    from axion import oas_endpoint\n    from axion import pipeline\n    @oas_endpoint\n    async def primitives_required(\n      a: str,\n      b: float,\n      c: float,\n      d: float,\n      e: int,\n      f: int,\n      g: int,\n      h: bool,\n    ) -\u003e pipeline.Response:\n      return {}\n- case: primitives_optional\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.primitives_optional\n          parameters:\n            - name: a\n              in: query\n              required: false\n              schema:\n                type: string\n            - name: b\n              in: query\n              required: false\n              schema:\n                type: number\n            - name: c\n              in: query\n              required: false\n              schema:\n                type: number\n                format: float\n            - name: d\n              in: query\n              required: false\n              schema:\n                type: number\n                format: double\n            - name: e\n              in: query\n              required: false\n              schema:\n                type: integer\n            - name: f\n              in: query\n              required: false\n              schema:\n                type: integer\n                format: int32\n            - name: g\n              in: query\n              required: false\n              schema:\n                type: integer\n                format: int64\n            - name: h\n              in: query\n              required: false\n              schema:\n                type: boolean\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    from typing import Optional\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def primitives_optional(\n      a: Optional[str],\n      b: Optional[float],\n      c: Optional[float],\n      d: Optional[float],\n      e: Optional[int],\n      f: Optional[int],\n      g: Optional[int],\n      h: Optional[bool],\n    ) -\u003e pipeline.Response:\n      return {}\n- case: primitives_required_nullable\n  oas_spec: |\n    openapi: 3.0.1\n    info:\n      title: title\n      version: 1.0.0\n    servers:\n      - url: /\n    paths:\n      /:\n        get:\n          operationId: main.primitives_required_nullable\n          parameters:\n            - name: a\n              in: query\n              required: true\n              schema:\n                type: string\n                nullable: true\n            - name: b\n              in: query\n              required: true\n              schema:\n                type: number\n                nullable: true\n            - name: c\n              in: query\n              required: true\n              schema:\n                type: number\n                format: float\n                nullable: true\n            - name: d\n              in: query\n              required: true\n              schema:\n                type: number\n                format: double\n                nullable: true\n            - name: e\n              in: query\n              required: true\n              schema:\n                type: integer\n                nullable: true\n            - name: f\n              in: query\n              required: true\n              schema:\n                type: integer\n                format: int32\n                nullable: true\n            - name: g\n              in: query\n              required: true\n              schema:\n                type: integer\n                format: int64\n                nullable: true\n            - name: h\n              in: query\n              required: true\n              schema:\n                type: boolean\n                nullable: true\n          responses:\n            default:\n              description: unexpected error\n  main: |\n    from typing import Optional\n\n    from axion import oas_endpoint\n    from axion import pipeline\n\n    @oas_endpoint\n    async def primitives_required_nullable(\n      a: Optional[str]=None,\n      b: Optional[float]=None,\n      c: Optional[float]=None,\n      d: Optional[float]=None,\n      e: Optional[int]=None,\n      f: Optional[int]=None,\n      g: Optional[int]=None,\n      h: Optional[bool]=None,\n    ) -\u003e pipeline.Response:\n      return {}\n",
			"canonicalURL": "/github.com/kornicameister/axion@9c6a44d34fb0025041050e35e4653b3c5eff4897/-/blob/typesafety/test_primitive_types.yml",
			"externalURLs": [
				{
					"url": "https://github.com/kornicameister/axion/blob/9c6a44d34fb0025041050e35e4653b3c5eff4897/typesafety/test_primitive_types.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2: json: cannot unmarshal array into Go value of type ogen.Alias"
}