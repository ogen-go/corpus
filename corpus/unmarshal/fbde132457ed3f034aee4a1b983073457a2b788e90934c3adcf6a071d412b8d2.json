{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bangumi/dev-docs"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api.yaml",
			"byteSize": 29803,
			"content": "openapi: 3.0.3\ninfo:\n  title: hello\n  description: \u003e-\n    ÂÖ≥‰∫éËÆ¢ÈòÖÈÄöÁü•ÁöÑ socket.io Áõ∏ÂÖ≥ÁöÑÊñáÊ°£Âú®\n    \u003chttps://github.com/bangumi/GraphQL/blob/master/docs/socket.io.md\u003e\ncomponents:\n  securitySchemes:\n    CookiesSession:\n      type: apiKey\n      in: cookie\n      name: sessionID\n      description: ‰ΩøÁî® [login](#/auth/login) ÁôªÂΩï\n  schemas:\n    User:\n      title: User\n      type: object\n      properties:\n        id:\n          examples:\n            - 1\n          type: integer\n        username:\n          examples:\n            - sai\n          type: string\n        nickname:\n          examples:\n            - Saiüññ\n          type: string\n        avatar:\n          title: Avatar\n          type: object\n          properties:\n            small:\n              type: string\n            medium:\n              examples:\n                - sai\n              type: string\n            large:\n              type: string\n          required:\n            - small\n            - medium\n            - large\n        sign:\n          type: string\n        user_group:\n          type: integer\n      required:\n        - id\n        - username\n        - nickname\n        - avatar\n        - sign\n        - user_group\n    Avatar:\n      title: Avatar\n      type: object\n      properties:\n        small:\n          type: string\n        medium:\n          examples:\n            - sai\n          type: string\n        large:\n          type: string\n      required:\n        - small\n        - medium\n        - large\n    Error:\n      description: fastify default error response\n      type: object\n      properties:\n        code:\n          type: string\n        error:\n          type: string\n        message:\n          type: string\n        statusCode:\n          type: integer\n      required:\n        - code\n        - error\n        - message\n        - statusCode\n    ValidationError:\n      description: request data validation error\n      type: object\n      properties:\n        error:\n          type: string\n        message:\n          type: string\n        statusCode:\n          type: integer\n      required:\n        - error\n        - message\n        - statusCode\n    Topic:\n      title: Topic\n      type: object\n      properties:\n        id:\n          description: topic id\n          type: integer\n        creator:\n          title: User\n          type: object\n          properties:\n            id:\n              examples:\n                - 1\n              type: integer\n            username:\n              examples:\n                - sai\n              type: string\n            nickname:\n              examples:\n                - Saiüññ\n              type: string\n            avatar:\n              title: Avatar\n              type: object\n              properties:\n                small:\n                  type: string\n                medium:\n                  examples:\n                    - sai\n                  type: string\n                large:\n                  type: string\n              required:\n                - small\n                - medium\n                - large\n            sign:\n              type: string\n            user_group:\n              type: integer\n          required:\n            - id\n            - username\n            - nickname\n            - avatar\n            - sign\n            - user_group\n        title:\n          type: string\n        parentID:\n          description: Â∞èÁªÑ/Êù°ÁõÆID\n          type: integer\n        createdAt:\n          description: ÂèëÂ∏ñÊó∂Èó¥Ôºåunix time stamp in seconds\n          type: integer\n        updatedAt:\n          description: ÊúÄÂêéÂõûÂ§çÊó∂Èó¥Ôºåunix time stamp in seconds\n          type: integer\n        repliesCount:\n          type: integer\n      required:\n        - id\n        - creator\n        - title\n        - parentID\n        - createdAt\n        - updatedAt\n        - repliesCount\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        nsfw:\n          type: boolean\n        title:\n          type: string\n        icon:\n          type: string\n        description:\n          type: string\n        totalMembers:\n          type: integer\n        createdAt:\n          type: integer\n      required:\n        - id\n        - name\n        - nsfw\n        - title\n        - icon\n        - description\n        - totalMembers\n        - createdAt\n    GroupProfile:\n      type: object\n      properties:\n        recentAddedMembers:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupMember'\n        topics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Topic'\n        inGroup:\n          description: ÊòØÂê¶Â∑≤ÁªèÂä†ÂÖ•Â∞èÁªÑ\n          type: boolean\n        group:\n          $ref: '#/components/schemas/Group'\n        totalTopics:\n          type: integer\n      required:\n        - recentAddedMembers\n        - topics\n        - inGroup\n        - group\n        - totalTopics\n    SubReply:\n      type: object\n      properties:\n        id:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          type: integer\n        isFriend:\n          type: boolean\n        text:\n          type: string\n        state:\n          type: integer\n      required:\n        - id\n        - creator\n        - createdAt\n        - isFriend\n        - text\n        - state\n    BasicReply:\n      type: object\n      properties:\n        id:\n          type: integer\n        creator:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          type: integer\n        text:\n          type: string\n        state:\n          type: integer\n      required:\n        - id\n        - creator\n        - createdAt\n        - text\n        - state\n    Reply:\n      type: object\n      properties:\n        id:\n          type: integer\n        isFriend:\n          type: boolean\n        replies:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubReply'\n        creator:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          type: integer\n        text:\n          type: string\n        state:\n          type: integer\n      required:\n        - id\n        - isFriend\n        - replies\n        - creator\n        - createdAt\n        - text\n        - state\n    TopicDetail:\n      type: object\n      properties:\n        id:\n          type: integer\n        group:\n          $ref: '#/components/schemas/Group'\n        creator:\n          $ref: '#/components/schemas/User'\n        title:\n          type: string\n        text:\n          type: string\n        state:\n          type: integer\n        createdAt:\n          type: integer\n        replies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reply'\n      required:\n        - id\n        - group\n        - creator\n        - title\n        - text\n        - state\n        - createdAt\n        - replies\n    GroupMember:\n      type: object\n      properties:\n        avatar:\n          title: Avatar\n          type: object\n          properties:\n            small:\n              type: string\n            medium:\n              examples:\n                - sai\n              type: string\n            large:\n              type: string\n          required:\n            - small\n            - medium\n            - large\n        id:\n          type: integer\n        nickname:\n          type: string\n        username:\n          type: string\n        joinedAt:\n          type: integer\n      required:\n        - avatar\n        - id\n        - nickname\n        - username\n        - joinedAt\n    Notice:\n      type: object\n      properties:\n        id:\n          type: integer\n        title:\n          type: string\n        type:\n          description: Êü•Áúã `./lib/notify.ts` _settings\n          type: integer\n        sender:\n          title: User\n          type: object\n          properties:\n            id:\n              examples:\n                - 1\n              type: integer\n            username:\n              examples:\n                - sai\n              type: string\n            nickname:\n              examples:\n                - Saiüññ\n              type: string\n            avatar:\n              title: Avatar\n              type: object\n              properties:\n                small:\n                  type: string\n                medium:\n                  examples:\n                    - sai\n                  type: string\n                large:\n                  type: string\n              required:\n                - small\n                - medium\n                - large\n            sign:\n              type: string\n            user_group:\n              type: integer\n          required:\n            - id\n            - username\n            - nickname\n            - avatar\n            - sign\n            - user_group\n        topicID:\n          type: integer\n        postID:\n          type: integer\n        createdAt:\n          description: unix timestamp in seconds\n          type: integer\n      required:\n        - id\n        - title\n        - type\n        - sender\n        - topicID\n        - postID\n        - createdAt\npaths:\n  /p1/logout:\n    post:\n      operationId: logout\n      tags:\n        - auth\n      description: ÁôªÂá∫\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: Êú™ÁôªÂΩï\n          content:\n            application/json:\n              schema:\n                description: Êú™ÁôªÂΩï\n                $ref: '#/components/schemas/Error'\n              examples:\n                NeedLoginError:\n                  value:\n                    code: NEED_LOGIN\n                    error: Unauthorized\n                    message: you need to login before logout\n                    statusCode: 401\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/login2:\n    post:\n      operationId: login2\n      tags:\n        - auth\n      description: \u003e-\n        ÈúÄË¶Å\n        [turnstile](https://developers.cloudflare.com/turnstile/get-started/client-side-rendering/)\n\n\n        next.bgm.tv ÂüüÂêçÂØπÂ∫îÁöÑ site-key ‰∏∫ `0x4AAAAAAABkMYinukE8nzYS`\n\n\n        dev.bgm38.com ÂüüÂêç‰ΩøÁî®ÊµãËØïÁî®ÁöÑ site-key `1x00000000000000000000AA`\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  minLength: 1\n                  type: string\n                password:\n                  minLength: 1\n                  type: string\n                cf-turnstile-response:\n                  minLength: 1\n                  type: string\n              required:\n                - email\n                - password\n                - cf-turnstile-response\n            example:\n              email: treeholechan@gmail.com\n              password: lovemeplease\n              cf-turnstile-response: 10000000-aaaa-bbbb-cccc-000000000001\n        required: true\n      responses:\n        '200':\n          description: Default Response\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n              description: 'example: \"sessionID=12345abc\"'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '400':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationError'\n        '401':\n          description: È™åËØÅÁ†ÅÈîôËØØ/Ë¥¶Âè∑ÂØÜÁ†Å‰∏çÂåπÈÖç\n          headers:\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: remaining rate limit\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: total limit per 10 minutes\n            X-RateLimit-Reset:\n              schema:\n                type: integer\n              description: seconds to reset rate limit\n          content:\n            application/json:\n              schema:\n                description: È™åËØÅÁ†ÅÈîôËØØ/Ë¥¶Âè∑ÂØÜÁ†Å‰∏çÂåπÈÖç\n                $ref: '#/components/schemas/Error'\n              examples:\n                CAPTCHA_ERROR:\n                  value:\n                    code: CAPTCHA_ERROR\n                    error: Unauthorized\n                    message: wrong captcha\n                    statusCode: 401\n                EMAIL_PASSWORD_ERROR:\n                  value:\n                    code: EMAIL_PASSWORD_ERROR\n                    error: Unauthorized\n                    message: email does not exists or email and password not match\n                    statusCode: 401\n        '429':\n          description: Â§±Ë¥•Ê¨°Êï∞Â§™Â§öÔºåÈúÄË¶ÅËøá‰∏ÄÊÆµÊó∂Èó¥ÂÜçÈáçËØï\n          headers:\n            X-RateLimit-Remaining:\n              schema:\n                type: integer\n              description: remaining rate limit\n            X-RateLimit-Limit:\n              schema:\n                type: integer\n              description: limit per 10 minutes\n            X-RateLimit-Reset:\n              schema:\n                type: integer\n              description: seconds to reset rate limit\n          content:\n            application/json:\n              schema:\n                description: Â§±Ë¥•Ê¨°Êï∞Â§™Â§öÔºåÈúÄË¶ÅËøá‰∏ÄÊÆµÊó∂Èó¥ÂÜçÈáçËØï\n                $ref: '#/components/schemas/Error'\n              example:\n                code: TOO_MANY_REQUESTS\n                error: Too Many Requests\n                message: too many failed login attempts\n                statusCode: 429\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/me:\n    get:\n      operationId: getCurrentUser\n      tags:\n        - auth\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                code: NEED_LOGIN\n                error: Unauthorized\n                message: you need to login before %s\n                statusCode: 401\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/groups/{groupName}/profile:\n    get:\n      operationId: getGroupProfile\n      tags:\n        - topic\n      description: Ëé∑ÂèñÂ∞èÁªÑÈ¶ñÈ°µ\n      parameters:\n        - schema:\n            default: 20\n            type: integer\n          in: query\n          name: limit\n          required: false\n        - schema:\n            default: 0\n            type: integer\n          in: query\n          name: offset\n          required: false\n        - schema:\n            minLength: 1\n            type: string\n          in: path\n          name: groupName\n          required: true\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n        '404':\n          description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n          content:\n            application/json:\n              schema:\n                description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n                $ref: '#/components/schemas/Error'\n              examples:\n                NotFoundError:\n                  value:\n                    code: NOT_FOUND\n                    error: Not Found\n                    message: topic not found\n                    statusCode: 404\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/groups/-/topics/{id}:\n    get:\n      operationId: getGroupTopicDetail\n      tags:\n        - topic\n      description: Ëé∑ÂèñÂ∏ñÂ≠êÂàóË°®\n      parameters:\n        - schema:\n            type: integer\n          example: 371602\n          in: path\n          name: id\n          required: true\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TopicDetail'\n        '404':\n          description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n          content:\n            application/json:\n              schema:\n                description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n                $ref: '#/components/schemas/Error'\n              examples:\n                NotFoundError:\n                  value:\n                    code: NOT_FOUND\n                    error: Not Found\n                    message: topic not found\n                    statusCode: 404\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/groups/{groupName}/members:\n    get:\n      operationId: listGroupMembersByName\n      tags:\n        - topic\n      description: Ëé∑ÂèñÂ∏ñÂ≠êÂàóË°®\n      parameters:\n        - schema:\n            default: all\n            anyOf:\n              - type: string\n                enum:\n                  - mod\n              - type: string\n                enum:\n                  - normal\n              - type: string\n                enum:\n                  - all\n          in: query\n          name: type\n          required: false\n        - schema:\n            default: 30\n            type: integer\n          in: query\n          name: limit\n          required: false\n        - schema:\n            default: 0\n            type: integer\n          in: query\n          name: offset\n          required: false\n        - schema:\n            minLength: 1\n            type: string\n          in: path\n          name: groupName\n          required: true\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/GroupMember'\n                  total:\n                    type: integer\n                required:\n                  - data\n                  - total\n        '404':\n          description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n          content:\n            application/json:\n              schema:\n                description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n                $ref: '#/components/schemas/Error'\n              examples:\n                NotFoundError:\n                  value:\n                    code: NOT_FOUND\n                    error: Not Found\n                    message: topic not found\n                    statusCode: 404\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/groups/{groupName}/topics:\n    get:\n      operationId: getGroupTopicsByGroupName\n      tags:\n        - topic\n      description: Ëé∑ÂèñÂ∏ñÂ≠êÂàóË°®\n      parameters:\n        - schema:\n            default: 30\n            type: integer\n          in: query\n          name: limit\n          required: false\n        - schema:\n            default: 0\n            type: integer\n          in: query\n          name: offset\n          required: false\n        - schema:\n            minLength: 1\n            type: string\n          in: path\n          name: groupName\n          required: true\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Topic'\n                  total:\n                    type: integer\n                required:\n                  - data\n                  - total\n        '404':\n          description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n          content:\n            application/json:\n              schema:\n                description: Â∞èÁªÑ‰∏çÂ≠òÂú®\n                $ref: '#/components/schemas/Error'\n              examples:\n                NotFoundError:\n                  value:\n                    code: NOT_FOUND\n                    error: Not Found\n                    message: topic not found\n                    statusCode: 404\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n    post:\n      operationId: createNewGroupTopic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  minLength: 1\n                  type: string\n                content:\n                  minLength: 1\n                  type: string\n              required:\n                - title\n                - content\n            example:\n              title: post title\n              content: post contents\n        required: true\n      parameters:\n        - schema:\n            minLength: 1\n            type: string\n          example: sandbox\n          in: path\n          name: groupName\n          required: true\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    description: new post topic id\n                    type: integer\n                required:\n                  - id\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/subjects/{subjectID}/topics:\n    get:\n      operationId: getSubjectTopicsBySubjectId\n      tags:\n        - topic\n      description: Ëé∑ÂèñÂ∏ñÂ≠êÂàóË°®\n      parameters:\n        - schema:\n            default: 30\n            type: integer\n          in: query\n          name: limit\n          required: false\n        - schema:\n            default: 0\n            type: integer\n          in: query\n          name: offset\n          required: false\n        - schema:\n            exclusiveMinimum: 0\n            type: integer\n          in: path\n          name: subjectID\n          required: true\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Topic'\n                  total:\n                    type: integer\n                required:\n                  - data\n                  - total\n        '404':\n          description: Êù°ÁõÆ‰∏çÂ≠òÂú®\n          content:\n            application/json:\n              schema:\n                description: Êù°ÁõÆ‰∏çÂ≠òÂú®\n                $ref: '#/components/schemas/Error'\n              examples:\n                NotFoundError:\n                  value:\n                    code: NOT_FOUND\n                    error: Not Found\n                    message: topic not found\n                    statusCode: 404\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/groups/-/topics/{topicID}/replies:\n    post:\n      operationId: createGroupReply\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                replyTo:\n                  examples:\n                    - 0\n                  default: 0\n                  description: Ë¢´ÂõûÂ§çÁöÑ topic ID, `0` ‰ª£Ë°®ÂõûÂ§çÊ•º‰∏ª\n                  type: integer\n                content:\n                  minLength: 1\n                  type: string\n              required:\n                - content\n            examples:\n              example1:\n                value:\n                  content: post contents\n              example2:\n                value:\n                  content: post contents\n                  replyTo: 2\n        required: true\n      parameters:\n        - schema:\n            type: integer\n          example: 371602\n          in: path\n          name: topicID\n          required: true\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasicReply'\n        '401':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              examples:\n                NOT_JOIN_PRIVATE_GROUP_ERROR:\n                  value:\n                    code: NOT_JOIN_PRIVATE_GROUP_ERROR\n                    error: Unauthorized\n                    message: \u003e-\n                      you need to join private group 'Ê≤ôÁõí' before you create a\n                      post or reply\n                    statusCode: 401\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/notify:\n    get:\n      operationId: listNotice\n      summary: Ëé∑ÂèñÊú™ËØªÈÄöÁü•\n      tags:\n        - user\n      parameters:\n        - schema:\n            default: 20\n            type: integer\n          in: query\n          name: limit\n          required: false\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: Default Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Notice'\n                  total:\n                    type: integer\n                required:\n                  - data\n                  - total\n        '401':\n          description: Êú™ÁôªÂΩï\n          content:\n            application/json:\n              schema:\n                description: Êú™ÁôªÂΩï\n                $ref: '#/components/schemas/Error'\n              examples:\n                NeedLoginError:\n                  value:\n                    code: NEED_LOGIN\n                    error: Unauthorized\n                    message: you need to login before getting notifications\n                    statusCode: 401\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n  /p1/clear-notify:\n    post:\n      operationId: clearNotice\n      summary: Ê†áËÆ∞ÈÄöÁü•‰∏∫Â∑≤ËØª\n      tags:\n        - user\n      description: |-\n        Ê†áËÆ∞ÈÄöÁü•‰∏∫Â∑≤ËØª\n\n        ‰∏ç‰º†idÊó∂‰ºöÊ∏ÖÁ©∫ÊâÄÊúâÊú™ËØªÈÄöÁü•\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: array\n                  items:\n                    type: integer\n            examples:\n              ClearAll:\n                value: {}\n              ClearSome:\n                value:\n                  id:\n                    - 1\n                    - 2\n      security:\n        - CookiesSession: []\n      responses:\n        '200':\n          description: Ê≤°ÊúâËøîÂõûÂÄº\n        '401':\n          description: Êú™ÁôªÂΩï\n          content:\n            application/json:\n              schema:\n                description: Êú™ÁôªÂΩï\n                $ref: '#/components/schemas/Error'\n              examples:\n                NeedLoginError:\n                  value:\n                    code: NEED_LOGIN\n                    error: Unauthorized\n                    message: you need to login before marking notifications as read\n                    statusCode: 401\n        '500':\n          description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n          content:\n            application/json:\n              schema:\n                description: ÊÑèÊñô‰πãÂ§ñÁöÑÊúçÂä°Âô®ÈîôËØØ\n                $ref: '#/components/schemas/Error'\n",
			"canonicalURL": "/github.com/bangumi/dev-docs@3f3a15b739ae2b25fe7898463c8f8498438e8a8a/-/blob/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bangumi/dev-docs/blob/3f3a15b739ae2b25fe7898463c8f8498438e8a8a/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 920: cannot unmarshal !!int `0` into bool"
}