{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/koshevy/codegena"
		},
		"file": {
			"name": "complex.json",
			"size": 0,
			"path": "libs/oapi3ts/src/schemas/complex.json",
			"byteSize": 22854,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"TODO App\",\n    \"description\": \"Describe example api of TODO app. Uses `#/components/schemas` for storing shared models.\"\n  },\n  \"paths\": {\n    \"/list\": {\n      \"summary\": \"Get lists of TODO's\",\n      \"get\": {\n        \"summary\": \"Get list of todo's lists\",\n        \"operationId\": \"getLists\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/isComplete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createList\",\n        \"description\": \"Create new list\",\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosListBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDosList\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/list/{listId}\": {\n      \"operationId\": \"rewriteList\",\n      \"get\": {\n        \"summary\": \"Get todo's list\",\n        \"operationId\": \"getList\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"put\": {\n        \"description\": \"Rewrite an entire todo's list\",\n        \"operationId\": \"rewriteList\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosListBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"204\": {\n            \"description\": \"No changes. Should no have a response!\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"patch\": {\n        \"description\": \"Partially update of list\",\n        \"operationId\": \"updateList\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosListBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Todo list saved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDosList\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/list/{listId}/item\": {\n      \"summary\": \"List item\",\n      \"get\": {\n        \"operationId\": \"getListItems\",\n        \"description\": \"Get items of specified list\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/isComplete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListItemNotFound\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createListItem\",\n        \"description\": \"Create new list item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosItemBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDosItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListItemNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/list/{listId}/item/{itemId}\": {\n      \"put\": {\n        \"operationId\": \"rewriteListItem\",\n        \"description\": \"Rewrite list item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/itemId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosItemBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListItemNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"patch\": {\n        \"operationId\": \"updateListItem\",\n        \"description\": \"Update list item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/listId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/itemId\"\n          },\n          {\n            \"name\": \"forceSave\",\n            \"in\": \"query\",\n            \"description\": \"Force save list despite conflicts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": [\"boolean\", \"null\"],\n              \"default\": null\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"List item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDosItemBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoItemSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorListItemNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"forceSave\": {\n        \"name\": \"forceSave\",\n        \"in\": \"query\",\n        \"description\": \"Force save list despite conflicts\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": [\"boolean\", \"null\"],\n          \"default\": null\n        }\n      },\n      \"itemId\": {\n        \"name\": \"itemId\",\n        \"in\": \"path\",\n        \"description\": \"Uid of TODO list item\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"number\"\n        }\n      },\n      \"isComplete\": {\n        \"name\": \"isComplete\",\n        \"in\": \"query\",\n        \"description\": \"Filter lists by `complete` status\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": [\"boolean\", \"null\"],\n          \"default\": null\n        }\n      },\n      \"listId\": {\n        \"name\": \"listId\",\n        \"in\": \"path\",\n        \"description\": \"Uid of TODO list\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"number\"\n        }\n      }\n    },\n    \"responses\": {\n      \"errorBadRequest\": {\n        \"description\": \"Bad request\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorBadRequest\"\n            }\n          }\n        }\n      },\n      \"errorConflict\": {\n        \"description\": \"Conflict\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorConflict\"\n            }\n          }\n        }\n      },\n      \"errorListItemNotFound\": {\n        \"description\": \"List item not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorNotFound\"\n            }\n          }\n        }\n      },\n      \"errorListNotFound\": {\n        \"description\": \"List not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorNotFound\"\n            }\n          }\n        }\n      },\n      \"errorServer\": {\n        \"description\": \"Server error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorServer\"\n            }\n          }\n        }\n      },\n      \"todoItemSaved\": {\n        \"description\": \"Todos item saved\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ToDosItem\"\n            }\n          }\n        }\n      },\n      \"todoListSaved\": {\n        \"description\": \"Todo list saved\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ToDosList\"\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"AttachmentMeta\": {\n        \"description\": \"Common meta data model of any type of attachment\",\n        \"oneOf\": [\n          {\"$ref\": \"#/components/schemas/AttachmentMetaImage\"},\n          {\"$ref\": \"#/components/schemas/AttachmentMetaDocument\"},\n          {\"$ref\": \"#/components/schemas/ExternalResource\"}\n        ]\n      },\n      \"AttachmentMetaImage\": {\n        \"type\": \"object\",\n        \"description\": \"Meta data of image attached to task\",\n        \"properties\": {\n          \"mediaId\": {\n            \"type\": \"string\",\n            \"description\": \"An unique id of media. Metadata with unique get from server in return of uploaded image file.\",\n            \"pattern\": \"^[a-z0-9]{16}$\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Marks attachment as an image\",\n            \"enum\": [\"image\"]\n          },\n          \"url\": {\n            \"description\": \"Url of uploaded image\",\n            \"$ref\": \"#/components/schemas/Url\"\n          },\n          \"thumbs\": {\n            \"type\": \"object\",\n            \"description\": \"Possible thumbnails of uploaded image\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"url\": {\n                  \"description\": \"Url of cached thumb\",\n                  \"$ref\": \"#/components/schemas/Url\"\n                },\n                \"imageOptions\": {\n                  \"description\": \"Information of image\",\n                  \"$ref\": \"#/components/schemas/ImageOptions\"\n                }\n              }\n            }\n          },\n          \"format\": {\n            \"description\": \"Format of uploaded image\",\n            \"type\": \"string\",\n            \"enum\": [\"png\", \"jpeg\", \"gif\", \"svg\", \"tiff\"]\n          },\n          \"imageOptions\": {\n            \"description\": \"Url of cached thumb\",\n            \"$ref\": \"#/components/schemas/ImageOptions\"\n          }\n        },\n        \"required\": [\n          \"mediaId\",\n          \"type\",\n          \"url\",\n          \"format\",\n          \"imageOptions\"\n        ]\n      },\n      \"AttachmentMetaDocument\": {\n        \"type\": \"object\",\n        \"description\": \"Meta data of document attached to task\",\n        \"properties\": {\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"An unique id of document. Metadata with unique get from server in return of uploaded image file.\",\n            \"pattern\": \"^[a-z0-9]{16}$\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Marks attachment as an document\",\n            \"enum\": [\"document\"]\n          },\n          \"url\": {\n            \"description\": \"Url of uploaded document\",\n            \"$ref\": \"#/components/schemas/Url\"\n          },\n          \"format\": {\n            \"type\": \"string\",\n            \"description\": \"Format of document\",\n            \"enum\": [\"doc\", \"docx\", \"pdf\", \"rtf\", \"xls\", \"xlsx\", \"txt\"]\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"description\": \"File size\",\n            \"min\": 0,\n            \"max\": 8388607\n          }\n        },\n        \"required\": [\n          \"docId\",\n          \"type\",\n          \"url\",\n          \"format\",\n          \"size\"\n        ]\n      },\n      \"ExternalResource\": {\n        \"description\": \"Link to any external resource in attachment\",\n        \"$ref\": \"#/components/schemas/Url\"\n      },\n      \"HttpErrorBadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"message\"\n        ],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"syntax\",\n              \"semantic\"\n            ]\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JsonError\"\n            }\n          }\n        }\n      },\n      \"HttpErrorConflict\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"message\"\n        ],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HttpErrorNotFound\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"message\"\n        ],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HttpErrorServer\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"message\"\n        ],\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"syntax\",\n              \"semantic\"\n            ]\n          }\n        }\n      },\n      \"ImageOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"width\": {\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 3000\n          },\n          \"height\": {\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 3000\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"min\": 0,\n            \"max\": 8388607\n          }\n        },\n        \"required\": [\n          \"width\",\n          \"height\",\n          \"size\"\n        ]\n      },\n      \"JsonError\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"originalMessage\",\n          \"jsonPointer\"\n        ],\n        \"properties\": {\n          \"originalMessage\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"jsonPointer\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ToDosItemBlank\": {\n        \"title\": \"Base part of data of item in todo's list\",\n        \"description\": \"Data about list item needed for creation of it\",\n        \"properties\": {\n          \"listUid\": {\n            \"description\": \"An unique id of list that item belongs to\",\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 2147483647\n          },\n          \"title\": {\n            \"description\": \"Short brief of task to be done\",\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"maxLength\": 64\n          },\n          \"description\": {\n            \"description\": \"Detailed description and context of the task. Allowed using of Common Markdown.\",\n            \"type\": \"string\",\n            \"minLength\": 10,\n            \"maxLength\": 512\n          },\n          \"isDone\": {\n            \"description\": \"Status of task: is done or not\",\n            \"type\": \"boolean\",\n            \"default\": \"false\"\n          },\n          \"attachments\": {\n            \"type\": \"array\",\n            \"description\": \"Any material attached to the task: may be screenshots, photos, pdf- or doc- documents on something else\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AttachmentMeta\"\n            },\n            \"maxItems\": 16\n          },\n          \"position\": {\n            \"description\": \"Position of a task in list. Allows to track changing of state of a concrete item, including changing od position.\",\n            \"type\": \"number\",\n            \"min\": 0,\n            \"max\": 4096\n          }\n        },\n        \"required\": [\n          \"isDone\",\n          \"listUid\",\n          \"title\"\n        ]\n      },\n      \"ToDosItem\": {\n        \"title\": \"Item in todo's list\",\n        \"description\": \"Describe data structure of an item in list of tasks\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ToDosItemBlank\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"uid\": {\n                \"description\": \"An unique id of task\",\n                \"type\": \"number\",\n                \"min\": 1,\n                \"max\": 2147483647,\n                \"readOnly\": true\n              },\n              \"dateCreated\": {\n                \"description\": \"Date/time (ISO) when task was created\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true\n              },\n              \"dateChanged\": {\n                \"description\": \"Date/time (ISO) when task was changed last time\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true\n              }\n            },\n            \"required\": [\n              \"dateChanged\",\n              \"dateCreated\",\n              \"position\",\n              \"uid\"\n            ]\n          }\n        ]\n      },\n      \"ToDosListBlank\": {\n        \"title\": \"Base part of data of list\",\n        \"description\": \"Data needed for list creation\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"description\": \"Title of a list\",\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"maxLength\": 64\n          },\n          \"description\": {\n            \"description\": \"Detailed description of a list. Allowed using of Common Markdown.\",\n            \"type\": \"string\",\n            \"minLength\": 10,\n            \"maxLength\": 512\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ToDosItem\"\n            }\n          },\n          \"isComplete\": {\n            \"description\": \"Whether all tasks in list are complete\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"isComplete\",\n          \"items\",\n          \"title\"\n        ]\n      },\n      \"ToDosListExtendedData\": {\n        \"title\": \"Extended data of list\",\n        \"description\": \"Extended data has to be obtained after first save\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"uid\": {\n            \"description\": \"An unique id of task\",\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 2147483647\n          },\n          \"dateCreated\": {\n            \"description\": \"Date/time (ISO) when task was created\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"dateChanged\": {\n            \"description\": \"Date/time (ISO) when task was changed last time\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"required\": [\n          \"dateChanged\",\n          \"dateCreated\",\n          \"uid\"\n        ]\n      },\n      \"ToDosList\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ToDosListBlank\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ToDosListExtendedData\"\n          }\n        ]\n      },\n      \"Url\": {\n        \"description\": \"Link to any external resource\",\n        \"type\": \"string\",\n        \"pattern\": \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/koshevy/codegena@2e7933721ff64c48deb97fbf985ac7aba87ac26f/-/blob/libs/oapi3ts/src/schemas/complex.json",
			"externalURLs": [
				{
					"url": "https://github.com/koshevy/codegena/blob/2e7933721ff64c48deb97fbf985ac7aba87ac26f/libs/oapi3ts/src/schemas/complex.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 314:24: json: cannot unmarshal array into Go struct field Schema.paths.patch.parameters.schema.type of type string"
}