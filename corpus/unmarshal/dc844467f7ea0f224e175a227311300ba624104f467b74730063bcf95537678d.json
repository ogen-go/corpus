{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lantanagroup/link"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "api/src/main/resources/swagger.yml",
			"byteSize": 14893,
			"content": "openapi: 3.0.1\ninfo:\n  version: '{{version}}'\n  title: Link API\nservers:\n  - url: {{server-base-url}}\n    description: This server\nsecurity:\n  - oauth: []\ntags:\n  - name: API Root\n    description: The root endpoint of the API\npaths:\n  /api/docs:\n    get:\n      tags:\n        - API Root\n      summary: The swagger spec document for this Link's API\n      operationId: getDocs\n      responses:\n        '200':\n          description: default response\n          content:\n            text/yaml:\n              schema:\n                type: string\n      security:\n        - {}\n  /api:\n    get:\n      tags:\n        - API Root\n      summary: Gets version information about this installation of Link's API\n      operationId: getVersionInfo\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ApiInfoModel'\n      security:\n        - {}\n  /api/poi/csv:\n    post:\n      tags:\n        - Patient Identification\n      summary: Submit a CSV of patients to be included in report generation\n      description: Extracts the patients id/identifier, date and report type, creates a List and persists the List resource in the internal FHIR server to be found/used in report generation\n      operationId: storeCSV\n      parameters:\n        - name: reportTypeId\n          in: query\n          description: The id of the report type (measure) that these patients should be considered for\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          text/csv:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: default response\n  /api/poi/fhir/List:\n    post:\n      tags:\n        - Patient Identification\n      summary: Submit a FHIR List of patients to be included in report generation\n      description: Uses the List date and identifier (which indicates the report-type) to find an already-existing List for the date/report-type. If none exists, this List is persisted as-is. Otherwise, updates the existing List to include the patient id/identifier if the patient isn't already part of the List.\n      operationId: getPatientIdentifierListJSON_1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: default response\n  /api/report/{reportId}/$send:\n    post:\n      tags:\n        - Report Management\n      summary: Send/submit the specified report to the consumer/recipient\n      operationId: send\n      parameters:\n        - name: reportId\n          in: path\n          description: The logical id of the report to submit\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n  /api/report/$generate:\n    post:\n      tags:\n        - Report Management\n      summary: Generate a report for given criteria\n      description: Generates a report based on the specified measure and reporting period criteria. Report generation can take time to respond, as it involves querying the configured EHR for data related to the patients identified for the criteria.\n      operationId: generateReport\n      parameters:\n        - name: reportDefIdentifier\n          in: query\n          description: Measure identifier in SYSTEM|CODE format\n          required: true\n          schema:\n            type: string\n        - name: periodStart\n          in: query\n          description: The start date for the reporting period\n          required: true\n          schema:\n            type: string\n          example: YYYY-MM-DDTHH:MM:SS\n        - name: periodEnd\n          in: query\n          description: The end date for the reporting period\n          required: true\n          schema:\n            type: string\n          example: YYYY-MM-DDTHH:MM:SS\n        - name: regenerate\n          in: query\n          description: True to re-generate a report that has already been generated for the specified criteria\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/GenerateResponse'\n  /api/report/{reportId}:\n    get:\n      tags:\n        - Report Management\n      summary: Retrieve the specified report\n      operationId: getReport\n      parameters:\n        - name: reportId\n          in: path\n          description: The logical id of the report to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ReportModel'\n  /api/report/{reportId}/$download:\n    get:\n      tags:\n        - Report Management\n      summary: Download the specified report in XML format\n      operationId: download\n      parameters:\n        - name: reportId\n          in: path\n          description: The logical id of the report to download\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n  /api/report:\n    get:\n      tags:\n        - Report Management\n      summary: Search for previously generated reports\n      operationId: searchReports\n      parameters:\n        - name: bundleId\n          in: query\n          description: The paged search identifier\n          required: false\n          schema:\n            type: string\n        - name: author\n          in: query\n          description: The practitioner id of the author\n          required: false\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: The page number to request. Should include bundleId (from previous response) if greater than 1\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - name: identifier\n          in: query\n          description: Filter results by measure's identifier in the format of SYSTEM|VALUE\n          required: false\n          schema:\n            type: string\n        - name: periodStartDate\n          in: query\n          description: Filter results to only include reports with a reporting period starting after this start date\n          required: false\n          schema:\n            type: string\n            example: YYYY-MM-DD\n        - name: periodEndDate\n          in: query\n          description: Filter results to only include reports with a reporting period starting before this end date\n          required: false\n          schema:\n            type: string\n            example: YYYY-MM-DD\n        - name: docStatus\n          in: query\n          description: Filter results to only include reports that have a specific status\n          required: false\n          schema:\n            type: string\n            enum:\n              - preliminary\n              - final\n        - name: submittedDate\n          in: query\n          description: Filter results to only include reports submitted on the specified date\n          required: false\n          schema:\n            type: string\n            example: YYYY-MM-DD\n      responses:\n        '200':\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportBundle'\n  /api/report/{reportId}/patient/{patientId}:\n    get:\n      tags:\n        - Report Management\n      summary: Get data for the specified patient in the specified report\n      operationId: getPatientData\n      parameters:\n        - name: reportId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: patientId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/PatientDataModel'\n  /api/report/{id}:\n    put:\n      tags:\n        - Report Management\n      summary: Update a report\n      operationId: saveReport\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReportSaveModel'\n      responses:\n        '200':\n          description: default response\n    delete:\n      tags:\n        - Report Management\n      summary: Delete a report\n      operationId: deleteReport\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n  /api/report/{reportId}/$exclude:\n    post:\n      tags:\n        - Report Management\n      summary: Exclude one or more patients from a report\n      operationId: excludePatients\n      parameters:\n        - name: reportId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ExcludedPatientModel'\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ReportModel'\n  /api/report/{id}/patient:\n    get:\n      tags:\n        - Report Management\n      summary: Get a list of the patients in a report\n      operationId: getReportPatients\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PatientReportModel'\n  /api/fhir/api/data/csv:\n    post:\n      tags:\n        - Report Data Submission\n      summary: Submit inventory data in the form of a CSV to be included in future report generation\n      operationId: retrieveCSVData\n      parameters:\n        - name: type\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - bed\n              - ventilator\n      requestBody:\n        content:\n          text/csv:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: default response\n  /api/measure:\n    get:\n      tags:\n        - Measure Management\n      summary: Gets a list of measures that have been loaded into the installation of Link\n      operationId: getMeasures\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StoredMeasure'\n  /api/user:\n    get:\n      tags:\n        - User Management\n      summary: Retrieves a list of users who have accessed Link\n      operationId: getUsers\n      responses:\n        '200':\n          description: default response\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserModel'\ncomponents:\n  schemas:\n    ApiInfoModel:\n      type: object\n      properties:\n        build:\n          type: string\n        version:\n          type: string\n    GenerateResponse:\n      type: object\n      properties:\n        reportId:\n          type: string\n    ReportModel:\n      type: object\n      properties:\n        identifier:\n          type: string\n        version:\n          type: string\n        status:\n          type: string\n        date:\n          type: string\n          format: date-time\n        measure:\n          type: string\n        measureReport:\n          type: string\n    Report:\n      type: object\n      properties:\n        id:\n          type: string\n        measureIdentifier:\n          type: string\n        status:\n          type: string\n        docStatus:\n          type: string\n        author:\n          type: string\n        periodStartDate:\n          type: string\n        periodEndDate:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        submittedDate:\n          type: string\n        note:\n          type: string\n    ReportBundle:\n      type: object\n      properties:\n        reportTypeId:\n          type: string\n        list:\n          type: array\n          items:\n            $ref: '#/components/schemas/Report'\n        totalSize:\n          type: integer\n          format: int32\n    PatientDataModel:\n      type: object\n      properties:\n        conditions:\n          type: array\n          items:\n            type: string\n        medicationRequests:\n          type: array\n          items:\n            type: string\n        procedures:\n          type: array\n          items:\n            type: string\n        encounters:\n          type: array\n          items:\n            type: string\n        observations:\n          type: array\n          items:\n            type: string\n        serviceRequests:\n          type: array\n          items:\n            type: string\n    PatientReportModel:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        sex:\n          type: string\n        dateOfBirth:\n          type: string\n        excluded:\n          type: boolean\n    ReportSaveModel:\n      type: object\n      properties:\n        measureReport:\n          type: string\n    StoredMeasure:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        system:\n          type: string\n        value:\n          type: string\n    UserModel:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n    ExcludedPatientModel:\n      type: object\n      properties:\n        patientId:\n          type: string\n        reason:\n          $ref: '#/components/schemas/CodeableConcept'\n    CodeableConcept:\n      type: object\n      properties:\n        text:\n          type: string\n        coding:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coding'\n    Coding:\n      properties:\n        code:\n          type: string\n        display:\n          type: string\n        system:\n          type: string\n",
			"canonicalURL": "/github.com/lantanagroup/link@8613f9d35c8ce6b85b99053b6a89a87e1cdc4e7d/-/blob/api/src/main/resources/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/lantanagroup/link/blob/8613f9d35c8ce6b85b99053b6a89a87e1cdc4e7d/api/src/main/resources/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 6: cannot unmarshal !!map into string"
}