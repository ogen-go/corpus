{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "6150_model_json_inline.yaml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_0/6150_model_json_inline.yaml",
			"byteSize": 2410,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Test inline response model\n  description: Test inline response model.\n  license:\n    name: MIT\npaths:\n  /foobar:\n    get:\n      operationId: testOperation\n      description: No type property in modelJson of InlineResponse200\n      responses:\n        200:\n          description: InlineResponse200 itself.\n          content:\n            application/json:\n              schema:\n                type: object\n                # It is legal to use the `format` keyword for object types. The JSON schema specification explicitly allows this.\n                # Even if in practice most OAS authors use `format` for primitive types, it should still be allowed to use format for object types.\n                format: unknown\n                properties:\n                  foo:\n                    type: string\n                  bar:\n                    type: string\n    post:\n      operationId: testOperationPost\n      description: No type property in modelJson of InlineResponse200\n      responses:\n        400:\n          description: InlineResponse200 itself.\n          content:\n            application/json:\n              schema:\n                title: FooBarObject\n                type: object\n                # It is legal to use the `format` keyword for object types. The JSON schema specification explicitly allows this.\n                # Even if in practice most OAS authors use `format` for primitive types, it should still be allowed to use format for object types.\n                format: date-time\n                properties:\n                  foo:\n                    type: string\ncomponents:\n  schemas:\n    Animal:\n      type: object\n      discriminator: className\n      required:\n        - className\n      properties:\n        className:\n          type: string\n        color:\n          type: string\n          default: 'red'\n    Dog:\n      allOf:\n        - $ref: '#/components/schemas/Animal'\n        - type: object\n          properties:\n            breed:\n              type: string\n    Cat:\n      allOf:\n        - $ref: '#/components/schemas/Animal'\n        - type: object\n          properties:\n            declawed:\n              type: boolean\n    HugeCat:\n      allOf:\n        - $ref: '#/components/schemas/Cat'\n        - type: object\n          properties:\n            kind:\n              type: string\n              enum: [lions, tigers, leopards, jaguars]",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@5aa0e0a45632d88ab378ca02401e2e94aa9135f0/-/blob/modules/openapi-generator/src/test/resources/3_0/6150_model_json_inline.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/5aa0e0a45632d88ab378ca02401e2e94aa9135f0/modules/openapi-generator/src/test/resources/3_0/6150_model_json_inline.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `className` into ogen.Discriminator"
}