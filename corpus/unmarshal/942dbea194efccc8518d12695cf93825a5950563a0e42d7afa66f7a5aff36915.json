{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ruslanys/ifunny"
		},
		"file": {
			"name": "contract.yaml",
			"size": 0,
			"path": "src/main/resources/static/contract.yaml",
			"byteSize": 3163,
			"content": "openapi: 3.0.2\ninfo:\n  title: iFunny API\n  version: 1.1.0\n  contact:\n    name: Ruslan Molchanov\n    email: me@ruslanys.me\nservers:\n  - url: /api\n    description: Local\n  - url: https://ifunny.ruslanys.me/api\n    description: Production\npaths:\n  '/feed/{ID}':\n    get:\n      tags:\n        - \"Feed\"\n      summary: \"Get Meme by its ID\"\n      operationId: \"getById\"\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful operation\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/Meme'\n        404:\n          description: \"Meme with the specified ID not found\"\n          content:\n            'text/plain'\n  '/feed':\n    get:\n      tags:\n        - \"Feed\"\n      operationId: \"getPage\"\n      parameters:\n        - name: language\n          in: query\n          description: Language code\n          required: true\n          schema:\n            type: string\n            enum:\n              - de\n              - fr\n              - es\n              - it\n              - pt\n              - ru\n        - name: offset\n          in: query\n          description: Pagination offset\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n            default: 0\n        - name: limit\n          in: query\n          description: Pagination limit\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 200\n            default: 10\n        - name: sortBy\n          in: query\n          description: Sorting argument\n          schema:\n            type: string\n            enum:\n              - publishDateTime\n              - likes\n            default: publishDateTime\n        - name: sortDirection\n          description: Sorting direction\n          in: query\n          schema:\n            type: string\n            enum:\n              - ASC\n              - DESC\n            default: DESC\n      responses:\n        200:\n          description: Successful operation\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  totalCount:\n                    type: integer\n                    format: int64\n                  list:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Meme'\n        400:\n          description: Arguments validation constraint\n          content:\n            'text/plain'\ncomponents:\n  schemas:\n    Meme:\n      type: object\n      properties:\n        id:\n          type: string\n        language:\n          type: string\n        channelName:\n          type: string\n        title:\n          type: string\n        url:\n          type: string\n        contentType:\n          type: string\n        publishDateTime:\n          type: string\n          format: date-time\n        author:\n          type: string\n        likes:\n          type: integer\n          format: int32\n        comments:\n          type: integer\n          format: int32\n",
			"canonicalURL": "/github.com/ruslanys/ifunny@baf3948d7092a3cc2fc39b411dfaec2ab9456be1/-/blob/src/main/resources/static/contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ruslanys/ifunny/blob/baf3948d7092a3cc2fc39b411dfaec2ab9456be1/src/main/resources/static/contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `text/plain` into map[string]ogen.Media; yaml: line 1: cannot unmarshal !!str `text/plain` into map[string]ogen.Media"
}