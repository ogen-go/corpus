{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SignalK/signalk-server"
		},
		"file": {
			"name": "openApi.json",
			"size": 0,
			"path": "src/api/security/openApi.json",
			"byteSize": 9249,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Signal K Security API\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"externalDocs\": {\n    \"url\": \"http://signalk.org/specification/\",\n    \"description\": \"Signal K specification.\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"/signalk/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"authentication\",\n      \"description\": \"User authentication\"\n    },\n    {\n      \"name\": \"access\",\n      \"description\": \"Device access\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"IsoTime\": {\n        \"type\": \"string\",\n        \"pattern\": \"^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T(\\\\d{2}):(\\\\d{2}):(\\\\d{2}(?:\\\\.\\\\d*)?)((-(\\\\d{2}):(\\\\d{2})|Z)?)$\",\n        \"example\": \"2022-04-22T05:02:56.484Z\"\n      },\n      \"RequestState\": {\n        \"type\": \"string\",\n        \"enum\": [\"PENDING\", \"FAILED\", \"COMPLETED\"]\n      }\n    },\n    \"responses\": {\n      \"200Ok\": {\n        \"description\": \"OK\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"state\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"COMPLETED\"]\n                },\n                \"statusCode\": {\n                  \"type\": \"number\",\n                  \"enum\": [200]\n                }\n              },\n              \"required\": [\"state\", \"statusCode\"]\n            }\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"description\": \"Failed operation\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"description\": \"Request error response\",\n              \"properties\": {\n                \"state\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"FAILED\"]\n                },\n                \"statusCode\": {\n                  \"type\": \"number\",\n                  \"enum\": [404]\n                },\n                \"message\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\"state\", \"statusCode\", \"message\"]\n            }\n          }\n        }\n      },\n      \"AccessRequestResponse\": {\n        \"description\": \"Request status\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"description\": \"Request response\",\n              \"type\": \"object\",\n              \"required\": [\"state\"],\n              \"properties\": {\n                \"state\": {\n                  \"$ref\": \"#/components/schemas/RequestState\",\n                  \"default\": \"PENDING\",\n                  \"example\": \"PENDING\",\n                  \"description\": \"Status of request.\"\n                },\n                \"href\": {\n                  \"type\": \"string\",\n                  \"example\": \"/signalk/v1/requests/358b5f32-76bf-4b33-8b23-10a330827185\",\n                  \"description\": \"Path where the status of the request can be checked.\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"RequestStatusResponse\": {\n        \"description\": \"Request status\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"description\": \"Request response\",\n              \"type\": \"object\",\n              \"required\": [\"state\"],\n              \"properties\": {\n                \"state\": {\n                  \"$ref\": \"#/components/schemas/RequestState\",\n                  \"example\": \"COMPLETED\",\n                  \"default\": \"COMPLETED\",\n                  \"description\": \"Status of request.\"\n                },\n                \"statusCode\": {\n                  \"type\": \"number\",\n                  \"example\": 200,\n                  \"description\": \"Response status code.\"\n                },\n                \"ip\": {\n                  \"type\": \"string\",\n                  \"example\": \"192.168.1.77\",\n                  \"description\": \"IP address of the original access request.\"\n                },\n                \"accessRequest\": {\n                  \"type\": \"object\",\n                  \"required\": [\"permission\", \"token\"],\n                  \"description\": \"Access request result.\",\n                  \"properties\": {\n                    \"permission\": {\n                      \"enum\": [\"DENIED\", \"APPROVED\"],\n                      \"example\": \"APPROVED\"\n                    },\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"Authentication token to be supplied with future requests.\"\n                    },\n                    \"expirationTime\": {\n                      \"$ref\": \"#/components/schemas/IsoTime\",\n                      \"description\": \"Token expiration time.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      },\n      \"cookieAuth\": {\n        \"type\": \"apiKey\",\n        \"in\": \"cookie\",\n        \"name\": \"JAUTHENTICATION\"\n      }\n    }\n  },\n\n  \"paths\": {\n    \"/access/requests\": {\n      \"post\": {\n        \"tags\": [\"access\"],\n        \"summary\": \"Create a device access request.\",\n        \"description\": \"Endpoint to create (device) access requests. The response contains the href to poll for the status of the request.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"clientId\", \"description\"],\n                \"properties\": {\n                  \"clientId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Client identifier.\",\n                    \"example\": \"1234-45653-343453\"\n                  },\n                  \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"Description of device.\",\n                    \"example\": \"humidity sensor\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/AccessRequestResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ErrorResponse\"\n          }\n        }\n      }\n    },\n    \"/requests/{id}\": {\n      \"parameters\": [\n        {\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"request id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"get\": {\n        \"tags\": [\"access\"],\n        \"summary\": \"Check device access status.\",\n        \"description\": \"Returns the status of the supplied request id.\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/RequestStatusResponse\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ErrorResponse\"\n          }\n        }\n      }\n    },\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Authenticate user.\",\n        \"description\": \"Authenticate to server using username and password.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\"username\", \"password\"],\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"User to authenticate\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"description\": \"Password for supplied username.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Authentication response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"Login success result\",\n                  \"type\": \"object\",\n                  \"required\": [\"token\"],\n                  \"properties\": {\n                    \"token\": {\n                      \"type\": \"string\",\n                      \"description\": \"Authentication token to be supplied with future requests.\"\n                    },\n                    \"timeToLive\": {\n                      \"type\": \"number\",\n                      \"description\": \"Token validity time (seconds).\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ErrorResponse\"\n          }\n        }\n      }\n    },\n    \"/auth/logout\": {\n      \"put\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Log out user.\",\n        \"description\": \"Log out the user with the token supplied in the request header.\",\n        \"security\": [\"cookieAuth\", \"bearerAuth\"],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/200Ok\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ErrorResponse\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/SignalK/signalk-server@855aa9b0321d65e46e50fa125ff3d460799c61dc/-/blob/src/api/security/openApi.json",
			"externalURLs": [
				{
					"url": "https://github.com/SignalK/signalk-server/blob/855aa9b0321d65e46e50fa125ff3d460799c61dc/src/api/security/openApi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 303: cannot unmarshal !!str `cookieAuth` into map[string][]string; yaml: line 303: cannot unmarshal !!str `bearerAuth` into map[string][]string"
}