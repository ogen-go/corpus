{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/funlessdev/funless"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 7855,
			"content": "# Copyright 2022 Giuseppe De Palma, Matteo Trentin\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nopenapi: 3.0.2\ninfo:\n  title: FunLess Platfom API\n  description: The API for the FunLess Platform\n  version: \"0.5\"\n  license:\n    name: Apache 2.0\nservers:\n  - url: http://localhost:4000\n    description: The dev server for the FunLess API\ntags:\n  - name: modules\n  - name: functions\n\ncomponents:\n  parameters:\n    $ref: \"./parameters/_index.yaml\"\n  responses:\n    $ref: \"./responses/_index.yaml\"\n  schemas:\n    $ref: \"./schemas/_index.yaml\"\n\npaths:\n  /v1/fn:\n    # GET /fn\n    get:\n      summary: List modules\n      operationId: list_modules\n      description: List all modules\n      tags:\n        - modules\n      responses:\n        \"200\":\n          description: An array of modules\n          headers:\n            X-Total-Count:\n              description: Total number of modules\n              schema:\n                type: integer\n          content:\n            application/json:\n              schema:\n                $ref: \"schemas/module_names_result.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # POST /fn\n    post:\n      summary: Create\n      operationId: create_module\n      description: Create a new module\n      tags:\n        - modules\n      requestBody:\n        description: Module to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/module_name.yaml\"\n      responses:\n        \"201\":\n          $ref: \"responses/null_response.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n  /v1/fn/{module_name}:\n    # GET /fn/{mod}\n    get:\n      summary: Show module info\n      operationId: show_module_by_name\n      description: Get module data (name, array of functions, number of functions)\n      tags:\n        - modules\n      parameters:\n        - $ref: \"parameters/path/module_name.yaml\"\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"schemas/single_module_result.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # POST /fn/{mod}\n    post:\n      summary: Create new function\n      operationId: create_function\n      description: Create a new function in the specified module\n      tags:\n        - functions\n      parameters:\n        - $ref: \"parameters/path/module_name.yaml\"\n      requestBody:\n        description: Object containing the function's name and code\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"schemas/function_create_update.yaml\"\n            encoding:\n              code:\n                contentType: application/octet-stream\n      responses:\n        \"201\":\n          $ref: \"responses/null_response.yaml\"\n        \"207\":\n          $ref: \"responses/mixed_response_events.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # PUT /fn/{mod}\n    put:\n      summary: Update module name\n      operationId: update_module\n      description: Update module name\n      tags:\n        - modules\n      parameters:\n        - $ref: \"parameters/path/module_name.yaml\"\n      requestBody:\n        description: New module name to use\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/module_name.yaml\"\n      responses:\n        \"200\":\n          $ref: \"responses/null_response.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # DELETE /fn/{mod}\n    delete:\n      summary: Delete module\n      operationId: delete_module\n      description: Delete module\n      tags:\n        - modules\n      parameters:\n        - $ref: \"parameters/path/module_name.yaml\"\n      responses:\n        \"204\":\n          $ref: \"responses/null_response.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n  /v1/fn/{module_name}/{function_name}:\n    # GET /fn/{mod}/{fun}\n    get:\n      summary: Show function info\n      operationId: show_function_by_name\n      description: Get function data (name, module name, size of code)\n      tags:\n        - functions\n      parameters:\n        - $ref: \"parameters/path/module_name.yaml\"\n        - $ref: \"parameters/path/function_name.yaml\"\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"schemas/single_function_result.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # PUT /fn/{mod}/{fun}\n    put:\n      summary: Update function\n      operationId: update_function\n      description: Update function\n      tags:\n        - functions\n      parameters:\n        - name: module_name\n          in: path\n          required: true\n          description: The name of the module\n          schema:\n            type: string\n        - name: function_name\n          in: path\n          required: true\n          description: The name of the function\n          schema:\n            type: string\n      requestBody:\n        description: New function code to use\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"schemas/function_create_update.yaml\"\n            encoding:\n              code:\n                contentType: application/octet-stream\n      responses:\n        \"200\":\n          $ref: \"responses/null_response.yaml\"\n        \"207\":\n          $ref: \"responses/mixed_response_events.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # DELETE /fn/{mod}/{fun}\n    delete:\n      summary: Delete function\n      operationId: delete_function\n      description: Delete single function in module\n      tags:\n        - functions\n      parameters:\n        - name: module_name\n          in: path\n          required: true\n          description: The name of the module\n          schema:\n            type: string\n        - name: function_name\n          in: path\n          required: true\n          description: The name of the function\n          schema:\n            type: string\n      responses:\n        \"200\":\n          $ref: \"responses/null_response.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n\n    # POST /fn/{mod}/{fun}/invoke\n    post:\n      summary: Invoke function\n      operationId: invoke_function\n      description: Invoke function\n      tags:\n        - functions\n      parameters:\n        - name: module_name\n          in: path\n          required: true\n          description: The name of the module\n          schema:\n            type: string\n        - name: function_name\n          in: path\n          required: true\n          description: The name of the function\n          schema:\n            type: string\n      requestBody:\n        description: Function input\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/invoke_input.yaml\"\n      responses:\n        \"200\":\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"schemas/invoke_result.yaml\"\n        default:\n          $ref: \"responses/unexpected_error.yaml\"\n",
			"canonicalURL": "/github.com/funlessdev/funless@8a023d872a182fa5f685274e1bbae77d213bee4e/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/funlessdev/funless/blob/8a023d872a182fa5f685274e1bbae77d213bee4e/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 31: cannot unmarshal !!str `./param...` into ogen.Parameter; yaml: line 33: cannot unmarshal !!str `./respo...` into ogen.Response; yaml: line 35: cannot unmarshal !!str `./schem...` into ogen.Schema"
}