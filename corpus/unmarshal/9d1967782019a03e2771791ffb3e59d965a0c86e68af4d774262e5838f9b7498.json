{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vrchatapi/specification"
		},
		"file": {
			"name": "groups.yaml",
			"size": 0,
			"path": "openapi/components/paths/groups.yaml",
			"byteSize": 24876,
			"content": "openapi: 3.0.3\r\ninfo:\r\n  title: groups\r\n  version: '1.0'\r\n  description: Group Docs Here\r\npaths:\r\n  /groups:\r\n    post:\r\n      summary: Create Group\r\n      description: Creates a Group and returns a Group object. **Requires VRC+ Subscription.**\r\n      operationId: createGroup\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/CreateGroupRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group by ID\r\n      description: Returns a single Group by ID.\r\n      tags:\r\n        - groups\r\n      operationId: getGroup\r\n      parameters:\r\n        - in: query\r\n          name: includeRoles\r\n          schema:\r\n            type: boolean\r\n          required: false\r\n          description: Include roles for the Group object. Defaults to false.\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    put:\r\n      summary: Update Group\r\n      description: Updates a Group and returns it.\r\n      operationId: updateGroup\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/UpdateGroupRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Delete Group\r\n      operationId: deleteGroup\r\n      tags:\r\n        - groups\r\n      description: Deletes a Group.\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/DeleteGroupSuccess.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/announcement':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Announcement\r\n      description: |-\r\n        Returns the announcement for a Group.\r\n        If no announcement has been made, then it returns **empty object**. \r\n        If an announcement exists, then it will always return all fields except `imageId` and `imageUrl` which may be null.\r\n      operationId: getGroupAnnouncements\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupAnnouncementResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    post:\r\n      summary: Create Group Announcement\r\n      description: Creates an Announcement for a Group.\r\n      operationId: createGroupAnnouncement\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/CreateGroupAnnouncementRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupAnnouncementResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Delete Group Announcement\r\n      description: Deletes the announcement for a Group.\r\n      operationId: deleteGroupAnnouncement\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/DeleteGroupAnnouncementSuccess.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/auditLogs':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Audit Logs\r\n      description: Returns a list of audit logs for a Group.\r\n      operationId: getGroupAuditLogs\r\n      tags:\r\n        - groups\r\n      parameters:\r\n        - $ref: ../parameters.yaml#/number\r\n        - $ref: ../parameters.yaml#/offset\r\n        - $ref: ../parameters.yaml#/startDate\r\n        - $ref: ../parameters.yaml#/endDate\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupAuditLogListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/bans':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Bans\r\n      description: Returns a list of banned users for a Group.\r\n      operationId: getGroupBans\r\n      tags:\r\n        - groups\r\n      parameters:\r\n        - $ref: ../parameters.yaml#/number\r\n        - $ref: ../parameters.yaml#/offset\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    post:\r\n      summary: Ban Group Member\r\n      description: Bans a user from a Group.\r\n      operationId: banGroupMember\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/BanGroupMemberRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/bans/{userId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/userId\r\n    delete:\r\n      summary: Unban Group Member\r\n      description: Unbans a user from a Group.\r\n      operationId: unbanGroupMember\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/galleries':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    post:\r\n      summary: Create Group Gallery\r\n      description: Creates a gallery for a Group.\r\n      operationId: createGroupGallery\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/CreateGroupGalleryRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupGalleryResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/galleries/{groupGalleryId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/groupGalleryId\r\n    get:\r\n      summary: Get Group Gallery Images\r\n      description: Returns a list of images for a Group gallery.\r\n      operationId: getGroupGalleryImages\r\n      tags:\r\n        - groups\r\n      parameters:\r\n        - $ref: ../parameters.yaml#/number\r\n        - $ref: ../parameters.yaml#/offset\r\n        - in: query\r\n          name: approved\r\n          required: false\r\n          schema:\r\n            type: boolean\r\n          description: If specified, only returns images that have been approved or not approved.\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupGalleryImageListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    put:\r\n      summary: Update Group Gallery\r\n      description: Updates a gallery for a Group.\r\n      operationId: updateGroupGallery\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/UpdateGroupGalleryRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupGalleryResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Delete Group Gallery\r\n      description: Deletes a gallery for a Group.\r\n      operationId: deleteGroupGallery\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/DeleteGroupGallerySuccess.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/galleries/{groupGalleryId}/images':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/groupGalleryId\r\n    post:\r\n      summary: Add Group Gallery Image\r\n      description: Adds an image to a Group gallery.\r\n      operationId: addGroupGalleryImage\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/AddGroupGalleryImageRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupGalleryImageResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/galleries/{groupGalleryId}/images/{groupGalleryImageId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/groupGalleryId\r\n      - $ref: ../parameters.yaml#/groupGalleryImageId\r\n    # put:\r\n    #   summary: Approve Group Gallery Image\r\n    #   description: Approves an image for a Group gallery.\r\n    #   operationId: approveGroupGalleryImage\r\n    #   tags:\r\n    #     - groups\r\n    #   requestBody:\r\n    #     content:\r\n    #       application/json:\r\n    #         schema:\r\n    #           $ref: ../requests/UpdateGroupGalleryImageRequest.yaml\r\n    #   responses:\r\n    #     '200':\r\n    #       $ref: ../responses/groups/GroupGalleryImageResponse.yaml\r\n    #     '401':\r\n    #       $ref: ../responses/MissingCredentialsError.yaml\r\n    #     '404':\r\n    #       $ref: ../responses/groups/GroupNotFoundError.yaml\r\n    #   security:\r\n    #     - apiKeyCookie: []\r\n    #       authCookie: []\r\n    delete:\r\n      summary: Delete Group Gallery Image\r\n      description: Deletes an image from a Group gallery.\r\n      operationId: deleteGroupGalleryImage\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/DeleteGroupGalleryImageSuccess.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '403':\r\n          $ref: ../responses/groups/GroupGalleryImageDeleteForbiddenError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/invites':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Invites Sent\r\n      description: Returns a list of members that have been invited to the Group.\r\n      operationId: getGroupInvites\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '403':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    post:\r\n      summary: Invite User to Group\r\n      description: Sends an invite to a user to join the group.\r\n      operationId: createGroupInvite\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/CreateGroupInviteRequest.yaml\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '400':\r\n          description: User \u003cdisplayName\u003e is already invited\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/invites/{userId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/userId\r\n    delete:\r\n      summary: Delete User Invite\r\n      description: Deletes an Group invite sent to a User\r\n      operationId: deleteGroupInvite\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/join':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    post:\r\n      summary: Join Group\r\n      description: Join a Group by ID and returns the joined Group.\r\n      operationId: joinGroup\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupResponse.yaml\r\n        '400':\r\n          $ref: ../responses/groups/GroupAlreadyMemberError.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/leave':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    post:\r\n      summary: Leave Group\r\n      description: Leave a group by ID.\r\n      operationId: leaveGroup\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '403':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/members':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: List Group Members\r\n      description: |-\r\n        Returns a List of all **other** Group Members. This endpoint will never return the user calling the endpoint.\r\n        Information about the user calling the endpoint must be found in the `myMember` field of the Group object.\r\n      operationId: getGroupMembers\r\n      tags:\r\n        - groups\r\n      parameters:\r\n        - $ref: ../parameters.yaml#/number\r\n        - $ref: ../parameters.yaml#/offset\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberListResponse.yaml\r\n        '400':\r\n          $ref: ../responses/users/UsersInvalidSearchError.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/members/{userId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/userId\r\n    get:\r\n      summary: Get Group Member\r\n      description: Returns a LimitedGroup Member.\r\n      operationId: getGroupMember\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupLimitedMemberResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    put:\r\n      summary: Update Group Member\r\n      description: Updates a Group Member\r\n      operationId: updateGroupMember\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/UpdateGroupMemberRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupLimitedMemberResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Kick Group Member\r\n      description: Kicks a Group Member from the Group. The current user must have the \"Remove Group Members\" permission.\r\n      operationId: kickGroupMember\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '403':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/members/{userId}/roles/{groupRoleId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/userId\r\n      - $ref: ../parameters.yaml#/groupRoleId\r\n    put:\r\n      summary: Add Role to GroupMember\r\n      description: Adds a Role to a Group Member\r\n      operationId: addGroupMemberRole\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleIDListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Remove Role from GroupMember\r\n      description: Removes a Role from a Group Member\r\n      operationId: removeGroupMemberRole\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleIDListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/permissions':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: List Group Permissions\r\n      description: Returns a List of all possible/available permissions for a Group.\r\n      operationId: getGroupPermissions\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupPermissionListResponse.yaml\r\n        '400':\r\n          $ref: ../responses/users/UsersInvalidSearchError.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/requests':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Join Requests\r\n      description: Returns a list of members that have requested to join the Group.\r\n      operationId: getGroupRequests\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupMemberListResponse.yaml\r\n        '403':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Cancel Group Join Request\r\n      description: Cancels a request sent to join the group.\r\n      operationId: cancelGroupRequest\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '400':\r\n          description: You can't cancel a join request if you didn't request to join․\r\n        '403':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/requests/{userId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/userId\r\n    put:\r\n      summary: Respond Group Join request\r\n      description: Responds to a Group Join Request with Accept/Deny\r\n      operationId: respondGroupJoinRequest\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          description: OK\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/RespondGroupJoinRequest.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/roles':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n    get:\r\n      summary: Get Group Roles\r\n      description: Returns a Group Role by ID.\r\n      operationId: getGroupRoles\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    post:\r\n      summary: Create GroupRole\r\n      description: Create a Group role.\r\n      operationId: createGroupRole\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/CreateGroupRoleRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotFoundError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n  '/groups/{groupId}/roles/{groupRoleId}':\r\n    parameters:\r\n      - $ref: ../parameters.yaml#/groupId\r\n      - $ref: ../parameters.yaml#/groupRoleId\r\n    put:\r\n      summary: Update Group Role\r\n      description: Updates a group role by ID.\r\n      operationId: updateGroupRole\r\n      tags:\r\n        - groups\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: ../requests/UpdateGroupRoleRequest.yaml\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\n    delete:\r\n      summary: Delete Group Role\r\n      description: Deletes a Group Role by ID and returns the remaining roles.\r\n      operationId: deleteGroupRole\r\n      tags:\r\n        - groups\r\n      responses:\r\n        '200':\r\n          $ref: ../responses/groups/GroupRoleListResponse.yaml\r\n        '401':\r\n          $ref: ../responses/MissingCredentialsError.yaml\r\n        '404':\r\n          $ref: ../responses/groups/GroupNotMemberError.yaml\r\n      security:\r\n        - apiKeyCookie: []\r\n          authCookie: []\r\ntags:\r\n  $ref: ../tags.yaml\r\ncomponents:\r\n  securitySchemes:\r\n    $ref: ../securitySchemes.yaml\r\n  responses: {}\r\n",
			"canonicalURL": "/github.com/vrchatapi/specification@970648a691bd00e1b5ea0795e97c6ac01f633924/-/blob/openapi/components/paths/groups.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/vrchatapi/specification/blob/970648a691bd00e1b5ea0795e97c6ac01f633924/openapi/components/paths/groups.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 782: cannot unmarshal !!map into []ogen.Tag; yaml: line 785: cannot unmarshal !!str `../secu...` into ogen.SecurityScheme"
}