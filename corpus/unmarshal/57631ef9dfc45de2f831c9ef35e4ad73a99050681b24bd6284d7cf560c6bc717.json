{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RCDD-202110-TUR-BEW/backend-capstone-turkey-paying-it-forward"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/swagger.json",
			"byteSize": 50383,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Paying It Forward\",\n    \"description\": \"This is the documentation for Paying It Forward API. To access the paths that have a lock symbol next to them, you need to \u003cb\u003esign in\u003c/b\u003e first.\",\n    \"contact\": {\n      \"email\": \"payingItForward2022@hotmail.com\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://payingitforward.re-coded.com/api\",\n      \"description\": \"Production Server\"\n    },\n    {\n      \"url\": \"http://localhost:3000/api\",\n      \"description\": \"Internal Server\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Auth\",\n      \"description\": \"Authentication endpoints\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"Users endpoints\"\n    },\n    {\n      \"name\": \"Items\",\n      \"description\": \"Items endpoints\"\n    },\n    {\n      \"name\": \"Requests\",\n      \"description\": \"Requests endpoints\"\n    },\n    {\n      \"name\": \"Rating\",\n      \"description\": \"Rating endpoints\"\n    }\n  ],\n  \"consumes\": [\"application/json\"],\n  \"produces\": [\"application/json\"],\n  \"paths\": {\n    \"/auth/signup\": {\n      \"post\": {\n        \"summary\": \"Registers new users\",\n        \"tags\": [\"Auth\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"User information\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/definitions/PostUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Username already used\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/signin\": {\n      \"post\": {\n        \"summary\": \"Signs user in\",\n        \"tags\": [\"Auth\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Signing in can be done by username or email\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"require\": true,\n                    \"example\": \"anne.adams\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"superHardPassword123\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Successfully signed in\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Wrong username or email\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/signout\": {\n      \"get\": {\n        \"summary\": \"Signs user out and clears auth cookie\",\n        \"tags\": [\"Auth\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"success\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"summary\": \"Sends all users in the response\",\n        \"tags\": [\"Users\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Requested user ID is not valid!\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}\": {\n      \"get\": {\n        \"summary\": \"Sends a user information with the specified ID\",\n        \"tags\": [\"Users\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"User ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"There are no users at the moment!\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Updates the user information with the specified ID\",\n        \"tags\": [\"Users\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"User ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"One or more fields that needs to be updated\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"firstName\": {\n                    \"type\": \"string\",\n                    \"example\": \"Jennifer\"\n                  },\n                  \"address\": {\n                    \"type\": \"string\",\n                    \"example\": \"425 Main Street, California, 10457\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"There are no users at the moment!\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Deletes the user with the specified ID\",\n        \"tags\": [\"Users\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"User ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"62129b16ca8ad73083e24b98\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Operation\"\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized to delete requested user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Unauthorized to modify the requested user\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userid}/donatedItems\": {\n      \"get\": {\n        \"summary\": \"Gets user's donated items\",\n        \"tags\": [\"Users\"],\n        \"parameters\": [\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"User ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/Item\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing user ID or user did not donate anything yet\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"This user does not have any donatedItems\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/global/donators\": {\n      \"get\": {\n        \"summary\": \"Sends all donator users\",\n        \"tags\": [\"Users\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/definitions/DonatorUser\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"No Donators\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"No donators found\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items\": {\n      \"post\": {\n        \"summary\": \"Posts new item\",\n        \"tags\": [\"Items\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Item data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/definitions/PostItem\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Item Created Successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Item\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing Fields\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Item validation failed\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items/available\": {\n      \"get\": {\n        \"summary\": \"Sends all available items\",\n        \"tags\": [\"Items\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/Item\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"No Available Items\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"There are no available items at the moment!\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items/filter\": {\n      \"get\": {\n        \"summary\": \"Filter items according to a specific type\",\n        \"tags\": [\"Items\"],\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"Item type\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Books\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/Item\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"No Available Items or Wrong Item Type\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"There are no available items of type Books!\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items/{id}\": {\n      \"get\": {\n        \"summary\": \"Sends item with the specified ID\",\n        \"tags\": [\"Items\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Item ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6213921454b30d140000b395\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Item\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid ID or unavailable item ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The item with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Updates the item data with the specified ID\",\n        \"tags\": [\"Items\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Item ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6213921454b30d140000b395\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"One or more fields that needs to be updated\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Sofa\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"example\": \"Stationery\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Item\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Invalid ID or unavailable item ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The item with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"unauthorized to modify requested item: only item owner can modify\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Deletes the item with the specified ID\",\n        \"tags\": [\"Items\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Item ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6213921454b30d140000b395\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Operation\"\n          },\n          \"422\": {\n            \"description\": \"Invalid ID or unavailable item ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The item with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"unauthorized to modify requested item: only item owner can modify\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items/donate\": {\n      \"put\": {\n        \"summary\": \"Donate Item\",\n        \"tags\": [\"Items\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Borrower and Item IDs\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"donateItemId\": {\n                    \"type\": \"string\",\n                    \"example\": \"6212527f45b9ccd48e33860d\"\n                  },\n                  \"borrowerId\": {\n                    \"type\": \"string\",\n                    \"example\": \"6213921454b30d140000b395\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Item\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Not available item, wrong borrower ID, wrong item ID ...\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The item with the specified ID is not available for donation.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/items/borrow\": {\n      \"put\": {\n        \"summary\": \"Borrow donated items\",\n        \"tags\": [\"Items\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Item ID\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"requestedItemId\": {\n                    \"type\": \"string\",\n                    \"example\": \"6212527f45b9ccd48e33860d\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Item Borrowed Successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Item borrowed successfully\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing fields or item not available\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The item with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/global/all-items\": {\n      \"get\": {\n        \"summary\": \"Sends all items\",\n        \"tags\": [\"Items\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/Item\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"No Items\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"No items found\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/requests\": {\n      \"post\": {\n        \"summary\": \"Posts a request\",\n        \"tags\": [\"Requests\"],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Request data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"$ref\": \"#/definitions/PostRequest\"\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Request\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing fields\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"Request name is required\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Sends all requests\",\n        \"tags\": [\"Requests\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"$ref\": \"#/components/schemas/Request\"\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"No Requests\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"No requests found\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/requests/{id}\": {\n      \"get\": {\n        \"summary\": \"Gets a request by its ID\",\n        \"tags\": [\"Requests\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Request ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Request\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Wrong Request ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The request with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Updates the request information with the specified ID\",\n        \"tags\": [\"Requests\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Request ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"One or more fields that needs to be updated\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\",\n                    \"example\": \"Sofa\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"example\": \"Stationery\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Request\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Wrong Request ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The request with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"unauthorized to modify the requested request\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Deletes the request with the specified ID\",\n        \"tags\": [\"Requests\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Request ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful Operation, No Content\"\n          },\n          \"422\": {\n            \"description\": \"Wrong Request ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"The request with the specified ID was not found.\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"unauthorized to modify the requested request\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{userid}/rating\": {\n      \"post\": {\n        \"summary\": \"Rates a user\",\n        \"tags\": [\"Rating\"],\n        \"parameters\": [\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Rated user ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Rating data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"rating\": {\n                    \"type\": \"number\",\n                    \"example\": 3\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Rating\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing fields or user already rated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You had already rated this user\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update rating\",\n        \"tags\": [\"Rating\"],\n        \"parameters\": [\n          {\n            \"name\": \"userid\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Rated user ID\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"6212527f45b9ccd48e33860d\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"Rating data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"rating\": {\n                    \"type\": \"number\",\n                    \"example\": 3\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"authCookie\": []\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful Operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"$ref\": \"#/components/schemas/Rating\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Missing fields or user is not rated previously\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You do not have a rating to update\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated or Unauthorized Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\",\n                      \"example\": \"You are not authenticated\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"PostUser\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"username\",\n        \"email\",\n        \"firstName\",\n        \"address\",\n        \"acceptTerms\",\n        \"password\",\n        \"passwordConfirm\",\n        \"lastName\"\n      ],\n      \"properties\": {\n        \"username\": {\n          \"type\": \"string\",\n          \"example\": \"anne.adams\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"example\": \"annadams@gmail.com\"\n        },\n        \"firstName\": {\n          \"type\": \"string\",\n          \"example\": \"Anne\"\n        },\n        \"lastName\": {\n          \"type\": \"string\",\n          \"example\": \"Adams\"\n        },\n        \"address\": {\n          \"type\": \"string\",\n          \"example\": \"123 Main Street, New York, NY 10030\"\n        },\n        \"password\": {\n          \"type\": \"string\",\n          \"example\": \"superHardPassword123\"\n        },\n        \"passwordConfirm\": {\n          \"type\": \"string\",\n          \"example\": \"superHardPassword123\"\n        },\n        \"acceptTerms\": {\n          \"type\": \"boolean\",\n          \"example\": true\n        }\n      }\n    },\n    \"DonatorUser\": {\n      \"type\": \"object\",\n      \"required\": [\"username\", \"email\", \"firstName\", \"address\", \"lastName\"],\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\",\n          \"description\": \"Automatically generated ID, unique for each user\",\n          \"example\": \"6212527f45b9ccd48e33860d\"\n        },\n        \"username\": {\n          \"type\": \"string\",\n          \"description\": \"Usernames are unique for each user\",\n          \"example\": \"anne.adams\"\n        },\n        \"email\": {\n          \"type\": \"string\",\n          \"description\": \"Emails are unique for each user\",\n          \"example\": \"annadams@gmail.com\"\n        },\n        \"firstName\": {\n          \"type\": \"string\",\n          \"example\": \"Anne\"\n        },\n        \"lastName\": {\n          \"type\": \"string\",\n          \"example\": \"Adams\"\n        },\n        \"address\": {\n          \"type\": \"string\",\n          \"example\": \"123 Main Street, New York, NY 10030\"\n        },\n        \"isDonator\": {\n          \"type\": \"boolean\",\n          \"default\": true\n        }\n      }\n    },\n    \"PostItem\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"description\", \"type\", \"photo\"],\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"Clean Code\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"example\": \"Clean Code book by Robert Cecil Marten\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"example\": \"Books\",\n          \"enum\": [\n            \"Books\",\n            \"Stationery\",\n            \"School Books\",\n            \"Novels\",\n            \"Test Books\",\n            \"Furniture\"\n          ]\n        },\n        \"photo\": {\n          \"type\": \"string\",\n          \"example\": \"https://images-na.ssl-images-amazon.com/images/I/41xShlnTZTL._SX376_BO1,204,203,200_.jpg\",\n          \"description\": \"A valid image URL\"\n        },\n        \"count\": {\n          \"type\": \"number\",\n          \"example\": 3,\n          \"default\": 1,\n          \"description\": \"Optional, if not provided it will default to 1\"\n        }\n      }\n    },\n    \"PostRequest\": {\n      \"type\": \"object\",\n      \"required\": [\"name\", \"description\", \"type\"],\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\",\n          \"description\": \"Automatically generated ID, unique for each item\",\n          \"example\": \"62129b16ca8ad73083e24b98\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"example\": \"Clean Code\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"example\": \"Clean Code book by Robert Cecil Marten\"\n        },\n        \"type\": {\n          \"type\": \"string\",\n          \"example\": \"Books\",\n          \"enum\": [\n            \"Books\",\n            \"Stationery\",\n            \"School Books\",\n            \"Novels\",\n            \"Test Books\",\n            \"Furniture\"\n          ]\n        },\n        \"photo\": {\n          \"type\": \"string\",\n          \"example\": \"https://st.depositphotos.com/1500766/2998/i/950/depositphotos_29982203-stock-photo-sofa-furniture-isolated-on-white.jpg\",\n          \"description\": \"A valid image URL\"\n        }\n      }\n    },\n    \"Raters\": {\n      \"type\": \"object\",\n      \"required\": [\"raterId\", \"rating\"],\n      \"properties\": {\n        \"raterId\": {\n          \"type\": \"string\",\n          \"example\": \"6212527f45b9ccd48e33860d\"\n        },\n        \"rating\": {\n          \"type\": \"number\",\n          \"min\": 0,\n          \"max\": 5,\n          \"example\": 4\n        }\n      }\n    }\n  },\n\n  \"components\": {\n    \"securitySchemes\": {\n      \"authCookie\": {\n        \"type\": \"apiKey\",\n        \"in\": \"header\",\n        \"name\": \"swaggerToken\"\n      }\n    },\n    \"schemas\": {\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\"username\", \"email\", \"firstName\", \"address\", \"lastName\"],\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Automatically generated ID, unique for each user\",\n            \"example\": \"6212527f45b9ccd48e33860d\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"Usernames are unique for each user\",\n            \"example\": \"anne.adams\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"Emails are unique for each user\",\n            \"example\": \"annadams@gmail.com\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"example\": \"Anne\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"example\": \"Adams\"\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"example\": \"123 Main Street, New York, NY 10030\"\n          },\n          \"isDonator\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          }\n        }\n      },\n      \"Item\": {\n        \"type\": \"object\",\n        \"required\": [\"owner\", \"name\", \"description\", \"type\", \"photo\"],\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Automatically generated ID, unique for each item\",\n            \"example\": \"62129b16ca8ad73083e24b98\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Clean Code\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Clean Code book by Robert Cecil Marten\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"Books\",\n            \"enum\": [\n              \"Books\",\n              \"Stationery\",\n              \"School Books\",\n              \"Novels\",\n              \"Test Books\",\n              \"Furniture\"\n            ]\n          },\n          \"photo\": {\n            \"type\": \"string\",\n            \"example\": \"https://st.depositphotos.com/1500766/2998/i/950/depositphotos_29982203-stock-photo-sofa-furniture-isolated-on-white.jpg\",\n            \"description\": \"A valid image URL\"\n          },\n          \"isAvailable\": {\n            \"type\": \"boolean\",\n            \"example\": true,\n            \"default\": true\n          },\n          \"count\": {\n            \"type\": \"number\",\n            \"example\": 3,\n            \"default\": 1\n          },\n          \"borrowers\": {\n            \"type\": \"array\",\n            \"example\": [\"507f1f77bcf86cd799439011\", \"507f191e810c19729de860ea\"],\n            \"default\": [],\n            \"description\": \"An array of borrowers IDs\"\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"description\": \"Owner reference\",\n            \"example\": \"6212527f45b9ccd48e33860d\"\n          }\n        }\n      },\n      \"Request\": {\n        \"type\": \"object\",\n        \"required\": [\"owner\", \"name\", \"description\", \"type\"],\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\",\n            \"description\": \"Automatically generated ID, unique for each item\",\n            \"example\": \"62129b16ca8ad73083e24b98\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Clean Code\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Clean Code book by Robert Cecil Marten\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"Books\",\n            \"enum\": [\n              \"Books\",\n              \"Stationery\",\n              \"School Books\",\n              \"Novels\",\n              \"Test Books\",\n              \"Furniture\"\n            ]\n          },\n          \"photo\": {\n            \"type\": \"string\",\n            \"example\": \"https://st.depositphotos.com/1500766/2998/i/950/depositphotos_29982203-stock-photo-sofa-furniture-isolated-on-white.jpg\",\n            \"description\": \"A valid image URL\"\n          },\n          \"owner\": {\n            \"type\": \"string\",\n            \"description\": \"Owner reference\",\n            \"example\": \"6212527f45b9ccd48e33860d\"\n          }\n        }\n      },\n      \"Rating\": {\n        \"type\": \"object\",\n        \"required\": [\"user\"],\n        \"properties\": {\n          \"user\": {\n            \"type\": \"string\",\n            \"description\": \"The rated user's ID\",\n            \"example\": \"62129b16ca8ad73083e24b98\"\n          },\n          \"raters\": {\n            \"type\": \"array\",\n            \"description\": \"An array of Raters objects consisting of rater's ID and rating value\",\n            \"items\": {\n              \"type\": \"object\",\n              \"$ref\": \"#/definitions/Raters\"\n            },\n            \"default\": []\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/RCDD-202110-TUR-BEW/backend-capstone-turkey-paying-it-forward@02ef14cc3756ae7d107632ca99ee4beb239be638/-/blob/src/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/RCDD-202110-TUR-BEW/backend-capstone-turkey-paying-it-forward/blob/02ef14cc3756ae7d107632ca99ee4beb239be638/src/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 112: cannot unmarshal !!bool `true` into []string"
}