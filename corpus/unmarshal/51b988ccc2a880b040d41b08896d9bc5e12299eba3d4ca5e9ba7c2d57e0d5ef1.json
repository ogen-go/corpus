{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/apidom"
		},
		"file": {
			"name": "sample-api.json",
			"size": 0,
			"path": "packages/apidom-ls/test/fixtures/sample-api.json",
			"byteSize": 4969,
			"content": "{\n  \"openapi\": \"3.1.0\",\n  \"x-top-level\": \"value\",\n  \"info\": {\n    \"title\": \"Sample API\",\n    \"unknownFixedField\": \"value\",\n    \"description\": \"Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.\",\n    \"summary\": \"example summary\",\n    \"termsOfService\": \"Terms of service\",\n    \"version\": \"0.1.9\",\n    \"x-version\": \"0.1.9-beta\",\n    \"license\": {\n      \"name\": \"Apache License 2.0\",\n      \"x-fullName\": \"Apache License 2.0\",\n      \"identifier\": \"Apache License 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\"\n    },\n    \"contact\": {\n      \"name\": \"Vladimir Gorej\",\n      \"x-username\": \"char0n\",\n      \"url\": \"https://www.linkedin.com/in/vladimirgorej/\",\n      \"email\": \"vladimir.gorej@gmail.com\"\n    }\n  },\n  \"components\": {\n    \"x-extension\": \"value\",\n    \"schemas\": {\n      \"x-model\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/UserProfile\",\n            \"summary\": \"user profile reference summary\",\n            \"description\": \"user profile reference description\"\n          }\n        }\n      },\n      \"UserProfile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"x-nullable\": true\n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    {},\n    {\n      \"petstore_auth\": [\n        \"write:pets\",\n        \"read:pets\"\n      ]\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"http://api.example.com/v1\",\n      \"description\": \"Optional server description, e.g. Main (production) server\"\n    },\n    {\n      \"url\": \"http:{port}//staging-api.example.com\",\n      \"description\": \"Optional server description, e.g. Internal staging server for testing\",\n      \"variables\": {\n        \"port\": {\n          \"enum\": [\n            \"8443\",\n            \"443\"\n          ],\n          \"default\": \"8443\",\n          \"description\": \"Port description\"\n        }\n      }\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"summary\": \"path item summary\",\n      \"description\": \"path item description\",\n      \"get\": {\n        \"tags\": [\"tag1\", \"tag2\"],\n        \"summary\": \"Returns a list of users.\",\n        \"description\": \"Optional extended description in CommonMark or HTML.\",\n        \"externalDocs\": {\n          \"description\": \"Find more info here\",\n          \"url\": \"https://example.com\"\n        },\n        \"operationId\": \"getUserList\",\n        \"parameters\": {\n          \"name\": \"userId\",\n          \"in\": \"query\",\n          \"description\": \"ID of the user\",\n          \"required\": true\n        },\n        \"requestBody\": {\n          \"content\": {}\n        },\n        \"responses\": {\n          \"xxx\": {\"key\":  \"val\"},\n          \"200\": {\n            \"description\": \"A JSON array of user names\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"A response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        },\n        \"callbacks\": {\n          \"myCallback\": {\n            \"{$request.query.queryUrl}\": {\n              \"post\": {\n                \"requestBody\": {\n                  \"description\": \"Callback payload\",\n                  \"content\": {\n                    \"application/json\": {\n                      \"schema\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                      }\n                    }\n                  }\n                },\n                \"responses\": {\n                  \"200\": {\n                    \"description\": \"callback successfully processed\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": true,\n        \"security\": [\n          {},\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"servers\": [\n          {\n            \"url\": \"http://api.example.com/v3\",\n            \"description\": \"Redundant server description, e.g. redundant server\"\n          }\n        ]\n      },\n      \"servers\": [\n        {\n          \"url\": \"http://api.example.com/v2\",\n          \"description\": \"Redundant server description, e.g. redundant server\"\n        }\n      ],\n      \"parameters\": {\n        \"name\": \"userId\",\n        \"in\": \"query\",\n        \"description\": \"ID of the user\",\n        \"required\": true\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: json: line 105:24: json: cannot unmarshal object into Go struct field Operation.paths.get.parameters of type []*ogen.Parameter"
}