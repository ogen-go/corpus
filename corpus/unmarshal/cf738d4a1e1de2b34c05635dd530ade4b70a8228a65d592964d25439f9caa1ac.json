{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/schiob/Class-Armony"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "docs/openapi.yml",
			"byteSize": 9070,
			"content": "openapi: 3.1.0\nx-stoplight:\n  id: oeudb80jh6yoz\ninfo:\n  title: Class Armony\n  version: '1.0'\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  '/students/{studentId}':\n    parameters:\n      - schema:\n          type: string\n        name: studentId\n        in: path\n        required: true\n        description: El Id del estudiante.\n    get:\n      summary: Get Student Info by Student ID\n      responses:\n        '200':\n          description: Stdent Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Student'\n              examples:\n                example-1:\n                  value:\n                    id: '142'\n                    name: Alice\n                    hasTutor: true\n        '404':\n          description: User Not Found\n        '500':\n          description: Internal Server Error\n      operationId: get-students-studentId\n      description: Regresa el estudiante que tenga el mismo ID.\n    patch:\n      summary: Update User Information\n      operationId: patch-students-studentId\n      responses:\n        '200':\n          description: User Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Student'\n              examples:\n                example-1:\n                  value:\n                    id: '142'\n                    name: Alice\n                    hasTutor: true\n        '404':\n          description: Student Not Found\n        '500':\n          description: Internal Server Error\n      description: Hace update de la información de un estudiante existente.\n      requestBody:\n        $ref: '#/components/requestBodies/patch'\n    delete:\n      summary: ''\n      operationId: delete-students-studentId\n      responses:\n        '202':\n          description: Accepted\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      description: Eliminar registro de estudiante.\n  /student:\n    post:\n      summary: Create New Student\n      operationId: post-student\n      responses:\n        '201':\n          description: Student Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Student'\n              examples:\n                example-1:\n                  value:\n                    id: '142'\n                    name: Alice\n                    hasTutor: true\n        '400':\n          description: Missing Required Information\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Nombre del estudiante\n                hasTutor:\n                  type: boolean\n                  description: El estudiante tiene un Padre/Tutor?\n                phone:\n                  type: string\n                  description: Contacto del estudiante\n                tutorId:\n                  type: string\n                  description: Id del Tutor en el caso de que `hasTutor` sea `true`\n              required:\n                - name\n                - hasTutor\n            examples:\n              Create User Bob Fellow:\n                value:\n                  name: Bob\n                  hasTutor: true\n                  phone: '1001001010'\n        description: Post los campos necesarios para generar un nuevo estudiante.\n      description: Crea un nuevo student.\n    parameters:\n      - $ref: '#/components/parameters/limit'\n      - $ref: '#/components/parameters/offset'\n    get:\n      summary: List Students\n      operationId: get-student\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  _links:\n                    type: object\n                    required:\n                      - first\n                      - last\n                    properties:\n                      first:\n                        type: string\n                        description: URL de primera página de la colección.\n                      last:\n                        type: string\n                        description: URL de última página de la colección.\n                      prev:\n                        type: string\n                        description: URL de la página anterior.\n                      next:\n                        type: string\n                        description: URL de la siguiente página.\n                  students:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Student'\n                required:\n                  - _links\n              examples:\n                example-1:\n                  value:\n                    _links:\n                      first: string\n                      last: string\n                      prev: string\n                      next: string\n                    students:\n                      - id: '142'\n                        name: Alice\n                        hasTutor: true\n        '500':\n          description: Internal Server Error\n      description: Enlista los estudiantes\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\ncomponents:\n  schemas:\n    Student:\n      title: Student\n      type: object\n      description: ''\n      examples:\n        - id: '142'\n          name: Alice\n          hasTutor: true\n        - id: 143\n          name: Bob\n          hasTutor: false\n          phone: '1001001010'\n      properties:\n        id:\n          description: Identificador único de un estudiante.\n          type: string\n        name:\n          type: string\n          description: Nombre del estudiante.\n        hasTutor:\n          type: boolean\n          description: True si el estudiante tiene un Padre/Tutor.\n        phone:\n          type: string\n          description: Teléfono de contacto del estudiante.\n      required:\n        - id\n        - name\n        - hasTutor\n  parameters:\n    limit:\n      name: limit\n      in: query\n      required: true\n      schema:\n        type: integer\n        default: 50\n      description: Máximo número de registros que se regresan en la respuesta.\n    offset:\n      name: offset\n      in: query\n      required: true\n      schema:\n        type: integer\n        default: 0\n      description: Número de registros que se saltan en la respuesta.\n  requestBodies:\n    patch:\n      content:\n        application/json:\n          schema:\n            type: array\n            x-examples:\n              example-1:\n                - op: test\n                  path: /a/b/c\n                  value: foo\n                - op: remove\n                  path: /a/b/c\n                - op: add\n                  path: /a/b/c\n                  value:\n                    - foo\n                    - bar\n                - op: replace\n                  path: /a/b/c\n                  value: 42\n                - op: move\n                  from: /a/b/c\n                  path: /a/b/d\n                - op: copy\n                  from: /a/b/d\n                  path: /a/b/e\n            items:\n              type: object\n              properties:\n                op:\n                  type: string\n                  description: Operación a realizar.\n                  enum:\n                    - add\n                    - remove\n                    - replace\n                    - move\n                    - copy\n                    - test\n                  example: add\n                path:\n                  type: string\n                  description: Path del atributo en el objeto.\n                  example: /a/b/c\n                value:\n                  type:\n                    - integer\n                    - string\n                    - array\n                  description: 'Valor para las operaciones de `add`, `test`, `replace`. '\n                  items: {}\n                from:\n                  type: string\n                  description: Para las opciones de `move` y `copy`.\n                  example: /a/b/c\n              required:\n                - op\n                - path\n          examples:\n            example-1:\n              value:\n                - op: test\n                  path: /a/b/c\n                  value: foo\n                - op: remove\n                  path: /a/b/c\n                - op: add\n                  path: /a/b/c\n                  value:\n                    - foo\n                    - bar\n                - op: replace\n                  path: /a/b/c\n                  value: 42\n                - op: move\n                  from: /a/b/c\n                  path: /a/b/d\n                - op: copy\n                  from: /a/b/d\n                  path: /a/b/e\n      description: 'Payload de una petición PATCH siguiendo https://datatracker.ietf.org/doc/html/rfc6902'\n",
			"canonicalURL": "/github.com/schiob/Class-Armony@dfd08ac8300b80b465f2ad2fa9a630609c3efc3b/-/blob/docs/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/schiob/Class-Armony/blob/dfd08ac8300b80b465f2ad2fa9a630609c3efc3b/docs/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 274: cannot unmarshal !!seq into string"
}