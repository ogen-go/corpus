{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/TheSoftwareHouse/rad-modules"
		},
		"file": {
			"name": "security.json",
			"size": 0,
			"path": "services/security/swagger/security.json",
			"byteSize": 84020,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"security\",\n    \"version\": \"0.0.53\",\n    \"description\": \"\"\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  },\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Tokens\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"\"\n    },\n    {\n      \"name\": \"Policy\",\n      \"description\": \"\"\n    }\n  ],\n  \"definitions\": {\n    \"ApiKeyHeaderName\": {\n      \"in\": \"header\",\n      \"name\": \"x-api-key\",\n      \"description\": \"ApiKey that allows generating access tokens.\",\n      \"schema\": {\n        \"type\": \"string\",\n        \"format\": \"uuid\"\n      },\n      \"required\": true,\n      \"example\": \"123e4567-e89b-12d3-a456-426655440000\"\n    },\n    \"Tokens\": {\n      \"type\": \"object\"\n    },\n    \"AlreadyExistsError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Error description\"\n        }\n      }\n    },\n    \"BadRequestError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Bad request\"\n        }\n      }\n    },\n    \"ForbiddenError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Forbidden\"\n        }\n      }\n    },\n    \"InternalServerError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Error description\"\n        }\n      }\n    },\n    \"NoLongerAvailableError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"No longer available\"\n        }\n      }\n    },\n    \"NotFoundError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Not found\"\n        }\n      }\n    },\n    \"UnauthorizedError\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"error\": {\n          \"type\": \"string\",\n          \"example\": \"Token missing or invalid token format\"\n        }\n      }\n    }\n  },\n  \"paths\": {\n    \"/api/attributes\": {\n      \"get\": {\n        \"tags\": [\n          \"Attributes\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Get attributes list (if no query parameters returns first 25 attributes)\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"default\": 0,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 1\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": false,\n            \"default\": 25,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 25\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"filter[username][include]=superadmin\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"order[by]=name\u0026order[type]=asc\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of attributes and total count of attributes\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"users\": {\n                      \"type\": \"An array of objects\",\n                      \"example\": [\n                        {\n                          \"key\": \"f2fd043c-44d3-49f6-9a5a-c486f9f47258\",\n                          \"name\": \"attr1\",\n                          \"username\": \"superadmin\"\n                        }\n                      ]\n                    },\n                    \"total\": {\n                      \"type\": \"number\",\n                      \"example\": 2\n                    },\n                    \"page\": {\n                      \"type\": \"number\",\n                      \"example\": 1\n                    },\n                    \"limit\": {\n                      \"type\": \"number\",\n                      \"example\": 25\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/policy/add-policy\": {\n      \"post\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Adds a new policy\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"resource\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"res1\"\n                  },\n                  \"attribute\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"attr1\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"New policy created id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\",\n                      \"format\": \"uuid\",\n                      \"example\": \"f2fd043c-44d3-49f6-9a5a-c486f9f47258\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Policy already exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/AlreadyExistsError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/policy/get-policies\": {\n      \"get\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Get policies list (if no query parameters returns first 25 policies)\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"default\": 0,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 1\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": false,\n            \"default\": 25,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 25\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"filter[resource][Like]=%resource%\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"order[by]=attribute\u0026order[type]=asc\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of policies and total count of policies\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"policies\": {\n                      \"type\": \"An array of objects\",\n                      \"example\": [\n                        {\n                          \"id\": \"f2fd043c-44d3-49f6-9a5a-c486f9f47258\",\n                          \"attribute\": \"ADMIN_PANEL\",\n                          \"resource\": \"user-operation/add-user\"\n                        },\n                        {\n                          \"id\": \"262907ad-2ca4-41b6-85f3-c2face7d3318\",\n                          \"attribute\": \"ADMIN_PANEL\",\n                          \"resource\": \"user-operation/get-user-id\"\n                        }\n                      ]\n                    },\n                    \"total\": {\n                      \"type\": \"number\",\n                      \"example\": 2\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/policy/remove-policy\": {\n      \"delete\": {\n        \"tags\": [\n          \"Policy\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Removes a policy (identified either by id or resource and attribute)\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"id\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"9540c4b4-bbf7-479d-aa58-4bddc1200d9c\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"resource\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"res1\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"attribute\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"attr1\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Policy removed\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Policy not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/public/auth/reset-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Public\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Creates token which will be used to reset the user password\",\n        \"description\": \"Create a password reset token with will be used to find if the user started action to change password\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"test-user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Token created\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/public/auth/reset-password/{resetPasswordToken}\": {\n      \"post\": {\n        \"tags\": [\n          \"Public\"\n        ],\n        \"security\": [],\n        \"summary\": \"Reset user password\",\n        \"description\": \"If a user wants to reset the password without providing old one first the user needs to receive \\\"resetPasswordToken\\\" from /password-reset-token endpoint. After that user need to send newPassword and to valid URL with resetPasswordToken in parameter. If the user won't provide newPassword in the body the password will be generated randomly\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"resetPasswordToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"110b7890b25bbtEsTtoKenc7760e8ac2e247b\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"example\": \"passw0rd\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returns password when generater otherwise empty body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"newPassword\": {\n                      \"type\": \"string\",\n                      \"example\": \"passw0rd\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/tokens/create-access-key\": {\n      \"post\": {\n        \"tags\": [\n          \"Tokens\"\n        ],\n        \"summary\": \"Create Api Key\",\n        \"description\": \"Returns an api key\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Access key created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"apiKey\": {\n                      \"type\": \"string\",\n                      \"default\": \"uuid v4\",\n                      \"example\": \"123e4567-e89b-12d3-a456-426655440000\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"default\": \"custom\",\n                      \"example\": \"custom\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\",\n                      \"default\": \"username\",\n                      \"example\": \"superadmin\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/tokens/generate-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Tokens\"\n        ],\n        \"summary\": \"Create new token\",\n        \"description\": \"Creates new token with default policies and attributes without SUPERADMIN_ROLE attribute\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/definitions/ApiKeyHeaderName\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"accessExpirationInSeconds\": {\n                    \"type\": \"number\",\n                    \"required\": true,\n                    \"example\": 3600\n                  },\n                  \"refreshExpirationInSeconds\": {\n                    \"type\": \"number\",\n                    \"required\": true,\n                    \"example\": 3000\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Access key created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"default\": \"JWT token\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGM4YzBjNi1jYzI3LTRjOTEtODk0ZS05MDIzMzYyYzMwOTAiLCJ1c2VybmFtZSI6Ijk0N2E1NmEyLWYyNmItNGU5OC1iZjk4LTI5ZWEwOWE0Njk5YyIsImF0dHJpYnV0ZXMiOlsiYXR0cjEiLCJhdHRyMiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoiY3VzdG9tIiwiYWNjZXNzRXhwaXJhdGlvbkluU2Vjb25kcyI6MzYwMCwicmVmcmVzaEV4cGlyYXRpb25JblNlY29uZHMiOjMwMDAsImlhdCI6MTU3ODgzMjA1MCwiZXhwIjoxNTc4ODM1NjUwfQ.C-eAbVXd8GJNTnKmYAT0YZqv4suqSPwHHp7DL48mZag\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"default\": \"JWT token\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2OGM4YzBjNi1jYzI3LTRjOTEtODk0ZS05MDIzMzYyYzMwOTAiLCJ1c2VybmFtZSI6Ijk0N2E1NmEyLWYyNmItNGU5OC1iZjk4LTI5ZWEwOWE0Njk5YyIsImF0dHJpYnV0ZXMiOlsiYXR0cjEiLCJhdHRyMiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoiY3VzdG9tIiwiYWNjZXNzRXhwaXJhdGlvbkluU2Vjb25kcyI6MzYwMCwicmVmcmVzaEV4cGlyYXRpb25JblNlY29uZHMiOjMwMDAsImlhdCI6MTU3ODgzMjA1MCwiZXhwIjoxNTc4ODM1MDUwfQ.wNzw7dSLux3a3Jf1KRsnGKMBVlMxToz8x2dJu7DWff0\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/tokens/get-access-keys\": {\n      \"get\": {\n        \"tags\": [\n          \"Tokens\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Get access keys list (if no query parameters returns first 25 keys)\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"default\": 0,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 1\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": false,\n            \"default\": 25,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 25\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of access keys and total count of keys\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessKeys\": {\n                      \"type\": \"An array of objects\",\n                      \"example\": [\n                        {\n                          \"id\": \"cbc078c3-da36-43a7-b364-7f5c48e1fe50\",\n                          \"apiKey\": \"37362ad7-a603-1bcc-808c-a24bfd35883c\",\n                          \"type\": \"custom\",\n                          \"createdBy\": \"superadmin\",\n                          \"createdAt\": \"2020-02-07T11:13:16.184Z\"\n                        },\n                        {\n                          \"id\": \"485d2318-5a0e-4b80-bfd1-1b74e1636878\",\n                          \"apiKey\": \"79e596f1-72c9-0afc-cde8-d7acd9cadf9c\",\n                          \"type\": \"custom\",\n                          \"createdBy\": \"superadmin\",\n                          \"createdAt\": \"2020-02-07T11:13:16.431Z\"\n                        }\n                      ]\n                    },\n                    \"total\": {\n                      \"type\": \"number\",\n                      \"example\": 2\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/tokens/remove-access-key/{apiKey}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Tokens\"\n        ],\n        \"summary\": \"Remove api key\",\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"apiKey\",\n            \"description\": \"ApiKey that should be deleted\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"uuid\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Api key removed\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/activate-user/{activationToken}\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Activate a new user\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"activationToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"userId\": {\n                      \"type\": \"string\",\n                      \"example\": \"45287eff-cdb0-4cd4-8a0f-a07d1a11b382\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Token not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"410\": {\n            \"description\": \"Token expired\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NoLongerAvailableError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/add-attribute\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Adds a new attribute for a given user\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"ee4b1d3e-463e-49a8-880f-5f3a816b492c\"\n                  },\n                  \"attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"required\": true,\n                    \"example\": [\n                      \"attr1\",\n                      \"attr2\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Attribute created\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Already Exists\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/AlreadyExistsError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/add-user\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Create a new user\",\n        \"description\": \"Adds a new user\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"test-user\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"passw0rd\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"User created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"newUserId\": {\n                      \"type\": \"string\",\n                      \"example\": \"45287eff-cdb0-4cd4-8a0f-a07d1a11b382\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Already Exists\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/AlreadyExistsError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/deactivate-user\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Deactivate a user\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"ee4b1d3e-463e-49a8-880f-5f3a816b492c\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User deactivated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"userId\": {\n                      \"type\": \"string\",\n                      \"example\": \"45287eff-cdb0-4cd4-8a0f-a07d1a11b382\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    },\n                    \"deactivationDate\": {\n                      \"type\": \"string\",\n                      \"example\": \"2020-01-12T13:36:39.373Z\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/delete-user\": {\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Removes a user by id\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"ee4b1d3e-463e-49a8-880f-5f3a816b492c\"\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"User removed\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/get-user-id\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"description\": \"Returns a user id by user name\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User Id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"userId\": {\n                      \"type\": \"string\",\n                      \"example\": \"45287eff-cdb0-4cd4-8a0f-a07d1a11b382\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/get-user/{userId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\",\n                      \"example\": \"806ab2f0-fb77-4a45-aece-493c8a591ef5\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\",\n                      \"example\": \"test-user\"\n                    },\n                    \"isActive\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"createdAt\": {\n                      \"type\": \"string\",\n                      \"example\": \"2020-04-27T09:34:13.424Z\"\n                    },\n                    \"updatedAt\": {\n                      \"type\": \"string\",\n                      \"example\": \"2020-04-28T09:34:13.424Z\"\n                    },\n                    \"attributes\": {\n                      \"type\": \"An array of strings\",\n                      \"example\": [\n                        \"attr1\",\n                        \"attr2\"\n                      ]\n                    },\n                    \"isSuperAdmin\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/get-users-by-resource\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Get users by resource name\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"resource\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"default\": 0,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 1\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": false,\n            \"default\": 25\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"users\": {\n                      \"type\": \"An array of objects\",\n                      \"example\": [\n                        {\n                          \"id\": \"806ab2f0-fb77-4a45-aece-493c8a591ef5\",\n                          \"username\": \"test-user\",\n                          \"isActive\": true,\n                          \"createdAt\": \"2020-04-27T09:34:13.424Z\",\n                          \"updatedAt\": \"2020-04-28T09:34:13.424Z\",\n                          \"attributes\": [\n                            \"attr1\",\n                            \"attr2\"\n                          ],\n                          \"isSuperAdmin\": false\n                        }\n                      ]\n                    },\n                    \"total\": {\n                      \"type\": \"number\",\n                      \"example\": 2\n                    },\n                    \"page\": {\n                      \"type\": \"number\",\n                      \"example\": 1\n                    },\n                    \"limit\": {\n                      \"type\": \"number\",\n                      \"example\": 25\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Get users list (if no query parameters returns first 25 users)\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"page\",\n            \"required\": false,\n            \"default\": 0,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 1\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"required\": false,\n            \"default\": 25,\n            \"schema\": {\n              \"type\": \"number\"\n            },\n            \"example\": 25\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"allowReserved\": true,\n            \"example\": \"filter[username][include]=superadmin\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"order\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"allowReserved\": true,\n            \"example\": \"order[by]=username\u0026order[type]=asc\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of users and total count of users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"users\": {\n                      \"type\": \"An array of objects\",\n                      \"example\": [\n                        {\n                          \"id\": \"806ab2f0-fb77-4a45-aece-493c8a591ef5\",\n                          \"username\": \"test-user\",\n                          \"isActive\": true,\n                          \"activationToken\": null,\n                          \"createdAt\": \"2020-04-27T09:34:13.424Z\",\n                          \"updatedAt\": \"2020-04-27T09:34:13.424Z\",\n                          \"attributes\": [\n                            \"attr1\",\n                            \"attr2\"\n                          ],\n                          \"isSuperAdmin\": false\n                        }\n                      ]\n                    },\n                    \"total\": {\n                      \"type\": \"number\",\n                      \"example\": 2\n                    },\n                    \"page\": {\n                      \"type\": \"number\",\n                      \"example\": 1\n                    },\n                    \"limit\": {\n                      \"type\": \"number\",\n                      \"example\": 25\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/has-access\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Verifies whether user has access to a specific resource.\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"resource\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"resource1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User has access\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hasAccess\": {\n                      \"type\": \"boolean\",\n                      \"example\": false\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"/api/users/has-attribute\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Verifies whether user has attributes.\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"attributes\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"attr1\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns an object determining whether user has all attributes and a list of owned attributes.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"hasAllAttributes\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    },\n                    \"ownedAttributes\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      },\n                      \"example\": [\n                        \"attr1\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/is-authenticated\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Verifies if user is authenticated\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Is authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"isAuthenticated\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [],\n        \"summary\": \"Login to app\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"superadmin\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"superadmin\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"auth success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyNzQ4Zjc0MC1lOWRiLTQxYTMtOGJlNy04OTJlMWY5MzViYzgiLCJ1c2VybmFtZSI6InN1cGVyYWRtaW4iLCJhdHRyaWJ1dGVzIjpbIlJPTEVfU1VQRVJBRE1JTiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoidXNlciIsImlhdCI6MTU4MzQ5ODIxNCwiZXhwIjoxNTgzNTA4MjE0fQ.LU3DKnwjzmqIMlxni0bwFNH4-MpjRp6dvt7cXztvQIc\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyNzQ4Zjc0MC1lOWRiLTQxYTMtOGJlNy04OTJlMWY5MzViYzgiLCJ1c2VybmFtZSI6InN1cGVyYWRtaW4iLCJhdHRyaWJ1dGVzIjpbIlJPTEVfU1VQRVJBRE1JTiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoidXNlciIsImlhdCI6MTU4MzQ5ODIxNCwiZXhwIjoxNTgzNDk5MTE0fQ.tUSn6ktZRB8z1X7Q7QiMtQK7JFGI-AKJMcltlZaOR0U\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"child \\\"username\\\" fails because [\\\"username\\\" is not allowed to be empty]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Wrong username or password\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/public/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Public\"\n        ],\n        \"security\": [],\n        \"summary\": \"Login to app\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"superadmin\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"superadmin\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"auth success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyNzQ4Zjc0MC1lOWRiLTQxYTMtOGJlNy04OTJlMWY5MzViYzgiLCJ1c2VybmFtZSI6InN1cGVyYWRtaW4iLCJhdHRyaWJ1dGVzIjpbIlJPTEVfU1VQRVJBRE1JTiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoidXNlciIsImlhdCI6MTU4MzQ5ODIxNCwiZXhwIjoxNTgzNTA4MjE0fQ.LU3DKnwjzmqIMlxni0bwFNH4-MpjRp6dvt7cXztvQIc\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIyNzQ4Zjc0MC1lOWRiLTQxYTMtOGJlNy04OTJlMWY5MzViYzgiLCJ1c2VybmFtZSI6InN1cGVyYWRtaW4iLCJhdHRyaWJ1dGVzIjpbIlJPTEVfU1VQRVJBRE1JTiJdLCJwb2xpY3kiOltdLCJ0eXBlIjoidXNlciIsImlhdCI6MTU4MzQ5ODIxNCwiZXhwIjoxNTgzNDk5MTE0fQ.tUSn6ktZRB8z1X7Q7QiMtQK7JFGI-AKJMcltlZaOR0U\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"child \\\"username\\\" fails because [\\\"username\\\" is not allowed to be empty]\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\",\n                      \"example\": \"Wrong username or password\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/oauth-redirect/{provider}\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [],\n        \"summary\": \"oauth-redirect callback\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"provider\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"code\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"redirectUrl\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Login success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJoaSI6ImhvdyBhcmUgeW91PyA6KSJ9.NYXWEhydNzRrGQD-dhEQL0pi0MIPoOwbGwfOw39wvus\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJob3ciOiJjYW4gSSBoZWxwIHlvdT8ifQ.P7egumkjqupIVmvVgy0rv4rqNOVXSlZvOX5ZiFxNR9w\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\",\n                      \"example\": \"test.user@test.com\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/public/auth/oauth-redirect/{provider}\": {\n      \"post\": {\n        \"tags\": [\n          \"Public\"\n        ],\n        \"security\": [],\n        \"summary\": \"oauth-redirect callback\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"provider\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"code\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"redirectUrl\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Login success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJoaSI6ImhvdyBhcmUgeW91PyA6KSJ9.NYXWEhydNzRrGQD-dhEQL0pi0MIPoOwbGwfOw39wvus\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJob3ciOiJjYW4gSSBoZWxwIHlvdT8ifQ.P7egumkjqupIVmvVgy0rv4rqNOVXSlZvOX5ZiFxNR9w\"\n                    },\n                    \"username\": {\n                      \"type\": \"string\",\n                      \"example\": \"test.user@test.com\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/password-reset-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Returns token with will be used to reset the user password\",\n        \"description\": \"Create a password reset token with will be used to find if the user started action to change password\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"test-user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Token created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"resetPasswordToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"45287eff-cdb0-4cd4-8a0f-a07d1a11b382\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Refreshes access token.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"accessToken\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"Access token string...\"\n                  },\n                  \"refreshToken\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"Refresh token string...\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Token successfully refreshed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"access token string...\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"refresh token string...\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/public/auth/refresh-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Public\"\n        ],\n        \"security\": [],\n        \"summary\": \"Refreshes access token.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"accessToken\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"Access token string...\"\n                  },\n                  \"refreshToken\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"Refresh token string...\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Token successfully refreshed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"access token string...\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"refresh token string...\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/refresh-user-active-token\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Refresh user's active token if token has expired.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"userId\": {\n                    \"type\": \"string\",\n                    \"required\": true,\n                    \"example\": \"ee4b1d3e-463e-49a8-880f-5f3a816b492c\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User's active token refreshed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"access token string...\"\n                    },\n                    \"refreshToken\": {\n                      \"type\": \"string\",\n                      \"example\": \"refresh token string...\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden Error the user is already active\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/ForbiddenError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/remove-attribute\": {\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Removes an attribute for a user\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"attributes\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"attr1\"\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"userId\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"ee4b1d3e-463e-49a8-880f-5f3a816b492c\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Deleted successfully\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Attribute not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/NotFoundError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/reset-password/{resetPasswordToken}\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [],\n        \"summary\": \"Reset user password\",\n        \"description\": \"If a user wants to reset the password without providing old one first the user needs to receive \\\"resetPasswordToken\\\" from /password-reset-token endpoint. After that user need to send newPassword and to valid URL with resetPasswordToken in parameter. If the user won't provide newPassword in the body the password will be generated randomly\",\n        \"parameters\": [\n          {\n            \"in\": \"query\",\n            \"name\": \"resetPasswordToken\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"example\": \"110b7890b25bbtEsTtoKenc7760e8ac2e247b\"\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"example\": \"passw0rd\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Returns password when generater otherwise empty body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"newPassword\": {\n                      \"type\": \"string\",\n                      \"example\": \"passw0rd\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/users/set-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"summary\": \"Set user password\",\n        \"description\": \"If a normal user wants to change his password the user needs to send newPassword and oldPassword. If an admin user wants to set a new password for a user, the admin needs to send username and newPassword\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\",\n                    \"required\": false\n                  },\n                  \"oldPassword\": {\n                    \"type\": \"string\",\n                    \"required\": false\n                  },\n                  \"newPassword\": {\n                    \"type\": \"string\",\n                    \"required\": true\n                  }\n                },\n                \"example\": {\n                  \"normal-user\": {\n                    \"body\": {\n                      \"newPassword\": \"87654321cba\",\n                      \"oldPassword\": \"abc12345678\"\n                    }\n                  },\n                  \"admin-user\": {\n                    \"body\": {\n                      \"newPassword\": \"87654321cba\",\n                      \"username\": \"user1\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Set new password success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"passwordChanged\": {\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/BadRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/definitions/InternalServerError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/TheSoftwareHouse/rad-modules@76615d992c66d9535ea70514acde0b378195bd90/-/blob/services/security/swagger/security.json",
			"externalURLs": [
				{
					"url": "https://github.com/TheSoftwareHouse/rad-modules/blob/76615d992c66d9535ea70514acde0b378195bd90/services/security/swagger/security.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 255: cannot unmarshal !!bool `true` into []string; yaml: line 550: cannot unmarshal !!bool `true` into []string; yaml: line 763: cannot unmarshal !!bool `true` into []string; yaml: line 1094: cannot unmarshal !!bool `true` into []string; yaml: line 1191: cannot unmarshal !!bool `true` into []string; yaml: line 1284: cannot unmarshal !!bool `true` into []string; yaml: line 2061: cannot unmarshal !!bool `true` into []string; yaml: line 2146: cannot unmarshal !!bool `true` into []string; yaml: line 2438: cannot unmarshal !!bool `true` into []string; yaml: line 2516: cannot unmarshal !!bool `true` into []string; yaml: line 2599: cannot unmarshal !!bool `true` into []string; yaml: line 2686: cannot unmarshal !!bool `true` into []string; yaml: line 2941: cannot unmarshal !!bool `false` into []string"
}