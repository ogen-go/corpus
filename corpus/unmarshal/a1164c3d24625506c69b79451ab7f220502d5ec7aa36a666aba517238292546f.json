{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws-samples/aws-serverless-ecommerce-platform"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "orders/resources/openapi.yaml",
			"byteSize": 1973,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title:\n    Fn::Sub: \"${AWS::StackName}-api\"\n  version: 1.0.0\n  description: Orders service API definition\n  license:\n    name: MIT-0\n    url: https://github.com/aws/mit-0\n\npaths:\n  /backend/{orderId}:\n    get:\n      description: |\n        Retrieve a single order.\n\n        This is a backend operation that requires IAM credentials.\n      operationId: backendGetOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: Order ID in UUID format\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: Order item\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  order:\n                    $ref: \"../../shared/resources/schemas.yaml#/Order\"\n        default:\n          description: Something went wrong\n          content:\n            application/json:\n              schema:\n                $ref: \"../../shared/resources/schemas.yaml#/Message\"\n      security:\n        - AWS_IAM: []\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrderFunction.Arn}/invocations\"\n\n\ncomponents:\n  schemas:\n    OrderRequest:\n      type: object\n      description: Information necessary for creating an order.\n      properties:\n        products:\n          type: array\n          items:\n            $ref: \"../../shared/resources/schemas.yaml#/Product\"\n        address:\n          $ref: \"../../shared/resources/schemas.yaml#/Address\"\n        deliveryPrice:\n          type: integer\n          minimum: 0\n        total:\n          type: integer\n          minimum: 0\n  securitySchemes:\n    AWS_IAM:\n      type: apiKey\n      name: Authorization\n      in: header\n      x-amazon-apigateway-authtype: awsSigv4",
			"canonicalURL": "/github.com/aws-samples/aws-serverless-ecommerce-platform@3b9ef36dd3e338c8ab697c2bcb1b672e064e303c/-/blob/orders/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws-samples/aws-serverless-ecommerce-platform/blob/3b9ef36dd3e338c8ab697c2bcb1b672e064e303c/orders/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:636: json: cannot unmarshal object into Go struct field Info.info.title of type string"
}