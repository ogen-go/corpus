{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gbrueckl/Databricks.API.PowerShell"
		},
		"file": {
			"name": "queries-dashboards-azure.yaml",
			"size": 0,
			"path": "Docs/OpenAPISpecs/queries-dashboards-azure.yaml",
			"byteSize": 40254,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Queries and Dashboards API\n  description:\n    \"This feature is in\n    [Public Preview](https://docs.microsoft.com/azure/databricks/release-notes/release-types).\\n\n   \n    **Important:** To access Azure Databricks REST APIs, you must [authenticate](https://docs.microsoft.com/azure/databricks/sql/api/authentication).\"\ntags:\n  - name: \"Queries / Results\"\n  - name: Dashboards\n    description:\n      \"In general, there is little need to modify dashboards using the API. However, it can be useful to use dashboard objects to look-up a collection of related query IDs. The API can also be used to duplicate multiple dashboards at once since you can get a dashboard definition with a GET request and then POST it to create a new one.\"\n  - name: ACL / Permissions\n    description: \n      \"The SQL Permissions API is similar to the endpoints of the [Permissions API](https://docs.microsoft.com/azure/databricks/dev-tools/api/latest/permissions). However, this exposes only one endpoint, which gets the Access Control List for a given object. You cannot modify any permissions using this API.\\n\n    \n    There are three levels of permission:\\n\n\n      - `CAN_VIEW`: Allows read-only access\\n\n\n      - `CAN_RUN`: Allows read access and run access (superset of `CAN_VIEW`)\\n\n\n      - `CAN_MANAGE`: Allows all actions: read, run, edit, delete, modify permissions (superset of `CAN_RUN`)\"\n\nservers:\n  - url: https://\u003cdatabricks-instance\u003e/api/2.0/sql\n    description: \u003e-\n      In the URL, substitute `\u003cdatabricks-instance\u003e` with the `adb-\u003cworkspace-id\u003e.\u003crandom-number\u003e.azuredatabricks.net` domain name of your Azure Databricks deployment.\npaths:\n  /queries:\n    description:\n      \"This endpoint can search and filter query objects or to create a new query object.\"\n    get:\n      tags:\n        - Queries / Results\n      summary: Retrieve a list of queries\n      description:\n        \"Optionally this list can be filtered by a search term.\"\n      operationId: sql-analytics-get-queries\n      parameters:\n        - name: page_size\n          in: query\n          required: false\n          description: \"Number of queries to return per page.\"\n          schema:\n            type: integer\n            example: 50\n        - name: page\n          in: query\n          required: false\n          description: \"Page number to retrieve.\"\n          schema:\n            type: integer\n            example: 1\n        - name: order\n          in: query\n          required: false\n          description: \n            \"Name of query attribute to order by. Default sort order is ascending. Append a dash (`-`) to order descending instead. \\n\n          \n- `name`: The name of the query. \\n\n\n- `created_at`: The timestamp the query was created. \\n\n\n- `schedule`: The refresh interval for each query. For example: \\\"Every 5 Hours\\\" or \\\"Every 5 Minutes\\\". \\\"Never\\\" is treated as the highest value for sorting. \\n\n\n- `runtime`: The time it took to run this query. This will be blank for parameterized queries. A blank value is treated as the highest value for sorting. \\n\n\n- `executed_at`: The timestamp when the query was last run. \\n\n\n- `created_by`: The user name of the user that created the query. \\n\n          \"\n          schema:\n            type: string\n            enum:\n              - name\n              - -name\n              - created_at\n              - -created_at\n              - schedule\n              - -schedule\n              - runtime\n              - -runtime\n              - executed_at\n              - -executed_at\n              - created_by\n              - -created_by\n        - name: q\n          in: query\n          required: false\n          description: \"Full text search term\"\n          schema:\n            type: string\n            example: orders by month\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    description: The total number of queries.\n                    example: 1\n                  page:\n                    type: integer\n                    description: The page number that is currently displayed.\n                    example: 1\n                  page_size:\n                    type: integer\n                    description: The number of queries per page.\n                    example: 25\n                  results:\n                    type: array\n                    description: List of queries returned.\n                    items:\n                      anyOf:\n                        - $ref: \"#/components/schemas/query-object\"\n\n    post:\n      summary: Create a new query definition\n      description:\n        \"Queries created with this endpoint belong to the authenticated user making the request. \\n\n\n        **Note**: You cannot add a visualization until you create the query.\"\n      tags:\n        - Queries / Results\n      operationID: sql-analytics-create-query\n      requestBody:\n        description: A query object to be created.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/query-post-content\"\n      responses:\n        200:\n          summary: \"Query created successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/query-object\"\n\n\n  /queries/{queryID}:\n    get:\n      summary: Retrieve a query definition.\n      description: Retrieve a query object definition along with contextual permissions information about the currently authenticated user.\n      operationId: sql-analytics-get-query\n      tags:\n        - Queries / Results\n      parameters:\n        - name: queryID\n          in: path\n          schema:\n            type: string\n            format: UUID\n            example: 2cca1687-60ff-4886-a445-0230578c864d\n      responses:\n        200:\n          summary: \"Query fetched successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/query-object\"\n    post:\n      summary: Change a query definition\n      description: \n        \"Modify this query definition.\\n\n\n         **Note**: You cannot undo this operation.\"\n      operationId: sql-analytics-change-query\n      tags:\n        - Queries / Results\n      parameters:\n        - name: queryID\n          in: path\n          schema:\n            type: string\n            format: UUID\n            example: 2cca1687-60ff-4886-a445-0230578c864d\n      requestBody:\n        description: The query definition that will replace the current definition for this `queryID`.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/query-post-content\"\n      responses:\n        200:\n          summary: \"Query changed successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/query-object\"\n    delete:\n      summary: Move a query to the trash\n      description: Trashed queries immediately disappear from searches and list views and cannot be used for alerts. The trash is deleted after 30 days.\n      operationId: sql-analytics-trash-query\n      tags:\n        - Queries / Results\n      responses:\n        200:\n          summary: \"Query moved to trash\"\n          content:\n            application/json:\n              schema:\n                type: string\n                example: null\n\n  /queries/trash/{queryID}:\n    post:\n      summary: Restore a trashed query\n      description: A restored query appears in list views and searches. You can use restored queries for alerts.\n      operationId: sql-analytics-restore-trashed-query\n      tags:\n        - Queries / Results\n      responses:\n        200:\n          summary: \"Query restored successfully\"\n          content:\n            application/json:\n              schema:\n                type: string\n                example: null\n\n  /dashboards:\n    get:\n      description: \n      summary: Fetch a paginated list of dashboard objects\n      tags:\n        - Dashboards\n      operationId: get-sql-analytics-dashboards\n      parameters:\n        - name: page_size\n          in: query\n          required: false\n          description: \"Number of dashboards to return per page.\"\n          schema:\n            type: integer\n            example: 50\n        - name: page\n          in: query\n          required: false\n          description: \"Page number to retrieve.\"\n          schema:\n            type: integer\n            example: 1\n        - name: order\n          in: query\n          required: false\n          description: \"Name of dashboard attribute to order by.\"\n          schema:\n            type: string\n            enum:\n              - name\n              - created_at\n        - name: q\n          in: query\n          required: false\n          description: \"Full text search term.\"\n          schema:\n            type: string\n            example: orders by month\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    description: The total number of dashboards.\n                    example: 1\n                  page:\n                    type: integer\n                    description: The current page being displayed.\n                    example: 1\n                  page_size:\n                    type: integer\n                    description: The number of dashboards per page.\n                    example: 25\n                  results:\n                    type: array\n                    description: List of dashboards returned.\n                    items:\n                      anyOf:\n                        - $ref: \"#/components/schemas/dashboard-object\"\n    post:\n      summary: Create a new dashboard object\n      tags:\n        - Dashboards\n      operationId: sql-analytics-create-dashboard\n      requestBody:\n        description: Only the `name` parameter is required in the POST request JSON body. Other fields can be included when duplicating dashboards with this API. Databricks does not recommend designing dashboards exclusively using this API.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The title of this dashboard which appears in list views and at the top of the dashboard page.\n                  example: Sales Dashboard\n                  required: true\n                layout:\n                  type: array\n                  description: Currently unused. In a previous version of this API `layout` contained information for arranging widgets on the grid.\n                  example: []\n                  required: false\n                dashboard_filters_enabled:\n                  type: boolean\n                  description: In the web application, query filters that share a name are coupled to a single selection box if this value is true.\n                  default: false\n                  example: false\n                  required: false\n                widgets:\n                  type: array\n                  description: An array of widget objects. A complete description of widget objects can be found in the response to [Retrieve A Dashboard Definition](#operation/sql-analytics-fetch-dashboard). Databricks does not recommend creating new widgets via this API. \n                  required: false\n                is_trashed:\n                  type: boolean\n                  description: Whether the dashboard is trashed. Trashed dashboards won't appear in list views.\n                  example: false\n                  required: false\n                is_draft:\n                  type: boolean\n                  description: Draft dashboards only appear in list views for their owners.\n                  is_draft: true\n                  required: false\n                tags:\n                  type: array\n                  required: false\n                  items:\n                    anyOf:\n                      - $ref: \"#/components/schemas/tag-string\"\n\n\n        refresh_schedules:\n          type: array\n          description: Current undocumented while back-end dashboard refresh is under development.\n          example: []\n        is_favorite:\n          type: boolean\n          description: \n            \"Whether this query object should appear in the current user's favorites list. The application uses this flag to determine whether or not the \\\"favorite star \\\" should be colored.\"\n\n      responses:\n        200:\n          summary: \"A dashboard object was successfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/dashboard-object\"\n  /dashboards/{dashboardId}:\n    get:\n      summary: Retrieve a dashboard definition\n      description: Returns a JSON representation of a dashboard object, including its visualization and query objects.\n      operationId: sql-analytics-fetch-dashboard\n      tags:\n        - Dashboards\n      responses:\n        200:\n          summary: \"Dashboard fetched successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/dashboard-object\"\n    delete:\n      summary: \"Move a dashboard to the trash\"\n      description: \"Trashed dashboards do not appear in list views or searches and cannot be shared.\"\n      operationId: sql-analytics-trash-dashboard\n      tags:\n        - Dashboards\n      responses:\n        200:\n          summary: \"Dashboard successfully moved to trash\"\n          content:\n            application/json:\n              schema:\n                type: string\n                example: null\n  /dashboards/trash/{dashboardId}:\n    post:\n      summary: Restore a trashed dashboard\n      description: A restored dashboard appears in list views and searches and can be shared.\n      operationId: sql-analytics-restore-trashed-dashboard\n      tags:\n        - Dashboards\n      responses:\n        200:\n          summary: \"Dashboard restored successfully\"\n          content:\n            application/json:\n              schema:\n                type: string\n                example: null\n  /permissions/{objectType}/{objectId}:\n    description:\n      \"Fetches the access control list (ACL) for a specific object.\"\n    # ^^ endpoint description outside verb get/post/etc is not exposed in current redoc version\n    get:\n      tags:\n        - ACL / Permissions\n      summary: Get object access control list\n      description:\n        \"Returns a JSON representation of the access control list (ACL) for a specified object.\"\n      operationId: get-sql-analytics-object-permissions\n      parameters:\n        - name: objectType\n          in: path\n          required: true\n          description: The type of object permissions to check.\n          schema:\n            $ref: '#/components/schemas/object_type_plural'\n        - name: objectId\n          in: path\n          required: true\n          description: Object ID. An ACL will be returned for the object with this UUID.\n          schema:\n            $ref: '#/components/schemas/object_id'\n      responses:\n        200:\n          $ref: '#/components/responses/access-control-list-response'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  parameters:\n  schemas:\n    integer_max_100:\n      type: integer\n      example: 50\n    object_type:\n      type: string\n      description: A singular noun object type\n      enum:\n        - alert\n        - dashboard\n        - data_source\n        - query\n      example: query\n    object_type_plural:\n      type: string\n      description: Always a plural of the object type.\n      enum:\n        - alerts\n        - dashboards\n        - data_sources\n        - queries\n      example: queries\n    object_id:\n      type: string\n      description: A UUID generated by the application.\n      example: \"2cca1687-60ff-4886-a445-0230578c864d\"\n      format: uuid\n    object_type_and_id:\n      type: string\n      description: An object's type and UUID, separated by a forward slash (/) character.\n      format: \"\u003cobject-type\u003e/\u003cuuid\u003e\"\n      example: \"query/2cca1687-60ff-4886-a445-0230578c864d\"\n    permission_level:\n      type: string\n      enum:\n        - CAN_VIEW\n        - CAN_RUN\n        - CAN_MANAGE\n    user_acl:\n      type: object\n      properties:\n        user_name:\n          type: string\n          format: email\n        permission_level:\n          $ref: '#/components/schemas/permission_level'\n    group_acl:\n      type: object\n      properties:\n        group_name:\n          type: string\n          example: admins\n        permission_level:\n          $ref: '#/components/schemas/permission_level'\n    access_control_list:\n      type: array\n      items:\n        anyOf:\n          - $ref: '#/components/schemas/user_acl'\n          - $ref: '#/components/schemas/group_acl'\n      example:\n          - user_name: 'user@example.com'\n            permission: 'CAN_VIEW'\n          - group_name: 'admins'\n            permission: 'CAN_MANAGE'\n    query_interval_object:\n      type: object\n      properties:\n        interval:\n          description: Integer number of seconds between runs.\n          type: integer\n          example: 900\n        time:\n          description: For daily, weekly, and monthly runs, the time-of-day for run to start.\n          example: \"00:15\"\n          default: null\n        day_of_week:\n          description: For weekly runs, a day of the week for run to start.\n          example: \"Wednesday\"\n          default: null\n        until:\n          description: A date after which this schedule no longer applies.\n          example: \"2021-01-07\"\n          default: null\n    parameter-object:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The text displayed in a parameter picking widget.\n        name:\n          type: string\n          description: The literal parameter marker that appears between double curly braces in the query text.\n        type:\n          type: string\n          description: Parameters can have several different types.\n          enum:\n            - text\n            - datetime\n            - number\n            - dropdown-list\n          value:\n            type: string\n            description: The default value for this parameter.\n    text-parameter-value:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this parameter that appears between curly braces in the query definition.\n        value:\n          type: string\n          description: The parameter value as text.\n    number-parameter-value:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this parameter that appears between curly braces in the query definition.\n        value:\n          type: number\n          description: An integer or floating-point number.\n    dropdown-parameter-value:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this parameter that appears between curly braces in the query definition.\n        value:\n          oneOf:\n            - name: string-dropdown-value\n              type: string\n              example: \"param\"\n              description: \"If the dropdown parameter does not support multi-select, provide a single string value. If it supports multi-select, use the `Array` field.\"\n            - name: array-dropdown-value\n              type: array\n              items:\n                type: string\n                description: \"If the dropdown parameter supports multi-select then values can be passed as an array of strings. If it does not, use the `string` field.\"\n\n    date-parameter-value:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this parameter that appears between curly braces in the query definition.\n        value:\n          type: string\n          format: date-time\n          description: \"Date value in format as defined by RFC 3339, section 5.6. The required granularity of date and time depends on the resolution expected by the parameter: date, date and time, or date and time with seconds.\"\n          example: \"1991-08-03 09:21:21\"\n\n\n    user-object:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 899619779028913\n        name:\n          type: string\n          example: user@example.com\n        email:\n          type: string\n          format: email\n          example: user@example.com\n        profile_image_url:\n          type: string\n          format: url\n          description: The URL for the gravatar profile picture tied to this user's email address\n          example: https://www.gravatar.com/avatar/732f2b4824846f9a0253f233e0d79bf0?s=40\u0026d=identicon\n        is_db_admin:\n          type: boolean\n          description: Whether this user is an admin in the Databricks workspace.\n          example: true\n    tag-string:\n      type: string\n      description: Tags can be applied to dashboards and queries. They are used for filtering list views.\n      example: \"Payroll\"\n    visualization-object:\n      type: object\n      description: \n        \"The visualization description API changes frequently and is unsupported. You can duplicate a visualization by copying description objects received _from the API_ and then using them to create a new one with a POST request to the same endpoint. Databricks does not recommend constructing ad-hoc visualizations entirely in JSON.\"\n      properties:\n        id:\n          type: integer\n          description: The integer ID for this visualization.\n          example: 29830\n        type:\n          type: string\n          example: TABLE\n          description: \"The type of visualization: chart, table, pivot table, and so on.\"\n        name:\n          type: string\n          description: The name of the visualization that appears on dashboards and the query screen.\n          example: Chart\n        description:\n          type: string\n          description: A short description of this visualization. This is not displayed in the UI.\n          example: A table of data from this query.\n        options:\n          type: object\n          description: The options object varies widely from one visualization type to the next and is unsupported. Databricks does not recommend modifying visualization settings in JSON.\n        updated_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n    query-object:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: dee5cca8-1c79-4b5e-a711-e7f9d241bdf6\n        latest_query_data_id:\n          type: string\n          format: uuid\n          description: If there is a cached result for this query and user, this field includes the query result ID. If this query uses parameters, this field is always null.\n          example: ab281b1a-527a-4789-bcf7-cfc3ba08d910\n        name:\n          type: string\n          description: The title of this query that appears in list views, widget headings, and on the query page.\n          example: \"Orders by month by customer\"\n        description:\n          type: string\n          description: General description that conveys additional information about this query such as usage notes.\n          example: \"Summarizes total order dollars for customers in the Europe/Asia region.\"\n        query:\n          type: string\n          description: \"The text of the query to be run.\"\n          example: \"SELECT field FROM table WHERE field = {{ param }}\"\n        query_hash:\n          type: string\n          description: A SHA-256 hash of the query text along with the authenticated user ID.\n          example: 08314a3361c4795528acd1139a2b7c58\n        schedule:\n          $ref: '#/components/schemas/query_interval_object'\n        api_key:\n          type: string\n          description: \n            \"This field is unsupported and is for internal use only.\"\n        is_trashed:\n          type: boolean\n          description:  Whether the query is trashed. Trashed queries won't appear in list views or run on a schedule.\n        is_draft:\n          type: boolean\n          description: Whether the query is a draft. Draft queries only appear in list views for their owners. Visualizations from draft queries cannot appear on dashboards.\n        updated_at:\n          type: string\n          format: date-time\n          description: The timestamp at which this query was last updated.\n          example: \"2021-01-07T20:29:24.289Z\"\n        created_at:\n          type: string\n          format: date-time\n          description: The timestamp when this query was created.\n          example: \"2020-12-15T18:39:15.837Z\"\n        data_source_id: \n          type: string\n          format: UUID\n          description: Data Source ID. The UUID that uniquely identifies this data source across the API.\n          example: 0c205e24-5db2-4940-adb1-fb13c7ce960b\n        options:\n          type: object\n          properties:\n            parameters:\n              type: array\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/parameter-object\"\n        version:\n          type: string\n          description: Unused field.\n        tags:\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/tag-string\"\n        is_safe:\n          type: boolean\n          description:\n            \"Text parameter types are not safe from SQL injection for all types of data source. Set this Boolean parameter to `true` if a query either does not use any text type parameters or uses a data source type where text type parameters are handled safely.\"\n          example: false\n        user_id:\n          type: integer\n          description: The ID of the user who created this query.\n          example: 899619779028913\n        last_modified_by_id:\n          type: integer\n          description: The ID of the user who last saved changes to this query.\n          example: 899619779028913\n        visualizations:\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/visualization-object\"\n        is_favorite:\n          type: boolean\n          description: \n            \"Whether this query object appears in the current user's favorites list. This flag determines whether the star icon for favorites is colored in.\"\n          example: true\n        user:\n          $ref: \"#/components/schemas/user-object\"\n        last_modified_by:\n          $ref: \"#/components/schemas/user-object\"\n        can_edit:\n          type: boolean\n          description: Describes whether the authenticated user may edit the definition of this query.\n          example: true\n        permission_tier:\n          $ref: \"#/components/schemas/permission_level\"\n    query-post-content:\n      type: object\n      properties:\n        data_source_id:\n          description: The ID of the data source where this query will run.\n          type: uuid\n          example: 2cca1687-60ff-4886-a445-0230578c864d\n        query:\n          description: The text of the query.\n          type: string\n          example: \n            \"SELECT field FROM table WHERE field = {{ param }}\"\n        name:\n          description: The name or title of this query to display in list views.\n          type: string\n          example: \"Orders by month by customer\"\n        description:\n          description: General description that can convey additional information about this query such as usage notes.\n          type: string\n          example:\n            \"Summarizes total order dollars for customers in the Europe/Asia region.\"\n        schedule:\n          description: \n            \"JSON object that describes the scheduled execution frequency. A schedule object includes `interval`, `time`, `day_of_week`, and `until` fields. If a scheduled is supplied, then only `interval` is required. All other field can be `null`.\"\n          type: object\n          example:\n            interval: 86400\n            time: \"06:15\"\n            day_of_week: \"Wednesday\"\n            until: \"1991-08-03\"\n          schema:\n            $ref: \"#/components/schemas/query_interval_object\"\n        options:\n          description: \n            \"Exclusively used for storing a list parameter definitions. A parameter is an object with `title`, `name`, `type`, and `value` properties. The `value` field here is the default value. It can be overridden at runtime.\"\n          type: object\n          example:\n            parameters:\n              - title: customer\n                name: param\n                type: text\n                value: acme\n        visualizations:\n          description: \"An array of visualization objects.\"\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/visualization-object\"\n    query-result-column-description:\n      type: object\n      properties:\n        name:\n          type: string\n        friendly_name:\n          type: string\n        type:\n          type: string\n      example:\n        name: orig_date\n        friendly_name: Original Date\n        type: datetime\n    query-result-row-description:\n      type: object\n      description: A JSON object whose keys are the names of each column in this query result and whose values constitute a single row of the result.\n      example:\n        - orig_date: 1991-08-03\n          value: 0\n    query-result-object:\n      type: object\n      description: A JSON response body that contains a serialized result table.\n      properties:\n        query_result:\n          type: object\n          properties:\n            id:\n              type: string\n              format: UUID\n              description: The UUID for this cached query result. Each cached result is keyed with the current user name and query text.\n              example: 06192bfa-cd91-4b57-9a81-df98be5570c2\n            query_hash:\n              type: string\n              description: A SHA-256 hash of the query text that generated this result, including actual parameter values.\n              example: 08314a3361c4795528acd1139a2b7c58\n            query:\n              type: string\n              description: The complete query that generated this result, including parameter values used at runtime.\n              example: \"SELECT field FROM table WHERE field = 100\"\n            data:\n              type: object\n              description: Serialized tabular data from this query.\n              properties:\n                columns:\n                  type: array\n                  items:\n                    anyOf:\n                      - $ref: \"#/components/schemas/query-result-column-description\"\n                rows:\n                  type: array\n                  items:\n                    anyOf:\n                      - $ref: \"#/components/schemas/query-result-row-description\"\n            data_source_id:\n              type: string\n              format: UUID\n              example: af574c41-045c-4d50-b078-67d78b766128\n            runtime:\n              type: float\n              description: Query run time in seconds.\n              example: 0.850272178649902\n            retrieved_at:\n              type: string\n              format: date-time\n              description: Timestamp when this result was retreived from the database.\n              example: 1991-08-03T13:02:35.916Z\n    job-object:\n      type: object\n      description: A JSON object that represents the status of a query run job.\n      properties:\n        id:\n          type: string\n          format: \"org_id:user_id:query_uuid\"\n          description: \"A tuple of the organization ID, user ID, and query ID.\"\n          example: \"org:6051921418418893:user:899619779028913:id:cb9a11e8-68c4-4531-8d0c-104b921f7306\"\n        updated_at:\n          type: string\n          format: date-time\n          description: \"Timestamp when this job was last updated by SQL Analytics.\"\n        status:\n          type: integer\n          example: 3\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n          description: \"\n\n      1. `PENDING` (waiting to run)\n\n      2. `STARTED` (running)\n\n      3. `SUCCESS`\n\n      4. `FAILURE`\n\n      5. `CANCELLED`\n          \"\n        error:\n          type: string\n          description: \"Error message. This is `null` unless the job has a `FAILURE` status (code 4). This is the error that resulted in the failure.\"\n          example: null\n        result:\n          type: string\n          format: UUID\n          description: \"Result ID. This is `null` unless the job has a `SUCCESS` status (code 3). This is the UUID for the query result object that was cached following this query run.\"\n          example: 7ae47ad7-c401-4c2e-884e-51249058b9b3\n        query_result_id:\n          type: string\n          format: UUID\n          description: Same as `result` above.\n          example: 7ae47ad7-c401-4c2e-884e-51249058b9b3\n    dashboard-object:\n      type: object\n      description: A JSON representing a dashboard containing widgets of visualizations and text boxes.\n      properties:\n        id:\n          type: string\n          format: UUID\n          description: The ID for this dashboard.\n          example: 4e443c27-9f61-4f2e-a12d-ea5668460bf1\n        slug:\n          type: string\n          description: URL slug. Usually mirrors the query name with dashes (`-`) instead of spaces. Appears in the URL for this query.\n          example: sales-dashboard\n        name:\n          type: string\n          description: The title of the dashboard that appears in list views and at the top of the dashboard page.\n          example: Sales Dashboard\n        user_id:\n          type: integer\n          description: The ID of the user that created and owns this dashboard.\n          example: 7878537523656153\n        layout:\n          type: array\n          description: Unused field.\n          example: []\n        dashboard_filters_enabled:\n          type: boolean\n          description: In the web application, query filters that share a name are coupled to a single selection box if this value is `true`.\n          default: false\n          example: false\n        widgets:\n          $ref: \"#/components/schemas/widget-object\"\n        is_trashed:\n          type: boolean\n          description: Whether a dashboard is trashed. Trashed dashboards won't appear in list views.\n        is_draft:\n          type: boolean\n          description: Whether a dashboard is a draft. Draft dashboards only appear in list views for their owners.\n        tags:\n          type: array\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/tag-string\"\n        updated_at:\n          type: string\n          format: date-time\n          description: \"Timestamp when this dashboard was last updated.\"\n        created_at:\n          type: string\n          format: date-time\n          description: Timestamp when this dashboard was created.\n        version:\n          type: string\n          description: Unused field.\n        refresh_schedules:\n          type: array\n          description: Unsupported field.\n          example: []\n        is_favorite:\n          type: boolean\n          description: \n            \"Whether this query object appears in the current user's favorites list. This flag determines whether the star icon for favorites is colored in.\"\n        can_edit:\n          type: boolean\n          description: Whether the authenticated user can edit the query definition.\n          example: true\n        permission_tier:\n          $ref: \"#/components/schemas/permission_level\"\n        user:\n          $ref: \"#/components/schemas/user-object\"\n    widget-object:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique ID for this widget.\n          example: 11536\n        width:\n          type: integer\n          description: Unused field.\n          example: 1\n        options:\n          type: object\n          properties:\n            parameterMappings:\n              type: object\n              description: How parameters used by the visualization in this widget relate to other widgets on the dashboard. Databricks does not recommend modifying this definition in JSON.\n              example:\n                param:\n                  name: param\n                  type: dashboard-level\n                  mapTo: param\n                  value: null\n                  title: This is a parameter\n            isHidden:\n              type: boolean\n              description: Whether this widget is hidden on the dashboard.\n              default: false\n              example: false\n            position:\n              type: object\n              description: Coordinates of this widget on a dashboard. This portion of the API changes frequently and is unsupported.\n            dashboard_id:\n              type: text\n              format: UUID\n              description: The dashboard ID to which this widget belongs. Each widget can belong to one dashboard.\n              example: a6d3a7a9-693d-472f-96b2-912622c2ffcd\n            text:\n              type: text\n              description: If this is a textbox widget, the application displays this text. This field is ignored if the widget contains a visualization in the `visualization` field.\n              default: null\n            updated_at:\n              type: text\n              format: date-time\n              description: Timestamp of the last time this object was updated.\n            created_at:\n              type: text\n              format: date-time\n              description: Timestamp when this object was created\n        visualization:\n          $ref: \"#/components/schemas/visualization-object\"\n\n\n  responses:\n    access-control-list-response:\n      description: \"A JSON representation of the access control list (ACL) for an object.\"\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              object_id:\n                $ref: '#/components/schemas/object_type'\n              object_type:\n                $ref: '#/components/schemas/object_type_and_id'\n              access_control_list:\n                $ref: '#/components/schemas/access_control_list'\n    NotFound:\n      description: Path not found\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                description: Human-readable error message that describes the cause of the error.\n                example:  The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n                description: Human-readable error message that describes the cause of the error.\n                example:  The browser (or proxy) sent a request that this server could not understand.\n    Forbidden:\n      description: Forbidden request\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n            format: html\n            description: An HTML page that describes the cause of the error.\n    ServerError:\n      description: Server error\n      content:\n        text/plain; charset=utf-8:\n          schema:\n            type: string\n            format: html\n            description: An HTML error page that indicates a general server error but does not mention the cause of the error.\n",
			"canonicalURL": "/github.com/gbrueckl/Databricks.API.PowerShell@d1d54858d69d4f5c82f2ce110e01070a11ea05bd/-/blob/Docs/OpenAPISpecs/queries-dashboards-azure.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gbrueckl/Databricks.API.PowerShell/blob/d1d54858d69d4f5c82f2ce110e01070a11ea05bd/Docs/OpenAPISpecs/queries-dashboards-azure.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:183: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}