{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/laxamentumtech/audnexus"
		},
		"file": {
			"name": "v0.3.3.yaml",
			"size": 0,
			"path": "docs/spec/v0.3.3.yaml",
			"byteSize": 9043,
			"content": "openapi: 3.0.0\ninfo:\n  title: Audnexus\n  description: |\n    Aggegate audiobook data\n  contact:\n    url: https://github.com/djdembeck/Audnexus.bundle/issues\n  license:\n    name: GPL v3\n    url: https://www.gnu.org/licenses/gpl-3.0.en.html\n  version: 0.3.3\nexternalDocs:\n  description: Find out more about Audnexus\n  url: https://github.com/djdembeck/audnexus\nservers:\n  - url: https://api.audnex.us\npaths:\n  /books/{ASIN}:\n    get:\n      tags:\n        - book\n      summary: Find book by ID\n      description: Returns a single book\n      operationId: getBookById\n      parameters:\n        - name: ASIN\n          in: path\n          description: ID of book to return\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: seedAuthors\n          in: query\n          description: Whether to seed authors of book\n          required: false\n          explode: false\n          schema:\n            type: number\n            enum: [0, 1]\n        - name: update\n          in: query\n          description: Have server check for updated data upstream\n          required: false\n          explode: false\n          schema:\n            type: number\n            enum: [0, 1]\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Book'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Book'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Book not found\n    delete:\n      tags:\n        - book\n      summary: Deletes a book\n      operationId: deleteBook\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: ASIN\n          in: path\n          description: Book id to delete\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Book not found\n  /books/{ASIN}/chapters:\n    get:\n      tags:\n        - book\n      summary: Find chapters by ASIN\n      description: Returns a single book's chapters\n      operationId: getChapterById\n      parameters:\n        - name: ASIN\n          in: path\n          description: ID of book to return\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Chapter'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Chapter'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Chapters not found\n  /authors:\n    get:\n      tags:\n        - author\n      summary: Find authors by name\n      description: Returns a list of authors\n      operationId: searchAuthorByName\n      parameters:\n        - name: name\n          in: query\n          description: Name to search with\n          required: true\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Author'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Author'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Author not found\n  /authors/{ASIN}:\n    get:\n      tags:\n        - author\n      summary: Find author by ID\n      description: Returns a single author\n      operationId: getAuthorById\n      parameters:\n        - name: ASIN\n          in: path\n          description: ID of author to return\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Author'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Author'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Author not found\n    delete:\n      tags:\n        - author\n      summary: Deletes a author\n      operationId: deleteAuthor\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: ASIN\n          in: path\n          description: Author id to delete\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Author not found\ncomponents:\n  schemas:\n    Author:\n      required:\n        - asin\n        - description\n        - name\n      type: object\n      properties:\n        aliases:\n          type: array\n          items:\n            type: string\n        asin:\n          type: string\n        birthDate:\n          type: string\n          format: date\n        books:\n          type: array\n          items:\n            $ref: '#/components/schemas/Book'\n        description:\n          type: string\n        genres:\n          type: array\n          items:\n            $ref: '#/components/schemas/Genre'\n        image:\n          type: string\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Author_links'\n        location:\n          type: string\n        name:\n          type: string\n        series:\n          type: string\n    Book:\n      required:\n        - asin\n        - description\n        - language\n        - publisherName\n        - releaseDate\n        - summary\n        - title\n      type: object\n      properties:\n        asin:\n          type: string\n        authors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n        description:\n          type: string\n        formatType:\n          type: string\n        genres:\n          type: array\n          items:\n            $ref: '#/components/schemas/Genre'\n        image:\n          type: string\n        language:\n          type: string\n        narrators:\n          type: array\n          items:\n            $ref: '#/components/schemas/Person'\n        publisherName:\n          type: string\n        rating:\n          multipleOf: 0.1\n          type: number\n        releaseDate:\n          type: string\n          format: date\n        runtimeLengthMin:\n          type: number\n        seriesPrimary:\n          $ref: '#/components/schemas/Series'\n        seriesSecondary:\n          $ref: '#/components/schemas/Series'\n        subtitle:\n          type: string\n        summary:\n          type: string\n        title:\n          type: string\n      xml:\n        name: Book\n    Chapter:\n      required:\n        - asin\n        - brandIntroDurationMs\n        - brandOutroDurationMs\n        - chapters\n        - isAccurate\n        - runtimeLengthMs\n        - runtimeLengthSec\n      type: object\n      properties:\n        asin:\n          type: string\n        brandIntroDurationMs:\n          type: number\n        brandOutroDurationMs:\n          type: number\n        chapters:\n          type: array\n          items:\n            $ref: '#/components/schemas/Chapter_chapters'\n        isAccurate:\n          type: boolean\n        runtimeLengthMs:\n          type: number\n        runtimeLengthSec:\n          type: number\n    Genre:\n      required:\n        - asin\n        - name\n        - type\n      type: object\n      properties:\n        asin:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n      xml:\n        name: Genre\n    Person:\n      type: object\n      properties:\n        asin:\n          type: string\n        name:\n          type: string\n      xml:\n        name: Person\n    Series:\n      required:\n        - name\n      type: object\n      properties:\n        asin:\n          type: string\n        name:\n          type: string\n        position:\n          type: string\n      xml:\n        name: Series\n    Author_links:\n      properties:\n        link:\n          type: string\n        type:\n          type: string\n    Chapter_chapters:\n      type: object\n      properties:\n        lengthMs:\n          type: number\n        startOffsetMs:\n          type: number\n        startOffsetSec:\n          type: number\n        title:\n          type: string\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal number 0.1 into Go struct field Schema.multipleOf of type int"
}