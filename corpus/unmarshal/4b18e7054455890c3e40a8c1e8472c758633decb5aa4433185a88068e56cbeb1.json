{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/helxplatform/dug"
		},
		"file": {
			"name": "api-schema.yaml",
			"size": 0,
			"path": "src/dug/conf/api-schema.yaml",
			"byteSize": 3994,
			"content": "openapi: 3.0.1\ninfo:\n  description: Exploratory bioinformatic datascience via software defined distributed systems.\n  version: 0.0.1\n  title: \n  contact:\n    email: scox@renci.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nexternalDocs:\n  description: Exploratory bioinformatic datascience via software defined distributed systems.\n  url: 'https://github.com/heliumplusdatastage/tycho'\ntags:\n  - name: message\n    description: Request compute services.\n    externalDocs:\n      description: Documentation for the compute request.\n      url: 'https://github.com/heliumplusdatastage/tycho#request'\npaths:\n  /system/start:\n    post:\n      summary: Compute service request.\n      description: ''\n      operationId: start\n      requestBody:\n        description: Compute service request.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/System'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n        '400':\n          description: Invalid status value\n      x-swagger-router-controller: swagger_server.controllers.query_controller\n      \ncomponents:\n  schemas:\n    Limits:\n      type: object\n      properties:\n        cpus:\n          type: string\n          example: \"0.3\"\n          description: Number of CPUs requested. May be a fractional value.\n        memory:\n          type: string\n          example: \"512M\"\n          description: Amount of memory to request for this container.\n    Port:\n      type: object\n      properties:\n        containerPort:\n          type: integer\n          example: 80\n          description: Container port to expose\n    EnvironmentVariable:\n      type: object\n      properties:\n        name:\n          type: string\n          example: X\n          description: Name of an environment variable\n        value:\n          type: string\n          example: http://example.org\n          description: A string value.\n    Container:\n      type: object\n      properties:\n        name:\n          type: string\n          example: web-server\n          description: Name of the container to execute.\n        image:\n          type: string\n          example: nginx:1.9.1\n          description: Name and version of a docker image to execute.\n        limits:\n          type: array\n          items:\n            $ref: '#/components/schemas/Limits'\n          example:\n            - cpus: \"0.3\"\n              memory: \"512M\"\n        command:\n          type: array\n          required: false\n          items:\n            type: string\n        env:\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentVariable'\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/Port'\n    System:\n      type: object\n      properties:\n        name:\n          type: string\n          example: some-stack\n          description: Description of the system provided and defined by this set of components.\n        containers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Container'            \n    Response:\n      type: object\n      properties:\n        status:\n          type: string\n          example: success | error\n          description: Status code denoting the outcome of the activity.\n        message:\n          type: string\n          example: Job succeeded.\n          description: Description of the result.\n        result:\n          type: object\n    DeleteRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test-app\n          description: Identifier of system to delete\n    StatusRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test-app\n          nullable: true\n          description: Identifier of system to list\n",
			"canonicalURL": "/github.com/helxplatform/dug@87b374dd597fde6cdd3c65663148a294fa371f88/-/blob/src/dug/conf/api-schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/helxplatform/dug/blob/87b374dd597fde6cdd3c65663148a294fa371f88/src/dug/conf/api-schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!bool `false` into []string"
}