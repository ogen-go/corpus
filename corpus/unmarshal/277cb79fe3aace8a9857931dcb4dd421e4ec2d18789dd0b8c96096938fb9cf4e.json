{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SeUniVr/RestTestGen"
		},
		"file": {
			"name": "powertools_solved.json",
			"size": 0,
			"path": "testResults/test20/solved/powertools_solved.json",
			"byteSize": 458191,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"servers\": [\n    {\n      \"url\": \"https://connect.apptigent.com/api/utilities\"\n    }\n  ],\n  \"info\": {\n    \"contact\": {\n      \"email\": \"support@apptigent.com\",\n      \"name\": \"Customer Support\",\n      \"url\": \"https://www.apptigent.com/help/\"\n    },\n    \"description\": \"Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL\\u0027s, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.\",\n    \"title\": \"PowerTools Developer\",\n    \"version\": \"2021.1.01\",\n    \"x-apisguru-categories\": [\n      \"developer_tools\"\n    ],\n    \"x-ibm-name\": \"powertools-developer\",\n    \"x-logo\": {\n      \"url\": \"https://api.apis.guru/v2/cache/logo/https_portal.apptigent.com_sites_portal.apptigent.com_files_api_powertools-developer.png\"\n    },\n    \"x-origin\": [\n      {\n        \"format\": \"openapi\",\n        \"url\": \"https://portal.apptigent.com/sites/portal.apptigent.com/files/v3-powertools-developer-2021-1-01.json\",\n        \"version\": \"3.0\"\n      }\n    ],\n    \"x-providerName\": \"apptigent.com\"\n  },\n  \"security\": [\n    {\n      \"apiKeyHeader\": []\n    }\n  ],\n  \"tags\": [\n    {\n      \"description\": \"Arrays of base values (strings and numbers).\",\n      \"name\": \"Collections\"\n    },\n    {\n      \"description\": \"Data conversion operations.\",\n      \"name\": \"Data\"\n    },\n    {\n      \"description\": \"Date and time operations.\",\n      \"name\": \"DateTime\"\n    },\n    {\n      \"description\": \"Financial calculations and conversions.\",\n      \"name\": \"Finance\"\n    },\n    {\n      \"description\": \"Mathematical calculations and conversions.\",\n      \"name\": \"Math\"\n    },\n    {\n      \"description\": \"String manipulation, parsing, conversion and related operations.\",\n      \"name\": \"Text\"\n    },\n    {\n      \"description\": \"File operations.\",\n      \"name\": \"Files\"\n    }\n  ],\n  \"paths\": {\n    \"/AddToCollection\": {\n      \"post\": {\n        \"description\": \"Add an item to a collection\",\n        \"operationId\": \"AddToCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"index\": \"0\",\n                  \"input\": [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                  ],\n                  \"item\": \"d\",\n                  \"items\": \"\"\n                },\n                \"properties\": {\n                  \"index\": {\n                    \"description\": \"Index position for operation (leave blank to specify end of collection)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Index\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of values or objects to modify\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"item\": {\n                    \"description\": \"Item (for multiple items, leave blank and use Items)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Item\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"items\": {\n                    \"description\": \"Items (Collection, for a single item leave blank and use Item)\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Items\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionModify\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection modification parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Modified collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Modified collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionResult\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Add to collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionModify\"\n      }\n    },\n    \"/CSVtoJSON\": {\n      \"post\": {\n        \"description\": \"Convert a CSV string to a JSON array\",\n        \"operationId\": \"CsvToJson\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"header\": true,\n                  \"input\": \"Property1,Property2,Property3\\r\\nvalue,value,value\\r\\nvalue,value,value\"\n                },\n                \"properties\": {\n                  \"header\": {\n                    \"default\": true,\n                    \"description\": \"Include header row\",\n                    \"type\": \"boolean\",\n                    \"x-ms-summary\": \"Header\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"CSV string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCsvConversionJSON\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - CSV to JSON\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"csvConversionJSON\"\n      }\n    },\n    \"/CalculateAbsolute\": {\n      \"post\": {\n        \"description\": \"Calculate the absolute value of a number\",\n        \"operationId\": \"CalculateAbsolute\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Absolute\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateAddition\": {\n      \"post\": {\n        \"description\": \"Calculate the sum of two numbers\",\n        \"operationId\": \"CalculateAddition\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Addition\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculateAverage\": {\n      \"post\": {\n        \"description\": \"Calculate the average of two or more numbers\",\n        \"operationId\": \"CalculateAverage\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ]\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateSeries\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate average\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/CalculateCosine\": {\n      \"post\": {\n        \"description\": \"Calculate the cosine value of an angle\",\n        \"operationId\": \"CalculateCosine\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Cosine\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateDivision\": {\n      \"post\": {\n        \"description\": \"Calculate the quotient of two numbers\",\n        \"operationId\": \"CalculateDivision\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Division\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculateLogarithm\": {\n      \"post\": {\n        \"description\": \"Calculate the logarithm of a number\",\n        \"operationId\": \"CalculateLogarithm\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Logarithm\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateMedian\": {\n      \"post\": {\n        \"description\": \"Calculate the median of two or more numbers\",\n        \"operationId\": \"CalculateMedian\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ]\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateSeries\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate median\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/CalculateMinMax\": {\n      \"post\": {\n        \"description\": \"Calculate the minimum or maximum value in a sequence of numbers\",\n        \"operationId\": \"CalculateMinMax\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ],\n                  \"type\": \"Minimum\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"type\": {\n                    \"default\": \"Minimum\",\n                    \"description\": \"Minimum or Maximum\",\n                    \"enum\": [\n                      \"Minimum\",\n                      \"Maximum\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Min or Max\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateMinMax\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate minimum or maximum\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/CalculateModulo\": {\n      \"post\": {\n        \"description\": \"Calculate the remainder of dividing two numbers\",\n        \"operationId\": \"CalculateModulo\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Modulo\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculateMultiplication\": {\n      \"post\": {\n        \"description\": \"Calculate the product of two numbers\",\n        \"operationId\": \"CalculateMultiplication\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Multiplication\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculateNthRoot\": {\n      \"post\": {\n        \"description\": \"Calculate the n-th root of a number\",\n        \"operationId\": \"CalculateNthRoot\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Nth Root\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculatePower\": {\n      \"post\": {\n        \"description\": \"Raise number to a specified power\",\n        \"operationId\": \"CalculatePower\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 5.53,\n                  \"power\": 4.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Number to raise\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Number\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"power\": {\n                    \"description\": \"Power\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Power\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculatePower\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Power calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate power\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculatePower\"\n      }\n    },\n    \"/CalculateSine\": {\n      \"post\": {\n        \"description\": \"Calculate the sine value of an angle\",\n        \"operationId\": \"CalculateSine\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Sine\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateSquareRoot\": {\n      \"post\": {\n        \"description\": \"Calculate the square root of a number\",\n        \"operationId\": \"CalculateSquareRoot\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Square Root\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateSubtraction\": {\n      \"post\": {\n        \"description\": \"Calculate the difference between two numbers\",\n        \"operationId\": \"CalculateSubtraction\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 4.0,\n                  \"value\": 2.0\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Primary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Secondary Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumbers\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Subtraction\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumbers\"\n      }\n    },\n    \"/CalculateSum\": {\n      \"post\": {\n        \"description\": \"Calculate the sum of two or more numbers\",\n        \"operationId\": \"CalculateSum\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ]\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateSeries\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate sum\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/CalculateTangent\": {\n      \"post\": {\n        \"description\": \"Calculate the tangent value of an angle\",\n        \"operationId\": \"CalculateTangent\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Number calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate Tangent\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/CalculateVariance\": {\n      \"post\": {\n        \"description\": \"Calculate the statistical variance of two or more numbers\",\n        \"operationId\": \"CalculateVariance\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ]\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateSeries\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate variance\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/CollectionContainsNumber\": {\n      \"post\": {\n        \"description\": \"Determine if a collection contains a specific number\",\n        \"operationId\": \"CollectionContainsNumber\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    1.25,\n                    10.5,\n                    20.75,\n                    51.25,\n                    119.6,\n                    301.25\n                  ],\n                  \"match\": \"1.25,\",\n                  \"type\": \"Decimal\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection of strings to search\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"Number to match\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Number\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"type\": {\n                    \"default\": \"Integer\",\n                    \"description\": \"Type of number - integer or decimal\",\n                    \"enum\": [\n                      \"Integer\",\n                      \"Decimal\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Number Type\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSearchNumeric\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection search parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"item\": 1.25,\n                    \"items\": [\n                      1.25,\n                      2.5,\n                      3.75\n                    ],\n                    \"status\": false\n                  },\n                  \"properties\": {\n                    \"item\": {\n                      \"description\": \"First Value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"First Value\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"items\": {\n                      \"description\": \"All Values\",\n                      \"items\": {\n                        \"type\": \"number\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"All Values\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"status\": {\n                      \"description\": \"Success\",\n                      \"type\": \"boolean\",\n                      \"x-ms-summary\": \"Success\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Contains number\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSearch\"\n      }\n    },\n    \"/CollectionContainsString\": {\n      \"post\": {\n        \"description\": \"Determine if any items in a collection contain a specific string\",\n        \"operationId\": \"CollectionContainsString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"ignorecase\": true,\n                  \"input\": [\n                    \"the\",\n                    \"brown\",\n                    \"cow \"\n                  ],\n                  \"match\": \"cow\",\n                  \"trim\": true\n                },\n                \"properties\": {\n                  \"ignorecase\": {\n                    \"description\": \"Ignore case when performing comparison\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Ignore Case\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of strings to search\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"Text to match\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"trim\": {\n                    \"description\": \"Trim white space from comparison string\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Trim\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSearch\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection search parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"item\": \"string\",\n                    \"items\": [\n                      \"string\"\n                    ],\n                    \"status\": false\n                  },\n                  \"properties\": {\n                    \"item\": {\n                      \"description\": \"First Value\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"First Value\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"items\": {\n                      \"description\": \"All Values\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"All Values\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"status\": {\n                      \"description\": \"Success\",\n                      \"type\": \"boolean\",\n                      \"x-ms-summary\": \"Success\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Contains string\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSearch\"\n      }\n    },\n    \"/CollectionEndsWithString\": {\n      \"post\": {\n        \"description\": \"Determine if any items in a collection end with a specific string\",\n        \"operationId\": \"CollectionEndsWithString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"ignorecase\": true,\n                  \"input\": [\n                    \"the\",\n                    \"brown\",\n                    \"cow \"\n                  ],\n                  \"match\": \"cow\",\n                  \"trim\": true\n                },\n                \"properties\": {\n                  \"ignorecase\": {\n                    \"description\": \"Ignore case when performing comparison\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Ignore Case\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of strings to search\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"Text to match\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"trim\": {\n                    \"description\": \"Trim white space from comparison string\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Trim\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSearch\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection search parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"item\": \"string\",\n                    \"items\": [\n                      \"string\"\n                    ],\n                    \"status\": false\n                  },\n                  \"properties\": {\n                    \"item\": {\n                      \"description\": \"First Value\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"First Value\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"items\": {\n                      \"description\": \"All Values\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"All Values\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"status\": {\n                      \"description\": \"Success\",\n                      \"type\": \"boolean\",\n                      \"x-ms-summary\": \"Success\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Ends with string\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSearch\"\n      }\n    },\n    \"/CollectionStartsWithString\": {\n      \"post\": {\n        \"description\": \"Determine if any items in a collection start with a specific string\",\n        \"operationId\": \"CollectionStartsWithString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"ignorecase\": true,\n                  \"input\": [\n                    \"the\",\n                    \"brown\",\n                    \"cow \"\n                  ],\n                  \"match\": \"cow\",\n                  \"trim\": true\n                },\n                \"properties\": {\n                  \"ignorecase\": {\n                    \"description\": \"Ignore case when performing comparison\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Ignore Case\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of strings to search\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"Text to match\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"trim\": {\n                    \"description\": \"Trim white space from comparison string\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Trim\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSearch\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection search parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"item\": \"string\",\n                    \"items\": [\n                      \"string\"\n                    ],\n                    \"status\": false\n                  },\n                  \"properties\": {\n                    \"item\": {\n                      \"description\": \"First Value\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"First Value\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"items\": {\n                      \"description\": \"All Values\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"All Values\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"status\": {\n                      \"description\": \"Success\",\n                      \"type\": \"boolean\",\n                      \"x-ms-summary\": \"Success\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Starts with string\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSearch\"\n      }\n    },\n    \"/CollectionToJSON\": {\n      \"post\": {\n        \"description\": \"Convert a collection to a named JSON object\",\n        \"operationId\": \"CollectionToJSON\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    \"a\",\n                    \"b\",\n                    \"c\",\n                    \"d\",\n                    \"e\"\n                  ],\n                  \"name\": \"Items\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection containing strings to convert\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"name\": {\n                    \"description\": \"Collection name\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Name\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionConversion\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Collection to JSON\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionConversion\"\n      }\n    },\n    \"/CollectionToXML\": {\n      \"post\": {\n        \"description\": \"Convert a collection to an XML string\",\n        \"operationId\": \"CollectionToXml\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"child\": \"Item\",\n                  \"input\": [\n                    \"a\",\n                    \"b\",\n                    \"c\",\n                    \"d\",\n                    \"e\"\n                  ],\n                  \"root\": \"Items\"\n                },\n                \"properties\": {\n                  \"child\": {\n                    \"description\": \"Name of child XML node(s)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Child Node Name\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection containing strings to convert\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"root\": {\n                    \"description\": \"Name of root XML node\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Root Node Name\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionConversionXML\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Collection to XML\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionConversionXML\"\n      }\n    },\n    \"/CompareStrings\": {\n      \"post\": {\n        \"description\": \"Perform a comparison of two strings\",\n        \"operationId\": \"CompareStrings\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"compare\": \"dog\",\n                  \"input\": \"Cow\",\n                  \"lower\": true,\n                  \"trim\": true\n                },\n                \"properties\": {\n                  \"compare\": {\n                    \"description\": \"Comparison string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Original string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"lower\": {\n                    \"description\": \"Convert strings to lowercase before comparison\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Lowercase\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"trim\": {\n                    \"description\": \"Trim strings before comparison\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Trim\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputStringComparison\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Compare strings\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringComparison\"\n      }\n    },\n    \"/ContainsString\": {\n      \"post\": {\n        \"description\": \"Determine if a string contains another string\",\n        \"operationId\": \"ContainsString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"find\": \"cow\",\n                  \"input\": \"The brown cow\",\n                  \"lower\": true\n                },\n                \"properties\": {\n                  \"find\": {\n                    \"description\": \"Text to match\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Text to search\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"lower\": {\n                    \"description\": \"Convert strings to lowercase\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Lowercase\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputStringContains\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Contains string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringContains\"\n      }\n    },\n    \"/ConvertAngle\": {\n      \"post\": {\n        \"description\": \"Convert value from one angle measurement to another\",\n        \"operationId\": \"ConvertAngle\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 16.036844,\n                  \"source\": \"Arcminute\",\n                  \"target\": \"Arcsecond\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Arcminute\",\n                      \"Arcsecond\",\n                      \"Centiradian\",\n                      \"Deciradian\",\n                      \"Degree\",\n                      \"Gradian\",\n                      \"Microdegree\",\n                      \"Microradian\",\n                      \"Millidegree\",\n                      \"Milliradian\",\n                      \"Nanodegree\",\n                      \"Nanoradian\",\n                      \"Radian\",\n                      \"Revolution\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Arcminute\",\n                      \"Arcsecond\",\n                      \"Centiradian\",\n                      \"Deciradian\",\n                      \"Degree\",\n                      \"Gradian\",\n                      \"Microdegree\",\n                      \"Microradian\",\n                      \"Millidegree\",\n                      \"Milliradian\",\n                      \"Nanodegree\",\n                      \"Nanoradian\",\n                      \"Radian\",\n                      \"Revolution\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertAngle\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert angle\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertAngle\"\n      }\n    },\n    \"/ConvertArea\": {\n      \"post\": {\n        \"description\": \"Convert value from one area measurement to another\",\n        \"operationId\": \"ConvertArea\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.416714,\n                  \"source\": \"Acre\",\n                  \"target\": \"SquareFoot\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Acre\",\n                      \"Hectare\",\n                      \"SquareCentimeter\",\n                      \"SquareDecimeter\",\n                      \"SquareFoot\",\n                      \"SquareInch\",\n                      \"SquareKilometer\",\n                      \"SquareMeter\",\n                      \"SquareMicrometer\",\n                      \"SquareMile\",\n                      \"SquareMillimeter\",\n                      \"SquareYard\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Acre\",\n                      \"Hectare\",\n                      \"SquareCentimeter\",\n                      \"SquareDecimeter\",\n                      \"SquareFoot\",\n                      \"SquareInch\",\n                      \"SquareKilometer\",\n                      \"SquareMeter\",\n                      \"SquareMicrometer\",\n                      \"SquareMile\",\n                      \"SquareMillimeter\",\n                      \"SquareYard\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertArea\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert area\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertArea\"\n      }\n    },\n    \"/ConvertCase\": {\n      \"post\": {\n        \"description\": \"Convert string to upper, lower or title case\",\n        \"operationId\": \"ConvertCase\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"alphacase\": \"Upper\",\n                  \"input\": \"the brown cow\"\n                },\n                \"properties\": {\n                  \"alphacase\": {\n                    \"description\": \"Case of conversion result\",\n                    \"enum\": [\n                      \"Upper\",\n                      \"Lower\",\n                      \"Title\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Case\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"String containing the text to convert\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCaseConversion\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Convert case\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"caseConversion\"\n      }\n    },\n    \"/ConvertCurrency\": {\n      \"post\": {\n        \"description\": \"Calculate monetary value in a different currency\",\n        \"operationId\": \"ConvertCurrency\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 100.25,\n                  \"source\": \"USD\",\n                  \"target\": \"CAD\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Amount to convert\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"default\": \"USD\",\n                    \"enum\": [\n                      \"USD\",\n                      \"AUD\",\n                      \"BGN\",\n                      \"BRL\",\n                      \"CAD\",\n                      \"CHF\",\n                      \"CNY\",\n                      \"CZK\",\n                      \"DKK\",\n                      \"EUR\",\n                      \"GBP\",\n                      \"HKD\",\n                      \"HRK\",\n                      \"HUF\",\n                      \"IDR\",\n                      \"ILS\",\n                      \"INR\",\n                      \"ISK\",\n                      \"JPY\",\n                      \"KRW\",\n                      \"MXN\",\n                      \"MYR\",\n                      \"NOK\",\n                      \"NZD\",\n                      \"PHP\",\n                      \"PLN\",\n                      \"RON\",\n                      \"RUB\",\n                      \"SGD\",\n                      \"SEK\",\n                      \"THB\",\n                      \"TRY\",\n                      \"ZAR\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source currency\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"USD\",\n                      \"AUD\",\n                      \"BGN\",\n                      \"BRL\",\n                      \"CAD\",\n                      \"CHF\",\n                      \"CNY\",\n                      \"CZK\",\n                      \"DKK\",\n                      \"EUR\",\n                      \"GBP\",\n                      \"HKD\",\n                      \"HRK\",\n                      \"HUF\",\n                      \"IDR\",\n                      \"ILS\",\n                      \"INR\",\n                      \"ISK\",\n                      \"JPY\",\n                      \"KRW\",\n                      \"MXN\",\n                      \"MYR\",\n                      \"NOK\",\n                      \"NZD\",\n                      \"PHP\",\n                      \"PLN\",\n                      \"RON\",\n                      \"RUB\",\n                      \"SGD\",\n                      \"SEK\",\n                      \"THB\",\n                      \"TRY\",\n                      \"ZAR\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target currency\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCurrencyConversion\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Currency - Convert currency\",\n        \"tags\": [\n          \"Finance\"\n        ],\n        \"x-codegen-request-body-name\": \"currencyConversion\"\n      }\n    },\n    \"/ConvertDistance\": {\n      \"post\": {\n        \"description\": \"Convert value from one distance measurement to another\",\n        \"operationId\": \"ConvertDistance\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.525505,\n                  \"source\": \"Meter\",\n                  \"target\": \"Foot\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Centimeter\",\n                      \"Decimeter\",\n                      \"Fathom\",\n                      \"Foot\",\n                      \"Hectometer\",\n                      \"Inch\",\n                      \"Kilometer\",\n                      \"LightYear\",\n                      \"Meter\",\n                      \"Micrometer\",\n                      \"Mile\",\n                      \"Millimeter\",\n                      \"Nanometer\",\n                      \"NauticalMile\",\n                      \"Yard\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Centimeter\",\n                      \"Decimeter\",\n                      \"Fathom\",\n                      \"Foot\",\n                      \"Hectometer\",\n                      \"Inch\",\n                      \"Kilometer\",\n                      \"LightYear\",\n                      \"Meter\",\n                      \"Micrometer\",\n                      \"Mile\",\n                      \"Millimeter\",\n                      \"Nanometer\",\n                      \"NauticalMile\",\n                      \"Yard\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertDistance\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert distance\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertDistance\"\n      }\n    },\n    \"/ConvertDuration\": {\n      \"post\": {\n        \"description\": \"Convert value from one duration measurement to another\",\n        \"operationId\": \"ConvertDuration\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.66375,\n                  \"source\": \"Day\",\n                  \"target\": \"Hour\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Day\",\n                      \"Hour\",\n                      \"Microsecond\",\n                      \"Millisecond\",\n                      \"Minute\",\n                      \"Month\",\n                      \"Nanosecond\",\n                      \"Second\",\n                      \"Week\",\n                      \"Year\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Day\",\n                      \"Hour\",\n                      \"Microsecond\",\n                      \"Millisecond\",\n                      \"Minute\",\n                      \"Month\",\n                      \"Nanosecond\",\n                      \"Second\",\n                      \"Week\",\n                      \"Year\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertDuration\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert duration\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertDuration\"\n      }\n    },\n    \"/ConvertEnergy\": {\n      \"post\": {\n        \"description\": \"Convert value from one energy measurement to another\",\n        \"operationId\": \"ConvertEnergy\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.397155,\n                  \"source\": \"Calorie\",\n                  \"target\": \"Joule\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"BritishThermalUnit\",\n                      \"Calorie\",\n                      \"ElectronVolt\",\n                      \"FootPound\",\n                      \"GigawattHour\",\n                      \"Joule\",\n                      \"Kilocalorie\",\n                      \"Kilojoule\",\n                      \"KilowattHour\",\n                      \"Megajoule\",\n                      \"MegawattHour\",\n                      \"TerawattHour\",\n                      \"Therm (EU)\",\n                      \"Therm (UK)\",\n                      \"Therm (US)\",\n                      \"WattHour\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"BritishThermalUnit\",\n                      \"Calorie\",\n                      \"ElectronVolt\",\n                      \"FootPound\",\n                      \"GigawattHour\",\n                      \"Joule\",\n                      \"Kilocalorie\",\n                      \"Kilojoule\",\n                      \"KilowattHour\",\n                      \"Megajoule\",\n                      \"MegawattHour\",\n                      \"TerawattHour\",\n                      \"Therm (EU)\",\n                      \"Therm (UK)\",\n                      \"Therm (US)\",\n                      \"WattHour\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertEnergy\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert energy\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertEnergy\"\n      }\n    },\n    \"/ConvertImage\": {\n      \"post\": {\n        \"description\": \"Convert an image from one format to another\",\n        \"operationId\": \"ConvertImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"format\": {\n                    \"default\": \"PNG\",\n                    \"description\": \"Output file format\",\n                    \"enum\": [\n                      \"PNG\",\n                      \"JPG\",\n                      \"GIF\",\n                      \"BMP\",\n                      \"TIF\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Format\"\n                  }\n                },\n                \"required\": [\n                  \"file\",\n                  \"format\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Convert Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/ConvertPower\": {\n      \"post\": {\n        \"description\": \"Convert value from one power measurement to another\",\n        \"operationId\": \"ConvertPower\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.866107,\n                  \"source\": \"Gigawatt\",\n                  \"target\": \"Kilowatt\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"BritishThermalUnitPerHour\",\n                      \"Decawatt\",\n                      \"Deciwatt\",\n                      \"ElectricalHorsepower\",\n                      \"Femtowatt\",\n                      \"Gigawatt\",\n                      \"HydraulicHorsepower\",\n                      \"Kilowatt\",\n                      \"MechanicalHorsepower\",\n                      \"Megawatt\",\n                      \"Microwatt\",\n                      \"Milliwatt\",\n                      \"Nanowatt\",\n                      \"Petawatt\",\n                      \"Picowatt\",\n                      \"Terawatt\",\n                      \"Watt\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"BritishThermalUnitPerHour\",\n                      \"Decawatt\",\n                      \"Deciwatt\",\n                      \"ElectricalHorsepower\",\n                      \"Femtowatt\",\n                      \"Gigawatt\",\n                      \"HydraulicHorsepower\",\n                      \"Kilowatt\",\n                      \"MechanicalHorsepower\",\n                      \"Megawatt\",\n                      \"Microwatt\",\n                      \"Milliwatt\",\n                      \"Nanowatt\",\n                      \"Petawatt\",\n                      \"Picowatt\",\n                      \"Terawatt\",\n                      \"Watt\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertPower\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert power\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertPower\"\n      }\n    },\n    \"/ConvertSpeed\": {\n      \"post\": {\n        \"description\": \"Convert value from one speed measurement to another\",\n        \"operationId\": \"ConvertSpeed\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 0.278054,\n                  \"source\": \"Knot\",\n                  \"target\": \"MilePerHour\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"CentimeterPerHour\",\n                      \"CentimeterPerMinute\",\n                      \"CentimeterPerSecond\",\n                      \"DecimeterPerMinute\",\n                      \"DecimeterPerSecond\",\n                      \"FootPerHour\",\n                      \"FootPerMinute\",\n                      \"FootPerSecond\",\n                      \"InchPerHour\",\n                      \"InchPerMinute\",\n                      \"InchPerSecond\",\n                      \"KilometerPerHour\",\n                      \"KilometerPerMinute\",\n                      \"KilometerPerSecond\",\n                      \"Knot\",\n                      \"MeterPerHour\",\n                      \"MeterPerMinute\",\n                      \"MeterPerSecond\",\n                      \"MicrometerPerMinute\",\n                      \"MicrometerPerSecond\",\n                      \"MilePerHour\",\n                      \"MillimeterPerHour\",\n                      \"MillimeterPerMinute\",\n                      \"MillimeterPerSecond\",\n                      \"NanometerPerMinute\",\n                      \"NanometerPerSecond\",\n                      \"YardPerHour\",\n                      \"YardPerMinute\",\n                      \"YardPerSecond\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"CentimeterPerHour\",\n                      \"CentimeterPerMinute\",\n                      \"CentimeterPerSecond\",\n                      \"DecimeterPerMinute\",\n                      \"DecimeterPerSecond\",\n                      \"FootPerHour\",\n                      \"FootPerMinute\",\n                      \"FootPerSecond\",\n                      \"InchPerHour\",\n                      \"InchPerMinute\",\n                      \"InchPerSecond\",\n                      \"KilometerPerHour\",\n                      \"KilometerPerMinute\",\n                      \"KilometerPerSecond\",\n                      \"Knot\",\n                      \"MeterPerHour\",\n                      \"MeterPerMinute\",\n                      \"MeterPerSecond\",\n                      \"MicrometerPerMinute\",\n                      \"MicrometerPerSecond\",\n                      \"MilePerHour\",\n                      \"MillimeterPerHour\",\n                      \"MillimeterPerMinute\",\n                      \"MillimeterPerSecond\",\n                      \"NanometerPerMinute\",\n                      \"NanometerPerSecond\",\n                      \"YardPerHour\",\n                      \"YardPerMinute\",\n                      \"YardPerSecond\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertSpeed\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert speed\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertSpeed\"\n      }\n    },\n    \"/ConvertTemperature\": {\n      \"post\": {\n        \"description\": \"Convert value from one temperature measurement to another\",\n        \"operationId\": \"ConvertTemperature\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 10.0,\n                  \"source\": \"Celsius\",\n                  \"target\": \"Fahrenheit\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Celsius\",\n                      \"Fahrenheit\",\n                      \"Newton\",\n                      \"Kelvin\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Celsius\",\n                      \"Fahrenheit\",\n                      \"Newton\",\n                      \"Kelvin\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertTemperature\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert temperature\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertTemperature\"\n      }\n    },\n    \"/ConvertVolume\": {\n      \"post\": {\n        \"description\": \"Convert value from one volume measurement to another\",\n        \"operationId\": \"ConvertVolume\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 1.5,\n                  \"source\": \"CubicFoot\",\n                  \"target\": \"CubicMeter\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Centiliter\",\n                      \"CubicCentimeter\",\n                      \"CubicDecimeter\",\n                      \"CubicFoot\",\n                      \"CubicHectometer\",\n                      \"CubicInch\",\n                      \"CubicKilometer\",\n                      \"CubicMeter\",\n                      \"CubicMillimeter\",\n                      \"CubicYard\",\n                      \"Deciliter\",\n                      \"ImperialBeerBarrel\",\n                      \"ImperialGallon\",\n                      \"ImperialOunce\",\n                      \"ImperialPint\",\n                      \"Kiloliter\",\n                      \"Liter\",\n                      \"Microliter\",\n                      \"Milliliter\",\n                      \"Gallon\",\n                      \"Cup\",\n                      \"Ounce\",\n                      \"Pint\",\n                      \"Quart\",\n                      \"Tablespoon\",\n                      \"Teaspoon\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Centiliter\",\n                      \"CubicCentimeter\",\n                      \"CubicDecimeter\",\n                      \"CubicFoot\",\n                      \"CubicHectometer\",\n                      \"CubicInch\",\n                      \"CubicKilometer\",\n                      \"CubicMeter\",\n                      \"CubicMillimeter\",\n                      \"CubicYard\",\n                      \"Deciliter\",\n                      \"ImperialBeerBarrel\",\n                      \"ImperialGallon\",\n                      \"ImperialOunce\",\n                      \"ImperialPint\",\n                      \"Kiloliter\",\n                      \"Liter\",\n                      \"Microliter\",\n                      \"Milliliter\",\n                      \"Gallon\",\n                      \"Cup\",\n                      \"Ounce\",\n                      \"Pint\",\n                      \"Quart\",\n                      \"Tablespoon\",\n                      \"Teaspoon\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertVolume\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert volume\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertVolume\"\n      }\n    },\n    \"/ConvertWeight\": {\n      \"post\": {\n        \"description\": \"Convert value from one weight measurement to another\",\n        \"operationId\": \"ConvertWeight\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 5.7,\n                  \"source\": \"Gram\",\n                  \"target\": \"Ounce\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Measurement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"enum\": [\n                      \"Centigram\",\n                      \"Decagram\",\n                      \"Decigram\",\n                      \"Grain\",\n                      \"Gram\",\n                      \"Hectogram\",\n                      \"Kilogram\",\n                      \"Microgram\",\n                      \"Milligram\",\n                      \"Nanogram\",\n                      \"Ounce\",\n                      \"Pound\",\n                      \"Stone\",\n                      \"Solar Mass\",\n                      \"Earth Mass\",\n                      \"Slug\",\n                      \"Short Ton\",\n                      \"Long Ton\",\n                      \"Ton\",\n                      \"Megaton\",\n                      \"Short Hundredweight\",\n                      \"Long Hundredweight\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"Centigram\",\n                      \"Decagram\",\n                      \"Decigram\",\n                      \"Grain\",\n                      \"Gram\",\n                      \"Hectogram\",\n                      \"Kilogram\",\n                      \"Microgram\",\n                      \"Milligram\",\n                      \"Nanogram\",\n                      \"Ounce\",\n                      \"Pound\",\n                      \"Stone\",\n                      \"Ton\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target measurement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputConvertWeight\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Convert weight\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"convertWeight\"\n      }\n    },\n    \"/CountCollection\": {\n      \"post\": {\n        \"description\": \"Count a collection of items\",\n        \"operationId\": \"CountCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    \"a\",\n                    \"d\",\n                    \"c\",\n                    \"b\",\n                    \"e\"\n                  ]\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection of items to count\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionCount\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Count collection parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Count collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionCount\"\n      }\n    },\n    \"/CropImage\": {\n      \"post\": {\n        \"description\": \"Crop an image\",\n        \"operationId\": \"CropImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"Height\": {\n                    \"description\": \"Height (Y-axis down, negative to reverse)\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Height\"\n                  },\n                  \"Width\": {\n                    \"description\": \"Width (X-axis right, negative to reverse)\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Width\"\n                  },\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"position\": {\n                    \"default\": \"TopLeft\",\n                    \"description\": \"Crop start position (use negative values to reverse crop area)\",\n                    \"enum\": [\n                      \"TopLeft\",\n                      \"TopCenter\",\n                      \"TopRight\",\n                      \"MiddleLeft\",\n                      \"MiddleCenter\",\n                      \"MiddleRight\",\n                      \"BottomLeft\",\n                      \"BottomCenter\",\n                      \"BottomRight\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Position\"\n                  }\n                },\n                \"required\": [\n                  \"Height\",\n                  \"Width\",\n                  \"file\",\n                  \"position\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Crop Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/DateTimeDifference\": {\n      \"post\": {\n        \"description\": \"Calculate the difference between two dates\",\n        \"operationId\": \"DateTimeDifference\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"dateTime1\": \"1/1/2010 12:37:19\",\n                  \"dateTime2\": \"3/15/2011 14:27:49\"\n                },\n                \"properties\": {\n                  \"dateTime1\": {\n                    \"description\": \"First date/time value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"First date/time value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"dateTime2\": {\n                    \"description\": \"Second date/time value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Second date/time value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDateTimeDifference\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"days\": 14.0,\n                    \"hours\": 1.0,\n                    \"milliseconds\": 0.0,\n                    \"minutes\": 50.0,\n                    \"months\": 2.0,\n                    \"seconds\": 30.0,\n                    \"ticks\": 3.784983E14,\n                    \"totalDays\": 438.08,\n                    \"totalHours\": 10513.84,\n                    \"totalMilliseconds\": 3.784983E10,\n                    \"totalMinutes\": 630830.5,\n                    \"totalMonths\": 14.39,\n                    \"totalSeconds\": 3.784983E7,\n                    \"totalYears\": 1.2,\n                    \"years\": 1.0\n                  },\n                  \"properties\": {\n                    \"days\": {\n                      \"description\": \"Days\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Days\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"hours\": {\n                      \"description\": \"Hours\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Hours\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"milliseconds\": {\n                      \"description\": \"Milliseconds\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Milliseconds\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"minutes\": {\n                      \"description\": \"Minutes\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Minutes\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"months\": {\n                      \"description\": \"Months\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Months\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"ticks\": {\n                      \"description\": \"Ticks\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Ticks\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalDays\": {\n                      \"description\": \"Total Days\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Days\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalHours\": {\n                      \"description\": \"Total Hours\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Hours\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalMilliseconds\": {\n                      \"description\": \"Total Milliseconds\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Milliseconds\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalMinutes\": {\n                      \"description\": \"Total Minutes\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Minutes\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalMonths\": {\n                      \"description\": \"Total Months\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Months\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalSeconds\": {\n                      \"description\": \"Total Seconds\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Seconds\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"totalYears\": {\n                      \"description\": \"Total Years\",\n                      \"format\": \"double\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Total Years\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"years\": {\n                      \"description\": \"Years\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Years\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputDateDifference\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"DateTime - DateTime difference\",\n        \"tags\": [\n          \"DateTime\"\n        ],\n        \"x-codegen-request-body-name\": \"dateTimeDifference\"\n      }\n    },\n    \"/DateTimeInfo\": {\n      \"post\": {\n        \"description\": \"Retrieve useful date and time information, such as day of year, total seconds and ticks\",\n        \"operationId\": \"DateTimeInfo\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"culture\": \"en-GB\",\n                  \"input\": \"03/10/2010 09:00:00\"\n                },\n                \"properties\": {\n                  \"culture\": {\n                    \"default\": \"en-US\",\n                    \"description\": \"Language culture\",\n                    \"enum\": [\n                      \"en-US\",\n                      \"af-ZA\",\n                      \"ar-AE\",\n                      \"ar-BH\",\n                      \"ar-DZ\",\n                      \"ar-EG\",\n                      \"ar-IQ\",\n                      \"ar-JO\",\n                      \"ar-KW\",\n                      \"ar-LB\",\n                      \"ar-LY\",\n                      \"ar-MA\",\n                      \"ar-OM\",\n                      \"ar-QA\",\n                      \"ar-SA\",\n                      \"ar-SY\",\n                      \"ar-TN\",\n                      \"ar-YE\",\n                      \"az-AZ\",\n                      \"be-BY\",\n                      \"bg-BG\",\n                      \"bs-BA\",\n                      \"ca-ES\",\n                      \"cs-CZ\",\n                      \"cy-GB\",\n                      \"da-DK\",\n                      \"de-AT\",\n                      \"de-CH\",\n                      \"de-DE\",\n                      \"de-LI\",\n                      \"de-LU\",\n                      \"el-GR\",\n                      \"en-AU\",\n                      \"en-BZ\",\n                      \"en-CA\",\n                      \"en-CB\",\n                      \"en-GB\",\n                      \"en-IE\",\n                      \"en-JM\",\n                      \"en-NZ\",\n                      \"en-PH\",\n                      \"en-TT\",\n                      \"en-ZA\",\n                      \"en-ZW\",\n                      \"es-AR\",\n                      \"es-BO\",\n                      \"es-CL\",\n                      \"es-CO\",\n                      \"es-CR\",\n                      \"es-DO\",\n                      \"es-EC\",\n                      \"es-ES\",\n                      \"es-GT\",\n                      \"es-HN\",\n                      \"es-MX\",\n                      \"es-NI\",\n                      \"es-PA\",\n                      \"es-PE\",\n                      \"es-PR\",\n                      \"es-PY\",\n                      \"es-SV\",\n                      \"es-UY\",\n                      \"es-VE\",\n                      \"et-EE\",\n                      \"eu-ES\",\n                      \"fa-IR\",\n                      \"fi-FI\",\n                      \"fo-FO\",\n                      \"fr-BE\",\n                      \"fr-CA\",\n                      \"fr-CH\",\n                      \"fr-FR\",\n                      \"fr-LU\",\n                      \"fr-MC\",\n                      \"gl-ES\",\n                      \"gu-IN\",\n                      \"he-IL\",\n                      \"hi-IN\",\n                      \"hr-BA\",\n                      \"hr-HR\",\n                      \"hu-HU\",\n                      \"hy-AM\",\n                      \"id-ID\",\n                      \"is-IS\",\n                      \"it-CH\",\n                      \"it-IT\",\n                      \"ja-JP\",\n                      \"ka-GE\",\n                      \"kk-KZ\",\n                      \"kn-IN\",\n                      \"ko-KR\",\n                      \"ky-KG\",\n                      \"lt-LT\",\n                      \"lv-LV\",\n                      \"mi-NZ\",\n                      \"mn-MN\",\n                      \"mr-IN\",\n                      \"ms-BN\",\n                      \"ms-MY\",\n                      \"mt-MT\",\n                      \"nl-BE\",\n                      \"nl-NL\",\n                      \"nn-NO\",\n                      \"ns-ZA\",\n                      \"pa-IN\",\n                      \"pl-PL\",\n                      \"ps-AR\",\n                      \"pt-BR\",\n                      \"pt-PT\",\n                      \"ro-RO\",\n                      \"ru-RU\",\n                      \"sa-IN\",\n                      \"sk-SK\",\n                      \"sl-SI\",\n                      \"sq-AL\",\n                      \"sr-BA\",\n                      \"sr-SP\",\n                      \"sv-FI\",\n                      \"sv-SE\",\n                      \"sw-KE\",\n                      \"ta-IN\",\n                      \"te-IN\",\n                      \"th-TH\",\n                      \"tl-PH\",\n                      \"tn-ZA\",\n                      \"tr-TR\",\n                      \"uk-UA\",\n                      \"ur-PK\",\n                      \"uz-UZ\",\n                      \"vi-VN\",\n                      \"zh-CN\",\n                      \"zh-HK\",\n                      \"zh-MO\",\n                      \"zh-SG\",\n                      \"zh-TW\",\n                      \"zu-ZA\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Culture\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Source date and time\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDateTimeInfo\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"DayOfWeek\": 2.0,\n                    \"DayOfYear\": 25.0,\n                    \"MinutesInDay\": 359.0,\n                    \"SecondsInDay\": 1234.0,\n                    \"Ticks\": 1.23456789E9,\n                    \"WeekOfYear\": 10.0\n                  },\n                  \"properties\": {\n                    \"DayOfWeek\": {\n                      \"description\": \"DayOfWeek\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"DayOfWeek\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"DayOfYear\": {\n                      \"description\": \"DayOfYear\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"DayOfYear\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"MinutesInDay\": {\n                      \"description\": \"MinutesInDay\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"MinutesInDay\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"SecondsInDay\": {\n                      \"description\": \"SecondsInDay\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"SecondsInDay\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"Ticks\": {\n                      \"description\": \"Ticks\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Ticks\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"WeekOfYear\": {\n                      \"description\": \"WeekOfYear\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"WeekOfYear\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputDateInfo\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"DateTime - Get date and time information\",\n        \"tags\": [\n          \"DateTime\"\n        ],\n        \"x-codegen-request-body-name\": \"dateTimeInfo\"\n      }\n    },\n    \"/DecodeString\": {\n      \"post\": {\n        \"description\": \"Decode a string encoded with Base64 encoding\",\n        \"operationId\": \"DecodeString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"VGhlIGJyb3duIGNvdw\\u003d\\u003d\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"Encoded string variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Decode string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/EncodeString\": {\n      \"post\": {\n        \"description\": \"Encode a string using Base64 encoding\",\n        \"operationId\": \"EncodeString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"The brown cow\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"String variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Encode string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/FileToString\": {\n      \"post\": {\n        \"description\": \"Convert a file to a Base64 string\",\n        \"operationId\": \"FileToString\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"description\": \"Source file (10MB limit)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  }\n                },\n                \"required\": [\n                  \"file\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - File to string\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/FilterCollection\": {\n      \"post\": {\n        \"description\": \"Filter a collection of strings by keyword\",\n        \"operationId\": \"FilterCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    \"the cow\",\n                    \"jumped over\",\n                    \"the moon\"\n                  ],\n                  \"keywords\": \"cow,moon\",\n                  \"match\": \"Any\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection of strings to filter\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"keywords\": {\n                    \"description\": \"Keywords (separate multiple values with commas)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Keywords\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"default\": \"Any\",\n                    \"description\": \"Match type\",\n                    \"enum\": [\n                      \"Any\",\n                      \"All\",\n                      \"None\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Match\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionFilter\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Filter collection parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Modified collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Modified collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionResult\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Filter collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionFilter\"\n      }\n    },\n    \"/FlipImage\": {\n      \"post\": {\n        \"description\": \"Flip an image (horizontal or vertical)\",\n        \"operationId\": \"FlipImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"orientation\": {\n                    \"default\": \"Horizontal\",\n                    \"description\": \"Horizontal or Vertical\",\n                    \"enum\": [\n                      \"Horizontal\",\n                      \"Vertical\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Orientation\"\n                  }\n                },\n                \"required\": [\n                  \"file\",\n                  \"orientation\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Flip Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/FormatCurrency\": {\n      \"post\": {\n        \"description\": \"Apply currency symbol to a numeric value\",\n        \"operationId\": \"FormatCurrency\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": 10980.79,\n                  \"target\": \"GBP\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Amount to format\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"enum\": [\n                      \"USD\",\n                      \"AUD\",\n                      \"BGN\",\n                      \"BRL\",\n                      \"CAD\",\n                      \"CHF\",\n                      \"CNY\",\n                      \"CZK\",\n                      \"DKK\",\n                      \"EUR\",\n                      \"GBP\",\n                      \"HKD\",\n                      \"HRK\",\n                      \"HUF\",\n                      \"IDR\",\n                      \"ILS\",\n                      \"INR\",\n                      \"ISK\",\n                      \"JPY\",\n                      \"KRW\",\n                      \"MXN\",\n                      \"MYR\",\n                      \"NOK\",\n                      \"NZD\",\n                      \"PHP\",\n                      \"PLN\",\n                      \"RON\",\n                      \"RUB\",\n                      \"SGD\",\n                      \"SEK\",\n                      \"THB\",\n                      \"TRY\",\n                      \"ZAR\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target currency\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCurrencyFormat\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Currency - Format currency\",\n        \"tags\": [\n          \"Finance\"\n        ],\n        \"x-codegen-request-body-name\": \"currencyFormat\"\n      }\n    },\n    \"/FormatDateTime\": {\n      \"post\": {\n        \"description\": \"Create a date/time string in a specific format\",\n        \"operationId\": \"FormatDateTime\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"culture\": \"en-GB\",\n                  \"format\": \"ddd\",\n                  \"input\": \"03/10/2010 00:00:00\"\n                },\n                \"properties\": {\n                  \"culture\": {\n                    \"default\": \"en-US\",\n                    \"description\": \"Language culture\",\n                    \"enum\": [\n                      \"en-US\",\n                      \"af-ZA\",\n                      \"ar-AE\",\n                      \"ar-BH\",\n                      \"ar-DZ\",\n                      \"ar-EG\",\n                      \"ar-IQ\",\n                      \"ar-JO\",\n                      \"ar-KW\",\n                      \"ar-LB\",\n                      \"ar-LY\",\n                      \"ar-MA\",\n                      \"ar-OM\",\n                      \"ar-QA\",\n                      \"ar-SA\",\n                      \"ar-SY\",\n                      \"ar-TN\",\n                      \"ar-YE\",\n                      \"az-AZ\",\n                      \"be-BY\",\n                      \"bg-BG\",\n                      \"bs-BA\",\n                      \"ca-ES\",\n                      \"cs-CZ\",\n                      \"cy-GB\",\n                      \"da-DK\",\n                      \"de-AT\",\n                      \"de-CH\",\n                      \"de-DE\",\n                      \"de-LI\",\n                      \"de-LU\",\n                      \"el-GR\",\n                      \"en-AU\",\n                      \"en-BZ\",\n                      \"en-CA\",\n                      \"en-CB\",\n                      \"en-GB\",\n                      \"en-IE\",\n                      \"en-JM\",\n                      \"en-NZ\",\n                      \"en-PH\",\n                      \"en-TT\",\n                      \"en-ZA\",\n                      \"en-ZW\",\n                      \"es-AR\",\n                      \"es-BO\",\n                      \"es-CL\",\n                      \"es-CO\",\n                      \"es-CR\",\n                      \"es-DO\",\n                      \"es-EC\",\n                      \"es-ES\",\n                      \"es-GT\",\n                      \"es-HN\",\n                      \"es-MX\",\n                      \"es-NI\",\n                      \"es-PA\",\n                      \"es-PE\",\n                      \"es-PR\",\n                      \"es-PY\",\n                      \"es-SV\",\n                      \"es-UY\",\n                      \"es-VE\",\n                      \"et-EE\",\n                      \"eu-ES\",\n                      \"fa-IR\",\n                      \"fi-FI\",\n                      \"fo-FO\",\n                      \"fr-BE\",\n                      \"fr-CA\",\n                      \"fr-CH\",\n                      \"fr-FR\",\n                      \"fr-LU\",\n                      \"fr-MC\",\n                      \"gl-ES\",\n                      \"gu-IN\",\n                      \"he-IL\",\n                      \"hi-IN\",\n                      \"hr-BA\",\n                      \"hr-HR\",\n                      \"hu-HU\",\n                      \"hy-AM\",\n                      \"id-ID\",\n                      \"is-IS\",\n                      \"it-CH\",\n                      \"it-IT\",\n                      \"ja-JP\",\n                      \"ka-GE\",\n                      \"kk-KZ\",\n                      \"kn-IN\",\n                      \"ko-KR\",\n                      \"ky-KG\",\n                      \"lt-LT\",\n                      \"lv-LV\",\n                      \"mi-NZ\",\n                      \"mn-MN\",\n                      \"mr-IN\",\n                      \"ms-BN\",\n                      \"ms-MY\",\n                      \"mt-MT\",\n                      \"nl-BE\",\n                      \"nl-NL\",\n                      \"nn-NO\",\n                      \"ns-ZA\",\n                      \"pa-IN\",\n                      \"pl-PL\",\n                      \"ps-AR\",\n                      \"pt-BR\",\n                      \"pt-PT\",\n                      \"ro-RO\",\n                      \"ru-RU\",\n                      \"sa-IN\",\n                      \"sk-SK\",\n                      \"sl-SI\",\n                      \"sq-AL\",\n                      \"sr-BA\",\n                      \"sr-SP\",\n                      \"sv-FI\",\n                      \"sv-SE\",\n                      \"sw-KE\",\n                      \"ta-IN\",\n                      \"te-IN\",\n                      \"th-TH\",\n                      \"tl-PH\",\n                      \"tn-ZA\",\n                      \"tr-TR\",\n                      \"uk-UA\",\n                      \"ur-PK\",\n                      \"uz-UZ\",\n                      \"vi-VN\",\n                      \"zh-CN\",\n                      \"zh-HK\",\n                      \"zh-MO\",\n                      \"zh-SG\",\n                      \"zh-TW\",\n                      \"zu-ZA\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Culture\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"format\": {\n                    \"description\": \"Output format\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Format\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Source date and time\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDateTimeFormat\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"DateTime - Format date and time\",\n        \"tags\": [\n          \"DateTime\"\n        ],\n        \"x-codegen-request-body-name\": \"dateTimeFormat\"\n      }\n    },\n    \"/GenerateGuid\": {\n      \"post\": {\n        \"description\": \"Generate a globally unique identifier\",\n        \"operationId\": \"GenerateGuid\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"uppercase\": true\n                },\n                \"properties\": {\n                  \"uppercase\": {\n                    \"description\": \"All uppercase alpha characters\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Uppercase\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputGenerateUniqueID\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Generate GUID\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"generateUniqueID\"\n      }\n    },\n    \"/GenerateHash\": {\n      \"post\": {\n        \"description\": \"Generate a hash value from a string\",\n        \"operationId\": \"GenerateHash\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"algorithm\": \"SHA256\",\n                  \"source\": \"text to hash\"\n                },\n                \"properties\": {\n                  \"algorithm\": {\n                    \"description\": \"Hash algorithm\",\n                    \"enum\": [\n                      \"MD5\",\n                      \"SHA1\",\n                      \"SHA256\",\n                      \"SHA384\",\n                      \"SHA512\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Algorithm\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Hash source string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Input\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputGenerateHash\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Generate hash\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"generateHash\"\n      }\n    },\n    \"/GenerateQRCode\": {\n      \"post\": {\n        \"description\": \"Generate a QR code image\",\n        \"operationId\": \"GenerateQRCode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"someone@example.com|Test message|This is a test.\",\n                  \"payload\": \"Mail\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Text value(s) (vertical bar delimited by type)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"payload\": {\n                    \"default\": \"Plain Text (string)\",\n                    \"description\": \"Payload type\",\n                    \"enum\": [\n                      \"Plain Text (string)\",\n                      \"Bitcoin Payment (address|amount|label|message)\",\n                      \"Bookmark (url|title)\",\n                      \"Calendar Event (subject|description|location|start|end|allDayEvent[\\u0027true\\u0027 or \\u0027false\\u0027]|format [\\u0027universal\\u0027 or \\u0027iCal\\u0027])\",\n                      \"Geolocation (latitude|longitude)\",\n                      \"Mail (recipient|subject|message)\",\n                      \"Phone Number (string)\",\n                      \"SMS (number|message)\",\n                      \"URL (string)\",\n                      \"WiFi (ssid|password|authenticationMode [\\u0027WEP\\u0027, \\u0027WPA\\u0027 or \\u0027WPA2\\u0027])\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Type\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputQRCode\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/png\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"image/png\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Generate QR code\",\n        \"tags\": [\n          \"Files\"\n        ],\n        \"x-codegen-request-body-name\": \"inputQRCode\"\n      }\n    },\n    \"/JSONtoCSV\": {\n      \"post\": {\n        \"description\": \"Convert a JSON array to CSV string\",\n        \"operationId\": \"JsonToCsv\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"header\": true,\n                  \"input\": [\n                    {\n                      \"property1\": \"value\"\n                    },\n                    {\n                      \"property2\": \"value\"\n                    },\n                    {\n                      \"property3\": \"value\"\n                    }\n                  ],\n                  \"omit\": \"property1\",\n                  \"order\": \"property3,property2\"\n                },\n                \"properties\": {\n                  \"header\": {\n                    \"default\": true,\n                    \"description\": \"Include header row\",\n                    \"type\": \"boolean\",\n                    \"x-ms-summary\": \"Header\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"JSON array object\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"omit\": {\n                    \"description\": \"Columns to omit (comma separated)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Omit Columns\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"order\": {\n                    \"description\": \"Column order (comma separated)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Order\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputJsonConversionCSV\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - JSON to CSV\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"jsonConversionCSV\"\n      }\n    },\n    \"/JSONtoHTML\": {\n      \"post\": {\n        \"description\": \"Convert a JSON array to an HTML table\",\n        \"operationId\": \"JsonToHtml\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"alternate\": \"\\u003ctr\\u003e\\u003cth\\u003eProperty 3\\u003c/th\\u003e\\u003cth\\u003eProperty 2\\u003c/th\\u003e\\u003c/tr\\u003e\",\n                  \"attributes\": \"style\\u003d\\u0027width:100%;text-align:center;\\u0027\",\n                  \"header\": false,\n                  \"input\": [\n                    {\n                      \"property1\": \"value\"\n                    },\n                    {\n                      \"property2\": \"value\"\n                    },\n                    {\n                      \"property3\": \"value\"\n                    }\n                  ],\n                  \"omit\": \"property1\",\n                  \"order\": \"property3,property2\"\n                },\n                \"properties\": {\n                  \"alternate\": {\n                    \"description\": \"Alternate header row markup\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Alternate Header\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"attributes\": {\n                    \"description\": \"Optional table attributes (single quoted values)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Table Attributes\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"header\": {\n                    \"default\": true,\n                    \"description\": \"Include header row\",\n                    \"type\": \"boolean\",\n                    \"x-ms-summary\": \"Header\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"JSON array object\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"omit\": {\n                    \"description\": \"Columns to omit (comma separated)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Omit Columns\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"order\": {\n                    \"description\": \"Column order (comma separated)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Order\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputJsonConversionHTML\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - JSON to HTML Table\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"jsonConversionHTML\"\n      }\n    },\n    \"/JSONtoXML\": {\n      \"post\": {\n        \"description\": \"Convert a JSON object to an XML string\",\n        \"operationId\": \"JsonToXml\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"{\\\"property1\\\":\\\"value\\\",\\\"property2\\\":\\\"value\\\",\\\"property3\\\":\\\"value\\\"}\",\n                  \"root\": \"Properties\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"JSON array object\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"root\": {\n                    \"description\": \"Name of root node\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Root Name\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputJsonConversionXML\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - JSON to XML\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"jsonConversionXML\"\n      }\n    },\n    \"/JoinStrings\": {\n      \"post\": {\n        \"description\": \"Join a collection of strings\",\n        \"operationId\": \"JoinStrings\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    \"The\",\n                    \"brown\",\n                    \"cow\"\n                  ],\n                  \"lower\": true,\n                  \"separator\": \";\",\n                  \"trim\": true\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection of strings to be joined\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"lower\": {\n                    \"description\": \"Convert strings in collection to lowercase\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Lowercase\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"separator\": {\n                    \"description\": \"Separator character\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Separator\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"trim\": {\n                    \"description\": \"Trim strings in collection\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Trim\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputJoinStrings\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Join strings\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"joinStrings\"\n      }\n    },\n    \"/MarketIndex\": {\n      \"post\": {\n        \"description\": \"Get current and historical market index information\",\n        \"operationId\": \"MarketIndex\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"date\": \"2020-10-07T00:00:00.000Z\",\n                  \"symbol\": \"DJI.INDX\"\n                },\n                \"properties\": {\n                  \"date\": {\n                    \"description\": \"Date (yyyy-MM-dd, leave empty for last trading day)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Date\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"symbol\": {\n                    \"description\": \"Market index\",\n                    \"enum\": [\n                      \"DJA.INDX (Dow Jones Composite Average)\",\n                      \"DJI.INDX (Dow Jones Industrial Average)\",\n                      \"DJT.INDX (Dow Jones Transportation)\",\n                      \"DJUS.INDX (Dow Jones US)\",\n                      \"DXY.INDX (US Dollar Index)\",\n                      \"GDOW.INDX (Global Dow USD)\",\n                      \"NY.INDX (NYSE US 100 Index)\",\n                      \"NYA.INDX (NYSE Composite)\",\n                      \"IXIC.INDX (NASDAQ Composite)\",\n                      \"NDX.INDX (NASDAQ 100)\",\n                      \"GSPC.INDX (S\\u0026P 500)\",\n                      \"ES.INDX (S\\u0026P 500 Futures)\",\n                      \"MID.INDX (S\\u0026P Midcap 400)\",\n                      \"GPTSE.INDX (S\\u0026P TSX Composite Index [Canada])\",\n                      \"FTSE.INDX (FTSE 100 Index [UK])\",\n                      \"CDAXX.INDX (DAX Composite Index [Germany])\",\n                      \"GDAXI.INDX (DAX Index [Germany])\",\n                      \"HSCE.INDX (Hang Seng China Enterprise (CEI))\",\n                      \"HSI.INDX (Hang Seng Index [Hong Kong])\",\n                      \"N100.INDX (EuroNext 100)\",\n                      \"N225.INDX (Nikkei 225 Index)\",\n                      \"RTSI.INDX (RTSI Index [Russia])\",\n                      \"SSEC.INDX (Shanghai Composite)\",\n                      \"SSMI.INDX (Swiss Market Index)\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Index\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputMarketIndex\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"adj_close\": 72.7,\n                    \"adj_high\": 74.32,\n                    \"adj_low\": 72.245,\n                    \"adj_open\": 73.84,\n                    \"adj_volume\": 1.5151304E7,\n                    \"close\": 72.7,\n                    \"date\": \"2020-10-07T00:00:00+0000\",\n                    \"exchange\": \"INDX\",\n                    \"high\": 74.32,\n                    \"low\": 72.245,\n                    \"open\": 73.84,\n                    \"symbol\": \"DJI.INDX\",\n                    \"volume\": 1.5151304E7\n                  },\n                  \"properties\": {\n                    \"adj_close\": {\n                      \"description\": \"Adjusted close value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Adjusted Close\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"adj_high\": {\n                      \"description\": \"Adjusted high value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Adjusted High\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"adj_low\": {\n                      \"description\": \"Adjusted low value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Adjusted Low\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"adj_open\": {\n                      \"description\": \"Adjusted open value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Adjusted Open\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"adj_volume\": {\n                      \"description\": \"Adjusted trading volume\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Adjusted Volume\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"close\": {\n                      \"description\": \"Close value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Close\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"date\": {\n                      \"description\": \"Date\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Date\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"exchange\": {\n                      \"description\": \"Market exchange\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Exchange\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"high\": {\n                      \"description\": \"High value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"High\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"low\": {\n                      \"description\": \"Low value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Low\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"open\": {\n                      \"description\": \"Open value\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Open\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"symbol\": {\n                      \"description\": \"Index symbol\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Symbol\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"volume\": {\n                      \"description\": \"Trading volume\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Volume\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputMarketIndex\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Finance - Market index\",\n        \"tags\": [\n          \"Finance\"\n        ],\n        \"x-codegen-request-body-name\": \"marketIndex\"\n      }\n    },\n    \"/QueryJSON\": {\n      \"post\": {\n        \"description\": \"Query a JSON object using a JSONPath expression\",\n        \"operationId\": \"QueryJson\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"{\\\"properties\\\": [{\\\"name\\\":\\\"ID\\\",\\\"value\\\":\\\"1234\\\"},{\\\"name\\\":\\\"Title\\\",\\\"value\\\":\\\"Some Title\\\"}]}\",\n                  \"query\": \"$.properties[?(@.name \\u003d\\u003d \\\"ID\\\")].value\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"XML or JSON string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"query\": {\n                    \"description\": \"XPath or JSONPath query\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Query\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDataQuery\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - Query JSON\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"inputDataQuery\"\n      }\n    },\n    \"/QueryXML\": {\n      \"post\": {\n        \"description\": \"Query an XML string using an XPath expression\",\n        \"operationId\": \"QueryXml\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"{\\\"properties\\\": [{\\\"name\\\":\\\"ID\\\",\\\"value\\\":\\\"1234\\\"},{\\\"name\\\":\\\"Title\\\",\\\"value\\\":\\\"Some Title\\\"}]}\",\n                  \"query\": \"$.properties[?(@.name \\u003d\\u003d \\\"ID\\\")].value\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"XML or JSON string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"query\": {\n                    \"description\": \"XPath or JSONPath query\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Query\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDataQuery\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - Query XML\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"inputDataQuery\"\n      }\n    },\n    \"/RandomNumber\": {\n      \"post\": {\n        \"description\": \"Generate a random number within a specified range\",\n        \"operationId\": \"RandomNumber\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"end\": 1000000.0,\n                  \"start\": 1.0\n                },\n                \"properties\": {\n                  \"end\": {\n                    \"description\": \"End of range\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"End\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"start\": {\n                    \"description\": \"Start of range\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Start\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputNumberRange\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Random number\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"numberRange\"\n      }\n    },\n    \"/RedactString\": {\n      \"post\": {\n        \"description\": \"Redact a strng containing sensitive content\",\n        \"operationId\": \"RedactString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"regex\": \"[A-Za-z]{5}\",\n                  \"source\": \"The brown cow\",\n                  \"value\": \"brown\",\n                  \"values\": [\n                    \"The\",\n                    \"brown\",\n                    \"cow\"\n                  ]\n                },\n                \"properties\": {\n                  \"regex\": {\n                    \"description\": \"Regular expression pattern for matching strings\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"-OR- Regular Expression\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"description\": \"String containing the complete text\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source String\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Individual string to redact\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"values\": {\n                    \"description\": \"Collection of strings to redact\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"-OR- Values Collection\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputRedactString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Redact string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"redactString\"\n      }\n    },\n    \"/RemoveFromCollection\": {\n      \"post\": {\n        \"description\": \"Remove an item from a collection\",\n        \"operationId\": \"RemoveFromCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"index\": \"0\",\n                  \"input\": [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                  ],\n                  \"item\": \"d\",\n                  \"items\": \"\"\n                },\n                \"properties\": {\n                  \"index\": {\n                    \"description\": \"Index position for operation (leave blank to specify end of collection)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Index\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of values or objects to modify\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"item\": {\n                    \"description\": \"Item (for multiple items, leave blank and use Items)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Item\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"items\": {\n                    \"description\": \"Items (Collection, for a single item leave blank and use Item)\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Items\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionModify\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Collection modification parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Modified collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Modified collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionResult\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Remove from collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionModify\"\n      }\n    },\n    \"/ReplaceString\": {\n      \"post\": {\n        \"description\": \"Replace one value with another in a string\",\n        \"operationId\": \"ReplaceString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"replacement\": \"dog\",\n                  \"source\": \"The brown cow\",\n                  \"value\": \"cow\"\n                },\n                \"properties\": {\n                  \"replacement\": {\n                    \"description\": \"Replacement text\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Replacement\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"description\": \"String containing the text to be replaced\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"value\": {\n                    \"description\": \"Text to replace\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputReplaceString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Replace string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"replaceString\"\n      }\n    },\n    \"/ReplaceValuesInCollection\": {\n      \"post\": {\n        \"description\": \"Replace whole or partial strings in a collection\",\n        \"operationId\": \"ReplaceValuesInCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"ignoreCase\": true,\n                  \"input\": [\n                    \"the brown cow\",\n                    \"jumped over\",\n                    \"the brown dog\"\n                  ],\n                  \"match\": \"Brown\",\n                  \"replacement\": \"spotted\"\n                },\n                \"properties\": {\n                  \"ignoreCase\": {\n                    \"default\": true,\n                    \"description\": \"Ignore case\",\n                    \"enum\": [\n                      true,\n                      false\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Ignore case\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of strings\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"Match value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Match value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"replacement\": {\n                    \"description\": \"Replacement value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Replacement value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionReplace\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Replace values in collection parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Modified collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Modified collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionResult\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Replace values in collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionReplace\"\n      }\n    },\n    \"/ResizeImage\": {\n      \"post\": {\n        \"description\": \"Resize an image\",\n        \"operationId\": \"ResizeImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"algorithm\": {\n                    \"default\": \"Bicubic (default)\",\n                    \"description\": \"Optimize output quality of the target image\",\n                    \"enum\": [\n                      \"Bicubic (default)\",\n                      \"Bilinear\",\n                      \"Cubic (Box)\",\n                      \"Cubic (Catmull-Rom)\",\n                      \"Cubic (Hermite)\",\n                      \"Cubic (Spline)\",\n                      \"Nearest Neighbor\",\n                      \"Sinc (Lanczos2)\",\n                      \"Sinc (Lanczos3)\",\n                      \"Sinc (Lanczos5)\",\n                      \"Sinc (Lanczos8)\",\n                      \"Robidoux\",\n                      \"Robidoux Sharp\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Resampling Algorithm\"\n                  },\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"height\": {\n                    \"description\": \"Image height (pixels or percent)\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Height\"\n                  },\n                  \"units\": {\n                    \"default\": \"Pixels\",\n                    \"description\": \"Image adjustment units\",\n                    \"enum\": [\n                      \"Pixels\",\n                      \"Percent\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Units\"\n                  },\n                  \"width\": {\n                    \"description\": \"Image width (pixels or percent)\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Width\"\n                  }\n                },\n                \"required\": [\n                  \"algorithm\",\n                  \"file\",\n                  \"units\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"image/bmp\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/gif\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/jpeg\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"image/png\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Resize Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/RotateImage\": {\n      \"post\": {\n        \"description\": \"Rotate an image by specified number of degrees\",\n        \"operationId\": \"RotateImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"degrees\": {\n                    \"description\": \"Number of degrees\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Degrees\"\n                  },\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  }\n                },\n                \"required\": [\n                  \"degrees\",\n                  \"file\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Rotate Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/RoundNumber\": {\n      \"post\": {\n        \"description\": \"Round a numeric value up or down\",\n        \"operationId\": \"RoundNumber\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": 0.195928\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Numeric value to calculate\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateNumber\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Numeric calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Round number\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateNumber\"\n      }\n    },\n    \"/ShortenLink\": {\n      \"post\": {\n        \"description\": \"Generate a simple, short URL from a complex URL\",\n        \"operationId\": \"ShortenLink\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"http://www.somewebsite.com/path1/path2?query1\\u003dvalue\\u0026query2\\u003dvalue\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"String variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Shorten hyperlink\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/SortCollection\": {\n      \"post\": {\n        \"description\": \"Sort a collection of strings\",\n        \"operationId\": \"SortCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": [\n                    \"a\",\n                    \"d\",\n                    \"c\",\n                    \"b\",\n                    \"e\"\n                  ],\n                  \"order\": \"Ascending\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"Collection of strings to sort\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"order\": {\n                    \"default\": \"Ascending\",\n                    \"description\": \"Sort order\",\n                    \"enum\": [\n                      \"Ascending\",\n                      \"Descending\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Order\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSort\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Sort collection parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Modified collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Modified collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputCollectionResult\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Sort collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSort\"\n      }\n    },\n    \"/SpeechToText\": {\n      \"post\": {\n        \"description\": \"Convert audio file to text (10MB limit)\",\n        \"operationId\": \"SpeechToText\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"description\": \"Source audio file (WAV, MP3, AAC, M4A)\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"language\": {\n                    \"default\": \"English (United States)\",\n                    \"description\": \"Language of audio input\",\n                    \"enum\": [\n                      \"Arabic (Bahrain)\",\n                      \"Arabic (Egypt)\",\n                      \"Arabic (Iraq)\",\n                      \"Arabic (Jordan)\",\n                      \"Arabic (Kuwait)\",\n                      \"Arabic (Lebanon)\",\n                      \"Arabic (Oman)\",\n                      \"Arabic (Qatar)\",\n                      \"Arabic (Saudi Arabia)\",\n                      \"Arabic (Syria)\",\n                      \"Arabic (United Arab Emirates)\",\n                      \"Bulgarian (Bulgaria)\",\n                      \"Catalan (Spain)\",\n                      \"Chinese (Cantonese, Traditional)\",\n                      \"Chinese (Mandarin, Simplified)\",\n                      \"Chinese (Taiwanese Mandarin)\",\n                      \"Croatian (Croatia)\",\n                      \"Czech (Czech Republic)\",\n                      \"Danish (Denmark)\",\n                      \"Dutch (Netherlands)\",\n                      \"English (Australia)\",\n                      \"English (Canada)\",\n                      \"English (Hong Kong)\",\n                      \"English (India)\",\n                      \"English (Ireland)\",\n                      \"English (New Zealand)\",\n                      \"English (Philippines)\",\n                      \"English (Singapore)\",\n                      \"English (South Africa)\",\n                      \"English (United Kingdom)\",\n                      \"English (United States)\",\n                      \"Estonian(Estonia)\",\n                      \"Finnish (Finland)\",\n                      \"French (Canada)\",\n                      \"French (France)\",\n                      \"German (Germany)\",\n                      \"Greek (Greece)\",\n                      \"Gujarati (Indian)\",\n                      \"Hindi (India)\",\n                      \"Hungarian (Hungary)\",\n                      \"Irish(Ireland)\",\n                      \"Italian (Italy)\",\n                      \"Japanese (Japan)\",\n                      \"Korean (Korea)\",\n                      \"Latvian (Latvia)\",\n                      \"Lithuanian (Lithuania)\",\n                      \"Maltese(Malta)\",\n                      \"Marathi (India)\",\n                      \"Norwegian (Norway)\",\n                      \"Polish (Poland)\",\n                      \"Portuguese (Brazil)\",\n                      \"Portuguese (Portugal)\",\n                      \"Romanian (Romania)\",\n                      \"Russian (Russia)\",\n                      \"Slovak (Slovakia)\",\n                      \"Slovenian (Slovenia)\",\n                      \"Spanish (Argentina)\",\n                      \"Spanish (Bolivia)\",\n                      \"Spanish (Chile)\",\n                      \"Spanish (Colombia)\",\n                      \"Spanish (Costa Rica)\",\n                      \"Spanish (Cuba)\",\n                      \"Spanish (Dominican Republic)\",\n                      \"Spanish (Ecuador)\",\n                      \"Spanish (El Salvador)\",\n                      \"Spanish (Guatemala)\",\n                      \"Spanish (Honduras)\",\n                      \"Spanish (Mexico)\",\n                      \"Spanish (Nicaragua)\",\n                      \"Spanish (Panama)\",\n                      \"Spanish (Paraguay)\",\n                      \"Spanish (Peru)\",\n                      \"Spanish (Puerto Rico)\",\n                      \"Spanish (Spain)\",\n                      \"Spanish (Uruguay)\",\n                      \"Spanish (USA)\",\n                      \"Spanish (Venezuela)\",\n                      \"Swedish (Sweden)\",\n                      \"Tamil (India)\",\n                      \"Telugu (India)\",\n                      \"Thai (Thailand)\",\n                      \"Turkish (Turkey)\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Language\"\n                  }\n                },\n                \"required\": [\n                  \"file\",\n                  \"language\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Speech to Text\",\n        \"tags\": [\n          \"Text\"\n        ]\n      }\n    },\n    \"/SplitCollection\": {\n      \"post\": {\n        \"description\": \"Split a collection of items by matching value or index\",\n        \"operationId\": \"SplitCollection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"index\": \"\",\n                  \"input\": [\n                    \"the cow\",\n                    \"jumped over\",\n                    \"the moon\"\n                  ],\n                  \"match\": \"jumped over\"\n                },\n                \"properties\": {\n                  \"index\": {\n                    \"description\": \"Index location to split (leave empty to use Match value)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Index\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Collection of items to split\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Collection\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"match\": {\n                    \"description\": \"String to match (explicit, case-insensitive, leave empty to use Index)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Match Value\",\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCollectionSplit\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Split collection parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result1\": [\n                      \"a\",\n                      \"b\",\n                      \"c\"\n                    ],\n                    \"result2\": [\n                      \"d\",\n                      \"e\",\n                      \"f\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"result1\": {\n                      \"description\": \"First collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"First collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    },\n                    \"result2\": {\n                      \"description\": \"Second collection result\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Second collection result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputMultiCollection\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Collections - Split collection\",\n        \"tags\": [\n          \"Collections\"\n        ],\n        \"x-codegen-request-body-name\": \"collectionSplit\"\n      }\n    },\n    \"/SplitString\": {\n      \"post\": {\n        \"description\": \"Split a string based upon one or more characters\",\n        \"operationId\": \"SplitString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"characters\": \",\",\n                  \"input\": \"The,brown,cow\"\n                },\n                \"properties\": {\n                  \"characters\": {\n                    \"description\": \"One or more characters that will be used to split the text\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Character(s)\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Text to split\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputSplitString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"data\": [\n                      \"string\"\n                    ]\n                  },\n                  \"properties\": {\n                    \"data\": {\n                      \"description\": \"data\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"data\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputStringArray\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Split string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"splitString\"\n      }\n    },\n    \"/StandardDeviation\": {\n      \"post\": {\n        \"description\": \"Calculate the standard deviation of two or more numbers\",\n        \"operationId\": \"StandardDeviation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"decimals\": 2.0,\n                  \"input\": [\n                    1.0,\n                    2.0,\n                    3.0,\n                    4.0,\n                    5.0\n                  ]\n                },\n                \"properties\": {\n                  \"decimals\": {\n                    \"description\": \"Round to number of decimal places\",\n                    \"minimum\": 0.0,\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Decimal Places\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Colllection of values to calculate\",\n                    \"items\": {\n                      \"type\": \"number\",\n                      \"in\": \"REQUEST_BODY\"\n                    },\n                    \"type\": \"array\",\n                    \"x-ms-summary\": \"Values\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputCalculateSeries\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"description\": \"Series calculation parameters\",\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": 1.0\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"number\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputNumber\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Math - Calculate standard deviation\",\n        \"tags\": [\n          \"Math\"\n        ],\n        \"x-codegen-request-body-name\": \"calculateSeries\"\n      }\n    },\n    \"/StockPrices\": {\n      \"post\": {\n        \"description\": \"Get current and historical stock price information\",\n        \"operationId\": \"StockPrices\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"date\": \"2020-10-07T00:00:00.000Z\",\n                  \"exchange\": \"XNYS (New York Stock Exchange)\",\n                  \"symbols\": \"MMM,CVX\"\n                },\n                \"properties\": {\n                  \"date\": {\n                    \"description\": \"Date (yyyy-MM-dd, leave empty for latest)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Date\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"exchange\": {\n                    \"description\": \"Stock exchange\",\n                    \"enum\": [\n                      \"XNYS (New York Stock Exchange)\",\n                      \"XNAS (NASDAQ Stock Exchange)\",\n                      \"XBRU (Euronext Brussels)\",\n                      \"XTSE (Toronto Stock Exchange)\",\n                      \"XCNQ (Candadian Securities Exchange)\",\n                      \"XSHG (Shanghai Stock Exchange)\",\n                      \"XCSE (Copenhagen Stock Exchange)\",\n                      \"XPAR (Euronext Paris)\",\n                      \"XFRA (Deutsche Borse)\",\n                      \"XHKG (Hong Kong Stock Exchange)\",\n                      \"XNSE (National Stock Exchange India)\",\n                      \"XTAE (Tel Aviv Stock Exchange)\",\n                      \"XNGO (Nagoya Stock Exchange)\",\n                      \"XFKA (Fukuoka Stock Exchange)\",\n                      \"XSAP (Sapporo Stock Exchange)\",\n                      \"XMEX (Mexican Stock Exchange)\",\n                      \"XNZE (New Zealand Stock Exchange)\",\n                      \"XLIS (Euronext Lisbon)\",\n                      \"MISX (Moscow Stock Exchange)\",\n                      \"XSES (Singapore Stock Exchange)\",\n                      \"XLON (London Stock Exchange)\",\n                      \"XASE (American Stock Exchange)\",\n                      \"XASX (Australia Stock Exchange)\",\n                      \"XDFM (Dubai Financial Market)\",\n                      \"XBKK (Stock Exchange of Thailand)\",\n                      \"XSWX (SIX Swiss Exchange)\",\n                      \"XSTO (Stockholm Stock Exchange)\",\n                      \"BMEX (Bolsas y Mercados Españoles)\",\n                      \"XJSE (Johannesburg Stock Exchange)\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Exchange\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"symbols\": {\n                    \"description\": \"Stock ticker symbols (comma-separated, max 20)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Symbols\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputStockPrices\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": [\n                      {\n                        \"close\": 72.7,\n                        \"date\": \"2020-10-07T00:00:00+0000\",\n                        \"exchange\": \"XNYS\",\n                        \"high\": 74.32,\n                        \"last\": 72.3,\n                        \"low\": 72.245,\n                        \"open\": 73.84,\n                        \"symbol\": \"CVX\",\n                        \"volume\": 1.5151304E7\n                      }\n                    ]\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Stock price information\",\n                      \"items\": {\n                        \"properties\": {\n                          \"close\": {\n                            \"description\": \"Close\",\n                            \"type\": \"number\",\n                            \"x-ms-summary\": \"Close\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"date\": {\n                            \"description\": \"Date\",\n                            \"type\": \"string\",\n                            \"x-ms-summary\": \"Date\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"exchange\": {\n                            \"description\": \"Stock exchange\",\n                            \"type\": \"string\",\n                            \"x-ms-summary\": \"Exchange\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"high\": {\n                            \"description\": \"High\",\n                            \"type\": \"number\",\n                            \"x-ms-summary\": \"High\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"low\": {\n                            \"description\": \"Low\",\n                            \"type\": \"number\",\n                            \"x-ms-summary\": \"Low\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"open\": {\n                            \"description\": \"Open\",\n                            \"type\": \"number\",\n                            \"x-ms-summary\": \"Open\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"symbol\": {\n                            \"description\": \"Ticker symbol\",\n                            \"type\": \"string\",\n                            \"x-ms-summary\": \"Symbol\",\n                            \"in\": \"RESPONSE_BODY\"\n                          },\n                          \"volume\": {\n                            \"description\": \"Volume\",\n                            \"type\": \"number\",\n                            \"x-ms-summary\": \"Volume\",\n                            \"in\": \"RESPONSE_BODY\"\n                          }\n                        },\n                        \"type\": \"object\",\n                        \"in\": \"RESPONSE_BODY\"\n                      },\n                      \"type\": \"array\",\n                      \"x-ms-summary\": \"Stock price information\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputStockPrice\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Finance - Stock prices\",\n        \"tags\": [\n          \"Finance\"\n        ],\n        \"x-codegen-request-body-name\": \"stockPrices\"\n      }\n    },\n    \"/StringToFile\": {\n      \"post\": {\n        \"description\": \"Convert text string to file\",\n        \"operationId\": \"StringToFile\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"extension\": \"TXT\",\n                  \"filename\": \"Test\",\n                  \"input\": \"This is a test.\"\n                },\n                \"properties\": {\n                  \"extension\": {\n                    \"default\": \"TXT\",\n                    \"description\": \"File extension\",\n                    \"enum\": [\n                      \"TXT\",\n                      \"CSV\",\n                      \"HTML\",\n                      \"XML\",\n                      \"CSS\",\n                      \"JSON\",\n                      \"JS\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Extension\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"filename\": {\n                    \"description\": \"Name of file (without extension)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Filename\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Text string (body of file)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputStringToFile\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"text/css\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"text/csv\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"text/javascript\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"text/css\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"text/csv\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"text/javascript\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - String to File\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"inputStringToFile\"\n      }\n    },\n    \"/TextToSpeech\": {\n      \"post\": {\n        \"description\": \"Convert text to an audio file using AI-driven speech synthesis.\",\n        \"operationId\": \"TextToSpeech\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"text\": \"This is sample text.\",\n                  \"type\": \"PlainText\",\n                  \"voice\": \"en-US, Aria (Female)\"\n                },\n                \"properties\": {\n                  \"text\": {\n                    \"description\": \"Text to convert (10,000 characters max)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"type\": {\n                    \"default\": \"PlainText\",\n                    \"description\": \"Text or file type\",\n                    \"enum\": [\n                      \"PlainText\",\n                      \"SSML\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text or file type\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"voice\": {\n                    \"default\": \"en-US, Aria (Female)\",\n                    \"description\": \"Voice locale (must match language of input text)\",\n                    \"enum\": [\n                      \"ar-EG, Hoda (Female)\",\n                      \"ar-SA, Naayf (Male)\",\n                      \"bg-BG, Ivan (Male)\",\n                      \"ca-ES, Herena (Female)\",\n                      \"cs-CZ, Jakub (Male)\",\n                      \"da-DK, Helle (Female)\",\n                      \"de-AT, Michael (Male)\",\n                      \"de-CH, Karsten (Male)\",\n                      \"de-DE, Hedda (Female)\",\n                      \"de-DE, Stefan (Male)\",\n                      \"el-GR, Stefanos (Male)\",\n                      \"en-AU, Catherine (Female)\",\n                      \"en-AU, Hayley (Female)\",\n                      \"en-CA, Heather (Female)\",\n                      \"en-CA, Linda (Female)\",\n                      \"en-GB, George (Male)\",\n                      \"en-GB, Hazel (Female)\",\n                      \"en-GB, Susan (Female)\",\n                      \"en-IE, Sean (Male)\",\n                      \"en-IN, Heera (Female)\",\n                      \"en-IN, Priya (Female)\",\n                      \"en-IN, Ravi (Male)\",\n                      \"en-US, Aria (Female)\",\n                      \"en-US, Benjamin (Male)\",\n                      \"en-US, Guy (Male)\",\n                      \"en-US, Zira (Female)\",\n                      \"es-ES, Helena (Female)\",\n                      \"es-ES, Laura (Female)\",\n                      \"es-ES, Pablo (Male)\",\n                      \"es-MX, Hilda (Female)\",\n                      \"es-MX, Raul (Male)\",\n                      \"fi-FI, Heidi (Female)\",\n                      \"fr-CA, Caroline (Female)\",\n                      \"fr-CA, Harmonie (Female)\",\n                      \"fr-CH, Guillaume (Male)\",\n                      \"fr-FR, Hortense (Female)\",\n                      \"fr-FR, Julie (Female)\",\n                      \"fr-FR, Paul (Male)\",\n                      \"he-IL, Asaf (Male)\",\n                      \"hi-IN, Hemant (Male)\",\n                      \"hi-IN, Kalpana (Female)\",\n                      \"hr-HR, Matej (Male)\",\n                      \"hu-HU, Szabolcs (Male)\",\n                      \"id-ID, Andika (Male)\",\n                      \"it-IT, Cosimo (Male)\",\n                      \"it-IT, Lucia (Female)\",\n                      \"ja-JP, Ayumi (Female)\",\n                      \"ja-JP, Haruka (Female)\",\n                      \"ja-JP, Ichiro (Male)\",\n                      \"ko-KR, Heami (Female)\",\n                      \"ms-MY, Rizwan (Male)\",\n                      \"nb-NO, Hulda (Female)\",\n                      \"nl-NL, Hanna (Female)\",\n                      \"pl-PL, Paulina (Female)\",\n                      \"pt-BR, Daniel (Male)\",\n                      \"pt-BR, Heloisa (Female)\",\n                      \"pt-PT, Helia (Female)\",\n                      \"ro-RO, Andrei (Male)\",\n                      \"ru-RU, Ekaterina (Female)\",\n                      \"ru-RU, Irina (Female)\",\n                      \"ru-RU, Pavel (Male)\",\n                      \"sk-SK, Filip (Male)\",\n                      \"sl-SI, Lado (Male)\",\n                      \"sv-SE, Hedvig (Female)\",\n                      \"ta-IN, Valluvar (Male)\",\n                      \"te-IN, Chitra (Female)\",\n                      \"th-TH, Pattara (Male)\",\n                      \"tr-TR, Seda (Female)\",\n                      \"vi-VN, An (Male)\",\n                      \"zh-CN, Huihui (Female)\",\n                      \"zh-CN, Kangkang (Male)\",\n                      \"zh-CN, Yaoyao (Female)\",\n                      \"zh-HK, Danny (Male)\",\n                      \"zh-HK, Tracy (Female)\",\n                      \"zh-TW, HanHan (Female)\",\n                      \"zh-TW, Yating (Female)\",\n                      \"zh-TW, Zhiwei (Male)\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Voice\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputTextToSpeech\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"audio/mp3\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"audio/mp3\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Text to Speech\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"textToSpeech\"\n      }\n    },\n    \"/TranslateString\": {\n      \"post\": {\n        \"description\": \"Translate a string into a different language\",\n        \"operationId\": \"TranslateString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"The brown cow\",\n                  \"language\": \"German\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"String containing the text to be translated\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"language\": {\n                    \"description\": \"Translation language\",\n                    \"enum\": [\n                      \"Arabic\",\n                      \"Chinese (Simplified)\",\n                      \"Czech\",\n                      \"Danish\",\n                      \"Dutch\",\n                      \"English\",\n                      \"Finnish\",\n                      \"French\",\n                      \"German\",\n                      \"Greek\",\n                      \"Hindi\",\n                      \"Hungarian\",\n                      \"Italian\",\n                      \"Japanese\",\n                      \"Klingon\",\n                      \"Korean\",\n                      \"Norweigan\",\n                      \"Polish\",\n                      \"Portuguese\",\n                      \"Russian\",\n                      \"Spanish\",\n                      \"Swedish\",\n                      \"Turkish\",\n                      \"Vietnamese\",\n                      \"Welsh\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Language\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputTranslateString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Translate string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"translateString\"\n      }\n    },\n    \"/TrimString\": {\n      \"post\": {\n        \"description\": \"Trim leading or trailing whitespace from a string\",\n        \"operationId\": \"TrimString\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"  The brown cow  \",\n                  \"type\": \"Both\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"String containing the text to be trimmed\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"type\": {\n                    \"description\": \"Type of white space to remove\",\n                    \"enum\": [\n                      \"Start\",\n                      \"End\",\n                      \"Both\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Type\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputTrimString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Trim string\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"trimString\"\n      }\n    },\n    \"/URLDecode\": {\n      \"post\": {\n        \"description\": \"Decode an encoded URL\",\n        \"operationId\": \"UrlDecode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"The%20brown%20cow\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"Encoded string variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Decode URL\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/URLEncode\": {\n      \"post\": {\n        \"description\": \"Generate an encoded string from a complex hyperlink\",\n        \"operationId\": \"UrlEncode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"The brown cow\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"String variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputString\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Encode URL\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/ValidateEmail\": {\n      \"post\": {\n        \"description\": \"Determine if an email address is valid\",\n        \"operationId\": \"ValidateEmail\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"source\": \"some user @ bademail-com\"\n                },\n                \"properties\": {\n                  \"source\": {\n                    \"description\": \"String variable or text value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Validate email\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"stringInput\"\n      }\n    },\n    \"/VerifyHash\": {\n      \"post\": {\n        \"description\": \"Verify a hashed value against the original source string\",\n        \"operationId\": \"VerifyHash\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"algorithm\": \"SHA256\",\n                  \"hash\": \"a52b8248f023cebd33aeeddda695f60d2561c0c9\",\n                  \"source\": \"this is a really good test\"\n                },\n                \"properties\": {\n                  \"algorithm\": {\n                    \"description\": \"Hash algorithm\",\n                    \"enum\": [\n                      \"MD5\",\n                      \"SHA1\",\n                      \"SHA256\",\n                      \"SHA384\",\n                      \"SHA512\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Algorithm\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"hash\": {\n                    \"description\": \"Hashed result\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Hash\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Original source string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Input\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputVerifyHash\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": true\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"boolean\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputBoolean\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Text - Verify hash\",\n        \"tags\": [\n          \"Text\"\n        ],\n        \"x-codegen-request-body-name\": \"verifyHash\"\n      }\n    },\n    \"/WatermarkImage\": {\n      \"post\": {\n        \"description\": \"Add watermark text to an image\",\n        \"operationId\": \"WatermarkImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"color\": {\n                    \"default\": \"000000\",\n                    \"description\": \"Text color hex value\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text Color\"\n                  },\n                  \"file\": {\n                    \"description\": \"Source image file\",\n                    \"format\": \"binary\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"File\"\n                  },\n                  \"font\": {\n                    \"default\": \"Arial\",\n                    \"description\": \"Text font\",\n                    \"enum\": [\n                      \"Arial\",\n                      \"Arial Black\",\n                      \"Arial Narrow\",\n                      \"Book Antiqua\",\n                      \"Britannic Bold\",\n                      \"Brush Script MT\",\n                      \"Calisto MT\",\n                      \"Century Gothic\",\n                      \"Century Schoolbook\",\n                      \"Colonna MT\",\n                      \"Comic Sans MS\",\n                      \"Cooper Black\",\n                      \"Copperplate Gothic Bold\",\n                      \"Copperplate Gothic Light\",\n                      \"Courier New\",\n                      \"Edwardian Script ITC\",\n                      \"Engravers MT\",\n                      \"Franklin Gothic Demi\",\n                      \"Franklin Gothic Heavy\",\n                      \"Franklin Gothic Medium\",\n                      \"Garamond\",\n                      \"Georgia\",\n                      \"Gill Sans MT\",\n                      \"Gill Sans MT Condensed\",\n                      \"Gill Sans Ultra Bold\",\n                      \"Gill Sans Ultra Bold Condensed\",\n                      \"Goudy Old Style\",\n                      \"Haettenschweiler\",\n                      \"Holidays MT\",\n                      \"Impact\",\n                      \"Lucida Calligraphy\",\n                      \"Lucida Console\",\n                      \"Lucida Handwriting\",\n                      \"Lucida Sans Typewriter\",\n                      \"Lucida Sans Unicode\",\n                      \"Marlett\",\n                      \"Microsoft Sans Serif\",\n                      \"MS Outlook\",\n                      \"Palace Script MT\",\n                      \"Palatino Linotype\",\n                      \"Papyrus\",\n                      \"Playbill\",\n                      \"Rockwell\",\n                      \"Rockwell Condensed\",\n                      \"Rockwell Extra Bold\",\n                      \"Script MT Bold\",\n                      \"Stencil\",\n                      \"Symbol\",\n                      \"Tahoma\",\n                      \"Times New Roman\",\n                      \"Trebuchet MS\",\n                      \"Verdana\",\n                      \"Vivaldi\",\n                      \"Webdings\",\n                      \"Wingdings 1\",\n                      \"Wingdings 2\",\n                      \"Wingdings 3\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Font\"\n                  },\n                  \"horizontal\": {\n                    \"default\": \"Center\",\n                    \"description\": \"Horizontal alignment\",\n                    \"enum\": [\n                      \"Left\",\n                      \"Center\",\n                      \"Right\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Horizontal\"\n                  },\n                  \"size\": {\n                    \"description\": \"Font size (points)\",\n                    \"type\": \"number\",\n                    \"x-ms-summary\": \"Font Size\"\n                  },\n                  \"text\": {\n                    \"description\": \"Watermark text\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Text\"\n                  },\n                  \"vertical\": {\n                    \"default\": \"Center\",\n                    \"description\": \"Vertical alignment\",\n                    \"enum\": [\n                      \"Top\",\n                      \"Center\",\n                      \"Bottom\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Vertical\"\n                  }\n                },\n                \"required\": [\n                  \"color\",\n                  \"file\",\n                  \"font\",\n                  \"horizontal\",\n                  \"size\",\n                  \"text\",\n                  \"vertical\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"format\": \"binary\",\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Files - Watermark Image\",\n        \"tags\": [\n          \"Files\"\n        ]\n      }\n    },\n    \"/WorldTime\": {\n      \"post\": {\n        \"description\": \"Convert date and time from one time zone to another\",\n        \"operationId\": \"WorldTime\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"format\": \"yyyy-MM-dd HH:mm:ss\",\n                  \"input\": \"03/10/2010 09:00:00\",\n                  \"source\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n                  \"target\": \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\"\n                },\n                \"properties\": {\n                  \"format\": {\n                    \"description\": \"Display format (defaults to \\u0027yyyy-MM-dd HH:mm:ss\\u0027)\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Format\",\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"input\": {\n                    \"description\": \"Source date and time\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"source\": {\n                    \"default\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n                    \"enum\": [\n                      \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n                      \"Greenwich Standard Time - (GMT) Monrovia, Reykjavik\",\n                      \"W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                      \"Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                      \"Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                      \"W. Central Africa Standard Time - (GMT+01:00) West Central Africa\",\n                      \"GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul\",\n                      \"Middle East Standard Time - (GMT+02:00) Beirut\",\n                      \"Egypt Standard Time - (GMT+02:00) Cairo\",\n                      \"South Africa Standard Time - (GMT+02:00) Harare, Pretoria\",\n                      \"FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                      \"Israel Standard Time - (GMT+02:00) Jerusalem\",\n                      \"E. Europe Standard Time - (GMT+02:00) Minsk\",\n                      \"Namibia Standard Time - (GMT+02:00) Windhoek\",\n                      \"Arabic Standard Time - (GMT+03:00) Baghdad\",\n                      \"Arab Standard Time - (GMT+03:00) Kuwait, Riyadh\",\n                      \"Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n                      \"E. Africa Standard Time - (GMT+03:00) Nairobi\",\n                      \"Georgian Standard Time - (GMT+03:00) Tbilisi\",\n                      \"Iran Standard Time - (GMT+03:30) Tehran\",\n                      \"Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat\",\n                      \"Azerbaijan Standard Time - (GMT+04:00) Baku\",\n                      \"Mauritius Standard Time - (GMT+04:00) Port Louis\",\n                      \"Caucasus Standard Time - (GMT+04:00) Yerevan\",\n                      \"Afghanistan Standard Time - (GMT+04:30) Kabul\",\n                      \"Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg\",\n                      \"Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi\",\n                      \"West Asia Standard Time - (GMT+05:00) Tashkent\",\n                      \"India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                      \"Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura\",\n                      \"Nepal Standard Time - (GMT+05:45) Kathmandu\",\n                      \"N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk\",\n                      \"Central Asia Standard Time - (GMT+06:00) Astana, Dhaka\",\n                      \"Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)\",\n                      \"SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta\",\n                      \"North Asia Standard Time - (GMT+07:00) Krasnoyarsk\",\n                      \"China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                      \"North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar\",\n                      \"Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore\",\n                      \"W. Australia Standard Time - (GMT+08:00) Perth\",\n                      \"Taipei Standard Time - (GMT+08:00) Taipei\",\n                      \"Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo\",\n                      \"Korea Standard Time - (GMT+09:00) Seoul\",\n                      \"Yakutsk Standard Time - (GMT+09:00) Yakutsk\",\n                      \"Cen. Australia Standard Time - (GMT+09:30) Adelaide\",\n                      \"AUS Central Standard Time - (GMT+09:30) Darwin\",\n                      \"E. Australia Standard Time - (GMT+10:00) Brisbane\",\n                      \"AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney\",\n                      \"West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby\",\n                      \"Tasmania Standard Time - (GMT+10:00) Hobart\",\n                      \"Vladivostok Standard Time - (GMT+10:00) Vladivostok\",\n                      \"Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n                      \"New Zealand Standard Time - (GMT+12:00) Auckland, Wellington\",\n                      \"Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n                      \"Tonga Standard Time - (GMT+13:00) Nuku\\u0027alofa\",\n                      \"Azores Standard Time - (GMT-01:00) Azores\",\n                      \"Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.\",\n                      \"Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic\",\n                      \"E. South America Standard Time - (GMT-03:00) Brasilia\",\n                      \"Argentina Standard Time - (GMT-03:00) Buenos Aires\",\n                      \"SA Eastern Standard Time - (GMT-03:00) Georgetown\",\n                      \"Greenland Standard Time - (GMT-03:00) Greenland\",\n                      \"Montevideo Standard Time - (GMT-03:00) Montevideo\",\n                      \"Newfoundland Standard Time - (GMT-03:30) Newfoundland\",\n                      \"Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)\",\n                      \"SA Western Standard Time - (GMT-04:00) La Paz\",\n                      \"Central Brazilian Standard Time - (GMT-04:00) Manaus\",\n                      \"Pacific SA Standard Time - (GMT-04:00) Santiago\",\n                      \"Venezuela Standard Time - (GMT-04:30) Caracas\",\n                      \"SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n                      \"Eastern Standard Time - (GMT-05:00) Eastern Time (US \\u0026 Canada)\",\n                      \"US Eastern Standard Time - (GMT-05:00) Indiana (East)\",\n                      \"Central America Standard Time - (GMT-06:00) Central America\",\n                      \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\",\n                      \"Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n                      \"Canada Central Standard Time - (GMT-06:00) Saskatchewan\",\n                      \"US Mountain Standard Time - (GMT-07:00) Arizona\",\n                      \"Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan\",\n                      \"Mountain Standard Time - (GMT-07:00) Mountain Time (US \\u0026 Canada)\",\n                      \"Pacific Standard Time - (GMT-08:00) Pacific Time (US \\u0026 Canada)\",\n                      \"Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California\",\n                      \"Alaskan Standard Time - (GMT-09:00) Alaska\",\n                      \"Hawaiian Standard Time - (GMT-10:00) Hawaii\",\n                      \"Samoa Standard Time - (GMT-11:00) Midway Island, Samoa\",\n                      \"Dateline Standard Time - (GMT-12:00) International Date Line West\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Source Time Zone\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  },\n                  \"target\": {\n                    \"default\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n                    \"enum\": [\n                      \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n                      \"Greenwich Standard Time - (GMT) Monrovia, Reykjavik\",\n                      \"W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                      \"Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                      \"Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                      \"W. Central Africa Standard Time - (GMT+01:00) West Central Africa\",\n                      \"GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul\",\n                      \"Middle East Standard Time - (GMT+02:00) Beirut\",\n                      \"Egypt Standard Time - (GMT+02:00) Cairo\",\n                      \"South Africa Standard Time - (GMT+02:00) Harare, Pretoria\",\n                      \"FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                      \"Israel Standard Time - (GMT+02:00) Jerusalem\",\n                      \"E. Europe Standard Time - (GMT+02:00) Minsk\",\n                      \"Namibia Standard Time - (GMT+02:00) Windhoek\",\n                      \"Arabic Standard Time - (GMT+03:00) Baghdad\",\n                      \"Arab Standard Time - (GMT+03:00) Kuwait, Riyadh\",\n                      \"Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n                      \"E. Africa Standard Time - (GMT+03:00) Nairobi\",\n                      \"Georgian Standard Time - (GMT+03:00) Tbilisi\",\n                      \"Iran Standard Time - (GMT+03:30) Tehran\",\n                      \"Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat\",\n                      \"Azerbaijan Standard Time - (GMT+04:00) Baku\",\n                      \"Mauritius Standard Time - (GMT+04:00) Port Louis\",\n                      \"Caucasus Standard Time - (GMT+04:00) Yerevan\",\n                      \"Afghanistan Standard Time - (GMT+04:30) Kabul\",\n                      \"Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg\",\n                      \"Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi\",\n                      \"West Asia Standard Time - (GMT+05:00) Tashkent\",\n                      \"India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                      \"Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura\",\n                      \"Nepal Standard Time - (GMT+05:45) Kathmandu\",\n                      \"N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk\",\n                      \"Central Asia Standard Time - (GMT+06:00) Astana, Dhaka\",\n                      \"Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)\",\n                      \"SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta\",\n                      \"North Asia Standard Time - (GMT+07:00) Krasnoyarsk\",\n                      \"China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                      \"North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar\",\n                      \"Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore\",\n                      \"W. Australia Standard Time - (GMT+08:00) Perth\",\n                      \"Taipei Standard Time - (GMT+08:00) Taipei\",\n                      \"Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo\",\n                      \"Korea Standard Time - (GMT+09:00) Seoul\",\n                      \"Yakutsk Standard Time - (GMT+09:00) Yakutsk\",\n                      \"Cen. Australia Standard Time - (GMT+09:30) Adelaide\",\n                      \"AUS Central Standard Time - (GMT+09:30) Darwin\",\n                      \"E. Australia Standard Time - (GMT+10:00) Brisbane\",\n                      \"AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney\",\n                      \"West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby\",\n                      \"Tasmania Standard Time - (GMT+10:00) Hobart\",\n                      \"Vladivostok Standard Time - (GMT+10:00) Vladivostok\",\n                      \"Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n                      \"New Zealand Standard Time - (GMT+12:00) Auckland, Wellington\",\n                      \"Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n                      \"Tonga Standard Time - (GMT+13:00) Nuku\\u0027alofa\",\n                      \"Azores Standard Time - (GMT-01:00) Azores\",\n                      \"Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.\",\n                      \"Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic\",\n                      \"E. South America Standard Time - (GMT-03:00) Brasilia\",\n                      \"Argentina Standard Time - (GMT-03:00) Buenos Aires\",\n                      \"SA Eastern Standard Time - (GMT-03:00) Georgetown\",\n                      \"Greenland Standard Time - (GMT-03:00) Greenland\",\n                      \"Montevideo Standard Time - (GMT-03:00) Montevideo\",\n                      \"Newfoundland Standard Time - (GMT-03:30) Newfoundland\",\n                      \"Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)\",\n                      \"SA Western Standard Time - (GMT-04:00) La Paz\",\n                      \"Central Brazilian Standard Time - (GMT-04:00) Manaus\",\n                      \"Pacific SA Standard Time - (GMT-04:00) Santiago\",\n                      \"Venezuela Standard Time - (GMT-04:30) Caracas\",\n                      \"SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n                      \"Eastern Standard Time - (GMT-05:00) Eastern Time (US \\u0026 Canada)\",\n                      \"US Eastern Standard Time - (GMT-05:00) Indiana (East)\",\n                      \"Central America Standard Time - (GMT-06:00) Central America\",\n                      \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\",\n                      \"Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n                      \"Canada Central Standard Time - (GMT-06:00) Saskatchewan\",\n                      \"US Mountain Standard Time - (GMT-07:00) Arizona\",\n                      \"Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan\",\n                      \"Mountain Standard Time - (GMT-07:00) Mountain Time (US \\u0026 Canada)\",\n                      \"Pacific Standard Time - (GMT-08:00) Pacific Time (US \\u0026 Canada)\",\n                      \"Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California\",\n                      \"Alaskan Standard Time - (GMT-09:00) Alaska\",\n                      \"Hawaiian Standard Time - (GMT-10:00) Hawaii\",\n                      \"Samoa Standard Time - (GMT-11:00) Midway Island, Samoa\",\n                      \"Dateline Standard Time - (GMT-12:00) International Date Line West\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Target Time Zone\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputDateTimeConversion\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"DateTime - Get world time\",\n        \"tags\": [\n          \"DateTime\"\n        ],\n        \"x-codegen-request-body-name\": \"dateTimeConversion\"\n      }\n    },\n    \"/XMLtoJSON\": {\n      \"post\": {\n        \"description\": \"Convert an XML string to a JSON object\",\n        \"operationId\": \"XmlToJson\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"example\": {\n                  \"input\": \"\\u003cproperties\\u003e\\u003cproperty1\\u003evalue\\u003c/property1\\u003e\\u003c/properties\\u003e\"\n                },\n                \"properties\": {\n                  \"input\": {\n                    \"description\": \"XML string\",\n                    \"type\": \"string\",\n                    \"x-ms-summary\": \"Value\",\n                    \"required\": true,\n                    \"in\": \"REQUEST_BODY\"\n                  }\n                },\n                \"type\": \"object\",\n                \"x-schemaName\": \"inputXmlConversionJSON\",\n                \"in\": \"request_body\"\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"example\": {\n                    \"result\": \"string\"\n                  },\n                  \"properties\": {\n                    \"result\": {\n                      \"description\": \"Result\",\n                      \"type\": \"string\",\n                      \"x-ms-summary\": \"Result\",\n                      \"in\": \"RESPONSE_BODY\"\n                    }\n                  },\n                  \"type\": \"object\",\n                  \"x-schemaName\": \"outputString\",\n                  \"required\": true,\n                  \"in\": \"response_body\"\n                }\n              }\n            },\n            \"description\": \"ERROR\"\n          }\n        },\n        \"summary\": \"Data - XML to JSON\",\n        \"tags\": [\n          \"Data\"\n        ],\n        \"x-codegen-request-body-name\": \"xmlConversionJSON\"\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"inputCalculateMinMax\": {\n        \"example\": {\n          \"input\": [\n            1.0,\n            2.0,\n            3.0,\n            4.0,\n            5.0\n          ],\n          \"type\": \"Minimum\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Colllection of values to calculate\",\n            \"items\": {\n              \"type\": \"number\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"type\": {\n            \"default\": \"Minimum\",\n            \"description\": \"Minimum or Maximum\",\n            \"enum\": [\n              \"Minimum\",\n              \"Maximum\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Min or Max\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCalculateMinMax\"\n      },\n      \"inputCalculateNumber\": {\n        \"example\": {\n          \"decimals\": 2.0,\n          \"input\": 0.195928\n        },\n        \"properties\": {\n          \"decimals\": {\n            \"description\": \"Round to number of decimal places\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Decimal Places\"\n          },\n          \"input\": {\n            \"description\": \"Numeric value to calculate\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"decimals\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCalculateNumber\"\n      },\n      \"inputCalculateNumbers\": {\n        \"example\": {\n          \"decimals\": 2.0,\n          \"input\": 4.0,\n          \"value\": 2.0\n        },\n        \"properties\": {\n          \"decimals\": {\n            \"description\": \"Round to number of decimal places\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Decimal Places\"\n          },\n          \"input\": {\n            \"description\": \"Numeric value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Primary Value\"\n          },\n          \"value\": {\n            \"description\": \"Addend, subtrahend, factor, divisor or radicand\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Secondary Value\"\n          }\n        },\n        \"required\": [\n          \"decimals\",\n          \"input\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCalculateNumbers\"\n      },\n      \"inputCalculatePower\": {\n        \"example\": {\n          \"decimals\": 2.0,\n          \"input\": 5.53,\n          \"power\": 4.0\n        },\n        \"properties\": {\n          \"decimals\": {\n            \"description\": \"Round to number of decimal places\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Decimal Places\"\n          },\n          \"input\": {\n            \"description\": \"Number to raise\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Number\"\n          },\n          \"power\": {\n            \"description\": \"Power\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Power\"\n          }\n        },\n        \"required\": [\n          \"decimals\",\n          \"input\",\n          \"power\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCalculatePower\"\n      },\n      \"inputCalculateSeries\": {\n        \"example\": {\n          \"decimals\": 2.0,\n          \"input\": [\n            1.0,\n            2.0,\n            3.0,\n            4.0,\n            5.0\n          ]\n        },\n        \"properties\": {\n          \"decimals\": {\n            \"description\": \"Round to number of decimal places\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Decimal Places\"\n          },\n          \"input\": {\n            \"description\": \"Colllection of values to calculate\",\n            \"items\": {\n              \"type\": \"number\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          }\n        },\n        \"required\": [\n          \"decimals\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCalculateSeries\"\n      },\n      \"inputCaseConversion\": {\n        \"example\": {\n          \"alphacase\": \"Upper\",\n          \"input\": \"the brown cow\"\n        },\n        \"properties\": {\n          \"alphacase\": {\n            \"description\": \"Case of conversion result\",\n            \"enum\": [\n              \"Upper\",\n              \"Lower\",\n              \"Title\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Case\"\n          },\n          \"input\": {\n            \"description\": \"String containing the text to convert\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"alphacase\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCaseConversion\"\n      },\n      \"inputCollectionConversion\": {\n        \"example\": {\n          \"input\": [\n            \"a\",\n            \"b\",\n            \"c\",\n            \"d\",\n            \"e\"\n          ],\n          \"name\": \"Items\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection containing strings to convert\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"name\": {\n            \"description\": \"Collection name\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Name\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionConversion\"\n      },\n      \"inputCollectionConversionXML\": {\n        \"example\": {\n          \"child\": \"Item\",\n          \"input\": [\n            \"a\",\n            \"b\",\n            \"c\",\n            \"d\",\n            \"e\"\n          ],\n          \"root\": \"Items\"\n        },\n        \"properties\": {\n          \"child\": {\n            \"description\": \"Name of child XML node(s)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Child Node Name\"\n          },\n          \"input\": {\n            \"description\": \"Collection containing strings to convert\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"root\": {\n            \"description\": \"Name of root XML node\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Root Node Name\"\n          }\n        },\n        \"required\": [\n          \"child\",\n          \"input\",\n          \"root\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionConversionXML\"\n      },\n      \"inputCollectionCount\": {\n        \"example\": {\n          \"input\": [\n            \"a\",\n            \"d\",\n            \"c\",\n            \"b\",\n            \"e\"\n          ]\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection of items to count\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          }\n        },\n        \"required\": [\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionCount\"\n      },\n      \"inputCollectionFilter\": {\n        \"example\": {\n          \"input\": [\n            \"the cow\",\n            \"jumped over\",\n            \"the moon\"\n          ],\n          \"keywords\": \"cow,moon\",\n          \"match\": \"Any\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection of strings to filter\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          },\n          \"keywords\": {\n            \"description\": \"Keywords (separate multiple values with commas)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Keywords\"\n          },\n          \"match\": {\n            \"default\": \"Any\",\n            \"description\": \"Match type\",\n            \"enum\": [\n              \"Any\",\n              \"All\",\n              \"None\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Match\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"keywords\",\n          \"match\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionFilter\"\n      },\n      \"inputCollectionModify\": {\n        \"example\": {\n          \"index\": \"0\",\n          \"input\": [\n            \"a\",\n            \"b\",\n            \"c\"\n          ],\n          \"item\": \"d\",\n          \"items\": \"\"\n        },\n        \"properties\": {\n          \"index\": {\n            \"description\": \"Index position for operation (leave blank to specify end of collection)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Index\"\n          },\n          \"input\": {\n            \"description\": \"Collection of values or objects to modify\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          },\n          \"item\": {\n            \"description\": \"Item (for multiple items, leave blank and use Items)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Item\"\n          },\n          \"items\": {\n            \"description\": \"Items (Collection, for a single item leave blank and use Item)\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Items\"\n          }\n        },\n        \"required\": [\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionModify\"\n      },\n      \"inputCollectionReplace\": {\n        \"example\": {\n          \"ignoreCase\": true,\n          \"input\": [\n            \"the brown cow\",\n            \"jumped over\",\n            \"the brown dog\"\n          ],\n          \"match\": \"Brown\",\n          \"replacement\": \"spotted\"\n        },\n        \"properties\": {\n          \"ignoreCase\": {\n            \"default\": true,\n            \"description\": \"Ignore case\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Ignore case\"\n          },\n          \"input\": {\n            \"description\": \"Collection of strings\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          },\n          \"match\": {\n            \"description\": \"Match value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Match value\"\n          },\n          \"replacement\": {\n            \"description\": \"Replacement value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Replacement value\"\n          }\n        },\n        \"required\": [\n          \"ignoreCase\",\n          \"input\",\n          \"match\",\n          \"replacement\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionReplace\"\n      },\n      \"inputCollectionSearch\": {\n        \"example\": {\n          \"ignorecase\": true,\n          \"input\": [\n            \"the\",\n            \"brown\",\n            \"cow \"\n          ],\n          \"match\": \"cow\",\n          \"trim\": true\n        },\n        \"properties\": {\n          \"ignorecase\": {\n            \"description\": \"Ignore case when performing comparison\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Ignore Case\"\n          },\n          \"input\": {\n            \"description\": \"Collection of strings to search\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"match\": {\n            \"description\": \"Text to match\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Text\"\n          },\n          \"trim\": {\n            \"description\": \"Trim white space from comparison string\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Trim\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"match\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionSearch\"\n      },\n      \"inputCollectionSearchNumeric\": {\n        \"example\": {\n          \"input\": [\n            1.25,\n            10.5,\n            20.75,\n            51.25,\n            119.6,\n            301.25\n          ],\n          \"match\": \"1.25,\",\n          \"type\": \"Decimal\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection of strings to search\",\n            \"items\": {\n              \"type\": \"number\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"match\": {\n            \"description\": \"Number to match\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Number\"\n          },\n          \"type\": {\n            \"default\": \"Integer\",\n            \"description\": \"Type of number - integer or decimal\",\n            \"enum\": [\n              \"Integer\",\n              \"Decimal\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Number Type\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"match\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionSearchNumeric\"\n      },\n      \"inputCollectionSort\": {\n        \"example\": {\n          \"input\": [\n            \"a\",\n            \"d\",\n            \"c\",\n            \"b\",\n            \"e\"\n          ],\n          \"order\": \"Ascending\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection of strings to sort\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          },\n          \"order\": {\n            \"default\": \"Ascending\",\n            \"description\": \"Sort order\",\n            \"enum\": [\n              \"Ascending\",\n              \"Descending\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Order\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"order\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionSort\"\n      },\n      \"inputCollectionSplit\": {\n        \"example\": {\n          \"index\": \"\",\n          \"input\": [\n            \"the cow\",\n            \"jumped over\",\n            \"the moon\"\n          ],\n          \"match\": \"jumped over\"\n        },\n        \"properties\": {\n          \"index\": {\n            \"description\": \"Index location to split (leave empty to use Match value)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Index\"\n          },\n          \"input\": {\n            \"description\": \"Collection of items to split\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Collection\"\n          },\n          \"match\": {\n            \"description\": \"String to match (explicit, case-insensitive, leave empty to use Index)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Match Value\"\n          }\n        },\n        \"required\": [\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCollectionSplit\"\n      },\n      \"inputConvertAngle\": {\n        \"example\": {\n          \"input\": 16.036844,\n          \"source\": \"Arcminute\",\n          \"target\": \"Arcsecond\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Arcminute\",\n              \"Arcsecond\",\n              \"Centiradian\",\n              \"Deciradian\",\n              \"Degree\",\n              \"Gradian\",\n              \"Microdegree\",\n              \"Microradian\",\n              \"Millidegree\",\n              \"Milliradian\",\n              \"Nanodegree\",\n              \"Nanoradian\",\n              \"Radian\",\n              \"Revolution\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Arcminute\",\n              \"Arcsecond\",\n              \"Centiradian\",\n              \"Deciradian\",\n              \"Degree\",\n              \"Gradian\",\n              \"Microdegree\",\n              \"Microradian\",\n              \"Millidegree\",\n              \"Milliradian\",\n              \"Nanodegree\",\n              \"Nanoradian\",\n              \"Radian\",\n              \"Revolution\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertAngle\"\n      },\n      \"inputConvertArea\": {\n        \"example\": {\n          \"input\": 0.416714,\n          \"source\": \"Acre\",\n          \"target\": \"SquareFoot\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Acre\",\n              \"Hectare\",\n              \"SquareCentimeter\",\n              \"SquareDecimeter\",\n              \"SquareFoot\",\n              \"SquareInch\",\n              \"SquareKilometer\",\n              \"SquareMeter\",\n              \"SquareMicrometer\",\n              \"SquareMile\",\n              \"SquareMillimeter\",\n              \"SquareYard\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Acre\",\n              \"Hectare\",\n              \"SquareCentimeter\",\n              \"SquareDecimeter\",\n              \"SquareFoot\",\n              \"SquareInch\",\n              \"SquareKilometer\",\n              \"SquareMeter\",\n              \"SquareMicrometer\",\n              \"SquareMile\",\n              \"SquareMillimeter\",\n              \"SquareYard\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertArea\"\n      },\n      \"inputConvertDistance\": {\n        \"example\": {\n          \"input\": 0.525505,\n          \"source\": \"Meter\",\n          \"target\": \"Foot\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Centimeter\",\n              \"Decimeter\",\n              \"Fathom\",\n              \"Foot\",\n              \"Hectometer\",\n              \"Inch\",\n              \"Kilometer\",\n              \"LightYear\",\n              \"Meter\",\n              \"Micrometer\",\n              \"Mile\",\n              \"Millimeter\",\n              \"Nanometer\",\n              \"NauticalMile\",\n              \"Yard\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Centimeter\",\n              \"Decimeter\",\n              \"Fathom\",\n              \"Foot\",\n              \"Hectometer\",\n              \"Inch\",\n              \"Kilometer\",\n              \"LightYear\",\n              \"Meter\",\n              \"Micrometer\",\n              \"Mile\",\n              \"Millimeter\",\n              \"Nanometer\",\n              \"NauticalMile\",\n              \"Yard\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertDistance\"\n      },\n      \"inputConvertDuration\": {\n        \"example\": {\n          \"input\": 0.66375,\n          \"source\": \"Day\",\n          \"target\": \"Hour\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Day\",\n              \"Hour\",\n              \"Microsecond\",\n              \"Millisecond\",\n              \"Minute\",\n              \"Month\",\n              \"Nanosecond\",\n              \"Second\",\n              \"Week\",\n              \"Year\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Day\",\n              \"Hour\",\n              \"Microsecond\",\n              \"Millisecond\",\n              \"Minute\",\n              \"Month\",\n              \"Nanosecond\",\n              \"Second\",\n              \"Week\",\n              \"Year\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertDuration\"\n      },\n      \"inputConvertEnergy\": {\n        \"example\": {\n          \"input\": 0.397155,\n          \"source\": \"Calorie\",\n          \"target\": \"Joule\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"BritishThermalUnit\",\n              \"Calorie\",\n              \"ElectronVolt\",\n              \"FootPound\",\n              \"GigawattHour\",\n              \"Joule\",\n              \"Kilocalorie\",\n              \"Kilojoule\",\n              \"KilowattHour\",\n              \"Megajoule\",\n              \"MegawattHour\",\n              \"TerawattHour\",\n              \"Therm (EU)\",\n              \"Therm (UK)\",\n              \"Therm (US)\",\n              \"WattHour\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"BritishThermalUnit\",\n              \"Calorie\",\n              \"ElectronVolt\",\n              \"FootPound\",\n              \"GigawattHour\",\n              \"Joule\",\n              \"Kilocalorie\",\n              \"Kilojoule\",\n              \"KilowattHour\",\n              \"Megajoule\",\n              \"MegawattHour\",\n              \"TerawattHour\",\n              \"Therm (EU)\",\n              \"Therm (UK)\",\n              \"Therm (US)\",\n              \"WattHour\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertEnergy\"\n      },\n      \"inputConvertPower\": {\n        \"example\": {\n          \"input\": 0.866107,\n          \"source\": \"Gigawatt\",\n          \"target\": \"Kilowatt\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"BritishThermalUnitPerHour\",\n              \"Decawatt\",\n              \"Deciwatt\",\n              \"ElectricalHorsepower\",\n              \"Femtowatt\",\n              \"Gigawatt\",\n              \"HydraulicHorsepower\",\n              \"Kilowatt\",\n              \"MechanicalHorsepower\",\n              \"Megawatt\",\n              \"Microwatt\",\n              \"Milliwatt\",\n              \"Nanowatt\",\n              \"Petawatt\",\n              \"Picowatt\",\n              \"Terawatt\",\n              \"Watt\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"BritishThermalUnitPerHour\",\n              \"Decawatt\",\n              \"Deciwatt\",\n              \"ElectricalHorsepower\",\n              \"Femtowatt\",\n              \"Gigawatt\",\n              \"HydraulicHorsepower\",\n              \"Kilowatt\",\n              \"MechanicalHorsepower\",\n              \"Megawatt\",\n              \"Microwatt\",\n              \"Milliwatt\",\n              \"Nanowatt\",\n              \"Petawatt\",\n              \"Picowatt\",\n              \"Terawatt\",\n              \"Watt\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertPower\"\n      },\n      \"inputConvertSpeed\": {\n        \"example\": {\n          \"input\": 0.278054,\n          \"source\": \"Knot\",\n          \"target\": \"MilePerHour\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"CentimeterPerHour\",\n              \"CentimeterPerMinute\",\n              \"CentimeterPerSecond\",\n              \"DecimeterPerMinute\",\n              \"DecimeterPerSecond\",\n              \"FootPerHour\",\n              \"FootPerMinute\",\n              \"FootPerSecond\",\n              \"InchPerHour\",\n              \"InchPerMinute\",\n              \"InchPerSecond\",\n              \"KilometerPerHour\",\n              \"KilometerPerMinute\",\n              \"KilometerPerSecond\",\n              \"Knot\",\n              \"MeterPerHour\",\n              \"MeterPerMinute\",\n              \"MeterPerSecond\",\n              \"MicrometerPerMinute\",\n              \"MicrometerPerSecond\",\n              \"MilePerHour\",\n              \"MillimeterPerHour\",\n              \"MillimeterPerMinute\",\n              \"MillimeterPerSecond\",\n              \"NanometerPerMinute\",\n              \"NanometerPerSecond\",\n              \"YardPerHour\",\n              \"YardPerMinute\",\n              \"YardPerSecond\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"CentimeterPerHour\",\n              \"CentimeterPerMinute\",\n              \"CentimeterPerSecond\",\n              \"DecimeterPerMinute\",\n              \"DecimeterPerSecond\",\n              \"FootPerHour\",\n              \"FootPerMinute\",\n              \"FootPerSecond\",\n              \"InchPerHour\",\n              \"InchPerMinute\",\n              \"InchPerSecond\",\n              \"KilometerPerHour\",\n              \"KilometerPerMinute\",\n              \"KilometerPerSecond\",\n              \"Knot\",\n              \"MeterPerHour\",\n              \"MeterPerMinute\",\n              \"MeterPerSecond\",\n              \"MicrometerPerMinute\",\n              \"MicrometerPerSecond\",\n              \"MilePerHour\",\n              \"MillimeterPerHour\",\n              \"MillimeterPerMinute\",\n              \"MillimeterPerSecond\",\n              \"NanometerPerMinute\",\n              \"NanometerPerSecond\",\n              \"YardPerHour\",\n              \"YardPerMinute\",\n              \"YardPerSecond\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertSpeed\"\n      },\n      \"inputConvertTemperature\": {\n        \"example\": {\n          \"input\": 10.0,\n          \"source\": \"Celsius\",\n          \"target\": \"Fahrenheit\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Celsius\",\n              \"Fahrenheit\",\n              \"Newton\",\n              \"Kelvin\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Celsius\",\n              \"Fahrenheit\",\n              \"Newton\",\n              \"Kelvin\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertTemperature\"\n      },\n      \"inputConvertVolume\": {\n        \"example\": {\n          \"input\": 1.5,\n          \"source\": \"CubicFoot\",\n          \"target\": \"CubicMeter\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Centiliter\",\n              \"CubicCentimeter\",\n              \"CubicDecimeter\",\n              \"CubicFoot\",\n              \"CubicHectometer\",\n              \"CubicInch\",\n              \"CubicKilometer\",\n              \"CubicMeter\",\n              \"CubicMillimeter\",\n              \"CubicYard\",\n              \"Deciliter\",\n              \"ImperialBeerBarrel\",\n              \"ImperialGallon\",\n              \"ImperialOunce\",\n              \"ImperialPint\",\n              \"Kiloliter\",\n              \"Liter\",\n              \"Microliter\",\n              \"Milliliter\",\n              \"Gallon\",\n              \"Cup\",\n              \"Ounce\",\n              \"Pint\",\n              \"Quart\",\n              \"Tablespoon\",\n              \"Teaspoon\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Centiliter\",\n              \"CubicCentimeter\",\n              \"CubicDecimeter\",\n              \"CubicFoot\",\n              \"CubicHectometer\",\n              \"CubicInch\",\n              \"CubicKilometer\",\n              \"CubicMeter\",\n              \"CubicMillimeter\",\n              \"CubicYard\",\n              \"Deciliter\",\n              \"ImperialBeerBarrel\",\n              \"ImperialGallon\",\n              \"ImperialOunce\",\n              \"ImperialPint\",\n              \"Kiloliter\",\n              \"Liter\",\n              \"Microliter\",\n              \"Milliliter\",\n              \"Gallon\",\n              \"Cup\",\n              \"Ounce\",\n              \"Pint\",\n              \"Quart\",\n              \"Tablespoon\",\n              \"Teaspoon\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertVolume\"\n      },\n      \"inputConvertWeight\": {\n        \"example\": {\n          \"input\": 5.7,\n          \"source\": \"Gram\",\n          \"target\": \"Ounce\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Measurement value\"\n          },\n          \"source\": {\n            \"enum\": [\n              \"Centigram\",\n              \"Decagram\",\n              \"Decigram\",\n              \"Grain\",\n              \"Gram\",\n              \"Hectogram\",\n              \"Kilogram\",\n              \"Microgram\",\n              \"Milligram\",\n              \"Nanogram\",\n              \"Ounce\",\n              \"Pound\",\n              \"Stone\",\n              \"Solar Mass\",\n              \"Earth Mass\",\n              \"Slug\",\n              \"Short Ton\",\n              \"Long Ton\",\n              \"Ton\",\n              \"Megaton\",\n              \"Short Hundredweight\",\n              \"Long Hundredweight\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source measurement\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"Centigram\",\n              \"Decagram\",\n              \"Decigram\",\n              \"Grain\",\n              \"Gram\",\n              \"Hectogram\",\n              \"Kilogram\",\n              \"Microgram\",\n              \"Milligram\",\n              \"Nanogram\",\n              \"Ounce\",\n              \"Pound\",\n              \"Stone\",\n              \"Ton\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target measurement\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputConvertWeight\"\n      },\n      \"inputCsvConversionJSON\": {\n        \"example\": {\n          \"header\": true,\n          \"input\": \"Property1,Property2,Property3\\r\\nvalue,value,value\\r\\nvalue,value,value\"\n        },\n        \"properties\": {\n          \"header\": {\n            \"default\": true,\n            \"description\": \"Include header row\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Header\"\n          },\n          \"input\": {\n            \"description\": \"CSV string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"header\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCsvConversionJSON\"\n      },\n      \"inputCurrencyConversion\": {\n        \"example\": {\n          \"input\": 100.25,\n          \"source\": \"USD\",\n          \"target\": \"CAD\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Amount to convert\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"source\": {\n            \"default\": \"USD\",\n            \"enum\": [\n              \"USD\",\n              \"AUD\",\n              \"BGN\",\n              \"BRL\",\n              \"CAD\",\n              \"CHF\",\n              \"CNY\",\n              \"CZK\",\n              \"DKK\",\n              \"EUR\",\n              \"GBP\",\n              \"HKD\",\n              \"HRK\",\n              \"HUF\",\n              \"IDR\",\n              \"ILS\",\n              \"INR\",\n              \"ISK\",\n              \"JPY\",\n              \"KRW\",\n              \"MXN\",\n              \"MYR\",\n              \"NOK\",\n              \"NZD\",\n              \"PHP\",\n              \"PLN\",\n              \"RON\",\n              \"RUB\",\n              \"SGD\",\n              \"SEK\",\n              \"THB\",\n              \"TRY\",\n              \"ZAR\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source currency\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"USD\",\n              \"AUD\",\n              \"BGN\",\n              \"BRL\",\n              \"CAD\",\n              \"CHF\",\n              \"CNY\",\n              \"CZK\",\n              \"DKK\",\n              \"EUR\",\n              \"GBP\",\n              \"HKD\",\n              \"HRK\",\n              \"HUF\",\n              \"IDR\",\n              \"ILS\",\n              \"INR\",\n              \"ISK\",\n              \"JPY\",\n              \"KRW\",\n              \"MXN\",\n              \"MYR\",\n              \"NOK\",\n              \"NZD\",\n              \"PHP\",\n              \"PLN\",\n              \"RON\",\n              \"RUB\",\n              \"SGD\",\n              \"SEK\",\n              \"THB\",\n              \"TRY\",\n              \"ZAR\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target currency\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCurrencyConversion\"\n      },\n      \"inputCurrencyFormat\": {\n        \"example\": {\n          \"input\": 10980.79,\n          \"target\": \"GBP\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Amount to format\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"target\": {\n            \"enum\": [\n              \"USD\",\n              \"AUD\",\n              \"BGN\",\n              \"BRL\",\n              \"CAD\",\n              \"CHF\",\n              \"CNY\",\n              \"CZK\",\n              \"DKK\",\n              \"EUR\",\n              \"GBP\",\n              \"HKD\",\n              \"HRK\",\n              \"HUF\",\n              \"IDR\",\n              \"ILS\",\n              \"INR\",\n              \"ISK\",\n              \"JPY\",\n              \"KRW\",\n              \"MXN\",\n              \"MYR\",\n              \"NOK\",\n              \"NZD\",\n              \"PHP\",\n              \"PLN\",\n              \"RON\",\n              \"RUB\",\n              \"SGD\",\n              \"SEK\",\n              \"THB\",\n              \"TRY\",\n              \"ZAR\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target currency\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputCurrencyFormat\"\n      },\n      \"inputDataQuery\": {\n        \"example\": {\n          \"input\": \"{\\\"properties\\\": [{\\\"name\\\":\\\"ID\\\",\\\"value\\\":\\\"1234\\\"},{\\\"name\\\":\\\"Title\\\",\\\"value\\\":\\\"Some Title\\\"}]}\",\n          \"query\": \"$.properties[?(@.name \\u003d\\u003d \\\"ID\\\")].value\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"XML or JSON string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"query\": {\n            \"description\": \"XPath or JSONPath query\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Query\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"query\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputDataQuery\"\n      },\n      \"inputDateTimeConversion\": {\n        \"example\": {\n          \"format\": \"yyyy-MM-dd HH:mm:ss\",\n          \"input\": \"03/10/2010 09:00:00\",\n          \"source\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n          \"target\": \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\"\n        },\n        \"properties\": {\n          \"format\": {\n            \"description\": \"Display format (defaults to \\u0027yyyy-MM-dd HH:mm:ss\\u0027)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Format\"\n          },\n          \"input\": {\n            \"description\": \"Source date and time\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"source\": {\n            \"default\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n            \"enum\": [\n              \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n              \"Greenwich Standard Time - (GMT) Monrovia, Reykjavik\",\n              \"W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n              \"Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n              \"Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n              \"W. Central Africa Standard Time - (GMT+01:00) West Central Africa\",\n              \"GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul\",\n              \"Middle East Standard Time - (GMT+02:00) Beirut\",\n              \"Egypt Standard Time - (GMT+02:00) Cairo\",\n              \"South Africa Standard Time - (GMT+02:00) Harare, Pretoria\",\n              \"FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n              \"Israel Standard Time - (GMT+02:00) Jerusalem\",\n              \"E. Europe Standard Time - (GMT+02:00) Minsk\",\n              \"Namibia Standard Time - (GMT+02:00) Windhoek\",\n              \"Arabic Standard Time - (GMT+03:00) Baghdad\",\n              \"Arab Standard Time - (GMT+03:00) Kuwait, Riyadh\",\n              \"Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n              \"E. Africa Standard Time - (GMT+03:00) Nairobi\",\n              \"Georgian Standard Time - (GMT+03:00) Tbilisi\",\n              \"Iran Standard Time - (GMT+03:30) Tehran\",\n              \"Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat\",\n              \"Azerbaijan Standard Time - (GMT+04:00) Baku\",\n              \"Mauritius Standard Time - (GMT+04:00) Port Louis\",\n              \"Caucasus Standard Time - (GMT+04:00) Yerevan\",\n              \"Afghanistan Standard Time - (GMT+04:30) Kabul\",\n              \"Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg\",\n              \"Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi\",\n              \"West Asia Standard Time - (GMT+05:00) Tashkent\",\n              \"India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n              \"Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura\",\n              \"Nepal Standard Time - (GMT+05:45) Kathmandu\",\n              \"N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk\",\n              \"Central Asia Standard Time - (GMT+06:00) Astana, Dhaka\",\n              \"Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)\",\n              \"SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta\",\n              \"North Asia Standard Time - (GMT+07:00) Krasnoyarsk\",\n              \"China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n              \"North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar\",\n              \"Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore\",\n              \"W. Australia Standard Time - (GMT+08:00) Perth\",\n              \"Taipei Standard Time - (GMT+08:00) Taipei\",\n              \"Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo\",\n              \"Korea Standard Time - (GMT+09:00) Seoul\",\n              \"Yakutsk Standard Time - (GMT+09:00) Yakutsk\",\n              \"Cen. Australia Standard Time - (GMT+09:30) Adelaide\",\n              \"AUS Central Standard Time - (GMT+09:30) Darwin\",\n              \"E. Australia Standard Time - (GMT+10:00) Brisbane\",\n              \"AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney\",\n              \"West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby\",\n              \"Tasmania Standard Time - (GMT+10:00) Hobart\",\n              \"Vladivostok Standard Time - (GMT+10:00) Vladivostok\",\n              \"Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n              \"New Zealand Standard Time - (GMT+12:00) Auckland, Wellington\",\n              \"Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n              \"Tonga Standard Time - (GMT+13:00) Nuku\\u0027alofa\",\n              \"Azores Standard Time - (GMT-01:00) Azores\",\n              \"Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.\",\n              \"Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic\",\n              \"E. South America Standard Time - (GMT-03:00) Brasilia\",\n              \"Argentina Standard Time - (GMT-03:00) Buenos Aires\",\n              \"SA Eastern Standard Time - (GMT-03:00) Georgetown\",\n              \"Greenland Standard Time - (GMT-03:00) Greenland\",\n              \"Montevideo Standard Time - (GMT-03:00) Montevideo\",\n              \"Newfoundland Standard Time - (GMT-03:30) Newfoundland\",\n              \"Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)\",\n              \"SA Western Standard Time - (GMT-04:00) La Paz\",\n              \"Central Brazilian Standard Time - (GMT-04:00) Manaus\",\n              \"Pacific SA Standard Time - (GMT-04:00) Santiago\",\n              \"Venezuela Standard Time - (GMT-04:30) Caracas\",\n              \"SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n              \"Eastern Standard Time - (GMT-05:00) Eastern Time (US \\u0026 Canada)\",\n              \"US Eastern Standard Time - (GMT-05:00) Indiana (East)\",\n              \"Central America Standard Time - (GMT-06:00) Central America\",\n              \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\",\n              \"Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n              \"Canada Central Standard Time - (GMT-06:00) Saskatchewan\",\n              \"US Mountain Standard Time - (GMT-07:00) Arizona\",\n              \"Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan\",\n              \"Mountain Standard Time - (GMT-07:00) Mountain Time (US \\u0026 Canada)\",\n              \"Pacific Standard Time - (GMT-08:00) Pacific Time (US \\u0026 Canada)\",\n              \"Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California\",\n              \"Alaskan Standard Time - (GMT-09:00) Alaska\",\n              \"Hawaiian Standard Time - (GMT-10:00) Hawaii\",\n              \"Samoa Standard Time - (GMT-11:00) Midway Island, Samoa\",\n              \"Dateline Standard Time - (GMT-12:00) International Date Line West\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source Time Zone\"\n          },\n          \"target\": {\n            \"default\": \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n            \"enum\": [\n              \"GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London\",\n              \"Greenwich Standard Time - (GMT) Monrovia, Reykjavik\",\n              \"W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n              \"Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n              \"Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n              \"W. Central Africa Standard Time - (GMT+01:00) West Central Africa\",\n              \"GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul\",\n              \"Middle East Standard Time - (GMT+02:00) Beirut\",\n              \"Egypt Standard Time - (GMT+02:00) Cairo\",\n              \"South Africa Standard Time - (GMT+02:00) Harare, Pretoria\",\n              \"FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n              \"Israel Standard Time - (GMT+02:00) Jerusalem\",\n              \"E. Europe Standard Time - (GMT+02:00) Minsk\",\n              \"Namibia Standard Time - (GMT+02:00) Windhoek\",\n              \"Arabic Standard Time - (GMT+03:00) Baghdad\",\n              \"Arab Standard Time - (GMT+03:00) Kuwait, Riyadh\",\n              \"Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd\",\n              \"E. Africa Standard Time - (GMT+03:00) Nairobi\",\n              \"Georgian Standard Time - (GMT+03:00) Tbilisi\",\n              \"Iran Standard Time - (GMT+03:30) Tehran\",\n              \"Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat\",\n              \"Azerbaijan Standard Time - (GMT+04:00) Baku\",\n              \"Mauritius Standard Time - (GMT+04:00) Port Louis\",\n              \"Caucasus Standard Time - (GMT+04:00) Yerevan\",\n              \"Afghanistan Standard Time - (GMT+04:30) Kabul\",\n              \"Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg\",\n              \"Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi\",\n              \"West Asia Standard Time - (GMT+05:00) Tashkent\",\n              \"India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n              \"Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura\",\n              \"Nepal Standard Time - (GMT+05:45) Kathmandu\",\n              \"N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk\",\n              \"Central Asia Standard Time - (GMT+06:00) Astana, Dhaka\",\n              \"Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)\",\n              \"SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta\",\n              \"North Asia Standard Time - (GMT+07:00) Krasnoyarsk\",\n              \"China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n              \"North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar\",\n              \"Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore\",\n              \"W. Australia Standard Time - (GMT+08:00) Perth\",\n              \"Taipei Standard Time - (GMT+08:00) Taipei\",\n              \"Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo\",\n              \"Korea Standard Time - (GMT+09:00) Seoul\",\n              \"Yakutsk Standard Time - (GMT+09:00) Yakutsk\",\n              \"Cen. Australia Standard Time - (GMT+09:30) Adelaide\",\n              \"AUS Central Standard Time - (GMT+09:30) Darwin\",\n              \"E. Australia Standard Time - (GMT+10:00) Brisbane\",\n              \"AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney\",\n              \"West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby\",\n              \"Tasmania Standard Time - (GMT+10:00) Hobart\",\n              \"Vladivostok Standard Time - (GMT+10:00) Vladivostok\",\n              \"Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia\",\n              \"New Zealand Standard Time - (GMT+12:00) Auckland, Wellington\",\n              \"Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.\",\n              \"Tonga Standard Time - (GMT+13:00) Nuku\\u0027alofa\",\n              \"Azores Standard Time - (GMT-01:00) Azores\",\n              \"Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.\",\n              \"Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic\",\n              \"E. South America Standard Time - (GMT-03:00) Brasilia\",\n              \"Argentina Standard Time - (GMT-03:00) Buenos Aires\",\n              \"SA Eastern Standard Time - (GMT-03:00) Georgetown\",\n              \"Greenland Standard Time - (GMT-03:00) Greenland\",\n              \"Montevideo Standard Time - (GMT-03:00) Montevideo\",\n              \"Newfoundland Standard Time - (GMT-03:30) Newfoundland\",\n              \"Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)\",\n              \"SA Western Standard Time - (GMT-04:00) La Paz\",\n              \"Central Brazilian Standard Time - (GMT-04:00) Manaus\",\n              \"Pacific SA Standard Time - (GMT-04:00) Santiago\",\n              \"Venezuela Standard Time - (GMT-04:30) Caracas\",\n              \"SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco\",\n              \"Eastern Standard Time - (GMT-05:00) Eastern Time (US \\u0026 Canada)\",\n              \"US Eastern Standard Time - (GMT-05:00) Indiana (East)\",\n              \"Central America Standard Time - (GMT-06:00) Central America\",\n              \"Central Standard Time - (GMT-06:00) Central Time (US \\u0026 Canada)\",\n              \"Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey\",\n              \"Canada Central Standard Time - (GMT-06:00) Saskatchewan\",\n              \"US Mountain Standard Time - (GMT-07:00) Arizona\",\n              \"Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan\",\n              \"Mountain Standard Time - (GMT-07:00) Mountain Time (US \\u0026 Canada)\",\n              \"Pacific Standard Time - (GMT-08:00) Pacific Time (US \\u0026 Canada)\",\n              \"Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California\",\n              \"Alaskan Standard Time - (GMT-09:00) Alaska\",\n              \"Hawaiian Standard Time - (GMT-10:00) Hawaii\",\n              \"Samoa Standard Time - (GMT-11:00) Midway Island, Samoa\",\n              \"Dateline Standard Time - (GMT-12:00) International Date Line West\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target Time Zone\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"source\",\n          \"target\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputDateTimeConversion\"\n      },\n      \"inputDateTimeDifference\": {\n        \"example\": {\n          \"dateTime1\": \"1/1/2010 12:37:19\",\n          \"dateTime2\": \"3/15/2011 14:27:49\"\n        },\n        \"properties\": {\n          \"dateTime1\": {\n            \"description\": \"First date/time value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"First date/time value\"\n          },\n          \"dateTime2\": {\n            \"description\": \"Second date/time value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Second date/time value\"\n          }\n        },\n        \"required\": [\n          \"dateTime1\",\n          \"dateTime2\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputDateTimeDifference\"\n      },\n      \"inputDateTimeFormat\": {\n        \"example\": {\n          \"culture\": \"en-GB\",\n          \"format\": \"ddd\",\n          \"input\": \"03/10/2010 00:00:00\"\n        },\n        \"properties\": {\n          \"culture\": {\n            \"default\": \"en-US\",\n            \"description\": \"Language culture\",\n            \"enum\": [\n              \"en-US\",\n              \"af-ZA\",\n              \"ar-AE\",\n              \"ar-BH\",\n              \"ar-DZ\",\n              \"ar-EG\",\n              \"ar-IQ\",\n              \"ar-JO\",\n              \"ar-KW\",\n              \"ar-LB\",\n              \"ar-LY\",\n              \"ar-MA\",\n              \"ar-OM\",\n              \"ar-QA\",\n              \"ar-SA\",\n              \"ar-SY\",\n              \"ar-TN\",\n              \"ar-YE\",\n              \"az-AZ\",\n              \"be-BY\",\n              \"bg-BG\",\n              \"bs-BA\",\n              \"ca-ES\",\n              \"cs-CZ\",\n              \"cy-GB\",\n              \"da-DK\",\n              \"de-AT\",\n              \"de-CH\",\n              \"de-DE\",\n              \"de-LI\",\n              \"de-LU\",\n              \"el-GR\",\n              \"en-AU\",\n              \"en-BZ\",\n              \"en-CA\",\n              \"en-CB\",\n              \"en-GB\",\n              \"en-IE\",\n              \"en-JM\",\n              \"en-NZ\",\n              \"en-PH\",\n              \"en-TT\",\n              \"en-ZA\",\n              \"en-ZW\",\n              \"es-AR\",\n              \"es-BO\",\n              \"es-CL\",\n              \"es-CO\",\n              \"es-CR\",\n              \"es-DO\",\n              \"es-EC\",\n              \"es-ES\",\n              \"es-GT\",\n              \"es-HN\",\n              \"es-MX\",\n              \"es-NI\",\n              \"es-PA\",\n              \"es-PE\",\n              \"es-PR\",\n              \"es-PY\",\n              \"es-SV\",\n              \"es-UY\",\n              \"es-VE\",\n              \"et-EE\",\n              \"eu-ES\",\n              \"fa-IR\",\n              \"fi-FI\",\n              \"fo-FO\",\n              \"fr-BE\",\n              \"fr-CA\",\n              \"fr-CH\",\n              \"fr-FR\",\n              \"fr-LU\",\n              \"fr-MC\",\n              \"gl-ES\",\n              \"gu-IN\",\n              \"he-IL\",\n              \"hi-IN\",\n              \"hr-BA\",\n              \"hr-HR\",\n              \"hu-HU\",\n              \"hy-AM\",\n              \"id-ID\",\n              \"is-IS\",\n              \"it-CH\",\n              \"it-IT\",\n              \"ja-JP\",\n              \"ka-GE\",\n              \"kk-KZ\",\n              \"kn-IN\",\n              \"ko-KR\",\n              \"ky-KG\",\n              \"lt-LT\",\n              \"lv-LV\",\n              \"mi-NZ\",\n              \"mn-MN\",\n              \"mr-IN\",\n              \"ms-BN\",\n              \"ms-MY\",\n              \"mt-MT\",\n              \"nl-BE\",\n              \"nl-NL\",\n              \"nn-NO\",\n              \"ns-ZA\",\n              \"pa-IN\",\n              \"pl-PL\",\n              \"ps-AR\",\n              \"pt-BR\",\n              \"pt-PT\",\n              \"ro-RO\",\n              \"ru-RU\",\n              \"sa-IN\",\n              \"sk-SK\",\n              \"sl-SI\",\n              \"sq-AL\",\n              \"sr-BA\",\n              \"sr-SP\",\n              \"sv-FI\",\n              \"sv-SE\",\n              \"sw-KE\",\n              \"ta-IN\",\n              \"te-IN\",\n              \"th-TH\",\n              \"tl-PH\",\n              \"tn-ZA\",\n              \"tr-TR\",\n              \"uk-UA\",\n              \"ur-PK\",\n              \"uz-UZ\",\n              \"vi-VN\",\n              \"zh-CN\",\n              \"zh-HK\",\n              \"zh-MO\",\n              \"zh-SG\",\n              \"zh-TW\",\n              \"zu-ZA\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Culture\"\n          },\n          \"format\": {\n            \"description\": \"Output format\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Format\"\n          },\n          \"input\": {\n            \"description\": \"Source date and time\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"culture\",\n          \"format\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputDateTimeFormat\"\n      },\n      \"inputDateTimeInfo\": {\n        \"example\": {\n          \"culture\": \"en-GB\",\n          \"input\": \"03/10/2010 09:00:00\"\n        },\n        \"properties\": {\n          \"culture\": {\n            \"default\": \"en-US\",\n            \"description\": \"Language culture\",\n            \"enum\": [\n              \"en-US\",\n              \"af-ZA\",\n              \"ar-AE\",\n              \"ar-BH\",\n              \"ar-DZ\",\n              \"ar-EG\",\n              \"ar-IQ\",\n              \"ar-JO\",\n              \"ar-KW\",\n              \"ar-LB\",\n              \"ar-LY\",\n              \"ar-MA\",\n              \"ar-OM\",\n              \"ar-QA\",\n              \"ar-SA\",\n              \"ar-SY\",\n              \"ar-TN\",\n              \"ar-YE\",\n              \"az-AZ\",\n              \"be-BY\",\n              \"bg-BG\",\n              \"bs-BA\",\n              \"ca-ES\",\n              \"cs-CZ\",\n              \"cy-GB\",\n              \"da-DK\",\n              \"de-AT\",\n              \"de-CH\",\n              \"de-DE\",\n              \"de-LI\",\n              \"de-LU\",\n              \"el-GR\",\n              \"en-AU\",\n              \"en-BZ\",\n              \"en-CA\",\n              \"en-CB\",\n              \"en-GB\",\n              \"en-IE\",\n              \"en-JM\",\n              \"en-NZ\",\n              \"en-PH\",\n              \"en-TT\",\n              \"en-ZA\",\n              \"en-ZW\",\n              \"es-AR\",\n              \"es-BO\",\n              \"es-CL\",\n              \"es-CO\",\n              \"es-CR\",\n              \"es-DO\",\n              \"es-EC\",\n              \"es-ES\",\n              \"es-GT\",\n              \"es-HN\",\n              \"es-MX\",\n              \"es-NI\",\n              \"es-PA\",\n              \"es-PE\",\n              \"es-PR\",\n              \"es-PY\",\n              \"es-SV\",\n              \"es-UY\",\n              \"es-VE\",\n              \"et-EE\",\n              \"eu-ES\",\n              \"fa-IR\",\n              \"fi-FI\",\n              \"fo-FO\",\n              \"fr-BE\",\n              \"fr-CA\",\n              \"fr-CH\",\n              \"fr-FR\",\n              \"fr-LU\",\n              \"fr-MC\",\n              \"gl-ES\",\n              \"gu-IN\",\n              \"he-IL\",\n              \"hi-IN\",\n              \"hr-BA\",\n              \"hr-HR\",\n              \"hu-HU\",\n              \"hy-AM\",\n              \"id-ID\",\n              \"is-IS\",\n              \"it-CH\",\n              \"it-IT\",\n              \"ja-JP\",\n              \"ka-GE\",\n              \"kk-KZ\",\n              \"kn-IN\",\n              \"ko-KR\",\n              \"ky-KG\",\n              \"lt-LT\",\n              \"lv-LV\",\n              \"mi-NZ\",\n              \"mn-MN\",\n              \"mr-IN\",\n              \"ms-BN\",\n              \"ms-MY\",\n              \"mt-MT\",\n              \"nl-BE\",\n              \"nl-NL\",\n              \"nn-NO\",\n              \"ns-ZA\",\n              \"pa-IN\",\n              \"pl-PL\",\n              \"ps-AR\",\n              \"pt-BR\",\n              \"pt-PT\",\n              \"ro-RO\",\n              \"ru-RU\",\n              \"sa-IN\",\n              \"sk-SK\",\n              \"sl-SI\",\n              \"sq-AL\",\n              \"sr-BA\",\n              \"sr-SP\",\n              \"sv-FI\",\n              \"sv-SE\",\n              \"sw-KE\",\n              \"ta-IN\",\n              \"te-IN\",\n              \"th-TH\",\n              \"tl-PH\",\n              \"tn-ZA\",\n              \"tr-TR\",\n              \"uk-UA\",\n              \"ur-PK\",\n              \"uz-UZ\",\n              \"vi-VN\",\n              \"zh-CN\",\n              \"zh-HK\",\n              \"zh-MO\",\n              \"zh-SG\",\n              \"zh-TW\",\n              \"zu-ZA\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Culture\"\n          },\n          \"input\": {\n            \"description\": \"Source date and time\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"culture\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputDateTimeInfo\"\n      },\n      \"inputGenerateHash\": {\n        \"example\": {\n          \"algorithm\": \"SHA256\",\n          \"source\": \"text to hash\"\n        },\n        \"properties\": {\n          \"algorithm\": {\n            \"description\": \"Hash algorithm\",\n            \"enum\": [\n              \"MD5\",\n              \"SHA1\",\n              \"SHA256\",\n              \"SHA384\",\n              \"SHA512\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Algorithm\"\n          },\n          \"input\": {\n            \"description\": \"Hash source string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Input\"\n          }\n        },\n        \"required\": [\n          \"algorithm\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputGenerateHash\"\n      },\n      \"inputGenerateUniqueID\": {\n        \"example\": {\n          \"uppercase\": true\n        },\n        \"properties\": {\n          \"uppercase\": {\n            \"description\": \"All uppercase alpha characters\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Uppercase\"\n          }\n        },\n        \"required\": [\n          \"uppercase\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputGenerateUniqueID\"\n      },\n      \"inputJoinStrings\": {\n        \"example\": {\n          \"input\": [\n            \"The\",\n            \"brown\",\n            \"cow\"\n          ],\n          \"lower\": true,\n          \"separator\": \";\",\n          \"trim\": true\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Collection of strings to be joined\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Values\"\n          },\n          \"lower\": {\n            \"description\": \"Convert strings in collection to lowercase\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Lowercase\"\n          },\n          \"separator\": {\n            \"description\": \"Separator character\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Separator\"\n          },\n          \"trim\": {\n            \"description\": \"Trim strings in collection\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Trim\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"lower\",\n          \"separator\",\n          \"trim\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputJoinStrings\"\n      },\n      \"inputJsonConversionCSV\": {\n        \"example\": {\n          \"header\": true,\n          \"input\": [\n            {\n              \"property1\": \"value\"\n            },\n            {\n              \"property2\": \"value\"\n            },\n            {\n              \"property3\": \"value\"\n            }\n          ],\n          \"omit\": \"property1\",\n          \"order\": \"property3,property2\"\n        },\n        \"properties\": {\n          \"header\": {\n            \"default\": true,\n            \"description\": \"Include header row\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Header\"\n          },\n          \"input\": {\n            \"description\": \"JSON array object\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"omit\": {\n            \"description\": \"Columns to omit (comma separated)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Omit Columns\"\n          },\n          \"order\": {\n            \"description\": \"Column order (comma separated)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Order\"\n          }\n        },\n        \"required\": [\n          \"header\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputJsonConversionCSV\"\n      },\n      \"inputJsonConversionHTML\": {\n        \"example\": {\n          \"alternate\": \"\\u003ctr\\u003e\\u003cth\\u003eProperty 3\\u003c/th\\u003e\\u003cth\\u003eProperty 2\\u003c/th\\u003e\\u003c/tr\\u003e\",\n          \"attributes\": \"style\\u003d\\u0027width:100%;text-align:center;\\u0027\",\n          \"header\": false,\n          \"input\": [\n            {\n              \"property1\": \"value\"\n            },\n            {\n              \"property2\": \"value\"\n            },\n            {\n              \"property3\": \"value\"\n            }\n          ],\n          \"omit\": \"property1\",\n          \"order\": \"property3,property2\"\n        },\n        \"properties\": {\n          \"alternate\": {\n            \"description\": \"Alternate header row markup\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Alternate Header\"\n          },\n          \"attributes\": {\n            \"description\": \"Optional table attributes (single quoted values)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Table Attributes\"\n          },\n          \"header\": {\n            \"default\": true,\n            \"description\": \"Include header row\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Header\"\n          },\n          \"input\": {\n            \"description\": \"JSON array object\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"omit\": {\n            \"description\": \"Columns to omit (comma separated)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Omit Columns\"\n          },\n          \"order\": {\n            \"description\": \"Column order (comma separated)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Order\"\n          }\n        },\n        \"required\": [\n          \"header\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputJsonConversionHTML\"\n      },\n      \"inputJsonConversionXML\": {\n        \"example\": {\n          \"input\": \"{\\\"property1\\\":\\\"value\\\",\\\"property2\\\":\\\"value\\\",\\\"property3\\\":\\\"value\\\"}\",\n          \"root\": \"Properties\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"JSON array object\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"root\": {\n            \"description\": \"Name of root node\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Root Name\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"root\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputJsonConversionXML\"\n      },\n      \"inputMarketIndex\": {\n        \"example\": {\n          \"date\": \"2020-10-07T00:00:00.000Z\",\n          \"symbol\": \"DJI.INDX\"\n        },\n        \"properties\": {\n          \"date\": {\n            \"description\": \"Date (yyyy-MM-dd, leave empty for last trading day)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Date\"\n          },\n          \"symbol\": {\n            \"description\": \"Market index\",\n            \"enum\": [\n              \"DJA.INDX (Dow Jones Composite Average)\",\n              \"DJI.INDX (Dow Jones Industrial Average)\",\n              \"DJT.INDX (Dow Jones Transportation)\",\n              \"DJUS.INDX (Dow Jones US)\",\n              \"DXY.INDX (US Dollar Index)\",\n              \"GDOW.INDX (Global Dow USD)\",\n              \"NY.INDX (NYSE US 100 Index)\",\n              \"NYA.INDX (NYSE Composite)\",\n              \"IXIC.INDX (NASDAQ Composite)\",\n              \"NDX.INDX (NASDAQ 100)\",\n              \"GSPC.INDX (S\\u0026P 500)\",\n              \"ES.INDX (S\\u0026P 500 Futures)\",\n              \"MID.INDX (S\\u0026P Midcap 400)\",\n              \"GPTSE.INDX (S\\u0026P TSX Composite Index [Canada])\",\n              \"FTSE.INDX (FTSE 100 Index [UK])\",\n              \"CDAXX.INDX (DAX Composite Index [Germany])\",\n              \"GDAXI.INDX (DAX Index [Germany])\",\n              \"HSCE.INDX (Hang Seng China Enterprise (CEI))\",\n              \"HSI.INDX (Hang Seng Index [Hong Kong])\",\n              \"N100.INDX (EuroNext 100)\",\n              \"N225.INDX (Nikkei 225 Index)\",\n              \"RTSI.INDX (RTSI Index [Russia])\",\n              \"SSEC.INDX (Shanghai Composite)\",\n              \"SSMI.INDX (Swiss Market Index)\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Index\"\n          }\n        },\n        \"required\": [\n          \"symbol\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputMarketIndex\"\n      },\n      \"inputNumberRange\": {\n        \"example\": {\n          \"end\": 1000000.0,\n          \"start\": 1.0\n        },\n        \"properties\": {\n          \"end\": {\n            \"description\": \"End of range\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"End\"\n          },\n          \"start\": {\n            \"description\": \"Start of range\",\n            \"minimum\": 0.0,\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Start\"\n          }\n        },\n        \"required\": [\n          \"end\",\n          \"start\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputNumberRange\"\n      },\n      \"inputQRCode\": {\n        \"example\": {\n          \"input\": \"someone@example.com|Test message|This is a test.\",\n          \"payload\": \"Mail\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"Text value(s) (vertical bar delimited by type)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"payload\": {\n            \"default\": \"Plain Text (string)\",\n            \"description\": \"Payload type\",\n            \"enum\": [\n              \"Plain Text (string)\",\n              \"Bitcoin Payment (address|amount|label|message)\",\n              \"Bookmark (url|title)\",\n              \"Calendar Event (subject|description|location|start|end|allDayEvent[\\u0027true\\u0027 or \\u0027false\\u0027]|format [\\u0027universal\\u0027 or \\u0027iCal\\u0027])\",\n              \"Geolocation (latitude|longitude)\",\n              \"Mail (recipient|subject|message)\",\n              \"Phone Number (string)\",\n              \"SMS (number|message)\",\n              \"URL (string)\",\n              \"WiFi (ssid|password|authenticationMode [\\u0027WEP\\u0027, \\u0027WPA\\u0027 or \\u0027WPA2\\u0027])\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Type\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"payload\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputQRCode\"\n      },\n      \"inputRedactString\": {\n        \"example\": {\n          \"regex\": \"[A-Za-z]{5}\",\n          \"source\": \"The brown cow\",\n          \"value\": \"brown\",\n          \"values\": [\n            \"The\",\n            \"brown\",\n            \"cow\"\n          ]\n        },\n        \"properties\": {\n          \"regex\": {\n            \"description\": \"Regular expression pattern for matching strings\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"-OR- Regular Expression\"\n          },\n          \"source\": {\n            \"description\": \"String containing the complete text\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source String\"\n          },\n          \"value\": {\n            \"description\": \"Individual string to redact\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"values\": {\n            \"description\": \"Collection of strings to redact\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"-OR- Values Collection\"\n          }\n        },\n        \"required\": [\n          \"source\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputRedactString\"\n      },\n      \"inputReplaceString\": {\n        \"example\": {\n          \"replacement\": \"dog\",\n          \"source\": \"The brown cow\",\n          \"value\": \"cow\"\n        },\n        \"properties\": {\n          \"replacement\": {\n            \"description\": \"Replacement text\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Replacement\"\n          },\n          \"source\": {\n            \"description\": \"String containing the text to be replaced\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source\"\n          },\n          \"value\": {\n            \"description\": \"Text to replace\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"replacement\",\n          \"source\",\n          \"value\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputReplaceString\"\n      },\n      \"inputSplitString\": {\n        \"example\": {\n          \"characters\": \",\",\n          \"input\": \"The,brown,cow\"\n        },\n        \"properties\": {\n          \"characters\": {\n            \"description\": \"One or more characters that will be used to split the text\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Character(s)\"\n          },\n          \"input\": {\n            \"description\": \"Text to split\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"characters\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputSplitString\"\n      },\n      \"inputStockPrices\": {\n        \"example\": {\n          \"date\": \"2020-10-07T00:00:00.000Z\",\n          \"exchange\": \"XNYS (New York Stock Exchange)\",\n          \"symbols\": \"MMM,CVX\"\n        },\n        \"properties\": {\n          \"date\": {\n            \"description\": \"Date (yyyy-MM-dd, leave empty for latest)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Date\"\n          },\n          \"exchange\": {\n            \"description\": \"Stock exchange\",\n            \"enum\": [\n              \"XNYS (New York Stock Exchange)\",\n              \"XNAS (NASDAQ Stock Exchange)\",\n              \"XBRU (Euronext Brussels)\",\n              \"XTSE (Toronto Stock Exchange)\",\n              \"XCNQ (Candadian Securities Exchange)\",\n              \"XSHG (Shanghai Stock Exchange)\",\n              \"XCSE (Copenhagen Stock Exchange)\",\n              \"XPAR (Euronext Paris)\",\n              \"XFRA (Deutsche Borse)\",\n              \"XHKG (Hong Kong Stock Exchange)\",\n              \"XNSE (National Stock Exchange India)\",\n              \"XTAE (Tel Aviv Stock Exchange)\",\n              \"XNGO (Nagoya Stock Exchange)\",\n              \"XFKA (Fukuoka Stock Exchange)\",\n              \"XSAP (Sapporo Stock Exchange)\",\n              \"XMEX (Mexican Stock Exchange)\",\n              \"XNZE (New Zealand Stock Exchange)\",\n              \"XLIS (Euronext Lisbon)\",\n              \"MISX (Moscow Stock Exchange)\",\n              \"XSES (Singapore Stock Exchange)\",\n              \"XLON (London Stock Exchange)\",\n              \"XASE (American Stock Exchange)\",\n              \"XASX (Australia Stock Exchange)\",\n              \"XDFM (Dubai Financial Market)\",\n              \"XBKK (Stock Exchange of Thailand)\",\n              \"XSWX (SIX Swiss Exchange)\",\n              \"XSTO (Stockholm Stock Exchange)\",\n              \"BMEX (Bolsas y Mercados Españoles)\",\n              \"XJSE (Johannesburg Stock Exchange)\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Exchange\"\n          },\n          \"symbols\": {\n            \"description\": \"Stock ticker symbols (comma-separated, max 20)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Symbols\"\n          }\n        },\n        \"required\": [\n          \"symbols\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputStockPrices\"\n      },\n      \"inputString\": {\n        \"example\": {\n          \"source\": \"The brown cow\"\n        },\n        \"properties\": {\n          \"source\": {\n            \"description\": \"String variable or text value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source\"\n          }\n        },\n        \"required\": [\n          \"source\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputString\"\n      },\n      \"inputStringComparison\": {\n        \"example\": {\n          \"compare\": \"dog\",\n          \"input\": \"Cow\",\n          \"lower\": true,\n          \"trim\": true\n        },\n        \"properties\": {\n          \"compare\": {\n            \"description\": \"Comparison string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target\"\n          },\n          \"input\": {\n            \"description\": \"Original string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source\"\n          },\n          \"lower\": {\n            \"description\": \"Convert strings to lowercase before comparison\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Lowercase\"\n          },\n          \"trim\": {\n            \"description\": \"Trim strings before comparison\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Trim\"\n          }\n        },\n        \"required\": [\n          \"compare\",\n          \"input\",\n          \"lower\",\n          \"trim\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputStringComparison\"\n      },\n      \"inputStringContains\": {\n        \"example\": {\n          \"find\": \"cow\",\n          \"input\": \"The brown cow\",\n          \"lower\": true\n        },\n        \"properties\": {\n          \"find\": {\n            \"description\": \"Text to match\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"input\": {\n            \"description\": \"Text to search\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Target\"\n          },\n          \"lower\": {\n            \"description\": \"Convert strings to lowercase\",\n            \"enum\": [\n              true,\n              false\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Lowercase\"\n          }\n        },\n        \"required\": [\n          \"find\",\n          \"input\",\n          \"lower\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputStringContains\"\n      },\n      \"inputStringToFile\": {\n        \"example\": {\n          \"extension\": \"TXT\",\n          \"filename\": \"Test\",\n          \"input\": \"This is a test.\"\n        },\n        \"properties\": {\n          \"extension\": {\n            \"default\": \"TXT\",\n            \"description\": \"File extension\",\n            \"enum\": [\n              \"TXT\",\n              \"CSV\",\n              \"HTML\",\n              \"XML\",\n              \"CSS\",\n              \"JSON\",\n              \"JS\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Extension\"\n          },\n          \"filename\": {\n            \"description\": \"Name of file (without extension)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Filename\"\n          },\n          \"input\": {\n            \"description\": \"Text string (body of file)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"extension\",\n          \"filename\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputStringToFile\"\n      },\n      \"inputTextToSpeech\": {\n        \"example\": {\n          \"text\": \"This is sample text.\",\n          \"type\": \"PlainText\",\n          \"voice\": \"en-US, Aria (Female)\"\n        },\n        \"properties\": {\n          \"text\": {\n            \"description\": \"Text to convert (10,000 characters max)\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Text\"\n          },\n          \"type\": {\n            \"default\": \"PlainText\",\n            \"description\": \"Text or file type\",\n            \"enum\": [\n              \"PlainText\",\n              \"SSML\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Text or file type\"\n          },\n          \"voice\": {\n            \"default\": \"en-US, Aria (Female)\",\n            \"description\": \"Voice locale (must match language of input text)\",\n            \"enum\": [\n              \"ar-EG, Hoda (Female)\",\n              \"ar-SA, Naayf (Male)\",\n              \"bg-BG, Ivan (Male)\",\n              \"ca-ES, Herena (Female)\",\n              \"cs-CZ, Jakub (Male)\",\n              \"da-DK, Helle (Female)\",\n              \"de-AT, Michael (Male)\",\n              \"de-CH, Karsten (Male)\",\n              \"de-DE, Hedda (Female)\",\n              \"de-DE, Stefan (Male)\",\n              \"el-GR, Stefanos (Male)\",\n              \"en-AU, Catherine (Female)\",\n              \"en-AU, Hayley (Female)\",\n              \"en-CA, Heather (Female)\",\n              \"en-CA, Linda (Female)\",\n              \"en-GB, George (Male)\",\n              \"en-GB, Hazel (Female)\",\n              \"en-GB, Susan (Female)\",\n              \"en-IE, Sean (Male)\",\n              \"en-IN, Heera (Female)\",\n              \"en-IN, Priya (Female)\",\n              \"en-IN, Ravi (Male)\",\n              \"en-US, Aria (Female)\",\n              \"en-US, Benjamin (Male)\",\n              \"en-US, Guy (Male)\",\n              \"en-US, Zira (Female)\",\n              \"es-ES, Helena (Female)\",\n              \"es-ES, Laura (Female)\",\n              \"es-ES, Pablo (Male)\",\n              \"es-MX, Hilda (Female)\",\n              \"es-MX, Raul (Male)\",\n              \"fi-FI, Heidi (Female)\",\n              \"fr-CA, Caroline (Female)\",\n              \"fr-CA, Harmonie (Female)\",\n              \"fr-CH, Guillaume (Male)\",\n              \"fr-FR, Hortense (Female)\",\n              \"fr-FR, Julie (Female)\",\n              \"fr-FR, Paul (Male)\",\n              \"he-IL, Asaf (Male)\",\n              \"hi-IN, Hemant (Male)\",\n              \"hi-IN, Kalpana (Female)\",\n              \"hr-HR, Matej (Male)\",\n              \"hu-HU, Szabolcs (Male)\",\n              \"id-ID, Andika (Male)\",\n              \"it-IT, Cosimo (Male)\",\n              \"it-IT, Lucia (Female)\",\n              \"ja-JP, Ayumi (Female)\",\n              \"ja-JP, Haruka (Female)\",\n              \"ja-JP, Ichiro (Male)\",\n              \"ko-KR, Heami (Female)\",\n              \"ms-MY, Rizwan (Male)\",\n              \"nb-NO, Hulda (Female)\",\n              \"nl-NL, Hanna (Female)\",\n              \"pl-PL, Paulina (Female)\",\n              \"pt-BR, Daniel (Male)\",\n              \"pt-BR, Heloisa (Female)\",\n              \"pt-PT, Helia (Female)\",\n              \"ro-RO, Andrei (Male)\",\n              \"ru-RU, Ekaterina (Female)\",\n              \"ru-RU, Irina (Female)\",\n              \"ru-RU, Pavel (Male)\",\n              \"sk-SK, Filip (Male)\",\n              \"sl-SI, Lado (Male)\",\n              \"sv-SE, Hedvig (Female)\",\n              \"ta-IN, Valluvar (Male)\",\n              \"te-IN, Chitra (Female)\",\n              \"th-TH, Pattara (Male)\",\n              \"tr-TR, Seda (Female)\",\n              \"vi-VN, An (Male)\",\n              \"zh-CN, Huihui (Female)\",\n              \"zh-CN, Kangkang (Male)\",\n              \"zh-CN, Yaoyao (Female)\",\n              \"zh-HK, Danny (Male)\",\n              \"zh-HK, Tracy (Female)\",\n              \"zh-TW, HanHan (Female)\",\n              \"zh-TW, Yating (Female)\",\n              \"zh-TW, Zhiwei (Male)\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Voice\"\n          }\n        },\n        \"required\": [\n          \"text\",\n          \"type\",\n          \"voice\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputTextToSpeech\"\n      },\n      \"inputTranslateString\": {\n        \"example\": {\n          \"input\": \"The brown cow\",\n          \"language\": \"German\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"String containing the text to be translated\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          },\n          \"language\": {\n            \"description\": \"Translation language\",\n            \"enum\": [\n              \"Arabic\",\n              \"Chinese (Simplified)\",\n              \"Czech\",\n              \"Danish\",\n              \"Dutch\",\n              \"English\",\n              \"Finnish\",\n              \"French\",\n              \"German\",\n              \"Greek\",\n              \"Hindi\",\n              \"Hungarian\",\n              \"Italian\",\n              \"Japanese\",\n              \"Klingon\",\n              \"Korean\",\n              \"Norweigan\",\n              \"Polish\",\n              \"Portuguese\",\n              \"Russian\",\n              \"Spanish\",\n              \"Swedish\",\n              \"Turkish\",\n              \"Vietnamese\",\n              \"Welsh\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Language\"\n          }\n        },\n        \"required\": [\n          \"input\",\n          \"language\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputTranslateString\"\n      },\n      \"inputTrimString\": {\n        \"example\": {\n          \"source\": \"  The brown cow  \",\n          \"type\": \"Both\"\n        },\n        \"properties\": {\n          \"source\": {\n            \"description\": \"String containing the text to be trimmed\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Source\"\n          },\n          \"type\": {\n            \"description\": \"Type of white space to remove\",\n            \"enum\": [\n              \"Start\",\n              \"End\",\n              \"Both\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Type\"\n          }\n        },\n        \"required\": [\n          \"source\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputTrimString\"\n      },\n      \"inputVerifyHash\": {\n        \"example\": {\n          \"algorithm\": \"SHA256\",\n          \"hash\": \"a52b8248f023cebd33aeeddda695f60d2561c0c9\",\n          \"source\": \"this is a really good test\"\n        },\n        \"properties\": {\n          \"algorithm\": {\n            \"description\": \"Hash algorithm\",\n            \"enum\": [\n              \"MD5\",\n              \"SHA1\",\n              \"SHA256\",\n              \"SHA384\",\n              \"SHA512\"\n            ],\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Algorithm\"\n          },\n          \"hash\": {\n            \"description\": \"Hashed result\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Hash\"\n          },\n          \"input\": {\n            \"description\": \"Original source string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Input\"\n          }\n        },\n        \"required\": [\n          \"algorithm\",\n          \"hash\",\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputVerifyHash\"\n      },\n      \"inputXmlConversionJSON\": {\n        \"example\": {\n          \"input\": \"\\u003cproperties\\u003e\\u003cproperty1\\u003evalue\\u003c/property1\\u003e\\u003c/properties\\u003e\"\n        },\n        \"properties\": {\n          \"input\": {\n            \"description\": \"XML string\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Value\"\n          }\n        },\n        \"required\": [\n          \"input\"\n        ],\n        \"type\": \"object\",\n        \"x-schemaName\": \"inputXmlConversionJSON\"\n      },\n      \"outputBoolean\": {\n        \"example\": {\n          \"result\": true\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Result\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputBoolean\"\n      },\n      \"outputCollectionNumber\": {\n        \"example\": {\n          \"item\": 1.25,\n          \"items\": [\n            1.25,\n            2.5,\n            3.75\n          ],\n          \"status\": false\n        },\n        \"properties\": {\n          \"item\": {\n            \"description\": \"First Value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"First Value\"\n          },\n          \"items\": {\n            \"description\": \"All Values\",\n            \"items\": {\n              \"type\": \"number\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"All Values\"\n          },\n          \"status\": {\n            \"description\": \"Success\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Success\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputCollectionNumber\"\n      },\n      \"outputCollectionResult\": {\n        \"example\": {\n          \"result\": [\n            \"a\",\n            \"b\",\n            \"c\"\n          ]\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Modified collection result\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Modified collection result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputCollectionResult\"\n      },\n      \"outputCollectionString\": {\n        \"example\": {\n          \"item\": \"string\",\n          \"items\": [\n            \"string\"\n          ],\n          \"status\": false\n        },\n        \"properties\": {\n          \"item\": {\n            \"description\": \"First Value\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"First Value\"\n          },\n          \"items\": {\n            \"description\": \"All Values\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"All Values\"\n          },\n          \"status\": {\n            \"description\": \"Success\",\n            \"type\": \"boolean\",\n            \"x-ms-summary\": \"Success\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputCollectionString\"\n      },\n      \"outputDateDifference\": {\n        \"example\": {\n          \"days\": 14.0,\n          \"hours\": 1.0,\n          \"milliseconds\": 0.0,\n          \"minutes\": 50.0,\n          \"months\": 2.0,\n          \"seconds\": 30.0,\n          \"ticks\": 3.784983E14,\n          \"totalDays\": 438.08,\n          \"totalHours\": 10513.84,\n          \"totalMilliseconds\": 3.784983E10,\n          \"totalMinutes\": 630830.5,\n          \"totalMonths\": 14.39,\n          \"totalSeconds\": 3.784983E7,\n          \"totalYears\": 1.2,\n          \"years\": 1.0\n        },\n        \"properties\": {\n          \"days\": {\n            \"description\": \"Days\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Days\"\n          },\n          \"hours\": {\n            \"description\": \"Hours\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Hours\"\n          },\n          \"milliseconds\": {\n            \"description\": \"Milliseconds\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Milliseconds\"\n          },\n          \"minutes\": {\n            \"description\": \"Minutes\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Minutes\"\n          },\n          \"months\": {\n            \"description\": \"Months\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Months\"\n          },\n          \"ticks\": {\n            \"description\": \"Ticks\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Ticks\"\n          },\n          \"totalDays\": {\n            \"description\": \"Total Days\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Days\"\n          },\n          \"totalHours\": {\n            \"description\": \"Total Hours\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Hours\"\n          },\n          \"totalMilliseconds\": {\n            \"description\": \"Total Milliseconds\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Milliseconds\"\n          },\n          \"totalMinutes\": {\n            \"description\": \"Total Minutes\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Minutes\"\n          },\n          \"totalMonths\": {\n            \"description\": \"Total Months\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Months\"\n          },\n          \"totalSeconds\": {\n            \"description\": \"Total Seconds\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Seconds\"\n          },\n          \"totalYears\": {\n            \"description\": \"Total Years\",\n            \"format\": \"double\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Total Years\"\n          },\n          \"years\": {\n            \"description\": \"Years\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Years\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputDateDifference\"\n      },\n      \"outputDateInfo\": {\n        \"example\": {\n          \"DayOfWeek\": 2.0,\n          \"DayOfYear\": 25.0,\n          \"MinutesInDay\": 359.0,\n          \"SecondsInDay\": 1234.0,\n          \"Ticks\": 1.23456789E9,\n          \"WeekOfYear\": 10.0\n        },\n        \"properties\": {\n          \"DayOfWeek\": {\n            \"description\": \"DayOfWeek\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"DayOfWeek\"\n          },\n          \"DayOfYear\": {\n            \"description\": \"DayOfYear\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"DayOfYear\"\n          },\n          \"MinutesInDay\": {\n            \"description\": \"MinutesInDay\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"MinutesInDay\"\n          },\n          \"SecondsInDay\": {\n            \"description\": \"SecondsInDay\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"SecondsInDay\"\n          },\n          \"Ticks\": {\n            \"description\": \"Ticks\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Ticks\"\n          },\n          \"WeekOfYear\": {\n            \"description\": \"WeekOfYear\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"WeekOfYear\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputDateInfo\"\n      },\n      \"outputFileByte\": {\n        \"example\": {\n          \"result\": \"Base64 encoded string (byte array)\"\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Result\",\n            \"format\": \"byte\",\n            \"pattern\": \"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}\\u003d\\u003d|[A-Za-z0-9+/]{3}\\u003d)?$\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputFileByte\"\n      },\n      \"outputMarketIndex\": {\n        \"example\": {\n          \"adj_close\": 72.7,\n          \"adj_high\": 74.32,\n          \"adj_low\": 72.245,\n          \"adj_open\": 73.84,\n          \"adj_volume\": 1.5151304E7,\n          \"close\": 72.7,\n          \"date\": \"2020-10-07T00:00:00+0000\",\n          \"exchange\": \"INDX\",\n          \"high\": 74.32,\n          \"low\": 72.245,\n          \"open\": 73.84,\n          \"symbol\": \"DJI.INDX\",\n          \"volume\": 1.5151304E7\n        },\n        \"properties\": {\n          \"adj_close\": {\n            \"description\": \"Adjusted close value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Adjusted Close\"\n          },\n          \"adj_high\": {\n            \"description\": \"Adjusted high value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Adjusted High\"\n          },\n          \"adj_low\": {\n            \"description\": \"Adjusted low value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Adjusted Low\"\n          },\n          \"adj_open\": {\n            \"description\": \"Adjusted open value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Adjusted Open\"\n          },\n          \"adj_volume\": {\n            \"description\": \"Adjusted trading volume\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Adjusted Volume\"\n          },\n          \"close\": {\n            \"description\": \"Close value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Close\"\n          },\n          \"date\": {\n            \"description\": \"Date\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Date\"\n          },\n          \"exchange\": {\n            \"description\": \"Market exchange\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Exchange\"\n          },\n          \"high\": {\n            \"description\": \"High value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"High\"\n          },\n          \"low\": {\n            \"description\": \"Low value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Low\"\n          },\n          \"open\": {\n            \"description\": \"Open value\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Open\"\n          },\n          \"symbol\": {\n            \"description\": \"Index symbol\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Symbol\"\n          },\n          \"volume\": {\n            \"description\": \"Trading volume\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Volume\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputMarketIndex\"\n      },\n      \"outputMultiCollection\": {\n        \"example\": {\n          \"result1\": [\n            \"a\",\n            \"b\",\n            \"c\"\n          ],\n          \"result2\": [\n            \"d\",\n            \"e\",\n            \"f\"\n          ]\n        },\n        \"properties\": {\n          \"result1\": {\n            \"description\": \"First collection result\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"First collection result\"\n          },\n          \"result2\": {\n            \"description\": \"Second collection result\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Second collection result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputMultiCollection\"\n      },\n      \"outputNumber\": {\n        \"example\": {\n          \"result\": 1.0\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Result\",\n            \"type\": \"number\",\n            \"x-ms-summary\": \"Result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputNumber\"\n      },\n      \"outputStockPrice\": {\n        \"example\": {\n          \"result\": [\n            {\n              \"close\": 72.7,\n              \"date\": \"2020-10-07T00:00:00+0000\",\n              \"exchange\": \"XNYS\",\n              \"high\": 74.32,\n              \"last\": 72.3,\n              \"low\": 72.245,\n              \"open\": 73.84,\n              \"symbol\": \"CVX\",\n              \"volume\": 1.5151304E7\n            }\n          ]\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Stock price information\",\n            \"items\": {\n              \"properties\": {\n                \"close\": {\n                  \"description\": \"Close\",\n                  \"type\": \"number\",\n                  \"x-ms-summary\": \"Close\"\n                },\n                \"date\": {\n                  \"description\": \"Date\",\n                  \"type\": \"string\",\n                  \"x-ms-summary\": \"Date\"\n                },\n                \"exchange\": {\n                  \"description\": \"Stock exchange\",\n                  \"type\": \"string\",\n                  \"x-ms-summary\": \"Exchange\"\n                },\n                \"high\": {\n                  \"description\": \"High\",\n                  \"type\": \"number\",\n                  \"x-ms-summary\": \"High\"\n                },\n                \"low\": {\n                  \"description\": \"Low\",\n                  \"type\": \"number\",\n                  \"x-ms-summary\": \"Low\"\n                },\n                \"open\": {\n                  \"description\": \"Open\",\n                  \"type\": \"number\",\n                  \"x-ms-summary\": \"Open\"\n                },\n                \"symbol\": {\n                  \"description\": \"Ticker symbol\",\n                  \"type\": \"string\",\n                  \"x-ms-summary\": \"Symbol\"\n                },\n                \"volume\": {\n                  \"description\": \"Volume\",\n                  \"type\": \"number\",\n                  \"x-ms-summary\": \"Volume\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"Stock price information\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputStockPrice\"\n      },\n      \"outputString\": {\n        \"example\": {\n          \"result\": \"string\"\n        },\n        \"properties\": {\n          \"result\": {\n            \"description\": \"Result\",\n            \"type\": \"string\",\n            \"x-ms-summary\": \"Result\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputString\"\n      },\n      \"outputStringArray\": {\n        \"example\": {\n          \"data\": [\n            \"string\"\n          ]\n        },\n        \"properties\": {\n          \"data\": {\n            \"description\": \"data\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"x-ms-summary\": \"data\"\n          }\n        },\n        \"type\": \"object\",\n        \"x-schemaName\": \"outputStringArray\"\n      }\n    },\n    \"securitySchemes\": {\n      \"apiKeyHeader\": {\n        \"in\": \"header\",\n        \"name\": \"X-IBM-Client-Id\",\n        \"type\": \"apiKey\"\n      }\n    }\n  },\n  \"x-ibm-configuration\": {\n    \"enforced\": true,\n    \"phase\": \"realized\",\n    \"testable\": true\n  },\n  \"x-ibm-endpoints\": [\n    {\n      \"endpointUrl\": \"https://connect.apptigent.com\",\n      \"type\": [\n        \"production\",\n        \"development\"\n      ]\n    }\n  ]\n}",
			"canonicalURL": "/github.com/SeUniVr/RestTestGen@c2182e83cbf652575339456966944312edf50a38/-/blob/testResults/test20/solved/powertools_solved.json",
			"externalURLs": [
				{
					"url": "https://github.com/SeUniVr/RestTestGen/blob/c2182e83cbf652575339456966944312edf50a38/testResults/test20/solved/powertools_solved.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 102: cannot unmarshal !!bool `true` into []string; yaml: line 157: cannot unmarshal !!bool `true` into []string; yaml: line 181: cannot unmarshal !!bool `true` into []string; yaml: line 214: cannot unmarshal !!bool `true` into []string; yaml: line 251: cannot unmarshal !!bool `true` into []string; yaml: line 275: cannot unmarshal !!bool `true` into []string; yaml: line 308: cannot unmarshal !!bool `true` into []string; yaml: line 346: cannot unmarshal !!bool `true` into []string; yaml: line 370: cannot unmarshal !!bool `true` into []string; yaml: line 404: cannot unmarshal !!bool `true` into []string; yaml: line 449: cannot unmarshal !!bool `true` into []string; yaml: line 473: cannot unmarshal !!bool `true` into []string; yaml: line 512: cannot unmarshal !!bool `true` into []string; yaml: line 554: cannot unmarshal !!bool `true` into []string; yaml: line 578: cannot unmarshal !!bool `true` into []string; yaml: line 611: cannot unmarshal !!bool `true` into []string; yaml: line 649: cannot unmarshal !!bool `true` into []string; yaml: line 673: cannot unmarshal !!bool `true` into []string; yaml: line 707: cannot unmarshal !!bool `true` into []string; yaml: line 752: cannot unmarshal !!bool `true` into []string; yaml: line 776: cannot unmarshal !!bool `true` into []string; yaml: line 809: cannot unmarshal !!bool `true` into []string; yaml: line 847: cannot unmarshal !!bool `true` into []string; yaml: line 871: cannot unmarshal !!bool `true` into []string; yaml: line 910: cannot unmarshal !!bool `true` into []string; yaml: line 952: cannot unmarshal !!bool `true` into []string; yaml: line 976: cannot unmarshal !!bool `true` into []string; yaml: line 1018: cannot unmarshal !!bool `true` into []string; yaml: line 1061: cannot unmarshal !!bool `true` into []string; yaml: line 1085: cannot unmarshal !!bool `true` into []string; yaml: line 1119: cannot unmarshal !!bool `true` into []string; yaml: line 1164: cannot unmarshal !!bool `true` into []string; yaml: line 1188: cannot unmarshal !!bool `true` into []string; yaml: line 1222: cannot unmarshal !!bool `true` into []string; yaml: line 1267: cannot unmarshal !!bool `true` into []string; yaml: line 1291: cannot unmarshal !!bool `true` into []string; yaml: line 1325: cannot unmarshal !!bool `true` into []string; yaml: line 1370: cannot unmarshal !!bool `true` into []string; yaml: line 1394: cannot unmarshal !!bool `true` into []string; yaml: line 1428: cannot unmarshal !!bool `true` into []string; yaml: line 1473: cannot unmarshal !!bool `true` into []string; yaml: line 1497: cannot unmarshal !!bool `true` into []string; yaml: line 1530: cannot unmarshal !!bool `true` into []string; yaml: line 1568: cannot unmarshal !!bool `true` into []string; yaml: line 1592: cannot unmarshal !!bool `true` into []string; yaml: line 1625: cannot unmarshal !!bool `true` into []string; yaml: line 1663: cannot unmarshal !!bool `true` into []string; yaml: line 1687: cannot unmarshal !!bool `true` into []string; yaml: line 1721: cannot unmarshal !!bool `true` into []string; yaml: line 1766: cannot unmarshal !!bool `true` into []string; yaml: line 1790: cannot unmarshal !!bool `true` into []string; yaml: line 1829: cannot unmarshal !!bool `true` into []string; yaml: line 1871: cannot unmarshal !!bool `true` into []string; yaml: line 1895: cannot unmarshal !!bool `true` into []string; yaml: line 1928: cannot unmarshal !!bool `true` into []string; yaml: line 1966: cannot unmarshal !!bool `true` into []string; yaml: line 1990: cannot unmarshal !!bool `true` into []string; yaml: line 2029: cannot unmarshal !!bool `true` into []string; yaml: line 2071: cannot unmarshal !!bool `true` into []string; yaml: line 2095: cannot unmarshal !!bool `true` into []string; yaml: line 2139: cannot unmarshal !!bool `true` into []string; yaml: line 2210: cannot unmarshal !!bool `true` into []string; yaml: line 2234: cannot unmarshal !!bool `true` into []string; yaml: line 2286: cannot unmarshal !!bool `true` into []string; yaml: line 2354: cannot unmarshal !!bool `true` into []string; yaml: line 2378: cannot unmarshal !!bool `true` into []string; yaml: line 2430: cannot unmarshal !!bool `true` into []string; yaml: line 2498: cannot unmarshal !!bool `true` into []string; yaml: line 2522: cannot unmarshal !!bool `true` into []string; yaml: line 2574: cannot unmarshal !!bool `true` into []string; yaml: line 2642: cannot unmarshal !!bool `true` into []string; yaml: line 2666: cannot unmarshal !!bool `true` into []string; yaml: line 2708: cannot unmarshal !!bool `true` into []string; yaml: line 2745: cannot unmarshal !!bool `true` into []string; yaml: line 2769: cannot unmarshal !!bool `true` into []string; yaml: line 2808: cannot unmarshal !!bool `true` into []string; yaml: line 2856: cannot unmarshal !!bool `true` into []string; yaml: line 2880: cannot unmarshal !!bool `true` into []string; yaml: line 2914: cannot unmarshal !!bool `true` into []string; yaml: line 2973: cannot unmarshal !!bool `true` into []string; yaml: line 2997: cannot unmarshal !!bool `true` into []string; yaml: line 3030: cannot unmarshal !!bool `true` into []string; yaml: line 3078: cannot unmarshal !!bool `true` into []string; yaml: line 3102: cannot unmarshal !!bool `true` into []string; yaml: line 3134: cannot unmarshal !!bool `true` into []string; yaml: line 3208: cannot unmarshal !!bool `true` into []string; yaml: line 3232: cannot unmarshal !!bool `true` into []string; yaml: line 3264: cannot unmarshal !!bool `true` into []string; yaml: line 3334: cannot unmarshal !!bool `true` into []string; yaml: line 3358: cannot unmarshal !!bool `true` into []string; yaml: line 3395: cannot unmarshal !!bool `true` into []string; yaml: line 3432: cannot unmarshal !!bool `true` into []string; yaml: line 3456: cannot unmarshal !!bool `true` into []string; yaml: line 3489: cannot unmarshal !!bool `true` into []string; yaml: line 3602: cannot unmarshal !!bool `true` into []string; yaml: line 3626: cannot unmarshal !!bool `true` into []string; yaml: line 3658: cannot unmarshal !!bool `true` into []string; yaml: line 3734: cannot unmarshal !!bool `true` into []string; yaml: line 3758: cannot unmarshal !!bool `true` into []string; yaml: line 3790: cannot unmarshal !!bool `true` into []string; yaml: line 3856: cannot unmarshal !!bool `true` into []string; yaml: line 3880: cannot unmarshal !!bool `true` into []string; yaml: line 3912: cannot unmarshal !!bool `true` into []string; yaml: line 3990: cannot unmarshal !!bool `true` into []string; yaml: line 4014: cannot unmarshal !!bool `true` into []string; yaml: line 4190: cannot unmarshal !!bool `true` into []string; yaml: line 4270: cannot unmarshal !!bool `true` into []string; yaml: line 4294: cannot unmarshal !!bool `true` into []string; yaml: line 4326: cannot unmarshal !!bool `true` into []string; yaml: line 4430: cannot unmarshal !!bool `true` into []string; yaml: line 4454: cannot unmarshal !!bool `true` into []string; yaml: line 4486: cannot unmarshal !!bool `true` into []string; yaml: line 4540: cannot unmarshal !!bool `true` into []string; yaml: line 4564: cannot unmarshal !!bool `true` into []string; yaml: line 4596: cannot unmarshal !!bool `true` into []string; yaml: line 4694: cannot unmarshal !!bool `true` into []string; yaml: line 4718: cannot unmarshal !!bool `true` into []string; yaml: line 4750: cannot unmarshal !!bool `true` into []string; yaml: line 4832: cannot unmarshal !!bool `true` into []string; yaml: line 4856: cannot unmarshal !!bool `true` into []string; yaml: line 4897: cannot unmarshal !!bool `true` into []string; yaml: line 4928: cannot unmarshal !!bool `true` into []string; yaml: line 4952: cannot unmarshal !!bool `true` into []string; yaml: line 5144: cannot unmarshal !!bool `true` into []string; yaml: line 5280: cannot unmarshal !!bool `true` into []string; yaml: line 5304: cannot unmarshal !!bool `true` into []string; yaml: line 5475: cannot unmarshal !!bool `true` into []string; yaml: line 5547: cannot unmarshal !!bool `true` into []string; yaml: line 5571: cannot unmarshal !!bool `true` into []string; yaml: line 5602: cannot unmarshal !!bool `true` into []string; yaml: line 5631: cannot unmarshal !!bool `true` into []string; yaml: line 5655: cannot unmarshal !!bool `true` into []string; yaml: line 5686: cannot unmarshal !!bool `true` into []string; yaml: line 5716: cannot unmarshal !!bool `true` into []string; yaml: line 5740: cannot unmarshal !!bool `true` into []string; yaml: line 5797: cannot unmarshal !!bool `true` into []string; yaml: line 5821: cannot unmarshal !!bool `true` into []string; yaml: line 5861: cannot unmarshal !!bool `true` into []string; yaml: line 5920: cannot unmarshal !!bool `true` into []string; yaml: line 5944: cannot unmarshal !!bool `true` into []string; yaml: line 6051: cannot unmarshal !!bool `true` into []string; yaml: line 6122: cannot unmarshal !!bool `true` into []string; yaml: line 6146: cannot unmarshal !!bool `true` into []string; yaml: line 6318: cannot unmarshal !!bool `true` into []string; yaml: line 6362: cannot unmarshal !!bool `true` into []string; yaml: line 6386: cannot unmarshal !!bool `true` into []string; yaml: line 6421: cannot unmarshal !!bool `true` into []string; yaml: line 6451: cannot unmarshal !!bool `true` into []string; yaml: line 6475: cannot unmarshal !!bool `true` into []string; yaml: line 6514: cannot unmarshal !!bool `true` into []string; yaml: line 6551: cannot unmarshal !!bool `true` into []string; yaml: line 6575: cannot unmarshal !!bool `true` into []string; yaml: line 6607: cannot unmarshal !!bool `true` into []string; yaml: line 6710: cannot unmarshal !!bool `true` into []string; yaml: line 6759: cannot unmarshal !!bool `true` into []string; yaml: line 6783: cannot unmarshal !!bool `true` into []string; yaml: line 6842: cannot unmarshal !!bool `true` into []string; yaml: line 6891: cannot unmarshal !!bool `true` into []string; yaml: line 6915: cannot unmarshal !!bool `true` into []string; yaml: line 6947: cannot unmarshal !!bool `true` into []string; yaml: line 6984: cannot unmarshal !!bool `true` into []string; yaml: line 7008: cannot unmarshal !!bool `true` into []string; yaml: line 7050: cannot unmarshal !!bool `true` into []string; yaml: line 7109: cannot unmarshal !!bool `true` into []string; yaml: line 7133: cannot unmarshal !!bool `true` into []string; yaml: line 7197: cannot unmarshal !!bool `true` into []string; yaml: line 7311: cannot unmarshal !!bool `true` into []string; yaml: line 7335: cannot unmarshal !!bool `true` into []string; yaml: line 7367: cannot unmarshal !!bool `true` into []string; yaml: line 7404: cannot unmarshal !!bool `true` into []string; yaml: line 7428: cannot unmarshal !!bool `true` into []string; yaml: line 7460: cannot unmarshal !!bool `true` into []string; yaml: line 7497: cannot unmarshal !!bool `true` into []string; yaml: line 7521: cannot unmarshal !!bool `true` into []string; yaml: line 7554: cannot unmarshal !!bool `true` into []string; yaml: line 7592: cannot unmarshal !!bool `true` into []string; yaml: line 7616: cannot unmarshal !!bool `true` into []string; yaml: line 7660: cannot unmarshal !!bool `true` into []string; yaml: line 7706: cannot unmarshal !!bool `true` into []string; yaml: line 7730: cannot unmarshal !!bool `true` into []string; yaml: line 7778: cannot unmarshal !!bool `true` into []string; yaml: line 7833: cannot unmarshal !!bool `true` into []string; yaml: line 7857: cannot unmarshal !!bool `true` into []string; yaml: line 7890: cannot unmarshal !!bool `true` into []string; yaml: line 7934: cannot unmarshal !!bool `true` into []string; yaml: line 7958: cannot unmarshal !!bool `true` into []string; yaml: line 8001: cannot unmarshal !!bool `true` into []string; yaml: line 8065: cannot unmarshal !!bool `true` into []string; yaml: line 8089: cannot unmarshal !!bool `true` into []string; yaml: line 8365: cannot unmarshal !!bool `true` into []string; yaml: line 8403: cannot unmarshal !!bool `true` into []string; yaml: line 8427: cannot unmarshal !!bool `true` into []string; yaml: line 8458: cannot unmarshal !!bool `true` into []string; yaml: line 8487: cannot unmarshal !!bool `true` into []string; yaml: line 8511: cannot unmarshal !!bool `true` into []string; yaml: line 8553: cannot unmarshal !!bool `true` into []string; yaml: line 8604: cannot unmarshal !!bool `true` into []string; yaml: line 8628: cannot unmarshal !!bool `true` into []string; yaml: line 8776: cannot unmarshal !!bool `true` into []string; yaml: line 8800: cannot unmarshal !!bool `true` into []string; yaml: line 8846: cannot unmarshal !!bool `true` into []string; yaml: line 8906: cannot unmarshal !!bool `true` into []string; yaml: line 8930: cannot unmarshal !!bool `true` into []string; yaml: line 8962: cannot unmarshal !!bool `true` into []string; yaml: line 9005: cannot unmarshal !!bool `true` into []string; yaml: line 9029: cannot unmarshal !!bool `true` into []string; yaml: line 9068: cannot unmarshal !!bool `true` into []string; yaml: line 9110: cannot unmarshal !!bool `true` into []string; yaml: line 9134: cannot unmarshal !!bool `true` into []string; yaml: line 9210: cannot unmarshal !!bool `true` into []string; yaml: line 9306: cannot unmarshal !!bool `true` into []string; yaml: line 9330: cannot unmarshal !!bool `true` into []string; yaml: line 9373: cannot unmarshal !!bool `true` into []string; yaml: line 9406: cannot unmarshal !!bool `true` into []string; yaml: line 9466: cannot unmarshal !!bool `true` into []string; yaml: line 9595: cannot unmarshal !!bool `true` into []string; yaml: line 9764: cannot unmarshal !!bool `true` into []string; yaml: line 9828: cannot unmarshal !!bool `true` into []string; yaml: line 9852: cannot unmarshal !!bool `true` into []string; yaml: line 9884: cannot unmarshal !!bool `true` into []string; yaml: line 9926: cannot unmarshal !!bool `true` into []string; yaml: line 9950: cannot unmarshal !!bool `true` into []string; yaml: line 9981: cannot unmarshal !!bool `true` into []string; yaml: line 10010: cannot unmarshal !!bool `true` into []string; yaml: line 10034: cannot unmarshal !!bool `true` into []string; yaml: line 10065: cannot unmarshal !!bool `true` into []string; yaml: line 10095: cannot unmarshal !!bool `true` into []string; yaml: line 10119: cannot unmarshal !!bool `true` into []string; yaml: line 10150: cannot unmarshal !!bool `true` into []string; yaml: line 10179: cannot unmarshal !!bool `true` into []string; yaml: line 10203: cannot unmarshal !!bool `true` into []string; yaml: line 10243: cannot unmarshal !!bool `true` into []string; yaml: line 10287: cannot unmarshal !!bool `true` into []string; yaml: line 10311: cannot unmarshal !!bool `true` into []string; yaml: line 10524: cannot unmarshal !!bool `true` into []string; yaml: line 10742: cannot unmarshal !!bool `true` into []string; yaml: line 10766: cannot unmarshal !!bool `true` into []string; yaml: line 10797: cannot unmarshal !!bool `true` into []string; yaml: line 10827: cannot unmarshal !!bool `true` into []string; yaml: line 10851: cannot unmarshal !!bool `true` into []string"
}