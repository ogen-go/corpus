{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chubbyphp/petstore"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "swagger/swagger.yml",
			"byteSize": 16739,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\npaths:\n  /api/ping:\n    get:\n      summary: Ping\n      operationId: ping\n      tags:\n        - system\n      responses:\n        '200':\n          description: Ping response with current date\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PingResponse\"\n        '500':\n          description: Server error\n  /api/pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: Accept\n          in: header\n          description: The accepted mimetype of the response\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: offset\n          in: query\n          description: Which is the first item to return, starting from 0\n          required: false\n          schema:\n            type: integer\n            example: '0'\n        - name: limit\n          in: query\n          description: How many items to return\n          required: false\n          schema:\n            type: integer\n            example: 20\n        - name: filters[name]\n          in: query\n          description: Filter by name\n          required: false\n          schema:\n            type: string\n            example: Cherry\n        - name: sort[name]\n          in: query\n          description: Sort by name\n          required: false\n          schema:\n            type: string\n            example: asc\n      responses:\n        '200':\n          description: Pets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PetCollectionResponse\"\n        '400':\n          description: Query validation error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestApiProblem'\n        '406':\n          description: Missing or not supported accept header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableApiProblem'\n        '415':\n          description: Missing or not supported content-type header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeApiProblem'\n        '500':\n          description: Server error\n    post:\n      summary: Create a pet\n      operationId: createPet\n      tags:\n        - pets\n      parameters:\n        - name: Accept\n          in: header\n          description: The accepted mimetype of the response\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: Content-Type\n          in: header\n          description: The mimetype of the request\n          schema:\n            type: string\n            example: application/json\n          required: true\n      requestBody:\n        description: Pet data\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PetRequest'\n      responses:\n        '201':\n          description: Pet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PetResponse'\n        '406':\n          description: Missing or not supported accept header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableApiProblem'\n        '415':\n          description: Missing or not supported content-type header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeApiProblem'\n        '422':\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnprocessableEntityApiProblem'\n        '500':\n          description: Server error\n  /api/pets/{id}:\n    get:\n      summary: Read a pet\n      operationId: readPet\n      tags:\n        - pets\n      parameters:\n        - name: Accept\n          in: header\n          description: The accepted mimetype of the response\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: id\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: Pet\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PetResponse\"\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundApiProblem'\n        '406':\n          description: Missing or not supported accept header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableApiProblem'\n        '415':\n          description: Missing or not supported content-type header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeApiProblem'\n        '500':\n          description: Server error\n    put:\n      summary: Update a pet\n      operationId: updatePet\n      tags:\n        - pets\n      parameters:\n        - name: Accept\n          in: header\n          description: The accepted mimetype of the response\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: Content-Type\n          in: header\n          description: The mimetype of the request\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: id\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        description: Pet data\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PetRequest'\n      responses:\n        '200':\n          description: Returns the updated pet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PetResponse'\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundApiProblem'\n        '406':\n          description: Missing or not supported accept header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableApiProblem'\n        '415':\n          description: Missing or not supported content-type header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeApiProblem'\n        '422':\n          description: Validation error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnprocessableEntityApiProblem'\n        '500':\n          description: Server error\n    delete:\n      summary: Delete a pet\n      operationId: deletePet\n      tags:\n        - pets\n      parameters:\n        - name: Accept\n          in: header\n          description: The accepted mimetype of the response\n          schema:\n            type: string\n            example: application/json\n          required: true\n        - name: id\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '204':\n          description: Empty response\n        '404':\n          description: Resource not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundApiProblem'\n        '406':\n          description: Missing or not supported accept header\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableApiProblem'\n        '500':\n          description: Server error\ncomponents:\n  schemas:\n    BadRequestApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n          example: https://tools.ietf.org/html/rfc2616#section-10.4.2\n        title:\n          type: string\n          example: Bad Request\n        detail:\n          type: string\n          example: null\n        instance:\n          type: string\n          example: null\n        invalidParameters:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: limit\n              reason:\n                type: string\n                example: constraint.type.invalidtype\n              details:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: string\n                  wishedType:\n                    type: string\n                    example: integer\n        _type:\n          type: string\n          example: apiProblem\n    NotFoundApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n          example: https://tools.ietf.org/html/rfc2616#section-10.4.5\n        title:\n          type: string\n          example: Not Found\n        detail:\n          type: string\n          example: null\n        instance:\n          type: string\n          example: null\n        _type:\n          type: string\n          example: apiProblem\n    NotAcceptableApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n          example: https://tools.ietf.org/html/rfc2616#section-10.4.7\n        title:\n          type: string\n          example: Not Acceptable\n        detail:\n          type: string\n          example: null\n        instance:\n          type: string\n          example: null\n        accept:\n          type: string\n          example: text/html\n        acceptables:\n          type: array\n          items:\n            type: string\n            example: application/json\n        _type:\n          type: string\n          example: apiProblem\n    UnsupportedMediaTypeApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n          example: https://tools.ietf.org/html/rfc2616#section-10.4.16\n        title:\n          type: string\n          example: Unsupported Media Type\n        detail:\n          type: string\n          example: null\n        instance:\n          type: string\n          example: null\n        mediaType:\n          type: string\n          example: text/html\n        supportedMediaTypes:\n          type: array\n          items:\n            type: string\n            example: application/json\n        _type:\n          type: string\n          example: apiProblem\n    UnprocessableEntityApiProblem:\n      type: object\n      properties:\n        type:\n          type: string\n          example: https://tools.ietf.org/html/rfc4918#section-11.2\n        title:\n          type: string\n          example: Unprocessable Entity\n        detail:\n          type: string\n          example: null\n        instance:\n          type: string\n          example: null\n        invalidParameters:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                example: name\n              reason:\n                type: string\n                example: constraint.notblank.blank\n              details:\n                type: object\n        _type:\n          type: string\n          example: apiProblem\n    PingResponse:\n      type: object\n      properties:\n        date:\n          type: string\n          format: datetime\n          example: \"2019-09-11T11:28:42+00:00\"\n    PetRequest:\n      required:\n        -name\n      type: object\n      properties:\n        name:\n          type: string\n          example: Kathy\n        tag:\n          type: string\n          example: 123.456.789\n        vaccination:\n          type: array\n          items:\n            $ref: '#/components/schemas/Vaccination'\n    PetResponse:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              example: c9b6657d-3809-45cf-9bf1-a0ccb31e0158\n            createdAt:\n              type: string\n              format: datetime\n              example: '2018-10-06T08:00:00+02:00'\n            updatedAt:\n              type: string\n              format: datetime\n              example: '2018-10-06T09:00:00+02:00'\n        - $ref: '#/components/schemas/PetRequest'\n        - type: object\n          properties:\n            _links:\n              type: object\n              properties:\n                read:\n                  type: object\n                  properties:\n                    href:\n                      type: string\n                      example: '/pets/c9b6657d-3809-45cf-9bf1-a0ccb31e0158'\n                    templated:\n                      type: boolean\n                      example: false\n                    rel:\n                      type: object\n                    attributes:\n                      type: object\n                      properties:\n                        method:\n                          type: string\n                          example: GET\n                update:\n                  type: object\n                  properties:\n                    href:\n                      type: string\n                      example: '/pets/c9b6657d-3809-45cf-9bf1-a0ccb31e0158'\n                    templated:\n                      type: boolean\n                      example: false\n                    rel:\n                      type: object\n                    attributes:\n                      type: object\n                      properties:\n                        method:\n                          type: string\n                          example: PUT\n                delete:\n                  type: object\n                  properties:\n                    href:\n                      type: string\n                      example: '/pets/c9b6657d-3809-45cf-9bf1-a0ccb31e0158'\n                    templated:\n                      type: boolean\n                      example: false\n                    rel:\n                      type: object\n                    attributes:\n                      type: object\n                      properties:\n                        method:\n                          type: string\n                          example: DELETE\n            _type:\n              type: string\n              example: pet\n    PetCollectionResponse:\n      type: object\n      properties:\n        offset:\n          type: integer\n          example: 0\n        limit:\n          type: integer\n          example: 20\n        count:\n          type: integer\n          example: 25\n        _embedded:\n          type: object\n          properties:\n            items:\n              type: array\n              items:\n                $ref: '#/components/schemas/PetResponse'\n        _links:\n          type: object\n          properties:\n            list:\n              type: object\n              properties:\n                href:\n                  type: string\n                  example: '/pets?offset=0\u0026limit=20'\n                templated:\n                  type: boolean\n                  example: false\n                rel:\n                  type: object\n                attributes:\n                  type: object\n                  properties:\n                    method:\n                      type: string\n                      example: GET\n            create:\n              type: object\n              properties:\n                href:\n                  type: string\n                  example: '/pets'\n                templated:\n                  type: boolean\n                  example: false\n                rel:\n                  type: object\n                attributes:\n                  type: object\n                  properties:\n                    method:\n                      type: string\n                      example: POST\n        _type:\n          type: string\n          example: petCollection\n    Vaccination:\n      type: object\n      properties:\n        name:\n          type: string\n          example: Rabies\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal string into Go struct field Schema.components.schemas.required of type []string"
}