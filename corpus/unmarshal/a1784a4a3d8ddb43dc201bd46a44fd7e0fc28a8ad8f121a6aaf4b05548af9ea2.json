{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/weather-gov/api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "assets/openapi.yaml",
			"byteSize": 182961,
			"content": "openapi: 3.0.3\ninfo:\n    title: weather.gov API\n    description: weather.gov API\n    version: 1.9.0\nservers:\n    -\n        url: https://api.weather.gov\n        description: Production server\nexternalDocs:\n    description: Full API documentation\n    url: https://www.weather.gov/documentation/services-web-api\nsecurity:\n    - userAgent: []\npaths:\n    /alerts:\n        get:\n            operationId: alerts_query\n            x-symfony:\n                controller: App\\Controller\\AlertController::alertQueryAction\n            description: Returns all alerts\n            parameters:\n                -\n                    name: active\n                    in: query\n                    deprecated: true\n                    description: List only active alerts (use /alerts/active endpoints instead)\n                    schema:\n                        type: boolean\n                - $ref: '#/components/parameters/QueryStartTime'\n                - $ref: '#/components/parameters/QueryEndTime'\n                - $ref: '#/components/parameters/AlertStatus'\n                - $ref: '#/components/parameters/AlertMessageType'\n                - $ref: '#/components/parameters/AlertEventName'\n                - $ref: '#/components/parameters/AlertCode'\n                - $ref: '#/components/parameters/AlertArea'\n                - $ref: '#/components/parameters/AlertPoint'\n                - $ref: '#/components/parameters/AlertRegion'\n                - $ref: '#/components/parameters/AlertRegionType'\n                - $ref: '#/components/parameters/AlertZone'\n                - $ref: '#/components/parameters/AlertUrgency'\n                - $ref: '#/components/parameters/AlertSeverity'\n                - $ref: '#/components/parameters/AlertCertainty'\n                - $ref: '#/components/parameters/Limit'\n                - $ref: '#/components/parameters/PaginationCursor'\n            responses:\n                '200':\n                    $ref: '#/components/responses/AlertCollection'\n                '301':\n                    description: Certain common queries may be redirected to discrete URLs\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/active:\n        get:\n            operationId: alerts_active\n            x-symfony:\n                controller: App\\Controller\\AlertController::allActiveAlertsAction\n            description: Returns all currently active alerts\n            parameters:\n                - $ref: '#/components/parameters/AlertStatus'\n                - $ref: '#/components/parameters/AlertMessageType'\n                - $ref: '#/components/parameters/AlertEventName'\n                - $ref: '#/components/parameters/AlertCode'\n                - $ref: '#/components/parameters/AlertArea'\n                - $ref: '#/components/parameters/AlertPoint'\n                - $ref: '#/components/parameters/AlertRegion'\n                - $ref: '#/components/parameters/AlertRegionType'\n                - $ref: '#/components/parameters/AlertZone'\n                - $ref: '#/components/parameters/AlertUrgency'\n                - $ref: '#/components/parameters/AlertSeverity'\n                - $ref: '#/components/parameters/AlertCertainty'\n                - $ref: '#/components/parameters/Limit'\n            responses:\n                '200':\n                    $ref: '#/components/responses/AlertCollection'\n                '301':\n                    description: Certain common queries may be redirected to discrete URLs\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/active/count:\n        get:\n            operationId: alerts_active_count\n            x-symfony:\n                controller: App\\Controller\\AlertController::allActiveAlertsCountAction\n            description: Returns info on the number of active alerts\n            responses:\n                '200':\n                    description: A data structure showing the counts of active alerts broken down by various categories\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                type: object\n                                properties:\n                                    total:\n                                        description: The total number of active alerts\n                                        type: integer\n                                        minimum: 0\n                                    land:\n                                        description: The total number of active alerts affecting land zones\n                                        type: integer\n                                        minimum: 0\n                                    marine:\n                                        description: The total number of active alerts affecting marine zones\n                                        type: integer\n                                        minimum: 0\n                                    regions:\n                                        description: Active alerts by marine region\n                                        type: object\n                                        additionalProperties:\n                                            type: integer\n                                            minimum: 1\n                                    areas:\n                                        description: Active alerts by area (state/territory)\n                                        type: object\n                                        additionalProperties:\n                                            type: integer\n                                            minimum: 1\n                                    zones:\n                                        description: Active alerts by NWS public zone or county code\n                                        type: object\n                                        additionalProperties:\n                                            type: integer\n                                            minimum: 1\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/active/zone/{zoneId}:\n        parameters:\n            - $ref: '#/components/parameters/NWSZoneId'\n        get:\n            operationId: alerts_active_zone\n            x-symfony:\n                controller: App\\Controller\\AlertController::activeAlertsByZoneAction\n            description: Returns active alerts for the given NWS public zone or county\n            responses:\n                '200':\n                    $ref: '#/components/responses/AlertCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/active/area/{area}:\n        parameters:\n            -\n                name: area\n                in: path\n                required: true\n                description: State/area ID\n                schema:\n                    $ref: '#/components/schemas/AreaCode'\n        get:\n            operationId: alerts_active_area\n            x-symfony:\n                controller: App\\Controller\\AlertController::activeAlertsByAreaAction\n            description: Returns active alerts for the given area (state or marine area)\n            responses:\n                '200':\n                    $ref: '#/components/responses/AlertCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/active/region/{region}:\n        parameters:\n            -\n                name: region\n                in: path\n                required: true\n                description: Marine region ID\n                schema:\n                    $ref: '#/components/schemas/MarineRegionCode'\n        get:\n            operationId: alerts_active_region\n            x-symfony:\n                controller: App\\Controller\\AlertController::activeAlertsByRegionAction\n            description: Returns active alerts for the given marine region\n            responses:\n                '200':\n                    $ref: '#/components/responses/AlertCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/types:\n        get:\n            operationId: alerts_types\n            x-symfony:\n                controller: App\\Controller\\AlertController::alertTypesAction\n            description: Returns a list of alert types\n            responses:\n                '200':\n                    description: A list of recognized event types\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                type: object\n                                properties:\n                                    eventTypes:\n                                        description: A list of recognized event types\n                                        type: array\n                                        items:\n                                            type: string\n                default:\n                    $ref: '#/components/responses/Error'\n    /alerts/{id}:\n        parameters:\n            -\n                name: id\n                in: path\n                required: true\n                description: Alert identifier\n                schema:\n                    $ref: '#/components/schemas/AlertId'\n        get:\n            operationId: alerts_single\n            x-symfony:\n                controller: App\\Controller\\AlertController::singleAlertAction\n                priority: -100\n            description: Returns a specific alert\n            responses:\n                '200':\n                    description: An alert record\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/AlertGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/AlertJsonLd'\n                        application/cap+xml:\n                            schema:\n                                $ref: '#/components/schemas/AlertCap'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/cwsus/{cwsuId}:\n        get:\n            operationId: cwsu\n            x-symfony:\n                controller: App\\Controller\\AviationController::cwsuAction\n            description: Returns metadata about a Center Weather Service Unit\n            parameters:\n                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/CenterWeatherServiceUnitJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/cwsus/{cwsuId}/cwas:\n        get:\n            operationId: cwas\n            x-symfony:\n                controller: App\\Controller\\AviationController::cwasAction\n            description: Returns a list of Center Weather Advisories from a CWSU\n            parameters:\n                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/CenterWeatherAdvisoryCollectionGeoJson'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}:\n        get:\n            operationId: cwa\n            x-symfony:\n                controller: App\\Controller\\AviationController::cwaAction\n            description: Returns a list of Center Weather Advisories from a CWSU\n            parameters:\n                - $ref: '#/components/parameters/NWSCenterWeatherServiceUnitId'\n                - $ref: '#/components/parameters/Date'\n                -\n                    name: sequence\n                    in: path\n                    required: true\n                    description: Sequence number\n                    schema:\n                        type: integer\n                        minimum: 100\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/CenterWeatherAdvisoryGeoJson'\n                        application/vnd.noaa.uswx+xml:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/sigmets:\n        get:\n            operationId: sigmetQuery\n            x-symfony:\n                controller: App\\Controller\\AviationController::sigmetQueryAction\n            description: Returns a list of SIGMET/AIRMETs\n            parameters:\n                - $ref: '#/components/parameters/QueryStartTime'\n                - $ref: '#/components/parameters/QueryEndTime'\n                - $ref: '#/components/parameters/QueryDate'\n                -\n                    name: fir\n                    in: query\n                    description: FIR identifier\n                    schema:\n                        $ref: '#/components/schemas/FIRIdentifier'\n                -\n                    name: sequence\n                    in: query\n                    description: SIGMET sequence number\n                    schema:\n                        $ref: '#/components/schemas/SigmetSequenceNumber'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/SigmetCollectionGeoJson'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/sigmets/{fir}:\n        get:\n            operationId: sigmetsByFIR\n            x-symfony:\n                controller: App\\Controller\\AviationController::sigmetQueryAction\n            description: Returns a list of SIGMET/AIRMETs for the specified FIR\n            parameters:\n                - $ref: '#/components/parameters/FIRIdentifier'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/SigmetCollectionGeoJson'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/sigmets/{fir}/{date}:\n        get:\n            operationId: sigmetsByFIRByDate\n            x-symfony:\n                controller: App\\Controller\\AviationController::sigmetQueryAction\n            description: Returns a list of SIGMET/AIRMETs for the specified FIR for the specified date\n            parameters:\n                - $ref: '#/components/parameters/FIRIdentifier'\n                - $ref: '#/components/parameters/Date'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/SigmetCollectionGeoJson'\n                default:\n                    $ref: '#/components/responses/Error'\n    /aviation/sigmets/{fir}/{date}/{sequence}:\n        get:\n            operationId: sigmet\n            x-symfony:\n                controller: App\\Controller\\AviationController::sigmetAction\n            description: Returns a specific SIGMET/AIRMET\n            parameters:\n                - $ref: '#/components/parameters/FIRIdentifier'\n                - $ref: '#/components/parameters/Date'\n                - $ref: '#/components/parameters/SigmetSequenceNumber'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/SigmetGeoJson'\n                        application/vnd.noaa.uswx+xml:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /glossary:\n        get:\n            operationId: glossary\n            x-symfony:\n                controller: App\\Controller\\GlossaryController::glossaryAction\n            description: Returns glossary terms\n            responses:\n                '200':\n                    description: A set of glossary terms\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                type: object\n                                properties:\n                                    '@context':\n                                        $ref: '#/components/schemas/JsonLdContext'\n                                    glossary:\n                                        description: A list of glossary terms\n                                        type: array\n                                        items:\n                                            type: object\n                                            properties:\n                                                term:\n                                                    description: The term being defined\n                                                    type: string\n                                                definition:\n                                                    description: A definition for the term\n                                                    type: string\n                default:\n                    $ref: '#/components/responses/Error'\n    /gridpoints/{wfo}/{x},{y}:\n        parameters:\n            - $ref: '#/components/parameters/GridpointWFO'\n            - $ref: '#/components/parameters/GridpointX'\n            - $ref: '#/components/parameters/GridpointY'\n        get:\n            operationId: gridpoint\n            x-symfony:\n                controller: App\\Controller\\GridpointController::gridpointAction\n            description: Returns raw numerical forecast data for a 2.5km grid area\n            parameters:\n                - $ref: '#/components/parameters/Debug'\n            responses:\n                '200':\n                    description: Gridpoint forecast data\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/GridpointGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/GridpointJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /gridpoints/{wfo}/{x},{y}/forecast:\n        parameters:\n            - $ref: '#/components/parameters/GridpointWFO'\n            - $ref: '#/components/parameters/GridpointX'\n            - $ref: '#/components/parameters/GridpointY'\n        get:\n            operationId: gridpoint_forecast\n            x-symfony:\n                controller: App\\Controller\\GridpointController::gridpointForecastAction\n            description: Returns a textual forecast for a 2.5km grid area\n            parameters:\n                - $ref: '#/components/parameters/Debug'\n                - $ref: '#/components/parameters/GridpointForecastFeatureFlags'\n                - $ref: '#/components/parameters/GridpointForecastUnits'\n            responses:\n                '200':\n                    $ref: '#/components/responses/GridpointForecast'\n                default:\n                    $ref: '#/components/responses/Error'\n    /gridpoints/{wfo}/{x},{y}/forecast/hourly:\n        parameters:\n            - $ref: '#/components/parameters/GridpointWFO'\n            - $ref: '#/components/parameters/GridpointX'\n            - $ref: '#/components/parameters/GridpointY'\n        get:\n            operationId: gridpoint_forecast_hourly\n            x-symfony:\n                controller: App\\Controller\\GridpointController::gridpointHourlyForecastAction\n            description: Returns a textual hourly forecast for a 2.5km grid area\n            parameters:\n                - $ref: '#/components/parameters/Debug'\n                - $ref: '#/components/parameters/GridpointForecastFeatureFlags'\n                - $ref: '#/components/parameters/GridpointForecastUnits'\n            responses:\n                '200':\n                    $ref: '#/components/responses/GridpointForecast'\n                default:\n                    $ref: '#/components/responses/Error'\n    /gridpoints/{wfo}/{x},{y}/stations:\n        parameters:\n            - $ref: '#/components/parameters/GridpointWFO'\n            - $ref: '#/components/parameters/GridpointX'\n            - $ref: '#/components/parameters/GridpointY'\n        get:\n            operationId: gridpoint_stations\n            x-symfony:\n                controller: App\\Controller\\GridpointController::gridpointStationsAction\n            description: Returns a list of observation stations usable for a given 2.5km grid area\n            responses:\n                '200':\n                    $ref: '#/components/responses/ObservationStationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /icons/{set}/{timeOfDay}/{first}:\n        parameters:\n            -\n                name: set\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: timeOfDay\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: first\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: size\n                in: query\n                description: Font size\n                schema:\n                    anyOf:\n                        -\n                            type: string\n                            enum:\n                                - small\n                                - medium\n                                - large\n                        -\n                            type: integer\n                            minimum: 10\n                            maximum: 500\n            -\n                name: fontsize\n                in: query\n                description: Font size\n                schema:\n                    type: integer\n                    minimum: 2\n                    maximum: 24\n        get:\n            operationId: icons\n            x-symfony:\n                controller: App\\Controller\\IconController::iconAction\n            description: Returns a forecast icon. Icon services in API are deprecated.\n            deprecated: true\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        image/png:\n                            schema:\n                                $ref: '#/components/schemas/BinaryFile'\n                default:\n                    $ref: '#/components/responses/Error'\n    /icons/{set}/{timeOfDay}/{first}/{second}:\n        parameters:\n            -\n                name: set\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: timeOfDay\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: first\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: second\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: size\n                in: query\n                description: Font size\n                schema:\n                    anyOf:\n                        -\n                            type: string\n                            enum:\n                                - small\n                                - medium\n                                - large\n                        -\n                            type: integer\n                            minimum: 10\n                            maximum: 500\n            -\n                name: fontsize\n                in: query\n                description: Font size\n                schema:\n                    type: integer\n                    minimum: 2\n                    maximum: 24\n        get:\n            operationId: iconsDualCondition\n            x-symfony:\n                controller: App\\Controller\\IconController::iconAction\n            description: Returns a forecast icon. Icon services in API are deprecated.\n            deprecated: true\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        image/png:\n                            schema:\n                                $ref: '#/components/schemas/BinaryFile'\n                default:\n                    $ref: '#/components/responses/Error'\n    /icons:\n        get:\n            operationId: icons_summary\n            x-symfony:\n                controller: App\\Controller\\IconController::indexAction\n            description: Returns a list of icon codes and textual descriptions. Icon services in API are deprecated.\n            deprecated: true\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                type: object\n                                properties:\n                                    '@context':\n                                        $ref: '#/components/schemas/JsonLdContext'\n                                    icons:\n                                        type: object\n                                        additionalProperties:\n                                            type: object\n                                            properties:\n                                                description:\n                                                    type: string\n                                            required: [description]\n                                            additionalProperties: false\n                                required: [icons]\n                                additionalProperties: false\n                default:\n                    $ref: '#/components/responses/Error'\n    /thumbnails/satellite/{area}:\n        parameters:\n            -\n                name: area\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n                    enum:\n                        - a\n                        - e\n                        - g\n                        - h\n                        - p\n                        - s\n                        - w\n        get:\n            operationId: satellite_thumbnails\n            x-symfony:\n                controller: App\\Controller\\ImageController::thumbnailSatelliteAction\n            description: Returns a thumbnail image for a satellite region. Image services in API are deprecated.\n            deprecated: true\n            responses:\n                '200':\n                    description: An image file\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        image/jpeg:\n                            schema:\n                                $ref: '#/components/schemas/BinaryFile'\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}/observations:\n        parameters:\n            - $ref: '#/components/parameters/ObservationStationId'\n        get:\n            operationId: station_observation_list\n            x-symfony:\n                controller: App\\Controller\\ObservationController::observationListAction\n            description: Returns a list of observations for a given station\n            parameters:\n                - $ref: '#/components/parameters/QueryStartTime'\n                - $ref: '#/components/parameters/QueryEndTime'\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                        maximum: 500\n            responses:\n                '200':\n                    $ref: '#/components/responses/ObservationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}/observations/latest:\n        parameters:\n            - $ref: '#/components/parameters/ObservationStationId'\n        get:\n            operationId: station_observation_latest\n            x-symfony:\n                controller: App\\Controller\\ObservationController::stationLatestObservationAction\n            description: Returns the latest observation for a station\n            parameters:\n                -\n                    name: require_qc\n                    in: query\n                    description: Require QC\n                    schema:\n                        type: boolean\n            responses:\n                '200':\n                    $ref: '#/components/responses/Observation'\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}/observations/{time}:\n        parameters:\n            - $ref: '#/components/parameters/ObservationStationId'\n        get:\n            operationId: station_observation_time\n            x-symfony:\n                controller: App\\Controller\\ObservationController::stationSingleObservationAction\n            description: Returns a single observation.\n            parameters:\n                -\n                    name: time\n                    in: path\n                    required: true\n                    description: Timestamp of requested observation\n                    schema:\n                        type: string\n                        format: date-time\n            responses:\n                '200':\n                    $ref: '#/components/responses/Observation'\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}/tafs:\n        get:\n            operationId: tafs\n            x-symfony:\n                controller: App\\Controller\\AviationController::tafsAction\n            description: Returns Terminal Aerodrome Forecasts for the specified airport station.\n            parameters:\n                - $ref: '#/components/parameters/ObservationStationId'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}/tafs/{date}/{time}:\n        get:\n            operationId: taf\n            x-symfony:\n                controller: App\\Controller\\AviationController::tafAction\n            description: Returns a single Terminal Aerodrome Forecast.\n            parameters:\n                - $ref: '#/components/parameters/ObservationStationId'\n                - $ref: '#/components/parameters/Date'\n                - $ref: '#/components/parameters/Time'\n            responses:\n                '200':\n                    description: success\n                    content:\n                        application/vnd.wmo.iwxxm+xml:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations:\n        get:\n            operationId: obs_stations\n            x-symfony:\n                controller: App\\Controller\\ObservationStationController::stationsAction\n            description: Returns a list of observation stations.\n            parameters:\n                -\n                    name: id\n                    in: query\n                    description: Filter by observation station ID\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                    style: form\n                    explode: false\n                -\n                    name: state\n                    in: query\n                    description: Filter by state/marine area code\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/AreaCode'\n                    style: form\n                    explode: false\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                        maximum: 500\n            responses:\n                '200':\n                    $ref: '#/components/responses/ObservationStationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /stations/{stationId}:\n        parameters:\n            - $ref: '#/components/parameters/ObservationStationId'\n        get:\n            operationId: obs_station\n            x-symfony:\n                controller: App\\Controller\\ObservationStationController::stationAction\n            description: Returns metadata about a given observation station\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ObservationStationGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ObservationStationJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /offices/{officeId}:\n        parameters:\n            - $ref: '#/components/parameters/NWSOfficeId'\n        get:\n            operationId: office\n            x-symfony:\n                controller: App\\Controller\\OfficeController::officeAction\n            description: Returns metadata about a NWS forecast office\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/Office'\n                default:\n                    $ref: '#/components/responses/Error'\n    /offices/{officeId}/headlines/{headlineId}:\n        parameters:\n            - $ref: '#/components/parameters/NWSOfficeId'\n            -\n                name: headlineId\n                in: path\n                required: true\n                description: Headline record ID\n                schema:\n                    type: string\n        get:\n            operationId: office_headline\n            x-symfony:\n                controller: App\\Controller\\OfficeController::officeHeadlineAction\n            description: Returns a specific news headline for a given NWS office\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/OfficeHeadline'\n                default:\n                    $ref: '#/components/responses/Error'\n    /offices/{officeId}/headlines:\n        parameters:\n            - $ref: '#/components/parameters/NWSOfficeId'\n        get:\n            operationId: office_headlines\n            x-symfony:\n                controller: App\\Controller\\OfficeController::officeHeadlinesAction\n            description: Returns a list of news headlines for a given NWS office\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/OfficeHeadlineCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /offices/{officeId}/config:\n        parameters:\n            - $ref: '#/components/parameters/NWSOfficeId'\n        get:\n            operationId: office_config\n            x-symfony:\n                controller: App\\Controller\\OfficeController::configAction\n                private: true\n            description: Returns configuration data for an NWS office for use by other NWS web applications\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                type: object\n                default:\n                    $ref: '#/components/responses/Error'\n    /points/{point}:\n        parameters:\n            - $ref: '#/components/parameters/PathPoint'\n        get:\n            operationId: point\n            x-symfony:\n                controller: App\\Controller\\PointController::pointAction\n            description: Returns metadata about a given latitude/longitude point\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/PointGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/PointJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /points/{point}/stations:\n        parameters:\n            - $ref: '#/components/parameters/PathPoint'\n        get:\n            operationId: point_stations\n            x-symfony:\n                controller: App\\Controller\\PointController::pointStationsAction\n            deprecated: true\n            description: Returns a list of observation stations for a given point\n            responses:\n                '301':\n                    description: redirect to gridpoint stations\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/servers:\n        get:\n            operationId: radar_servers\n            x-symfony:\n                controller: App\\Controller\\RadarController::serversAction\n            description: Returns a list of radar servers\n            parameters:\n                -\n                    name: reportingHost\n                    in: query\n                    description: Show records from specific reporting host\n                    schema:\n                        type: string\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/servers/{id}:\n        parameters:\n            -\n                name: id\n                in: path\n                required: true\n                description: Server ID\n                schema:\n                    type: string\n        get:\n            operationId: radar_server\n            x-symfony:\n                controller: App\\Controller\\RadarController::serverAction\n            description: Returns metadata about a given radar server\n            parameters:\n                -\n                    name: reportingHost\n                    in: query\n                    description: Show records from specific reporting host\n                    schema:\n                        type: string\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/stations:\n        get:\n            operationId: radar_stations\n            x-symfony:\n                controller: App\\Controller\\RadarController::stationsAction\n            description: Returns a list of radar stations\n            parameters:\n                -\n                    name: stationType\n                    in: query\n                    description: Limit results to a specific station type or types\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                            pattern: '^[A-Za-z0-9-]+$'\n                    style: form\n                    explode: false\n                -\n                    name: reportingHost\n                    in: query\n                    description: Show RDA and latency info from specific reporting host\n                    schema:\n                        type: string\n                -\n                    name: host\n                    in: query\n                    description: Show latency info from specific LDM host\n                    schema:\n                        type: string\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema: {}\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/stations/{stationId}:\n        parameters:\n            -\n                name: stationId\n                in: path\n                required: true\n                description: Radar station ID\n                schema:\n                    type: string\n        get:\n            operationId: radar_station\n            x-symfony:\n                controller: App\\Controller\\RadarController::stationAction\n            description: Returns metadata about a given radar station\n            parameters:\n                -\n                    name: reportingHost\n                    in: query\n                    description: Show RDA and latency info from specific reporting host\n                    schema:\n                        type: string\n                -\n                    name: host\n                    in: query\n                    description: Show latency info from specific LDM host\n                    schema:\n                        type: string\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema: {}\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/stations/{stationId}/alarms:\n        parameters:\n            -\n                name: stationId\n                in: path\n                required: true\n                description: Radar station ID\n                schema:\n                    type: string\n        get:\n            operationId: radar_station_alarms\n            x-symfony:\n                controller: App\\Controller\\RadarController::stationAlarmsAction\n            description: Returns metadata about a given radar station alarms\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/queues/{host}:\n        parameters:\n            -\n                name: host\n                in: path\n                required: true\n                description: LDM host\n                schema:\n                    type: string\n        get:\n            operationId: radar_queue\n            x-symfony:\n                controller: App\\Controller\\RadarController::queueAction\n            description: Returns metadata about a given radar queue\n            parameters:\n                -\n                    name: limit\n                    in: query\n                    description: Record limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                        maximum: 500\n                -\n                    name: arrived\n                    in: query\n                    description: Range for arrival time\n                    schema:\n                        $ref: '#/components/schemas/ISO8601Interval'\n                -\n                    name: created\n                    in: query\n                    description: Range for creation time\n                    schema:\n                        $ref: '#/components/schemas/ISO8601Interval'\n                -\n                    name: published\n                    in: query\n                    description: Range for publish time\n                    schema:\n                        $ref: '#/components/schemas/ISO8601Interval'\n                -\n                    name: station\n                    in: query\n                    description: Station identifier\n                    schema:\n                        type: string\n                -\n                    name: type\n                    in: query\n                    description: Record type\n                    schema:\n                        type: string\n                -\n                    name: feed\n                    in: query\n                    description: Originating product feed\n                    schema:\n                        type: string\n                -\n                    name: resolution\n                    in: query\n                    description: Resolution version\n                    schema:\n                        type: integer\n                        minimum: 1\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /radar/profilers/{stationId}:\n        parameters:\n            -\n                name: stationId\n                in: path\n                required: true\n                description: Profiler station ID\n                schema:\n                    type: string\n        get:\n            operationId: radar_profiler\n            x-symfony:\n                controller: App\\Controller\\RadarController::profilerAction\n            description: Returns metadata about a given radar wind profiler\n            parameters:\n                -\n                    name: time\n                    in: query\n                    description: Time interval\n                    schema:\n                        $ref: '#/components/schemas/ISO8601Interval'\n                -\n                    name: interval\n                    in: query\n                    description: Averaging interval\n                    schema:\n                        $ref: '#/components/schemas/ISO8601Duration'\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema: {}\n                default:\n                    $ref: '#/components/responses/Error'\n    /products:\n        get:\n            operationId: products_query\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productListAction\n            description: Returns a list of text products\n            parameters:\n                -\n                    name: location\n                    in: query\n                    description: Location id\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                    style: form\n                    explode: false\n                -\n                    name: start\n                    in: query\n                    description: Start time\n                    schema:\n                        type: string\n                        format: date-time\n                -\n                    name: end\n                    in: query\n                    description: End time\n                    schema:\n                        type: string\n                        format: date-time\n                -\n                    name: office\n                    in: query\n                    description: Issuing office\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                            pattern: '^[A-Z]{4}$'\n                    style: form\n                    explode: false\n                -\n                    name: wmoid\n                    in: query\n                    description: WMO id code\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                            pattern: '^[A-Z]{4}\\d{2}$'\n                    style: form\n                    explode: false\n                -\n                    name: type\n                    in: query\n                    description: Product code\n                    schema:\n                        type: array\n                        items:\n                            type: string\n                            pattern: '^\\w{3}$'\n                    style: form\n                    explode: false\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                        maximum: 500\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/locations:\n        get:\n            operationId: product_locations\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productLocationsAction\n            description: Returns a list of valid text product issuance locations\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductLocationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/types:\n        get:\n            operationId: product_types\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productTypesAction\n            description: Returns a list of valid text product types and codes\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductTypeCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/{productId}:\n        parameters:\n            -\n                name: productId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n        get:\n            operationId: product\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productAction\n            description: Returns a specific text product\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProduct'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/types/{typeId}:\n        parameters:\n            -\n                name: typeId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n        get:\n            operationId: products_type\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productsByTypeAction\n            description: Returns a list of text products of a given type\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/types/{typeId}/locations:\n        parameters:\n            -\n                name: typeId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n        get:\n            operationId: products_type_locations\n            x-symfony:\n                controller: App\\Controller\\TextProductController::locationsWithProductTypeAction\n            description: >-\n                Returns a list of valid text product issuance locations for a given\n                product type\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductLocationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/locations/{locationId}/types:\n        parameters:\n            -\n                name: locationId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n        get:\n            operationId: location_products\n            x-symfony:\n                controller: App\\Controller\\TextProductController::locationProductsAction\n            description: Returns a list of valid text product types for a given issuance location\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductTypeCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /products/types/{typeId}/locations/{locationId}:\n        parameters:\n            -\n                name: typeId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n            -\n                name: locationId\n                in: path\n                required: true\n                description: .\n                schema:\n                    type: string\n        get:\n            operationId: products_type_location\n            x-symfony:\n                controller: App\\Controller\\TextProductController::productsByTypeAndLocationAction\n            description: >-\n                Returns a list of text products of a given type for a given issuance\n                location\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/TextProductCollection'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones:\n        get:\n            operationId: zone_list\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneListAction\n            description: Returns a list of zones\n            parameters:\n                -\n                    name: id\n                    in: query\n                    description: Zone ID (forecast or county)\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/NWSZoneID'\n                    style: form\n                    explode: false\n                -\n                    name: area\n                    in: query\n                    description: State/marine area code\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/AreaCode'\n                    style: form\n                    explode: false\n                -\n                    name: region\n                    in: query\n                    description: Region code\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/RegionCode'\n                    style: form\n                    explode: false\n                -\n                    name: type\n                    in: query\n                    description: Zone type\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/NWSZoneType'\n                    style: form\n                    explode: false\n                -\n                    name: point\n                    in: query\n                    description: Point (latitude,longitude)\n                    schema:\n                        $ref: '#/components/schemas/PointString'\n                -\n                    name: include_geometry\n                    in: query\n                    description: Include geometry in results (true/false)\n                    schema:\n                        type: boolean\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                -\n                    name: effective\n                    in: query\n                    description: Effective date/time\n                    schema:\n                        type: string\n                        format: date-time\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneCollectionGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneCollectionJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones/{type}:\n        parameters:\n            -\n                name: type\n                in: path\n                required: true\n                description: Zone type\n                schema:\n                    $ref: '#/components/schemas/NWSZoneType'\n        get:\n            operationId: zone_list_type\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneListAction\n            description: Returns a list of zones of a given type\n            parameters:\n                -\n                    name: id\n                    in: query\n                    description: Zone ID (forecast or county)\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/NWSZoneID'\n                    style: form\n                    explode: false\n                -\n                    name: area\n                    in: query\n                    description: State/marine area code\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/AreaCode'\n                    style: form\n                    explode: false\n                -\n                    name: region\n                    in: query\n                    description: Region code\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/RegionCode'\n                    style: form\n                    explode: false\n                -\n                    name: type\n                    in: query\n                    description: Zone type\n                    schema:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/NWSZoneType'\n                    style: form\n                    explode: false\n                -\n                    name: point\n                    in: query\n                    description: Point (latitude,longitude)\n                    schema:\n                        $ref: '#/components/schemas/PointString'\n                -\n                    name: include_geometry\n                    in: query\n                    description: Include geometry in results (true/false)\n                    schema:\n                        type: boolean\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                -\n                    name: effective\n                    in: query\n                    description: Effective date/time\n                    schema:\n                        type: string\n                        format: date-time\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneCollectionGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneCollectionJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones/{type}/{zoneId}:\n        parameters:\n            -\n                name: type\n                in: path\n                required: true\n                description: Zone type\n                schema:\n                    $ref: '#/components/schemas/NWSZoneType'\n            - $ref: '#/components/parameters/NWSZoneId'\n        get:\n            operationId: zone\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneAction\n            description: Returns metadata about a given zone\n            parameters:\n                -\n                    name: effective\n                    in: query\n                    description: Effective date/time\n                    schema:\n                        type: string\n                        format: date-time\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones/{type}/{zoneId}/forecast:\n        parameters:\n            -\n                name: type\n                in: path\n                required: true\n                description: Zone type\n                schema:\n                    type: string\n            - $ref: '#/components/parameters/NWSZoneId'\n        get:\n            operationId: zone_forecast\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneForecastAction\n            description: Returns the current zone forecast for a given zone\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneForecastGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ZoneForecastJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones/forecast/{zoneId}/observations:\n        parameters:\n            - $ref: '#/components/parameters/NWSZoneId'\n        get:\n            operationId: zone_obs\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneObservationsAction\n            description: Returns a list of observations for a given zone\n            parameters:\n                -\n                    name: start\n                    in: query\n                    description: Start date/time\n                    schema:\n                        type: string\n                        format: date-time\n                -\n                    name: end\n                    in: query\n                    description: End date/time\n                    schema:\n                        type: string\n                        format: date-time\n                -\n                    name: limit\n                    in: query\n                    description: Limit\n                    schema:\n                        type: integer\n                        minimum: 1\n                        maximum: 500\n            responses:\n                '200':\n                    description: success\n                    headers:\n                        X-Correlation-Id:\n                            $ref: '#/components/headers/CorrelationId'\n                        X-Request-Id:\n                            $ref: '#/components/headers/RequestId'\n                        X-Server-Id:\n                            $ref: '#/components/headers/ServerId'\n                    content:\n                        application/geo+json:\n                            schema:\n                                $ref: '#/components/schemas/ObservationCollectionGeoJson'\n                        application/ld+json:\n                            schema:\n                                $ref: '#/components/schemas/ObservationCollectionJsonLd'\n                default:\n                    $ref: '#/components/responses/Error'\n    /zones/forecast/{zoneId}/stations:\n        parameters:\n            - $ref: '#/components/parameters/NWSZoneId'\n        get:\n            operationId: zone_stations\n            x-symfony:\n                controller: App\\Controller\\ZoneController::zoneStationsAction\n            description: Returns a list of observation stations for a given zone\n            responses:\n                '200':\n                    $ref: '#/components/responses/ObservationStationCollection'\n                default:\n                    $ref: '#/components/responses/Error'\ncomponents:\n    schemas:\n        Alert:\n            description: >\n                An object representing a public alert message.\n\n                Unless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2\n                specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA\n                Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more\n                complete information.\n\n                http://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html\n                http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html\n                https://alerts.weather.gov/#technical-notes-v12\n            type: object\n            properties:\n                id:\n                    $ref: '#/components/schemas/AlertId'\n                areaDesc:\n                    description: A textual description of the area affected by the alert.\n                    type: string\n                geocode:\n                    description: Lists of codes for NWS public zones and counties affected by the alert.\n                    type: object\n                    properties:\n                        UGC:\n                            description: A list of NWS public zone or county identifiers.\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/NWSZoneID'\n                        SAME:\n                            description: A list of SAME (Specific Area Message Encoding) codes for affected counties.\n                            type: array\n                            items:\n                                type: string\n                                pattern: ^\\d{6}$\n                affectedZones:\n                    description: >\n                        An array of API links for zones affected by the alert. This is an API-specific extension field\n                        and is not part of the CAP specification.\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                references:\n                    description: A list of prior alerts that this alert updates or replaces.\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            '@id':\n                                description: An API link to the prior alert.\n                                type: string\n                                format: uri\n                            identifier:\n                                $ref: '#/components/schemas/AlertId'\n                            sender:\n                                description: The sender of the prior alert.\n                                type: string\n                            sent:\n                                description: The time the prior alert was sent.\n                                type: string\n                                format: date-time\n                sent:\n                    description: The time of the origination of the alert message.\n                    type: string\n                    format: date-time\n                effective:\n                    description: The effective time of the information of the alert message.\n                    type: string\n                    format: date-time\n                onset:\n                    description: The expected time of the beginning of the subject event of the alert message.\n                    type: string\n                    format: date-time\n                    nullable: true\n                expires:\n                    description: The expiry time of the information of the alert message.\n                    type: string\n                    format: date-time\n                ends:\n                    description: The expected end time of the subject event of the alert message.\n                    type: string\n                    format: date-time\n                    nullable: true\n                status:\n                    $ref: '#/components/schemas/AlertStatus'\n                messageType:\n                    $ref: '#/components/schemas/AlertMessageType'\n                category:\n                    description: The code denoting the category of the subject event of the alert message.\n                    type: string\n                    enum:\n                        - Met\n                        - Geo\n                        - Safety\n                        - Security\n                        - Rescue\n                        - Fire\n                        - Health\n                        - Env\n                        - Transport\n                        - Infra\n                        - CBRNE\n                        - Other\n                severity:\n                    $ref: '#/components/schemas/AlertSeverity'\n                certainty:\n                    $ref: '#/components/schemas/AlertCertainty'\n                urgency:\n                    $ref: '#/components/schemas/AlertUrgency'\n                event:\n                    description: The text denoting the type of the subject event of the alert message.\n                    type: string\n                sender:\n                    description: Email address of the NWS webmaster.\n                    type: string\n                senderName:\n                    description: The text naming the originator of the alert message.\n                    type: string\n                headline:\n                    description: The text headline of the alert message.\n                    type: string\n                    nullable: true\n                description:\n                    description: The text describing the subject event of the alert message.\n                    type: string\n                instruction:\n                    description: >\n                        The text describing the recommended action to be taken by recipients of the alert message.\n                    type: string\n                    nullable: true\n                response:\n                    description: >\n                        The code denoting the type of action recommended for the target audience.\n\n                        This corresponds to responseType in the CAP specification.\n                    type: string\n                    enum:\n                        - Shelter\n                        - Evacuate\n                        - Prepare\n                        - Execute\n                        - Avoid\n                        - Monitor\n                        - Assess\n                        - AllClear\n                        - None\n                parameters:\n                    description: >\n                        System-specific additional parameters associated with the alert message.\n\n                        The keys in this object correspond to parameter definitions in the NWS CAP specification.\n                    type: object\n                    additionalProperties:\n                        type: array\n                        items: {}\n        AlertCollection:\n            type: object\n            properties:\n                title:\n                    description: A title describing the alert collection\n                    type: string\n                updated:\n                    description: The last time a change occurred to this collection\n                    type: string\n                    format: date-time\n                pagination:\n                    description: Links for retrieving more data\n                    type: object\n                    properties:\n                        next:\n                            description: A link to the next set of alerts\n                            type: string\n                            format: uri\n                    required: [next]\n                    additionalProperties: false\n        AlertCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    properties:\n                                        $ref: '#/components/schemas/Alert'\n                - $ref: '#/components/schemas/AlertCollection'\n        AlertCollectionJsonLd:\n            allOf:\n                - $ref: '#/components/schemas/AlertCollection'\n                -\n                    type: object\n                    properties:\n                        '@context':\n                            $ref: '#/components/schemas/JsonLdContext'\n                        '@graph':\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/Alert'\n        AlertCap:\n            type: object\n        AlertGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Alert'\n        AlertJsonLd:\n            type: object\n            properties:\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Alert'\n        AlertId:\n            description: The identifier of the alert message.\n            type: string\n        AlertCertainty:\n            type: string\n            enum:\n                - Observed\n                - Likely\n                - Possible\n                - Unlikely\n                - Unknown\n        AlertMessageType:\n            type: string\n            enum:\n                - Alert\n                - Update\n                - Cancel\n                - Ack\n                - Error\n        AlertSeverity:\n            type: string\n            enum:\n                - Extreme\n                - Severe\n                - Moderate\n                - Minor\n                - Unknown\n        AlertStatus:\n            type: string\n            enum:\n                - Actual\n                - Exercise\n                - System\n                - Test\n                - Draft\n        AlertUrgency:\n            type: string\n            enum:\n                - Immediate\n                - Expected\n                - Future\n                - Past\n                - Unknown\n        AlertAtomEntry:\n            description: An alert entry in an Atom feed\n            type: object\n            xml:\n                name: entry\n                namespace: http://www.w3.org/2005/Atom\n            properties:\n                id:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                updated:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                published:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                author:\n                    type: object\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                    properties:\n                        name:\n                            type: string\n                summary:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                event:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                sent:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                effective:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                expires:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                status:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                msgType:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                category:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                urgency:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                severity:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                certainty:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                areaDesc:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                polygon:\n                    type: string\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                geocode:\n                    type: array\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                    items:\n                        $ref: '#/components/schemas/AlertXMLParameter'\n                parameter:\n                    type: array\n                    xml:\n                        namespace: urn:oasis:names:tc:emergency:cap:1.2\n                    items:\n                        $ref: '#/components/schemas/AlertXMLParameter'\n        AlertXMLParameter:\n            type: object\n            properties:\n                valueName:\n                    type: string\n                value:\n                    type: string\n        AlertAtomFeed:\n            description: An alert feed in Atom format\n            type: object\n            xml:\n                name: feed\n                namespace: http://www.w3.org/2005/Atom\n            properties:\n                id:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                generator:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                updated:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                author:\n                    type: object\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                    properties:\n                        name:\n                            type: string\n                            xml:\n                                namespace: http://www.w3.org/2005/Atom\n                title:\n                    type: string\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                entry:\n                    type: array\n                    xml:\n                        namespace: http://www.w3.org/2005/Atom\n                    items:\n                        $ref: '#/components/schemas/AlertAtomEntry'\n        AreaCode:\n            description: State/territory codes and marine area codes\n            oneOf:\n                - $ref: '#/components/schemas/StateTerritoryCode'\n                - $ref: '#/components/schemas/MarineAreaCode'\n        BinaryFile:\n            type: string\n            format: binary\n        CenterWeatherAdvisoryCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    properties:\n                                        $ref: '#/components/schemas/CenterWeatherAdvisory'\n        CenterWeatherAdvisoryGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/CenterWeatherAdvisory'\n        CenterWeatherAdvisory:\n            type: object\n            properties:\n                id:\n                    type: string\n                issueTime:\n                    type: string\n                    format: date-time\n                cwsu:\n                    $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'\n                sequence:\n                    type: integer\n                    minimum: 101\n                start:\n                    type: string\n                    format: date-time\n                end:\n                    type: string\n                    format: date-time\n                observedProperty:\n                    type: string\n                text:\n                    type: string\n            additionalProperties: false\n        CenterWeatherServiceUnitJsonLd:\n            - $ref: '#/components/schemas/Office'\n        Date:\n            description: Date (in YYYY-MM-DD format).\n            type: string\n            format: date\n        FIRIdentifier:\n            description: FIR Identifier\n            type: string\n            pattern: '^[A-Z]{4}$'\n        GeometryString:\n            description: A geometry represented in Well-Known Text (WKT) format.\n            type: string\n            format: wkt\n            nullable: true\n        GeoJsonBoundingBox:\n            description: A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: array\n            minItems: 4\n            items:\n                type: number\n        GeoJsonCoordinate:\n            description: A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: array\n            minItems: 2\n            items:\n                type: number\n        GeoJsonGeometry:\n            description: A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            nullable: true\n            oneOf:\n                -\n                    title: GeoJSON Point\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [Point]\n                        coordinates:\n                            $ref: '#/components/schemas/GeoJsonCoordinate'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n                -\n                    title: GeoJSON LineString\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [LineString]\n                        coordinates:\n                            $ref: '#/components/schemas/GeoJsonLineString'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n                -\n                    title: GeoJSON Polygon\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [Polygon]\n                        coordinates:\n                            $ref: '#/components/schemas/GeoJsonPolygon'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n                -\n                    title: GeoJSON MultiPoint\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [MultiPoint]\n                        coordinates:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/GeoJsonCoordinate'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n                -\n                    title: GeoJSON MultiLineString\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [MultiLineString]\n                        coordinates:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/GeoJsonLineString'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n                -\n                    title: GeoJSON MultiPolygon\n                    type: object\n                    required: [type, coordinates]\n                    properties:\n                        type:\n                            type: string\n                            enum: [MultiPolygon]\n                        coordinates:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/GeoJsonPolygon'\n                        bbox:\n                            $ref: '#/components/schemas/GeoJsonBoundingBox'\n        GeoJsonFeature:\n            description: A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                'id':\n                    type: string\n                    format: uri\n                type:\n                    type: string\n                    enum: [Feature]\n                geometry:\n                    $ref: '#/components/schemas/GeoJsonGeometry'\n                properties:\n                    type: object\n            required: [type, geometry, properties]\n            additionalProperties: false\n        GeoJsonFeatureCollection:\n            description: A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                type:\n                    type: string\n                    enum: [FeatureCollection]\n                features:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GeoJsonFeature'\n            required: [type, features]\n        GeoJsonLineString:\n            description: A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: array\n            minItems: 2\n            items:\n                $ref: '#/components/schemas/GeoJsonCoordinate'\n        GeoJsonPolygon:\n            description: A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format.\n            type: array\n            items:\n                type: array\n                minItems: 4\n                items:\n                    $ref: '#/components/schemas/GeoJsonCoordinate'\n        Gridpoint:\n            description: >\n                Raw forecast data for a 2.5km grid square.\n\n                This is a list of all potential data layers that may appear. Some layers may not be present in all\n                areas.\n\n                * temperature\n\n                * dewpoint\n\n                * maxTemperature\n\n                * minTemperature\n\n                * relativeHumidity\n\n                * apparentTemperature\n\n                * heatIndex\n\n                * windChill\n\n                * skyCover\n\n                * windDirection\n\n                * windSpeed\n\n                * windGust\n\n                * weather\n\n                * hazards: Watch and advisory products in effect\n\n                * probabilityOfPrecipitation\n\n                * quantitativePrecipitation\n\n                * iceAccumulation\n\n                * snowfallAmount\n\n                * snowLevel\n\n                * ceilingHeight\n\n                * visibility\n\n                * transportWindSpeed\n\n                * transportWindDirection\n\n                * mixingHeight\n\n                * hainesIndex\n\n                * lightningActivityLevel\n\n                * twentyFootWindSpeed\n\n                * twentyFootWindDirection\n\n                * waveHeight\n\n                * wavePeriod\n\n                * waveDirection\n\n                * primarySwellHeight\n\n                * primarySwellDirection\n\n                * secondarySwellHeight\n\n                * secondarySwellDirection\n\n                * wavePeriod2\n\n                * windWaveHeight\n\n                * dispersionIndex\n\n                * pressure: Barometric pressure\n\n                * probabilityOfTropicalStormWinds\n\n                * probabilityOfHurricaneWinds\n\n                * potentialOf15mphWinds\n\n                * potentialOf25mphWinds\n\n                * potentialOf35mphWinds\n\n                * potentialOf45mphWinds\n\n                * potentialOf20mphWindGusts\n\n                * potentialOf30mphWindGusts\n\n                * potentialOf40mphWindGusts\n\n                * potentialOf50mphWindGusts\n\n                * potentialOf60mphWindGusts\n\n                * grasslandFireDangerIndex\n\n                * probabilityOfThunder\n\n                * davisStabilityIndex\n\n                * atmosphericDispersionIndex\n\n                * lowVisibilityOccurrenceRiskIndex\n\n                * stability\n\n                * redFlagThreatIndex\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                '@id':\n                    type: string\n                    format: uri\n                '@type':\n                    type: string\n                    enum: ['wx:Gridpoint']\n                updateTime:\n                    type: string\n                    format: date-time\n                validTimes:\n                    $ref: '#/components/schemas/ISO8601Interval'\n                elevation:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                forecastOffice:\n                    type: string\n                    format: uri\n                gridId:\n                    type: string\n                gridX:\n                    type: integer\n                    minimum: 0\n                gridY:\n                    type: integer\n                    minimum: 0\n                weather:\n                    type: object\n                    properties:\n                        values:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    validTime:\n                                        $ref: '#/components/schemas/ISO8601Interval'\n                                    value:\n                                        type: array\n                                        items:\n                                            description: A value object representing expected weather phenomena.\n                                            type: object\n                                            properties:\n                                                coverage:\n                                                    type: string\n                                                    enum:\n                                                        - areas\n                                                        - brief\n                                                        - chance\n                                                        - definite\n                                                        - few\n                                                        - frequent\n                                                        - intermittent\n                                                        - isolated\n                                                        - likely\n                                                        - numerous\n                                                        - occasional\n                                                        - patchy\n                                                        - periods\n                                                        - scattered\n                                                        - slight_chance\n                                                        - widespread\n                                                    nullable: true\n                                                weather:\n                                                    type: string\n                                                    enum:\n                                                        - blowing_dust\n                                                        - blowing_sand\n                                                        - blowing_snow\n                                                        - drizzle\n                                                        - fog\n                                                        - freezing_fog\n                                                        - freezing_drizzle\n                                                        - freezing_rain\n                                                        - freezing_spray\n                                                        - frost\n                                                        - hail\n                                                        - haze\n                                                        - ice_crystals\n                                                        - ice_fog\n                                                        - rain\n                                                        - rain_showers\n                                                        - sleet\n                                                        - smoke\n                                                        - snow\n                                                        - snow_showers\n                                                        - thunderstorms\n                                                        - volcanic_ash\n                                                        - water_spouts\n                                                    nullable: true\n                                                intensity:\n                                                    type: string\n                                                    enum:\n                                                        - very_light\n                                                        - light\n                                                        - moderate\n                                                        - heavy\n                                                    nullable: true\n                                                visibility:\n                                                    $ref: '#/components/schemas/QuantitativeValue'\n                                                attributes:\n                                                    type: array\n                                                    items:\n                                                        type: string\n                                                        enum:\n                                                            - damaging_wind\n                                                            - dry_thunderstorms\n                                                            - flooding\n                                                            - gusty_wind\n                                                            - heavy_rain\n                                                            - large_hail\n                                                            - small_hail\n                                                            - tornadoes\n                                            required: [coverage, weather, intensity, visibility, attributes]\n                                            additionalProperties: false\n                                required: [validTime, value]\n                                additionalProperties: false\n                    required: [values]\n                hazards:\n                    type: object\n                    properties:\n                        values:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    validTime:\n                                        $ref: '#/components/schemas/ISO8601Interval'\n                                    value:\n                                        type: array\n                                        items:\n                                            description: A value object representing an expected hazard.\n                                            type: object\n                                            properties:\n                                                phenomenon:\n                                                    description: >\n                                                        Hazard code. This value will correspond to a P-VTEC phenomenon\n                                                        code as defined in NWS Directive 10-1703.\n                                                    type: string\n                                                    pattern: ^\\w{2}$\n                                                significance:\n                                                    description: >\n                                                        Significance code. This value will correspond to a P-VTEC\n                                                        significance code as defined in NWS Directive 10-1703.\n\n                                                        This will most frequently be \"A\" for a watch or \"Y\" for an\n                                                        advisory.\n                                                    type: string\n                                                    pattern: ^\\w$\n                                                event_number:\n                                                    description: >\n                                                        Event number. If this hazard refers to a national or regional\n                                                        center product (such as a Storm Prediction Center convective\n                                                        watch), this value will be the sequence number of that product.\n                                                    type: integer\n                                                    nullable: true\n                                            required: [phenomenon, significance, event_number]\n                                required: [validTime, value]\n                                additionalProperties: false\n                    required: [values]\n            additionalProperties:\n                $ref: '#/components/schemas/GridpointQuantitativeValueLayer'\n        GridpointQuantitativeValueLayer:\n            description: >\n                A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).\n            type: object\n            properties:\n                uom:\n                    $ref: '#/components/schemas/UnitOfMeasure'\n                values:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            validTime:\n                                $ref: '#/components/schemas/ISO8601Interval'\n                            value:\n                                type: number\n                                nullable: true\n                        required: [validTime, value]\n                        additionalProperties: false\n            required: [values]\n        GridpointGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Gridpoint'\n        GridpointJsonLd:\n            $ref: '#/components/schemas/Gridpoint'\n        GridpointForecast:\n            description: A multi-day forecast for a 2.5km grid square.\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                units:\n                    $ref: '#/components/schemas/GridpointForecastUnits'\n                forecastGenerator:\n                    description: The internal generator class used to create the forecast text (used for NWS debugging).\n                    type: string\n                generatedAt:\n                    description: The time this forecast data was generated.\n                    type: string\n                    format: date-time\n                updateTime:\n                    description: The last update time of the data this forecast was generated from.\n                    type: string\n                    format: date-time\n                updated:\n                    description: This property is deprecated (use updateTime instead).\n                    deprecated: true\n                    type: string\n                    format: date-time\n                validTimes:\n                    $ref: '#/components/schemas/ISO8601Interval'\n                elevation:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                periods:\n                    description: An array of forecast periods.\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GridpointForecastPeriod'\n            additionalProperties: false\n        GridpointForecastPeriod:\n            description: >\n                An object containing forecast information for a specific time period (generally 12-hour or 1-hour).\n            type: object\n            properties:\n                number:\n                    description: Sequential period number.\n                    type: integer\n                    minimum: 1\n                name:\n                    description: >\n                        A textual identifier for the period. This value will not be present for hourly forecasts.\n                    type: string\n                    example: Tuesday Night\n                startTime:\n                    description: The starting time that this forecast period is valid for.\n                    type: string\n                    format: date-time\n                endTime:\n                    description: The ending time that this forecast period is valid for.\n                    type: string\n                    format: date-time\n                isDaytime:\n                    description: Indicates whether this period is daytime or nighttime.\n                    type: boolean\n                temperature:\n                    description: >\n                        High/low temperature for the period, depending on whether the period is day or night.\n\n                        This property as an integer value is deprecated. Future versions will express this value as a\n                        quantitative value object. To make use of the future standard format now, set the\n                        \"forecast_temperature_qv\" feature flag on the request.\n                    oneOf:\n                        - $ref: '#/components/schemas/QuantitativeValue'\n                        - type: integer\n                temperatureUnit:\n                    description: >\n                        The unit of the temperature value (Fahrenheit or Celsius).\n\n                        This property is deprecated. Future versions will indicate the unit within the quantitative\n                        value object for the temperature property. To make use of the future standard format now, set\n                        the \"forecast_temperature_qv\" feature flag on the request.\n                    type: string\n                    deprecated: true\n                    enum:\n                        - F\n                        - C\n                temperatureTrend:\n                    description: >\n                        If not null, indicates a non-diurnal temperature trend for the period (either rising\n                        temperature overnight, or falling temperature during the day)\n                    type: string\n                    enum:\n                        - rising\n                        - falling\n                    nullable: true\n                windSpeed:\n                    description: >\n                        Wind speed for the period.\n\n                        This property as an string value is deprecated. Future versions will express this value as a\n                        quantitative value object. To make use of the future standard format now, set the\n                        \"forecast_wind_speed_qv\" feature flag on the request.\n                    oneOf:\n                        - $ref: '#/components/schemas/QuantitativeValue'\n                        - type: string\n                windGust:\n                    description: >\n                        Peak wind gust for the period.\n\n                        This property as an string value is deprecated. Future versions will express this value as a\n                        quantitative value object. To make use of the future standard format now, set the\n                        \"forecast_wind_speed_qv\" feature flag on the request.\n                    oneOf:\n                        - $ref: '#/components/schemas/QuantitativeValue'\n                        - type: string\n                    nullable: true\n                windDirection:\n                    description: The prevailing direction of the wind for the period, using a 16-point compass.\n                    type: string\n                    enum: [N, NNE, NE, ENE, E, ESE, SE, SSE, S, SSW, SW, WSW, W, WNW, NW, NNW]\n                icon:\n                    description: A link to an icon representing the forecast summary.\n                    deprecated: true\n                    type: string\n                    format: uri\n                shortForecast:\n                    description: A brief textual forecast summary for the period.\n                    type: string\n                detailedForecast:\n                    description: A detailed textual forecast for the period.\n                    type: string\n            additionalProperties: false\n        GridpointForecastUnits:\n            description: Denotes the units used in the textual portions of the forecast.\n            type: string\n            enum:\n                - us\n                - si\n            default: us\n        GridpointForecastGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/GridpointForecast'\n        GridpointForecastJsonLd:\n            allOf:\n                - $ref: '#/components/schemas/GridpointForecast'\n                -\n                    type: object\n                    properties:\n                        '@context':\n                            $ref: '#/components/schemas/JsonLdContext'\n                        geometry:\n                            $ref: '#/components/schemas/GeometryString'\n                    required: ['@context', geometry]\n        ISO8601Duration:\n            description: A time duration in ISO 8601 format.\n            type: string\n            pattern: ^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$\n            example: P2DT12H\n        ISO8601Interval:\n            description: >\n                A time interval in ISO 8601 format. This can be one of:\n\n                    1. Start and end time\n                    2. Start time and duration\n                    3. Duration and end time\n\n                The string \"NOW\" can also be used in place of a start/end time.\n            oneOf:\n                -\n                    type: string\n                    pattern: ^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$\n                    example: 2007-03-01T13:00:00Z/2008-05-11T15:30:00Z\n                -\n                    type: string\n                    pattern: ^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\/P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$\n                    example: 2007-03-01T13:00:00Z/P1Y2M10DT2H30M\n                -\n                    type: string\n                    pattern: ^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$\n                    example: P1Y2M10DT2H30M/2008-05-11T15:30:00Z\n        JsonLdContext:\n            anyOf:\n                - type: array\n                - type: object\n        LandRegionCode:\n            description: >\n                Land region code. These correspond to the six NWS regional headquarters:\n\n                * AR: Alaska Region\n\n                * CR: Central Region\n\n                * ER: Eastern Region\n\n                * PR: Pacific Region\n\n                * SR: Southern Region\n\n                * WR: Western Region\n            type: string\n            enum:\n                - AR\n                - CR\n                - ER\n                - PR\n                - SR\n                - WR\n        MarineAreaCode:\n            description: >\n                Marine area code as defined in NWS Directive 10-302:\n\n                * AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean\n\n                * AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC\n\n                * GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL\n\n                * LC: Lake St. Clair\n\n                * LE: Lake Erie\n\n                * LH: Lake Huron\n\n                * LM: Lake Michigan\n\n                * LO: Lake Ontario\n\n                * LS: Lake Superior\n\n                * PH: Central Pacific Ocean including Hawaiian waters\n\n                * PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska\n\n                * PM: Western Pacific Ocean including Mariana Island waters\n\n                * PS: South Central Pacific Ocean including American Samoa waters\n\n                * PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border\n\n                * SL: St. Lawrence River above St. Regis\n            type: string\n            enum:\n                - AM\n                - AN\n                - GM\n                - LC\n                - LE\n                - LH\n                - LM\n                - LO\n                - LS\n                - PH\n                - PK\n                - PM\n                - PS\n                - PZ\n                - SL\n        MarineRegionCode:\n            description: >\n                Marine region code. These are groups of marine areas combined.\n\n                * AL: Alaska waters (PK)\n\n                * AT: Atlantic Ocean (AM, AN)\n\n                * GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)\n\n                * GM: Gulf of Mexico (GM)\n\n                * PA: Eastern Pacific Ocean and U.S. West Coast (PZ)\n\n                * PI: Central and Western Pacific (PH, PM, PS)\n            type: string\n            enum:\n                - AL\n                - AT\n                - GL\n                - GM\n                - PA\n                - PI\n        MetarPhenomenon:\n            description: An object representing a decoded METAR phenomenon string.\n            type: object\n            properties:\n                intensity:\n                    type: string\n                    enum:\n                        - light\n                        - heavy\n                    nullable: true\n                modifier:\n                    type: string\n                    enum:\n                        - patches\n                        - blowing\n                        - low_drifting\n                        - freezing\n                        - shallow\n                        - partial\n                        - showers\n                    nullable: true\n                weather:\n                    type: string\n                    enum:\n                        - fog_mist\n                        - dust_storm\n                        - dust\n                        - drizzle\n                        - funnel_cloud\n                        - fog\n                        - smoke\n                        - hail\n                        - snow_pellets\n                        - haze\n                        - ice_crystals\n                        - ice_pellets\n                        - dust_whirls\n                        - spray\n                        - rain\n                        - sand\n                        - snow_grains\n                        - snow\n                        - squalls\n                        - sand_storm\n                        - thunderstorms\n                        - unknown\n                        - volcanic_ash\n                rawString:\n                    type: string\n                inVicinity:\n                    type: boolean\n            required: [intensity, modifier, weather, rawString]\n            additionalProperties: false\n        MetarSkyCoverage:\n            type: string\n            enum:\n                - OVC\n                - BKN\n                - SCT\n                - FEW\n                - SKC\n                - CLR\n                - VV\n        NWSCenterWeatherServiceUnitId:\n            description: Three-letter identifier for a Center Weather Service Unit (CWSU).\n            type: string\n            enum:\n                - ZAB\n                - ZAN\n                - ZAU\n                - ZBW\n                - ZDC\n                - ZDV\n                - ZFA\n                - ZFW\n                - ZHU\n                - ZID\n                - ZJX\n                - ZKC\n                - ZLA\n                - ZLC\n                - ZMA\n                - ZME\n                - ZMP\n                - ZNY\n                - ZOA\n                - ZOB\n                - ZSE\n                - ZTL\n        NWSForecastOfficeId:\n            description: Three-letter identifier for a NWS office.\n            type: string\n            enum:\n                # Eastern Region\n                - AKQ\n                - ALY\n                - BGM\n                - BOX\n                - BTV\n                - BUF\n                - CAE\n                - CAR\n                - CHS\n                - CLE\n                - CTP\n                - GSP\n                - GYX\n                - ILM\n                - ILN\n                - LWX\n                - MHX\n                - OKX\n                - PBZ\n                - PHI\n                - RAH\n                - RLX\n                - RNK\n                # Southern Region\n                - ABQ\n                - AMA\n                - BMX\n                - BRO\n                - CRP\n                - EPZ\n                - EWX\n                - FFC\n                - FWD\n                - HGX\n                - HUN\n                - JAN\n                - JAX\n                - KEY\n                - LCH\n                - LIX\n                - LUB\n                - LZK\n                - MAF\n                - MEG\n                - MFL\n                - MLB\n                - MOB\n                - MRX\n                - OHX\n                - OUN\n                - SHV\n                - SJT\n                - SJU\n                - TAE\n                - TBW\n                - TSA\n                # Central Region\n                - ABR\n                - APX\n                - ARX\n                - BIS\n                - BOU\n                - CYS\n                - DDC\n                - DLH\n                - DMX\n                - DTX\n                - DVN\n                - EAX\n                - FGF\n                - FSD\n                - GID\n                - GJT\n                - GLD\n                - GRB\n                - GRR\n                - ICT\n                - ILX\n                - IND\n                - IWX\n                - JKL\n                - LBF\n                - LMK\n                - LOT\n                - LSX\n                - MKX\n                - MPX\n                - MQT\n                - OAX\n                - PAH\n                - PUB\n                - RIW\n                - SGF\n                - TOP\n                - UNR\n                # Western Region\n                - BOI\n                - BYZ\n                - EKA\n                - FGZ\n                - GGW\n                - HNX\n                - LKN\n                - LOX\n                - MFR\n                - MSO\n                - MTR\n                - OTX\n                - PDT\n                - PIH\n                - PQR\n                - PSR\n                - REV\n                - SEW\n                - SGX\n                - SLC\n                - STO\n                - TFX\n                - TWC\n                - VEF\n                # Alaska Region\n                - AER\n                - AFC\n                - AFG\n                - AJK\n                - ALU\n                # Pacific Region\n                - GUM\n                - HPA\n                - HFO\n                - PPG\n                - STU\n                # National Line Offices\n                - NH1\n                - NH2\n                - ONA\n                - ONP\n        NWSNationalHQId:\n            description: Three-letter identifier for NWS National HQ.\n            type: string\n            enum:\n                - NWS\n        NWSOfficeId:\n            oneOf:\n                - $ref: '#/components/schemas/NWSForecastOfficeId'\n                - $ref: '#/components/schemas/NWSRegionalHQId'\n                - $ref: '#/components/schemas/NWSNationalHQId'\n        NWSRegionalHQId:\n            description: Three-letter identifier for a NWS Regional HQ.\n            type: string\n            enum:\n                - ARH\n                - CRH\n                - ERH\n                - PRH\n                - SRH\n                - WRH\n        NWSZoneID:\n            description: >\n                UGC identifier for a NWS forecast zone or county.\n\n                The first two letters will correspond to either a state code or marine area code (see\n                #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid\n                letter combinations).\n\n                The third letter will be Z for public/fire zone or C for county.\n            type: string\n            pattern: ^(A[KLMNRSZ]|C[AOT]|D[CE]|FL|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\d{3}$\n        NWSZoneType:\n            type: string\n            enum:\n                - land\n                - marine\n                - forecast\n                - public\n                - coastal\n                - offshore\n                - fire\n                - county\n        Observation:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                '@id':\n                    type: string\n                    format: uri\n                '@type':\n                    type: string\n                    enum: ['wx:ObservationStation']\n                elevation:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                station:\n                    type: string\n                    format: uri\n                timestamp:\n                    type: string\n                    format: date-time\n                rawMessage:\n                    type: string\n                textDescription:\n                    type: string\n                icon:\n                    type: string\n                    format: uri\n                    deprecated: true\n                presentWeather:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/MetarPhenomenon'\n                temperature:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                dewpoint:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                windDirection:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                windSpeed:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                windGust:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                barometricPressure:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                seaLevelPressure:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                visibility:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                maxTemperatureLast24Hours:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                minTemperatureLast24Hours:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                precipitationLastHour:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                precipitationLast3Hours:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                precipitationLast6Hours:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                relativeHumidity:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                windChill:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                heatIndex:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                cloudLayers:\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            base:\n                                $ref: '#/components/schemas/QuantitativeValue'\n                            amount:\n                                $ref: '#/components/schemas/MetarSkyCoverage'\n                        required: [base, amount]\n                        additionalProperties: false\n            additionalProperties: false\n        ObservationGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Observation'\n        ObservationJsonLd:\n            $ref: '#/components/schemas/Observation'\n        ObservationCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    properties:\n                                        $ref: '#/components/schemas/Observation'\n        ObservationCollectionJsonLd:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Observation'\n            additionalProperties: false\n        ObservationStation:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                '@id':\n                    type: string\n                    format: uri\n                '@type':\n                    type: string\n                    enum: ['wx:ObservationStation']\n                elevation:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                stationIdentifier:\n                    type: string\n                name:\n                    type: string\n                timeZone:\n                    type: string\n                    format: iana-time-zone-identifier\n                forecast:\n                    description: A link to the NWS public forecast zone containing this station.\n                    type: string\n                    format: uri\n                county:\n                    description: A link to the NWS county zone containing this station.\n                    type: string\n                    format: uri\n                fireWeatherZone:\n                    description: A link to the NWS fire weather forecast zone containing this station.\n                    type: string\n                    format: uri\n            additionalProperties: false\n        ObservationStationGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/ObservationStation'\n        ObservationStationJsonLd:\n            allOf:\n                - $ref: '#/components/schemas/ObservationStation'\n                -\n                    type: object\n                    properties:\n                        '@context':\n                            $ref: '#/components/schemas/JsonLdContext'\n                        geometry:\n                            $ref: '#/components/schemas/GeometryString'\n                    required: ['@context', geometry]\n        ObservationStationCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    properties:\n                                        $ref: '#/components/schemas/ObservationStation'\n                        observationStations:\n                            type: array\n                            items:\n                                type: string\n                                format: uri\n        ObservationStationCollectionJsonLd:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ObservationStation'\n                observationStations:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n            additionalProperties: false\n        Office:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@type':\n                    type: string\n                    enum: [GovernmentOrganization]\n                '@id':\n                    type: string\n                    format: uri\n                id:\n                    type: string\n                name:\n                    type: string\n                address:\n                    type: object\n                    properties:\n                        '@type':\n                            type: string\n                            enum: [PostalAddress]\n                        streetAddress:\n                            type: string\n                        addressLocality:\n                            type: string\n                        addressRegion:\n                            type: string\n                        postalCode:\n                            type: string\n                    additionalProperties: false\n                telephone:\n                    type: string\n                faxNumber:\n                    type: string\n                email:\n                    type: string\n                sameAs:\n                    type: string\n                    format: uri\n                nwsRegion:\n                    type: string\n                parentOrganization:\n                    type: string\n                    format: uri\n                responsibleCounties:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                responsibleForecastZones:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                responsibleFireZones:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                approvedObservationStations:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n            additionalProperties: false\n        OfficeHeadline:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@id':\n                    type: string\n                    format: uri\n                id:\n                    type: string\n                office:\n                    type: string\n                    format: uri\n                important:\n                    type: boolean\n                issuanceTime:\n                    type: string\n                    format: date-time\n                link:\n                    type: string\n                    format: uri\n                name:\n                    type: string\n                title:\n                    type: string\n                summary:\n                    type: string\n                    nullable: true\n                content:\n                    type: string\n        OfficeHeadlineCollection:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/OfficeHeadline'\n            required: ['@context', '@graph']\n            additionalProperties: false\n        Point:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                '@id':\n                    type: string\n                    format: uri\n                '@type':\n                    type: string\n                    enum: ['wx:Point']\n                cwa:\n                    $ref: '#/components/schemas/NWSForecastOfficeId'\n                forecastOffice:\n                    type: string\n                    format: uri\n                gridId:\n                    $ref: '#/components/schemas/NWSForecastOfficeId'\n                gridX:\n                    type: integer\n                    minimum: 0\n                gridY:\n                    type: integer\n                    minimum: 0\n                forecast:\n                    type: string\n                    format: uri\n                forecastHourly:\n                    type: string\n                    format: uri\n                forecastGridData:\n                    type: string\n                    format: uri\n                observationStations:\n                    type: string\n                    format: uri\n                relativeLocation:\n                    oneOf:\n                        - $ref: '#/components/schemas/RelativeLocationGeoJson'\n                        - $ref: '#/components/schemas/RelativeLocationJsonLd'\n                forecastZone:\n                    type: string\n                    format: uri\n                county:\n                    type: string\n                    format: uri\n                fireWeatherZone:\n                    type: string\n                    format: uri\n                timeZone:\n                    type: string\n                radarStation:\n                    type: string\n        PointGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Point'\n        PointJsonLd:\n            allOf:\n                - $ref: '#/components/schemas/Point'\n                -\n                    type: object\n                    properties:\n                        '@context':\n                            $ref: '#/components/schemas/JsonLdContext'\n                        geometry:\n                            $ref: '#/components/schemas/GeometryString'\n                    required: ['@context', geometry]\n        PointString:\n            type: string\n            pattern: ^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$\n        ProblemDetail:\n            description: Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).\n            type: object\n            properties:\n                type:\n                    type: string\n                    format: uri\n                    default: about:blank\n                    description: >\n                        A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is\n                        not necessarily a resolvable URL.\n                    example: urn:noaa:nws:api:UnexpectedProblem\n                title:\n                    type: string\n                    description: A short, human-readable summary of the problem type.\n                    example: Unexpected Problem\n                status:\n                    type: number\n                    minimum: 100\n                    maximum: 999\n                    description: >\n                        The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence\n                        of the problem.\n                    example: 500\n                detail:\n                    type: string\n                    description: A human-readable explanation specific to this occurrence of the problem.\n                    example: An unexpected problem has occurred.\n                instance:\n                    type: string\n                    format: uri\n                    description: >\n                        A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only\n                        an identifier and is not necessarily a resolvable URL.\n                    example: urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63\n                correlationId:\n                    type: string\n                    description: >\n                        A unique identifier for the request, used for NWS debugging purposes. Please include this\n                        identifier with any correspondence to help us investigate your issue.\n                    example: 493c3a1d-f87e-407f-ae2c-24483f5aab63\n            required:\n                - type\n                - title\n                - status\n                - detail\n                - instance\n                - correlationId\n            additionalProperties: true\n        QuantitativeValue:\n            description: >\n                A structured value representing a measurement and its unit of measure. This object is a slighly\n                modified version of the schema.org definition at https://schema.org/QuantitativeValue\n            type: object\n            properties:\n                value:\n                    description: A measured value\n                    type: number\n                    nullable: true\n                maxValue:\n                    description: The maximum value of a range of measured values\n                    type: number\n                minValue:\n                    description: The minimum value of a range of measured values\n                    type: number\n                unitCode:\n                    $ref: '#/components/schemas/UnitOfMeasure'\n                qualityControl:\n                    description: >\n                        For values in observation records, the quality control flag from the MADIS system. The\n                        definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml\n                    type: string\n                    enum: [Z,C,S,V,X,Q,G,B,T]\n            additionalProperties: false\n        RegionCode:\n            oneOf:\n                - $ref: '#/components/schemas/LandRegionCode'\n                - $ref: '#/components/schemas/MarineRegionCode'\n        RelativeLocation:\n            type: object\n            properties:\n                city:\n                    type: string\n                state:\n                    type: string\n                distance:\n                    $ref: '#/components/schemas/QuantitativeValue'\n                bearing:\n                    $ref: '#/components/schemas/QuantitativeValue'\n        RelativeLocationGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/RelativeLocation'\n        RelativeLocationJsonLd:\n            allOf:\n                - $ref: '#/components/schemas/RelativeLocation'\n                -\n                    type: object\n                    properties:\n                        geometry:\n                            $ref: '#/components/schemas/GeometryString'\n                    required: [geometry]\n        Sigmet:\n            type: object\n            properties:\n                id:\n                    type: string\n                    format: uri\n                issueTime:\n                    type: string\n                    format: date-time\n                fir:\n                    $ref: '#/components/schemas/FIRIdentifier'\n                sequence:\n                    type: string\n                phenomenon:\n                    type: string\n                    format: uri\n                    nullable: true\n                start:\n                    type: string\n                    format: date-time\n                end:\n                    type: string\n                    format: date-time\n            additionalProperties: false\n        SigmetCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                $ref: '#/components/schemas/SigmetGeoJson'\n        SigmetGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Sigmet'\n        SigmetSequenceNumber:\n            type: string\n        StateTerritoryCode:\n            type: string\n            enum:\n                - AL\n                - AK\n                - AS\n                - AR\n                - AZ\n                - CA\n                - CO\n                - CT\n                - DE\n                - DC\n                - FL\n                - GA\n                - GU\n                - HI\n                - ID\n                - IL\n                - IN\n                - IA\n                - KS\n                - KY\n                - LA\n                - ME\n                - MD\n                - MA\n                - MI\n                - MN\n                - MS\n                - MO\n                - MT\n                - NE\n                - NV\n                - NH\n                - NJ\n                - NM\n                - NY\n                - NC\n                - ND\n                - OH\n                - OK\n                - OR\n                - PA\n                - PR\n                - RI\n                - SC\n                - SD\n                - TN\n                - TX\n                - UT\n                - VT\n                - VI\n                - VA\n                - WA\n                - WV\n                - WI\n                - WY\n        TextProduct:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@id':\n                    type: string\n                    format: uri\n                id:\n                    type: string\n                wmoCollectiveId:\n                    type: string\n                issuingOffice:\n                    type: string\n                issuanceTime:\n                    type: string\n                    format: date-time\n                productCode:\n                    type: string\n                productName:\n                    type: string\n                productText:\n                    type: string\n            additionalProperties: false\n        TextProductCollection:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/TextProduct'\n            additionalProperties: false\n        TextProductTypeCollection:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            productCode:\n                                type: string\n                            productName:\n                                type: string\n                        required: [productCode, productName]\n                        additionalProperties: false\n            additionalProperties: false\n        TextProductLocationCollection:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                'locations':\n                    type: object\n                    additionalProperties:\n                        type: string\n                        nullable: true\n            additionalProperties: false\n        Time:\n            description: A time (in HHMM format). This is always specified in UTC (Zulu) time.\n            type: string\n            pattern: '^([01][0-9]|2[0-3])[0-5][0-9]$'\n        UnitOfMeasure:\n            description: >\n                A string denoting a unit of measure, expressed in the format \"{unit}\" or \"{namespace}:{unit}\".\n\n                Units with the namespace \"wmo\" or \"wmoUnit\" are defined in the World Meteorological Organization Codes\n                Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to\n                http://codes.wmo.int/common/unit/{unit}.\n\n                Units with the namespace \"nwsUnit\" are currently custom and do not align to any standard.\n\n                Units with no namespace or the namespace \"uc\" are compliant with the Unified Code for Units of Measure\n                syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic\n                Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0\n                (ISO/DIS 19156).\n\n                Namespaced units are considered deprecated. We will be aligning API to use the same standards as\n                GML/IWXXM in the future.\n            type: string\n            pattern: ^((wmo|uc|wmoUnit|nwsUnit):)?.*$\n        Zone:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                '@id':\n                    type: string\n                    format: uri\n                '@type':\n                    type: string\n                    enum: ['wx:Zone']\n                id:\n                    $ref: '#/components/schemas/NWSZoneID'\n                type:\n                    $ref: '#/components/schemas/NWSZoneType'\n                name:\n                    type: string\n                effectiveDate:\n                    type: string\n                    format: date-time\n                expirationDate:\n                    type: string\n                    format: date-time\n                state:\n                    oneOf:\n                        - $ref: '#/components/schemas/StateTerritoryCode'\n                        -\n                            type: string\n                            enum: ['']\n                            nullable: true\n                cwa:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/NWSForecastOfficeId'\n                forecastOffices:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                timeZone:\n                    type: array\n                    items:\n                        type: string\n                        format: iana-time-zone-identifier\n                observationStations:\n                    type: array\n                    items:\n                        type: string\n                        format: uri\n                radarStation:\n                    type: string\n                    nullable: true\n            additionalProperties: false\n        ZoneGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/Zone'\n        ZoneJsonLd:\n            $ref: '#/components/schemas/Zone'\n        ZoneCollectionGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeatureCollection'\n                -\n                    type: object\n                    properties:\n                        features:\n                            type: array\n                            items:\n                                type: object\n                                properties:\n                                    properties:\n                                        $ref: '#/components/schemas/Zone'\n        ZoneCollectionJsonLd:\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                '@graph':\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Zone'\n            additionalProperties: false\n        ZoneForecast:\n            description: An object representing a zone area forecast.\n            type: object\n            properties:\n                '@context':\n                    $ref: '#/components/schemas/JsonLdContext'\n                geometry:\n                    $ref: '#/components/schemas/GeometryString'\n                zone:\n                    description: An API link to the zone this forecast is for.\n                    type: string\n                    format: uri\n                updated:\n                    description: The time this zone forecast product was published.\n                    type: string\n                    format: date-time\n                periods:\n                    description: An array of forecast periods.\n                    type: array\n                    items:\n                        type: object\n                        properties:\n                            number:\n                                description: A sequential identifier number.\n                                type: integer\n                            name:\n                                description: A textual description of the period.\n                                type: string\n                                example: This Afternoon\n                            detailedForecast:\n                                description: A detailed textual forecast for the period.\n                                type: string\n                        required: [number, name, detailedForecast]\n                        additionalProperties: false\n            additionalProperties: false\n        ZoneForecastGeoJson:\n            allOf:\n                - $ref: '#/components/schemas/GeoJsonFeature'\n                -\n                    type: object\n                    properties:\n                        properties:\n                            $ref: '#/components/schemas/ZoneForecast'\n        ZoneForecastJsonLd:\n            $ref: '#/components/schemas/ZoneForecast'\n    parameters:\n        AlertArea:\n            name: area\n            in: query\n            description: >\n                State/territory code or marine area code\n\n                This parameter is incompatible with the following parameters: point, region, region_type, zone\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/AreaCode'\n            style: form\n            explode: false\n            x-symfony:\n                exclusive-group: geospatial\n        AlertCertainty:\n            name: certainty\n            in: query\n            description: Certainty (observed, likely, possible, unlikely, unknown)\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/AlertCertainty'\n            style: form\n            explode: false\n        AlertCode:\n            name: code\n            in: query\n            description: Event code\n            schema:\n                type: array\n                items:\n                    type: string\n                    pattern: ^\\w{3}$\n            style: form\n            explode: false\n        AlertEventName:\n            name: event\n            in: query\n            description: Event name\n            schema:\n                type: array\n                items:\n                    type: string\n                    pattern: ^[A-Za-z0-9 ]+$\n            style: form\n            explode: false\n        AlertMessageType:\n            name: message_type\n            in: query\n            description: Message type (alert, update, cancel)\n            schema:\n                type: array\n                items:\n                    type: string\n                    enum: [alert, update, cancel]\n            style: form\n            explode: false\n        AlertPoint:\n            name: point\n            in: query\n            description: >\n                Point (latitude,longitude)\n\n                This parameter is incompatible with the following parameters: area, region, region_type, zone\n            schema:\n                $ref: '#/components/schemas/PointString'\n            x-symfony:\n                exclusive-group: geospatial\n        AlertRegion:\n            name: region\n            in: query\n            description: >\n                Marine region code\n\n                This parameter is incompatible with the following parameters: area, point, region_type, zone\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/MarineRegionCode'\n            style: form\n            explode: false\n            x-symfony:\n                exclusive-group: geospatial\n        AlertRegionType:\n            name: region_type\n            in: query\n            description: >\n                Region type (land or marine)\n\n                This parameter is incompatible with the following parameters: area, point, region, zone\n            schema:\n                type: string\n                enum:\n                    - land\n                    - marine\n            x-symfony:\n                exclusive-group: geospatial\n        AlertSeverity:\n            name: severity\n            in: query\n            description: Severity (extreme, severe, moderate, minor, unknown)\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/AlertSeverity'\n            style: form\n            explode: false\n        AlertStatus:\n            name: status\n            in: query\n            description: Status (actual, exercise, system, test, draft)\n            schema:\n                type: array\n                items:\n                    type: string\n                    enum: [actual, exercise, system, test, draft]\n            style: form\n            explode: false\n        AlertUrgency:\n            name: urgency\n            in: query\n            description: Urgency (immediate, expected, future, past, unknown)\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/AlertUrgency'\n            style: form\n            explode: false\n        AlertZone:\n            name: zone\n            in: query\n            description: >\n                Zone ID (forecast or county)\n\n                This parameter is incompatible with the following parameters: area, point, region, region_type\n            schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/NWSZoneID'\n            style: form\n            explode: false\n            x-symfony:\n                exclusive-group: geospatial\n        Date:\n            name: date\n            in: path\n            required: true\n            description: Date (YYYY-MM-DD format)\n            schema:\n                $ref: '#/components/schemas/Date'\n        Debug:\n            name: debug\n            in: query\n            description: Debug mode (for internal use only)\n            schema:\n                type: boolean\n            x-symfony:\n                private: true\n        FIRIdentifier:\n            name: fir\n            in: path\n            required: true\n            description: FIR identifier\n            schema:\n                $ref: '#/components/schemas/FIRIdentifier'\n        GridpointForecastFeatureFlags:\n            name: Feature-Flags\n            in: header\n            required: false\n            description: >\n                Enable future and experimental features (see documentation for more info):\n\n                * forecast_temperature_qv: Represent temperature as QuantitativeValue\n\n                * forecast_wind_speed_qv: Represent wind speed as QuantitativeValue\n            schema:\n                type: array\n                items:\n                    type: string\n                    enum:\n                        - forecast_temperature_qv\n                        - forecast_wind_speed_qv\n            style: simple\n            explode: false\n        GridpointForecastUnits:\n            name: units\n            in: query\n            description: Use US customary or SI (metric) units in textual output\n            schema:\n                $ref: '#/components/schemas/GridpointForecastUnits'\n        GridpointWFO:\n            name: wfo\n            in: path\n            required: true\n            description: Forecast office ID\n            schema:\n                $ref: '#/components/schemas/NWSForecastOfficeId'\n        GridpointX:\n            name: x\n            in: path\n            required: true\n            description: Forecast grid X coordinate\n            schema:\n                type: integer\n                minimum: 0\n        GridpointY:\n            name: 'y'\n            in: path\n            required: true\n            description: Forecast grid Y coordinate\n            schema:\n                type: integer\n                minimum: 0\n        Limit:\n            name: limit\n            in: query\n            description: Limit\n            schema:\n                type: integer\n                minimum: 1\n                maximum: 500\n        NWSCenterWeatherServiceUnitId:\n            name: cwsuId\n            in: path\n            required: true\n            description: NWS CWSU ID\n            schema:\n                $ref: '#/components/schemas/NWSCenterWeatherServiceUnitId'\n        NWSOfficeId:\n            name: officeId\n            in: path\n            required: true\n            description: NWS office ID\n            schema:\n                $ref: '#/components/schemas/NWSOfficeId'\n        NWSZoneId:\n            name: zoneId\n            in: path\n            required: true\n            description: NWS public zone/county identifier\n            schema:\n                $ref: '#/components/schemas/NWSZoneID'\n        ObservationStationId:\n            name: stationId\n            in: path\n            required: true\n            description: Observation station ID\n            schema:\n                type: string\n        PaginationCursor:\n            name: cursor\n            in: query\n            description: Pagination cursor\n            schema:\n                type: string\n        PathPoint:\n            name: point\n            in: path\n            required: true\n            description: Point (latitude, longitude)\n            schema:\n                $ref: '#/components/schemas/PointString'\n        QueryDate:\n            name: date\n            in: query\n            description: Date (YYYY-MM-DD format)\n            schema:\n                $ref: '#/components/schemas/Date'\n        QueryStartTime:\n            name: start\n            in: query\n            description: Start time\n            schema:\n                type: string\n                format: date-time\n        QueryEndTime:\n            name: end\n            in: query\n            description: End time\n            schema:\n                type: string\n                format: date-time\n        SigmetSequenceNumber:\n            name: sequence\n            in: path\n            required: true\n            description: SIGMET sequence number\n            schema:\n                $ref: '#/components/schemas/SigmetSequenceNumber'\n        Time:\n            name: time\n            in: path\n            required: true\n            description: Time (HHMM format). This time is always specified in UTC (Zulu) time.\n            schema:\n                $ref: '#/components/schemas/Time'\n    responses:\n        AlertCollection:\n            description: A collection of alerts.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/geo+json:\n                    schema:\n                        $ref: '#/components/schemas/AlertCollectionGeoJson'\n                application/ld+json:\n                    schema:\n                        $ref: '#/components/schemas/AlertCollectionJsonLd'\n                application/atom+xml:\n                    schema:\n                        $ref: '#/components/schemas/AlertAtomFeed'\n        Error:\n            description: An error response.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/problem+json:\n                    schema:\n                        $ref: '#/components/schemas/ProblemDetail'\n        GridpointForecast:\n            description: A forecast for a gridpoint.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/geo+json:\n                    schema:\n                        $ref: '#/components/schemas/GridpointForecastGeoJson'\n                application/ld+json:\n                    schema:\n                        $ref: '#/components/schemas/GridpointForecastJsonLd'\n                application/vnd.noaa.dwml+xml:\n                    schema: {}\n        Observation:\n            description: An observation record.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/geo+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationGeoJson'\n                application/ld+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationJsonLd'\n                application/vnd.noaa.uswx+xml:\n                    schema: {}\n                application/vnd.noaa.obs+xml:\n                    schema: {}\n        ObservationCollection:\n            description: A collection of observation records.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/geo+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationCollectionGeoJson'\n                application/ld+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationCollectionJsonLd'\n        ObservationStationCollection:\n            description: A collection of observation stations.\n            headers:\n                X-Correlation-Id:\n                    $ref: '#/components/headers/CorrelationId'\n                X-Request-Id:\n                    $ref: '#/components/headers/RequestId'\n                X-Server-Id:\n                    $ref: '#/components/headers/ServerId'\n            content:\n                application/geo+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationStationCollectionGeoJson'\n                application/ld+json:\n                    schema:\n                        $ref: '#/components/schemas/ObservationStationCollectionJsonLd'\n    headers:\n        CorrelationId:\n            description: >\n                A unique identifier for the request, used for NWS debugging purposes. Please include this\n                identifier with any correspondence to help us investigate your issue.\n            schema:\n                type: string\n        RequestId:\n            description: >\n                A unique identifier for the request, used for NWS debugging purposes. Please include this\n                identifier with any correspondence to help us investigate your issue.\n            schema:\n                type: string\n        ServerId:\n            description: >\n                The identifier of the server that generated the response, used for NWS debugging purposes. Please\n                include this identifier with any correspondence to help us investigate your issue.\n            schema:\n                type: string\n    securitySchemes:\n        userAgent:\n            type: apiKey\n            name: User-Agent\n            in: header\n            description: >\n                We require that all consumers of the API include a User-Agent header in requests. This is due to a high\n                number of scripts exhibiting abusive behavior (intentional or unintentional). We recommend setting the\n                value to something that identifies your application and includes a contact email. This will help us\n                contact you if we notice unusual behavior and also aid in troubleshooting issues.\n\n                The API remains open and free to use and there are no limits imposed based on the User-Agent string.\n\n                This mechanism will be replaced with a more typical API key system at a later date.\n",
			"canonicalURL": "/github.com/weather-gov/api@600cd09a336275929b59d23b70958ca346334141/-/blob/assets/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/weather-gov/api/blob/600cd09a336275929b59d23b70958ca346334141/assets/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:19995: json: cannot unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON array into Go value of type ogen.Schema"
}