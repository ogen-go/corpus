{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/freshdesk/openapi.yaml",
			"byteSize": 6831,
			"content": "openapi: 3.0.0\ninfo:\n  title: Freshdesk API\n  x-ballerina-display:\n    label: Freshdesk\n    iconPath: \"icon.png\"\n  description: >-\n    This is a generated connector for [Freshdesk API v2.0](https://developers.freshdesk.com/api/#intro) OpenAPI specification.\n\n    Freshdesk is a cloud-based customer service software that enables businesses of all sizes to deliver stellar customer support.\n  x-ballerina-init-description: >\n    The connector initialization requires setting the API credentials.\n\n    Create an [Freshdesk Account](https://freshdesk.com/signup) and obtain tokens following [this guide](https://developers.freshdesk.com/api/#getting-started)\n  version: 2.0\nsecurity:\n  - BasicAuth: []\npaths:\n  /api/v2/tickets:\n    get:\n      summary: List tickets\n      operationId: listTickets \n      responses:\n        \"200\":\n          content:\n            application/json: \n              schema: \n                type: array\n                items:\n                  $ref: '#/components/schemas/Ticket'\n          description: Tickets details\n    post:\n      summary: Add a ticket\n      operationId: addTicket \n      requestBody:\n        description: Add a ticket\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TicketPayload'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json: \n              schema: \n                $ref: '#/components/schemas/Ticket'\n          description: Ticket detail\n  /api/v2/tickets/{id}:\n    get:\n      summary: Get a ticket\n      operationId: getTicket\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: Unique identifier for a ticket   \n      responses:\n        \"200\":\n          content:\n            application/json: \n              schema: \n                $ref: '#/components/schemas/Ticket'\n          description: Ticket detail\n    delete:\n      summary: Delete a ticket\n      operationId: deleteTicket\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: Unique identifier for a ticket   \n      responses:\n        '204':\n          description: The resource was deleted successfully.\n  /api/v2/contacts:\n    get:\n      summary: List contacts\n      operationId: listContacts\n      responses:\n        \"200\":\n          content:\n            application/json: \n              schema: \n                type: array\n                items:\n                  $ref: '#/components/schemas/Contact'\n          description: Contacts details\n  /api/v2/contacts/{id}:\n    get:\n      summary: Get a contact\n      operationId: getContact\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: Unique identifier for a contact   \n      responses:\n        \"200\":\n          content:\n            application/json: \n              schema: \n                $ref: '#/components/schemas/Contact'\n          description: Contact detail\n    delete:\n      summary: Delete a contact\n      operationId: deleteContact\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: Unique identifier for a contact   \n      responses:\n        '204':\n          description: The resource was deleted successfully.\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n      description: Basic authentication\n  schemas:\n    Ticket:\n      properties:\n        cc_emails:      \n          type: array\n          items:\n            type: string\n          nullable: true\n        fwd_emails:\n          type: array\n          items:\n            type: string\n          nullable: true\n        reply_cc_emails:\n          type: array\n          items:\n            type: string\n          nullable: true\n        fr_escalated:\n          type: boolean\n        spam:\n          type: boolean\n        email_config_id:\n          type: integer\n          nullable: true\n        group_id:\n          type: integer\n          nullable: true\n        priority:\n          type: integer\n        source:\n          type: integer\n        description:\n          type: string\n        status: \n          type: integer\n        subject:\n          type: string\n        id: \n          type: integer\n        type:\n          type: string\n          nullable: true\n        due_by:\n          type: string\n        fr_due_by:\n          type: string\n        is_escalated:\n          type: boolean\n        description_text:\n          type: string\n        created_at:\n          type: string\n        updated_at:\n          type: string\n        tags: \n          type: array\n          items:\n            type: string  \n        source_additional_info:\n          type: string\n          nullable: true\n        nr_due_by:\n          type: string  \n          nullable: true  \n        nr_escalated:\n          type: boolean                \n        company_id:\n          type: integer \n          nullable: true \n        requester_id:\n          type: integer \n        responder_id:\n          type: integer \n          nullable: true \n    TicketPayload:\n      properties:\n        description: \n          type: string\n        subject:\n          type: string\n        email:\n          type: string\n        priority:\n          type: integer\n        status:\n          type: integer\n        cc_emails:      \n          type: array\n          items:\n            type: string\n    Contact:\n      properties:\n        active:\n          type: boolean\n        address:\n          type: string\n          nullable: true\n        company_id:\n          type: integer\n          nullable: true\n        view_all_tickets:\n          type: boolean\n          nullable: true\n        deleted:\n          type: boolean\n        description:\n          type: string\n          nullable: true\n        email:\n          type: string\n        id:\n          type: integer\n        job_title:\n          type: string\n          nullable: true\n        language:\n          type: string\n        mobile:\n          type: string\n          nullable: true\n        name:\n          type: string\n        other_emails:      \n          type: array\n          items:\n            type: string\n          nullable: true\n        phone:\n          type: string\n          nullable: true\n        tags:      \n          type: array\n          items:\n            type: string\n          nullable: true\n        time_zone:\n          type: string\n        twitter_id:\n          type: string\n          nullable: true\n        unique_external_id:\n          type: string\n          nullable: true\n        created_at:\n          type: string\n        updated_at:\n          type: string\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/freshdesk/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/freshdesk/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:2646: json: unable to unmarshal Go value of type ogen.Spec: spec: json: cannot unmarshal JSON number into Go value of type string"
}