{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lrstanley/geoip"
		},
		"file": {
			"name": "openapi_v2.yaml",
			"size": 0,
			"path": "internal/handlers/apihandler/openapi_v2.yaml",
			"byteSize": 9643,
			"content": "openapi: 3.0.2\ninfo:\n  title: GeoIP API\n  version: 2.0.0\nservers:\n  - description: Development API\n    url: http://localhost:8080/api/v2\n  - description: Production v2 API\n    url: https://geoip.pw/api/v2\ncomponents:\n  headers:\n    X-RateLimit-Limit:\n      description: Request limit.\n      schema:\n        type: integer\n    X-RateLimit-Remaining:\n      description: The number of requests left for the time window.\n      schema:\n        type: integer\n    X-RateLimit-Reset:\n      description: The UTC date/time at which the current rate limit window resets.\n      schema:\n        format: date-time\n        type: string\n  parameters:\n    address:\n      examples:\n        hostname:\n          summary: Example of a hostname\n          value: google.com\n        ipv4:\n          summary: Example of an IPv4 address\n          value: 8.8.8.8\n        ipv6:\n          summary: Example of an IPv6 address\n          value: 2001:4860:4860::8888\n      in: path\n      name: address\n      required: true\n      schema:\n        $ref: \"#/components/schemas/Address\"\n    disable_host_lookup:\n      examples:\n        \"false\":\n          summary: Do a reverse lookup of the resolved IP.\n          value: \"false\"\n        \"true\":\n          summary: Don't do a reverse lookup of the resolved IP.\n          value: \"true\"\n      in: query\n      name: disable_host_lookup\n      schema:\n        default: false\n        type: boolean\n    lang:\n      examples:\n        en:\n          summary: Standard language code\n          value: en\n        en-US:\n          summary: BCP47 language code\n          value: en-US\n      in: query\n      name: lang\n      schema:\n        type: string\n    pretty:\n      examples:\n        \"false\":\n          summary: Don't pretty print the JSON response.\n          value: \"false\"\n        \"true\":\n          summary: Pretty print the JSON response.\n          value: \"true\"\n      in: query\n      name: pretty\n      schema:\n        default: false\n        type: boolean\n  responses:\n    Error:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Non-2XX status code response object.\n      headers:\n        $ref: \"#/components/headers\"\n  schemas:\n    Address:\n      oneOf:\n        - example: 8.8.8.8\n          format: ipv4\n          type: string\n        - example: 2001:4860:4860::8888\n          format: ipv6\n          type: string\n        - example: store.steampowered.com\n          format: hostname\n          type: string\n    BulkError:\n      properties:\n        error:\n          type: string\n        query:\n          type: string\n      required:\n        - error\n        - query\n      type: object\n    BulkGeoResult:\n      properties:\n        errors:\n          items:\n            $ref: \"#/components/schemas/BulkError\"\n          type: array\n        results:\n          items:\n            $ref: \"#/components/schemas/GeoResult\"\n          type: array\n      required:\n        - results\n        - errors\n      type: object\n    Error:\n      properties:\n        code:\n          example: 404\n          type: integer\n        error:\n          example: Not Found\n          type: string\n        request_id:\n          example: origin/1RMH8atZ25-000017\n          type: string\n        timestamp:\n          example: \"2022-08-25T02:14:31Z\"\n          type: string\n        type:\n          example: Not Found\n          type: string\n      required:\n        - code\n        - error\n        - request_id\n        - timestamp\n        - type\n      type: object\n    GeoResult:\n      properties:\n        accuracy_radius_km:\n          example: 100\n          type: integer\n        asn:\n          example: AS15169\n          type: string\n        asn_org:\n          example: Google LLC\n          type: string\n        city:\n          example: Mountain View\n          type: string\n        continent:\n          example: North America\n          type: string\n        continent_abbr:\n          example: NA\n          type: string\n        country:\n          example: United States\n          type: string\n        country_abbr:\n          example: US\n          type: string\n        host:\n          example: dns.google\n          type: string\n        ip:\n          example: 8.8.8.8\n          type: string\n        ip_type:\n          example: 4\n          type: integer\n        latitude:\n          example: 37.751\n          type: number\n        longitude:\n          example: -97.822\n          type: number\n        network:\n          example: 8.8.8.0/24\n          type: string\n        postal_code:\n          example: \"94035\"\n          type: string\n        query:\n          example: 8.8.8.8\n          type: string\n        subdivision:\n          example: California\n          type: string\n        summary:\n          example: Mountain View, CA, United States\n          type: string\n        timezone:\n          example: America/Los_Angeles\n          type: string\n      required:\n        - accuracy_radius_km\n        - asn\n        - asn_org\n        - city\n        - continent\n        - continent_abbr\n        - country\n        - country_abbr\n        - ip\n        - ip_type\n        - latitude\n        - longitude\n        - network\n        - postal_code\n        - query\n        - subdivision\n        - summary\n        - timezone\n      type: object\n    LookupOptions:\n      properties:\n        disable_host_lookup:\n          description: Disable doing a reverse lookup of the resolved IP (much faster).\n          example: true\n          type: boolean\n        lang:\n          description: BCP47 or standard 2-character language code.\n          example: en-US\n          type: string\n        pretty:\n          description: Pretty print the JSON response.\n          example: true\n          type: boolean\n      type: object\npaths:\n  /bulk:\n    post:\n      description: \u003e-\n        Lookup addresses (hostnames/domains/ipv4/ipv6/etc) in bulk.\n\n        **NOTE: A maximum of 25 addresses can be looked up at once, anything\n        above will return a `400`**.\n      operationId: getManyAddresses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                addresses:\n                  description: Array of addresses to lookup.\n                  items:\n                    $ref: \"#/components/schemas/Address\"\n                  maxItems: 25\n                  minItems: 1\n                  type: array\n                  uniqueItems: true\n                options:\n                  $ref: \"#/components/schemas/LookupOptions\"\n              required:\n                - addresses\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BulkGeoResult\"\n          description: Bulk lookup response, including successful and failed lookups.\n          headers:\n            $ref: \"#/components/headers\"\n        4XX:\n          $ref: \"#/components/responses/Error\"\n        5XX:\n          $ref: \"#/components/responses/Error\"\n      summary: Bulk lookup addresses\n      tags:\n        - Lookup\n  /lookup/{address}:\n    get:\n      description: \u003e-\n        Lookup an address (hostname/domain/ipv4/ipv6/etc), returning the GeoIP\n        information if available.\n      operationId: getAddress\n      parameters:\n        - $ref: \"#/components/parameters/address\"\n        - $ref: \"#/components/parameters/pretty\"\n        - $ref: \"#/components/parameters/disable_host_lookup\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GeoResult\"\n          description: Response was successful.\n          headers:\n            $ref: \"#/components/headers\"\n        4XX:\n          $ref: \"#/components/responses/Error\"\n        5XX:\n          $ref: \"#/components/responses/Error\"\n      summary: Lookup address\n      tags:\n        - Lookup\n  /metadata:\n    get:\n      description: \u003e-\n        Query the actively used GeoIP database info for all enabled database\n        types.\n      operationId: getDatabaseMetadata\n      parameters:\n        - $ref: \"#/components/parameters/pretty\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties: true\n                type: object\n          description: OK\n          headers:\n            $ref: \"#/components/headers\"\n      summary: GeoIP database info\n      tags:\n        - Info\n  /openapi.yaml:\n    get:\n      description: \u003e-\n        Returns the currently setup OpenAPI spec for this version of GeoIP. Note\n        that some legacy/deprecated API endpoints are not included in this spec.\n      operationId: getOpenAPISpec\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/yaml: {}\n          description: OK\n        4XX:\n          $ref: \"#/components/responses/Error\"\n        5XX:\n          $ref: \"#/components/responses/Error\"\n      summary: Get OpenAPI spec\n      tags:\n        - Info\n  /ping:\n    get:\n      description: \u003e-\n        Health check. Can also be used to check the rate-limit status without\n        incrementing the rate-limit counters.\n      operationId: checkHealth\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  pong:\n                    type: boolean\n                required:\n                  - pong\n                type: object\n          description: OK\n          headers:\n            $ref: \"#/components/headers\"\n      summary: Health check\n      tags:\n        - Info\n",
			"canonicalURL": "/github.com/lrstanley/geoip@9918ecd78b1ed44d405f26c78f11f53749cdf4a7/-/blob/internal/handlers/apihandler/openapi_v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/lrstanley/geoip/blob/9918ecd78b1ed44d405f26c78f11f53749cdf4a7/internal/handlers/apihandler/openapi_v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Parameter; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Parameter; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Parameter; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Parameter; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Parameter"
}