{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "appdetail-resource.yaml",
			"size": 0,
			"path": "specs/external-app/appdetail-resource.yaml",
			"byteSize": 11941,
			"content": "openapi: \"3.0.3\"\ninfo:\n  version: 1.0.0\n  title: Devtron Labs\npaths:\n  /orchestrator/k8s/resource:\n    post:\n      description: this api will be used for fetching all kind of manifest.\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequestObject'\n      responses:\n        \"200\":\n          description: manifest fetch responces\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    type: integer\n                    description: status code\n                  status:\n                    type: string\n                    description: status\n                  result:\n                    $ref: '#/components/schemas/ResourceGetResponse'\n    put:\n      description: this api will be used for edit requested manifest.\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequestObject'\n      responses:\n        \"200\":\n          description: manifest edit responces\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    type: integer\n                    description: status code\n                  status:\n                    type: string\n                    description: status\n                  result:\n                    $ref: '#/components/schemas/ResourceGetResponse'\n  /orchestrator/k8s/resource/create:\n    post:\n      description: this api will be used for applying desired manifest\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequestObject'\n      responses:\n        \"200\":\n          description: create resource response\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    type: integer\n                    description: status code\n                  status:\n                    type: string\n                    description: status\n                  result:\n                    $ref: '#/components/schemas/ResourceGetResponse'\n  /orchestrator/k8s/resource/delete:\n    post:\n      description: this api will be used for delete any resource.\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequestObject'\n      responses:\n        \"200\":\n          description: manifest fetch responces\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    type: integer\n                    description: status code\n                  status:\n                    type: string\n                    description: status\n                  result:\n                    $ref: '#/components/schemas/ResourceGetResponse'\n  /orchestrator/k8s/events:\n    post:\n      description: this api will be used for fetching events for resources.\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceRequestObject'\n      responses:\n        \"200\":\n          description: events success\n          content:\n            text/event-stream:\n              schema:\n                $ref: \"#/components/schemas/EventsResponseObject\"\n  /orchestrator/k8s/pods/logs/{podName}:\n    get:\n      description: this api will be used for fetching logs for container.\n      parameters:\n        - name: podName\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: containerName\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: appId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: follow\n          in: query\n          schema:\n            type: boolean\n        - name: sinceSeconds\n          in: query\n          schema:\n            type: integer\n        - name: tailLines\n          in: query\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: events success\n          content:\n            text/event-stream:\n              schema:\n                $ref: \"#/components/schemas/LogsResponseObject\"\n  /orchestrator/k8s/pod/exec/session/{applicationId}/{namespace}/{pod}/{shell}/{container}:\n    get:\n      description: get session for the terminal\n      parameters:\n        - in: path\n          name: applicationId\n          schema:\n            type: string\n          required: true\n          description: application id\n          example: \"2|devtroncd|devtron\"\n        - in: path\n          name: namespace\n          schema:\n            type: string\n          required: true\n          description: namespace name\n          example: \"devtroncd\"\n        - in: path\n          name: pod\n          schema:\n            type: string\n          required: true\n          description: pod name\n          example: inception-58d44d99fd-tfw4s\n        - in: path\n          name: shell\n          schema:\n            type: string\n            oneOf:\n              - \"bash\"\n              - \"sh\"\n              - \"powershell\"\n              - \"cmd\"\n          required: true\n          description: shell to invoke\n          example: \"bash\"\n        - in: path\n          name: container\n          schema:\n            type: string\n          required: true\n          description: name of the container\n          example: \"devtron\"\n      responses:\n        200:\n          description: session id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TerminalMessage\"\ncomponents:\n  schemas:\n    TerminalMessage:\n      type: object\n      properties:\n        Op:\n          type: string\n        Data:\n          type: string\n        SessionID:\n          type: string\n    ResourceRequestObject:\n      type: object\n      properties:\n        appId:\n          type: string\n        k8sRequest:\n          $ref: '#/components/schemas/K8sRequestObject'\n    K8sRequestObject:\n      type: object\n      properties:\n        resourceIdentifier:\n          type: object\n          properties:\n            groupVersionKind:\n              type: object\n              properties:\n                Group:\n                  type: string\n                Version:\n                  type: string\n                Kind:\n                  type: string\n            namespace:\n              type: string\n            name:\n              type: string\n          required:\n            - name\n        podLogsRequest:\n          type: object\n          properties:\n            containerName:\n              type: string\n        patch:\n          type: string\n    ResourceGetResponse:\n      type: object\n      properties:\n        manifest:\n          type: object\n          properties:\n            apiVersion:\n              type: string\n            data:\n              type: object\n              properties:\n                envoy.yaml:\n                  type: string\n            kind:\n              type: string\n            metadata:\n              type: object\n              properties:\n                annotations:\n                  type: object\n                  properties:\n                    meta.helm.sh/release-name:\n                      type: string\n                    meta.helm.sh/release-namespace:\n                      type: string\n                creationTimestamp:\n                  type: string\n                  format: date-time\n                labels:\n                  type: object\n                  properties:\n                    app:\n                      type: string\n                    app.kubernetes.io/managed-by:\n                      type: string\n                    chart:\n                      type: string\n                    heritage:\n                      type: string\n                    release:\n                      type: string\n                name:\n                  type: string\n                namespace:\n                  type: string\n                resourceVersion:\n                  type: string\n                selfLink:\n                  type: string\n                uid:\n                  type: string\n    EventsResponseObject:\n      type: object\n      properties:\n        events:\n          type: object\n          properties:\n            metadata:\n              type: object\n              properties:\n                selfLink:\n                  type: string\n                resourceVersion:\n                  type: string\n            items:\n              type: array\n              items:\n                type: object\n                properties:\n                  metadata:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      namespace:\n                        type: string\n                      selfLink:\n                        type: string\n                      uid:\n                        type: string\n                      resourceVersion:\n                        type: string\n                      creationTimestamp:\n                        type: string\n                        format: date-time\n                      managedFields:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            manager:\n                              type: string\n                            operation:\n                              type: string\n                            apiVersion:\n                              type: string\n                            time:\n                              type: string\n                              format: date-time\n                  involvedObject:\n                    type: object\n                    properties:\n                      kind:\n                        type: string\n                      namespace:\n                        type: string\n                      name:\n                        type: string\n                      uid:\n                        type: string\n                      apiVersion:\n                        type: string\n                      resourceVersion:\n                        type: string\n                  reason:\n                    type: string\n                  message:\n                    type: string\n                  source:\n                    type: object\n                    properties:\n                      component:\n                        type: string\n                  firstTimestamp:\n                    type: string\n                    format: date-time\n                  lastTimestamp:\n                    type: string\n                    format: date-time\n                  count:\n                    type: integer\n                    format: int32\n                  type:\n                    type: string\n                  eventTime:\n                    type: string\n                    format: nullable\n                  reportingComponent:\n                    type: string\n                  reportingInstance:\n                    type: string\n    LogsResponseObject:\n      type: object\n      properties:\n        logs:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              type:\n                type: string\n              data:\n                type: string\n              time:\n                type: string"
		}
	},
	"Error": "unmarshal: json: line 1:4289: json: cannot unmarshal string into Go struct field Schema.paths.get.parameters.schema.oneOf of type ogen.Schema"
}