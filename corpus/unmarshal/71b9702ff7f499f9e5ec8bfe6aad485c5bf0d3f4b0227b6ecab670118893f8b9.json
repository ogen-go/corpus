{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "multi-datatypes.yaml",
			"size": 0,
			"path": "docs/specs/multi-datatypes.yaml",
			"byteSize": 2129,
			"content": "openapi: 3.1.0\ninfo:\n  title: Support for multiple datatypes for each field \n  version: 1.0.1\npaths:\n  /person:\n    post:\n      summary: Demonstrates data-types and constraints\n      parameters:\n        - name: height\n          in: query\n          description: height (in inches)\n          required: true\n          example: 70\n          schema:\n            type: \n              - integer\n              - number\n      responses:\n        '200':\n          description: Successful Operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/person'\ntags:\n  - name: Person\n    description: Person Datatype\ncomponents:\n  schemas:\n    person:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          description: Person ID\n          type: \n            - integer\n            - number\n            - string\n          minLength: 4\n          minimum: 10\n        name:\n          type: string\n          maxLength: 100\n        gender:\n          type: \n            - string\n            - integer\n          enum:\n            - male\n            - female\n            - unknown\n          minimum: 4\n        location:\n          description: location can be null, set using `nullable` property thats supported by OpenAPI `3.0.x`\n          type: string\n          nullable: true\n        age:\n          description: Age of Person\n          type: integer\n          minimum: 21\n          exclusiveMaximum: 70\n          multipleOf: 5\n        photoUrls:\n          description: One URL or Array or URLs or set to false\n          type: \n            - array\n            - boolean\n            - string\n          maxItems: 20\n          items:\n            type: string\n            format: url\n        hobby:\n          description: comma separated list of hobbies or an array of object \n          type:\n            - string \n            - array\n          items:\n            type: object\n            properties:\n              hobbyRank:\n                type:\n                  - integer\n                  - number\n              hobbyName:\n                type: string\n\n\n",
			"canonicalURL": "/github.com/rapi-doc/RapiDoc@3cc2bcc742fa84f1207e9b460032750bdada228d/-/blob/docs/specs/multi-datatypes.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rapi-doc/RapiDoc/blob/3cc2bcc742fa84f1207e9b460032750bdada228d/docs/specs/multi-datatypes.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:53: callback: json: cannot unmarshal number into Go struct field Schema.exclusiveMaximum of type bool"
}