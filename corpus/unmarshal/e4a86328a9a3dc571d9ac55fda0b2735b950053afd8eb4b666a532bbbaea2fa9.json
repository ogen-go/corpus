{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/meilisearch/specifications"
		},
		"file": {
			"name": "open-api.yaml",
			"size": 0,
			"path": "open-api.yaml",
			"byteSize": 131110,
			"content": "openapi: 3.1.0\ninfo:\n  title: Meilisearch Core API\n  description: 'Search documents, configure and manage the Meilisearch engine.'\n  version: 0.30.0\n  contact:\n    name: Meilisearch\n    email: bonjour@Meilisearch.com\n  license:\n    name: MIT\n    url: 'https://github.com/Meilisearch/Meilisearch/blob/main/LICENSE'\n  summary: 'An open source, blazingly fast and hyper relevant search-engine that will improve your search experience.'\nservers:\n  - url: '{protocol}://{domain}:{port}'\n    variables:\n      protocol:\n        enum:\n          - https\n          - http\n        default: https\n      domain:\n        default: example.meilisearch.com\n      port:\n        default: '7700'\n    description: 'https://example.meilisearch.com:7700'\ncomponents:\n  schemas:\n    limit:\n      type: integer\n      description: Limit given for the query. If limit is not provided as a query parameter, this parameter displays the default limit value.\n      example: 10\n    offset:\n      type: integer\n      description: Offset given for the query. If offset is not provided as a query parameter, this parameter displays the default offset value.\n      example: 0\n    page:\n      type: integer\n      description: Sets the specific results page to fetch. If page is not provided as a query parameter, this parameter is ignored.\n      example: 1\n    hitsPerPage:\n      type: integer\n      description: Sets the number of results returned per page. If hitsPerPage is not provided as a query parameter, this parameter is ignored.\n      example: 20\n    totalHits:\n      type: integer\n      description: Returns the total number of search results. Computed if either `page` or `hitsPerPage` is provided as a query parameter.\n      example: 20\n    totalPages:\n      type: integer\n      description: Returns the total number of navigatable results pages for the search query. Computed if either `page` or `hitsPerPage` is provided as a query parameter.\n      example: 20\n    total:\n      type: integer\n      description: Total number of browsable results using offset/limit parameters for the given resource.\n      example: 50\n    from:\n      type: integer\n      description: The first task uid returned.\n      example: 999\n    next:\n      type: integer\n      description: Represents the value to send in `from` to fetch the next slice of the results. The first item for the next slice starts at this exact number. When the returned value is null, it means that all the data have been browsed in the given order.\n      example: 989\n    timestamp:\n      type: string\n      description: An `RFC 3339` format for date/time/duration.\n      example: '2019-11-20T09:40:33.711324Z'\n    index:\n      type: object\n      additionalProperties: false\n      examples:\n        - uid: movies\n          primaryKey: movie_id\n          createdAt: '2019-11-20T09:40:33.711324Z'\n          updatedAt: '2019-11-20T09:40:33.711324Z'\n      description: ''\n      title: ''\n      properties:\n        uid:\n          type: string\n          example: movies\n          description: Unique identifier for the index\n        primaryKey:\n          type:\n            - string\n            - 'null'\n          nullable: true\n          example: movie_id\n          description: Custom primaryKey for documents\n        createdAt:\n          $ref: '#/components/schemas/timestamp'\n        updatedAt:\n          $ref: '#/components/schemas/timestamp'\n      required:\n        - uid\n        - createdAt\n        - updatedAt\n    document:\n      type: object\n      additionalProperties: true\n      example:\n        id: 25684\n        title: American Ninja 5\n        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n        release_date: 725846400\n      description: 'A document made of attribute. The maximum number of attribute for a document is 65,535.'\n    matchesPosition:\n      type: object\n      properties:\n        start:\n          type: integer\n        length:\n          type: integer\n      additionalProperties: false\n      required:\n        - start\n        - length\n      description: Starting position and length in bytes of the matched term in the returned value\n    hit:\n      type: object\n      additionalProperties: true\n      example:\n        id: 25684\n        title: American Ninja 5\n        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n        release_date: 725846400\n        _formatted:\n          id: 25684\n          title: American Ninja 5\n          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n          overview: 'When a scientists daughter is kidnapped, American \u003cem\u003eNinja\u003c/em\u003e, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the \u003cem\u003eninja\u003c/em\u003e.'\n          release_date: 725846400\n        _matchesPosition:\n          overview:\n            - start: 49\n              length: 5\n            - start: 155\n              length: 5\n      examples:\n        - id: 25684\n          title: American Ninja 5\n          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n          overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n          release_date: 725846400\n          _formatted:\n            id: 25684\n            title: American Ninja 5\n            poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n            overview: 'When a scientists daughter is kidnapped, American \u003cem\u003eNinja\u003c/em\u003e, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the \u003cem\u003eninja\u003c/em\u003e.'\n            release_date: 725846400\n          _matchesPosition:\n            overview:\n              - start: 49\n                length: 5\n              - start: 155\n                length: 5\n      description: ''\n      properties:\n        _formatted:\n          type: object\n          description: Only present if `attributesToHighlight`/`attributesToCrop` is not empty. Return highlighted and cropped fields.\n          additionalProperties: true\n        _matchesPosition:\n          type: object\n          description: Only present if showMatchesPosition = `true`. Array of all search query occurrences in all fields.\n          properties:\n            '':\n              $ref: '#/components/schemas/matchesPosition'\n        attribute:\n          type:\n            - string\n            - number\n          description: Retrieve attributes of a search result. `attributesToRetrieve` controls these fields.\n        _geoDistance:\n          type: number\n          description: 'Using _geoPoint({lat}, {lng}) built-in sort rule at search leads the engine to return a _geoDistance within the search results. This field represents the distance in meters of the document from the specified _geoPoint.'\n    documentId:\n      oneOf:\n        - type: number\n        - type: string\n      example: 468219\n    filter:\n      description: |\n        Attribute(s) to filter on.\n\n        Can be made of 3 syntaxes\n\n        - Nested Array: `[\"something \u003e 1\", \"genres=comedy\", [\"genres=horror\", \"title=batman\"]]`\n        - String: `\"something \u003e 1 AND genres=comedy AND (genres=horror OR title=batman)\"`\n        - Mixed: `[\"something \u003e 1 AND genres=comedy\", \"genres=horror OR title=batman\"]`\n\n        \u003e info\n        \u003e _geoRadius({lat}, {lng}, {distance_in_meters}) built-in filter rule can be used to filter documents within a geo circle.\n\n        \u003e warn\n        \u003e Attribute(s) used in `filter` should be declared as filterable attributes. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).\n      example:\n        - 'director:Mati Diop'\n        - - 'genres:Comedy'\n          - 'genres:Romance'\n      title: filter\n      oneOf:\n        - type: array\n          items:\n            type: string\n            pattern: '^[^:]+:[^:]+$'\n        - type: string\n          properties: {}\n          pattern: '^[^:]+:[^:]+$'\n        - type: array\n          items:\n            anyOf:\n              - type: array\n                items: {}\n              - type: string\n    sort:\n      description: |\n        Fields on which you want to sort the results.\n\n        \u003e warn\n        \u003e Attribute(s) used in `sort` should be declared as sortable attributes. See [Sorting](https://docs.meilisearch.com/reference/features/sorting.html).\n\n        \u003e info\n        \u003e _geoPoint({lat}, {long}) built-in sort rule can be used to sort documents around a geo point.\n      example:\n        - 'price:desc'\n      title: sort\n      oneOf:\n        - type: array\n          items:\n            type: string\n    searchResponse:\n      type: object\n      additionalProperties: false\n      title: ''\n      properties:\n        hits:\n          type: array\n          description: Array of documents matching the search.\n          items:\n            $ref: '#/components/schemas/hit'\n        offset:\n          type: integer\n          description: Number of documents skipped.\n        limit:\n          type: integer\n          description: Number of returned documents.\n        estimatedTotalHits:\n          type: integer\n          description: Estimated number of candidates for the search query.\n        page:\n          type: integer\n          description: The specific search results page to fetch.\n        hitsPerPage:\n          type: integer\n          description: Number of returned results per page.\n        totalHits:\n          type: integer\n          description: Exhaustive total number of search results for the search query.\n        totalPages:\n          type: integer\n          description: Number of navigatable results pages for the search query.\n        facetDistribution:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: integer\n          description: |\n            [Distribution of the given facets](https://docs.meilisearch.com/reference/features/search_parameters.html#facet-distribution).\n          example:\n            genres:\n              action: 273\n              animation: 118\n              adventure: 132\n              fantasy: 67\n              comedy: 475\n              mystery: 70\n              thriller: 217\n        processingTimeMs:\n          type: integer\n          description: Processing time of the query.\n        query:\n          type: string\n          description: Query originating the response.\n          example: ninja\n      required:\n        - hits\n        - processingTimeMs\n        - query\n    task:\n      type: object\n      description: |\n        Meilisearch is an asynchronous API. It means that the API does not behave as you would typically expect when handling the request's responses.\n\n        Some operations are put in a queue and will be executed in turn (asynchronously). In this case, the server response contains the identifier to track the execution of the operation.\n\n        [Learn More](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html).\n      additionalProperties: false\n      examples:\n        - uid: 0\n          indexUid: movies\n          status: succeeded\n          type: documentAdditionOrUpdate\n          canceledBy: null\n          details:\n            receivedDocuments: 10\n            indexedDocuments: 10\n          duration: PT5S\n          enqueuedAt: '2021-01-01T09:39:00.000000Z'\n          startedAt: '2021-01-01T09:40:00.000000Z'\n          finishedAt: '2021-01-01T09:40:05.000000Z'\n      properties:\n        uid:\n          type: integer\n          description: The unique sequential identifier of the task\n        indexUid:\n          type: string\n          description: The unique identifier of the index where this task is operated\n        status:\n          type: string\n          description: The status of the task\n          enum:\n            - enqueued\n            - processing\n            - succeeded\n            - failed\n          example: succeeded\n        type:\n          type: string\n          description: The type of the task\n          enum:\n            - documentAdditionOrUpdate\n            - documentDeletion\n            - indexCreation\n            - indexUpdate\n            - indexDeletion\n            - indexSwap\n            - settingsUpdate\n            - dumpCreation\n            - taskCancelation\n            - taskDeletion\n            - snapshotCreation\n        canceledBy:\n          type: integer\n          description: The uid of the task that performed the taskCancelation if the task has been canceled.\n        details:\n          type: object\n          description: Details information of the task payload.\n          properties:\n            receivedDocuments:\n              type: integer\n              description: Number of documents received for documentAdditionOrUpdate task.\n            indexedDocuments:\n              type: integer\n              description: Number of documents finally indexed for documentAdditionOrUpdate task or a documentAdditionOrUpdate batch of tasks.\n            providedIds:\n              type: integer\n              description: Number of provided document ids for the documentDeletion task.\n            deletedDocuments:\n              type: integer\n              description: Number of documents finally deleted for documentDeletion and indexDeletion tasks.\n            primaryKey:\n              type: string\n              description: Value for the primaryKey field encountered if any for indexCreation or indexUpdate task.\n            settings:\n              $ref: '#/components/schemas/settings'\n            dumpUid:\n              type: string\n              description: Identifier generated for the dump for dumpCreation task.\n            matchedTasks:\n              type: integer\n              description: Number of tasks that match the request for taskCancelation or taskDeletion tasks.\n            canceledTasks:\n              type: integer\n              description: Number of tasks canceled for taskCancelation.\n            deletedTasks:\n              type: integer\n              description: Number of tasks deleted for taskDeletion.\n            originalFilter:\n              type: string\n              description: Original filter query for taskCancelation or taskDeletion tasks.\n        error:\n          description: Error object containing error details and context when a task has a failed status.\n          $ref: '#/components/schemas/error'\n        duration:\n          type: string\n          description: Total elasped time the engine was in processing state expressed as a `ISO-8601` duration format. Default is set to `null`\n          nullable: true\n        enqueuedAt:\n          description: Represent the date and time as a `RFC 3339` format when the task has been enqueued\n          $ref: '#/components/schemas/timestamp'\n        startedAt:\n          $ref: '#/components/schemas/timestamp'\n          description: Represent the date and time as a `RFC 3339` format when the task has been dequeued and started to be processed. Default is set to `null`\n          nullable: true\n        finishedAt:\n          $ref: '#/components/schemas/timestamp'\n          description: Represent the date and time as a `RFC 3339` format when the task has failed or succeeded. Default is set to `null`\n          nullable: true\n      required:\n        - uid\n        - indexUid\n        - status\n        - type\n        - canceledBy\n        - details\n        - error\n        - enqueuedAt\n        - startedAt\n        - finishedAt\n    summarizedTask:\n      type: object\n      description: A summarized version of an asynchronous task. Summarized task representation are given for the 202 Accepted HTTP response. [Learn More](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html).\n      additionalProperties: false\n      examples:\n        documentAdditionOrUpdate:\n          $ref: '#/components/examples/202_documentAdditionOrUpdate'\n      properties:\n        taskUid:\n          type: integer\n          description: The unique sequential identifier of the task. This `taskUid` allows you to [track the current task](https://docs.meilisearch.com/reference/api/tasks.html).\n        indexUid:\n          type: string\n          description: The unique identifier of the index where this task is operated\n        status:\n          type: string\n          description: The status of the task\n          enum:\n            - enqueued\n        type:\n          type: string\n          description: The type of the task\n          enum:\n            - documentAdditionOrUpdate\n            - documentDeletion\n            - indexCreation\n            - indexUpdate\n            - indexDeletion\n            - indexSwap\n            - settingsUpdate\n            - dumpCreation\n            - taskCancelation\n            - taskDeletion\n        enqueuedAt:\n          description: Represent the date and time as a `RFC 3339` format when the task has been enqueued\n          $ref: '#/components/schemas/timestamp'\n      required:\n        - uid\n        - indexUid\n        - status\n        - type\n        - enqueuedAt\n    synonyms:\n      type: object\n      description: List of associated words treated similarly. A word associated to an array of word as synonyms.\n      example:\n        wolverine:\n          - xmen\n          - logan\n        logan:\n          - wolverine\n          - xmen\n        wow:\n          - world of warcraft\n    stopWords:\n      type: array\n      description: List of words ignored when present in search queries.\n      items:\n        type: string\n      example:\n        - of\n        - the\n        - to\n    sortableAttributes:\n      type: array\n      description: List of attributes to sort on at search.\n      items:\n        type: string\n      example:\n        - price\n        - author\n        - title\n    rankingRules:\n      type: array\n      description: |\n        List of ranking rules sorted by order of importance. The order is customizable.\n\n        [A list of ordered built-in ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html).\n      items:\n        type: string\n      example:\n        - words\n        - typo\n        - proximity\n        - attribute\n        - sort\n        - exactness\n        - 'release_date:asc'\n      examples: []\n    typoTolerance:\n      type: object\n      description: Customize typo tolerance feature.\n      properties:\n        enabled:\n          description: Enable the typo tolerance feature.\n          type: boolean\n          default: true\n          nullable: false\n        disableOnAttributes:\n          description: Disable the typo tolerance feature on the specified attributes.\n          type: array\n          items:\n            type: string\n          default: []\n          nullable: false\n        disableOnWords:\n          description: Disable the typo tolerance feature for a set of query terms given for a search query.\n          type: array\n          items:\n            type: string\n          default: []\n          nullable: false\n        minWordSizeForTypos:\n          type: object\n          properties:\n            oneTypo:\n              description: Customize the minimum size for a word to tolerate 1 typo.\n              type: integer\n              default: 5\n              nullable: false\n            twoTypos:\n              description: Customize the minimum size for a word to tolerate 2 typos.\n              type: integer\n              default: 9\n              nullable: false\n    pagination:\n      type: object\n      description: Customize pagination settings\n      properties:\n        maxTotalHits:\n          description: Define the maximum number of documents reachable for a search request. It means that with the default value of `1000`, it is not possible to see the `1001`st result for a **search query**.\n          type: integer\n          default: 1000\n          nullable: false\n    faceting:\n      type: object\n      description: Customize faceting settings\n      properties:\n        maxValuesPerFacet:\n          description: Define maximum number of value returned for a facet for a **search query**. It means that with the default value of `100`, it is not possible to have `101` different colors if the `color`` field is defined as a facet at search time.\n          type: integer\n          default: 100\n          nullable: false\n    filterableAttributes:\n      type: array\n      description: |\n        Attributes to use for faceting and filtering. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).\n      items:\n        type: string\n      example:\n        - genres\n        - director\n      title: filterableAttributes\n    distinctAttribute:\n      type: string\n      description: Search returns documents with distinct (different) values of the given field.\n      nullable: true\n    searchableAttributes:\n      type: array\n      description: Fields in which to search for matching query words sorted by order of importance.\n      items:\n        type: string\n      example:\n        - title\n        - description\n        - genre\n    displayedAttributes:\n      type: array\n      description: Fields displayed in the returned documents.\n      items:\n        type: string\n      example:\n        - title\n        - description\n        - genre\n        - release_date\n    settings:\n      type: object\n      description: |\n        [Learn more about the settings in this guide](https://docs.meilisearch.com/reference/features/settings.html).\n      additionalProperties: false\n      properties:\n        synonyms:\n          $ref: '#/components/schemas/synonyms'\n        stopWords:\n          $ref: '#/components/schemas/stopWords'\n        rankingRules:\n          $ref: '#/components/schemas/rankingRules'\n        filterableAttributes:\n          $ref: '#/components/schemas/filterableAttributes'\n        distinctAttribute:\n          $ref: '#/components/schemas/distinctAttribute'\n        searchableAttributes:\n          $ref: '#/components/schemas/searchableAttributes'\n        displayedAttributes:\n          $ref: '#/components/schemas/displayedAttributes'\n        typoTolerance:\n          $ref: '#/components/schemas/typoTolerance'\n      required:\n        - synonyms\n        - stopWords\n        - rankingRules\n        - filterableAttributes\n        - distinctAttribute\n        - searchableAttributes\n        - displayedAttributes\n        - typoTolerance\n    stats:\n      type: object\n      additionalProperties: false\n      title: ''\n      examples:\n        - numberOfDocuments: 10\n          isIndexing: true\n          fieldDistribution:\n            genre: 10\n            author: 9\n      properties:\n        numberOfDocuments:\n          type: integer\n          description: Number of documents contained in the index.\n        isIndexing:\n          type: boolean\n          description: Whether or not the index is currently ingesting document\n        fieldDistribution:\n          type: object\n          additionalProperties:\n            type: integer\n          description: How many documents contains a field\n      required:\n        - numberOfDocuments\n        - isIndexing\n        - fieldDistribution\n    error:\n      title: error\n      type: object\n      properties:\n        message:\n          type: string\n        code:\n          type: string\n        type:\n          type: string\n        link:\n          type: string\n      required:\n        - message\n        - code\n        - type\n        - link\n      description: ''\n    key:\n      title: key\n      type: object\n      properties:\n        uid:\n          type: string\n          description: A uuid v4 to identify the API Key. If not specified, it's generated by Meilisearch.\n          example: 01b4bc42-eb33-4041-b481-254d00cce834\n        key:\n          type: string\n          description: The derived key to use in the Authorization header to authorize requests. Generated by Meilisearch with an HMAC, using an SHA-256 hash, of the uid and the master key.\n          example: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4\n          readOnly: true\n        actions:\n          type: array\n          description: 'A list of actions permitted for the key. [\"*\"] for all actions.'\n          uniqueItems: false\n          items:\n            type: string\n            example: documents.add\n            enum:\n              - search\n              - documents.add\n              - documents.get\n              - documents.delete\n              - indexes.create\n              - indexes.get\n              - indexes.update\n              - indexes.delete\n              - indexes.swap\n              - tasks.get\n              - tasks.cancel\n              - tasks.delete\n              - settings.get\n              - settings.update\n              - stats.get\n              - dumps.create\n              - version\n              - keys.get\n              - keys.create\n              - keys.update\n              - keys.delete\n        indexes:\n          type: array\n          description: 'A list of accesible indexes permitted for the key. [\"*\"] for all indexes.'\n          items:\n            type: string\n            example: movies\n        name:\n          type:\n            - string\n            - 'null'\n          description: A human-readable name for the key. null if empty.\n          default: null\n        description:\n          type:\n            - string\n            - 'null'\n          description: A description for the key. null if empty.\n          default: null\n        expiresAt:\n          type:\n            - string\n            - 'null'\n          description: Represent the expiration date and time as RFC 3339 format. null equals to no expiration time.\n        createdAt:\n          type: string\n          description: Represent the date and time as RFC 3339 format when the API key has been created. Generated by Meilisearch.\n          example: '2021-11-12T10:00:00Z'\n          readOnly: true\n        updatedAt:\n          type:\n            - string\n            - 'null'\n          description: Represent the date and time as RFC 3339 format when the API key has been updated. Generated by Meilisearch.\n          default: null\n          readOnly: true\n      required:\n        - actions\n        - indexes\n        - expiresAt\n      description: API keys are stored and managed by the master key holder and the default admin key holder. These are the keys used by the technical teams to interact with Meilisearch at the level of the client/server code. API keys can have restrictions on which methods can be accessed via an actions list; they can also expiresAt a specific date time and be restricted to a specific set of indexes.\n    swapOperation:\n      type: object\n      properties:\n        indexes:\n          type: array\n          description: The two indexUids to swap in the given operation.\n      required:\n        - indexes\n    swapIndexes:\n      type: array\n      description: Array of swap operations that will be processed atomically.\n      required: true\n      items:\n        $ref: '#/components/schemas/swapOperation'\n  parameters:\n    indexUid:\n      name: indexUid\n      in: path\n      description: Index Unique Identifier\n      required: true\n      schema:\n        type: string\n        example: movies\n    documentId:\n      name: documentId\n      in: path\n      description: The document identifier\n      required: true\n      schema:\n        type: any\n    taskUid:\n      name: taskUid\n      in: path\n      description: The task identifier\n      required: true\n      schema:\n        type: integer\n    taskFilterUids:\n      name: uids\n      in: query\n      description: Permits to filter tasks by their uid. By default, when the `uids` query parameter is not set, all task uids are returned. It's possible to specify several uids by separating them with the `,` character.\n      required: false\n      schema:\n        type: number\n    taskFilterIndexUids:\n      name: indexUids\n      in: query\n      description: Permits to filter tasks by their related index. By default, when `indexUids` query parameter is not set, the tasks of all the indexes are returned. It is possible to specify several indexes by separating them with the `,` character.\n      required: false\n      schema:\n        type: string\n    taskFilterTypes:\n      name: types\n      in: query\n      description: Permits to filter tasks by their related type. By default, when `types` query parameter is not set, all task types are returned. It's possible to specify several types by separating them with the `,` character.\n      required: false\n      schema:\n        type: string\n    taskFilterStatuses:\n      name: statuses\n      in: query\n      description: Permits to filter tasks by their status. By default, when `statuses` query parameter is not set, all task statuses are returned. It's possible to specify several statuses by separating them with the `,` character.\n      required: false\n      schema:\n        type: string\n    taskFilterBeforeEnqueuedAt:\n      name: beforeEnqueuedAt\n      in: query\n      description: Permits to filter tasks based on their enqueuedAt time. Matches tasks enqueued before the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterAfterEnqueuedAt:\n      name: afterEnqueuedAt\n      in: query\n      description: Permits to filter tasks based on their enqueuedAt time. Matches tasks enqueued after the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterBeforeStartedAt:\n      name: beforeStartedAt\n      in: query\n      description: Permits to filter tasks based on their startedAt time. Matches tasks started before the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterAfterStartedAt:\n      name: afterStartedAt\n      in: query\n      description: Permits to filter tasks based on their startedAt time. Matches tasks started after the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterBeforeFinishedAt:\n      name: beforeFinishedAt\n      in: query\n      description: Permits to filter tasks based on their finishedAt time. Matches tasks finished before the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterAfterFinishedAt:\n      name: afterFinishedAt\n      in: query\n      description: Permits to filter tasks based on their finishedAt time. Matches tasks finished after the given date. Supports RFC 3339 date format.\n      required: false\n      schema:\n        type: string\n    taskFilterCanceledBy:\n      name: canceledBy\n      in: query\n      description: Permits to filter tasks using the uid of the task that canceled them. It's possible to specify several task uids by separating them with the `,` character.\n      required: false\n      schema:\n        type: string\n    primaryKey:\n      name: primaryKey\n      in: query\n      description: |\n        The [primary key](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key) of the documents. primaryKey is optional.\n        If you want to set the primary key of your index through this route, it only has to be done the first time you add documents to the index. After which it will be ignored if given.\n      schema:\n        type: string\n    limit:\n      name: limit\n      in: query\n      description: Maximum number of results to return.\n      schema:\n        type: number\n        default: 20\n    offset:\n      name: offset\n      in: query\n      description: Number of results to skip.\n      schema:\n        type: number\n        default: 0\n    page:\n      name: page\n      in: query\n      description: Sets the specific results page.\n      schema:\n        type: number\n        default: 1\n    hitsPerPage:\n      name: hitsPerPage\n      in: query\n      description: Sets the number of results returned for a query. If hitsPerPage is not provided as a query parameter, this parameter is ignored.\n      schema:\n        type: number\n        default: 20\n    from:\n      name: from\n      in: query\n      description: Fetch the next set of results from the given uid.\n      schema:\n        type: number\n    q:\n      name: q\n      in: query\n      description: Query string.\n      schema:\n        type: string\n        example: back to the future\n        default: '\"\"'\n    attributesToRetrieve:\n      name: attributesToRetrieve\n      in: query\n      description: 'Comma-separated list of attributes whose fields will be present in the returned documents. Defaults to the [displayedAttributes list](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) which contains by default all attributes found in the documents.'\n      schema:\n        type: string\n        items:\n          type: string\n        example: 'title,description'\n        default: '*'\n    attributesToHighlight:\n      name: attributesToHighlight\n      in: query\n      description: Comma-separated list of attributes whose values will contain highlighted matching terms. Highlighted attributes are returned in `_formatted` response object.\n      schema:\n        type: string\n        items:\n          type: string\n          default:\n            - ''\n        example: 'title,description'\n    highlightPreTag:\n      name: highlightPreTag\n      in: query\n      required: false\n      description: Specify the tag to put before the highlighted query terms.\n      schema:\n        type: string\n        default: '\u003cem\u003e'\n    highlightPostTag:\n      name: highlightPostTag\n      in: query\n      required: false\n      description: Specify the tag to put after the highlighted query terms.\n      schema:\n        type: string\n        default: '\u003c/em\u003e'\n    attributesToCrop:\n      name: attributesToCrop\n      in: query\n      required: false\n      schema:\n        type: string\n        example: 'overview:10'\n      description: Comma-separated list of attributes whose values have to be cropped. Cropped attributes are returned in `_formatted` response object.\n    cropMarker:\n      name: cropMarker\n      in: query\n      description: Sets the crop marker to apply before and/or after cropped part selected within an attribute defined in `attributesToCrop` parameter.\n      required: false\n      schema:\n        type: string\n        default: '…'\n    cropLength:\n      name: cropLength\n      in: query\n      required: false\n      schema:\n        type: integer\n        example: 5\n        default: 10\n      description: Sets the total number of words to keep around the matched part of an attribute specified in the `attributesToCrop` parameter.\n    facets:\n      name: facets\n      in: query\n      schema:\n        type: string\n        example: 'genres,author'\n      description: 'Comma-separated list of attributes whose fields will be distributed as a facet. If you have [set up filterableAttributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes), you can retrieve the count of matching terms for each facets.[Learn more about facet distribution in the dedicated guide](https://docs.meilisearch.com/reference/features/search_parameters.html#facet-distribution)'\n    showMatchesPosition:\n      name: showMatchesPosition\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: 'false'\n      description: Defines whether an `_matchesPosition` object that contains information about the matches should be returned or not.\n    matchingStrategy:\n      name: matchingStrategy\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - last\n          - all\n        default: 'last'\n      description: Defines which strategy to use to match the query terms within the documents as search results. Two different strategies are available, `last` and `all`. By default, the `last` strategy is chosen.\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: string\n        example: 'price:asc'\n      description: |\n        Fields on which you want to sort the results.\n\n        \u003e warn\n        \u003e Attribute(s) used in `sort` should be declared as sortable attributes. See [Sorting](https://docs.meilisearch.com/reference/features/sorting.html).\n\n        \u003e info\n        \u003e _geoPoint({lat}, {long}) built-in sort rule can be used to sort documents around a geo point.\n    filter:\n      name: filter\n      in: query\n      required: false\n      schema:\n        example: something \u003e 1 AND genres=comedy AND (genres=horror OR title=batman)\n      description: |\n        Attribute(s) to filter on.\n\n        Can be made of 3 syntaxes\n\n        - Nested Array: `[\"something \u003e 1\", \"genres=comedy\", [\"genres=horror\", \"title=batman\"]]`\n        - String: `something \u003e 1 AND genres=comedy AND (genres=horror OR title=batman)`\n        - Mixed: `[\"something \u003e 1 AND genres=comedy\", \"genres=horror OR title=batman\"]`\n\n        \u003e info\n        \u003e _geoRadius({lat}, {lng}, {distance_in_meters}) built-in filter rule can be used to filter documents within a geo circle.\n\n        \u003e warn\n        \u003e Attribute(s) used in `filter` should be declared as filterable attributes. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).\n    fields:\n      name: fields\n      in: query\n      description: 'Comma-separated list of fields to display for an API resource. By default it contains all fields of an API resource.'\n      schema:\n        type: string\n        items:\n          type: string\n        example: 'uid,createdAt'\n        default: '*'\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      schema:\n        type: string\n        enum:\n          - application/json\n      description: Payload content-type\n  responses:\n    '202':\n      description: Accepted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/summarizedTask'\n    '204':\n      description: No Content\n    '401':\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          examples:\n            Unauthorized:\n              value:\n                message: The Authorization header is missing. It must use the bearer authorization method.\n                code: missing_authorization_header\n                type: auth\n                link: 'https://docs.meilisearch.com/errors#missing_authorization_header'\n    '413':\n      description: Payload Too Large\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          examples:\n            Payload Too Large:\n              value:\n                message: The provided payload reached the size limit.\n                code: payload_too_large\n                type: invalid_request\n                link: 'https://docs.meilisearch.com/errors#payload_too_large'\n  securitySchemes:\n    apiKey:\n      type: http\n      in: header\n      scheme: bearer\n      description: |-\n        An API key is a token that you provide when making API calls. Include the token in a header parameter called `Authorization`.\n\n        Example: `Authorization: Bearer 8fece4405662dd830e4cb265e7e047aab2e79672a760a12712d2a263c9003509`\n  examples:\n    202_indexCreation:\n      summary: 202 Accepted indexCreation response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: indexCreation\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_indexUpdate:\n      summary: 202 Accepted indexUpdate response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: indexUpdate\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_indexDeletion:\n      summary: 202 Accepted indexDeletion response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: indexDeletion\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_documentAdditionOrUpdate:\n      summary: 202 Accepted documentAdditionOrUpdate response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: documentAdditionOrUpdate\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_documentDeletion:\n      summary: 202 Accepted documentDeletion response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: documentDeletion\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_settingsUpdate:\n      summary: 202 Accepted settingsUpdate response example\n      value:\n        taskUid: 0\n        indexUid: movies\n        status: enqueued\n        type: settingsUpdate\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_dumpCreation:\n      summary: 202 Accepted dumpCreation response example\n      value:\n        taskUid: 0\n        indexUid: null\n        status: enqueued\n        type: dumpCreation\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_taskCancelation:\n      summary: 202 Accepted taskCancelation response example\n      value:\n        taskUid: 0\n        indexUid: null\n        status: enqueued\n        type: taskCancelation\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_taskDeletion:\n      summary: 202 Accepted taskDeletion response example\n      value:\n        taskUid: 0\n        indexUid: null\n        status: enqueued\n        type: taskDeletion\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n    202_indexSwap:\n      summary: 202 Accepted indexSwap response example\n      value:\n        taskUid: 0\n        indexUid: null\n        status: enqueued\n        type: indexSwap\n        enqueuedAt: '2021-01-01T09:39:00.000000Z'\ntags:\n  - name: Indexes\n    description: |\n      An index is an entity that gathers a set of [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) with its own settings.\n      [Learn more about indexes](https://docs.meilisearch.com/learn/core_concepts/indexes.html).\n  - name: Documents\n    description: |\n      Documents are objects composed of fields that can store any type of data.\n      Each field contains an attribute and its associated value.\n      Documents are stored inside [indexes](https://docs.meilisearch.com/learn/core_concepts/indexes.html).\n      [Learn more about documents](https://docs.meilisearch.com/learn/core_concepts/documents.html).\n  - name: Search\n    description: |\n      Meilisearch exposes 2 routes to perform searches:\n      * A POST route: this is the preferred route when using API authentication, as it allows [preflight request](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) caching and better performances.\n      * A GET route: the usage of this route is discouraged, unless you have good reason to do otherwise (specific caching abilities for example).\n      Other than the differences mentioned above, the two routes are strictly equivalent.\n  - name: Tasks\n    description: |\n      The `tasks` route gives information about the progress of the [asynchronous operations](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html).\n  - name: Keys\n    description: |\n      Manage API `keys` for a Meilisearch instance. Each key has a given set of permissions.\n      You must have the master key or the default admin key to access the `keys` route.\n      [More information about the keys and their rights](https://docs.meilisearch.com/reference/features/security.html).\n  - name: Settings\n    description: |\n      `Settings` is a list of all the __customization__ possible for an index.\n      It is possible to update all the settings in one go or individually with the dedicated routes. Updates in the settings route are __partial__. This means that any parameters not provided in the body will be left unchanged.\n      Updating the settings means overwriting the default settings of Meilisearch. You can reset to default values using the `DELETE` routes.\n  - name: Stats\n    description: |\n      `Stats` gives extended information and metrics about indexes and the Meilisearch database.\n  - name: Health\n    description: |\n      The health check endpoint enables you to periodically test the health of your Meilisearch instance.\n  - name: Version\n    description: |\n      Current version of Meilisearch.\n  - name: Dumps\n    description: |\n      The `dumps` route allows the creation of database dumps. Dumps are `.dump` files that can be used to launch Meilisearch. Dumps are compatible between Meilisearch versions.\n      Creating a dump is also referred to as exporting it, whereas launching Meilisearch with a dump is referred to as importing it.\n      During a [dump export](https://docs.meilisearch.com/reference/api/dump.html#create-a-dump), all indexes of the current instance are exported—together with their documents and settings—and saved as a single `.dump` file.\n      During a dump import, all indexes contained in the indicated `.dump` file are imported along with their associated documents and settings. Any existing index with the same uid as an index in the dump file will be overwritten.\n      Dump imports are [performed at launch](https://docs.meilisearch.com/reference/features/configuration.html#import-dump) using an option.\npaths:\n  /dumps:\n    post:\n      operationId: dumps.create\n      summary: Create a Dump\n      description: |\n        Triggers a dump creation process. Once the process is complete, a dump is created in the [dumps directory](https://docs.meilisearch.com/reference/features/configuration.html#dumps-destination). If the dumps directory does not exist yet, it will be created.\n      tags:\n        - Dumps\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_dumpCreation'\n        '401':\n          $ref: '#/components/responses/401'\n  /health:\n    get:\n      operationId: health.check\n      summary: Get health\n      description: Get health of the Meilisearch instance.\n      tags:\n        - Health\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - available\n                required:\n                  - status\n              examples:\n                '200':\n                  value:\n                    status: available\n      x-internal: false\n  /indexes:\n    get:\n      operationId: indexes.list\n      summary: List Indexes\n      description: List all indexes.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/index'\n                  limit:\n                    $ref: '#/components/schemas/limit'\n                  offset:\n                    $ref: '#/components/schemas/offset'\n                  total:\n                    $ref: '#/components/schemas/total'\n                required:\n                  - results\n                  - limit\n                  - offset\n                  - total\n              examples:\n                Example:\n                  value:\n                    results:\n                      - uid: movies\n                        primaryKey: movie_id\n                        createdAt: '2019-11-20T09:40:33.711324Z'\n                        updatedAt: '2019-11-20T09:40:33.711324Z'\n                    limit: 1\n                    offset: 0\n                    total: 1\n        '401':\n          $ref: '#/components/responses/401'\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n    post:\n      operationId: indexes.create\n      summary: Create Index\n      description: Create an index.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uid:\n                  type: string\n                primaryKey:\n                  type: string\n              additionalProperties: false\n              required:\n                - uid\n            examples:\n              Example:\n                value:\n                  uid: movies\n                  primaryKey: movie_id\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_indexCreation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n              examples:\n                Index already exists:\n                  value:\n                    message: 'Index `:indexUid` already exists.'\n                    code: index_already_exists\n                    type: invalid_request\n                    link: 'https://docs.meilisearch.com/errors#index_already_exists'\n                Invalid Index Uid:\n                  value:\n                    message: '`:indexUid` is not a valid index uid. Index uid can be an integer or a string containing only alphanumeric characters, hyphens (-) and underscores (_).'\n                    code: invalid_index_uid\n                    type: invalid_request\n                    link: 'https://docs.meilisearch.com/errors#invalid_index_uid'\n        '401':\n          $ref: '#/components/responses/401'\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n  '/indexes/{indexUid}':\n    get:\n      operationId: indexes.get\n      summary: Get Index\n      description: Get information about an index.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/index'\n              examples:\n                Example:\n                  value:\n                    uid: movies\n                    primaryKey: movie_id\n                    createdAt: '2019-11-20T09:40:33.711324Z'\n                    updatedAt: '2019-11-20T09:40:33.711324Z'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    patch:\n      operationId: indexes.update\n      summary: Update Index\n      description: Update an index. Specify a primaryKey if it doesn't already exists yet.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                primaryKey:\n                  type: string\n              additionalProperties: false\n              required:\n                - primaryKey\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_indexUpdate'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n              examples:\n                Primary Key Already Present:\n                  value:\n                    message: 'Index `:indexUid` already has a primary key.'\n                    code: index_primary_key_already_exists\n                    type: invalid_request\n                    link: 'https://docs.meilisearch.com/errors#index_primary_key_already_exists'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.remove\n      summary: Delete Index\n      description: Delete an index.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_indexDeletion'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/documents':\n    get:\n      operationId: indexes.documents.list\n      summary: Get Documents\n      description: |\n        Get [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) by batch.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/document'\n                  limit:\n                    $ref: '#/components/schemas/limit'\n                  offset:\n                    $ref: '#/components/schemas/offset'\n                  total:\n                    $ref: '#/components/schemas/total'\n                required:\n                  - results\n                  - limit\n                  - offset\n                  - total\n              examples:\n                Example:\n                  value:\n                    results:\n                      - id: 25684\n                        title: American Ninja 5\n                        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n                        release_date: 725846400\n                      - id: 45881\n                        title: The Bridge of San Luis Rey\n                        poster: 'https://image.tmdb.org/t/p/w500/4X7quIcdkc24Cveg5XdpfRqxtYA.jpg'\n                        overview: \"The Bridge of San Luis Rey is American author Thornton Wilder's second novel, first published in 1927 to worldwide acclaim. It tells the story of several interrelated people who die in the collapse of an Inca rope-fiber suspension bridge in Peru, and the events that lead up to their being on the bridge.[ A friar who has witnessed the tragic accident then goes about inquiring into the lives of the victims, seeking some sort of cosmic answer to the question of why each had to die. The novel won the Pulitzer Prize in 1928.\"\n                        release_date: 1072915200\n                    limit: 20\n                    offset: 0\n                    total: 2\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/fields'\n    post:\n      operationId: indexes.documents.create\n      summary: Add or replace documents\n      description: |\n        Add a list of [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) or replace them if they already exist.\n\n        If you send an already existing document (same [id](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key)) the whole existing document will be overwritten by the new document. Fields previously in the document not present in the new document are removed.\n\n        For a partial update of the document see Add or update documents route.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n\n        \u003e info\n        \u003e Use the reserved `_geo` object to add geo coordinates to a document. `_geo` is an object made of `lat` and `lng` field.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items: null\n            examples: {}\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_documentAdditionOrUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '413':\n          $ref: '#/components/responses/413'\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n              - application/x-ndjson\n          in: header\n          name: Content-Type\n          required: true\n          description: The content-type associated with the format to be indexed\n    put:\n      operationId: indexes.documents.upsert\n      summary: Add or update documents\n      description: |-\n        Add a list of documents or update them if they already exist.\n\n        If you send an already existing document (same [id](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key)) the old document will be only partially updated according to the fields of the new document. Thus, any fields not present in the new document are kept and remained unchanged.\n\n        To completely overwrite a document, see Add or replace documents route.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n\n        \u003e info\n        \u003e Use the reserved `_geo` object to add geo coordinates to a document. `_geo` is an object made of `lat` and `lng` field.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/document'\n            examples:\n              Example:\n                value:\n                  - id: 25684\n                    title: American Ninja 5\n                    poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                    overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n                    release_date: 725846400\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_documentAdditionOrUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '413':\n          $ref: '#/components/responses/413'\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n              - application/x-ndjson\n          in: header\n          name: Content-Type\n          description: The content-type associated with the format to be indexed\n          required: true\n    delete:\n      operationId: indexes.documents.removeAll\n      summary: Delete all documents\n      description: Delete all documents in the specified index.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_documentDeletion'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/documents/delete-batch':\n    post:\n      operationId: indexes.documents.removeBatch\n      summary: Delete documents\n      description: Delete a selection of documents based on array of document id's.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              description: An array of document ids to delete\n              items:\n                type:\n                  - string\n                  - number\n            examples:\n              Example:\n                value:\n                  - 1\n                  - 2\n                  - 3\n                  - a string id\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_documentDeletion'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/documents/{documentId}':\n    get:\n      operationId: indexes.documents.get\n      summary: Get one document\n      description: 'Get one [document](https://docs.meilisearch.com/learn/core_concepts/documents.html) using its unique id.'\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document'\n              examples: {}\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/fields'\n    delete:\n      operationId: indexes.documents.remove\n      summary: Delete one document\n      description: Delete one document based on its unique id.\n      tags:\n        - Documents\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_documentDeletion'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n      - $ref: '#/components/parameters/documentId'\n  '/indexes/{indexUid}/search':\n    get:\n      operationId: indexes.documents.searchGet\n      summary: Search\n      description: |\n        Search for documents matching a specific query in the given index.\n\n        This route should only be used when no API key is required. If an API key is required, use the POST route instead.\n      tags:\n        - Search\n      security:\n        - apiKey: []\n      parameters:\n        - $ref: '#/components/parameters/q'\n        - $ref: '#/components/parameters/attributesToRetrieve'\n        - $ref: '#/components/parameters/attributesToHighlight'\n        - $ref: '#/components/parameters/highlightPreTag'\n        - $ref: '#/components/parameters/highlightPostTag'\n        - $ref: '#/components/parameters/attributesToCrop'\n        - $ref: '#/components/parameters/cropMarker'\n        - $ref: '#/components/parameters/cropLength'\n        - $ref: '#/components/parameters/facets'\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/hitsPerPage'\n        - $ref: '#/components/parameters/showMatchesPosition'\n        - $ref: '#/components/parameters/matchingStrategy'\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/searchResponse'\n              examples:\n                Example:\n                  value:\n                    hits:\n                      - id: 25684\n                        title: American Ninja 5\n                        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n                        release_date: 725846400\n                        _formatted:\n                          id: 25684\n                          title: American Ninja 5\n                          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                          overview: 'When a scientists daughter is kidnapped, American \u003cem\u003eNinja\u003c/em\u003e, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the \u003cem\u003eninja\u003c/em\u003e.'\n                          release_date: 725846400\n                        _matchesPosition:\n                          overview:\n                            - start: 49\n                              length: 5\n                            - start: 155\n                              length: 5\n                    limit: 0\n                    offset: 0\n                    estimatedTotalHits: 0\n                    query: string\n                    processingTimeMs: 0\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    post:\n      operationId: indexes.documents.search\n      summary: Search\n      description: |\n        Search for documents matching a specific query in the given index.\n\n        This is the preferred route to perform search when an API key is required, as it allows for [preflight requests](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) to be cached. Caching preflight requests improves considerably the speed of the search.\n      tags:\n        - Search\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                q:\n                  type: string\n                  description: Query string.\n                  default: '\"\"'\n                  example: '\"Back to the future\"'\n                attributesToRetrieve:\n                  type: array\n                  description: 'Array of attributes whose fields will be present in the returned documents. Defaults to the [displayedAttributes list](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) which contains by default all attributes found in the documents.'\n                  items:\n                    type: string\n                    example: '[\"title\", \"overview\"]'\n                    default: '[\"*\"]'\n                attributesToHighlight:\n                  type: array\n                  description: Array of attributes whose values will contain highlighted matching terms. Highlighted attributes are returned in `_formatted` response object.\n                  items:\n                    type: string\n                    example: '[\"title\", \"overview\"]'\n                    default: '[]'\n                highlightPreTag:\n                  type: string\n                  description: Specify the tag to put before the highlighted query terms.\n                  example: '\u003cmark\u003e'\n                  default: '\u003cem\u003e'\n                highlightPostTag:\n                  type: string\n                  description: Specify the tag to put after the highlighted query terms.\n                  example: '\u003c/mark\u003e'\n                  default: '\u003c/em\u003e'\n                attributesToCrop:\n                  type: array\n                  description: Array of attributes whose values have to be cropped. Cropped attributes are returned in `_formatted` response object.\n                  items:\n                    type: string\n                    example: '[\"overview\", \"author\"]'\n                    default: '[]'\n                cropMarker:\n                  type: string\n                  description: Sets the crop marker to apply before and/or after cropped part selected within an attribute defined in `attributesToCrop` parameter.\n                  default: '…'\n                cropLength:\n                  type: number\n                  description: Sets the total number of **words** to keep for the cropped part of an attribute specified in the `attributesToCrop` parameter.\n                  default: 10\n                showMatchesPosition:\n                  type: boolean\n                  description: Defines whether an `_matchesPosition` object that contains information about the matches should be returned or not.\n                  default: false\n                matchingStrategy:\n                  type: string\n                  description: Defines which strategy to use to match the query terms within the documents as search results. Two different strategies are available, `last` and `all`. By default, the `last` strategy is chosen.\n                  default: 'last'\n                filter:\n                  $ref: '#/components/schemas/filter'\n                facets:\n                  type: array\n                  description: 'Array of attributes whose fields will be distributed as a facet. If you have [set up filterableAttributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes), you can retrieve the count of matching terms for each [facets](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html#faceted-search).[Learn more about facet distribution in the dedicated guide](https://docs.meilisearch.com/reference/features/search_parameters.html#facet-distribution)'\n                  items:\n                    type: string\n                    example: '[\"genres\", \"author\"]'\n                    default: '[]'\n                offset:\n                  type: number\n                  description: Number of documents to skip.\n                  default: 0\n                limit:\n                  type: number\n                  description: Maximum number of documents returned.\n                  default: 20\n                page:\n                  type: number\n                  description: The specific search results page to fetch.\n                  example: 1\n                hitsPerPage:\n                  type: number\n                  description: Number of returned results per page.\n                  example: 20\n                sort:\n                  $ref: '#/components/schemas/sort'\n            examples:\n              Example:\n                value:\n                  q: Harry\n                  offset: 0\n                  limit: 20\n                  filter: (genres = Horror AND genres = Mystery) OR release_date \u003e 523242000\n                  facets:\n                    - genres\n                    - author\n                  attributesToRetrieve:\n                    - title\n                    - overview\n                  attributesToCrop:\n                    - overview\n                  cropLength: 20\n                  attributesToHighlight:\n                    - overview\n                  showMatchesPosition: true\n                  wordsMatchingStrategy: all\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/searchResponse'\n              examples:\n                Example:\n                  value:\n                    hits:\n                      - id: 25684\n                        title: American Ninja 5\n                        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'\n                        release_date: 725846400\n                        _formatted:\n                          id: 25684\n                          title: American Ninja 5\n                          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'\n                          overview: 'When a scientists daughter is kidnapped, American \u003cem\u003eNinja\u003c/em\u003e, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the \u003cem\u003eninja\u003c/em\u003e.'\n                          release_date: 725846400\n                        _matchesPosition:\n                          overview:\n                            - start: 49\n                              length: 5\n                            - start: 155\n                              length: 5\n                    limit: 0\n                    offset: 0\n                    estimatedTotalHits: 0\n                    query: string\n                    processingTimeMs: 0\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings':\n    get:\n      operationId: indexes.settings.get\n      summary: Get settings\n      description: |\n        Get the settings of an index.\n\n        [Learn more about the settings](https://docs.meilisearch.com/reference/features/settings.html).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  rankingRules:\n                    $ref: '#/components/schemas/rankingRules'\n                  distinctAttribute:\n                    $ref: '#/components/schemas/distinctAttribute'\n                  searchableAttributes:\n                    $ref: '#/components/schemas/searchableAttributes'\n                  displayedAttributes:\n                    $ref: '#/components/schemas/displayedAttributes'\n                  stopWords:\n                    $ref: '#/components/schemas/stopWords'\n                  synonyms:\n                    $ref: '#/components/schemas/synonyms'\n                  filterableAttributes:\n                    $ref: '#/components/schemas/filterableAttributes'\n                  sortableAttributes:\n                    $ref: '#/components/schemas/sortableAttributes'\n                  typoTolerance:\n                    $ref: '#/components/schemas/typoTolerance'\n                  pagination:\n                    $ref: '#/components/schemas/pagination'\n                  faceting:\n                    $ref: '#/components/schemas/faceting'\n                required:\n                  - rankingRules\n                  - distinctAttribute\n                  - searchableAttributes\n                  - displayedAttributes\n                  - stopWords\n                  - synonyms\n                  - filterableAttributes\n                  - sortableAttributes\n                  - typoTolerance\n                  - pagination\n                  - faceting\n              examples:\n                Example:\n                  value:\n                    rankingRules:\n                      - words\n                      - typo\n                      - proximity\n                      - attribute\n                      - sort\n                      - exactness\n                      - 'release_date:asc'\n                    distinctAttribute: ean13\n                    searchableAttributes:\n                      - title\n                      - description\n                      - genre\n                    displayedAttributes:\n                      - title\n                      - description\n                      - genre\n                      - release_date\n                    stopWords:\n                      - of\n                      - the\n                      - to\n                    synonyms:\n                      wolverine:\n                        - xmen\n                        - logan\n                      logan:\n                        - wolverine\n                        - xmen\n                      wow:\n                        - world of warcraft\n                    filterableAttributes:\n                      - genres\n                      - director\n                    sortableAttributes:\n                      - price\n                      - author\n                      - title\n                    typoTolerance:\n                      enabled: true\n                      disableOnAttributes:\n                        - author\n                        - price\n                      disableOnWords:\n                        - Tolkien\n                      minWordSizeForTypos:\n                        oneTypo: 4\n                        twoTypos: 8\n                    pagination:\n                      maxTotalHits: 1000\n                    faceting:\n                      maxValuesPerFacet: 100\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    patch:\n      operationId: indexes.settings.update\n      summary: Update settings\n      description: |\n        Update the settings of an index.\n\n        Updates in the settings route are partial. This means that any parameters not provided in the body will be left unchanged.\n        [Learn more about the settings in this guide](https://docs.meilisearch.com/reference/features/settings.html).\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                synonyms:\n                  $ref: '#/components/schemas/synonyms'\n                stopWords:\n                  $ref: '#/components/schemas/stopWords'\n                rankingRules:\n                  $ref: '#/components/schemas/rankingRules'\n                distinctAttribute:\n                  $ref: '#/components/schemas/distinctAttribute'\n                searchableAttributes:\n                  $ref: '#/components/schemas/searchableAttributes'\n                displayedAttributes:\n                  $ref: '#/components/schemas/displayedAttributes'\n                filterableAttributes:\n                  $ref: '#/components/schemas/filterableAttributes'\n                sortableAttributes:\n                  $ref: '#/components/schemas/sortableAttributes'\n                typoTolerance:\n                  $ref: '#/components/schemas/typoTolerance'\n                pagination:\n                  $ref: '#/components/schemas/pagination'\n                faceting:\n                  $ref: '#/components/schemas/faceting'\n            examples:\n              Example:\n                value:\n                  synonyms:\n                    wolverine:\n                      - xmen\n                      - logan\n                    logan:\n                      - wolverine\n                      - xmen\n                    wow:\n                      - world of warcraft\n                  stopWords:\n                    - of\n                    - the\n                    - to\n                  rankingRules:\n                    - words\n                    - typo\n                    - proximity\n                    - attribute\n                    - sort\n                    - exactness\n                    - 'release_date:asc'\n                  distinctAttribute: ean13\n                  searchableAttributes:\n                    - title\n                    - description\n                    - genre\n                  displayedAttributes:\n                    - title\n                    - description\n                    - genre\n                    - release_date\n                  filterableAttributes: []\n                  sortableAttributes: null\n                  typoTolerance:\n                    enabled: false\n                    disableOnAttributes:\n                      - title\n                      - author\n                    disableOnWords:\n                      - Tolkien\n                    minWordSizeForTypos:\n                      oneTypo: 4\n                      twoTypos: 8\n                  pagination:\n                    maxTotalHits: 1000\n                  faceting:\n                    maxValuesPerFacet: 100\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.reset\n      summary: Reset settings\n      description: |\n        Reset the settings of an index.\n\n        All settings will be reset to their default value.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/synonyms':\n    get:\n      operationId: indexes.settings.synonyms.get\n      summary: Get synonyms\n      description: |\n        Get the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/synonyms'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.synonyms.update\n      summary: Update synonyms\n      description: |\n        Update the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index. Synonyms are [normalized](https://docs.meilisearch.com/reference/features/synonyms.html#normalization).\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/synonyms'\n            examples: {}\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.synonyms.reset\n      summary: Reset synonyms\n      description: |\n        Reset the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index to its default value (`{}`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/sortable-attributes':\n    get:\n      operationId: indexes.settings.sortable-attributes.get\n      summary: Get sortable attributes\n      description: |\n        Get the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sortableAttributes'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.sortable-attributes.update\n      summary: Update sortable attributes\n      description: |\n        Update the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index.\n\n        \u003e info\n        \u003e In order to enable sorting capabilities on geographic data, the `_geo` field must be added as a sortableAttribute.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sortableAttributes'\n            examples: {}\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.sortable-attributes.reset\n      summary: Reset sortable attributes\n      description: |\n        Reset the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index to its default value (`[]`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - name: indexUid\n        in: path\n        description: Index Unique Identifier\n        required: true\n        schema:\n          type: string\n          example: movies\n  '/indexes/{indexUid}/settings/stop-words':\n    get:\n      operationId: indexes.settings.stopWords.get\n      summary: Get stop-words\n      description: |\n        Get the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stopWords'\n              examples: {}\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.stopWords.update\n      summary: Update stop-words\n      description: |\n        Update the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index.\n\n        If a list of stop-words already exists it will be overwritten (replaced).\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/stopWords'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.stopWords.reset\n      summary: Reset stop-words\n      description: |\n        Reset the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index to its default value (`[]`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/ranking-rules':\n    get:\n      operationId: indexes.settings.rankingRules.get\n      summary: Get ranking rules\n      description: |\n        Get the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/rankingRules'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.rankingRules.update\n      summary: Update ranking rules\n      description: |\n        Update the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index.\n\n        To add your own ranking rule, you have to communicate either `asc` for ascending order or `desc` for descending order followed by the field name in brackets.\n\n        * To apply an ascending custom ranking rule: `attribute_name:asc`\n        * To apply a descending custom ranking rule: `attribute_name:desc`\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/rankingRules'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.rankingRules.reset\n      summary: Reset ranking rules\n      description: |\n        Reset the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index to its default value.\n\n        Default Value:\n        ```json\n        [\"words\", \"typo\", \"proximity\", \"attribute\", \"sort\", \"exactness\"]\n        ```\n\n        To remove all ranking rules, which is not recommended in any case, you would send an empty array to the add or replace ranking rules route.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/typo-tolerance':\n    get:\n      operationId: indexes.settings.typoTolerance.get\n      summary: Get typo tolerance configuration\n      description: |\n        Get the typo tolerance configuration of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/typoTolerance'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    patch:\n      operationId: indexes.settings.typoTolerance.update\n      summary: Update typo tolerance settings\n      description: |\n        Update the typo tolerance configuration of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/typoTolerance'\n            examples: {}\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.typoTolerance.reset\n      summary: Reset typo tolerance settings to the default configuration\n      description: |\n        Reset the typo tolerance settings of an index to its default configuration.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/pagination':\n    get:\n      operationId: indexes.settings.pagination.get\n      summary: Get pagination configuration\n      description: |\n        Get the pagination configuration of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pagination'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    patch:\n      operationId: indexes.settings.pagination.update\n      summary: Update pagination settings\n      description: |\n        Update the pagination configuration of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/pagination'\n            examples: {}\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.pagination.reset\n      summary: Reset pagination settings to the default configuration\n      description: |\n        Reset the pagination settings of an index to its default configuration.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/faceting':\n    get:\n      operationId: indexes.settings.faceting.get\n      summary: Get faceting configuration\n      description: |\n        Get the faceting configuration of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/faceting'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    patch:\n      operationId: indexes.settings.faceting.update\n      summary: Update faceting settings\n      description: |\n        Update the typo tolerance faceting of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/faceting'\n            examples: {}\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.faceting.reset\n      summary: Reset faceting settings to the default configuration\n      description: |\n        Reset the faceting settings of an index to its default configuration.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/filterable-attributes':\n    get:\n      operationId: indexes.settings.filterableAttributes.get\n      summary: Get Filterable Attributes\n      description: |\n        Get the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/filterableAttributes'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.filterableAttributes.update\n      summary: Update Filterable Attributes\n      description: |\n        Update the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index.\n\n        \u003e info\n        \u003e In order to enable filtering capabilities on geographic data, the `_geo` field must be added as a filterableAttribute.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/filterableAttributes'\n        description: ''\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.filterableAttributes.reset\n      summary: Reset Filterable Attributes\n      description: |\n        Reset the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index to its default value (`[]`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/distinct-attribute':\n    get:\n      operationId: indexes.settings.distinctAttribute.get\n      summary: Get distinct attribute\n      description: |\n        Get the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/distinctAttribute'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.distinctAttribute.update\n      summary: Update distinct attribute\n      description: |\n        Update the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/distinctAttribute'\n        description: ''\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.distinctAttribute.reset\n      summary: Reset distinct attribute\n      description: |\n        Reset the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index to its default value (`null`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/searchable-attributes':\n    get:\n      operationId: indexes.settings.searchableAttributes.get\n      summary: Get searchable attributes\n      description: |\n        Get the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/searchableAttributes'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.searchableAttributes.update\n      summary: Update searchable attributes\n      description: |\n        Update the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/searchableAttributes'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.searchableAttributes.reset\n      summary: Reset searchable attributes\n      description: |\n        Reset the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index to its default value (`['*']`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/settings/displayed-attributes':\n    get:\n      operationId: indexes.settings.displayedAttributes.get\n      summary: Get displayed attributes\n      description: |\n        Get the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/displayedAttributes'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    put:\n      operationId: indexes.settings.displayedAttributes.update\n      summary: Update displayed attributes\n      description: |\n        Update the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index.\n\n        \u003e info\n        \u003e If the provided index does not exist, it will be created.\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/displayedAttributes'\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n    delete:\n      operationId: indexes.settings.displayedAttributes.reset\n      summary: Reset displayed attributes\n      description: |\n        Reset the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index to its default value (`['*']`).\n      tags:\n        - Settings\n      security:\n        - apiKey: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_settingsUpdate'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  '/indexes/{indexUid}/stats':\n    get:\n      operationId: indexes.stats.get\n      summary: Get stat of an index\n      description: Get stats of an index.\n      tags:\n        - Stats\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/stats'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n    parameters:\n      - $ref: '#/components/parameters/indexUid'\n  /keys:\n    get:\n      operationId: keys.list\n      summary: Get API Keys\n      description: |\n        Get API Keys\n      tags:\n        - Keys\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/key'\n                  limit:\n                    $ref: '#/components/schemas/limit'\n                  offset:\n                    $ref: '#/components/schemas/offset'\n                  total:\n                    $ref: '#/components/schemas/total'\n                required:\n                  - results\n                  - limit\n                  - offset\n                  - total\n              examples:\n                example-1:\n                  value:\n                    results:\n                      - uid: 01b4bc42-eb33-4041-b481-254d00cce834\n                        key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4\n                        name: An API Key\n                        description: null\n                        actions:\n                          - documents.add\n                        indexes:\n                          - movies\n                        expiresAt: '2022-11-12T10:00:00Z'\n                        createdAt: '2021-11-12T10:00:00Z'\n                        updatedAt: '2021-11-12T10:00:00Z'\n                    limit: 20\n                    offset: 0\n                    total: 1\n        '401':\n          $ref: '#/components/responses/401'\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n    post:\n      summary: Create an API Key\n      operationId: keys.create\n      tags:\n        - Keys\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/key'\n              examples:\n                Create an API Key:\n                  value:\n                    uid: 01b4bc42-eb33-4041-b481-254d00cce834\n                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4\n                    name: Indexing Products API key\n                    description: null\n                    actions:\n                      - documents.add\n                    indexes:\n                      - products\n                    expiresAt: '2021-11-13T00:00:00Z'\n                    createdAt: '2021-11-12T10:00:00Z'\n                    updatedAt: '2021-11-12T10:00:00Z'\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/key'\n            examples:\n              API Key Creation:\n                value:\n                  name: Indexing Products API key\n                  actions:\n                    - documents.add\n                  indexes:\n                    - products\n                  expiresAt: '2021-11-13T00:00:00Z'\n  '/keys/{uid_or_key}':\n    get:\n      summary: Get an API key from its uid or key field.\n      tags:\n        - Keys\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/key'\n              examples:\n                Fetch an API Key details:\n                  value:\n                    uid: 01b4bc42-eb33-4041-b481-254d00cce834\n                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4\n                    name: Indexing Products API key\n                    description: null\n                    actions:\n                      - documents.add\n                    indexes:\n                      - products\n                    expiresAt: '2021-11-13T00:00:00Z'\n                    createdAt: '2021-11-12T10:00:00Z'\n                    updatedAt: '2021-11-12T10:00:00Z'\n      operationId: keys.get\n      description: Get an API Key\n      parameters:\n        - schema:\n            type: string\n          name: uidOrKey\n          in: path\n          required: true\n          description: The uid or the key field value of the API Key.\n    delete:\n      summary: Delete an API key specified by its uid or key field.\n      operationId: keys.delete\n      tags:\n        - Keys\n      security:\n        - apiKey: []\n      responses:\n        '204':\n          $ref: '#/components/responses/204'\n      description: ''\n    patch:\n      summary: Update an API key specified by its uid or key field.\n      operationId: keys.update\n      tags:\n        - Keys\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/key'\n              examples:\n                Patch an API Key Response:\n                  value:\n                    uid: 01b4bc42-eb33-4041-b481-254d00cce834\n                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4\n                    name: Indexing Products API key\n                    description: null\n                    actions:\n                      - documents.add\n                    indexes:\n                      - products\n                    expiresAt: '2021-11-13T00:00:00Z'\n                    createdAt: '2021-11-12T10:00:00Z'\n                    updatedAt: '2021-11-12T15:00:00Z'\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      description: Update an API Key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type:\n                    - string\n                    - 'null'\n                description:\n                  type:\n                    - string\n                    - 'null'\n              additionalProperties: false\n            examples:\n              Patch an API Key Request:\n                value:\n                  description: Indexing Products API key\n  /stats:\n    get:\n      operationId: stats.list\n      summary: Get stats of all indexes\n      description: Get stats of all indexes.\n      tags:\n        - Stats\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  databaseSize:\n                    type: number\n                  lastUpdate:\n                    $ref: '#/components/schemas/timestamp'\n                  indexes:\n                    type: object\n                    properties:\n                      indexUid:\n                        $ref: '#/components/schemas/stats'\n                required:\n                  - databaseSize\n                  - lastUpdate\n                  - indexes\n              examples:\n                Stats Of All Indexes:\n                  value:\n                    databaseSize: 567\n                    lastUpdate: '2019-11-20T09:40:33.711324Z'\n                    indexes:\n                      movies:\n                        numberOfDocuments: 10\n                        isIndexing: true\n                        fieldDistribution:\n                          genre: 10\n                          author: 9\n        '401':\n          $ref: '#/components/responses/401'\n  /version:\n    get:\n      operationId: version.get\n      summary: Get version of Meilisearch\n      description: Get version of Meilisearch.\n      tags:\n        - Version\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  commitSha:\n                    type: string\n                    example: b46889b5f0f2f8b91438a08a358ba8f05fc09fc1\n                  commitDate:\n                    type: string\n                    example: '2021-07-08'\n                  pkgVersion:\n                    type: string\n                    example: 0.1.1\n                additionalProperties: false\n                required:\n                  - commitSha\n                  - commitDate\n                  - pkgVersion\n              examples:\n                Example:\n                  value:\n                    commitSha: b46889b5f0f2f8b91438a08a358ba8f05fc09fc1\n                    commitDate: '2021-07-08'\n                    pkgVersion: 0.23.0\n        '401':\n          $ref: '#/components/responses/401'\n  /tasks:\n    get:\n      summary: Get all tasks\n      description: 'Get all [tasks](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html)'\n      tags:\n        - tasks\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/task'\n                  limit:\n                    $ref: '#/components/schemas/limit'\n                  from:\n                    $ref: '#/components/schemas/from'\n                  next:\n                    $ref: '#/components/schemas/next'\n                required:\n                  - results\n                  - limit\n                  - from\n                  - next\n              examples:\n                Example:\n                  value:\n                    results:\n                      - uid: 1\n                        indexUid: movies\n                        status: succeeded\n                        type: documentAdditionOrUpdate\n                        canceledBy: null\n                        details:\n                          receivedDocuments: 79000\n                          indexedDocuments: 79000\n                        error: null\n                        duration: PT1S\n                        enqueuedAt: '2021-01-01T09:39:00.000000Z'\n                        startedAt: '2021-01-01T09:39:01.000000Z'\n                        finishedAt: '2021-01-01T09:39:02.000000Z'\n                      - uid: 0\n                        indexUid: movies_Review\n                        status: failed\n                        type: documentAdditionOrUpdate\n                        canceledBy: null\n                        details:\n                          receivedDocuments: 67493\n                          indexedDocuments: 0\n                        error:\n                          message: 'Document does not have a `:primaryKey` attribute: `:documentRepresentation`.'\n                          code: missing_document_id\n                          type: invalid_request\n                          link: 'https://docs.meilisearch.com/errors#missing_document_id'\n                        duration: PT5S\n                        enqueuedAt: '2021-01-01T09:38:00.000000Z'\n                        startedAt: '2021-01-01T09:38:02.000000Z'\n                        finishedAt: '2021-01-01T09:38:07.000000Z'\n                    limit: 2\n                    from: 1\n                    next: null\n      operationId: tasks.list\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/taskFilterUids'\n        - $ref: '#/components/parameters/taskFilterIndexUids'\n        - $ref: '#/components/parameters/taskFilterStatuses'\n        - $ref: '#/components/parameters/taskFilterTypes'\n        - $ref: '#/components/parameters/taskFilterCanceledBy'\n        - $ref: '#/components/parameters/taskFilterBeforeEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterAfterEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeStartedAt'\n        - $ref: '#/components/parameters/taskFilterAfterStartedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeFinishedAt'\n        - $ref: '#/components/parameters/taskFilterAfterFinishedAt'\n      security:\n        - apiKey: []\n    delete:\n      summary: Delete tasks\n      description: 'Delete finished [tasks](https://docs.meilisearch.com/lean/advanced/asynchronous_operations.html)'\n      tags:\n        - tasks\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schema/summarizedTask'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_taskDeletion'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      operationId: tasks.delete\n      parameters:\n        - $ref: '#/components/parameters/taskFilterUids'\n        - $ref: '#/components/parameters/taskFilterIndexUids'\n        - $ref: '#/components/parameters/taskFilterStatuses'\n        - $ref: '#/components/parameters/taskFilterTypes'\n        - $ref: '#/components/parameters/taskFilterCanceledBy'\n        - $ref: '#/components/parameters/taskFilterBeforeEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterAfterEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeStartedAt'\n        - $ref: '#/components/parameters/taskFilterAfterStartedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeFinishedAt'\n        - $ref: '#/components/parameters/taskFilterAfterFinishedAt'\n      security:\n        - apiKey: []\n  '/tasks/:taskUid':\n    get:\n      summary: Get a task\n      description: 'Get a [task](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html) '\n      tags:\n        - tasks\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              examples:\n                Example:\n                  value:\n                    uid: 1\n                    indexUid: movies\n                    status: succeeded\n                    type: documentAdditionOrUpdate\n                    canceledBy: null\n                    details:\n                      receivedDocuments: 79000\n                      indexedDocuments: 79000\n                    error: null\n                    duration: PT1S\n                    enqueuedAt: '2021-01-01T09:39:00.000000Z'\n                    startedAt: '2021-01-01T09:39:01.000000Z'\n                    finishedAt: '2021-01-01T09:39:02.000000Z'\n        '401':\n          $ref: '#/components/responses/401'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n              examples:\n                Example:\n                  value:\n                    message: 'Task :taskUid not found.'\n                    code: task_not_found\n                    type: invalid_request\n                    link: 'https://docs.meilisearch.com/errors/#task_not_found'\n      operationId: tasks.get\n      parameters:\n        - $ref: '#/components/parameters/taskUid'\n      security:\n        - apiKey: []\n  '/tasks/cancel':\n    post:\n      summary: Cancel tasks\n      description: 'Cancel enqueued and/or processing [tasks](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html) '\n      tags:\n        - tasks\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/summarizedTask'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_taskCancelation'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        '401':\n          $ref: '#/components/responses/401'\n      operationId: tasks.cancel\n      parameters:\n        - $ref: '#/components/parameters/taskFilterUids'\n        - $ref: '#/components/parameters/taskFilterIndexUids'\n        - $ref: '#/components/parameters/taskFilterStatuses'\n        - $ref: '#/components/parameters/taskFilterTypes'\n        - $ref: '#/components/parameters/taskFilterCanceledBy'\n        - $ref: '#/components/parameters/taskFilterBeforeEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterAfterEnqueuedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeStartedAt'\n        - $ref: '#/components/parameters/taskFilterAfterStartedAt'\n        - $ref: '#/components/parameters/taskFilterBeforeFinishedAt'\n        - $ref: '#/components/parameters/taskFilterAfterFinishedAt'\n      security:\n        - apiKey: []\n  '/swap-indexes':\n    post:\n      operationId: indexes.swap\n      summary: Swap Indexes\n      description: Deploy a new version of an index without any downtime for clients by swapping documents, settings, and task history between two indexes. Specifying several swap operations that will be processed in an atomic way is possible.\n      tags:\n        - Indexes\n      security:\n        - apiKey: []\n      parameters:\n        - $ref: '#/components/parameters/Content-Type'\n      request:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/swapIndexes'\n            examples:\n              Example:\n                - indexes: [\"indexA\", \"indexA_new\"]\n                - indexes: [\"indexB\", \"indexB_new\"]\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/202'\n              examples:\n                '202':\n                  $ref: '#/components/examples/202_indexSwap'\n        '401':\n          $ref: '#/components/responses/401'\nsecurity: []\n",
			"canonicalURL": "/github.com/meilisearch/specifications@b2e4b3df55574f916f8e023c8d558f651e49471e/-/blob/open-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/meilisearch/specifications/blob/b2e4b3df55574f916f8e023c8d558f651e49471e/open-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 85: cannot unmarshal !!seq into string; yaml: line 173: cannot unmarshal !!seq into string; yaml: line 715: cannot unmarshal !!seq into string; yaml: line 758: cannot unmarshal !!bool `true` into []string; yaml: line 1694: cannot unmarshal !!seq into string; yaml: line 3370: cannot unmarshal !!seq into string; yaml: line 3691: cannot unmarshal !!seq into ogen.Example"
}