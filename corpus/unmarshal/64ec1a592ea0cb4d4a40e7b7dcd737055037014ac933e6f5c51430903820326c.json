{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mozilla-releng/balrog"
		},
		"file": {
			"name": "api_v2.yml",
			"size": 0,
			"path": "src/auslib/web/admin/swagger/api_v2.yml",
			"byteSize": 15051,
			"content": "openapi: 3.0.0\ninfo:\n  title: Balrog Admin API\n  description: Balrog Admin API\n  version: 2.0.0\n\ncomponents:\n  schemas:\n    Release:\n      type: object\n      properties:\n        name:\n          type: string\n        product:\n          type: string\n          nullable: true\n        read_only:\n          type: boolean\n          nullable: true\n        data_version:\n          type: number\n          nullable: true\n\n    RequiredSignoffs:\n      type: object\n      additionalProperties:\n        type: integer\n\n    ReleaseModifyBody:\n      type: object\n      required:\n        - blob\n      properties:\n        blob:\n          type: object\n        old_data_versions:\n          type: object\n        # Creates a scheduled change if passed\n        when:\n          type: integer\n          nullable: true\n\n    ScheduledChangeResponse:\n      type: object\n      required:\n        - sc_id\n        - change_type\n        - data_version\n        - when\n        - signoffs\n      properties:\n        sc_id:\n          type: number\n        change_type:\n          type: string\n          enum:\n            - insert\n            - update\n            - delete\n        data_version:\n          type: number\n        when:\n          type: integer\n        signoffs:\n          type: object\n          additionalProperties:\n            type: string\n\n    ReleaseModifyResponseLeaf:\n      oneOf:\n        # Direct modifications will return a new data version\n        # for each modified part of a Release\n        - type: number\n        # Scheduled changes will return scheduled change details\n        - $ref: '#/components/schemas/ScheduledChangeResponse'\n\n    # Modified parts of a Release may be at an unknown level of depth\n    # This object handles that by allowing either a Leaf response, or\n    # another level of this object, to an infinite depth.\n    ReleaseModifyResponsePart:\n      type: object\n      additionalProperties:\n        oneOf:\n          - $ref: '#/components/schemas/ReleaseModifyResponseLeaf'\n          - $ref: '#/components/schemas/ReleaseModifyResponsePart'\n\n    ReleaseModifyResponse:\n      type: object\n      properties:\n        .:\n          $ref: '#/components/schemas/ReleaseModifyResponseLeaf'\n      additionalProperties:\n        $ref: '#/components/schemas/ReleaseModifyResponsePart'\n\n    ReleasePinNotSetResponse:\n      type: object\n      properties:\n        pin_not_set:\n          # This property is intended for identifying a ReleasePinNotSetResponse\n          # which is why it cannot be set to false.\n          type: boolean\n          enum:\n            - true\n        reason:\n          type: string\n          enum:\n            - existing_pin_is_newer\n\n\n  parameters:\n    ReleaseName:\n      name: name\n      in: path\n      required: true\n      description: Release name\n      schema:\n        type: string\n\npaths:\n  /releases:\n    get:\n      summary: Get a list of basic information about Releases in Balrog's database\n      operationId: auslib.web.admin.views.releases_v2.get_releases\n      responses:\n        '200':\n          description: List of Releases\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - releases\n                properties:\n                  releases:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: '#/components/schemas/Release'\n                        - type: object\n                          required:\n                            - name\n                            - rule_info\n                          properties:\n                            product_required_signoffs:\n                              $ref: '#/components/schemas/RequiredSignoffs'\n                            required_signoffs:\n                              $ref: '#/components/schemas/RequiredSignoffs'\n                            read_only:\n                              nullable: false\n                            rule_info:\n                              type: object\n                              properties:\n                                ^.*$:\n                                  type: object\n                                  required:\n                                    - product\n                                    - channel\n                                  properties:\n                                    product:\n                                      type: string\n                                      nullable: true\n                                    channel:\n                                      type: string\n                                      nullable: true\n                            scheduled_changes:\n                              type: array\n                              items:\n                                allOf:\n                                  - $ref: '#/components/schemas/Release'\n                                  - type: object\n                                    required:\n                                      - name\n                                      - data_version\n                                      - sc_id\n                                      - when\n                                      - change_type\n                                      - scheduled_by\n                                      - sc_data_version\n                                      - complete\n                                    properties:\n                                      path:\n                                        type: string\n                                      rule_info:\n                                        type: object\n                                      sc_id:\n                                        type: number\n                                      when:\n                                        type: number\n                                      change_type:\n                                        type: string\n                                        enum:\n                                          - insert\n                                          - update\n                                          - delete\n                                      scheduled_by:\n                                        type: string\n                                      sc_data_version:\n                                        type: number\n                                      complete:\n                                        type: boolean\n\n  /releases/{name}:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    get:\n      summary: Get a Release blob and data versions\n      operationId: auslib.web.admin.views.releases_v2.get_release\n      responses:\n        '200':\n          description: Release blob and data versions\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - blob\n                  - data_versions\n                properties:\n                  blob:\n                    type: object\n                  data_versions:\n                    type: object\n        '404':\n          description: Release not found\n\n    post:\n      summary: Update part of a Release\n      operationId: auslib.web.admin.views.releases_v2.update_release\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/ReleaseModifyBody'\n                - type: object\n                  required:\n                    - old_data_versions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseModifyResponse'\n        '400':\n          description: Client error\n        '404':\n          description: Release does not exist\n\n    put:\n      summary: Overwrites an entire release\n      operationId: auslib.web.admin.views.releases_v2.set_release\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/ReleaseModifyBody'\n                - type: object\n                  properties:\n                    # Required if the Release doesn't yet exist, but it's not possible to encode this into the schema\n                    product:\n                      type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseModifyResponse'\n        '400':\n          description: Client error\n\n    delete:\n      summary: Delete an entire Release\n      operationId: auslib.web.admin.views.releases_v2.delete_release\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n        '404':\n          description: Release does not exist\n\n  /releases/{name}/signoff:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    put:\n      summary: Signoff on the current scheduled changes for the named Release\n      operationId: auslib.web.admin.views.releases_v2.signoff\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - role\n              properties:\n                role:\n                  type: string\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n        '404':\n          description: Release has no scheduled changes\n\n    delete:\n      summary: Revoke signoffs on the current scheduled changes for the named Release\n      operationId: auslib.web.admin.views.releases_v2.revoke_signoff\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n        '404':\n          description: Release has no scheduled changes\n\n  /releases/{name}/data_versions:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    get:\n      summary: Get the data versions for a Release\n      operationId: auslib.web.admin.views.releases_v2.get_data_versions\n      responses:\n        '200':\n          description: Data versions\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data_versions\n                properties:\n                  data_versions:\n                    type: object\n        '404':\n          description: Release not found\n\n  /releases/{name}/enact:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    post:\n      summary: Enact the current scheduled changes for the named Release\n      operationId: auslib.web.admin.views.releases_v2.enact_scheduled_changes\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n        '404':\n          description: Release has no scheduled changes\n        \n  /releases/{name}/{path}/data_version:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    get:\n      summary: Get the data version for a part of a Release\n      operationId: auslib.web.admin.views.releases_v2.get_data_version\n      parameters:\n        - name: path\n          in: path\n          required: true\n          description: Path to part of the named Release\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Data version\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data_version\n                properties:\n                  data_version:\n                    type: integer\n        '404':\n          description: Release part not found\n\n  /releases/{name}/read_only:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    put:\n      summary: Set a Release as read-only or read-write\n      operationId: auslib.web.admin.views.releases_v2.set_read_only\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - read_only\n                - old_data_version\n              properties:\n                read_only:\n                  type: boolean\n                old_data_version:\n                  type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseModifyResponse'\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n\n  /releases/{name}/pinnable:\n    parameters:\n      - $ref: '#/components/parameters/ReleaseName'\n\n    put:\n      summary: Set a release as pinnable on a channel\n      operationId: auslib.web.admin.views.releases_v2.set_pinnable\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - product\n                - channel\n                - version\n              properties:\n                product:\n                  type: string\n                channel:\n                  type: string\n                version:\n                  type: string\n                # Creates a scheduled change if passed\n                when:\n                  type: integer\n                  nullable: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseModifyResponse'\n                $ref: '#/components/schemas/ReleasePinNotSetResponse'\n        '400':\n          description: Client error\n        '403':\n          description: Permission denied\n\n  /pins/{product}/{channel}/{version}:\n    get:\n      summary: Get a JSON object representing the specified pin\n      operationId: auslib.web.admin.views.pins_v2.get_pin\n      responses:\n        '200':\n          description: Data for specified pin\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - channel\n                  - data_version\n                  - mapping\n                  - product\n                  - version\n                properties:\n                  channel:\n                    type: string\n                  data_version:\n                    type: number\n                  mapping:\n                    type: string\n                  product:\n                    type: string\n                  version:\n                    type: string\n        '404':\n          description: Pin not found\n",
			"canonicalURL": "/github.com/mozilla-releng/balrog@6cdc642e59cbf2efac4f2c3156abaa14bc4d4fb9/-/blob/src/auslib/web/admin/swagger/api_v2.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mozilla-releng/balrog/blob/6cdc642e59cbf2efac4f2c3156abaa14bc4d4fb9/src/auslib/web/admin/swagger/api_v2.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 467: mapping key \"$ref\" already defined at line 466"
}