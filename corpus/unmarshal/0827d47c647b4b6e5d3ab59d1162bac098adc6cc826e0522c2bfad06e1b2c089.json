{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dneustadt/openai-client"
		},
		"file": {
			"name": "openai.yaml",
			"size": 0,
			"path": "openai.yaml",
			"byteSize": 41384,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api.openai.com/v1'\ninfo:\n  description: \u003e-\n    OpenAI is an AI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\n  version: 1.0.0\n  title: OpenAI API\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\ntags:\n  - name: OpenAI\n    description: OpenAI is an AI research and deployment company. Our mission is to ensure that artificial general intelligence benefits all of humanity.\npaths:\n  '/engines':\n    get:\n      tags:\n        - engines\n      summary: Lists the currently available engines, and provides basic information about each one such as the owner and availability.\n      description: ''\n      operationId: getEngines\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Engines'\n      security:\n        - api_key: []\n  '/engines/{engine_id}':\n    get:\n      tags:\n        - engines\n      summary: Retrieves an engine instance, providing basic information about the engine such as the owner and availability.\n      description: ''\n      operationId: getEngineById\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: engine_id\n          in: path\n          schema:\n            type: integer\n          required: true\n          description: The ID of the engine to use for this request\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Engine'\n      security:\n        - api_key: []\n  '/completions':\n    post:\n      tags:\n        - completions\n      summary: Creates a new completion for the provided prompt and parameters\n      description: ''\n      operationId: postCompletions\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Completion'\n      security:\n        - api_key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: CompletionPayload\n              type: object\n              properties:\n                model:\n                  description: ID of the model to use.\n                  required: true\n                  type: string\n                prompt:\n                  description: The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.\n                  required: true\n                  oneOf:\n                    - type: string\n                    - type: array\n                max_tokens:\n                  description: The maximum number of tokens to generate. Requests can use up to 2048 tokens shared between prompt and completion.\n                  type: integer\n                  default: 16\n                temperature:\n                  description: The maximum number of tokens to generate. Requests can use up to 2048 tokens shared between prompt and completion.\n                  type: number\n                  default: 1\n                top_p:\n                  description: An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.\n                  type: number\n                  default: 1\n                n:\n                  description: How many completions to generate for each prompt.\n                  type: integer\n                  default: 1\n                stream:\n                  description: 'Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.'\n                  type: boolean\n                  default: false\n                logprobs:\n                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.\n                  type: integer\n                  default: null\n                echo:\n                  description: Echo back the prompt in addition to the completion.\n                  type: boolean\n                  default: false\n                stop:\n                  description: Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.\n                  oneOf:\n                    - type: string\n                    - type: array\n                  default: null\n                presence_penalty:\n                  description: Number between 0 and 1 that penalizes new tokens based on whether they appear in the text so far. Increases the model's likelihood to talk about new topics.\n                  type: number\n                  default: 0\n                frequency_penalty:\n                  description: Number between 0 and 1 that penalizes new tokens based on their existing frequency in the text so far. Decreases the model's likelihood to repeat the same line verbatim.\n                  type: number\n                  default: 0\n                best_of:\n                  description: Generates best_of completions server-side and returns the \"best\" (the one with the lowest log probability per token). Results cannot be streamed.\n                  type: integer\n                  default: 1\n                logit_bias:\n                  description: Modify the likelihood of specified tokens appearing in the completion.\n                  type: object\n                  default: null\n  '/search':\n    post:\n      deprecated: true\n      tags:\n        - search\n      summary: The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.\n      description: ''\n      operationId: postSearch\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: engine_id\n          in: path\n          schema:\n            type: integer\n          required: true\n          description: The ID of the engine to use for this request\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Search'\n      security:\n        - api_key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: SearchPayload\n              type: object\n              properties:\n                documents:\n                  description: The prompt(s) to generate completions for, encoded as a string, a list of strings, or a list of token lists.\n                  type: array\n                file:\n                  description: The ID of an uploaded file that contains documents to search over. You should specify either documents or a file, but not both.\n                  type: string\n                query:\n                  description: Query to search against the documents.\n                  required: true\n                  type: string\n                max_rerank:\n                  description: The maximum number of documents to be re-ranked and returned by search.\n                  type: integer\n                  default: 200\n                return_metadata:\n                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a \"metadata\" field. This flag only takes effect when file is set.\n                  type: boolean\n                  default: false\n  '/classifications':\n    post:\n      deprecated: true\n      tags:\n        - classification\n      summary: The endpoint first searches over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the completions endpoint.\n      description: ''\n      operationId: postClassification\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Classification'\n      security:\n        - api_key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: ClassificationPayload\n              type: object\n              properties:\n                model:\n                  description: ID of the engine to use for completion.\n                  required: true\n                  type: string\n                query:\n                  description: Query to be classified.\n                  required: true\n                  type: string\n                examples:\n                  description: A list of examples with labels.\n                  type: array\n                file:\n                  description: The ID of the uploaded file that contains training examples. See upload file for how to upload a file of the desired format and purpose.\n                  type: string\n                labels:\n                  description: The set of categories being classified. If not specified, candidate labels will be automatically collected from the examples you provide. All the label strings will be normalized to be capitalized.\n                  type: array\n                  default: null\n                search_model:\n                  description: ID of the engine to use for Search.\n                  type: string\n                  default: 'ada'\n                temperature:\n                  description: What sampling temperature to use. Higher values mean the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\n                  type: number\n                  default: 0\n                logprobs:\n                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.\n                  type: integer\n                  default: 0\n                max_examples:\n                  description: The maximum number of examples to be ranked by Search when using file. Setting it to a higher value leads to improved accuracy but with increased latency and cost.\n                  type: integer\n                  default: 200\n                logit_bias:\n                  description: Modify the likelihood of specified tokens appearing in the completion.\n                  type: object\n                  default: null\n                return_prompt:\n                  description: If set to true, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.\n                  type: boolean\n                  default: false\n                return_metadata:\n                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a \"metadata\" field.\n                  type: boolean\n                  default: false\n                expand:\n                  description: If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support completion and file objects for expansion.\n                  type: array\n                  default: []\n  '/answers':\n    post:\n      deprecated: true\n      tags:\n        - answer\n      summary: Answers the specified question using the provided documents and examples.\n      description: ''\n      operationId: postAnswer\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Answer'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: AnswerPayload\n              type: object\n              properties:\n                model:\n                  description: ID of the engine to use for completion.\n                  required: true\n                  type: string\n                question:\n                  description: Question to get answered.\n                  required: true\n                  type: string\n                examples:\n                  description: List of (question, answer) pairs that will help steer the model towards the tone and answer format you'd like. We recommend adding 2 to 3 examples.\n                  required: true\n                  type: array\n                examples_context:\n                  description: A text snippet containing the contextual information used to generate the answers for the examples you provide.\n                  required: true\n                  type: string\n                documents:\n                  description: List of documents from which the answer for the input question should be derived. If this is an empty list, the question will be answered based on the question-answer examples.\n                  type: array\n                file:\n                  description: The ID of an uploaded file that contains documents to search over. See upload file for how to upload a file of the desired format and purpose.\n                  type: string\n                search_model:\n                  description: ID of the engine to use for Search.\n                  type: string\n                  default: 'ada'\n                temperature:\n                  description: What sampling temperature to use. Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer.\n                  type: number\n                  default: 0\n                logprobs:\n                  description: Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.\n                  type: integer\n                  default: 0\n                max_tokens:\n                  description: The maximum number of tokens allowed for the generated answer.\n                  type: integer\n                  default: 16\n                stop:\n                  description: Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.\n                  oneOf:\n                    - type: string\n                    - type: array\n                  default: null\n                n:\n                  description: How many answers to generate for each question.\n                  type: integer\n                  default: 1\n                logit_bias:\n                  description: Modify the likelihood of specified tokens appearing in the completion.\n                  type: object\n                  default: null\n                return_metadata:\n                  description: A special boolean flag for showing metadata. If set to true, each document entry in the returned JSON will contain a \"metadata\" field.\n                  type: boolean\n                  default: false\n                return_prompt:\n                  description: If set to true, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.\n                  type: boolean\n                  default: false\n                expand:\n                  description: If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support completion and file objects for expansion.\n                  type: array\n                  default: [ ]\n  '/files':\n    get:\n      tags:\n        - files\n      summary: Returns a list of files that belong to the user's organization.\n      description: ''\n      operationId: getFiles\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Files'\n      security:\n        - api_key: []\n    post:\n      tags:\n        - files\n      summary: Upload a file that contains document(s) to be used across various endpoints/features.\n      description: ''\n      operationId: postFile\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/File'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              title: FilePayload\n              type: object\n              properties:\n                file:\n                  description: File to upload.\n                  required: true\n                  type: string\n                  format: binary\n                purpose:\n                  description: The intended purpose of the uploaded documents.\n                  required: true\n                  type: string\n  '/files/{file_id}':\n    get:\n      tags:\n        - files\n      summary: Returns information about a specific file.\n      description: ''\n      operationId: getFileById\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: file_id\n          in: path\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/File'\n      security:\n        - api_key: []\n    delete:\n      tags:\n        - files\n      summary: Delete a file.\n      description: ''\n      operationId: deleteFile\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: file_id\n          in: path\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Success\n  '/images/generations':\n    post:\n      tags:\n        - images\n      summary: Given a prompt and/or an input image, the model will generate a new image.\n      description: ''\n      operationId: postImagesGenerations\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Images'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: ImagesGenerationsPayload\n              type: object\n              properties:\n                prompt:\n                  description: A text description of the desired image(s). The maximum length is 1000 characters.\n                  required: true\n                  type: string\n                n:\n                  description: The number of images to generate. Must be between 1 and 10.\n                  type: integer\n                  default: 1\n                size:\n                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.\n                  type: string\n                  default: '1024x1024'\n                response_format:\n                  description: The format in which the generated images are returned. Must be one of url or b64_json.\n                  type: string\n                  default: 'url'\n                user:\n                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.\n                  type: string\n                  default: null\n  '/images/edits':\n    post:\n      tags:\n        - images\n      summary: Creates an edited or extended image given an original image and a prompt.\n      description: ''\n      operationId: postImagesEdits\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Images'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              title: ImagesEditsPayload\n              type: object\n              properties:\n                image:\n                  description: An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.\n                  required: true\n                  type: string\n                  format: binary\n                mark:\n                  description: The image to edit. Must be a valid PNG file, less than 4MB, and square.\n                  required: true\n                  type: string\n                  format: binary\n                n:\n                  description: The number of images to generate. Must be between 1 and 10.\n                  type: integer\n                  default: 1\n                size:\n                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.\n                  type: string\n                  default: '1024x1024'\n                response_format:\n                  description: The format in which the generated images are returned. Must be one of url or b64_json.\n                  type: string\n                  default: 'url'\n                user:\n                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.\n                  type: string\n                  default: null\n  '/images/variations':\n    post:\n      tags:\n        - images\n      summary: Creates a variation of a given image.\n      description: ''\n      operationId: postImagesVariations\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Images'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              title: ImagesVariationsPayload\n              type: object\n              properties:\n                image:\n                  description: The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n                  required: true\n                  type: string\n                  format: binary\n                n:\n                  description: The number of images to generate. Must be between 1 and 10.\n                  type: integer\n                  default: 1\n                size:\n                  description: The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.\n                  type: string\n                  default: '1024x1024'\n                response_format:\n                  description: The format in which the generated images are returned. Must be one of url or b64_json.\n                  type: string\n                  default: 'url'\n                user:\n                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.\n                  type: string\n                  default: null\n  '/models':\n    get:\n      tags:\n        - models\n      summary: Lists the currently available models, and provides basic information about each one such as the owner and availability.\n      description: ''\n      operationId: getModels\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Models'\n      security:\n        - api_key: []\n  '/models/{model}':\n    get:\n      tags:\n        - models\n      summary: Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n      description: ''\n      operationId: getModel\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: model\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The ID of the model to use for this request\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Model'\n      security:\n        - api_key: []\n    delete:\n      tags:\n        - models\n      summary: Delete a fine-tuned model. You must have the Owner role in your organization.\n      description: ''\n      operationId: deleteModel\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: model\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The model to delete\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModelDelete'\n      security:\n        - api_key: []\n  '/embeddings':\n    post:\n      tags:\n        - embeddings\n      summary: Creates an embedding vector representing the input text.\n      description: ''\n      operationId: postEmbeddings\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Embeddings'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: EmbeddingsPayload\n              type: object\n              properties:\n                model:\n                  description: ID of the model to use. You can use the List models API to see all of your available models, or see our Model overview for descriptions of them.\n                  required: true\n                  type: string\n                input:\n                  description: Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed 2048 tokens in length.\n                  required: true\n                  type: string\n                user:\n                  description: A unique identifier representing your end-user, which will help OpenAI to monitor and detect abuse.\n                  type: string\n                  default: null\n  '/moderations':\n    post:\n      tags:\n        - moderations\n      summary: Classifies if text violates OpenAI's Content Policy\n      description: ''\n      operationId: postModerations\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Moderations'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: ModerationsPayload\n              type: object\n              properties:\n                input:\n                  description: The input text to classify\n                  required: true\n                  type: string\n                model:\n                  description: Two content moderations models are available - text-moderation-stable and text-moderation-latest.\n                  type: string\n                  default: 'text-moderation-latest'\n  '/fine-tunes':\n    get:\n      tags:\n        - fine-tunes\n      summary: List your organization's fine-tuning jobs\n      description: ''\n      operationId: getFineTunes\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FineTunes'\n      security:\n        - api_key: [ ]\n    post:\n      tags:\n        - fine-tunes\n      summary: Creates a job that fine-tunes a specified model from a given dataset.\n      description: ''\n      operationId: postFineTunes\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FineTune'\n      security:\n        - api_key: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: FineTunesPayload\n              type: object\n              properties:\n                training_file:\n                  description: The ID of an uploaded file that contains training data.\n                  required: true\n                  type: string\n                validation_file:\n                  description: The ID of an uploaded file that contains validation data.\n                  type: string\n                model:\n                  description: The name of the base model to fine-tune. You can select one of \"ada\", \"babbage\", \"curie\", \"davinci\", or a fine-tuned model created after 2022-04-21. To learn more about these models, see the Models documentation.\n                  type: string\n                  default: 'curie'\n                n_epochs:\n                  description: The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.\n                  type: integer\n                  default: 4\n                batch_size:\n                  description: The batch size to use for training. The batch size is the number of training examples used to train a single forward and backward pass.\n                  type: integer\n                  default: null\n                learning_rate_multiplier:\n                  description: The learning rate multiplier to use for training. The fine-tuning learning rate is the original learning rate used for pretraining multiplied by this value.\n                  type: number\n                  default: null\n                prompt_loss_weight:\n                  description: The weight to use for loss on the prompt tokens. This controls how much the model tries to learn to generate the prompt (as compared to the completion which always has a weight of 1.0), and can add a stabilizing effect to training when completions are short.\n                  type: number\n                  default: 0.01\n                compute_classification_metrics:\n                  description: If set, we calculate classification-specific metrics such as accuracy and F-1 score using the validation set at the end of every epoch. These metrics can be viewed in the results file.\n                  type: boolean\n                  default: false\n                classification_n_classes:\n                  description: The number of classes in a classification task.\n                  type: integer\n                  default: null\n                classification_positive_class:\n                  description: The positive class in binary classification.\n                  type: string\n                  default: null\n                classification_betas:\n                  description: If this is provided, we calculate F-beta scores at the specified beta values. The F-beta score is a generalization of F-1 score. This is only used for binary classification.\n                  type: array\n                  default: null\n                suffix:\n                  description: A string of up to 40 characters that will be added to your fine-tuned model name.\n                  type: string\n                  default: null\n  '/fine-tunes/{fine_tune_id}':\n    get:\n      tags:\n        - fine-tunes\n      summary: Gets info about the fine-tune job.\n      description: ''\n      operationId: getFineTune\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: fine_tune_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The ID of the fine-tune job\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FineTune'\n  '/fine-tunes/{fine_tune_id}/cancel':\n    post:\n      tags:\n        - fine-tunes\n      summary: Immediately cancel a fine-tune job.\n      description: ''\n      operationId: postFineTuneCancel\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: fine_tune_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The ID of the fine-tune job to cancel\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FineTune'\n      security:\n        - api_key: []\n  '/fine-tunes/{fine_tune_id}/events':\n    get:\n      tags:\n        - fine-tunes\n      summary: Get fine-grained status updates for a fine-tune job.\n      description: ''\n      operationId: getFineTuneEvents\n      parameters:\n        - name: OpenAI-Organization\n          in: header\n          schema:\n            type: string\n          required: false\n        - name: fine_tune_id\n          in: path\n          schema:\n            type: string\n          required: true\n          description: The ID of the fine-tune job to get events for.\n        - name: stream\n          in: query\n          schema:\n            type: boolean\n          description: Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only server-sent events as they become available.\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FineTuneEvents'\nexternalDocs:\n  description: Find out more about OpenAI API\n  url: 'https://beta.openai.com/docs/api-reference/files/retrieve'\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: Authorization\n      in: header\n  schemas:\n    Engines:\n      title: Engines\n      type: object\n      properties:\n        object:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n    Engine:\n      title: Engine\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        owner:\n          type: string\n        ready:\n          type: boolean\n    Completion:\n      title: Completion\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        created:\n          type: integer\n        model:\n          type: string\n        choices:\n          type: array\n          items:\n            type: object\n    Search:\n      title: Search\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n        object:\n          type: string\n    Classification:\n      title: Classification\n      type: object\n      properties:\n        completion:\n          type: string\n        label:\n          type: string\n        model:\n          type: string\n        object:\n          type: string\n        search_model:\n          type: string\n        selected_examples:\n          type: array\n          items:\n            type: object\n    Answer:\n      title: Answer\n      type: object\n      properties:\n        answers:\n          type: array\n          items:\n            type: string\n        completion:\n          type: string\n        model:\n          type: string\n        object:\n          type: string\n        search_model:\n          type: string\n        selected_documents:\n          type: array\n          items:\n            type: object\n    Files:\n      title: Files\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n        object:\n          type: string\n    File:\n      title: File\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        bytes:\n          type: integer\n        created_at:\n          type: integer\n        filename:\n          type: string\n        purpose:\n          type: string\n    Images:\n      title: Images\n      type: object\n      properties:\n        created:\n          type: integer\n        data:\n          type: array\n          items:\n            type: object\n    Models:\n      title: Models\n      type: object\n      properties:\n        object:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n    Model:\n      title: Model\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        owned_by:\n          type: string\n        permission:\n          type: object\n    ModelDelete:\n      title: ModelDelete\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        deleted:\n          type: boolean\n    Embeddings:\n      title: Embeddings\n      type: object\n      properties:\n        object:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n        usage:\n          type: object\n    Moderations:\n      title: Moderations\n      type: object\n      properties:\n        id:\n          type: string\n        model:\n          type: string\n        result:\n          type: array\n          items:\n            type: object\n    FineTunes:\n      title: FineTunes\n      type: object\n      properties:\n        object:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n    FineTune:\n      title: FineTune\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        model:\n          type: string\n        created_at:\n          type: integer\n        events:\n          type: array\n          items:\n            type: object\n        fine_tuned_model:\n          type: string\n        hyperparams:\n          type: object\n        organization_id:\n          type: string\n        result_files:\n          type: object\n        status:\n          type: string\n        validation_files:\n          type: object\n        training_files:\n          type: array\n          items:\n            type: object\n        updated_at:\n          type: integer\n    FineTuneEvents:\n      title: FineTuneEvents\n      type: object\n      properties:\n        object:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n",
			"canonicalURL": "/github.com/dneustadt/openai-client@7431f2eb33697348926b19938d233d9bf802b7ab/-/blob/openai.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dneustadt/openai-client/blob/7431f2eb33697348926b19938d233d9bf802b7ab/openai.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 97: cannot unmarshal !!bool `true` into []string; yaml: line 199: cannot unmarshal !!bool `true` into []string; yaml: line 241: cannot unmarshal !!bool `true` into []string; yaml: line 321: cannot unmarshal !!bool `true` into []string; yaml: line 429: cannot unmarshal !!bool `true` into []string; yaml: line 516: cannot unmarshal !!bool `true` into []string; yaml: line 565: cannot unmarshal !!bool `true` into []string; yaml: line 620: cannot unmarshal !!bool `true` into []string; yaml: line 747: cannot unmarshal !!bool `true` into []string; yaml: line 788: cannot unmarshal !!bool `true` into []string; yaml: line 846: cannot unmarshal !!bool `true` into []string"
}