{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ga4gh/data-repository-service-schemas"
		},
		"file": {
			"name": "data_repository_service.openapi.yaml",
			"size": 0,
			"path": "openapi/data_repository_service.openapi.yaml",
			"byteSize": 3836,
			"content": "openapi: 3.0.3\ninfo:\n  title: Data Repository Service\n  version: 1.2.0\n  x-logo:\n    url: 'https://www.ga4gh.org/wp-content/themes/ga4gh-theme/gfx/GA-logo-horizontal-tag-RGB.svg'\n  termsOfService: 'https://www.ga4gh.org/terms-and-conditions/'\n  contact:\n    name: GA4GH Cloud Work Stream\n    email: ga4gh-cloud@ga4gh.org\n  license:\n    name: Apache 2.0\n    url: 'https://raw.githubusercontent.com/ga4gh/data-repository-service-schemas/master/LICENSE'\nservers:\n  - url: https://{serverURL}/ga4gh/drs/v1\n    variables:\n      serverURL:\n        default: drs.example.org\n        description: \u003e\n          DRS server endpoints MUST be prefixed by the '/ga4gh/drs/v1' endpoint\n          path\nsecurity:\n  - {}\n  - BasicAuth: []\n  - BearerAuth: []\ntags:\n  # Overview\n  - name: Introduction\n    description:\n      $ref: ./tags/Introduction.md\n  - name: DRS API Principles\n    description:\n      $ref: ./tags/DrsApiPrinciples.md\n  - name: Authorization \u0026 Authentication\n    description:\n      $ref: ./tags/Auth.md\n\n  # Operations\n  - name: Objects\n  - name: Service Info\n\n  # Models\n  - name: AccessMethodModel\n    x-displayName: AccessMethod\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/AccessMethod\" /\u003e\n  - name: AccessURLModel\n    x-displayName: AccessURL\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/AccessURL\" /\u003e\n  - name: ChecksumModel\n    x-displayName: Checksum\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Checksum\" /\u003e\n  - name: ContentsObjectModel\n    x-displayName: ContentsObject\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/ContentsObject\" /\u003e\n  - name: DrsObjectModel\n    x-displayName: DrsObject\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/DrsObject\" /\u003e\n  - name: ErrorModel\n    x-displayName: Error\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Error\" /\u003e\n\n  # Appendices\n  - name: Motivation\n    description:\n      $ref: './tags/Motivation.md'\n  - name: Background Notes on DRS URIs\n    description:\n      $ref: './tags/BackgroundNotesOnDRSURIs.md'\n  - name: Compact Identifier-Based URIs\n    description:\n      $ref: './tags/CompactIdentifierBasedURIs.md'\n  - name: Hostname-Based URIs\n    description:\n      $ref: './tags/HostnameBasedURIs.md'\n  - name: GA4GH Service Registry\n    description:\n      $ref: './tags/ServiceRegistry.md'\nx-tagGroups:\n  - name: Overview\n    tags:\n      - Introduction\n      - DRS API Principles\n      - Authorization \u0026 Authentication\n  - name: Operations\n    tags:\n      - Objects\n      - Service Info\n  - name: Models\n    tags:\n      - AccessMethodModel\n      - AccessURLModel\n      - ChecksumModel\n      - ContentsObjectModel\n      - DrsObjectModel\n      - ErrorModel\n  - name: Appendices\n    tags:\n      - Motivation\n      - Background Notes on DRS URIs\n      - Compact Identifier-Based URIs\n      - Hostname-Based URIs\n      - GA4GH Service Registry\npaths:\n  /service-info:\n    $ref: ./paths/service-info.yaml\n  /objects/{object_id}:\n    $ref: ./paths/objects@{object_id}.yaml\n  /objects/{object_id}/access/{access_id}:\n    $ref: ./paths/objects@{object_id}@access@{access_id}.yaml\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n      description: |\n        A valid authorization token must be passed in the 'Authorization' header,\n        e.g. \"Basic ${token_string}\"\n    BearerAuth:\n      type: http\n      scheme: bearer\n      description:\n        A valid authorization token must be passed in the 'Authorization' header,\n        e.g. \"Bearer ${token_string}\"\n    PassportAuth:\n      type: http\n      scheme: bearer\n      x-in: body\n      bearerFormat: JWT\n      description:\n        A valid GA4GH Passport must be passed in the body of an HTTP POST request as a tokens[] array.\n",
			"canonicalURL": "/github.com/ga4gh/data-repository-service-schemas@dee8d8aef5f9f00cd02e64c8ae5323574974f946/-/blob/openapi/data_repository_service.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ga4gh/data-repository-service-schemas/blob/dee8d8aef5f9f00cd02e64c8ae5323574974f946/openapi/data_repository_service.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 30: cannot unmarshal !!map into string; yaml: line 33: cannot unmarshal !!map into string; yaml: line 36: cannot unmarshal !!map into string; yaml: line 71: cannot unmarshal !!map into string; yaml: line 74: cannot unmarshal !!map into string; yaml: line 77: cannot unmarshal !!map into string; yaml: line 80: cannot unmarshal !!map into string; yaml: line 83: cannot unmarshal !!map into string"
}