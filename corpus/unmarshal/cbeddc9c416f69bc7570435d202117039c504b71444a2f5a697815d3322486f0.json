{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ProteinsWebTeam/interpro7-api"
		},
		"file": {
			"name": "interpro7-swagger.yml",
			"size": 0,
			"path": "webfront/static/interpro7-swagger.yml",
			"byteSize": 34622,
			"content": "openapi: 3.0.0\ninfo:\n  title: InterPro7 API\n  description: |\n    Programatic access of all the InterPro entries and its related entities.\n\n    Currently there are 6 main endpoints: entry, protein, structure, taxonomy, proteome and set.\n\n    The decription below refers to each of the endpoints indepndantly. However the API supports the combination of the endpoint.\n\n    For example a URL `/entry/interpro` provides a pageable list of all the interpro entries. And the URL `/protein/uniprot/p99999` retrieves all the details of the protein identified ith the uniprot accession P99999.\n\n    The combined URL `/entry/interpro/protein/uniprot/p99999` will list all the interpro entries that have a match in that particular protein.\n  version: 0.0.1\nservers:\n  - url: https://www.ebi.ac.uk/interpro/api/\n    description: Live server\n  - url: https://wwwdev.ebi.ac.uk/interpro/api/\n    description: Dev server\n  - url: http://localhost:8007/api/\n    description: Local server\npaths:\n  /entry:\n    get:\n      summary: Returns the overview counters of the InterPro entries.\n      tags:\n        - Entry\n      parameters:\n        - $ref: \"#/components/parameters/entryGroupBy\"\n        - $ref: \"#/components/parameters/entryIntegrated\"\n        - $ref: \"#/components/parameters/entryType\"\n        - $ref: \"#/components/parameters/entryGoCategory\"\n        - $ref: \"#/components/parameters/entryGoTerm\"\n        - $ref: \"#/components/parameters/entryIdaSearch\"\n        - $ref: \"#/components/parameters/entryIdaIgnore\"\n        - $ref: \"#/components/parameters/entryIdaOrdered\"\n        - $ref: \"#/components/parameters/entryIdaExact\"\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n\n  /entry/{sourceDB}:\n    get:\n      summary: Returns a list of the entries in the selected DB.\n      tags:\n        - Entry\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: Either a member database, interpro or one of the wildcards- all, integrated, unintegrated\n          schema:\n            $ref: \"#/components/schemas/EntryDB\"\n        - $ref: \"#/components/parameters/entryGroupBy\"\n        - $ref: \"#/components/parameters/entrySortBy\"\n        - $ref: \"#/components/parameters/entryIntegrated\"\n        - $ref: \"#/components/parameters/entryAnnotation\"\n        - $ref: \"#/components/parameters/entryType\"\n        - $ref: \"#/components/parameters/entryGoCategory\"\n        - $ref: \"#/components/parameters/entryGoTerm\"\n        - $ref: \"#/components/parameters/entryInterproStatus\"\n        - $ref: \"#/components/parameters/entryInterproLatest\"\n        - $ref: \"#/components/parameters/entrySignatureIn\"\n        - $ref: \"#/components/parameters/entryExtraFields\"\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /entry/{sourceDB}/{accession}:\n    get:\n      summary: Returns and object of the selected Entry\n      tags:\n        - Entry\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: Either a member database, interpro or one of the wildcards (e.g. all)\n          schema:\n            $ref: \"#/components/schemas/EntryDB\"\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the Entry to retrieve\n          schema:\n            type: string\n          example: \"IPR000001\"\n        - $ref: \"#/components/parameters/entryIDA\"\n        - $ref: \"#/components/parameters/entryInteractions\"\n        - $ref: \"#/components/parameters/entryPathways\"\n        - $ref: \"#/components/parameters/entryAnnotationMemberDB\"\n        - $ref: \"#/components/parameters/entryExtraFields\"\n        - $ref: \"#/components/parameters/entryAFmodel\"\n        #- $ref: \"#/components/parameters/entryModelMemberDB\" needs to change from ':' to '='\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\n  /protein:\n    get:\n      summary: Returns the overview counters of the Proteins in our DB.\n      tags:\n        - Protein\n      parameters:\n        - $ref: \"#/components/parameters/proteinGroupBy\"\n        - $ref: \"#/components/parameters/proteinTaxID\"\n        - $ref: \"#/components/parameters/proteinMatchPresence\"\n        - $ref: \"#/components/parameters/proteinIsFragment\"\n      #        - $ref: '#/components/parameters/proteinEvidence'\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n  /protein/{sourceDB}:\n    get:\n      summary: Returns a list of the proteins in the selected DB.\n      tags:\n        - Protein\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.\n          schema:\n            $ref: \"#/components/schemas/ProteinDB\"\n        - $ref: \"#/components/parameters/proteinGOTerm\"\n        - $ref: \"#/components/parameters/proteinListIDA\"\n        - $ref: \"#/components/parameters/proteinID\"\n        - $ref: \"#/components/parameters/proteinTaxID\"\n        - $ref: \"#/components/parameters/proteinMatchPresence\"\n        - $ref: \"#/components/parameters/proteinIsFragment\"\n        - $ref: \"#/components/parameters/proteinExtraFields\"\n        - $ref: \"#/components/parameters/proteinGroupBy\"\n\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /protein/{sourceDB}/{accession}:\n    get:\n      summary: Returns and object of the selected protein\n      tags:\n        - Protein\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.\n          schema:\n            $ref: \"#/components/schemas/ProteinDB\"\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the protein to retrieve\n          schema:\n            type: string\n          example: \"P99999\"\n        - $ref: \"#/components/parameters/proteinIDA\"\n        - $ref: \"#/components/parameters/proteinResidues\"\n        - $ref: \"#/components/parameters/proteinStructureinfo\"\n        - $ref: \"#/components/parameters/proteinExtraFeatures\"\n        - $ref: \"#/components/parameters/proteinIsoforms\"\n        - $ref: \"#/components/parameters/proteinConservation\"\n        - $ref: \"#/components/parameters/proteinExtraFields\"\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\n  /structure:\n    get:\n      summary: Returns the overview counters of the structures in the database.\n      tags:\n        - Structure\n      parameters:\n        - $ref: \"#/components/parameters/structureGroupBy\"\n        #        - $ref: '#/components/parameters/structureResolution'\n        - $ref: \"#/components/parameters/structureExperimentType\"\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n  /structure/{sourceDB}:\n    get:\n      summary: Returns a list of the structure in the selected DB.\n      tags:\n        - Structure\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.\n          schema:\n            type: string\n            enum: [\"pdb\"]\n        - $ref: \"#/components/parameters/structureResolution\"\n        - $ref: \"#/components/parameters/structureExperimentType\"\n        - $ref: \"#/components/parameters/structureGroupBy\"\n        - $ref: \"#/components/parameters/structureExtraFields\"\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /structure/{sourceDB}/{accession}:\n    get:\n      summary: Returns an object with the detail of the selected Structure\n      tags:\n        - Structure\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The only supported database for structure is PDB.\n          schema:\n            type: string\n            enum: [\"pdb\"]\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the Structure to retrieve\n          schema:\n            type: string\n          example: \"101m\"\n        - $ref: \"#/components/parameters/structureExtraFields\"\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\n  /taxonomy:\n    get:\n      summary: Returns the overview counters of the taxonomy in the database.\n      tags:\n        - Taxonomy\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n  /taxonomy/{sourceDB}:\n    get:\n      summary: Returns a list of the taxa in the selected DB.\n      tags:\n        - Taxonomy\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The only supported database for taxonomy is UniProt.\n          schema:\n            type: string\n            enum: [\"uniprot\"]\n        - $ref: \"#/components/parameters/taxonomyKeySpecies\"\n        - $ref: \"#/components/parameters/taxonomyExtraFields\"\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /taxonomy/{sourceDB}/{accession}:\n    get:\n      summary: Returns an object with the details of the selected Taxon\n      tags:\n        - Taxonomy\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The only supported database for taxonomy is UniProt.\n          schema:\n            type: string\n            enum: [\"uniprot\"]\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the Taxon to retrieve\n          schema:\n            type: integer\n          example: 9606\n        - $ref: \"#/components/parameters/taxonomyWithNames\"\n        - $ref: \"#/components/parameters/taxonomyFilterByEntry\"\n        - $ref: \"#/components/parameters/taxonomyFilterByEntryDB\"\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\n  /proteome:\n    get:\n      summary: Returns the overview counters of the Proteome in the database.\n      tags:\n        - Proteome\n      #      parameters: Removed as all proteomes included in InterPro are reference.\n      #        - $ref: '#/components/parameters/proteomeGroupBy'\n      #        - $ref: '#/components/parameters/proteomeIsReference'\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n  /proteome/{sourceDB}:\n    get:\n      summary: Returns a list of the Proteomes in the selected DB.\n      tags:\n        - Proteome\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The only supported database for Proteome is UniProt.\n          schema:\n            type: string\n            enum: [\"uniprot\"]\n        - $ref: \"#/components/parameters/proteomeExtraFields\"\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /proteome/{sourceDB}/{accession}:\n    get:\n      summary: Returns an object with the details of the selected Proteome\n      tags:\n        - Proteome\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: The only supported database for Proteome is UniProt.\n          schema:\n            type: string\n            enum: [\"uniprot\"]\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the Proteome to retrieve\n          schema:\n            type: string\n          example: \"up000000211\"\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\n  /set:\n    get:\n      summary: Returns the overview counters of the set in the database.\n      tags:\n        - Sets\n      responses:\n        $ref: \"#/components/responses/AggregationsAndErrors\"\n  /set/{sourceDB}:\n    get:\n      summary: Returns a list of the sets in the selected DB.\n      tags:\n        - Sets\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: Currently we have sets of entries from pfam and cdd.\n          schema:\n            type: string\n            enum: [\"all\", \"cdd\", \"pfam\"]\n        - $ref: \"#/components/parameters/setExtraFields\"\n      responses:\n        $ref: \"#/components/responses/ListAndErrors\"\n  /set/{sourceDB}/{accession}:\n    get:\n      summary: Returns an object with the details of the selected set.\n      tags:\n        - Sets\n      parameters:\n        - name: sourceDB\n          in: path\n          required: true\n          description: Currently we have sets of entries from pfam and cdd.\n          schema:\n            type: string\n            enum: [\"all\", \"cdd\", \"pfam\"]\n        - name: accession\n          in: path\n          required: true\n          description: The accession of the set to retrieve\n          schema:\n            type: string\n          example: \"cl0001\"\n        - $ref: \"#/components/parameters/setAlignments\"\n      responses:\n        $ref: \"#/components/responses/MetadataAndErrors\"\n\ncomponents:\n  schemas:\n    MemberDB:\n      type: string\n      enum:\n        - cathgene3d\n        - hamap\n        - panther\n        - pirsf\n        - prints\n        - prosite\n        - profile\n        - pfam\n        - prodom\n        - smart\n        - ssf\n        - tigrfams\n        - cdd\n        - sfld\n    EntryDB:\n      type: string\n      enum:\n        - InterPro\n        - all\n        - unintegrated\n        - integrated\n        - cathgene3d\n        - hamap\n        - panther\n        - pirsf\n        - prints\n        - prosite\n        - profile\n        - pfam\n        - prodom\n        - smart\n        - ssf\n        - tigrfams\n        - cdd\n        - sfld\n    EntryType:\n      type: string\n      enum:\n        - homologous_superfamily\n        - family\n        - domain\n        - repeat\n        - conserved_site\n        - binding_site\n        - active_site\n        - ptm\n    ProteinDB:\n      type: string\n      enum:\n        - reviewed\n        - unreviewed\n        - uniprot\n  parameters:\n    entryGroupBy:\n      name: group_by\n      in: query\n      description: |\n        Groups the current selection of entries by the given parameter, and counts the unique entries for each group.\n\n        **Note:** The valid values for the parameter to group by changes depending of the context:\n          * `/entry`:\n            * `type`, `source_database`, `tax_id`, `go_terms`\n          * `/entry/all`:\n            * `type`, `source_database`, `tax_id`, `go_terms`\n          * `/entry/integrated`:\n            * `type`, `source_database`, `tax_id`, `go_terms`\n          * `/entry/unintegrated`:\n            * `type`, `source_database`, `tax_id`, `go_terms`\n          * `/entry/interpro`:\n            * `type`, `tax_id`, `source_database`, `member_databases`, `go_terms`, `go_categories`\n          * `/entry/{sourceDB}`:\n            * `type`, `tax_id`, `source_database`, `go_terms`, `go_categories`\n\n        **Note:** This parameter changes the output's format.\n\n        **Note:** This parameter might not play along with other parameters.\n      schema:\n        type: string\n        enum:\n          - type\n          - source_database\n          - tax_id\n          - member_databases\n          - go_terms\n          - go_categories\n    entrySortBy:\n      name: sort_by\n      in: query\n      description: Order the entries using the option selected\n      schema:\n        type: string\n        enum:\n          - accession\n          - integrated\n    entryIntegrated:\n      name: integrated\n      in: query\n      description: Filters the entries that are integrated with the given interPro accession\n      schema:\n        type: string\n        pattern: '^[Ii][Pp][Rr]\\d{6}$'\n    entryType:\n      name: type\n      in: query\n      description: Filter entries by its entry type\n      schema:\n        $ref: \"#/components/schemas/EntryType\"\n    entryGoCategory:\n      name: go_category\n      in: query\n      description: \n        Filter the entries tha belong to one of the high level GO categories. Use P for Biological Process, F for Molecular Function, and C for Cellular Component.\n       \n        **Note:** This only works if the sourceDB selected is InterPro.\n      schema:\n        type: string\n        enum: [\"P\", \"F\", \"C\"]\n    entryGoTerm:\n      name: go_term\n      in: query\n      description: Filters the entries that have been annotated with the given GO term.\n      schema:\n        type: string\n        pattern: '^[Gg][Oo]:\\d{7}$'\n    entryAnnotation:\n      name: annotation\n      in: query\n      description: Filters the entries to those which have an annotation of the given type\n      schema:\n        type: string\n        enum:\n          - logo\n          - alignment\n          - hmm\n    entryIdaSearch:\n      name: ida_search\n      in: query\n      description: |\n        Search by InterPro Domain Architecture (IDA).\n\n        Include a comma separated list of the domains accessions(InterPro or Pfam) to be included in the IDA.\n\n        **Note:**  When using this parameter, the response won't include the aggregated counts of `/entry` and parameters not related with IDA search will be ignored.\n\n        **Note:**  To get the full list of IDA check the `Send empty value` option.\n      schema:\n        type: string\n      allowEmptyValue: true\n    entryIdaIgnore:\n      name: ida_ignore\n      in: query\n      description: |\n        Ignore domains When doing a Search by InterPro Domain Architecture (IDA).\n\n        Comma separated list of PFam or interprodomains to ignore.\n\n        **Note:** This parameter only works when `ida_search` is also present.\n      schema:\n        type: string\n    entryIdaOrdered:\n      name: ordered\n      in: query\n      description: |\n        Establish that the domains to search using `ida_search` should be in order\n\n        **Note:** This parameter only works when `ida_search` is also present.\n      schema:\n        type: string\n        enum:\n          - ordered\n    entryIdaExact:\n      name: exact\n      in: query\n      description: |\n        Establish that the domains to search using `ida_search` should be exact.\n\n        Only the domains included in `ida_search` will be included and they will be in the exact order.\n\n        **Note:** This parameter only works when `ida_search` and `ordered` are also present.\n      schema:\n        type: string\n        enum:\n          - exact\n    entryInterproStatus:\n      name: interpro_status\n      in: query\n      description: |\n        counts how many entries in the selection are integrated and how many are not.\n\n        **Note:** This only works if the sourceDB selected is a member Database.\n      schema:\n        type: string\n        enum:\n          - interpro_status\n    entrySignatureIn:\n      name: signature_in\n      in: query\n      description: |\n        Filters InterPro entries to those that have a match with the given memberDB\n\n        **Note:** This only works if the sourceDB selected is InterPro.\n      schema:\n        $ref: \"#/components/schemas/MemberDB\"\n    entryInterproLatest:\n      name: latest_entries\n      in: query\n      description: |\n        List of the latest entries registered in Interpro. Based in the Release Notes.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n\n        **Note:** This only works if the sourceDB selected is InterPro.\n      schema:\n        type: string\n        enum:\n          - latest_entries\n    entryExtraFields:\n      name: extra_fields\n      in: query\n      description: Includes the value of the selected fields\n      schema:\n        type: string\n        style: form\n        allowReserved: true\n        explode: false\n        enum:\n          - counters\n          - entry_id\n          - short_name\n          - description\n          - wikipedia\n          - literature\n          - hierarchy\n          - cross_references\n          - entry_date\n          - is_featured\n          - overlaps_with\n    entryIDA:\n      name: ida\n      in: query\n      description: |\n        Returns a list of the domain architectures that contain this entry.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n\n        **Note:** This only works if the sourceDB selected is InterPro or pfam.\n\n        **Note:** This modifier doesn't require parameters, check `Send empty value` to use it.\n      schema:\n        type: string\n      allowEmptyValue: true\n    entryInteractions:\n      name: interactions\n      in: query\n      description: |\n        Returns a list of interactions reported for the selected entry.\n\n        **Note:** This only works if the sourceDB selected is InterPro.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n      schema:\n        type: string\n        enum:\n          - interactions\n    entryPathways:\n      name: pathways\n      in: query\n      description: |\n        Returns a list of pathways reported for the selected entry.\n\n        **Note:** This only works if the sourceDB selected is InterPro.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n      schema:\n        type: string\n        enum:\n          - pathways\n    entryAnnotationMemberDB:\n      name: annotation\n      in: query\n      description: |\n        Extra annotations provided by the member database about this entry\n\n        **Note:** This only works if the sourceDB selected is a member DB.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n      schema:\n        type: string\n        enum:\n          - logo\n          - hmm\n          - alignment\n    entryAFmodel:\n      name: has_model\n      in: query\n      description: |\n        Returns a list of proteins with/without an AlphaFold prediction for the InterPro entry selected\n\n        **Note:** This parameter only works when the sourceDB selected is InterPro.\n\n         **Note: ** This modifier doesn't operates in combination with other parameters.\n\n      schema:\n        type: boolean\n    entryModelMemberDB:\n      name: model\n      in: query\n      description: |\n        Structural model information from RoseTTAFold.\n\n        **Note:** This parameter only works when the sourceDB selected is InterPro or Pfam.\n\n        **Note:** This modifier doesn't operates in combination with other parameters.\n      schema:\n        type: string\n        enum:\n          - structure\n          - contacts\n          - lddt\n\n    proteinGroupBy:\n      name: group_by\n      in: query\n      description: |\n        Groups the current selection of proteins by the given parameter, and counts the unique proteins for each group.\n\n        **Note:** This parameter changes the output's format.\n\n        **Note:** This parameter might not play along with other parameters\n      schema:\n        type: string\n        enum:\n          - tax_id\n          - source_database\n          - go_terms\n          - match_presence\n          - is_fragment\n    proteinTaxID:\n      name: tax_id\n      in: query\n      description: Filters the proteins that belong to this taxonomy id. It doesn't search in its lineage.\n      schema:\n        type: number\n    proteinEvidence:\n      name: protein_evidence\n      in: query\n      description: Filters the proteins that have an evidence code equal to the one in the parameter.\n      schema:\n        type: number\n    proteinMatchPresence:\n      name: match_presence\n      in: query\n      description: Filters the proteins that have (`true`) or don't have (`false`) matches to an InterPro entry\n      schema:\n        type: boolean\n    proteinIsFragment:\n      name: is_fragment\n      in: query\n      description: Filters the proteins that are (`true`) or are not (`false`) fragments\n      schema:\n        type: boolean\n    proteinIDA:\n      name: ida\n      in: query\n      description: Gets the IDA of the selected protein.\n      schema:\n        type: string\n        enum:\n          - ida\n    proteinListIDA:\n      name: ida\n      in: query\n      description: |\n        Filters the proteins that follow the domain architecture of a given IDA accession e.g. 44d74765435ca3c68b3d87ebbb680e5498d1a24a\n      schema:\n        type: string\n    proteinID:\n      name: id\n      in: query\n      description: Filters the proteins by its ID. e.g. CYC_HUMAN\n      schema:\n        type: string\n    proteinGOTerm:\n      name: go_term\n      in: query\n      description: Filters the proteins that have been annotated with the given GO term. e.g. GO:0006122\n      schema:\n        type: string\n        pattern: '^[Gg][Oo]:\\d{7}$'\n    proteinResidues:\n      name: residues\n      in: query\n      description: Gets a JSON with the residues of the selected protein.\n      schema:\n        type: string\n        enum:\n          - residues\n    proteinStructureinfo:\n      name: structureinfo\n      in: query\n      description: Gets a JSON with the structure information (e.g. Predicted domains) of the selected protein.\n      schema:\n        type: string\n        enum:\n          - structureinfo\n    proteinExtraFeatures:\n      name: extra_features\n      in: query\n      description: Gets a JSON containing additional features(e.g. mobidb, coil, etc.) of the selected protein.\n      schema:\n        type: string\n        enum:\n          - extra_features\n    proteinIsoforms:\n      name: isoforms\n      in: query\n      description: Gets a JSON containing the information of existing isoforms (check `Send empty value` option) or data for the specified isoform (e.g. `Q6ZNL6-1`).\n      schema:\n        type: string\n      allowEmptyValue: true\n    proteinConservation:\n      name: conservation\n      in: query\n      description: Calculates the conservation per residue of the selected protein using the member database specified.\n      schema:\n        type: string\n        enum:\n          - cathgene3d\n          - hamap\n          - panther\n          - pirsf\n          - prints\n          - prosite\n          - profile\n          - pfam\n          - prodom\n          - smart\n          - ssf\n          - tigrfams\n          - cdd\n          - sfld\n    proteinExtraFields:\n      name: extra_fields\n      in: query\n      description: Includes the value of the selected fields\n      schema:\n        type: string\n        style: form\n        allowReserved: true\n        explode: false\n        enum:\n          - counters\n          - identifier\n          - description\n          - sequence\n          - gene\n          - go_terms\n          - evidence_code\n          - residues\n          - tax_id\n          - proteome\n          - extra_features\n          - structure\n          - is_fragment\n          - ida_id\n          - ida\n\n    structureGroupBy:\n      name: group_by\n      in: query\n      description: |\n        Groups the current selection of structures by the given parameter, and counts the unique structures for each group.\n\n        **Note:** This parameter changes the output's format.\n\n        **Note:** This parameter might not play along with other parameters\n      schema:\n        type: string\n        enum:\n          - experiment_type\n    structureResolution:\n      name: resolution\n      in: query\n      description: |\n        Filters the structures by its resolution (in Amstrong).\n\n        The range is given in the format: `[start]-[end]` were both `[start]` and `[end]` are float numbers.\n      schema:\n        type: string\n        pattern: '^\\d+(\\.\\d+)?-\\d+(\\.\\d+)?$'\n    structureExperimentType:\n      name: experiment_type\n      in: query\n      description: Filters the structures by the experiment type\n      schema:\n        type: string\n        enum:\n          - x-ray\n          - nmr\n          - em\n\n    structureExtraFields:\n      name: extra_fields\n      in: query\n      description: Include the extra fields in the  payload\n      schema:\n        type: string\n        style: form\n        explode: false\n        enum:\n          - release_date\n          - literature\n          - chains\n          - secondary_structures\n          - counters\n\n    taxonomyExtraFields:\n      name: extra_fields\n      in: query\n      description: Include the extra fields in the payload\n      schema:\n        type: string\n        style: form\n        explode: false\n        enum:\n          - counters\n          - scientific_name\n          - full_name\n          - lineage\n          - rank\n    taxonomyKeySpecies:\n      name: key_species\n      in: query\n      description: |\n        Filter tha only includes the selected key species:\n        * `39947`: 'Oryza sativa subsp. japonica'\n        * `3702`: 'Arabidopsis thaliana'\n        * `9606`: 'Homo sapiens'\n        * `7955`: 'Danio rerio'\n        * `10090`: 'Mus musculus'\n        * `7227`: 'Drosophila melanogaster'\n        * `6239`: 'Caenorhabditis elegans'\n        * `559292`: 'Saccharomyces cerevisiae'\n        * `284812`: 'Schizosaccharomyces pombe'\n        * `83333`: 'Escherichia coli'\n        * `10665`: 'Escherichia virus T4'\n        * `2242`: 'Halobacterium salinarum'\n      schema:\n        type: string\n        enum:\n          - key_species\n    taxonomyWithNames:\n      name: with_names\n      in: query\n      description: |\n        Includes an object to the payload where the key is a `tax_id` and the value is its name.\n\n        The names object includes all the taxa mentioned in the payload (i.e. lineage, children and parent).\n      schema:\n        type: string\n        enum:\n          - with_names\n    taxonomyFilterByEntry:\n      name: filter_by_entry\n      in: query\n      description: |\n        A quick access method to get the counters of the selected taxon filtered by the ones which have a match with the given entry.\n\n        e.g. You can find out how many human proteins have a match with IPR000001: `/api/taxonomy/uniprot/9606?filter_by_entry=IPR000001`\n\n        **Note:** The payload already includes the names. It will error if use together with `with_names` or `filter_by_entry_db`\n      schema:\n        type: string\n    taxonomyFilterByEntryDB:\n      name: filter_by_entry_db\n      in: query\n      description: |\n        A quick access method to get the counters of the selected taxon filtered by the ones which have a match with the given database.\n\n        e.g. You can find out how many human proteins have a match with a pfam entry  `/api/taxonomy/uniprot/9606?filter_by_entry_db=pfam`\n\n        **Note:** The payload already includes the names. It will error if use together with `with_names` or `filter_by_entry`\n      schema:\n        type: string\n\n    proteomeGroupBy:\n      name: group_by\n      in: query\n      description: |\n        Groups the current selection of proteomes by the given parameter, and counts the unique proteins for each group.\n\n        **Note:** This parameter changes the output's format.\n\n        **Note:** This parameter might not play along with other parameters\n      schema:\n        type: string\n        enum:\n          - proteome_is_reference\n    proteomeIsReference:\n      name: is_reference\n      in: query\n      description: Filters the list of proteomes by those which are tagged as a reference proteome.\n      schema:\n        type: string\n        enum:\n          - is_reference\n    proteomeExtraFields:\n      name: extra_fields\n      in: query\n      description: Include the extra fields in the  payload\n      schema:\n        type: string\n        style: form\n        explode: false\n        enum:\n          - counters\n          - strain\n          - assembly\n\n    setExtraFields:\n      name: extra_fields\n      in: query\n      description: Include the extra fields in the  payload\n      schema:\n        type: string\n        style: form\n        explode: false\n        enum:\n          - counters\n          - description\n          - relationships\n    setAlignments:\n      name: alignments\n      in: query\n      description: |\n        Gets a JSON containing the information of the alignments for the current set, for a particular entry (e.g. cd00113)\n\n        If not entry is given it will recover all the alignments. E.g. https://www.ebi.ac.uk/interpro/api/set/cdd/cl00011?alignments\n      schema:\n        type: string\n      allowEmptyValue: true\n\n  responses:\n    Aggregations:\n      description: A JSON object with aggregating the entities in this endpoint by database\n      content:\n        application/json:\n          schema:\n            type: object\n    List:\n      description: |\n        A JSON object that includes a key `results`, which is an list of the filtered values.\n\n        This type of response can be paginated using the `cursor`, `page_size` parameters.\n      content:\n        application/json:\n          schema:\n            type: object\n    Metadata:\n      description: A JSON object that includes a key `metadata`, which is an object with the data related to the selected entity.\n      content:\n        application/json:\n          schema:\n            type: object\n    ListAndErrors:\n      \"200\":\n        $ref: \"#/components/responses/Metadata\"\n      \"204\":\n        $ref: \"#/components/responses/NoContent\"\n      \"404\":\n        $ref: \"#/components/responses/NotFound\"\n      \"408\":\n        $ref: \"#/components/responses/Timeout\"\n      \"410\":\n        $ref: \"#/components/responses/Gone\"\n      \"500\":\n        $ref: \"#/components/responses/ServerError\"\n    AggregationsAndErrors:\n      \"200\":\n        $ref: \"#/components/responses/Metadata\"\n      \"204\":\n        $ref: \"#/components/responses/NoContent\"\n      \"404\":\n        $ref: \"#/components/responses/NotFound\"\n      \"408\":\n        $ref: \"#/components/responses/Timeout\"\n      \"410\":\n        $ref: \"#/components/responses/Gone\"\n      \"500\":\n        $ref: \"#/components/responses/ServerError\"\n    MetadataAndErrors:\n      \"200\":\n        $ref: \"#/components/responses/Metadata\"\n      \"204\":\n        $ref: \"#/components/responses/NoContent\"\n      \"404\":\n        $ref: \"#/components/responses/NotFound\"\n      \"408\":\n        $ref: \"#/components/responses/Timeout\"\n      \"410\":\n        $ref: \"#/components/responses/Gone\"\n      \"500\":\n        $ref: \"#/components/responses/ServerError\"\n\n    NoContent:\n      description: Empty response. The request is correct but produced an empty dataset.\n    NotFound:\n      description: Error. The request is incorrect.\n    Gone:\n      description: Error. The requested entity has been removed from InterPro.\n      content:\n        application/json:\n          schema:\n            type: object\n    ServerError:\n      description: Error. There was an issue in our servers.\n    Timeout:\n      description: |\n        Timeout. The server took too long to process this request. Please notice that:\n        * The request is moved to run in the background.\n        * If you try again this query you should expect:\n          * An almost instant 408, meaning the previous query is still running.\n          * The response of the query, if the API has finished the background process.\n",
			"canonicalURL": "/github.com/ProteinsWebTeam/interpro7-api@3d860dd4bf56cd4b0b04ce91dbc3e0350937995e/-/blob/webfront/static/interpro7-swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ProteinsWebTeam/interpro7-api/blob/3d860dd4bf56cd4b0b04ce91dbc3e0350937995e/webfront/static/interpro7-swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response; yaml: line 1: cannot unmarshal !!str `#/compo...` into ogen.Response"
}