{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ApolloFoundation/Apollo"
		},
		"file": {
			"name": "apollo-api-v2.yaml",
			"size": 0,
			"path": "apl-api2/src/main/resources/yaml/apollo-api-v2.yaml",
			"byteSize": 99515,
			"content": "openapi: 3.0.1\ninfo:\n  title: Apollo API V2\n  description: |\n    Apollo API V2 work in progress\n      Notice:\n      The symbols '@@' in the path definition are used as a marker for the code generation routine.\n      If you want to use this YAML specification in the Swagger editor manually, you should replace that marker with spaces.\n  contact:\n    email: apiteam@firstbridge.io\n  version: 2.0.0\nexternalDocs:\n  description: The project VCS repository\n  url: https://github.com/ApolloFoundation/Apollo\nservers:\n  - url: http://localhost:7876/rest\n\ntags:\n  - name: account\n    description: Operations about account\n  - name: state\n    description: Everything about blockchain state\n  - name: tx\n    description: Access to transactions management\n  - name: operations\n    description: List operations by account (the bank reconcilation)\n  - name: info\n    description: An information\n  - name: failed-txs\n    description: Operations, related to node's failed transactions state verification and debugging designated for node's admin use\n  - name: smc\n    description: Smart contract transactions management\n  - name: asr\n    description: Apollo Specification Request for Smart contracts\n\npaths:\n  /@@account:\n    post:\n      tags:\n        - account\n      summary: Returns unsigned CreateChildAccount transaction for creating child accounts\n      description: |\n        Returns unsigned CreateChildAccount transaction as a byte array.\n        The list of child public keys is attached in the transaction appendix.\n      operationId: createChildAccountTx\n      requestBody:\n        description: the parent account and the list of public keys\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateChildAccountResp'\n        401:\n          description: Unauthorized Error\n        403:\n          description: Access Forbidden\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@account/test:\n    post:\n      tags:\n        - account\n      summary: Returns signed CreateChildAccount transaction for creating child accounts\n      description: |\n        Returns signed CreateChildAccount transaction as a byte array.\n        The list of child public keys is attached in the transaction appendix.\n      operationId: createChildAccountTxTest\n      requestBody:\n        description: the parent account and the list of public keys\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountReqTest'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateChildAccountResp'\n        401:\n          description: Unauthorized Error\n        403:\n          description: Access Forbidden\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@account/money:\n    post:\n      tags:\n        - account\n      summary: Returns signed SendMoney transaction from child account\n      description: |\n        Returns signed SendMoney transaction as a byte array.\n        This transaction is a multi-signature signed tx.\n      operationId: createChildAccountTxSendMony\n      requestBody:\n        description: the parent account, child account and other\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountReqSendMoney'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateChildAccountResp'\n        401:\n          description: Unauthorized Error\n        403:\n          description: Access Forbidden\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@account/{account}:\n    get:\n      tags:\n        - account\n      summary: Returns the details account information\n      operationId: getAccountInfo\n      parameters:\n        - name: account\n          in: path\n          description: The account id\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountInfoResp'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/blockchain:\n    get:\n      tags:\n        - state\n      summary: Get blockchain state object\n      description: Return details information about the blockchain state\n      operationId: getBlockchainState\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockchainState'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/block:\n    get:\n      tags:\n        - state\n      summary: Get block object\n      description: Return details information about the block given block height. If no height is provided, it will fetch the latest block.\n      operationId: getBlockByHeight\n      parameters:\n        - name: height\n          in: query\n          description: a blockchain height\n          required: false\n          schema:\n            type: string\n            format: int64\n            example: '4315161'\n            default: '-1'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockInfo'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/block/{block}:\n    get:\n      tags:\n        - state\n      summary: Get block object given block id\n      description: Return the detail information about block given id\n      operationId: getBlockById\n      parameters:\n        - name: block\n          in: path\n          description: Block id\n          required: true\n          schema:\n            type: string\n            format: hex_bytearray\n            example: '1a0feb1043151604016701'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockInfo'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/tx/{transaction}:\n    get:\n      tags:\n        - state\n      summary: Get transaction receipt given transaction id.\n      description: Return the brief information about transaction given id.\n      operationId: getTxReceiptById\n      parameters:\n        - name: transaction\n          in: path\n          description: Transaction id\n          required: true\n          schema:\n            type: string\n            format: hex_bytearray\n            example: '1a0feb06043151604016701'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxReceipt'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/tx:\n    post:\n      tags:\n        - state\n      summary: Get transaction receipt list given list of the transaction id.\n      description: Return the list of the brief information about transactions.\n      operationId: getTxReceiptList\n      requestBody:\n        description: the list of transaction id\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: hex_bytearray\n                example: '83aa340eb41780f61376852'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TxReceipt'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/unconfirmed/count:\n    get:\n      tags:\n        - state\n      summary: Get count of unconfirmed transaction receipts.\n      description: Return the count of unconfirmed transactions.\n      operationId: getUnconfirmedTxCount\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CountResponse'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@state/unconfirmed:\n    get:\n      tags:\n        - state\n      summary: Get list of unconfirmed transaction receipts.\n      description: Return the list of the detail information about unconfirmed transactions.\n      operationId: getUnconfirmedTx\n      parameters:\n        - name: page\n          in: query\n          description: page number (1-based)\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n            example: 1\n        - name: perPage\n          in: query\n          description: Number of entries per page (max=100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n            maximum: 100\n            default: 50\n            example: 50\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionInfoArrayResp'\n        401:\n          description: Not authenticated\n        403:\n          description: Access token does not have the required scope\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@transaction:\n    post:\n      tags:\n        - tx\n      summary: Broadcast transaction and return transaction receipt.\n      description: |\n        Asynchronously broadcast the signed transaction to the network.\n          The transaction is validated and immediately put into an unconfirmed transaction pool\n          for further sending to the blockchain.\n      operationId: broadcastTx\n      requestBody:\n        description: the signed transaction is a byte array in hex format\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TxRequest'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TxReceipt'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        409:\n          $ref: '#/components/responses/ConflictResource'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@transaction/batch:\n    post:\n      tags:\n        - tx\n      summary: Broadcast a batch of transactions and return the transaction receipt list.\n      description: Asynchronously broadcast the batch of the signed transaction to the network. The transactions are immediately put into an unconfirmed transaction pool in the same order as in the batch and later are sending to the network.\n      operationId: broadcastTxBatch\n      requestBody:\n        description: an array of signed transactions, each item is a byte array in hex format\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/TxRequest'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListResponse'\n        401:\n          description: Not authenticated\n        403:\n          description: Access token does not have the required scope\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@transaction/{transaction}:\n    get:\n      tags:\n        - tx\n      summary: Get transaction object given transaction id.\n      description: Return the detail information about transaction by id.\n      operationId: getTxById\n      parameters:\n        - name: transaction\n          in: path\n          description: Transaction id\n          required: true\n          schema:\n            type: string\n            format: hex_bytearray\n            example: '1aa130eb6043151ad6040f16701'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionInfoResp'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@operation/count:\n    post:\n      tags:\n        - operations\n      summary: Returns the count of operations corresponding the query object group by account\n      operationId: getOperationsCount\n      requestBody:\n        description: the query object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryObject'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryCountResult'\n        401:\n          description: Not authenticated\n        403:\n          description: Access token does not have the required scope\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n  /@@operation:\n    post:\n      tags:\n        - operations\n      summary: Returns the operation list corresponding the query object group by account\n      operationId: getOperations\n      requestBody:\n        description: the query object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryObject'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResult'\n        401:\n          description: Not authenticated\n        403:\n          description: Access token does not have the required scope\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - bearerAuth: []\n\n  /@@info/health:\n    get:\n      tags:\n        - info\n      summary: Gets node health\n      operationId: getHealthInfo\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthResponse'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@info/blockchain:\n    get:\n      tags:\n        - info\n      summary: Get blockchain object\n      description: Return details information about the blockchain\n      operationId: getBlockchainInfo\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockchainInfo'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /@@currencies/burnings:\n    post:\n      tags:\n        - currencies\n      summary: Create currency burning transaction with options to validate, sign and broadcast created transaction.\n      description: Create transaction designated for the currency burning operation, transaction may be created as unsigned (when only sender's `publicKey` specified), then verified by the client, signed and sent using `/transaction` broadcast endpoint. When the `passphrase` or `secretPhrase` and `broadcast` is omitted or is true, then transaction will be created, signed and broadcasted to the network by the node,  set `broadcast` to false to get already signed and fully validated transaction without sending transaction to peers\n      operationId: currencyBurningTx\n      requestBody:\n        description: Set of parameters (most are optional, more important are higher) for the transaction creation, secretPhrase or publicKey or passphrase, deadline, fee, currencyId, burningAmount, sender parameters are mandatory\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CurrencyBurningTxCreationRequest'\n        required: true\n      responses:\n        200:\n          description: Transaction is successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionCreationResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        409:\n          $ref: '#/components/responses/ConflictResource'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@failed-txs/{id}:\n    post:\n      tags:\n        - failed-txs\n      summary: Verify failed transaction by id\n      description: Verify, that given transaction failed in a same way with same error on connected peers, and return validation result\n      operationId: verifyFailedTransaction\n      parameters:\n        - name: id\n          in: path\n          description: Failed transaction id in an unsigned integer form\n          required: true\n          schema:\n            type: string\n            format: int64\n            example: '12911439768940768505'\n      responses:\n        200:\n          description: Transaction was successfully verified or is not failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionVerificationResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - admin_api_key: []\n  /@@failed-txs:\n    get:\n      tags:\n        - failed-txs\n      summary: Get last verified failed transactions\n      description: Retrieve results of the last background verification of failed transactions\n      operationId: getVerifiedFailedTransactions\n      responses:\n        200:\n          description: Background verification job is working OK, and results may be present\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastTransactionVerificationResponse'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - admin_api_key: []\n  /@@failed-txs/:\n    post:\n      tags:\n        - failed-txs\n      summary: Launch failed transactions verification\n      description: \"Will manually execute failed transaction's verification starting from the last verified height. If there is no more than 1440 blocks from the last verified height, new transaction's verification will not be started\"\n      operationId: verifyFailedTransactions\n      responses:\n        200:\n          description: Verification result, in case of successful verification's launch or empty result when no failed transactions or request is sent too early\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastTransactionVerificationResponse'\n        500:\n          $ref: '#/components/responses/ServerError'\n      security:\n        - admin_api_key: []\n\n  /@@smc/publish:\n    post:\n      tags:\n        - smc\n      summary: Create an unsigned PublishContract transaction\n      description: |\n        Returns an unsigned PublishContract transaction as a byte array.\n      operationId: createPublishContractTx\n      requestBody:\n        description: the contract source and constructor parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishContractReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionArrayResp'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/publish/multisig:\n    post:\n      tags:\n        - smc\n      summary: Create an unsigned PublishContract transaction\n      description: |\n        Returns an unsigned PublishContract transaction as a byte array.\n      operationId: createPublishContractTxMultisig\n      requestBody:\n        description: the contract source and constructor parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishContractReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionArrayResp'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/validate:\n    post:\n      tags:\n        - smc\n      summary: Validate the smart contract source code\n      description: |\n        Validate the smart contract source code, check syntax errors etc.\n      operationId: validatePublishContractTx\n      requestBody:\n        description: the contract source and constructor parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublishContractReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/method/call:\n    post:\n      tags:\n        - smc\n      summary: Returns signed transaction to call the contract method.\n      description: |\n        Returns signed transaction to call the contract method.\n      operationId: createCallContractMethodTx\n      requestBody:\n        description: the contract method and method parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CallContractMethodReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionArrayResp'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/method/validate:\n    post:\n      tags:\n        - smc\n      summary: Validate the source code of the method calling\n      description: |\n        Validate the source code of the method calling, check syntax errors etc.\n      operationId: validateCallContractMethodTx\n      requestBody:\n        description: the contract method and method parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CallContractMethodReq'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BaseResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/method/read:\n    post:\n      tags:\n        - smc\n      summary: read the smart contract\n      description: read the smart contract and return result value.\n      operationId: callViewMethod\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CallViewMethodReq'\n      responses:\n        200:\n          description: Returns the result of evaluating the given method of the smart contract\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResultValueResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/owner/{account}:\n    get:\n      tags:\n        - smc\n      summary: Get a list of the smart contracts published by a certain account.\n      description: Return a list of the smart contracts published by a certain account.\n      operationId: getSmcByOwnerAccount\n      parameters:\n        - name: account\n          in: path\n          description: The account id\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        - $ref: '#/components/parameters/FirstIndexParameter'\n        - $ref: '#/components/parameters/LastIndexParameter'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractListResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc:\n    get:\n      tags:\n        - smc\n      summary: Get list of the smart contract details\n      description: Returns list of the smart contract details\n      operationId: getSmcList\n      parameters:\n        - name: address\n          in: query\n          description: The contract address\n          required: false\n          schema:\n            type: string\n            example: 'APL-AEAE-TJKJ-DVGC-UFGH'\n        - name: publisher\n          in: query\n          description: The publisher address\n          required: false\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        - name: name\n          in: query\n          description: The contract name\n          required: false\n          schema:\n            type: string\n            example: 'MyAPL20-1721'\n        - name: baseContract\n          in: query\n          description: The base class name\n          required: false\n          schema:\n            type: string\n            example: 'APL20'\n        - name: timestamp\n          in: query\n          description: The timestamp of the block that contains contract transaction, Unix timestamp in milliseconds\n          required: false\n          schema:\n            type: integer\n            format: int64\n            example: 1591696372000\n        - name: transaction\n          in: query\n          description: The transaction that contains contract\n          required: false\n          schema:\n            type: string\n            format: int64\n            example: 387615916963\n        - name: status\n          in: query\n          description: The contract status\n          required: false\n          schema:\n            type: string\n            description: the contract status ACTIVE, CLOSED, DESTROYED\n            example: ACTIVE\n        - $ref: '#/components/parameters/FirstIndexParameter'\n        - $ref: '#/components/parameters/LastIndexParameter'\n\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractListResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/{address}:\n    get:\n      tags:\n        - smc\n      summary: Get the smart contract details given address.\n      description: Returns the smart contract details given address.\n      operationId: getSmcByAddress\n      parameters:\n        - name: address\n          in: path\n          description: The contract address\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractListResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/{address}/event:\n    post:\n      tags:\n        - smc\n      summary: Get the contract events fired in the past.\n      description: Returns the contract events fired in the past.\n      operationId: getSmcEvents\n      parameters:\n        - name: address\n          in: path\n          description: The contract address\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractEventsRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractEventsResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/{address}/state:\n    get:\n      tags:\n        - smc\n      summary: Get the contract state json given address.\n      description: Returns the contract state json.\n      operationId: getSmcStateByAddress\n      parameters:\n        - name: address\n          in: path\n          description: The contract address\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractStateResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/{address}/spec:\n    get:\n      tags:\n        - smc\n      summary: Get the contract specification.\n      description: Returns the contract specification.\n      operationId: getSmcSpecificationByAddress\n      parameters:\n        - name: address\n          in: path\n          description: The contract address\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractSpecResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/asr:\n    get:\n      tags:\n        - smc\n        - asr\n      summary: Get the ASR templates list.\n      description: Returns the ASR templates list.\n      operationId: getSmcAsrModules\n      parameters:\n        - name: language\n          in: query\n          description: The language name\n          required: false\n          schema:\n            type: string\n            example: 'js'\n        - name: version\n          in: query\n          description: The language version\n          required: false\n          schema:\n            type: string\n            example: '0.1.1'\n        - name: type\n          in: query\n          description: The module type, allowed values - token, escrow; the default value is token.\n          required: false\n          schema:\n            type: string\n            example: 'token'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModuleListResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/asr/{module}/init:\n    get:\n      tags:\n        - smc\n        - asr\n      summary: Get the contract constructor of the given ASR module.\n      description: Returns the contract constructor\n      operationId: getAsrModuleInitSpec\n      parameters:\n        - name: module\n          in: path\n          description: The ASR module name\n          required: true\n          schema:\n            type: string\n            example: 'APL20BUY'\n        - name: language\n          in: query\n          description: The language name\n          required: false\n          schema:\n            type: string\n            example: 'js'\n        - name: version\n          in: query\n          description: The language version\n          required: false\n          schema:\n            type: string\n            example: '0.1.1'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractSpecResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/asr/{module}/src:\n    get:\n      tags:\n        - smc\n        - asr\n      summary: Get the ASR module source code.\n      description: Returns the source code of the ASR module\n      operationId: getAsrModuleSource\n      parameters:\n        - name: module\n          in: path\n          description: The ASR module name\n          required: true\n          schema:\n            type: string\n            example: 'APL20BUY'\n        - name: language\n          in: query\n          description: The language name\n          required: false\n          schema:\n            type: string\n            example: 'js'\n        - name: version\n          in: query\n          description: The language version\n          required: false\n          schema:\n            type: string\n            example: '0.1.1'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ModuleSourceResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/asr/{module}/spec:\n    get:\n      tags:\n        - smc\n        - asr\n      summary: Get the ASR module specification.\n      description: Returns the specification of the ASR module\n      operationId: getAsrModuleFullSpec\n      parameters:\n        - name: module\n          in: path\n          description: The ASR module name\n          required: true\n          schema:\n            type: string\n            example: 'APL20BUY'\n        - name: language\n          in: query\n          description: The language name\n          required: false\n          schema:\n            type: string\n            example: 'js'\n        - name: version\n          in: query\n          description: The language version\n          required: false\n          schema:\n            type: string\n            example: '0.1.1'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsrSpecResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\n  /@@smc/conversion/{address}:\n    get:\n      tags:\n        - smc\n      summary: Returns the given address in four formats a hex, Reed-Solomone code, long and unsigned long string.\n      description: Returns the given address in four formats a hex, Reed-Solomone code, long and unsigned long string. Valid input formats are hex, Reed-Solomone code, long and unsigned long\n      operationId: parseAddress\n      parameters:\n        - name: address\n          in: path\n          description: The contract address\n          required: true\n          schema:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddressSpecResponse'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        500:\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  parameters:\n    FirstIndexParameter:\n      name: firstIndex\n      in: query\n      description: The zero based index to the first data to retrive\n      required: false\n      schema:\n        type: integer\n        default: 0\n        example: 10\n    LastIndexParameter:\n      name: lastIndex\n      in: query\n      description: The zero based index to the last data to retrive\n      required: false\n      schema:\n        type: integer\n        default: -1\n        example: 25\n\n  schemas:\n    AccountInfo:\n      type: object\n      required:\n        - account\n        - publicKey\n      properties:\n        account:\n          type: string\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        publicKey:\n          description: The account public key in a hex string format\n          type: string\n          format: hex_bytearray\n          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'\n        parent:\n          type: string\n          example: 'APL-AHYW-P3YX-V426-4UMP2'\n          nullable: true\n        balance:\n          type: string\n          format: integer\n          example: '45225600000000'\n        unconfirmedbalance:\n          type: string\n          format: integer\n          example: '45225600000000'\n        status:\n          type: string\n          enum:\n            - created\n            - verified\n          example: created\n\n    AccountInfoResp:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/AccountInfo'\n\n    AccountReq:\n      required:\n        - parent\n        - publicKey\n      type: object\n      properties:\n        parent:\n          type: string\n          description: parent account id\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        child_publicKey_list:\n          type: array\n          description: list of child account public keys\n          maxItems: 128\n          items:\n            type: string\n            format: hex_bytearray\n            example: '39dc2e813bb45ff063a376e316b10cd0adeb7306111ca0eb2890194d37960152'\n\n    AccountReqSendMoney:\n      required:\n        - parent\n        - publicKey\n      type: object\n      properties:\n        parent:\n          type: string\n          description: parent account id\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        psecret:\n          type: string\n          description: parent account secret phrase\n          example: 'ParenttopSecretPhrase'\n        sender:\n          type: string\n          description: child account id\n          example: 'APL-632K-TWX3-2ALQ-973CU'\n        csecret:\n          type: string\n          description: child account secret phrase\n          example: 'ChildtopSecretPhrase'\n        recipient:\n          type: string\n          description: recipient account id\n          example: 'APL-VWMY-APVK-UFHN-3MC7N'\n        amount:\n          type: integer\n          format: int64\n          description: the amount of ATM\n\n    AccountReqTest:\n      required:\n        - parent\n        - publicKey\n      type: object\n      properties:\n        parent:\n          type: string\n          description: parent account id\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        secret:\n          type: string\n          description: parent account secret phrase\n          example: 'topSecretPhrase'\n        child_secret_list:\n          type: array\n          description: list of child secret phrases\n          maxItems: 128\n          items:\n            type: string\n            example: 'secret1'\n\n    AddressSpec:\n      type: object\n      properties:\n        rs:\n          description: Reed-Solomone code\n          type: string\n          example: \"APL-MZBG-ZYV8-Y5V3-HZZZZ\"\n        long:\n          description: signed long value\n          type: string\n          example: -1234567890\n        ulong:\n          description: unsigned long value\n          type: string\n          example: 18446744072474983726\n        hex:\n          description: hex value of account number\n          type: string\n          example: 0xffffffffb669fd2e\n\n    AddressSpecResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/AddressSpec'\n\n    ArgSpec:\n      type: object\n      properties:\n        name:\n          description: the propery name\n          type: string\n          example: \"totalSupply\"\n        type:\n          description: property type\n          type: string\n          example: uint\n\n    AsrMemberSpec:\n      type: object\n      properties:\n        type:\n          description: the object type, constructor, function, event, ...\n          type: string\n          example: function\n        name:\n          description: the method/function name\n          type: string\n          example: balanceOf\n        inputs:\n          description: input params\n          type: array\n          items:\n            $ref: '#/components/schemas/ArgSpec'\n        outputs:\n          description: output value\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertySpec'\n        stateMutability:\n          description: \"a string with one of the following values: view, nonpayable, payable, pure\"\n          type: string\n          example: view\n        visibility:\n          description: object visibility internal/external/public\n          type: string\n          example: external\n        value:\n          description: output value\n          type: string\n          example: '24999000000'\n        signature:\n          description: real method arguments\n          type: string\n          example: \"balanceOf('0x7d2825cf3a120411');\"\n\n    AsrSpec:\n      type: object\n      properties:\n        name:\n          description: the asr schema name\n          type: string\n          example: ASR20-spec.json\n        type:\n          description: the ASR module\n          type: string\n          example: ASR20\n        members:\n          description: the list of members\n          type: array\n          items:\n            - $ref: '#/components/schemas/AsrMemberSpec'\n\n    AsrSpecResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/AsrSpec'\n        - type: object\n          properties:\n            language:\n              description: the language name\n              type: string\n              example: js\n            version:\n              description: the language version\n              type: string\n              example: 0.1.1\n\n    BaseResponse:\n      type: object\n      properties:\n        protocol:\n          description: 'Protocol version'\n          type: string\n          example: '2'\n        requestProcessingTime:\n          description: 'Time in milliseconds that took from incoming request to response'\n          type: integer\n          format: int64\n          example: 12\n          default: 0\n        errorCode:\n          description: Error code on new API. null or 0 means success, no error.\n          type: integer\n          format: int32\n          example: 12\n        errorDescription:\n          description: Textual error description, e.g. exception message, etc that could be displayed to user\n          type: string\n          example: 'The mandatory parameter ''id'' is not specified.'\n\n    BlockchainInfo:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            chainid:\n              type: string\n              format: uuid\n              example: '3fecf3bd-86a3-436b-a1d6-41eefc0bd1c6'\n            ticker:\n              type: string\n              example: 'USDS'\n            consensus:\n              type: string\n              example: 'Apollo'\n            mining:\n              type: string\n              example: 'Pre-mining'\n            total_supply:\n              type: integer\n              format: int64\n              example: 10000000000\n              description: The total supply\n            decimals:\n              type: integer\n              format: int16\n              example: 8\n            burning:\n              type: integer\n              format: int64\n              example: 30000\n              description: The total amount of the burned tokens\n            genesisAccount:\n              type: string\n              format: hex_bytearray\n              example: '90001259ec21d31a30898d7'\n\n    BlockchainState:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            chainid:\n              type: string\n              format: hex_bytearray\n              example: 'a2e9b946290b48b69985dc2e5a5860a1'\n            height:\n              type: integer\n              format: int64\n              example: 4789567\n            genesisAccount:\n              type: string\n              format: hex_bytearray\n              example: '90001259ec21d31a30898d7'\n            genesisBlockId:\n              type: string\n              format: hex_bytearray\n              description: Genesis block ID\n              example: '15856251679437054149169000'\n            genesisBlockTimestamp:\n              type: integer\n              format: int64\n              description: Genesis block timestamp (epoch beginning), Unix timestamp in milliseconds\n              example: 1491696372000\n            ecBlockId:\n              type: string\n              format: hex_bytearray\n              description: The economic clustering block ID\n              example: '40faaeb15856251679437054'\n            ecBlockHeight:\n              type: integer\n              format: int64\n              description: The economic clustering block height\n              example: 3301233\n            txTimestamp:\n              type: integer\n              format: int64\n              description: Request timestamp in seconds since the genesis block\n              example: 1591696371\n            timestamp:\n              type: integer\n              format: int64\n              description: Request timestamp, Unix timestamp in milliseconds\n              example: 1591696372300\n\n    BlockInfo:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            id:\n              type: string\n              format: hex_bytearray\n              example: '1130faaeb604315160401'\n            blockSignature:\n              type: string\n              format: hex_bytearray\n              example: 'ff080e64436603df0c3b9a5b792b03a26725a83bbe6aa46eb7eed9ee83707f071b6d529d09be1f2594c6f8545c2772a091896bc808553c1774e39a41248b1e1c'\n            height:\n              type: integer\n              format: int64\n              example: 1319854\n            generator:\n              type: string\n              example: 'APL-FXHG-6KHM-23LE-42ACU'\n            generationSignature:\n              type: string\n              format: hex_bytearray\n              example: '60e598f6276371119720786b05e507cd628665473b24c8f76de436d99cf113f7'\n            generatorPublicKey:\n              type: string\n              format: hex_bytearray\n              example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'\n            timestamp:\n              type: integer\n              format: int64\n              description: Block timestamp, Unix timestamp in milliseconds\n              example: 1591696372000\n            timeout:\n              type: integer\n              format: int32\n              example: 1\n            version:\n              description: The block version\n              type: integer\n              format: int32\n              example: 6\n            baseTarget:\n              type: string\n              example: '7686143350'\n            cumulativeDifficulty:\n              type: string\n              format: integer\n              example: '8728234277524822'\n            previousBlock:\n              description: Prev block id\n              type: string\n              format: hex_bytearray\n              example: '80faaeb4787337264514'\n            previousBlockHash:\n              type: string\n              format: hex_bytearray\n              example: '5b8ba14eaebba8cdc682c946947f5352a596d00ac63c4e616785d00cf8b8e016'\n            nextBlock:\n              description: Next block id\n              type: string\n              format: hex_bytearray\n              example: '140faaeb81930093118053'\n            payloadHash:\n              type: string\n              format: hex_bytearray\n              description: Hash of the paylod (all transactions)\n              example: 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'\n            payloadLength:\n              description: The length in bytes of all transactions\n              type: integer\n              format: int32\n              example: 523423\n            numberOfTransactions:\n              type: integer\n              format: int32\n              example: 14\n            totalAmountATM:\n              type: string\n              format: integer\n              example: '569000000000000'\n            totalFeeATM:\n              type: string\n              format: integer\n              example: '2800000000'\n\n    CallContractMethodReq:\n      required:\n        - address\n        - sender\n      type: object\n      properties:\n        address:\n          type: string\n          description: the contract address\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        sender:\n          type: string\n          description: the sender account id\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        secretPhrase:\n          type: string\n          description: the sender secret phrase encrypted by ElGamal encryption\n        publicKey:\n          type: string\n          description: the sender public key as hex string\n        value:\n          type: string\n          description: the scalar value of ATM\n          example: '20_00000000'\n        name:\n          type: string\n          description: the contract method name\n          example: 'purchase'\n        params:\n          type: array\n          description: list of method parameters\n          maxItems: 128\n          items:\n            type: string\n            example: '\\\"firstParam\\\"\", \"123\", \"\\\"0x98765\\\"'\n        fuelLimit:\n          type: string\n          description: the scalar value equal to the maximum amount of fuel; fuel limit\n          example: '5000000'\n        fuelPrice:\n          type: string\n          description: the scalar value equal to the number of ATM; fuel price\n          example: '10000'\n\n    CallMethodResult:\n      type: object\n      properties:\n        method:\n          description: the view method name\n          type: string\n          example: \"balanceOf\"\n        signature:\n          description: the view method signature\n          type: string\n          example: \"balanceOf('0x1234567890');\"\n        output:\n          description: the result\n          type: array\n          items:\n            type: string\n            format: json\n            description: the JSON stringified value; simple value or object\n            example: '\"1234\"  or  {\"value\":\"99012345678\"}'\n        errorCode:\n          description: error code\n          type: integer\n          example: 10002\n        errorDescription:\n          description: error description\n          type: string\n          example: \"Can't call method [pay] on contract [APL20_B1]\"\n\n    CallViewMethodReq:\n      required:\n        - address\n      type: object\n      properties:\n        address:\n          type: string\n          description: the contract address\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        members:\n          type: array\n          description: list of function\n          maxItems: 64\n          items:\n            $ref: '#/components/schemas/ContractMethod'\n\n    ContractDetails:\n      type: object\n      properties:\n        address:\n          type: string\n          description: contract address\n          example: 'APL-DPPW-2KJT-Z5KR-EZ4ND'\n        owner:\n          type: string\n          description: contract publisher\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        transaction:\n          type: string\n          format: hex_bytearray\n          description: transaction id\n          example: '8330faaeb404178613417'\n        signature:\n          type: string\n          format: hex_bytearray\n          description: transaction full hash\n          example: '569e87c6a14e8fbb9830df24227d77cea23e8af64df0fec83fbbe490c9dd7367'\n        fullHash:\n          type: string\n          format: hex_bytearray\n          description: transaction full hash\n          example: 'bcf47c41cd01bb7da6e2ca0cdb098f69c6d6e833592c48c17dac69a4dd0416ef'\n        timestamp:\n          type: integer\n          format: int64\n          description: The timestamp of the block that contains contract transaction, Unix timestamp in milliseconds\n          example: 1591696372000\n        amount:\n          type: string\n          format: integer\n          description: The amount of the transaction in ATMs (1 APL = 10_000_000 ATM)\n          example: '10_00000000'\n        status:\n          type: string\n          description: the contract status - REJECTED, CREATED, PUBLISHED, ACTIVE, CLOSED, DISABLED, DESTRUCTED\n          example: ACTIVE\n        name:\n          type: string\n          description: the contract name\n          example: 'Deal'\n        baseContract:\n          type: string\n          description: the base contract type\n          example: 'APL20BUY'\n        params:\n          type: string\n          description: list of parameters\n        src:\n          type: string\n          description: the contract source code\n        fuelLimit:\n          type: string\n          format: int64\n          description: the fuel value\n          example: '5000'\n        fuelPrice:\n          type: string\n          format: int64\n          description: the fuel price value\n          example: '100'\n        fuelCharged:\n          type: string\n          format: int64\n          description: the charged fuel value\n          example: '3987'\n\n    ContractDetailsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/ContractDetails'\n\n    ContractEventsRequest:\n      type: object\n      properties:\n        event:\n          type: string\n          description: the event name or predefined value 'allEvents' for getting all possible events\n          example: Transfer\n        fromBlock:\n          type: integer\n          description: |\n            The block number/height (greater than or equal to) from which to get events;|\n            The default block number is 0, the block number -1 equivalents to the latest block.\n          default: 0\n        toBlock:\n          type: integer\n          description: |\n            The block number/height (less than or equal to) upto which to get events;|\n            The default block number is -1, it equivalents to the latest block.\n          default: -1\n        from:\n          type: integer\n          description: First matching entry index, inclusive. The maximum limit is 200.\n          example: 100\n          default: 0\n        to:\n          type: integer\n          description: Last matching entry index, inclusive.\n          example: 10500\n          default: -1\n        order:\n          type: string\n          description: the sorting direction, ASC/DESC\n          default: ASC\n        filter:\n          type: string\n          description: the complex expression to filter events\n          example: \"{ \\\"from\\\" : {\\\"$eq\\\": \\\"0x123123123123\\\"} }\"\n\n    ContractEventsResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            events:\n              type: array\n              items:\n                $ref: '#/components/schemas/ContractEventDetails'\n\n    ContractEventDetails:\n      type: object\n      properties:\n        type:\n          type: string\n          description: the EVENT constatnt string\n          example: EVENT\n        contract:\n          type: string\n          description: the contract address as hex-string\n          example: 0x7306555ca0dd2890194d37960152eef5365f24\n        eventId:\n          type: string\n          description: the event id\n          example: 0x4d37960152eef5365f2473564231ee32ab3f01\n        name:\n          type: string\n          description: the event name\n          example: Transfer\n        spec:\n          type: string\n          description: the event specification\n          example: \"Transfer:from,to,amount:2,false\"\n        signature:\n          type: string\n          description: the event signature as a hex-string\n          example: 0xfd43ade1c09fade1c0d57a7af66ab4ead7c2c2eb7b11a91ffdd57a7af66ab4ead7\n        transactionIndex:\n          type: integer\n          description: the sequential transaction index within the block\n          example: 1\n        transaction:\n          type: string\n          description: the transaction address as a hex-string\n          example: 0x01047857c04a00539dc2e8\n        block:\n          type: string\n          description: the block address\n        height:\n          type: integer\n          description: the block height\n        state:\n          type: string\n          description: the event state as stringified json object\n\n\n    ContractListResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            contracts:\n              type: array\n              items:\n                $ref: '#/components/schemas/ContractDetails'\n\n    ContractMethod:\n      type: object\n      properties:\n        function:\n          type: string\n          description: the contract function/method name\n          example: 'purchase'\n        input:\n          type: array\n          description: list of parameters\n          example: '[\"firstParam\", 123, \"0x98765\"]'\n          maxItems: 128\n          items:\n            type: string\n            example: '\"firstParam\"'\n\n    ContractSpecResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            overview:\n              description: the contract overview\n              type: array\n              items:\n                $ref: '#/components/schemas/PropertySpec'\n            members:\n              description: the contract public functions\n              type: array\n              items:\n                $ref: '#/components/schemas/MemberSpec'\n            inheritedContracts:\n              type: array\n              description: the list of inherited contracts\n              items:\n                type: string\n                description: ASR module name\n                example: ASR20BUY\n\n    ContractStateResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            state:\n              description: the contract state json\n              type: string\n              example: \"{'value': 20000}\"\n\n    CountResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            count:\n              type: integer\n              format: int64\n              example: 345\n\n    CreateChildAccountResp:\n      required:\n        - parent\n        - tx\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            parent:\n              type: string\n              description: parent account id\n              example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n            tx:\n              description: Unsigned transaction data\n              type: string\n              format: hex_bytearray\n              example: '001047857c04a00539dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152eef5365f2400292d00ca9a3b0000000000c2eb0b000000000000000000000000000000000000000000000000000000000000000000000000920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d5600000000f1da1300fe7062e6fb2fbb37'\n\n    CurrencyBurningTxCreationRequest:\n      allOf:\n        - $ref: '#/components/schemas/CurrencyBurningTxParams'\n        - $ref: '#/components/schemas/TransactionCreationRequest'\n\n    CurrencyBurningTxParams:\n      type: object\n      properties:\n        currencyId:\n          type: string\n          format: integer\n          description: Id of the currency to burn\n          example: '12074128708093990729'\n        burningAmount:\n          type: integer\n          format: int64\n          description: Amount of the currency to burn in ATUs (minimal atomic currency unit)\n          example: 100000\n\n    ErrorResponse:\n      type: object\n      properties:\n        protocol:\n          description: 'Protocol version'\n          type: string\n          example: '2'\n        errorCode:\n          description: Error code on new API. null or 0 means success, no error.\n          type: integer\n          format: int32\n          example: 12\n        errorDescription:\n          description: Textual error description, e.g. exception message, etc that could be displayed to user\n          type: string\n          example: 'The mandatory parameter ''id'' is not specified.'\n        errorDetails:\n          description: |\n            Detailed error description with debug information, helpful error data or stacktrace, by default\n            should not be displayed to user. Main purpose is create bug reports with meaningful content.\n          type: string\n          example: 'Description of failure'\n\n    HealthResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            blockchainHeight:\n              type: integer\n              format: int32\n              example: 9900345\n              description: \"Current height of blockchain\"\n            dbConnectionTotal:\n              type: integer\n              format: int32\n              description: \"Total connections in the pool\"\n            dbConnectionActive:\n              type: integer\n              format: int32\n              description: \"Active connections in the pool\"\n            dbConnectionIdle:\n              type: integer\n              format: int32\n              description: \"Idle connections in the pool\"\n            unconfirmedTxCacheSize:\n              type: integer\n              format: int32\n              description: \"Current unconfirmed transactions cache size\"\n            maxUnconfirmedTxCount:\n              type: integer\n              format: int32\n              description: \"Max count of the unconfirmed transactions to store into database\"\n            unconfirmedTxCount:\n              type: integer\n              format: int32\n              description: \"Current count of the unconfirmed transactions saved into database\"\n            pendingProcessingTxCount:\n              type: integer\n              format: int32\n              description: \"Current count of the pending processing unconfirmed transactions in the mempool\"\n            processLaterTxCount:\n              type: integer\n              format: int32\n              description: \"Current count of the unconfirmed transactions to process later\"\n            removedTxCount:\n              type: integer\n              format: int32\n              description: \"Current count of the removed transactions from the mempool\"\n            referencedTxCount:\n              type: integer\n              format: int32\n              description: \"Current count of the referenced transaction in the mempool\"\n            isTrimActive:\n              type: boolean\n              description: \"Returns true if the trimming process is active\"\n\n    LastTransactionVerificationResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            fromHeight:\n              description: Verification's beginning height\n              type: integer\n              format: uint64\n              example: 1000\n            toHeight:\n              description: Verification's end height\n              type: integer\n              format: uint64\n              example: 1720\n            verificationResults:\n              description: The array of last verified transactions both successful or not\n              type: array\n              items:\n                $ref: '#/components/schemas/TransactionVerification'\n\n    ListResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseResponse'\n              nullable: true\n\n    MemberSpec:\n      type: object\n      properties:\n        type:\n          description: the object type- constructor, function, event etc\n          type: string\n          example: function\n        name:\n          description: the event/method/function name\n          type: string\n          example: balanceOf\n        inputs:\n          description: input params\n          type: array\n          items:\n            $ref: '#/components/schemas/ArgSpec'\n        outputs:\n          description: output value\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertySpec'\n        stateMutability:\n          description: \"a string with one of the following values: view, nonpayable, payable, pure\"\n          type: string\n          example: view\n        value:\n          description: output value\n          type: string\n          example: '24999000000'\n        signature:\n          description: real method arguments\n          type: string\n          example: \"balanceOf('0x7d2825cf3a120411');\"\n\n    ModuleListResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            language:\n              description: the language name\n              type: string\n              example: js\n            version:\n              description: the language version\n              type: string\n              example: 0.1.1\n            modules:\n              type: array\n              items:\n                type: string\n\n    ModuleSourceResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            name:\n              description: the module name\n              type: string\n              example: ASR20\n            language:\n              description: the language name\n              type: string\n              example: js\n            version:\n              description: the language version\n              type: string\n              example: 0.1.1\n            content:\n              description: the module source\n              type: string\n\n    ModuleSpecResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            name:\n              description: the module name\n              type: string\n              example: ASR20\n            language:\n              description: the language name\n              type: string\n              example: js\n            version:\n              description: the language version\n              type: string\n              example: 0.1.1\n            content:\n              description: the module source\n              type: string\n\n    PropertySpec:\n      type: object\n      properties:\n        name:\n          description: the propery name\n          type: string\n          example: \"totalSupply\"\n        type:\n          description: property type\n          type: string\n          example: uint\n        value:\n          description: property value\n          type: string\n          example: 25000000000\n\n    PublishContractReq:\n      required:\n        - sender\n      type: object\n      properties:\n        sender:\n          type: string\n          description: the sender account id\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        secretPhrase:\n          type: string\n          description: the sender secret phrase encrypted by ElGamal encryption\n        publicKey:\n          type: string\n          description: the sender public key as hex string\n        source:\n          type: string\n          description: the contract source code\n          example: 'class Deal {}'\n        name:\n          type: string\n          description: the contract name\n          example: 'Deal'\n        params:\n          type: array\n          description: list of constructor parameters\n          maxItems: 128\n          items:\n            type: string\n            example: '\\\"firstParam\\\"\", \"123\", \"\\\"0x98765\\\"'\n        value:\n          type: string\n          description: the scalar value of ATM\n          example: '20_00000000'\n        fuelLimit:\n          type: string\n          description: the fuel value\n          example: '5000000'\n        fuelPrice:\n          type: string\n          description: the fuel price value\n          example: '10000'\n\n    QueryCountResult:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            count:\n              type: integer\n              format: int64\n              example: 345\n            query:\n              $ref: '#/components/schemas/QueryObject'\n\n    QueryObject:\n      type: object\n      properties:\n        type:\n          description: |\n            The transaction type, it's an optional parameter and can be missed or specified negative value to avoid\n            filtering by that criteria.\n            There are eleven types:\n              PAYMENT = 0;\n              MESSAGING = 1;\n              COLORED_COINS = 2;\n              DIGITAL_GOODS = 3;\n              ACCOUNT_CONTROL = 4;\n              MONETARY_SYSTEM = 5;\n              DATA = 6;\n              SHUFFLING = 7;\n              UPDATE = 8;\n              DEX = 9;\n              CHILD_ACCOUNT = 10;\n          type: integer\n          format: int8\n          example: 0\n          default: -1\n        accounts:\n          description: Exactly all items.\n          nullable: true\n          type: array\n          items:\n            type: string\n            example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        first:\n          type: integer\n          format: int64\n          description: The first block height\n          example: 4000123\n        last:\n          type: integer\n          format: int64\n          description: The last block height\n          example: 4999000\n        startTime:\n          type: integer\n          format: int64\n          description: The start of the time period, Unix timestamp in milliseconds\n          example: 1591696310000\n        endTime:\n          type: integer\n          format: int64\n          description: The end of the time period, Unix timestamp in milliseconds\n          example: 1591696372000\n        page:\n          type: integer\n          format: int32\n          description: page number (1-based)\n          default: 1\n          example: 1\n        perPage:\n          type: integer\n          format: int32\n          description: Number of entries per page (max=100)\n          default: 25\n          example: 25\n        orderBy:\n          type: string\n          nullable: true\n          enum: [ asc, desc ]\n          default: asc\n\n    QueryResult:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            count:\n              type: integer\n              format: int32\n              description: Count of result items\n              example: 345\n            result:\n              type: array\n              items:\n                $ref: '#/components/schemas/TxReceipt'\n            query:\n              $ref: '#/components/schemas/QueryObject'\n\n    ResultValueResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            results:\n              type: array\n              items:\n                $ref: '#/components/schemas/CallMethodResult'\n\n    StringListResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            result:\n              type: array\n              items:\n                type: string\n\n    TransactionArrayResp:\n      required:\n        - tx\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            tx:\n              description: Unsigned transaction data\n              type: string\n              format: hex_bytearray\n              example: '001047857c04a00539dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152eef5365f2400292d00ca9a3b0000000000c2eb0b000000000000000000000000000000000000000000000000000000000000000000000000920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d5600000000f1da1300fe7062e6fb2fbb37'\n\n    TransactionCreationRequest:\n      type: object\n      properties:\n        sender:\n          type: string\n          description: The sender's account\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        recipient:\n          type: string\n          description: The account Id of the recipient\n          example: 'APL-FXHG-6KHM-23LE-42ACU'\n        amount:\n          type: integer\n          format: int64\n          description: The amount of the transaction in ATMs (1 APL = 100_000_000 ATM)\n          example: 34500000000\n        fee:\n          type: integer\n          format: int64\n          example: 200000000\n          description: The fee of the transaction in ATMs (1 APL = 100_000_000 ATM)\n        deadline:\n          description: the deadline for the transaction to be confirmed in minutes,ex.1440=24h\n          type: integer\n          format: int16\n          example: 1440\n        publicKey:\n          type: string\n          format: hex_bytearray\n          description: The public key of the sending account, required for the transaction composistion\n        secretPhrase:\n          type: string\n          description: Sender's secret phrase to sign created transaction. If omitted along with passphrase - transaction will be unsigned and senderPublicKey will be mandatory\n          example: My super secret phrase\n        passphrase:\n          type: string\n          description: Sender's secret phrase for the vault wallet to sign created transaction. If omitted along with secretPhrase - transaction will be unsigned and senderPublicKey will be mandatory\n          example: My super passphrase\n        code2FA:\n          type: integer\n          format: uint32\n          description: Sender's six digit code for the two-factor authentication (if enabled). Default is 0 (not enabled)\n          example: 204123\n        recipientPublicKey:\n          type: string\n          format: hex_bytearray\n          description: The public key of the recipient account to assign, optional\n          example: '19efbaa811e5f2259fda253b48b5d3e3403654ebec7e64f80a5b6aeb01fb054a'\n        broadcast:\n          description: whether broadcast created and signed transaction to peers or not, optional, default is true\n          type: boolean\n          example: true\n        referencedTransactionFullHash:\n          type: string\n          format: hex_bytearray\n          description: The full hash of a transaction referenced by this one\n          example: '5424ca4dd976a873839c7d5c9952fa15ae619f678365e8ebbc73f967142eb40d'\n        ecBlockId:\n          type: integer\n          format: uint64\n          description: The economic clustering block ID, optional\n          example: '7911424905508915728'\n        ecBlockHeight:\n          type: integer\n          format: int32\n          description: The economic clustering block height, optional\n          example: 3301233\n        message:\n          type: string\n          description: Plain message to attach to the transaction\n          example: Hello, recipient. Here is unencrypted plain message\n        messageIsText:\n          type: boolean\n          description: Whether the value specified in the message parameter is in text or hex format\n          example: true\n        messageIsPrunable:\n          type: boolean\n          description: Whether the message from the `message` parameter should prunable or not\n          example: false\n        messageToEncrypt:\n          type: string\n          description: Message to encrypt and attach to the created transaction, required assigned public key for the recipient's account, recipient will be able to view the message content\n          example: My super message to encrypt\n        messageToEncryptIsText:\n          type: boolean\n          description: Whether the value specified in the messageToEncrypt parameter is in text or hex format\n          example: true\n        compressMessageToEncrypt:\n          type: boolean\n          description: Whether compress  messageToEncrypt parameter value or not\n          example: true\n        encryptedMessageData:\n          type: string\n          format: hex_bytearray\n          description: Already encrypted message data\n          example: 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3'\n        encryptedMessageNonce:\n          type: string\n          format: hex_bytearray\n          description: Encrypted message nonce used for the encryption\n          example: '7b52009b64fd0a2a49e6d8a939753077792b0554'\n        encryptedMessageIsPrunable:\n          type: boolean\n          description: Whether the encrypted message from the `encryptedMessageData` + `encryptedMessageNonce` or `messageToEncrypt` parameters should prunable or not\n          example: true\n        messageToEncryptToSelf:\n          type: string\n          description:  Note to encrypt using senders public and private keys and attach to the created transaction, no one will be able to view the note content\n          example: My secure note to encrypt\n        messageToEncryptToSelfIsText:\n          type: boolean\n          description: Whether the value specified in the `messageToEncryptToSelf` parameter is in text or hex format\n          example: true\n        encryptToSelfMessageData:\n          type: string\n          format: hex_bytearray\n          description: Already encrypted note data\n          example: 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3'\n        encryptToSelfMessageNonce:\n          type: string\n          format: hex_bytearray\n          description: Encrypted note nonce used for the encryption\n          example: '7b52009b64fd0a2a49e6d8a939753077792b0554'\n        compressMessageToEncryptToSelf:\n          type: boolean\n          description: Whether compress  messageToEncryptToSelf parameter value or not\n          example: true\n        phased:\n          description: Whether transaction should be phased or not\n          type: boolean\n          example: false\n        phasingFinishHeight:\n          type: integer\n          format: int32\n          description: Future blockchain height for the phasing transaction to finish, should be specified when phasingFinishTime is omitted\n        phasingFinishTime:\n          type: integer\n          format: int32\n          description: Phasing transaction duration in seconds to finish, should be specified when phasingFinishHeight is omitted\n        phasingVotingModel:\n          type: integer\n          format: int8\n          description: Type of voting for the phasing transaction approval, -1 - No restrictions, 0 - vote acconts whitelist, 1 - APL min balance restriction, 2 - Any asset balance restriction, 3 - Any currency balance restriction, 4 - linked transaction should be confirmed for the phasing transaction approval, 5 - phaasing transaction may be approved only by revealing secret value\n          example: -1\n        phasingQuorum:\n          type: integer\n          format: int64\n          description: Number of whitelisted accounts, voted for the phasing transaction, approved linked transactions, total currency/apl/asset amount voted for the phasing transaction to make it approved, default is 0, optional\n          example: 0\n        phasingMinBalance:\n          type: integer\n          format: uint64\n          description: Min balance of the APL/currency/asset to be counted when voting for the phasing transaction, should be used with phasingVotingModel=0..3, default is 0, optional\n          example: 1000\n        phasingMinBalanceModel:\n          type: integer\n          format: uint8\n          description: Algorithm for a min balance calculation of the voting account to be counted as a voter, 0 - NONE (default), 1 - APL  (only when phasingMinBalance \u003e 0 and phasingVotingModel = 0..1), 2 - ASSET (only when phasingMinBalance \u003e 0 and phasingVotingModel = 0,2), 3 - CURRENCY (only when phasingMinBalance \u003e 0 and phasingVotingModel = 0,3)\n          example: 1\n        phasingHolding:\n          type: integer\n          format: uint64\n          description: Currency (phasingVotingModel = 3) or asset (phasingVotingModel = 2) specified by the id to be used for voters balance verification and accounting when voting for the phasing transaction, default is 0, which refers both to the APL balance verification (phasingVotingModel = 0..1) and no verification at all\n          example: 10230252222270645544\n        phasingWhitelisted:\n          type: array\n          items:\n            type: string\n            description: Whitelisted account to vote for the phasing transaction, any other account vote will not be counted\n            example: APL-HUGX-P62R-PKFR-6SD87\n        phasingLinkedFullHash:\n          type: array\n          items:\n            type: string\n            format: hex_bytearray\n            description: Linked transaction full hash (32 bytes), which should be confirmed in a blockchain to finish the phasing transaction. Required only for the phasingVotingModel = 4\n            example: d70e4489828b0b08ecf087b1a07fc051e9fa1ad2801f4e550a8a99b0f7e79e95\n        phasingHashedSecret:\n          type: string\n          format: hex_bytearray\n          description: Hash of the secret, which should be revealed to finish the phasing transaction. Required only for the phasingVotingModel = 5\n          example: e3e18f8d188c6a256ccab3d4e7a525128044c255cda5d529830510c974141733\n        phasingHashedSecretAlgorithm:\n          type: integer\n          format: uint8\n          description: Hashing algorithm used for obtaining phasingHashedSecret from the original secret value. Possible values  2 - SHA256, 6 - RIPEMD160, 62 - RIPEMD160_SHA256\n          example: 2\n\n    TransactionCreationResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            id:\n              type: string\n              format: integer\n              description: id of the created transaction (if signed)\n              example: '1a0feb1306043151604016701'\n            fullHash:\n              type: string\n              format: hex_bytearray\n              description: Hash of the transaction (if signed)\n              example: '36db8508369882a2d4b6e9b386bf1c39f8fb89c342b376f9f2a0cdb4e94066e6'\n            signature:\n              type: string\n              format: hex_bytearray\n              description: Signature of the transaction (if signed)\n              example: 'a88d4df7401d5c3d33d31be4c275b2067fb6a59c70cfb37d2440bd991e806d043bcf1494d4b53a46794fa1c411546bbb671b6c25e616f12380f80bc21c2449f8'\n            unsignedTransactionBytes:\n              type: string\n              format: hex_bytearray\n              description: Created transaction's unsigned bytes\n              example: '0010f2f66b06a005bf0ced0472d8ba3df9e21808e98e61b34404aad737e2bae1778cebc698b40f372f7ecaee9f86d67f00c3cdea1e01000000e1f5050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a51f385ecc580fe'\n            transactionBytes:\n              type: string\n              format: hex_bytearray\n              description: Created transaction's signed bytes (if transaction is signed)\n              example: '0010f2f66b06a005bf0ced0472d8ba3df9e21808e98e61b34404aad737e2bae1778cebc698b40f372f7ecaee9f86d67f00c3cdea1e01000000e1f505000000000000000000000000000000000000000000000000000000000000000000000000a88d4df7401d5c3d33d31be4c275b2067fb6a59c70cfb37d2440bd991e806d043bcf1494d4b53a46794fa1c411546bbb671b6c25e616f12380f80bc21c2449f800000000000000001a51f385ecc580fe'\n            broadcasted:\n              type: boolean\n              description: whether transaction broadcasted to peers or not\n              example: true\n\n    TransactionInfo:\n      type: object\n      properties:\n        id:\n          description: The transaction ID\n          type: string\n          format: hex_bytearray\n          example: '1a0feb1306043151604016701'\n        type:\n          description: Transaction type\n          type: string\n          format: int8\n          example: '2'\n        subtype:\n          description: Transaction subtype\n          type: string\n          format: int8\n          example: '1'\n        phased:\n          description: is true if the transaction is phased\n          type: boolean\n          example: false\n        timestamp:\n          type: integer\n          format: int64\n          description: Transaction timestamp, Unix timestamp in milliseconds\n          example: 1591696372000\n        deadline:\n          description: the deadline for the transaction to be confirmed in minutes,ex.1440=24h\n          type: integer\n          format: int32\n          example: 1440\n        senderPublicKey:\n          type: string\n          format: hex_bytearray\n          description: The public key of the sending account for the transaction\n        recipient:\n          type: string\n          description: The account Id of the recipient\n          example: 'APL-FXHG-6KHM-23LE-42ACU'\n        amount:\n          type: string\n          format: integer\n          description: The amount of the transaction\n          example: 34500000000\n        fee:\n          type: string\n          format: integer\n          example: 200000000\n          description: The fee of the transaction\n        referencedTransactionFullHash:\n          type: string\n          format: hex_bytearray\n          description: The full hash of a transaction referenced by this one\n          example: '5424ca4dd976a873839c7d5c9952fa15ae619f678365e8ebbc73f967142eb40d'\n        signature:\n          type: string\n          format: hex_bytearray\n          example: '920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d56'\n          description: The digital signature of the transaction\n        signatureHash:\n          type: string\n          format: hex_bytearray\n          description: SHA-256 hash of the transaction signature\n          example: '2fc1883e9b76fdc67fabee0a3def5f4b7fc2de9cd65bc8bb6d39eaf5e99498d8'\n        fullHash:\n          type: string\n          format: hex_bytearray\n          description: The full hash of the transaction\n          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'\n        attachment:\n          type: object\n          nullable: true\n          additionalProperties:\n            type: object\n          description: An object containong any additional data needed for the transaction\n        sender:\n          type: string\n          description: The sender account\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        height:\n          type: integer\n          format: int64\n          example: 4365987\n          description: The height of the block in the blockchain\n        version:\n          type: string\n          format: int8\n          example: '1'\n          description: The transaction version number\n        ecBlockId:\n          type: string\n          format: hex_bytearray\n          description: The economic clustering block ID\n          example: '40faaeb15856251679437054'\n        ecBlockHeight:\n          type: integer\n          format: int64\n          description: The economic clustering block height\n          example: 3301233\n        block:\n          type: string\n          format: hex_bytearray\n          description: The block id\n          example: '230aeb0f4585625167943'\n        confirmations:\n          type: integer\n          format: int32\n          description: the number of transaction confirmations\n          example: 387\n        blockTimestamp:\n          type: integer\n          format: int64\n          description: Block timestamp, Unix timestamp in milliseconds\n          example: 1591696372000\n        index:\n          type: integer\n          format: int32\n          description: the order of the transaction in the block\n          example: 1\n\n    TransactionInfoArrayResp:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            tx:\n              description: The array of transactions\n              type: array\n              items:\n                $ref: '#/components/schemas/TransactionInfo'\n\n    TransactionInfoResp:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/TransactionInfo'\n\n    TransactionVerification:\n      type: object\n      properties:\n        id:\n          description: Id of the verified transaction\n          type: string\n          format: int64\n          example: '12911439768940768505'\n        verified:\n          description: Whether verified transaction successfully or not\n          type: boolean\n          example: true\n        message:\n          description: Transaction error message, if transaction is failed, which was verified among the peers\n          type: string\n          example: Transaction error, unsufficient funds for account\n        verificationCount:\n          description: Number of transaction's successful verifications\n          type: integer\n          format: uint32\n          example: 3\n\n    TransactionVerificationResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - $ref: '#/components/schemas/TransactionVerification'\n\n    TxReceipt:\n      description: Transaction receipt. The lightweight and compact representation of the blockchain transaction.\n        Doesn't support the transaction type conversion.\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          required:\n            - transaction\n            - sender\n            - recipient\n            - signature\n          properties:\n            transaction:\n              type: string\n              format: hex_bytearray\n              example: '8330faaeb404178613417'\n            sender:\n              type: string\n              example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n            recipient:\n              type: string\n              example: 'APL-FXHG-6KHM-23LE-42ACU'\n            signature:\n              type: string\n              format: hex_bytearray\n              example: 'B98CB1890E76C772A10994B210ED9CF7F9A5488672A5D82C2734BBF9D11505D1'\n            timestamp:\n              type: integer\n              format: int64\n              description: Transaction timestamp, Unix timestamp in milliseconds\n              example: 1591696372000\n            amount:\n              type: string\n              format: integer\n              example: '34500000000'\n            fee:\n              type: string\n              format: integer\n              example: '0'\n            payload:\n              type: string\n              example: '{\"transaction\":\"1234567890\", \"amount\":\"1234567890.12\"}'\n            status:\n              type: string\n              description: |\n                The transaction status. A transaction is considered as unconfirmed until it is included in a valid block.\n                A transaction is considered as confirmed after at least one confirmations, so a transaction is considered\n                as irreversible after 721 confirmations and finally a transaction is permanent if it's confirmed 1440 times.\n              enum: [ unconfirmed, confirmed, irreversible, permanent ]\n              example: unconfirmed\n            block:\n              description: The Id of the block containing the confirmed transaction\n              type: string\n              format: hex_bytearray\n              example: '40faaeb1585625167943'\n            blockTimestamp:\n              type: integer\n              format: int64\n              description: Block timestamp, Unix timestamp in milliseconds\n              example: 1591696372000\n            height:\n              type: integer\n              format: int64\n              example: 15623658\n            index:\n              type: integer\n              format: int32\n              description: the order of the transaction in the block\n              example: 1\n            confirmations:\n              type: integer\n              format: int64\n              description: the amount of block transaction\n              example: 1758\n\n    TxRequest:\n      required:\n        - tx\n      type: object\n      properties:\n        tx:\n          description: Signed transaction data\n          type: string\n          format: hex_bytearray\n          example: '001047857c04a00539dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152eef5365f2400292d00ca9a3b0000000000c2eb0b000000000000000000000000000000000000000000000000000000000000000000000000920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d5600000000f1da1300fe7062e6fb2fbb37'\n          nullable: false\n\n    UnconfirmedTransactionInfo:\n      type: object\n      properties:\n        id:\n          description: The transaction ID\n          type: string\n          format: hex_bytearray\n          example: '1a0feb1306043151604016701'\n        type:\n          description: Transaction type\n          type: string\n          format: int8\n          example: '2'\n        subtype:\n          description: Transaction subtype\n          type: string\n          format: int8\n          example: '1'\n        phased:\n          description: is true if the transaction is phased\n          type: boolean\n          example: false\n        timestamp:\n          type: integer\n          format: int64\n          description: Transaction timestamp, Unix timestamp in milliseconds\n          example: 1591696372000\n        deadline:\n          description: the deadline for the transaction to be confirmed in minutes,ex.1440=24h\n          type: integer\n          format: int32\n          example: 1440\n        senderPublicKey:\n          type: string\n          format: hex_bytearray\n          description: The public key of the sending account for the transaction\n        recipient:\n          type: string\n          description: The account Id of the recipient\n          example: 'APL-FXHG-6KHM-23LE-42ACU'\n        amount:\n          type: string\n          format: integer\n          description: The amount of the transaction\n          example: 34500000000\n        fee:\n          type: string\n          format: integer\n          example: 200000000\n          description: The fee of the transaction\n        referencedTransactionFullHash:\n          type: string\n          format: hex_bytearray\n          description: The full hash of a transaction referenced by this one\n          example: '5424ca4dd976a873839c7d5c9952fa15ae619f678365e8ebbc73f967142eb40d'\n        signature:\n          type: string\n          format: hex_bytearray\n          example: '920173ae606d36c1c77fc5bdf294bd048d04f85c46535525771b524dbb1ed20b73311900d4a409c293a10d8a5ab987430be4bd7478fb16a41cf775afa33c4d56'\n          description: The digital signature of the transaction\n        signatureHash:\n          type: string\n          format: hex_bytearray\n          description: SHA-256 hash of the transaction signature\n          example: '2fc1883e9b76fdc67fabee0a3def5f4b7fc2de9cd65bc8bb6d39eaf5e99498d8'\n        fullHash:\n          type: string\n          format: hex_bytearray\n          description: The full hash of the transaction\n          example: '39dc2e813bb45ff063a376e316b10cd0addd7306555ca0dd2890194d37960152'\n        attachment:\n          type: object\n          nullable: true\n          additionalProperties:\n            type: object\n          description: An object containong any additional data needed for the transaction\n        sender:\n          type: string\n          description: The sender account\n          example: 'APL-X5JH-TJKJ-DVGC-5T2V8'\n        version:\n          type: string\n          format: int8\n          example: '1'\n          description: The transaction version number\n        ecBlockId:\n          type: string\n          format: hex_bytearray\n          description: The economic clustering block ID\n          example: '40faaeb15856251679437054'\n        ecBlockHeight:\n          type: integer\n          format: int64\n          description: The economic clustering block height\n          example: 3301233\n  responses:\n    BadRequest:\n      description: Bad request - malformed request or wrong parameters\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    NotFound:\n      description: Requested resource is not found or operation cannot be executed since required resource is missing\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    ConflictResource:\n      description: |\n        The request could not be completed due to a conflict with the current state of the resource.\n        The resource is busy and the request might be reissued later.\n    ServerError:\n      description: Server error - internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    admin_api_key:\n      type: apiKey\n      in: header\n      name: adminPassword\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.items of type ogen.Schema"
}