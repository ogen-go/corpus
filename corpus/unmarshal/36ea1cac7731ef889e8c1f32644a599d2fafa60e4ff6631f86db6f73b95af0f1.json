{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/brytebee/Rent-a-car"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 11590,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\npaths:\n  \"/api/v1/cars\":\n    get:\n      summary: list cars\n      responses:\n        '200':\n          description: successful\n    post:\n      summary: create car\n      tags:\n      - Cars\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '201':\n          description: successful\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n          application/xml:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n  \"/api/v1/cars/{id}\":\n    parameters:\n    - name: id\n      in: path\n      description: id\n      required: true\n      schema:\n        type: integer\n    get:\n      summary: show car\n      tags:\n      - Cars\n      responses:\n        '200':\n          description: successful\n    patch:\n      summary: update car\n      tags:\n      - Cars\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n          application/xml:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n    put:\n      summary: update car\n      tags:\n      - Cars\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n          application/xml:\n            schema:\n              type: object\n              properties:\n                make:\n                  type: string\n                model:\n                  type: string\n                image:\n                  type: string\n                color:\n                  type: string\n                year:\n                  type: integer\n                engine:\n                  type: string\n                seat:\n                  type: integer\n                aircon:\n                  type: boolean\n                price:\n                  type: money\n                user_id:\n                  type: bigint\n                description:\n                  type: text\n              required:\n              - make\n              - model\n              - image\n              - color\n              - year\n              - engine\n              - seat\n              - aircon\n              - price\n              - user_id\n              - description\n    delete:\n      summary: delete car\n      tags:\n      - Cars\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n  \"/api/v1/reservations\":\n    get:\n      summary: list reservations\n      tags:\n      - Reservations\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n    post:\n      summary: create reservation\n      tags:\n      - Reservations\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '201':\n          description: successful\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pick_up_date:\n                  type: date\n                drop_off_date:\n                  type: date\n                pick_up_city:\n                  type: string\n                return_city:\n                  type: string\n                user_id:\n                  type: bigint\n                car_id:\n                  type: bigint\n              required:\n              - pick_up_date\n              - drop_off_date\n              - pick_up_city\n              - return_city\n              - user_id\n              - car_id\n          application/xml:\n            schema:\n              type: object\n              properties:\n                pick_up_date:\n                  type: date\n                drop_off_date:\n                  type: date\n                pick_up_city:\n                  type: string\n                return_city:\n                  type: string\n                user_id:\n                  type: bigint\n                car_id:\n                  type: bigint\n              required:\n              - pick_up_date\n              - drop_off_date\n              - pick_up_city\n              - return_city\n              - user_id\n              - car_id\n  \"/api/v1/reservations/{id}\":\n    parameters:\n    - name: id\n      in: path\n      description: id\n      required: true\n      schema:\n        type: string\n    delete:\n      summary: delete reservation\n      tags:\n      - Reservations\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n  \"/api/v1/users\":\n    get:\n      summary: list users\n      security:\n      - Bearer: {}\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      responses:\n        '200':\n          description: successful\n    post:\n      summary: create user\n      tags:\n      - Users\n      parameters: []\n      responses:\n        '201':\n          description: successful\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                username:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n                password_confirmation:\n                  type: string\n              required:\n              - name\n              - username\n              - email\n              - password\n              - password_confirmation\n          application/xml:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                username:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n                password_confirmation:\n                  type: string\n              required:\n              - name\n              - username\n              - email\n              - password\n              - password_confirmation\nservers:\n- url: http://{defaultHost}\n  variables:\n    defaultHost:\n      default: localhost:3001\ncomponents:\n  securitySchemes:\n    JWT:\n      description: the jwt for API auth\n      type: apiKey\n      name: Authorization\n      in: header\n"
		}
	},
	"Error": "unmarshal: json: line 1:1414: json: cannot unmarshal object into Go struct field Operation.paths.post.security of type []string"
}