{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/tomtom.com/maps/1.0.0/openapi.yaml",
			"byteSize": 33804,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.tomtom.com\ninfo:\n  contact:\n    x-twitter: TomTom\n  description: |-\n    The Maps API web services suite offers the following APIs:\n      - Raster\n      The Maps Raster API renders map data that is divided into gridded sections called tiles. Tiles are square images (png or jpg format) in various sizes which are available at 19 different zoom levels, ranging from 0 to 20. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 20, the world is divided into 2\u003csup\u003e40\u003c/sup\u003e tiles.\n      - Vector\n      Similar to Maps Raster API, the Maps Vector API serves data on different zoom level ranging from 0 to 22. For zoom level 0, the entire earth is displayed on one single tile, while at zoom level 22, the world is divided into 2\u003csup\u003e44\u003c/sup\u003e tiles.\n      The Maps Vector Service delivers geographic map data packaged in a vector representation of squared sections called vector tiles. Each tile includes pre-defined collections of map features (points, lines, road shapes, water polygons, building footprints, ect.) delivered in one of the specified vector formats. Format of the tile is formally described using protobuf schema.\n  title: Maps\n  version: 1.0.0\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: https://twitter.com/TomTom/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://developer.tomtom.com/system/files/swagger_models/maps_api_0.yaml\n      version: \"3.0\"\n  x-providerName: tomtom.com\n  x-serviceName: maps\nsecurity:\n  - api_key: []\npaths:\n  \"/map/{versionNumber}/copyrights.{format}\":\n    get:\n      description: |-\n        The Copyrights API returns copyright information for\n        the Maps API Raster Tile Service in JSON, JSONP, or XML format.\n        This call returns copyright information for the whole world.\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Format of the response\n          in: path\n          name: format\n          required: true\n          schema:\n            default: xml\n            enum:\n              - json\n              - jsonp\n              - xml\n            type: string\n        - description: Specifies the jsonp callback method. Only used when format is jsonp\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"304\":\n          description: \u003cb\u003eNot Modified\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eMalformed request\u003c/b\u003e: malformed syntax. Possible causes include:\n              - requested syntax is not available\n        \"403\":\n          description: \"\u003cb\u003eForbidden\u003c/b\u003e: Supplied API key is not valid for this request\"\n        \"410\":\n          description: \"\u003cb\u003eGone\u003c/b\u003e: Request for unsupported format\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom Copyrights\n            API service\n      summary: Copyrights whole world\n      tags:\n        - Copyrights\n  \"/map/{versionNumber}/copyrights/caption.{format}\":\n    get:\n      description: This API returns copyright captions for the map service.\n      parameters:\n        - description: Version of the service to call. The current version is 1.\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Format of the response\n          in: path\n          name: format\n          required: true\n          schema:\n            default: xml\n            enum:\n              - json\n              - jsonp\n              - xml\n            type: string\n        - description: Specifies the jsonp callback method. Only used when format is jsonp\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"304\":\n          description: \u003cb\u003eNot Modified\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eMalformed request\u003c/b\u003e: malformed syntax. Possible causes include:\n              - requested syntax is not available\n        \"403\":\n          description: \"\u003cb\u003eForbidden\u003c/b\u003e: Supplied API key is not valid for this request\"\n        \"410\":\n          description: \"\u003cb\u003eGone\u003c/b\u003e: Request for unsupported format\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom Copyrights\n            API service\n      summary: Captions\n      tags:\n        - Copyrights\n  \"/map/{versionNumber}/copyrights/{minLon}/{minLat}/{maxLon}/{maxLat}.{format}\":\n    get:\n      description: |-\n        The Copyrights API returns copyright information for\n        the Maps API Raster Tile Service in JSON, JSONP, or XML format.\n        This call returns copyright information for a specific bounding box.\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Format of the response\n          in: path\n          name: format\n          required: true\n          schema:\n            default: xml\n            enum:\n              - json\n              - jsonp\n              - xml\n            type: string\n        - description: Minimum longitude coordinate of bounding box defined in terms of latitude/longitude.\n          example: -179.1506\n          in: path\n          name: minLon\n          required: true\n          schema:\n            type: number\n        - description: Minimum latitude coordinate of bounding box defined in terms of latitude/longitude.\n          example: 18.9117\n          in: path\n          name: minLat\n          required: true\n          schema:\n            type: number\n        - description: Maximum longitude coordinate of bounding box defined in terms of latitude/longitude.\n          example: -66.9406\n          in: path\n          name: maxLon\n          required: true\n          schema:\n            type: number\n        - description: Maximum latitude coordinate of bounding box defined in terms of latitude/longitude.\n          example: 71.441\n          in: path\n          name: maxLat\n          required: true\n          schema:\n            type: number\n        - description: Specifies the jsonp callback method. Only used when format is jsonp.\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"304\":\n          description: \u003cb\u003eNot Modified\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eMalformed request\u003c/b\u003e: malformed syntax. Possible causes include:\n              - requested syntax is not available\n        \"401\":\n          description: |-\n            \u003cb\u003eBad request\u003c/b\u003e: Parameters out of range. Possible causes include:\n              - minLon n is out of range [-180,180]: the requested minimum longitude coordinate is out of possible range\n              - minLat n is out of range [-90,90]: the requested minimum latitude coordinate is out of possible range\n              - maxLon n is out of range [-180,180]: the requested maximum longitude coordinate is out of possible range\n              - maxLat n is out of range [-90,90]: the requested minimum latitude coordinate is out of possible range\n        \"403\":\n          description: \"\u003cb\u003eForbidden\u003c/b\u003e: Supplied API key is not valid for this request\"\n        \"410\":\n          description: \"\u003cb\u003eGone\u003c/b\u003e: Request for unsupported format\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom Copyrights\n            API service\n      summary: Copyrights bounding box\n      tags:\n        - Copyrights\n  \"/map/{versionNumber}/copyrights/{zoom}/{X}/{Y}.{format}\":\n    get:\n      description: |-\n        The Copyrights API returns copyright information for\n        the Maps API Raster Tile Service in JSON, JSONP, or XML format.\n        This call returns copyright information for the a specific map tile.\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Format of the response\n          in: path\n          name: format\n          required: true\n          schema:\n            default: xml\n            enum:\n              - json\n              - jsonp\n              - xml\n            type: string\n        - description: |-\n            Zoom level of tile to be rendered. Only used for tile-level\n            copyright calls.\n          example: 0\n          in: path\n          name: zoom\n          required: true\n          schema:\n            enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n              - 11\n              - 12\n              - 13\n              - 14\n              - 15\n              - 16\n              - 17\n              - 18\n            type: integer\n        - description: |-\n            X coordinate of the tile on zoom grid. Only used for tile-level\n            copyright calls.\n          example: 0\n          in: path\n          name: X\n          required: true\n          schema:\n            type: integer\n        - description: |-\n            Y coordinate of the tile on zoom grid. Only used for tile-level\n            copyright calls.\n          example: 0\n          in: path\n          name: Y\n          required: true\n          schema:\n            type: integer\n        - description: Specifies the jsonp callback method. Only used when format is jsonp.\n          in: query\n          name: callback\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"304\":\n          description: \u003cb\u003eNot Modified\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eMalformed request\u003c/b\u003e: malformed syntax. Possible causes include:\n              - requested syntax is not available\n        \"401\":\n          description: |-\n            \u003cb\u003eBad request\u003c/b\u003e: Parameters out of range. Possible causes include:\n              - zoom n is out of range 0 \u003c= zoom \u003c 19: the requested zoom level is out of the possible range\n              - x n is out of range [0,m]: the requested x coordinate is out of the possible range (the value of m will vary depending on zoom level)\n              - y n is out of range [0,m]: the requested y coordinate is out of the possible range (the value of m will vary depending on zoom level)\n        \"403\":\n          description: \"\u003cb\u003eForbidden\u003c/b\u003e: Supplied API key is not valid for this request\"\n        \"410\":\n          description: \"\u003cb\u003eGone\u003c/b\u003e: Request for unsupported format\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom Copyrights\n            API service\n      summary: Copyrights tile\n      tags:\n        - Copyrights\n  \"/map/{versionNumber}/staticimage\":\n    get:\n      description: |-\n        The Static Image service renders a rectangular raster image\n        in the style, size, and zoom level specified. The image can be requested\n        using either a center point plus width and height or a bounding box.\n      parameters:\n        - description: Version of the service to call. The current version is 1.\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: |-\n            Layer of image to be rendered. \u003cem\u003eHybrid\u003c/em\u003e and \u003cem\u003elabels\u003c/em\u003e\n            are intended for layering with other data and are only available in \u003cem\u003epng\u003c/em\u003e format.\n          example: basic\n          in: query\n          name: layer\n          required: false\n          schema:\n            default: basic\n            enum:\n              - basic\n              - hybrid\n              - labels\n            type: string\n        - description: Map style to be returned\n          example: main\n          in: query\n          name: style\n          required: false\n          schema:\n            default: main\n            enum:\n              - main\n              - night\n            type: string\n        - description: Image format to be returned\n          example: png\n          in: query\n          name: format\n          required: false\n          schema:\n            default: png\n            enum:\n              - png\n              - jpg\n              - jpeg\n            type: string\n        - description: Zoom level of map image to be returned.\n          in: query\n          name: zoom\n          required: false\n          schema:\n            default: 12\n            enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n              - 11\n              - 12\n              - 13\n              - 14\n              - 15\n              - 16\n              - 17\n              - 18\n              - 19\n              - 20\n              - 21\n              - 22\n            type: integer\n        - description: |-\n            Coordinates for the center point of the image.\n            Must be used with the \u003cstrong\u003ewidth\u003c/strong\u003e and\n            \u003cstrong\u003eheight\u003c/strong\u003e parameters; cannot be used with \u003cstrong\u003ebbox\u003c/strong\u003e.\n            Uses EPSG:3857 projection (functionally equivalent to EPSG:900910).\n          example: 4.899886, 52.379031\n          in: query\n          name: center\n          required: false\n          schema:\n            pattern: ^-*\\d+\\.*\\d*, *-*\\d+\\.*\\d*$\n            type: string\n        - description: Width of the resulting image in pixels. Width must be a positive integer between 1 and 8192.\n          example: 512\n          in: query\n          name: width\n          required: false\n          schema:\n            default: 512\n            maximum: 8192\n            minimum: 1\n            type: integer\n        - description: Height of the resulting image in pixels. Height must be a positive integer between 1 and 8192.\n          example: 512\n          in: query\n          name: height\n          required: false\n          schema:\n            default: 512\n            maximum: 8192\n            minimum: 1\n            type: integer\n        - description: |-\n            Bounding box for the image, using EPSG:3857 projection (functionally equivalent to EPSG:900910).\n            Values \u003cstrong\u003emust\u003c/strong\u003e be in the order of minLon, minLat, maxLon, maxLat.\n            MaxLat must be greater than minLat. Longitude values can be on both sides of the 180th meridian.\n            Cannot be used with \u003cstrong\u003ecenter\u003c/strong\u003e, \u003cstrong\u003ewidth\u003c/strong\u003e, or \u003cstrong\u003eheight\u003c/strong\u003e parameters.\n          in: query\n          name: bbox\n          required: false\n          schema:\n            pattern: ^(-*\\d+\\.*\\d*,){3}(-*\\d+\\.*\\d*)$\n            type: string\n        - description: Geopolitical view. Determines rendering of disputed areas. See the \u003ca href=\"/maps-api/maps-api-documentation-raster/raster-tile\"\u003edocumentation\u003c/a\u003e for an explanation of how this works in live services.\n          example: Unified\n          in: query\n          name: view\n          required: false\n          schema:\n            enum:\n              - Unified\n              - IN\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eBad Request\u003c/b\u003e: Received by the interface, but there is an error\n            in the request, such as:\n              - one or more of the required parameters is missing\n              - unsupported or unrecognized parameter value\n              - two or more mutually exclusive parameters are used in the same query (e.g. mixing center/width/height and bbox.)\n              - minimum latitude is greater than maximum latitude in a bbox call\n              - layer containing alpha channel is requested in format not supporting the alpha channel\n            This code is returned if the required parameters of the request were\n            malformed. A detailed exception explanation is returned in a\n            response in form of Service Exception Report.\n        \"403\":\n          description: |-\n            \u003cb\u003eForbidden\u003c/b\u003e:\n              - supplied API key is not valid for the request\n              - the requested view is not available in the country where the request was sent from\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the Static Map\n            Service.\n        \"503\":\n          description: \u003cb\u003eService currently unavailable.\u003c/b\u003e\n      summary: Static Image\n      tags:\n        - Raster\n  \"/map/{versionNumber}/tile/{layer}/{style}/{zoom}/{X}/{Y}.pbf\":\n    get:\n      description: The Maps API Vector Service delivers vector tiles, which are representations of square sections of map data.\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Layer of tile to be rendered\n          example: basic\n          in: path\n          name: layer\n          required: true\n          schema:\n            enum:\n              - basic\n              - hybrid\n              - labels\n            type: string\n        - description: Style of tile to be rendered\n          example: main\n          in: path\n          name: style\n          required: true\n          schema:\n            enum:\n              - main\n            type: string\n        - description: Zoom level of tile to be rendered\n          example: 0\n          in: path\n          name: zoom\n          required: true\n          schema:\n            enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n              - 11\n              - 12\n              - 13\n              - 14\n              - 15\n              - 16\n              - 17\n              - 18\n              - 19\n              - 20\n              - 21\n              - 22\n            type: integer\n        - description: x coordinate of tile on zoom grid\n          example: 0\n          in: path\n          name: X\n          required: true\n          schema:\n            type: integer\n        - description: y coordinate of tile on zoom grid\n          example: 0\n          in: path\n          name: Y\n          required: true\n          schema:\n            type: integer\n        - description: Geopolitical view. Determines rendering of disputed areas. See the \u003ca href=\"/maps-api/maps-api-documentation-vector/tile\"\u003edocumentation\u003c/a\u003e for an explanation of how this works in live services.\n          example: Unified\n          in: query\n          name: view\n          required: false\n          schema:\n            enum:\n              - Unified\n              - IL\n              - IN\n            type: string\n        - description: \"Language to be used for labels in the response. The default is NGT: Neutral Ground Truth, which uses each place's local official language and script (where available). See the \u003ca href=\\\"/maps-api/maps-api-documentation-vector/tile\\\"\u003edocumentation\u003c/a\u003e for a full list of options.\"\n          in: query\n          name: language\n          schema:\n            default: NGT\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"400\":\n          description: |-\n            \u003cb\u003eBad request\u003c/b\u003e: Usually the result of malformed syntax:\n              - the given combination of layer, style, and query parameters is not supported\n              - zoom n is out of range 0 \u003c= zoom \u003c= 22: the requested zoom level is out of the possible range\n              - x n is out of range [0,m]: the requested x coordinate is out of the possible range (the value of m will vary depending on zoom level)\n              - y n is out of range [0,m]: the requested y coordinate is out of the possible range (the value of m will vary depending on zoom level)\n              - the requested view is not supported\n        \"403\":\n          description: |-\n            \u003cb\u003eForbidden\u003c/b\u003e: \n              - the supplied API key is not valid for this request\n              - the requested view is not available in your country\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom\n            Maps API Vector Tile service\n        \"503\":\n          description: \u003cb\u003eService currently unavailable\u003c/b\u003e.\n      summary: Tile\n      tags:\n        - Vector\n  \"/map/{versionNumber}/tile/{layer}/{style}/{zoom}/{X}/{Y}.{format}\":\n    get:\n      description: The Maps API Raster Service delivers raster tiles, which are representations of square sections of map data.\n      parameters:\n        - description: Version of the service to call. The current version is 1.\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Layer of tile to be rendered. \u003cem\u003eHybrid\u003c/em\u003e and \u003cem\u003elabels\u003c/em\u003e are intended for layering with other data and are only available in \u003cem\u003epng\u003c/em\u003e format.\n          example: basic\n          in: path\n          name: layer\n          required: true\n          schema:\n            enum:\n              - basic\n              - hybrid\n              - labels\n            type: string\n        - description: Style of tile to be rendered\n          example: main\n          in: path\n          name: style\n          required: true\n          schema:\n            enum:\n              - main\n              - night\n            type: string\n        - description: Zoom level of tile to be rendered\n          example: 0\n          in: path\n          name: zoom\n          required: true\n          schema:\n            enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n              - 11\n              - 12\n              - 13\n              - 14\n              - 15\n              - 16\n              - 17\n              - 18\n              - 19\n              - 20\n              - 21\n              - 22\n            type: integer\n        - description: x coordinate of tile on zoom grid\n          example: 0\n          in: path\n          name: X\n          required: true\n          schema:\n            type: integer\n        - description: y coordinate of tile on zoom grid\n          example: 0\n          in: path\n          name: Y\n          required: true\n          schema:\n            type: integer\n        - description: Format of the response.\n          example: png\n          in: path\n          name: format\n          required: true\n          schema:\n            enum:\n              - jpg\n              - png\n            type: string\n        - description: Tile dimensions in pixels. \u003cem\u003e512\u003c/em\u003e is only available for the \u003cem\u003emain\u003c/em\u003e style and \u003cem\u003ebasic\u003c/em\u003e or \u003cem\u003elabels\u003c/em\u003e layers.\n          in: query\n          name: tileSize\n          required: false\n          schema:\n            default: 256\n            enum:\n              - 256\n              - 512\n            type: integer\n        - description: Geopolitical view. Determines rendering of disputed areas. See the \u003ca href=\"/maps-sdk-web/functional-examples#geopolitical-views\"\u003edocumentation\u003c/a\u003e for an explanation of how this works in live services.\n          example: Unified\n          in: query\n          name: view\n          required: false\n          schema:\n            enum:\n              - Unified\n              - IN\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"302\":\n          description: \"\u003cb\u003eFound\u003c/b\u003e: URL redirection\"\n        \"400\":\n          description: |-\n            \u003cb\u003eBad request\u003c/b\u003e: Usually the result of malformed syntax:\n              - the given combination of layer, style, and query parameters is not supported\n              - zoom n is out of range 0 \u003c= zoom \u003c 19: the requested zoom level is out of the possible range\n              - x n is out of range [0,m]: the requested x coordinate is out of the possible range (the value of m will vary depending on zoom level)\n              - y n is out of range [0,m]: the requested y coordinate is out of the possible range (the value of m will vary depending on zoom level)\n              - the requested view is not supported\n        \"403\":\n          description: |-\n            \u003cb\u003eForbidden\u003c/b\u003e:\n              - the supplied API key is not valid for this request\n              - the requested view is not available in the country where the request was sent from\n        \"410\":\n          description: \"\u003cb\u003eGone\u003c/b\u003e: Request for unsupported format\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom\n            Maps API Raster Tile service\n      summary: Tile\n      tags:\n        - Raster\n  \"/map/{versionNumber}/wms/\":\n    get:\n      description: |-\n        The GetMap call implements the Web Map Service 1.1.1 standard\n        to access TomTom raster map tiles. This service is described\n        in the response to the GetCapabilities API call.\n      operationId: GetMap\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Request type\n          in: query\n          name: request\n          required: true\n          schema:\n            enum:\n              - GetMap\n            type: string\n        - description: |-\n            Projection used in describing the \u003cb\u003ebbox\u003c/b\u003e EPSG:3857 is\n            recommended, particularly at higher zoom levels. (Note that\n            EPSG:3857 is functionally equivalent to EPSG:900913/EPSG:3785)\n          example: EPSG:4326\n          in: query\n          name: srs\n          required: true\n          schema:\n            enum:\n              - EPSG:3857\n              - EPSG:4326\n            type: string\n        - description: |-\n            Bounding box in the projection stated in \u003cb\u003esrs\u003c/b\u003e\n            (minLon,minLat,maxLon,maxLat)\n          example: -0.489,51.28,0.236,51.686\n          in: query\n          name: bbox\n          required: true\n          schema:\n            pattern: ^(-*\\d+\\.*\\d*, *){3}(-*\\d+\\.*\\d*)$\n            type: string\n        - description: Width of the resulting image, in pixels Maximum value is 2048\n          example: 512\n          in: query\n          name: width\n          required: true\n          schema:\n            type: integer\n        - description: Height of the resulting image, in pixels Maximum value is 2048\n          example: 512\n          in: query\n          name: height\n          required: true\n          schema:\n            type: integer\n        - description: Image format to be returned\n          example: image/png\n          in: query\n          name: format\n          required: true\n          schema:\n            enum:\n              - image/jpeg\n              - image/png\n            type: string\n        - description: Map layers requested Currently only the basic layer is available\n          in: query\n          name: layers\n          required: true\n          schema:\n            enum:\n              - basic\n            type: string\n        - allowEmptyValue: true\n          description: |-\n            Map styles to be returned. Currently, no styles are available. This\n            parameter is present for forward compatibility; it must be used and\n            left blank.\n          in: query\n          name: styles\n          required: false\n          schema:\n            enum:\n              - \"\"\n            type: string\n        - description: Service type\n          in: query\n          name: service\n          required: false\n          schema:\n            enum:\n              - WMS\n            type: string\n        - description: WMS service version\n          in: query\n          name: version\n          required: true\n          schema:\n            enum:\n              - 1.1.1\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"202\":\n          description: |-\n            \u003cb\u003eAccepted\u003c/b\u003e: Received by the interface, but there is a WMS exception in\n            processing it. Possible causes include:\n              - one or more required parameters is missing\n              - unsupported or unrecognized parameter value\n              - malformed bounding box requested\n              - invalid map dimensions requested\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              \n            This code is returned if the parameters of the request were malformed.\n            The response includes a detailed explanation in the Service Exception Report.\n        \"401\":\n          description: \"\u003cb\u003eUnauthorized\u003c/b\u003e: Supplied API key is not valid for the request\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom WMS\n            service\n      summary: GetMap\n      tags:\n        - WMS / WMTS\n  \"/map/{versionNumber}/wms//\":\n    get:\n      description: |-\n        The GetCapabilities call is part of TomTom's implementation of version 1.1.1\n        the Web Map Service (WMS). It provides descriptions of the other calls\n        that are available in the implementation.\n      operationId: GetCapabilities\n      parameters:\n        - in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - in: query\n          name: service\n          required: true\n          schema:\n            enum:\n              - WMS\n            type: string\n        - in: query\n          name: request\n          required: true\n          schema:\n            enum:\n              - GetCapabilities\n            type: string\n        - description: WMS service version\n          in: query\n          name: version\n          required: false\n          schema:\n            enum:\n              - 1.1.1\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"202\":\n          description: |-\n            \u003cb\u003eAccepted\u003c/b\u003e: Received by the interface, but there is a WMS exception in\n            processing it. Possible causes include:\n              - one or more required parameters is missing\n              - unsupported or unrecognized parameter value\n              - malformed bounding box requested\n              - invalid map dimensions requested\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              \n            This code is returned if the parameters of the request were malformed.\n            The response includes a detailed explanation in the Service Exception Report.\n        \"401\":\n          description: \"\u003cb\u003eUnauthorized\u003c/b\u003e: Supplied API key is not valid for the request\"\n        \"500\":\n          description: |-\n            \u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom WMS\n            service\n      summary: GetCapabilities\n      tags:\n        - WMS / WMTS\n  \"/map/{versionNumber}/wmts/{key}/{wmtsVersion}/WMTSCapabilities.xml\":\n    get:\n      description: |-\n        The WMTS GetCapabilities call implements version 1.0.0 of\n        the \u003ca href=\"http://www.opengeospatial.org/standards/wmts\"\u003eWeb Map Tile Service\u003c/a\u003e\n        (WMTS) standard. It returns metadata that allows compatible calling systems to construct\n        calls to TomTom's raster map tile service. See the\n        \u003ca href=\"/maps-api/maps-api-documentation-raster/wmts\"\u003edocumentation\u003c/a\u003e\n        for more information on WMTS.\n      parameters:\n        - description: Version of the service to call. The current version is 1\n          in: path\n          name: versionNumber\n          required: true\n          schema:\n            enum:\n              - 1\n            type: integer\n        - description: Your API key for calling this service.\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: wmtsVersion\n          required: true\n          schema:\n            enum:\n              - 1.0.0\n            type: string\n      responses:\n        \"200\":\n          description: \u003cb\u003eOK\u003c/b\u003e\n        \"400\":\n          description: \"\u003cb\u003eBad request\u003c/b\u003e: Probably malformed syntax\"\n        \"401\":\n          description: \"\u003cb\u003eUnauthorized\u003c/b\u003e: Supplied API key is not valid for this request\"\n        \"500\":\n          description: \"\u003cb\u003eInternal Server Error\u003c/b\u003e: There is a problem with the TomTom WMTS service\"\n      security: []\n      summary: WMTS\n      tags:\n        - WMS / WMTS\ncomponents:\n  securitySchemes:\n    api_key:\n      in: query\n      name: key\n      type: apiKey\n"
		}
	},
	"Error": "unmarshal: json: cannot unmarshal bool into Go struct field Parameter.paths.get.parameters.name of type string"
}