{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/koshevy/codegena"
		},
		"file": {
			"name": "app-demo.json",
			"size": 0,
			"path": "libs/todo-app-contract/src/oas/app-demo.json",
			"byteSize": 28319,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"TODO App Demo\",\n    \"description\": \"This is a complete API description of application for managing TODO-reminders. There are all functions of typical TODO notes manager. This description is a part of `@codegena` project.\"\n  },\n  \"servers\": [\n    {\n      \"environment\": \"local\",\n      \"description\": \"Base local server\",\n      \"url\": \"https://local.todo-codegena-example.com\"\n    },\n    {\n      \"environment\": \"dev\",\n      \"description\": \"Development server\",\n      \"url\": \"https://dev.todo-codegena-example.com\"\n    },\n    {\n      \"environment\": \"prod\",\n      \"description\": \"Development server\",\n      \"url\": \"https://todo-codegena-example.com\"\n    }\n  ],\n  \"paths\": {\n    \"/group\": {\n      \"get\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"summary\": \"Get all TODO's groups\",\n        \"operationId\": \"getGroups\",\n        \"description\": \"Returns all TODO's group with their items or without. By default skips items, suggesting you want to get top level meta-data. It could be filtered by `isComplete` status.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/isComplete\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/withItems\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"TODO's groups\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ToDoGroup\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"operationId\": \"createGroup\",\n        \"summary\": \"Create a new TODO's group\",\n        \"description\": \"Creates new group with exists items, or without\",\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoGroupBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"$ref\": \"#/components/responses/todoGroupSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/group/{groupId}\": {\n      \"get\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"operationId\": \"getGroup\",\n        \"summary\": \"Get TODO's group by id\",\n        \"description\": \"Returns specified group by `groupId`\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"TODO's group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDoGroup\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"operationId\": \"rewriteGroup\",\n        \"summary\": \"Rewrite specified TODO's group\",\n        \"description\": \"Rewrites an entire todo's group\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoGroupBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoGroupSaved\"\n          },\n          \"204\": {\n            \"description\": \"No changes. Should no have a response!\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"operationId\": \"updateGroup\",\n        \"summary\": \"Update specified TODO's group\",\n        \"description\": \"Partially update (patch) of group\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required request body\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"allOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ToDoGroupBlank\"\n                  },\n                  {\n                    \"required\": []\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Todo group saved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDoGroup\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"Groups of tasks\"],\n        \"operationId\": \"deleteGroup\",\n        \"summary\": \"Delete specified TODO's group\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Todo group deleted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/group/{groupId}/item\": {\n      \"summary\": \"Group item\",\n      \"get\": {\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getGroupItems\",\n        \"summary\": \"Get items of specified TODO's group\",\n        \"description\": \"Returns array with items of specified TODO's group\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/isComplete\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Items of specified TODO's group\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ToDoTask\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"createGroupItem\",\n        \"summary\": \"Create new group item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Group item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoTaskBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ToDoTask\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/group/{groupId}/item/{itemId}\": {\n      \"put\": {\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"rewriteGroupItem\",\n        \"summary\": \"Rewrite group item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/itemId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Group item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoTaskBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoTaskSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupItemNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"updateGroupItem\",\n        \"summary\": \"Update group item\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/groupId\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/itemId\"\n          },\n          {\n            \"name\": \"forceSave\",\n            \"in\": \"query\",\n            \"description\": \"Force save group despite conflicts\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": [\"boolean\", \"null\"],\n              \"default\": null\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Group item\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ToDoTaskBlank\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/todoTaskSaved\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    },\n    \"/group/items\": {\n      \"post\": {\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"updateFewItems\",\n        \"summary\": \"Update few items whatever how much and what groups these belongs to.\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/forceSave\"\n          }\n        ],\n        \"servers\": [\n          {\n            \"environment\": \"local\",\n            \"description\": \"Local server for tasks writing\",\n            \"url\": \"http://local.write.todo-app-example.com\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Collection of `ToDoTask` items. Tasks should be with UID's and should be exists.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/ToDoTask\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"All items are updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ToDoTask\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/errorBadRequest\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/errorGroupItemNotFound\"\n          },\n          \"409\": {\n            \"$ref\": \"#/components/responses/errorConflict\"\n          },\n          \"500\": {\n            \"$ref\": \"#/components/responses/errorServer\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"forceSave\": {\n        \"name\": \"forceSave\",\n        \"in\": \"query\",\n        \"description\": \"Force save group despite conflicts\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": [\"boolean\", \"null\"],\n          \"default\": null\n        }\n      },\n      \"itemId\": {\n        \"name\": \"itemId\",\n        \"in\": \"path\",\n        \"description\": \"Uid of TODO group item\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Uid\"\n        }\n      },\n      \"isComplete\": {\n        \"name\": \"isComplete\",\n        \"in\": \"query\",\n        \"description\": \"Filter groups by `complete` status\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      },\n      \"groupId\": {\n        \"name\": \"groupId\",\n        \"in\": \"path\",\n        \"description\": \"Uid of TODO group\",\n        \"required\": true,\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Uid\"\n        }\n      },\n      \"withItems\": {\n        \"name\": \"withItems\",\n        \"in\": \"query\",\n        \"description\": \"Set it `true` if you want to get all group items with group. Always returns empty `items` array when it's `false`.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"boolean\"\n        }\n      }\n    },\n    \"responses\": {\n      \"errorBadRequest\": {\n        \"description\": \"Bad request\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorBadRequest\"\n            }\n          }\n        }\n      },\n      \"errorConflict\": {\n        \"description\": \"Conflict\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorConflict\"\n            }\n          }\n        }\n      },\n      \"errorGroupItemNotFound\": {\n        \"description\": \"Group item not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorNotFound\"\n            }\n          }\n        }\n      },\n      \"errorGroupNotFound\": {\n        \"description\": \"Group not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorNotFound\"\n            }\n          }\n        }\n      },\n      \"errorServer\": {\n        \"description\": \"Server error\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/HttpErrorServer\"\n            }\n          }\n        }\n      },\n      \"todoTaskSaved\": {\n        \"description\": \"Todos item saved\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ToDoTask\"\n            }\n          }\n        }\n      },\n      \"todoGroupSaved\": {\n        \"description\": \"Todo group saved\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ToDoGroup\"\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"AttachmentMeta\": {\n        \"description\": \"Common meta data model of any type of attachment\",\n        \"oneOf\": [\n          { \"$ref\": \"#/components/schemas/AttachmentMetaImage\" },\n          { \"$ref\": \"#/components/schemas/AttachmentMetaDocument\" },\n          { \"$ref\": \"#/components/schemas/ExternalResource\" }\n        ]\n      },\n      \"AttachmentMetaImage\": {\n        \"type\": \"object\",\n        \"description\": \"Meta data of image attached to task\",\n        \"properties\": {\n          \"mediaId\": {\n            \"type\": \"string\",\n            \"description\": \"An unique id of media. Metadata with unique get from server in return of uploaded image file.\",\n            \"pattern\": \"^[a-z0-9]{16}$\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Marks attachment as an image\",\n            \"enum\": [\"image\"]\n          },\n          \"url\": {\n            \"description\": \"Url of uploaded image\",\n            \"$ref\": \"#/components/schemas/Url\"\n          },\n          \"thumbs\": {\n            \"type\": \"object\",\n            \"description\": \"Possible thumbnails of uploaded image\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"url\": {\n                  \"description\": \"Url of cached thumb\",\n                  \"$ref\": \"#/components/schemas/Url\"\n                },\n                \"imageOptions\": {\n                  \"description\": \"Information of image\",\n                  \"$ref\": \"#/components/schemas/ImageOptions\",\n                  \"nullable\": true\n                }\n              },\n              \"nullable\": true\n            }\n          },\n          \"format\": {\n            \"description\": \"Format of uploaded image\",\n            \"type\": \"string\",\n            \"enum\": [\"png\", \"jpeg\", \"gif\", \"svg\", \"tiff\"]\n          },\n          \"imageOptions\": {\n            \"description\": \"Url of cached thumb\",\n            \"$ref\": \"#/components/schemas/ImageOptions\"\n          }\n        },\n        \"required\": [\"mediaId\", \"type\", \"url\", \"format\", \"imageOptions\"]\n      },\n      \"AttachmentMetaDocument\": {\n        \"type\": \"object\",\n        \"description\": \"Meta data of document attached to task\",\n        \"properties\": {\n          \"docId\": {\n            \"type\": \"string\",\n            \"description\": \"An unique id of document. Metadata with unique get from server in return of uploaded image file.\",\n            \"pattern\": \"^[a-z0-9]{16}$\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Marks attachment as an document\",\n            \"enum\": [\"document\"]\n          },\n          \"url\": {\n            \"description\": \"Url of uploaded document\",\n            \"$ref\": \"#/components/schemas/Url\"\n          },\n          \"format\": {\n            \"type\": \"string\",\n            \"description\": \"Format of document\",\n            \"enum\": [\"doc\", \"docx\", \"pdf\", \"rtf\", \"xls\", \"xlsx\", \"txt\"]\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"description\": \"File size\",\n            \"min\": 0,\n            \"max\": 8388607\n          }\n        },\n        \"required\": [\"docId\", \"type\", \"url\", \"format\", \"size\"]\n      },\n      \"ExternalResource\": {\n        \"description\": \"Link to any external resource in attachment\",\n        \"$ref\": \"#/components/schemas/Url\"\n      },\n      \"HttpErrorBadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"message\"],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"syntax\", \"semantic\"]\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JsonError\"\n            }\n          }\n        }\n      },\n      \"HttpErrorConflict\": {\n        \"type\": \"object\",\n        \"required\": [\"message\"],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HttpErrorNotFound\": {\n        \"type\": \"object\",\n        \"required\": [\"message\"],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"HttpErrorServer\": {\n        \"type\": \"object\",\n        \"required\": [\"message\"],\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ImageOptions\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"width\": {\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 3000\n          },\n          \"height\": {\n            \"type\": \"number\",\n            \"min\": 1,\n            \"max\": 3000\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"min\": 0,\n            \"max\": 8388607\n          }\n        },\n        \"required\": [\"width\", \"height\", \"size\"]\n      },\n      \"JsonError\": {\n        \"type\": \"object\",\n        \"required\": [\"originalMessage\", \"jsonPointer\"],\n        \"properties\": {\n          \"originalMessage\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"jsonPointer\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ToDoTaskBlank\": {\n        \"title\": \"Base part of data of item in todo's group\",\n        \"description\": \"Data about group item needed for creation of it\",\n        \"properties\": {\n          \"groupUid\": {\n            \"description\": \"An unique id of group that item belongs to\",\n            \"$ref\": \"#/components/schemas/Uid\"\n          },\n          \"title\": {\n            \"description\": \"Short brief of task to be done\",\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"maxLength\": 64\n          },\n          \"description\": {\n            \"description\": \"Detailed description and context of the task. Allowed using of Common Markdown.\",\n            \"type\": [\"string\", \"null\"],\n            \"minLength\": 10,\n            \"maxLength\": 1024\n          },\n          \"isDone\": {\n            \"description\": \"Status of task: is done or not\",\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"example\": false\n          },\n          \"position\": {\n            \"description\": \"Position of a task in group. Allows to track changing of state of a concrete item, including changing od position.\",\n            \"type\": \"number\",\n            \"min\": 0,\n            \"max\": 4096,\n            \"example\": 0,\n            \"nullable\": true\n          },\n          \"attachments\": {\n            \"type\": \"array\",\n            \"description\": \"Any material attached to the task: may be screenshots, photos, pdf- or doc- documents on something else\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AttachmentMeta\"\n            },\n            \"maxItems\": 16,\n            \"example\": [],\n            \"nullable\": true\n          }\n        },\n        \"required\": [\"isDone\", \"title\"],\n        \"example\": {\n          \"isDone\": false,\n          \"title\": \"Book soccer field\",\n          \"description\": \"The complainant agreed and recruited more members to play soccer.\"\n        }\n      },\n      \"ToDoTask\": {\n        \"title\": \"Item in todo's group\",\n        \"description\": \"Describe data structure of an item in group of tasks\",\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ToDoTaskBlank\"\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"uid\": {\n                \"description\": \"An unique id of task\",\n                \"$ref\": \"#/components/schemas/Uid\",\n                \"readOnly\": true\n              },\n              \"dateCreated\": {\n                \"description\": \"Date/time (ISO) when task was created\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2019-11-17T11:20:51.555Z\"\n              },\n              \"dateChanged\": {\n                \"description\": \"Date/time (ISO) when task was changed last time\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2019-11-17T11:20:51.555Z\"\n              }\n            },\n            \"required\": [\"dateChanged\", \"dateCreated\", \"position\", \"uid\"]\n          }\n        ]\n      },\n      \"ToDoGroupBlank\": {\n        \"title\": \"Base part of data of group\",\n        \"description\": \"Data needed for group creation\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"description\": \"Title of a group\",\n            \"type\": \"string\",\n            \"minLength\": 5,\n            \"maxLength\": 32,\n            \"example\": \"Other activities\"\n          },\n          \"description\": {\n            \"description\": \"Detailed description of a group in one/two sequences.\",\n            \"type\": \"string\",\n            \"minLength\": 16,\n            \"maxLength\": 1024,\n            \"example\": \"Other tasks and issues with low priority\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ToDoTaskBlank\"\n            }\n          },\n          \"isComplete\": {\n            \"description\": \"Whether all tasks in group are complete\",\n            \"oneOf\": [{ \"type\": \"boolean\" }, { \"type\": \"null\" }],\n            \"default\": null\n          }\n        },\n        \"required\": [\"title\"]\n      },\n      \"ToDoGroupExtendedData\": {\n        \"title\": \"Extended data of group\",\n        \"description\": \"Extended data has to be obtained after first save\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"uid\": {\n            \"description\": \"An unique id of task\",\n            \"$ref\": \"#/components/schemas/Uid\"\n          },\n          \"dateCreated\": {\n            \"description\": \"Date/time (ISO) when task was created\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-11-17T11:20:51.555Z\"\n          },\n          \"dateChanged\": {\n            \"description\": \"Date/time (ISO) when task was changed last time\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-11-17T11:20:51.555Z\"\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ToDoTask\"\n            }\n          }\n        },\n        \"required\": [\"dateChanged\", \"dateCreated\", \"uid\", \"items\"]\n      },\n      \"ToDoGroup\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ToDoGroupBlank\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ToDoGroupExtendedData\"\n          }\n        ]\n      },\n      \"Uid\": {\n        \"title\": \"UID of element\",\n        \"type\": \"string\",\n        \"minLength\": 16,\n        \"maxLength\": 22,\n        \"pattern\": \"^[\\\\w\\\\-]+$\",\n        \"example\": \"hB6BjVfbe5pBrJiT0kFzu\"\n      },\n      \"Url\": {\n        \"description\": \"Link to any external resource\",\n        \"type\": \"string\",\n        \"pattern\": \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\",\n        \"example\": \"http://example.com\"\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "unmarshal: callback: json: cannot unmarshal array into Go struct field Schema.type of type string"
}