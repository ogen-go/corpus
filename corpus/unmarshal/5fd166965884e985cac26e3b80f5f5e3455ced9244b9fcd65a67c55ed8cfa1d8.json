{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gauss-project/aurorafs"
		},
		"file": {
			"name": "AuroraDebug.yaml",
			"size": 0,
			"path": "openapi/AuroraDebug.yaml",
			"byteSize": 21074,
			"content": "openapi: 3.0.3\ninfo:\n  version: 1.3.4\n  title: Aurora Debug API\n  description: \"A list of the currently provided debug interfaces to interact with the aurorafs node\"\n\nsecurity:\n  - { }\n\nexternalDocs:\n  description: Browse the documentation @ the aurorafs Docs\n  url: \"\"\n\nservers:\n  - url: \"http://{apiRoot}:{port}\"\n    variables:\n      apiRoot:\n        default: \"localhost\"\n        description: Base address of the local aurorafs node debug API\n      port:\n        default: \"1635\"\n        description: Service port provided in aurorafs node config\n\npaths:\n\n  \"/readiness\":\n    get:\n      summary: Get readiness state of node\n      tags:\n        - Status\n      responses:\n        \"200\":\n          description: Health State of node\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/HealthStatus\"\n        default:\n          description: Default response\n\n  \"/health\":\n    get:\n      summary: Get health of node\n      tags:\n        - Status\n      responses:\n        \"200\":\n          description: Health State of node\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/HealthStatus\"\n        default:\n          description: Default response\n\n  \"/addresses\":\n    get:\n      summary: Get overlay and underlay addresses of the node\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: Own node underlay and overlay addresses\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Addresses\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/pingpong/{peer-id}\":\n    post:\n      summary: Try connection to node\n      tags:\n        - Connectivity\n      parameters:\n        - in: path\n          name: peer-id\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: Returns round trip time for given peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/RttMs\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/route/{peer-id}\":\n    get:\n      summary: Get route from node\n      tags:\n        - Routetab\n      parameters:\n        - in: path\n          name: peer-id\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: Returns route paths for given peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/RoutePaths\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n    post:\n      summary: Doing findroute to node\n      tags:\n        - Routetab\n      parameters:\n        - in: path\n          name: peer-id\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: Returns route paths for given peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/RoutePaths\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n    delete:\n      summary: Delete route to node\n      tags:\n        - Routetab\n      parameters:\n        - in: path\n          name: peer-id\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: delete route paths for given peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/connect/{multiAddress}\":\n    post:\n      summary: Connect to address\n      tags:\n        - Connectivity\n      parameters:\n        - in: path\n          allowReserved: true\n          name: multiAddress\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/MultiAddress\"\n          required: true\n          description: Underlay address of peer\n      responses:\n        \"200\":\n          description: Returns overlay address of connected peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Address\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/blocklist\":\n    get:\n      summary: Get a list of block peers\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: Returns overlay addresses of blocked peers\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/BlockPeers\"\n        default:\n          description: Default response\n\n  \"/blocklist/{address}\":\n    post:\n      summary: add peer to block list\n      tags:\n        - Connectivity\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n        - in: query\n          name: timeout\n          schema:\n            type: string\n          required: true\n          description: \"A duration string is a possibly signed sequence of decimal numbers, each with optional fraction and a unit suffix,such as '300ms', '2h45m'. Valid time units are 'ns', 'us' (or 'Âµs'), 'ms', 's', 'm', 'h'.\"\n      responses:\n        \"200\":\n          description: add peer to block list\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n    delete:\n      summary: Remove peer from block list\n      tags:\n        - Connectivity\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: Remove peer from block list\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/peers\":\n    get:\n      summary: Get a list of peers\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: Returns overlay addresses of connected peers\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Peers\"\n        default:\n          description: Default response\n\n  \"/peers/{address}\":\n    delete:\n      summary: Remove peer\n      tags:\n        - Connectivity\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of peer\n      responses:\n        \"200\":\n          description: Disconnected peer\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/chunks/{address}\":\n    get:\n      summary: Check if chunk at address exists locally\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n    delete:\n      summary: Delete a chunk from local storage\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/chunk/discover/{address}\":\n    get:\n      summary: Get chunk discovery nodes\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/ChunkResponse\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/chunk/server/{address}\":\n    get:\n      summary: Get chunk server nodes\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/ChunkResponse\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/chunk/init/{address}\":\n    get:\n      summary: Get chunk pyramid\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/ChunkInfoInitResponse\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/topology\":\n    get:\n      description: Get topology of known network\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: Kademlia topology of the aurorafs node\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Topology\"\n\n  \"/topology/group\":\n    get:\n      description: Get topology of known groups\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: groups topology of the aurorafs node\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/TopologyGroup\"\n\n  \"/welcome-message\":\n    get:\n      summary: Get configured P2P welcome message\n      tags:\n        - Connectivity\n      responses:\n        \"200\":\n          description: Welcome message\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/WelcomeMessage\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n    post:\n      summary: Set P2P welcome message\n      tags:\n        - Connectivity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"AuroraCommon.yaml#/components/schemas/WelcomeMessage\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Status\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response\n\n  \"/metrics\":\n    get:\n      summary: Prometheus metrics gateway\n      tags:\n        - metrics\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"# HELP aurora_api_request_count Number of API requests.\"\n        default:\n          description: Default response\n\n  \"/debug/pprof/cmdline\":\n    get:\n      summary: Responds with the running program's command line, with arguments separated by NUL bytes\n      tags:\n        - pprof\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n        default:\n          description: Default response\n\n  \"/debug/pprof/profile\":\n    get:\n      summary: Responds with the pprof-formatted cpu profile\n      tags:\n        - pprof\n      parameters:\n        - in: query\n          name: seconds\n          schema:\n            type: integer\n          required: false\n          description: profiling lasts for duration specified in seconds GET parameter, or for 30 seconds if not specified.\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n        default:\n          description: Default response\n\n  \"/debug/pprof/symbol\":\n    post:\n      summary: Looks up the program counters listed in the request, responding with a table mapping program counters to function names\n      tags:\n        - pprof\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            text/plain:\n              schema:\n                type: string\n        default:\n          description: Default response\n\n  \"/debug/pprof/trace\":\n    get:\n      summary: Responds with the execution trace in binary form\n      tags:\n        - pprof\n      parameters:\n        - in: query\n          name: seconds\n          schema:\n            type: integer\n          required: false\n          description: tracing lasts for duration specified in seconds GET parameter, or for 1 second if not specified.\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n        default:\n          description: Default response\n\n  \"/debug/pprof\":\n    get:\n      summary: Responds with the pprof-formatted profile named by the request\n      tags:\n        - pprof\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            text/html:\n              schema:\n                type: string\n        default:\n          description: Default response\n\n  \"/debug/vars\":\n    get:\n      summary: Exposes os.Args and runtime.Memstats information\n      tags:\n        - pprof\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Default response\n\n  \"/chunk/source/{address}\":\n    get:\n      summary: Get chunk source\n      tags:\n        - Chunk\n      parameters:\n        - in: path\n          name: address\n          schema:\n            $ref: \"AuroraCommon.yaml#/components/schemas/BosonAddress\"\n          required: true\n          description: Boson address of chunk\n      responses:\n        \"200\":\n          description: Chunk exists\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/ChunkSourceResponse\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/traffic/init\":\n    post:\n      summary: Initialize traffic information\n      tags:\n        - Traffic\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"AuroraCommon.yaml#/components/schemas/Response\"\n        \"400\":\n          $ref: \"AuroraCommon.yaml#/components/responses/400\"\n        \"404\":\n          $ref: \"AuroraCommon.yaml#/components/responses/404\"\n        default:\n          description: Default response\n\n  \"/keystore\":\n    post:\n      summary: Get account keystore json or private key\n      tags:\n        - Account\n      requestBody:\n        content:\n          'application/json':\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n                  description: The password for this private key\n                  required: true\n                type:\n                  type: string\n                  description: If the type is equal to private, export the private key, otherwise export the keystore json\n                  required: false\n      responses:\n        \"200\":\n          description: Exported keysotore json or privatekey\n          content:\n            application/json:\n              examples:\n                default:\n                  summary: The parameter type is not equal to private\n                  value: { \"address\": \"2f8b6f42b70a1ed0bf4f9100f88b8e9e3aecfafd\",\"crypto\": { \"cipher\": \"aes-128-ctr\",\"ciphertext\": \"38dca54facaa0153dd74b28379de278b5065107b650fd25702e41b7da6c1486d\",\"cipherparams\": { \"iv\": \"a80c4d741ae7d558deeab6aebdd7862b\" },\"kdf\": \"scrypt\",\"kdfparams\": { \"dklen\": 32,\"n\": 4096,\"p\": 6,\"r\": 8,\"salt\": \"9fa03653fe70ff1a5d3529fbfe158952deedc9e052622eefebf039beeaaacc66\" },\"mac\": \"89f4a1265bc5c3452a26685155a3d56162dfee5a5d430d0bbf9c7b67221b85a6\" },\"id\": \"4480f8d3-80ec-4dff-bbff-0390e1fbd83c\",\"version\": 3 }\n                private:\n                  summary: The parameter type is equal to private\n                  value: { \"private_key\": \"b9cc06bbe5bc3a992decaf9050b35eb28a8660383191406718efe56d190fa2eb\" }\n        \"500\":\n          $ref: \"AuroraCommon.yaml#/components/responses/500\"\n        default:\n          description: Default response"
		}
	},
	"Error": "unmarshal: json: line 1:67: callback: json: cannot unmarshal bool into Go struct field Schema.required of type []string"
}