{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ral-facilities/datagateway-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "datagateway_api/src/swagger/datagateway_api/openapi.yaml",
			"byteSize": 507195,
			"content": "components:\n  parameters:\n    DISTINCT_FILTER:\n      description: Apply distinct filter to the query. Return unique values for the\n        fields requested.\n      in: query\n      name: distinct\n      schema:\n        items:\n          type: string\n        type: array\n    INCLUDE_FILTER:\n      description: Apply include filter to the query. Given the names of related entities,\n        include them in the results. Only one include parameter is allowed.\n      examples:\n        array:\n          value:\n          - RELATED_COLUMN_1\n          - RELATED_COLUMN_2\n        array of multi-level:\n          value:\n          - RELATED_COLUMN_1\n          - RELATED_COLUMN_2: RELATED_COLUMN_2_RELATED_COLUMN_1\n          - RELATED_COLUMN_3:\n            - RELATED_COLUMN_3_RELATED_COLUMN_1\n            - RELATED_COLUMN_3_RELATED_COLUMN_2\n        multi-level:\n          value:\n            RELATED_COLUMN: RELATED_COLUMN_RELATED_COLUMN\n        multi-level array:\n          value:\n            RELATED_COLUMN:\n            - RELATED_COLUMN_RELATED_COLUMN_1\n            - RELATED_COLUMN_RELATED_COLUMN_2\n        single:\n          value: RELATED_COLUMN\n      in: query\n      name: include\n      schema:\n        oneOf:\n        - type: string\n        - items:\n            oneOf:\n            - type: string\n            - additionalProperties:\n                oneOf:\n                - type: string\n                - items:\n                  - type: string\n                  type: array\n              type: object\n          type: array\n        - additionalProperties:\n            oneOf:\n            - type: string\n            - items:\n              - type: string\n              type: array\n          type: object\n    LIMIT_FILTER:\n      description: Apply limit filter to the query. Limit the number of entities returned.\n      in: query\n      name: limit\n      schema:\n        type: integer\n    ORDER_FILTER:\n      description: Apply order filters to the query. Given a field and direction,\n        order the returned entities.\n      examples:\n        asc:\n          value:\n          - id asc\n        desc:\n          value:\n          - id desc\n      in: query\n      name: order\n      schema:\n        items:\n          type: string\n        type: array\n    SKIP_FILTER:\n      description: Apply skip filter to the query. Offset the returned entities by\n        a given number.\n      in: query\n      name: skip\n      schema:\n        type: integer\n    WHERE_FILTER:\n      description: 'Apply where filters to the query. The possible operators are:\n        ne, like, lt, lte, gt, gte, in and eq. Please modify the examples before executing\n        a request if you are having issues with the example values.'\n      examples:\n        eq:\n          value:\n          - id:\n              eq: 1\n        gt:\n          value:\n          - id:\n              gt: 10\n        gte:\n          value:\n          - id:\n              gte: 50\n        in:\n          value:\n          - id:\n              in:\n              - 1\n              - 2\n              - 3\n        like:\n          value:\n          - name:\n              like: dog\n        lt:\n          value:\n          - id:\n              lt: 10\n        lte:\n          value:\n          - id:\n              lte: 50\n        ne:\n          value:\n          - id:\n              ne: 1\n      in: query\n      name: where\n      schema:\n        items:\n          additionalProperties:\n            description: Name of the column to apply the filter on\n            maxProperties: 1\n            minProperties: 1\n            oneOf:\n            - properties:\n                eq:\n                  oneOf:\n                  - type: string\n                  - type: number\n                  - type: integer\n                  - type: boolean\n              title: Equality\n              type: object\n            - properties:\n                ne:\n                  oneOf:\n                  - type: string\n                  - type: number\n                  - type: integer\n                  - type: boolean\n              title: Inequality\n              type: object\n            - properties:\n                like:\n                  type: string\n              title: Substring equality\n              type: object\n            - properties:\n                lt:\n                  oneOf:\n                  - type: number\n                  - type: integer\n              title: Less than\n              type: object\n            - properties:\n                lte:\n                  oneOf:\n                  - type: number\n                  - type: integer\n              title: Less than or equal\n              type: object\n            - properties:\n                gt:\n                  oneOf:\n                  - type: number\n                  - type: integer\n              title: Greater than\n              type: object\n            - properties:\n                gte:\n                  oneOf:\n                  - type: number\n                  - type: integer\n              title: Greater than or equal\n              type: object\n            - properties:\n                in:\n                  items:\n                    oneOf:\n                    - type: string\n                    - type: number\n                    - type: integer\n                  type: array\n              title: Equality from a list of values\n              type: object\n            title: Column\n            type: object\n          type: object\n        type: array\n  schemas:\n    AFFILIATION:\n      properties:\n        DATAPUBLICATIONUSER:\n          $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataPublicationUserId:\n          type: integer\n        fullReference:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        pid:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - dataPublicationUserId\n    APPLICATION:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        jobs:\n          items:\n            $ref: '#/components/schemas/JOB'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        version:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - version\n      - facilityID\n    DATACOLLECTION:\n      properties:\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionDatafiles:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n          type: array\n        dataCollectionDatasets:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n          type: array\n        dataCollectionInvestigations:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n          type: array\n        dataCollectionParameters:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n          type: array\n        dataPublications:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATION'\n          type: array\n        doi:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        jobs:\n          items:\n            $ref: '#/components/schemas/JOB'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n    DATACOLLECTIONDATAFILE:\n      properties:\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        DATAFILE:\n          $ref: '#/components/schemas/DATAFILE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionID:\n          type: integer\n        datafileID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - dataCollectionID\n      - datafileID\n    DATACOLLECTIONDATASET:\n      properties:\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        DATASET:\n          $ref: '#/components/schemas/DATASET'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionID:\n          type: integer\n        datasetID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - dataCollectionID\n      - datasetID\n    DATACOLLECTIONINVESTIGATION:\n      properties:\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datacollectionId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationId:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datacollectionId\n      - investigationId\n    DATACOLLECTIONPARAMETER:\n      properties:\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionID:\n          type: integer\n        dateTimeValue:\n          format: datetime\n          type: string\n        error:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        numericValue:\n          type: string\n        parameterTypeID:\n          type: integer\n        rangeBottom:\n          type: string\n        rangeTop:\n          type: string\n        stringValue:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - dataCollectionID\n      - parameterTypeID\n    DATAFILE:\n      properties:\n        DATAFILEFORMAT:\n          $ref: '#/components/schemas/DATAFILEFORMAT'\n        DATASET:\n          $ref: '#/components/schemas/DATASET'\n        checksum:\n          type: string\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionDatafiles:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n          type: array\n        datafileCreateTime:\n          format: datetime\n          type: string\n        datafileFormatID:\n          type: integer\n        datafileModTime:\n          format: datetime\n          type: string\n        datafileParameters:\n          items:\n            $ref: '#/components/schemas/DATAFILEPARAMETER'\n          type: array\n        datasetID:\n          type: integer\n        description:\n          type: string\n        doi:\n          type: string\n        fileSize:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        location:\n          type: string\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        relatedDatafiles:\n          items:\n            $ref: '#/components/schemas/RELATEDDATAFILE'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - datasetID\n    DATAFILEFORMAT:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datafiles:\n          items:\n            $ref: '#/components/schemas/DATAFILE'\n          type: array\n        description:\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        version:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - version\n      - facilityID\n    DATAFILEPARAMETER:\n      properties:\n        DATAFILE:\n          $ref: '#/components/schemas/DATAFILE'\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datafileID:\n          type: integer\n        dateTimeValue:\n          format: datetime\n          type: string\n        error:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        numericValue:\n          type: string\n        parameterTypeID:\n          type: integer\n        rangeBottom:\n          type: string\n        rangeTop:\n          type: string\n        stringValue:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datafileID\n      - parameterTypeID\n    DATAPUBLICATION:\n      properties:\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        DATAPUBLICATIONTYPE:\n          $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataPublicationDates:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n          type: array\n        datacollectionId:\n          type: integer\n        datapublicationtypeId:\n          type: integer\n        description:\n          type: string\n        facilityId:\n          type: integer\n        fundingReferences:\n          items:\n            $ref: '#/components/schemas/FUNDINGREFERENCE'\n          type: array\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        pid:\n          type: string\n        publicationDate:\n          format: datetime\n          type: string\n        relatedItems:\n          items:\n            $ref: '#/components/schemas/RELATEDITEM'\n          type: array\n        subject:\n          type: string\n        title:\n          type: string\n        users:\n          items:\n            $ref: '#/components/schemas/USER'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - title\n      - pid\n      - datacollectionId\n      - facilityId\n      - datapublicationtypeId\n    DATAPUBLICATIONDATE:\n      properties:\n        DATAPUBLICATION:\n          $ref: '#/components/schemas/DATAPUBLICATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datapublicationId:\n          type: integer\n        date:\n          type: string\n        dateType:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - dateType\n      - date\n      - datapublicationId\n    DATAPUBLICATIONFUNDING:\n      properties:\n        DATAPUBLICATION:\n          $ref: '#/components/schemas/DATAPUBLICATION'\n        FUNDINGREFERENCE:\n          $ref: '#/components/schemas/FUNDINGREFERENCE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datapublicationId:\n          type: integer\n        fundingId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datapublicationId\n      - fundingId\n    DATAPUBLICATIONTYPE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataPublications:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATION'\n          type: array\n        description:\n          type: string\n        facilityId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n      required:\n      - id\n      - modId\n      - modTime\n      - name\n      - facilityId\n    DATAPUBLICATIONUSER:\n      properties:\n        DATAPUBLICATION:\n          $ref: '#/components/schemas/DATAPUBLICATION'\n        USER:\n          $ref: '#/components/schemas/USER'\n        affiliations:\n          items:\n            $ref: '#/components/schemas/AFFILIATION'\n          type: array\n        contributorType:\n          type: string\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        email:\n          type: string\n        familyName:\n          type: string\n        fullName:\n          type: string\n        givenName:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        orderKey:\n          type: string\n        publicationId:\n          type: integer\n        userId:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - contributorType\n      - publicationId\n      - userId\n    DATASET:\n      properties:\n        DATASETTYPE:\n          $ref: '#/components/schemas/DATASETTYPE'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        SAMPLE:\n          $ref: '#/components/schemas/SAMPLE'\n        complete:\n          type: boolean\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionDatasets:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n          type: array\n        datafiles:\n          items:\n            $ref: '#/components/schemas/DATAFILE'\n          type: array\n        datasetInstruments:\n          items:\n            $ref: '#/components/schemas/DATASETINSTRUMENT'\n          type: array\n        datasetParameters:\n          items:\n            $ref: '#/components/schemas/DATASETPARAMETER'\n          type: array\n        datasetTechniques:\n          items:\n            $ref: '#/components/schemas/DATASETTECHNIQUE'\n          type: array\n        description:\n          type: string\n        doi:\n          type: string\n        endDate:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        location:\n          type: string\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        sampleID:\n          type: integer\n        startDate:\n          format: datetime\n          type: string\n        typeID:\n          type: integer\n      required:\n      - id\n      - complete\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - investigationID\n      - typeID\n    DATASETINSTRUMENT:\n      properties:\n        DATASET:\n          $ref: '#/components/schemas/DATASET'\n        INSTRUMENT:\n          $ref: '#/components/schemas/INSTRUMENT'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasetId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        instrumentId:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datasetId\n      - instrumentId\n    DATASETPARAMETER:\n      properties:\n        DATASET:\n          $ref: '#/components/schemas/DATASET'\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasetID:\n          type: integer\n        dateTimeValue:\n          format: datetime\n          type: string\n        error:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        numericValue:\n          type: string\n        parameterTypeID:\n          type: integer\n        rangeBottom:\n          type: string\n        rangeTop:\n          type: string\n        stringValue:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datasetID\n      - parameterTypeID\n    DATASETTECHNIQUE:\n      properties:\n        DATASET:\n          $ref: '#/components/schemas/DATASET'\n        TECHNIQUE:\n          $ref: '#/components/schemas/TECHNIQUE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasetId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        techniqueId:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - datasetId\n      - techniqueId\n    DATASETTYPE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasets:\n          items:\n            $ref: '#/components/schemas/DATASET'\n          type: array\n        description:\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - facilityID\n    FACILITY:\n      properties:\n        applications:\n          items:\n            $ref: '#/components/schemas/APPLICATION'\n          type: array\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataPublicationTypes:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n          type: array\n        dataPublications:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATION'\n          type: array\n        datafileFormats:\n          items:\n            $ref: '#/components/schemas/DATAFILEFORMAT'\n          type: array\n        datasetTypes:\n          items:\n            $ref: '#/components/schemas/DATASETTYPE'\n          type: array\n        daysUntilRelease:\n          type: integer\n        description:\n          type: string\n        facilityCycles:\n          items:\n            $ref: '#/components/schemas/FACILITYCYCLE'\n          type: array\n        fullName:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        instruments:\n          items:\n            $ref: '#/components/schemas/INSTRUMENT'\n          type: array\n        investigationTypes:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONTYPE'\n          type: array\n        investigations:\n          items:\n            $ref: '#/components/schemas/INVESTIGATION'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        parameterTypes:\n          items:\n            $ref: '#/components/schemas/PARAMETERTYPE'\n          type: array\n        sampleTypes:\n          items:\n            $ref: '#/components/schemas/SAMPLETYPE'\n          type: array\n        url:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n    FACILITYCYCLE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        description:\n          type: string\n        endDate:\n          format: datetime\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationFacilityCycles:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        startDate:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - facilityID\n    FUNDINGREFERENCE:\n      properties:\n        awardNumber:\n          type: string\n        awardTitle:\n          type: string\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        funderIdentifier:\n          type: string\n        funderName:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigations:\n          items:\n            $ref: '#/components/schemas/INVESTIGATION'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        publications:\n          items:\n            $ref: '#/components/schemas/PUBLICATION'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - funderName\n      - awardNumber\n    GROUPING:\n      properties:\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        grouping:\n          items:\n            $ref: '#/components/schemas/GROUPING'\n          type: array\n        id:\n          readOnly: true\n          type: integer\n        investigationGroups:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONGROUP'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        rules:\n          items:\n            $ref: '#/components/schemas/RULE'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n    INSTRUMENT:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasetInstruments:\n          items:\n            $ref: '#/components/schemas/DATASETINSTRUMENT'\n          type: array\n        description:\n          type: string\n        facilityID:\n          type: integer\n        fullName:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        instrumentScientists:\n          items:\n            $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n          type: array\n        investigationInstruments:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        url:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - facilityID\n    INSTRUMENTSCIENTIST:\n      properties:\n        INSTRUMENT:\n          $ref: '#/components/schemas/INSTRUMENT'\n        USER:\n          $ref: '#/components/schemas/USER'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        instrumentID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        userID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - instrumentID\n      - userID\n    INVESTIGATION:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        INVESTIGATIONTYPE:\n          $ref: '#/components/schemas/INVESTIGATIONTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionInvestigations:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n          type: array\n        datasets:\n          items:\n            $ref: '#/components/schemas/DATASET'\n          type: array\n        doi:\n          type: string\n        endDate:\n          format: datetime\n          type: string\n        facilityID:\n          type: integer\n        fileCount:\n          type: integer\n        fileSize:\n          type: integer\n        fundingReferences:\n          items:\n            $ref: '#/components/schemas/FUNDINGREFERENCE'\n          type: array\n        id:\n          readOnly: true\n          type: integer\n        investigationFacilityCycles:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n          type: array\n        investigationGroups:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONGROUP'\n          type: array\n        investigationInstruments:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n          type: array\n        investigationParameters:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n          type: array\n        investigationUsers:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONUSER'\n          type: array\n        keywords:\n          items:\n            $ref: '#/components/schemas/KEYWORD'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        publications:\n          items:\n            $ref: '#/components/schemas/PUBLICATION'\n          type: array\n        releaseDate:\n          format: datetime\n          type: string\n        samples:\n          items:\n            $ref: '#/components/schemas/SAMPLE'\n          type: array\n        shifts:\n          items:\n            $ref: '#/components/schemas/SHIFT'\n          type: array\n        startDate:\n          format: datetime\n          type: string\n        studyInvestigations:\n          items:\n            $ref: '#/components/schemas/STUDYINVESTIGATION'\n          type: array\n        summary:\n          type: string\n        title:\n          type: string\n        typeID:\n          type: integer\n        visitId:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - title\n      - visitId\n      - facilityID\n      - typeID\n    INVESTIGATIONFACILITYCYCLE:\n      properties:\n        FACILITYCYCLE:\n          $ref: '#/components/schemas/FACILITYCYCLE'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        facilityCycleId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationId:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - facilityCycleId\n      - investigationId\n    INVESTIGATIONFUNDING:\n      properties:\n        FUNDINGREFERENCE:\n          $ref: '#/components/schemas/FUNDINGREFERENCE'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        fundingId:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationId:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - fundingId\n      - investigationId\n    INVESTIGATIONGROUP:\n      properties:\n        GROUPING:\n          $ref: '#/components/schemas/GROUPING'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        groupID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        role:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - role\n      - groupID\n      - investigationID\n    INVESTIGATIONINSTRUMENT:\n      properties:\n        INSTRUMENT:\n          $ref: '#/components/schemas/INSTRUMENT'\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        instrumentID:\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - instrumentID\n      - investigationID\n    INVESTIGATIONPARAMETER:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dateTimeValue:\n          format: datetime\n          type: string\n        error:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        numericValue:\n          type: string\n        parameterTypeID:\n          type: integer\n        rangeBottom:\n          type: string\n        rangeTop:\n          type: string\n        stringValue:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - investigationID\n      - parameterTypeID\n    INVESTIGATIONTYPE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        description:\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigations:\n          items:\n            $ref: '#/components/schemas/INVESTIGATION'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - facilityID\n    INVESTIGATIONUSER:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        USER:\n          $ref: '#/components/schemas/USER'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        role:\n          type: string\n        userID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - role\n      - investigationID\n      - userID\n    JOB:\n      properties:\n        APPLICATION:\n          $ref: '#/components/schemas/APPLICATION'\n        DATACOLLECTION:\n          $ref: '#/components/schemas/DATACOLLECTION'\n        applicationID:\n          type: integer\n        arguments:\n          type: string\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        inputDataCollectionID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        outputDataCollectionID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - applicationID\n    KEYWORD:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - investigationID\n    PARAMETERTYPE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        applicableToDataCollection:\n          type: boolean\n        applicableToDatafile:\n          type: boolean\n        applicableToDataset:\n          type: boolean\n        applicableToInvestigation:\n          type: boolean\n        applicableToSample:\n          type: boolean\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataCollectionParameters:\n          items:\n            $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n          type: array\n        datafileParameters:\n          items:\n            $ref: '#/components/schemas/DATAFILEPARAMETER'\n          type: array\n        datasetParameters:\n          items:\n            $ref: '#/components/schemas/DATASETPARAMETER'\n          type: array\n        description:\n          type: string\n        enforced:\n          type: boolean\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        investigationParameters:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n          type: array\n        maximumNumericValue:\n          type: string\n        minimumNumericValue:\n          type: string\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        permissibleStringValues:\n          items:\n            $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n          type: array\n        sampleParameters:\n          items:\n            $ref: '#/components/schemas/SAMPLEPARAMETER'\n          type: array\n        units:\n          type: string\n        unitsFullName:\n          type: string\n        valueType:\n          type: integer\n        verified:\n          type: boolean\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - units\n      - valueType\n      - facilityID\n    PERMISSIBLESTRINGVALUE:\n      properties:\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        parameterTypeID:\n          type: integer\n        value:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - value\n      - parameterTypeID\n    PUBLICATION:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        doi:\n          type: string\n        fullReference:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        repository:\n          type: string\n        repositoryId:\n          type: string\n        url:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - fullReference\n      - modId\n      - modTime\n      - investigationID\n    PUBLICSTEP:\n      properties:\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        field:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        origin:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - field\n      - modId\n      - modTime\n      - origin\n    RELATEDDATAFILE:\n      properties:\n        DATAFILE:\n          $ref: '#/components/schemas/DATAFILE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        destDatafileID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        relation:\n          type: string\n        sourceDatafileID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - relation\n      - destDatafileID\n      - sourceDatafileID\n    RELATEDITEM:\n      properties:\n        PUBLICATION:\n          $ref: '#/components/schemas/PUBLICATION'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datapublicationId:\n          type: integer\n        fullReference:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        identifier:\n          type: string\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        relatedItemType:\n          type: string\n        relationType:\n          type: string\n        title:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - identifier\n      - relationType\n      - datapublicationId\n    RULE:\n      properties:\n        GROUPING:\n          $ref: '#/components/schemas/GROUPING'\n        attribute:\n          type: string\n        bean:\n          type: string\n        c:\n          type: integer\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        crudFlags:\n          type: string\n        crudJPQL:\n          type: string\n        d:\n          type: integer\n        groupingID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        includeJPQL:\n          type: string\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        r:\n          type: integer\n        restricted:\n          type: integer\n        searchJPQL:\n          type: string\n        u:\n          type: integer\n        what:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - crudFlags\n      - modId\n      - modTime\n      - what\n    SAMPLE:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        SAMPLETYPE:\n          $ref: '#/components/schemas/SAMPLETYPE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasets:\n          items:\n            $ref: '#/components/schemas/DATASET'\n          type: array\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        sampleParameters:\n          items:\n            $ref: '#/components/schemas/SAMPLEPARAMETER'\n          type: array\n        sampleTypeID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n      - investigationID\n    SAMPLEPARAMETER:\n      properties:\n        PARAMETERTYPE:\n          $ref: '#/components/schemas/PARAMETERTYPE'\n        SAMPLE:\n          $ref: '#/components/schemas/SAMPLE'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dateTimeValue:\n          format: datetime\n          type: string\n        error:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        numericValue:\n          type: string\n        parameterTypeID:\n          type: integer\n        rangeBottom:\n          type: string\n        rangeTop:\n          type: string\n        sampleID:\n          type: integer\n        stringValue:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - sampleID\n      - parameterTypeID\n    SAMPLETYPE:\n      properties:\n        FACILITY:\n          $ref: '#/components/schemas/FACILITY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        facilityID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        molecularFormula:\n          type: string\n        name:\n          type: string\n        safetyInformation:\n          type: string\n        samples:\n          items:\n            $ref: '#/components/schemas/SAMPLE'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - molecularFormula\n      - name\n      - facilityID\n    SHIFT:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        comment:\n          type: string\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        endDate:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        startDate:\n          format: datetime\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - endDate\n      - modId\n      - modTime\n      - startDate\n      - investigationID\n    STUDY:\n      properties:\n        USER:\n          $ref: '#/components/schemas/USER'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        pid:\n          type: string\n        startDate:\n          format: datetime\n          type: string\n        status:\n          type: integer\n        studyInvestigations:\n          items:\n            $ref: '#/components/schemas/STUDYINVESTIGATION'\n          type: array\n        userID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n    STUDYINVESTIGATION:\n      properties:\n        INVESTIGATION:\n          $ref: '#/components/schemas/INVESTIGATION'\n        STUDY:\n          $ref: '#/components/schemas/STUDY'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        investigationID:\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        studyID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - investigationID\n      - studyID\n    TECHNIQUE:\n      properties:\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        datasetTechniques:\n          items:\n            $ref: '#/components/schemas/DATASETTECHNIQUE'\n          type: array\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        pid:\n          type: string\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n    USER:\n      properties:\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        dataPublicationUsers:\n          items:\n            $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n          type: array\n        email:\n          type: string\n        fullName:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        instrumentScientists:\n          items:\n            $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n          type: array\n        investigationUsers:\n          items:\n            $ref: '#/components/schemas/INVESTIGATIONUSER'\n          type: array\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        name:\n          type: string\n        orcidId:\n          type: string\n        studies:\n          items:\n            $ref: '#/components/schemas/STUDY'\n          type: array\n        userGroups:\n          items:\n            $ref: '#/components/schemas/USERGROUP'\n          type: array\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - name\n    USERGROUP:\n      properties:\n        GROUPING:\n          $ref: '#/components/schemas/GROUPING'\n        USER:\n          $ref: '#/components/schemas/USER'\n        createId:\n          type: string\n        createTime:\n          format: datetime\n          type: string\n        groupID:\n          type: integer\n        id:\n          readOnly: true\n          type: integer\n        modId:\n          type: string\n        modTime:\n          format: datetime\n          type: string\n        userID:\n          type: integer\n      required:\n      - id\n      - createId\n      - createTime\n      - modId\n      - modTime\n      - groupID\n      - userID\n  securitySchemes:\n    session_id:\n      bearerFormat: uuid\n      scheme: bearer\n      type: http\ninfo:\n  title: DataGateway API\n  version: '1.0'\nopenapi: 3.0.3\npaths:\n  /datagateway-api/applications:\n    get:\n      description: Retrieves a list of Application objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APPLICATION'\n                type: array\n          description: Success - returns Application that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Applications\n      tags:\n      - Applications\n    patch:\n      description: Updates Application object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APPLICATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APPLICATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Applications\n      tags:\n      - Applications\n    post:\n      description: Creates new Application object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/APPLICATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APPLICATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Applications\n      tags:\n      - Applications\n  /datagateway-api/applications/{id_}:\n    delete:\n      description: Updates Application with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Applications by id\n      tags:\n      - Applications\n    get:\n      description: Retrieves a list of Application objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APPLICATION'\n          description: Success - the matching Application\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Application matching the given ID\n      tags:\n      - Applications\n    patch:\n      description: Updates Application with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/APPLICATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APPLICATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Applications by id\n      tags:\n      - Applications\n  /datagateway-api/applications/count:\n    get:\n      description: Return the count of the Application objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Application objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Applications\n      tags:\n      - Applications\n  /datagateway-api/applications/findone:\n    get:\n      description: Retrieves the first Application objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APPLICATION'\n          description: Success - a Application object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Application\n      tags:\n      - Applications\n  /datagateway-api/affiliations:\n    get:\n      description: Retrieves a list of Affiliation objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AFFILIATION'\n                type: array\n          description: Success - returns Affiliation that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Affiliations\n      tags:\n      - Affiliations\n    patch:\n      description: Updates Affiliation object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/AFFILIATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AFFILIATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Affiliations\n      tags:\n      - Affiliations\n    post:\n      description: Creates new Affiliation object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/AFFILIATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AFFILIATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Affiliations\n      tags:\n      - Affiliations\n  /datagateway-api/affiliations/{id_}:\n    delete:\n      description: Updates Affiliation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Affiliations by id\n      tags:\n      - Affiliations\n    get:\n      description: Retrieves a list of Affiliation objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AFFILIATION'\n          description: Success - the matching Affiliation\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Affiliation matching the given ID\n      tags:\n      - Affiliations\n    patch:\n      description: Updates Affiliation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AFFILIATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AFFILIATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Affiliations by id\n      tags:\n      - Affiliations\n  /datagateway-api/affiliations/count:\n    get:\n      description: Return the count of the Affiliation objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Affiliation objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Affiliations\n      tags:\n      - Affiliations\n  /datagateway-api/affiliations/findone:\n    get:\n      description: Retrieves the first Affiliation objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AFFILIATION'\n          description: Success - a Affiliation object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Affiliation\n      tags:\n      - Affiliations\n  /datagateway-api/datacollectioninvestigations:\n    get:\n      description: Retrieves a list of DataCollectionInvestigation objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n                type: array\n          description: Success - returns DataCollectionInvestigation that satisfy\n            the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataCollectionInvestigations\n      tags:\n      - DataCollectionInvestigations\n    patch:\n      description: Updates DataCollectionInvestigation object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionInvestigations\n      tags:\n      - DataCollectionInvestigations\n    post:\n      description: Creates new DataCollectionInvestigation object(s) with details\n        provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataCollectionInvestigations\n      tags:\n      - DataCollectionInvestigations\n  /datagateway-api/datacollectioninvestigations/{id_}:\n    delete:\n      description: Updates DataCollectionInvestigation with the specified ID with\n        details provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataCollectionInvestigations by id\n      tags:\n      - DataCollectionInvestigations\n    get:\n      description: Retrieves a list of DataCollectionInvestigation objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n          description: Success - the matching DataCollectionInvestigation\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataCollectionInvestigation matching the given ID\n      tags:\n      - DataCollectionInvestigations\n    patch:\n      description: Updates DataCollectionInvestigation with the specified ID with\n        details provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionInvestigations by id\n      tags:\n      - DataCollectionInvestigations\n  /datagateway-api/datacollectioninvestigations/count:\n    get:\n      description: Return the count of the DataCollectionInvestigation objects that\n        would be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataCollectionInvestigation objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataCollectionInvestigations\n      tags:\n      - DataCollectionInvestigations\n  /datagateway-api/datacollectioninvestigations/findone:\n    get:\n      description: Retrieves the first DataCollectionInvestigation objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONINVESTIGATION'\n          description: Success - a DataCollectionInvestigation object that satisfies\n            the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataCollectionInvestigation\n      tags:\n      - DataCollectionInvestigations\n  /datagateway-api/datacollectiondatafiles:\n    get:\n      description: Retrieves a list of DataCollectionDatafile objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n                type: array\n          description: Success - returns DataCollectionDatafile that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataCollectionDatafiles\n      tags:\n      - DataCollectionDatafiles\n    patch:\n      description: Updates DataCollectionDatafile object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionDatafiles\n      tags:\n      - DataCollectionDatafiles\n    post:\n      description: Creates new DataCollectionDatafile object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataCollectionDatafiles\n      tags:\n      - DataCollectionDatafiles\n  /datagateway-api/datacollectiondatafiles/{id_}:\n    delete:\n      description: Updates DataCollectionDatafile with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataCollectionDatafiles by id\n      tags:\n      - DataCollectionDatafiles\n    get:\n      description: Retrieves a list of DataCollectionDatafile objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n          description: Success - the matching DataCollectionDatafile\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataCollectionDatafile matching the given ID\n      tags:\n      - DataCollectionDatafiles\n    patch:\n      description: Updates DataCollectionDatafile with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionDatafiles by id\n      tags:\n      - DataCollectionDatafiles\n  /datagateway-api/datacollectiondatafiles/count:\n    get:\n      description: Return the count of the DataCollectionDatafile objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataCollectionDatafile objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataCollectionDatafiles\n      tags:\n      - DataCollectionDatafiles\n  /datagateway-api/datacollectiondatafiles/findone:\n    get:\n      description: Retrieves the first DataCollectionDatafile objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATAFILE'\n          description: Success - a DataCollectionDatafile object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataCollectionDatafile\n      tags:\n      - DataCollectionDatafiles\n  /datagateway-api/datacollectiondatasets:\n    get:\n      description: Retrieves a list of DataCollectionDataset objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n                type: array\n          description: Success - returns DataCollectionDataset that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataCollectionDatasets\n      tags:\n      - DataCollectionDatasets\n    patch:\n      description: Updates DataCollectionDataset object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionDatasets\n      tags:\n      - DataCollectionDatasets\n    post:\n      description: Creates new DataCollectionDataset object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataCollectionDatasets\n      tags:\n      - DataCollectionDatasets\n  /datagateway-api/datacollectiondatasets/{id_}:\n    delete:\n      description: Updates DataCollectionDataset with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataCollectionDatasets by id\n      tags:\n      - DataCollectionDatasets\n    get:\n      description: Retrieves a list of DataCollectionDataset objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n          description: Success - the matching DataCollectionDataset\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataCollectionDataset matching the given ID\n      tags:\n      - DataCollectionDatasets\n    patch:\n      description: Updates DataCollectionDataset with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionDatasets by id\n      tags:\n      - DataCollectionDatasets\n  /datagateway-api/datacollectiondatasets/count:\n    get:\n      description: Return the count of the DataCollectionDataset objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataCollectionDataset objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataCollectionDatasets\n      tags:\n      - DataCollectionDatasets\n  /datagateway-api/datacollectiondatasets/findone:\n    get:\n      description: Retrieves the first DataCollectionDataset objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONDATASET'\n          description: Success - a DataCollectionDataset object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataCollectionDataset\n      tags:\n      - DataCollectionDatasets\n  /datagateway-api/datacollectionparameters:\n    get:\n      description: Retrieves a list of DataCollectionParameter objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n                type: array\n          description: Success - returns DataCollectionParameter that satisfy the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataCollectionParameters\n      tags:\n      - DataCollectionParameters\n    patch:\n      description: Updates DataCollectionParameter object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionParameters\n      tags:\n      - DataCollectionParameters\n    post:\n      description: Creates new DataCollectionParameter object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataCollectionParameters\n      tags:\n      - DataCollectionParameters\n  /datagateway-api/datacollectionparameters/{id_}:\n    delete:\n      description: Updates DataCollectionParameter with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataCollectionParameters by id\n      tags:\n      - DataCollectionParameters\n    get:\n      description: Retrieves a list of DataCollectionParameter objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n          description: Success - the matching DataCollectionParameter\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataCollectionParameter matching the given ID\n      tags:\n      - DataCollectionParameters\n    patch:\n      description: Updates DataCollectionParameter with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollectionParameters by id\n      tags:\n      - DataCollectionParameters\n  /datagateway-api/datacollectionparameters/count:\n    get:\n      description: Return the count of the DataCollectionParameter objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataCollectionParameter objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataCollectionParameters\n      tags:\n      - DataCollectionParameters\n  /datagateway-api/datacollectionparameters/findone:\n    get:\n      description: Retrieves the first DataCollectionParameter objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTIONPARAMETER'\n          description: Success - a DataCollectionParameter object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataCollectionParameter\n      tags:\n      - DataCollectionParameters\n  /datagateway-api/datacollections:\n    get:\n      description: Retrieves a list of DataCollection objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTION'\n                type: array\n          description: Success - returns DataCollection that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataCollections\n      tags:\n      - DataCollections\n    patch:\n      description: Updates DataCollection object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollections\n      tags:\n      - DataCollections\n    post:\n      description: Creates new DataCollection object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATACOLLECTION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATACOLLECTION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataCollections\n      tags:\n      - DataCollections\n  /datagateway-api/datacollections/{id_}:\n    delete:\n      description: Updates DataCollection with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataCollections by id\n      tags:\n      - DataCollections\n    get:\n      description: Retrieves a list of DataCollection objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTION'\n          description: Success - the matching DataCollection\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataCollection matching the given ID\n      tags:\n      - DataCollections\n    patch:\n      description: Updates DataCollection with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATACOLLECTION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataCollections by id\n      tags:\n      - DataCollections\n  /datagateway-api/datacollections/count:\n    get:\n      description: Return the count of the DataCollection objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataCollection objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataCollections\n      tags:\n      - DataCollections\n  /datagateway-api/datacollections/findone:\n    get:\n      description: Retrieves the first DataCollection objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATACOLLECTION'\n          description: Success - a DataCollection object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataCollection\n      tags:\n      - DataCollections\n  /datagateway-api/datapublications:\n    get:\n      description: Retrieves a list of DataPublication objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATION'\n                type: array\n          description: Success - returns DataPublication that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataPublications\n      tags:\n      - DataPublications\n    patch:\n      description: Updates DataPublication object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublications\n      tags:\n      - DataPublications\n    post:\n      description: Creates new DataPublication object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataPublications\n      tags:\n      - DataPublications\n  /datagateway-api/datapublications/{id_}:\n    delete:\n      description: Updates DataPublication with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataPublications by id\n      tags:\n      - DataPublications\n    get:\n      description: Retrieves a list of DataPublication objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATION'\n          description: Success - the matching DataPublication\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataPublication matching the given ID\n      tags:\n      - DataPublications\n    patch:\n      description: Updates DataPublication with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAPUBLICATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublications by id\n      tags:\n      - DataPublications\n  /datagateway-api/datapublications/count:\n    get:\n      description: Return the count of the DataPublication objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataPublication objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataPublications\n      tags:\n      - DataPublications\n  /datagateway-api/datapublications/findone:\n    get:\n      description: Retrieves the first DataPublication objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATION'\n          description: Success - a DataPublication object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataPublication\n      tags:\n      - DataPublications\n  /datagateway-api/datapublicationdates:\n    get:\n      description: Retrieves a list of DataPublicationDate objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n                type: array\n          description: Success - returns DataPublicationDate that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataPublicationDates\n      tags:\n      - DataPublicationDates\n    patch:\n      description: Updates DataPublicationDate object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationDates\n      tags:\n      - DataPublicationDates\n    post:\n      description: Creates new DataPublicationDate object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataPublicationDates\n      tags:\n      - DataPublicationDates\n  /datagateway-api/datapublicationdates/{id_}:\n    delete:\n      description: Updates DataPublicationDate with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataPublicationDates by id\n      tags:\n      - DataPublicationDates\n    get:\n      description: Retrieves a list of DataPublicationDate objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n          description: Success - the matching DataPublicationDate\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataPublicationDate matching the given ID\n      tags:\n      - DataPublicationDates\n    patch:\n      description: Updates DataPublicationDate with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationDates by id\n      tags:\n      - DataPublicationDates\n  /datagateway-api/datapublicationdates/count:\n    get:\n      description: Return the count of the DataPublicationDate objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataPublicationDate objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataPublicationDates\n      tags:\n      - DataPublicationDates\n  /datagateway-api/datapublicationdates/findone:\n    get:\n      description: Retrieves the first DataPublicationDate objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONDATE'\n          description: Success - a DataPublicationDate object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataPublicationDate\n      tags:\n      - DataPublicationDates\n  /datagateway-api/datapublicationfundings:\n    get:\n      description: Retrieves a list of DataPublicationFunding objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n                type: array\n          description: Success - returns DataPublicationFunding that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataPublicationFundings\n      tags:\n      - DataPublicationFundings\n    patch:\n      description: Updates DataPublicationFunding object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationFundings\n      tags:\n      - DataPublicationFundings\n    post:\n      description: Creates new DataPublicationFunding object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataPublicationFundings\n      tags:\n      - DataPublicationFundings\n  /datagateway-api/datapublicationfundings/{id_}:\n    delete:\n      description: Updates DataPublicationFunding with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataPublicationFundings by id\n      tags:\n      - DataPublicationFundings\n    get:\n      description: Retrieves a list of DataPublicationFunding objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n          description: Success - the matching DataPublicationFunding\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataPublicationFunding matching the given ID\n      tags:\n      - DataPublicationFundings\n    patch:\n      description: Updates DataPublicationFunding with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationFundings by id\n      tags:\n      - DataPublicationFundings\n  /datagateway-api/datapublicationfundings/count:\n    get:\n      description: Return the count of the DataPublicationFunding objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataPublicationFunding objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataPublicationFundings\n      tags:\n      - DataPublicationFundings\n  /datagateway-api/datapublicationfundings/findone:\n    get:\n      description: Retrieves the first DataPublicationFunding objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONFUNDING'\n          description: Success - a DataPublicationFunding object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataPublicationFunding\n      tags:\n      - DataPublicationFundings\n  /datagateway-api/datapublicationtypes:\n    get:\n      description: Retrieves a list of DataPublicationType objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n                type: array\n          description: Success - returns DataPublicationType that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataPublicationTypes\n      tags:\n      - DataPublicationTypes\n    patch:\n      description: Updates DataPublicationType object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationTypes\n      tags:\n      - DataPublicationTypes\n    post:\n      description: Creates new DataPublicationType object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataPublicationTypes\n      tags:\n      - DataPublicationTypes\n  /datagateway-api/datapublicationtypes/{id_}:\n    delete:\n      description: Updates DataPublicationType with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataPublicationTypes by id\n      tags:\n      - DataPublicationTypes\n    get:\n      description: Retrieves a list of DataPublicationType objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n          description: Success - the matching DataPublicationType\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataPublicationType matching the given ID\n      tags:\n      - DataPublicationTypes\n    patch:\n      description: Updates DataPublicationType with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationTypes by id\n      tags:\n      - DataPublicationTypes\n  /datagateway-api/datapublicationtypes/count:\n    get:\n      description: Return the count of the DataPublicationType objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataPublicationType objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataPublicationTypes\n      tags:\n      - DataPublicationTypes\n  /datagateway-api/datapublicationtypes/findone:\n    get:\n      description: Retrieves the first DataPublicationType objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONTYPE'\n          description: Success - a DataPublicationType object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataPublicationType\n      tags:\n      - DataPublicationTypes\n  /datagateway-api/datapublicationusers:\n    get:\n      description: Retrieves a list of DataPublicationUser objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n                type: array\n          description: Success - returns DataPublicationUser that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DataPublicationUsers\n      tags:\n      - DataPublicationUsers\n    patch:\n      description: Updates DataPublicationUser object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationUsers\n      tags:\n      - DataPublicationUsers\n    post:\n      description: Creates new DataPublicationUser object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DataPublicationUsers\n      tags:\n      - DataPublicationUsers\n  /datagateway-api/datapublicationusers/{id_}:\n    delete:\n      description: Updates DataPublicationUser with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DataPublicationUsers by id\n      tags:\n      - DataPublicationUsers\n    get:\n      description: Retrieves a list of DataPublicationUser objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n          description: Success - the matching DataPublicationUser\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DataPublicationUser matching the given ID\n      tags:\n      - DataPublicationUsers\n    patch:\n      description: Updates DataPublicationUser with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DataPublicationUsers by id\n      tags:\n      - DataPublicationUsers\n  /datagateway-api/datapublicationusers/count:\n    get:\n      description: Return the count of the DataPublicationUser objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DataPublicationUser objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DataPublicationUsers\n      tags:\n      - DataPublicationUsers\n  /datagateway-api/datapublicationusers/findone:\n    get:\n      description: Retrieves the first DataPublicationUser objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAPUBLICATIONUSER'\n          description: Success - a DataPublicationUser object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DataPublicationUser\n      tags:\n      - DataPublicationUsers\n  /datagateway-api/datafileformats:\n    get:\n      description: Retrieves a list of DatafileFormat objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEFORMAT'\n                type: array\n          description: Success - returns DatafileFormat that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatafileFormats\n      tags:\n      - DatafileFormats\n    patch:\n      description: Updates DatafileFormat object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILEFORMAT'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEFORMAT'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatafileFormats\n      tags:\n      - DatafileFormats\n    post:\n      description: Creates new DatafileFormat object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILEFORMAT'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEFORMAT'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatafileFormats\n      tags:\n      - DatafileFormats\n  /datagateway-api/datafileformats/{id_}:\n    delete:\n      description: Updates DatafileFormat with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatafileFormats by id\n      tags:\n      - DatafileFormats\n    get:\n      description: Retrieves a list of DatafileFormat objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEFORMAT'\n          description: Success - the matching DatafileFormat\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatafileFormat matching the given ID\n      tags:\n      - DatafileFormats\n    patch:\n      description: Updates DatafileFormat with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAFILEFORMAT'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEFORMAT'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatafileFormats by id\n      tags:\n      - DatafileFormats\n  /datagateway-api/datafileformats/count:\n    get:\n      description: Return the count of the DatafileFormat objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatafileFormat objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatafileFormats\n      tags:\n      - DatafileFormats\n  /datagateway-api/datafileformats/findone:\n    get:\n      description: Retrieves the first DatafileFormat objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEFORMAT'\n          description: Success - a DatafileFormat object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatafileFormat\n      tags:\n      - DatafileFormats\n  /datagateway-api/datafileparameters:\n    get:\n      description: Retrieves a list of DatafileParameter objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEPARAMETER'\n                type: array\n          description: Success - returns DatafileParameter that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatafileParameters\n      tags:\n      - DatafileParameters\n    patch:\n      description: Updates DatafileParameter object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILEPARAMETER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEPARAMETER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatafileParameters\n      tags:\n      - DatafileParameters\n    post:\n      description: Creates new DatafileParameter object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILEPARAMETER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILEPARAMETER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatafileParameters\n      tags:\n      - DatafileParameters\n  /datagateway-api/datafileparameters/{id_}:\n    delete:\n      description: Updates DatafileParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatafileParameters by id\n      tags:\n      - DatafileParameters\n    get:\n      description: Retrieves a list of DatafileParameter objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEPARAMETER'\n          description: Success - the matching DatafileParameter\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatafileParameter matching the given ID\n      tags:\n      - DatafileParameters\n    patch:\n      description: Updates DatafileParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAFILEPARAMETER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEPARAMETER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatafileParameters by id\n      tags:\n      - DatafileParameters\n  /datagateway-api/datafileparameters/count:\n    get:\n      description: Return the count of the DatafileParameter objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatafileParameter objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatafileParameters\n      tags:\n      - DatafileParameters\n  /datagateway-api/datafileparameters/findone:\n    get:\n      description: Retrieves the first DatafileParameter objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILEPARAMETER'\n          description: Success - a DatafileParameter object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatafileParameter\n      tags:\n      - DatafileParameters\n  /datagateway-api/datafiles:\n    get:\n      description: Retrieves a list of Datafile objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILE'\n                type: array\n          description: Success - returns Datafile that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Datafiles\n      tags:\n      - Datafiles\n    patch:\n      description: Updates Datafile object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Datafiles\n      tags:\n      - Datafiles\n    post:\n      description: Creates new Datafile object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATAFILE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATAFILE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Datafiles\n      tags:\n      - Datafiles\n  /datagateway-api/datafiles/{id_}:\n    delete:\n      description: Updates Datafile with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Datafiles by id\n      tags:\n      - Datafiles\n    get:\n      description: Retrieves a list of Datafile objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILE'\n          description: Success - the matching Datafile\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Datafile matching the given ID\n      tags:\n      - Datafiles\n    patch:\n      description: Updates Datafile with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATAFILE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Datafiles by id\n      tags:\n      - Datafiles\n  /datagateway-api/datafiles/count:\n    get:\n      description: Return the count of the Datafile objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Datafile objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Datafiles\n      tags:\n      - Datafiles\n  /datagateway-api/datafiles/findone:\n    get:\n      description: Retrieves the first Datafile objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATAFILE'\n          description: Success - a Datafile object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Datafile\n      tags:\n      - Datafiles\n  /datagateway-api/datasetparameters:\n    get:\n      description: Retrieves a list of DatasetParameter objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETPARAMETER'\n                type: array\n          description: Success - returns DatasetParameter that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatasetParameters\n      tags:\n      - DatasetParameters\n    patch:\n      description: Updates DatasetParameter object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETPARAMETER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETPARAMETER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetParameters\n      tags:\n      - DatasetParameters\n    post:\n      description: Creates new DatasetParameter object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETPARAMETER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETPARAMETER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatasetParameters\n      tags:\n      - DatasetParameters\n  /datagateway-api/datasetparameters/{id_}:\n    delete:\n      description: Updates DatasetParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatasetParameters by id\n      tags:\n      - DatasetParameters\n    get:\n      description: Retrieves a list of DatasetParameter objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETPARAMETER'\n          description: Success - the matching DatasetParameter\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatasetParameter matching the given ID\n      tags:\n      - DatasetParameters\n    patch:\n      description: Updates DatasetParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATASETPARAMETER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETPARAMETER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetParameters by id\n      tags:\n      - DatasetParameters\n  /datagateway-api/datasetparameters/count:\n    get:\n      description: Return the count of the DatasetParameter objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatasetParameter objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatasetParameters\n      tags:\n      - DatasetParameters\n  /datagateway-api/datasetparameters/findone:\n    get:\n      description: Retrieves the first DatasetParameter objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETPARAMETER'\n          description: Success - a DatasetParameter object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatasetParameter\n      tags:\n      - DatasetParameters\n  /datagateway-api/datasetinstruments:\n    get:\n      description: Retrieves a list of DatasetInstrument objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETINSTRUMENT'\n                type: array\n          description: Success - returns DatasetInstrument that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatasetInstruments\n      tags:\n      - DatasetInstruments\n    patch:\n      description: Updates DatasetInstrument object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETINSTRUMENT'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETINSTRUMENT'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetInstruments\n      tags:\n      - DatasetInstruments\n    post:\n      description: Creates new DatasetInstrument object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETINSTRUMENT'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETINSTRUMENT'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatasetInstruments\n      tags:\n      - DatasetInstruments\n  /datagateway-api/datasetinstruments/{id_}:\n    delete:\n      description: Updates DatasetInstrument with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatasetInstruments by id\n      tags:\n      - DatasetInstruments\n    get:\n      description: Retrieves a list of DatasetInstrument objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETINSTRUMENT'\n          description: Success - the matching DatasetInstrument\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatasetInstrument matching the given ID\n      tags:\n      - DatasetInstruments\n    patch:\n      description: Updates DatasetInstrument with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATASETINSTRUMENT'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETINSTRUMENT'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetInstruments by id\n      tags:\n      - DatasetInstruments\n  /datagateway-api/datasetinstruments/count:\n    get:\n      description: Return the count of the DatasetInstrument objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatasetInstrument objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatasetInstruments\n      tags:\n      - DatasetInstruments\n  /datagateway-api/datasetinstruments/findone:\n    get:\n      description: Retrieves the first DatasetInstrument objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETINSTRUMENT'\n          description: Success - a DatasetInstrument object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatasetInstrument\n      tags:\n      - DatasetInstruments\n  /datagateway-api/datasettechniques:\n    get:\n      description: Retrieves a list of DatasetTechnique objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTECHNIQUE'\n                type: array\n          description: Success - returns DatasetTechnique that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatasetTechniques\n      tags:\n      - DatasetTechniques\n    patch:\n      description: Updates DatasetTechnique object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETTECHNIQUE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTECHNIQUE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetTechniques\n      tags:\n      - DatasetTechniques\n    post:\n      description: Creates new DatasetTechnique object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETTECHNIQUE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTECHNIQUE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatasetTechniques\n      tags:\n      - DatasetTechniques\n  /datagateway-api/datasettechniques/{id_}:\n    delete:\n      description: Updates DatasetTechnique with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatasetTechniques by id\n      tags:\n      - DatasetTechniques\n    get:\n      description: Retrieves a list of DatasetTechnique objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTECHNIQUE'\n          description: Success - the matching DatasetTechnique\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatasetTechnique matching the given ID\n      tags:\n      - DatasetTechniques\n    patch:\n      description: Updates DatasetTechnique with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATASETTECHNIQUE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTECHNIQUE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetTechniques by id\n      tags:\n      - DatasetTechniques\n  /datagateway-api/datasettechniques/count:\n    get:\n      description: Return the count of the DatasetTechnique objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatasetTechnique objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatasetTechniques\n      tags:\n      - DatasetTechniques\n  /datagateway-api/datasettechniques/findone:\n    get:\n      description: Retrieves the first DatasetTechnique objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTECHNIQUE'\n          description: Success - a DatasetTechnique object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatasetTechnique\n      tags:\n      - DatasetTechniques\n  /datagateway-api/datasettypes:\n    get:\n      description: Retrieves a list of DatasetType objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTYPE'\n                type: array\n          description: Success - returns DatasetType that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get DatasetTypes\n      tags:\n      - DatasetTypes\n    patch:\n      description: Updates DatasetType object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETTYPE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTYPE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetTypes\n      tags:\n      - DatasetTypes\n    post:\n      description: Creates new DatasetType object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASETTYPE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASETTYPE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new DatasetTypes\n      tags:\n      - DatasetTypes\n  /datagateway-api/datasettypes/{id_}:\n    delete:\n      description: Updates DatasetType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete DatasetTypes by id\n      tags:\n      - DatasetTypes\n    get:\n      description: Retrieves a list of DatasetType objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTYPE'\n          description: Success - the matching DatasetType\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the DatasetType matching the given ID\n      tags:\n      - DatasetTypes\n    patch:\n      description: Updates DatasetType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATASETTYPE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTYPE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update DatasetTypes by id\n      tags:\n      - DatasetTypes\n  /datagateway-api/datasettypes/count:\n    get:\n      description: Return the count of the DatasetType objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the DatasetType objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count DatasetTypes\n      tags:\n      - DatasetTypes\n  /datagateway-api/datasettypes/findone:\n    get:\n      description: Retrieves the first DatasetType objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASETTYPE'\n          description: Success - a DatasetType object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single DatasetType\n      tags:\n      - DatasetTypes\n  /datagateway-api/datasets:\n    get:\n      description: Retrieves a list of Dataset objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASET'\n                type: array\n          description: Success - returns Dataset that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Datasets\n      tags:\n      - Datasets\n    patch:\n      description: Updates Dataset object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASET'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASET'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Datasets\n      tags:\n      - Datasets\n    post:\n      description: Creates new Dataset object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/DATASET'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DATASET'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Datasets\n      tags:\n      - Datasets\n  /datagateway-api/datasets/{id_}:\n    delete:\n      description: Updates Dataset with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Datasets by id\n      tags:\n      - Datasets\n    get:\n      description: Retrieves a list of Dataset objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASET'\n          description: Success - the matching Dataset\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Dataset matching the given ID\n      tags:\n      - Datasets\n    patch:\n      description: Updates Dataset with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DATASET'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASET'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Datasets by id\n      tags:\n      - Datasets\n  /datagateway-api/datasets/count:\n    get:\n      description: Return the count of the Dataset objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Dataset objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Datasets\n      tags:\n      - Datasets\n  /datagateway-api/datasets/findone:\n    get:\n      description: Retrieves the first Dataset objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DATASET'\n          description: Success - a Dataset object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Dataset\n      tags:\n      - Datasets\n  /datagateway-api/facilities:\n    get:\n      description: Retrieves a list of Facility objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITY'\n                type: array\n          description: Success - returns Facility that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Facilities\n      tags:\n      - Facilities\n    patch:\n      description: Updates Facility object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FACILITY'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITY'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Facilities\n      tags:\n      - Facilities\n    post:\n      description: Creates new Facility object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FACILITY'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITY'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Facilities\n      tags:\n      - Facilities\n  /datagateway-api/facilities/{id_}:\n    delete:\n      description: Updates Facility with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Facilities by id\n      tags:\n      - Facilities\n    get:\n      description: Retrieves a list of Facility objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITY'\n          description: Success - the matching Facility\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Facility matching the given ID\n      tags:\n      - Facilities\n    patch:\n      description: Updates Facility with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FACILITY'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITY'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Facilities by id\n      tags:\n      - Facilities\n  /datagateway-api/facilities/count:\n    get:\n      description: Return the count of the Facility objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Facility objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Facilities\n      tags:\n      - Facilities\n  /datagateway-api/facilities/findone:\n    get:\n      description: Retrieves the first Facility objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITY'\n          description: Success - a Facility object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Facility\n      tags:\n      - Facilities\n  /datagateway-api/facilitycycles:\n    get:\n      description: Retrieves a list of FacilityCycle objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITYCYCLE'\n                type: array\n          description: Success - returns FacilityCycle that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get FacilityCycles\n      tags:\n      - FacilityCycles\n    patch:\n      description: Updates FacilityCycle object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FACILITYCYCLE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITYCYCLE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update FacilityCycles\n      tags:\n      - FacilityCycles\n    post:\n      description: Creates new FacilityCycle object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FACILITYCYCLE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITYCYCLE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new FacilityCycles\n      tags:\n      - FacilityCycles\n  /datagateway-api/facilitycycles/{id_}:\n    delete:\n      description: Updates FacilityCycle with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete FacilityCycles by id\n      tags:\n      - FacilityCycles\n    get:\n      description: Retrieves a list of FacilityCycle objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITYCYCLE'\n          description: Success - the matching FacilityCycle\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the FacilityCycle matching the given ID\n      tags:\n      - FacilityCycles\n    patch:\n      description: Updates FacilityCycle with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FACILITYCYCLE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITYCYCLE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update FacilityCycles by id\n      tags:\n      - FacilityCycles\n  /datagateway-api/facilitycycles/count:\n    get:\n      description: Return the count of the FacilityCycle objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the FacilityCycle objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count FacilityCycles\n      tags:\n      - FacilityCycles\n  /datagateway-api/facilitycycles/findone:\n    get:\n      description: Retrieves the first FacilityCycle objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FACILITYCYCLE'\n          description: Success - a FacilityCycle object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single FacilityCycle\n      tags:\n      - FacilityCycles\n  /datagateway-api/fundingreferences:\n    get:\n      description: Retrieves a list of FundingReference objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FUNDINGREFERENCE'\n                type: array\n          description: Success - returns FundingReference that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get FundingReferences\n      tags:\n      - FundingReferences\n    patch:\n      description: Updates FundingReference object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FUNDINGREFERENCE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FUNDINGREFERENCE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update FundingReferences\n      tags:\n      - FundingReferences\n    post:\n      description: Creates new FundingReference object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/FUNDINGREFERENCE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FUNDINGREFERENCE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new FundingReferences\n      tags:\n      - FundingReferences\n  /datagateway-api/fundingreferences/{id_}:\n    delete:\n      description: Updates FundingReference with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete FundingReferences by id\n      tags:\n      - FundingReferences\n    get:\n      description: Retrieves a list of FundingReference objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FUNDINGREFERENCE'\n          description: Success - the matching FundingReference\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the FundingReference matching the given ID\n      tags:\n      - FundingReferences\n    patch:\n      description: Updates FundingReference with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FUNDINGREFERENCE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FUNDINGREFERENCE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update FundingReferences by id\n      tags:\n      - FundingReferences\n  /datagateway-api/fundingreferences/count:\n    get:\n      description: Return the count of the FundingReference objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the FundingReference objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count FundingReferences\n      tags:\n      - FundingReferences\n  /datagateway-api/fundingreferences/findone:\n    get:\n      description: Retrieves the first FundingReference objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FUNDINGREFERENCE'\n          description: Success - a FundingReference object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single FundingReference\n      tags:\n      - FundingReferences\n  /datagateway-api/groupings:\n    get:\n      description: Retrieves a list of Grouping objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GROUPING'\n                type: array\n          description: Success - returns Grouping that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Groupings\n      tags:\n      - Groupings\n    patch:\n      description: Updates Grouping object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/GROUPING'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GROUPING'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Groupings\n      tags:\n      - Groupings\n    post:\n      description: Creates new Grouping object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/GROUPING'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GROUPING'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Groupings\n      tags:\n      - Groupings\n  /datagateway-api/groupings/{id_}:\n    delete:\n      description: Updates Grouping with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Groupings by id\n      tags:\n      - Groupings\n    get:\n      description: Retrieves a list of Grouping objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GROUPING'\n          description: Success - the matching Grouping\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Grouping matching the given ID\n      tags:\n      - Groupings\n    patch:\n      description: Updates Grouping with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GROUPING'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GROUPING'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Groupings by id\n      tags:\n      - Groupings\n  /datagateway-api/groupings/count:\n    get:\n      description: Return the count of the Grouping objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Grouping objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Groupings\n      tags:\n      - Groupings\n  /datagateway-api/groupings/findone:\n    get:\n      description: Retrieves the first Grouping objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GROUPING'\n          description: Success - a Grouping object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Grouping\n      tags:\n      - Groupings\n  /datagateway-api/instrumentscientists:\n    get:\n      description: Retrieves a list of InstrumentScientist objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n                type: array\n          description: Success - returns InstrumentScientist that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InstrumentScientists\n      tags:\n      - InstrumentScientists\n    patch:\n      description: Updates InstrumentScientist object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InstrumentScientists\n      tags:\n      - InstrumentScientists\n    post:\n      description: Creates new InstrumentScientist object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InstrumentScientists\n      tags:\n      - InstrumentScientists\n  /datagateway-api/instrumentscientists/{id_}:\n    delete:\n      description: Updates InstrumentScientist with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InstrumentScientists by id\n      tags:\n      - InstrumentScientists\n    get:\n      description: Retrieves a list of InstrumentScientist objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n          description: Success - the matching InstrumentScientist\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InstrumentScientist matching the given ID\n      tags:\n      - InstrumentScientists\n    patch:\n      description: Updates InstrumentScientist with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InstrumentScientists by id\n      tags:\n      - InstrumentScientists\n  /datagateway-api/instrumentscientists/count:\n    get:\n      description: Return the count of the InstrumentScientist objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InstrumentScientist objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InstrumentScientists\n      tags:\n      - InstrumentScientists\n  /datagateway-api/instrumentscientists/findone:\n    get:\n      description: Retrieves the first InstrumentScientist objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENTSCIENTIST'\n          description: Success - a InstrumentScientist object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InstrumentScientist\n      tags:\n      - InstrumentScientists\n  /datagateway-api/instruments:\n    get:\n      description: Retrieves a list of Instrument objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENT'\n                type: array\n          description: Success - returns Instrument that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Instruments\n      tags:\n      - Instruments\n    patch:\n      description: Updates Instrument object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INSTRUMENT'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENT'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Instruments\n      tags:\n      - Instruments\n    post:\n      description: Creates new Instrument object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INSTRUMENT'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INSTRUMENT'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Instruments\n      tags:\n      - Instruments\n  /datagateway-api/instruments/{id_}:\n    delete:\n      description: Updates Instrument with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Instruments by id\n      tags:\n      - Instruments\n    get:\n      description: Retrieves a list of Instrument objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENT'\n          description: Success - the matching Instrument\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Instrument matching the given ID\n      tags:\n      - Instruments\n    patch:\n      description: Updates Instrument with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INSTRUMENT'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENT'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Instruments by id\n      tags:\n      - Instruments\n  /datagateway-api/instruments/count:\n    get:\n      description: Return the count of the Instrument objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Instrument objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Instruments\n      tags:\n      - Instruments\n  /datagateway-api/instruments/findone:\n    get:\n      description: Retrieves the first Instrument objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INSTRUMENT'\n          description: Success - a Instrument object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Instrument\n      tags:\n      - Instruments\n  /datagateway-api/investigationfacilitycycles:\n    get:\n      description: Retrieves a list of InvestigationFacilityCycle objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n                type: array\n          description: Success - returns InvestigationFacilityCycle that satisfy the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationFacilityCycles\n      tags:\n      - InvestigationFacilityCycles\n    patch:\n      description: Updates InvestigationFacilityCycle object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationFacilityCycles\n      tags:\n      - InvestigationFacilityCycles\n    post:\n      description: Creates new InvestigationFacilityCycle object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationFacilityCycles\n      tags:\n      - InvestigationFacilityCycles\n  /datagateway-api/investigationfacilitycycles/{id_}:\n    delete:\n      description: Updates InvestigationFacilityCycle with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationFacilityCycles by id\n      tags:\n      - InvestigationFacilityCycles\n    get:\n      description: Retrieves a list of InvestigationFacilityCycle objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n          description: Success - the matching InvestigationFacilityCycle\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationFacilityCycle matching the given ID\n      tags:\n      - InvestigationFacilityCycles\n    patch:\n      description: Updates InvestigationFacilityCycle with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationFacilityCycles by id\n      tags:\n      - InvestigationFacilityCycles\n  /datagateway-api/investigationfacilitycycles/count:\n    get:\n      description: Return the count of the InvestigationFacilityCycle objects that\n        would be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationFacilityCycle objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationFacilityCycles\n      tags:\n      - InvestigationFacilityCycles\n  /datagateway-api/investigationfacilitycycles/findone:\n    get:\n      description: Retrieves the first InvestigationFacilityCycle objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFACILITYCYCLE'\n          description: Success - a InvestigationFacilityCycle object that satisfies\n            the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationFacilityCycle\n      tags:\n      - InvestigationFacilityCycles\n  /datagateway-api/investigationfundings:\n    get:\n      description: Retrieves a list of InvestigationFunding objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n                type: array\n          description: Success - returns InvestigationFunding that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationFundings\n      tags:\n      - InvestigationFundings\n    patch:\n      description: Updates InvestigationFunding object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationFundings\n      tags:\n      - InvestigationFundings\n    post:\n      description: Creates new InvestigationFunding object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationFundings\n      tags:\n      - InvestigationFundings\n  /datagateway-api/investigationfundings/{id_}:\n    delete:\n      description: Updates InvestigationFunding with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationFundings by id\n      tags:\n      - InvestigationFundings\n    get:\n      description: Retrieves a list of InvestigationFunding objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n          description: Success - the matching InvestigationFunding\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationFunding matching the given ID\n      tags:\n      - InvestigationFundings\n    patch:\n      description: Updates InvestigationFunding with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationFundings by id\n      tags:\n      - InvestigationFundings\n  /datagateway-api/investigationfundings/count:\n    get:\n      description: Return the count of the InvestigationFunding objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationFunding objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationFundings\n      tags:\n      - InvestigationFundings\n  /datagateway-api/investigationfundings/findone:\n    get:\n      description: Retrieves the first InvestigationFunding objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONFUNDING'\n          description: Success - a InvestigationFunding object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationFunding\n      tags:\n      - InvestigationFundings\n  /datagateway-api/investigationgroups:\n    get:\n      description: Retrieves a list of InvestigationGroup objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONGROUP'\n                type: array\n          description: Success - returns InvestigationGroup that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationGroups\n      tags:\n      - InvestigationGroups\n    patch:\n      description: Updates InvestigationGroup object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONGROUP'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONGROUP'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationGroups\n      tags:\n      - InvestigationGroups\n    post:\n      description: Creates new InvestigationGroup object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONGROUP'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONGROUP'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationGroups\n      tags:\n      - InvestigationGroups\n  /datagateway-api/investigationgroups/{id_}:\n    delete:\n      description: Updates InvestigationGroup with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationGroups by id\n      tags:\n      - InvestigationGroups\n    get:\n      description: Retrieves a list of InvestigationGroup objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONGROUP'\n          description: Success - the matching InvestigationGroup\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationGroup matching the given ID\n      tags:\n      - InvestigationGroups\n    patch:\n      description: Updates InvestigationGroup with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONGROUP'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONGROUP'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationGroups by id\n      tags:\n      - InvestigationGroups\n  /datagateway-api/investigationgroups/count:\n    get:\n      description: Return the count of the InvestigationGroup objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationGroup objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationGroups\n      tags:\n      - InvestigationGroups\n  /datagateway-api/investigationgroups/findone:\n    get:\n      description: Retrieves the first InvestigationGroup objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONGROUP'\n          description: Success - a InvestigationGroup object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationGroup\n      tags:\n      - InvestigationGroups\n  /datagateway-api/investigationinstruments:\n    get:\n      description: Retrieves a list of InvestigationInstrument objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n                type: array\n          description: Success - returns InvestigationInstrument that satisfy the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationInstruments\n      tags:\n      - InvestigationInstruments\n    patch:\n      description: Updates InvestigationInstrument object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationInstruments\n      tags:\n      - InvestigationInstruments\n    post:\n      description: Creates new InvestigationInstrument object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationInstruments\n      tags:\n      - InvestigationInstruments\n  /datagateway-api/investigationinstruments/{id_}:\n    delete:\n      description: Updates InvestigationInstrument with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationInstruments by id\n      tags:\n      - InvestigationInstruments\n    get:\n      description: Retrieves a list of InvestigationInstrument objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n          description: Success - the matching InvestigationInstrument\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationInstrument matching the given ID\n      tags:\n      - InvestigationInstruments\n    patch:\n      description: Updates InvestigationInstrument with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationInstruments by id\n      tags:\n      - InvestigationInstruments\n  /datagateway-api/investigationinstruments/count:\n    get:\n      description: Return the count of the InvestigationInstrument objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationInstrument objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationInstruments\n      tags:\n      - InvestigationInstruments\n  /datagateway-api/investigationinstruments/findone:\n    get:\n      description: Retrieves the first InvestigationInstrument objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONINSTRUMENT'\n          description: Success - a InvestigationInstrument object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationInstrument\n      tags:\n      - InvestigationInstruments\n  /datagateway-api/investigationparameters:\n    get:\n      description: Retrieves a list of InvestigationParameter objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n                type: array\n          description: Success - returns InvestigationParameter that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationParameters\n      tags:\n      - InvestigationParameters\n    patch:\n      description: Updates InvestigationParameter object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationParameters\n      tags:\n      - InvestigationParameters\n    post:\n      description: Creates new InvestigationParameter object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationParameters\n      tags:\n      - InvestigationParameters\n  /datagateway-api/investigationparameters/{id_}:\n    delete:\n      description: Updates InvestigationParameter with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationParameters by id\n      tags:\n      - InvestigationParameters\n    get:\n      description: Retrieves a list of InvestigationParameter objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n          description: Success - the matching InvestigationParameter\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationParameter matching the given ID\n      tags:\n      - InvestigationParameters\n    patch:\n      description: Updates InvestigationParameter with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationParameters by id\n      tags:\n      - InvestigationParameters\n  /datagateway-api/investigationparameters/count:\n    get:\n      description: Return the count of the InvestigationParameter objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationParameter objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationParameters\n      tags:\n      - InvestigationParameters\n  /datagateway-api/investigationparameters/findone:\n    get:\n      description: Retrieves the first InvestigationParameter objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONPARAMETER'\n          description: Success - a InvestigationParameter object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationParameter\n      tags:\n      - InvestigationParameters\n  /datagateway-api/investigationtypes:\n    get:\n      description: Retrieves a list of InvestigationType objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONTYPE'\n                type: array\n          description: Success - returns InvestigationType that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationTypes\n      tags:\n      - InvestigationTypes\n    patch:\n      description: Updates InvestigationType object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONTYPE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONTYPE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationTypes\n      tags:\n      - InvestigationTypes\n    post:\n      description: Creates new InvestigationType object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONTYPE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONTYPE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationTypes\n      tags:\n      - InvestigationTypes\n  /datagateway-api/investigationtypes/{id_}:\n    delete:\n      description: Updates InvestigationType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationTypes by id\n      tags:\n      - InvestigationTypes\n    get:\n      description: Retrieves a list of InvestigationType objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONTYPE'\n          description: Success - the matching InvestigationType\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationType matching the given ID\n      tags:\n      - InvestigationTypes\n    patch:\n      description: Updates InvestigationType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONTYPE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONTYPE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationTypes by id\n      tags:\n      - InvestigationTypes\n  /datagateway-api/investigationtypes/count:\n    get:\n      description: Return the count of the InvestigationType objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationType objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationTypes\n      tags:\n      - InvestigationTypes\n  /datagateway-api/investigationtypes/findone:\n    get:\n      description: Retrieves the first InvestigationType objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONTYPE'\n          description: Success - a InvestigationType object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationType\n      tags:\n      - InvestigationTypes\n  /datagateway-api/investigationusers:\n    get:\n      description: Retrieves a list of InvestigationUser objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONUSER'\n                type: array\n          description: Success - returns InvestigationUser that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get InvestigationUsers\n      tags:\n      - InvestigationUsers\n    patch:\n      description: Updates InvestigationUser object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONUSER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONUSER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationUsers\n      tags:\n      - InvestigationUsers\n    post:\n      description: Creates new InvestigationUser object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATIONUSER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATIONUSER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new InvestigationUsers\n      tags:\n      - InvestigationUsers\n  /datagateway-api/investigationusers/{id_}:\n    delete:\n      description: Updates InvestigationUser with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete InvestigationUsers by id\n      tags:\n      - InvestigationUsers\n    get:\n      description: Retrieves a list of InvestigationUser objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONUSER'\n          description: Success - the matching InvestigationUser\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the InvestigationUser matching the given ID\n      tags:\n      - InvestigationUsers\n    patch:\n      description: Updates InvestigationUser with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATIONUSER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONUSER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update InvestigationUsers by id\n      tags:\n      - InvestigationUsers\n  /datagateway-api/investigationusers/count:\n    get:\n      description: Return the count of the InvestigationUser objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the InvestigationUser objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count InvestigationUsers\n      tags:\n      - InvestigationUsers\n  /datagateway-api/investigationusers/findone:\n    get:\n      description: Retrieves the first InvestigationUser objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATIONUSER'\n          description: Success - a InvestigationUser object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single InvestigationUser\n      tags:\n      - InvestigationUsers\n  /datagateway-api/investigations:\n    get:\n      description: Retrieves a list of Investigation objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATION'\n                type: array\n          description: Success - returns Investigation that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Investigations\n      tags:\n      - Investigations\n    patch:\n      description: Updates Investigation object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Investigations\n      tags:\n      - Investigations\n    post:\n      description: Creates new Investigation object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/INVESTIGATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Investigations\n      tags:\n      - Investigations\n  /datagateway-api/investigations/{id_}:\n    delete:\n      description: Updates Investigation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Investigations by id\n      tags:\n      - Investigations\n    get:\n      description: Retrieves a list of Investigation objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATION'\n          description: Success - the matching Investigation\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Investigation matching the given ID\n      tags:\n      - Investigations\n    patch:\n      description: Updates Investigation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/INVESTIGATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Investigations by id\n      tags:\n      - Investigations\n  /datagateway-api/investigations/count:\n    get:\n      description: Return the count of the Investigation objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Investigation objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Investigations\n      tags:\n      - Investigations\n  /datagateway-api/investigations/findone:\n    get:\n      description: Retrieves the first Investigation objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/INVESTIGATION'\n          description: Success - a Investigation object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Investigation\n      tags:\n      - Investigations\n  /datagateway-api/jobs:\n    get:\n      description: Retrieves a list of Job objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/JOB'\n                type: array\n          description: Success - returns Job that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Jobs\n      tags:\n      - Jobs\n    patch:\n      description: Updates Job object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/JOB'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/JOB'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Jobs\n      tags:\n      - Jobs\n    post:\n      description: Creates new Job object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/JOB'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/JOB'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Jobs\n      tags:\n      - Jobs\n  /datagateway-api/jobs/{id_}:\n    delete:\n      description: Updates Job with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Jobs by id\n      tags:\n      - Jobs\n    get:\n      description: Retrieves a list of Job objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JOB'\n          description: Success - the matching Job\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Job matching the given ID\n      tags:\n      - Jobs\n    patch:\n      description: Updates Job with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JOB'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JOB'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Jobs by id\n      tags:\n      - Jobs\n  /datagateway-api/jobs/count:\n    get:\n      description: Return the count of the Job objects that would be retrieved given\n        the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Job objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Jobs\n      tags:\n      - Jobs\n  /datagateway-api/jobs/findone:\n    get:\n      description: Retrieves the first Job objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JOB'\n          description: Success - a Job object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Job\n      tags:\n      - Jobs\n  /datagateway-api/keywords:\n    get:\n      description: Retrieves a list of Keyword objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KEYWORD'\n                type: array\n          description: Success - returns Keyword that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Keywords\n      tags:\n      - Keywords\n    patch:\n      description: Updates Keyword object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/KEYWORD'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KEYWORD'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Keywords\n      tags:\n      - Keywords\n    post:\n      description: Creates new Keyword object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/KEYWORD'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/KEYWORD'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Keywords\n      tags:\n      - Keywords\n  /datagateway-api/keywords/{id_}:\n    delete:\n      description: Updates Keyword with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Keywords by id\n      tags:\n      - Keywords\n    get:\n      description: Retrieves a list of Keyword objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KEYWORD'\n          description: Success - the matching Keyword\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Keyword matching the given ID\n      tags:\n      - Keywords\n    patch:\n      description: Updates Keyword with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KEYWORD'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KEYWORD'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Keywords by id\n      tags:\n      - Keywords\n  /datagateway-api/keywords/count:\n    get:\n      description: Return the count of the Keyword objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Keyword objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Keywords\n      tags:\n      - Keywords\n  /datagateway-api/keywords/findone:\n    get:\n      description: Retrieves the first Keyword objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KEYWORD'\n          description: Success - a Keyword object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Keyword\n      tags:\n      - Keywords\n  /datagateway-api/parametertypes:\n    get:\n      description: Retrieves a list of ParameterType objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PARAMETERTYPE'\n                type: array\n          description: Success - returns ParameterType that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get ParameterTypes\n      tags:\n      - ParameterTypes\n    patch:\n      description: Updates ParameterType object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PARAMETERTYPE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PARAMETERTYPE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update ParameterTypes\n      tags:\n      - ParameterTypes\n    post:\n      description: Creates new ParameterType object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PARAMETERTYPE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PARAMETERTYPE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new ParameterTypes\n      tags:\n      - ParameterTypes\n  /datagateway-api/parametertypes/{id_}:\n    delete:\n      description: Updates ParameterType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete ParameterTypes by id\n      tags:\n      - ParameterTypes\n    get:\n      description: Retrieves a list of ParameterType objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PARAMETERTYPE'\n          description: Success - the matching ParameterType\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the ParameterType matching the given ID\n      tags:\n      - ParameterTypes\n    patch:\n      description: Updates ParameterType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PARAMETERTYPE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PARAMETERTYPE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update ParameterTypes by id\n      tags:\n      - ParameterTypes\n  /datagateway-api/parametertypes/count:\n    get:\n      description: Return the count of the ParameterType objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the ParameterType objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count ParameterTypes\n      tags:\n      - ParameterTypes\n  /datagateway-api/parametertypes/findone:\n    get:\n      description: Retrieves the first ParameterType objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PARAMETERTYPE'\n          description: Success - a ParameterType object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single ParameterType\n      tags:\n      - ParameterTypes\n  /datagateway-api/permissiblestringvalues:\n    get:\n      description: Retrieves a list of PermissibleStringValue objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n                type: array\n          description: Success - returns PermissibleStringValue that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get PermissibleStringValues\n      tags:\n      - PermissibleStringValues\n    patch:\n      description: Updates PermissibleStringValue object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update PermissibleStringValues\n      tags:\n      - PermissibleStringValues\n    post:\n      description: Creates new PermissibleStringValue object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new PermissibleStringValues\n      tags:\n      - PermissibleStringValues\n  /datagateway-api/permissiblestringvalues/{id_}:\n    delete:\n      description: Updates PermissibleStringValue with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete PermissibleStringValues by id\n      tags:\n      - PermissibleStringValues\n    get:\n      description: Retrieves a list of PermissibleStringValue objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n          description: Success - the matching PermissibleStringValue\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the PermissibleStringValue matching the given ID\n      tags:\n      - PermissibleStringValues\n    patch:\n      description: Updates PermissibleStringValue with the specified ID with details\n        provided in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update PermissibleStringValues by id\n      tags:\n      - PermissibleStringValues\n  /datagateway-api/permissiblestringvalues/count:\n    get:\n      description: Return the count of the PermissibleStringValue objects that would\n        be retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the PermissibleStringValue objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count PermissibleStringValues\n      tags:\n      - PermissibleStringValues\n  /datagateway-api/permissiblestringvalues/findone:\n    get:\n      description: Retrieves the first PermissibleStringValue objects that satisfies\n        the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PERMISSIBLESTRINGVALUE'\n          description: Success - a PermissibleStringValue object that satisfies the\n            filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single PermissibleStringValue\n      tags:\n      - PermissibleStringValues\n  /datagateway-api/publicsteps:\n    get:\n      description: Retrieves a list of PublicStep objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICSTEP'\n                type: array\n          description: Success - returns PublicStep that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get PublicSteps\n      tags:\n      - PublicSteps\n    patch:\n      description: Updates PublicStep object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PUBLICSTEP'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICSTEP'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update PublicSteps\n      tags:\n      - PublicSteps\n    post:\n      description: Creates new PublicStep object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PUBLICSTEP'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICSTEP'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new PublicSteps\n      tags:\n      - PublicSteps\n  /datagateway-api/publicsteps/{id_}:\n    delete:\n      description: Updates PublicStep with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete PublicSteps by id\n      tags:\n      - PublicSteps\n    get:\n      description: Retrieves a list of PublicStep objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICSTEP'\n          description: Success - the matching PublicStep\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the PublicStep matching the given ID\n      tags:\n      - PublicSteps\n    patch:\n      description: Updates PublicStep with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PUBLICSTEP'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICSTEP'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update PublicSteps by id\n      tags:\n      - PublicSteps\n  /datagateway-api/publicsteps/count:\n    get:\n      description: Return the count of the PublicStep objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the PublicStep objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count PublicSteps\n      tags:\n      - PublicSteps\n  /datagateway-api/publicsteps/findone:\n    get:\n      description: Retrieves the first PublicStep objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICSTEP'\n          description: Success - a PublicStep object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single PublicStep\n      tags:\n      - PublicSteps\n  /datagateway-api/publications:\n    get:\n      description: Retrieves a list of Publication objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICATION'\n                type: array\n          description: Success - returns Publication that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Publications\n      tags:\n      - Publications\n    patch:\n      description: Updates Publication object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PUBLICATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Publications\n      tags:\n      - Publications\n    post:\n      description: Creates new Publication object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/PUBLICATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PUBLICATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Publications\n      tags:\n      - Publications\n  /datagateway-api/publications/{id_}:\n    delete:\n      description: Updates Publication with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Publications by id\n      tags:\n      - Publications\n    get:\n      description: Retrieves a list of Publication objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICATION'\n          description: Success - the matching Publication\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Publication matching the given ID\n      tags:\n      - Publications\n    patch:\n      description: Updates Publication with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PUBLICATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Publications by id\n      tags:\n      - Publications\n  /datagateway-api/publications/count:\n    get:\n      description: Return the count of the Publication objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Publication objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Publications\n      tags:\n      - Publications\n  /datagateway-api/publications/findone:\n    get:\n      description: Retrieves the first Publication objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PUBLICATION'\n          description: Success - a Publication object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Publication\n      tags:\n      - Publications\n  /datagateway-api/relateddatafiles:\n    get:\n      description: Retrieves a list of RelatedDatafile objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDDATAFILE'\n                type: array\n          description: Success - returns RelatedDatafile that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get RelatedDatafiles\n      tags:\n      - RelatedDatafiles\n    patch:\n      description: Updates RelatedDatafile object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RELATEDDATAFILE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDDATAFILE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update RelatedDatafiles\n      tags:\n      - RelatedDatafiles\n    post:\n      description: Creates new RelatedDatafile object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RELATEDDATAFILE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDDATAFILE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new RelatedDatafiles\n      tags:\n      - RelatedDatafiles\n  /datagateway-api/relateddatafiles/{id_}:\n    delete:\n      description: Updates RelatedDatafile with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete RelatedDatafiles by id\n      tags:\n      - RelatedDatafiles\n    get:\n      description: Retrieves a list of RelatedDatafile objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDDATAFILE'\n          description: Success - the matching RelatedDatafile\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the RelatedDatafile matching the given ID\n      tags:\n      - RelatedDatafiles\n    patch:\n      description: Updates RelatedDatafile with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RELATEDDATAFILE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDDATAFILE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update RelatedDatafiles by id\n      tags:\n      - RelatedDatafiles\n  /datagateway-api/relateddatafiles/count:\n    get:\n      description: Return the count of the RelatedDatafile objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the RelatedDatafile objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count RelatedDatafiles\n      tags:\n      - RelatedDatafiles\n  /datagateway-api/relateddatafiles/findone:\n    get:\n      description: Retrieves the first RelatedDatafile objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDDATAFILE'\n          description: Success - a RelatedDatafile object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single RelatedDatafile\n      tags:\n      - RelatedDatafiles\n  /datagateway-api/relateditems:\n    get:\n      description: Retrieves a list of RelatedItem objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDITEM'\n                type: array\n          description: Success - returns RelatedItem that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get RelatedItems\n      tags:\n      - RelatedItems\n    patch:\n      description: Updates RelatedItem object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RELATEDITEM'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDITEM'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update RelatedItems\n      tags:\n      - RelatedItems\n    post:\n      description: Creates new RelatedItem object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RELATEDITEM'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RELATEDITEM'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new RelatedItems\n      tags:\n      - RelatedItems\n  /datagateway-api/relateditems/{id_}:\n    delete:\n      description: Updates RelatedItem with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete RelatedItems by id\n      tags:\n      - RelatedItems\n    get:\n      description: Retrieves a list of RelatedItem objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDITEM'\n          description: Success - the matching RelatedItem\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the RelatedItem matching the given ID\n      tags:\n      - RelatedItems\n    patch:\n      description: Updates RelatedItem with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RELATEDITEM'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDITEM'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update RelatedItems by id\n      tags:\n      - RelatedItems\n  /datagateway-api/relateditems/count:\n    get:\n      description: Return the count of the RelatedItem objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the RelatedItem objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count RelatedItems\n      tags:\n      - RelatedItems\n  /datagateway-api/relateditems/findone:\n    get:\n      description: Retrieves the first RelatedItem objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RELATEDITEM'\n          description: Success - a RelatedItem object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single RelatedItem\n      tags:\n      - RelatedItems\n  /datagateway-api/rules:\n    get:\n      description: Retrieves a list of Rule objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RULE'\n                type: array\n          description: Success - returns Rule that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Rules\n      tags:\n      - Rules\n    patch:\n      description: Updates Rule object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RULE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RULE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Rules\n      tags:\n      - Rules\n    post:\n      description: Creates new Rule object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RULE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RULE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Rules\n      tags:\n      - Rules\n  /datagateway-api/rules/{id_}:\n    delete:\n      description: Updates Rule with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Rules by id\n      tags:\n      - Rules\n    get:\n      description: Retrieves a list of Rule objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RULE'\n          description: Success - the matching Rule\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Rule matching the given ID\n      tags:\n      - Rules\n    patch:\n      description: Updates Rule with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RULE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RULE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Rules by id\n      tags:\n      - Rules\n  /datagateway-api/rules/count:\n    get:\n      description: Return the count of the Rule objects that would be retrieved given\n        the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Rule objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Rules\n      tags:\n      - Rules\n  /datagateway-api/rules/findone:\n    get:\n      description: Retrieves the first Rule objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RULE'\n          description: Success - a Rule object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Rule\n      tags:\n      - Rules\n  /datagateway-api/sampleparameters:\n    get:\n      description: Retrieves a list of SampleParameter objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLEPARAMETER'\n                type: array\n          description: Success - returns SampleParameter that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get SampleParameters\n      tags:\n      - SampleParameters\n    patch:\n      description: Updates SampleParameter object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLEPARAMETER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLEPARAMETER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update SampleParameters\n      tags:\n      - SampleParameters\n    post:\n      description: Creates new SampleParameter object(s) with details provided in\n        the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLEPARAMETER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLEPARAMETER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new SampleParameters\n      tags:\n      - SampleParameters\n  /datagateway-api/sampleparameters/{id_}:\n    delete:\n      description: Updates SampleParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete SampleParameters by id\n      tags:\n      - SampleParameters\n    get:\n      description: Retrieves a list of SampleParameter objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLEPARAMETER'\n          description: Success - the matching SampleParameter\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the SampleParameter matching the given ID\n      tags:\n      - SampleParameters\n    patch:\n      description: Updates SampleParameter with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMPLEPARAMETER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLEPARAMETER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update SampleParameters by id\n      tags:\n      - SampleParameters\n  /datagateway-api/sampleparameters/count:\n    get:\n      description: Return the count of the SampleParameter objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the SampleParameter objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count SampleParameters\n      tags:\n      - SampleParameters\n  /datagateway-api/sampleparameters/findone:\n    get:\n      description: Retrieves the first SampleParameter objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLEPARAMETER'\n          description: Success - a SampleParameter object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single SampleParameter\n      tags:\n      - SampleParameters\n  /datagateway-api/sampletypes:\n    get:\n      description: Retrieves a list of SampleType objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLETYPE'\n                type: array\n          description: Success - returns SampleType that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get SampleTypes\n      tags:\n      - SampleTypes\n    patch:\n      description: Updates SampleType object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLETYPE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLETYPE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update SampleTypes\n      tags:\n      - SampleTypes\n    post:\n      description: Creates new SampleType object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLETYPE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLETYPE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new SampleTypes\n      tags:\n      - SampleTypes\n  /datagateway-api/sampletypes/{id_}:\n    delete:\n      description: Updates SampleType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete SampleTypes by id\n      tags:\n      - SampleTypes\n    get:\n      description: Retrieves a list of SampleType objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLETYPE'\n          description: Success - the matching SampleType\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the SampleType matching the given ID\n      tags:\n      - SampleTypes\n    patch:\n      description: Updates SampleType with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMPLETYPE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLETYPE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update SampleTypes by id\n      tags:\n      - SampleTypes\n  /datagateway-api/sampletypes/count:\n    get:\n      description: Return the count of the SampleType objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the SampleType objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count SampleTypes\n      tags:\n      - SampleTypes\n  /datagateway-api/sampletypes/findone:\n    get:\n      description: Retrieves the first SampleType objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLETYPE'\n          description: Success - a SampleType object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single SampleType\n      tags:\n      - SampleTypes\n  /datagateway-api/samples:\n    get:\n      description: Retrieves a list of Sample objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLE'\n                type: array\n          description: Success - returns Sample that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Samples\n      tags:\n      - Samples\n    patch:\n      description: Updates Sample object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Samples\n      tags:\n      - Samples\n    post:\n      description: Creates new Sample object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SAMPLE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SAMPLE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Samples\n      tags:\n      - Samples\n  /datagateway-api/samples/{id_}:\n    delete:\n      description: Updates Sample with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Samples by id\n      tags:\n      - Samples\n    get:\n      description: Retrieves a list of Sample objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLE'\n          description: Success - the matching Sample\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Sample matching the given ID\n      tags:\n      - Samples\n    patch:\n      description: Updates Sample with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SAMPLE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Samples by id\n      tags:\n      - Samples\n  /datagateway-api/samples/count:\n    get:\n      description: Return the count of the Sample objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Sample objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Samples\n      tags:\n      - Samples\n  /datagateway-api/samples/findone:\n    get:\n      description: Retrieves the first Sample objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SAMPLE'\n          description: Success - a Sample object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Sample\n      tags:\n      - Samples\n  /datagateway-api/shifts:\n    get:\n      description: Retrieves a list of Shift objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SHIFT'\n                type: array\n          description: Success - returns Shift that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Shifts\n      tags:\n      - Shifts\n    patch:\n      description: Updates Shift object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SHIFT'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SHIFT'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Shifts\n      tags:\n      - Shifts\n    post:\n      description: Creates new Shift object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/SHIFT'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SHIFT'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Shifts\n      tags:\n      - Shifts\n  /datagateway-api/shifts/{id_}:\n    delete:\n      description: Updates Shift with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Shifts by id\n      tags:\n      - Shifts\n    get:\n      description: Retrieves a list of Shift objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SHIFT'\n          description: Success - the matching Shift\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Shift matching the given ID\n      tags:\n      - Shifts\n    patch:\n      description: Updates Shift with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SHIFT'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SHIFT'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Shifts by id\n      tags:\n      - Shifts\n  /datagateway-api/shifts/count:\n    get:\n      description: Return the count of the Shift objects that would be retrieved given\n        the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Shift objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Shifts\n      tags:\n      - Shifts\n  /datagateway-api/shifts/findone:\n    get:\n      description: Retrieves the first Shift objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SHIFT'\n          description: Success - a Shift object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Shift\n      tags:\n      - Shifts\n  /datagateway-api/studies:\n    get:\n      description: Retrieves a list of Study objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDY'\n                type: array\n          description: Success - returns Study that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Studies\n      tags:\n      - Studies\n    patch:\n      description: Updates Study object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/STUDY'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDY'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Studies\n      tags:\n      - Studies\n    post:\n      description: Creates new Study object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/STUDY'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDY'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Studies\n      tags:\n      - Studies\n  /datagateway-api/studies/{id_}:\n    delete:\n      description: Updates Study with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Studies by id\n      tags:\n      - Studies\n    get:\n      description: Retrieves a list of Study objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDY'\n          description: Success - the matching Study\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Study matching the given ID\n      tags:\n      - Studies\n    patch:\n      description: Updates Study with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/STUDY'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDY'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Studies by id\n      tags:\n      - Studies\n  /datagateway-api/studies/count:\n    get:\n      description: Return the count of the Study objects that would be retrieved given\n        the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Study objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Studies\n      tags:\n      - Studies\n  /datagateway-api/studies/findone:\n    get:\n      description: Retrieves the first Study objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDY'\n          description: Success - a Study object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Study\n      tags:\n      - Studies\n  /datagateway-api/studyinvestigations:\n    get:\n      description: Retrieves a list of StudyInvestigation objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDYINVESTIGATION'\n                type: array\n          description: Success - returns StudyInvestigation that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get StudyInvestigations\n      tags:\n      - StudyInvestigations\n    patch:\n      description: Updates StudyInvestigation object(s) with details provided in the\n        request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/STUDYINVESTIGATION'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDYINVESTIGATION'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update StudyInvestigations\n      tags:\n      - StudyInvestigations\n    post:\n      description: Creates new StudyInvestigation object(s) with details provided\n        in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/STUDYINVESTIGATION'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/STUDYINVESTIGATION'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new StudyInvestigations\n      tags:\n      - StudyInvestigations\n  /datagateway-api/studyinvestigations/{id_}:\n    delete:\n      description: Updates StudyInvestigation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete StudyInvestigations by id\n      tags:\n      - StudyInvestigations\n    get:\n      description: Retrieves a list of StudyInvestigation objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDYINVESTIGATION'\n          description: Success - the matching StudyInvestigation\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the StudyInvestigation matching the given ID\n      tags:\n      - StudyInvestigations\n    patch:\n      description: Updates StudyInvestigation with the specified ID with details provided\n        in the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/STUDYINVESTIGATION'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDYINVESTIGATION'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update StudyInvestigations by id\n      tags:\n      - StudyInvestigations\n  /datagateway-api/studyinvestigations/count:\n    get:\n      description: Return the count of the StudyInvestigation objects that would be\n        retrieved given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the StudyInvestigation objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count StudyInvestigations\n      tags:\n      - StudyInvestigations\n  /datagateway-api/studyinvestigations/findone:\n    get:\n      description: Retrieves the first StudyInvestigation objects that satisfies the\n        filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/STUDYINVESTIGATION'\n          description: Success - a StudyInvestigation object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single StudyInvestigation\n      tags:\n      - StudyInvestigations\n  /datagateway-api/techniques:\n    get:\n      description: Retrieves a list of Technique objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TECHNIQUE'\n                type: array\n          description: Success - returns Technique that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Techniques\n      tags:\n      - Techniques\n    patch:\n      description: Updates Technique object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TECHNIQUE'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TECHNIQUE'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Techniques\n      tags:\n      - Techniques\n    post:\n      description: Creates new Technique object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TECHNIQUE'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TECHNIQUE'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Techniques\n      tags:\n      - Techniques\n  /datagateway-api/techniques/{id_}:\n    delete:\n      description: Updates Technique with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Techniques by id\n      tags:\n      - Techniques\n    get:\n      description: Retrieves a list of Technique objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TECHNIQUE'\n          description: Success - the matching Technique\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the Technique matching the given ID\n      tags:\n      - Techniques\n    patch:\n      description: Updates Technique with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TECHNIQUE'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TECHNIQUE'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Techniques by id\n      tags:\n      - Techniques\n  /datagateway-api/techniques/count:\n    get:\n      description: Return the count of the Technique objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the Technique objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Techniques\n      tags:\n      - Techniques\n  /datagateway-api/techniques/findone:\n    get:\n      description: Retrieves the first Technique objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TECHNIQUE'\n          description: Success - a Technique object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single Technique\n      tags:\n      - Techniques\n  /datagateway-api/usergroups:\n    get:\n      description: Retrieves a list of UserGroup objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USERGROUP'\n                type: array\n          description: Success - returns UserGroup that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get UserGroups\n      tags:\n      - UserGroups\n    patch:\n      description: Updates UserGroup object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/USERGROUP'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USERGROUP'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update UserGroups\n      tags:\n      - UserGroups\n    post:\n      description: Creates new UserGroup object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/USERGROUP'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USERGROUP'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new UserGroups\n      tags:\n      - UserGroups\n  /datagateway-api/usergroups/{id_}:\n    delete:\n      description: Updates UserGroup with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete UserGroups by id\n      tags:\n      - UserGroups\n    get:\n      description: Retrieves a list of UserGroup objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USERGROUP'\n          description: Success - the matching UserGroup\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the UserGroup matching the given ID\n      tags:\n      - UserGroups\n    patch:\n      description: Updates UserGroup with the specified ID with details provided in\n        the request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/USERGROUP'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USERGROUP'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update UserGroups by id\n      tags:\n      - UserGroups\n  /datagateway-api/usergroups/count:\n    get:\n      description: Return the count of the UserGroup objects that would be retrieved\n        given the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the UserGroup objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count UserGroups\n      tags:\n      - UserGroups\n  /datagateway-api/usergroups/findone:\n    get:\n      description: Retrieves the first UserGroup objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USERGROUP'\n          description: Success - a UserGroup object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single UserGroup\n      tags:\n      - UserGroups\n  /datagateway-api/users:\n    get:\n      description: Retrieves a list of User objects\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USER'\n                type: array\n          description: Success - returns User that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get Users\n      tags:\n      - Users\n    patch:\n      description: Updates User object(s) with details provided in the request body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/USER'\n              type: array\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USER'\n                type: array\n          description: Success - returns the updated object(s)\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Users\n      tags:\n      - Users\n    post:\n      description: Creates new User object(s) with details provided in the request\n        body\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/USER'\n              type: array\n        description: The values to use to create the new object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/USER'\n                type: array\n          description: Success - returns the created object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Create new Users\n      tags:\n      - Users\n  /datagateway-api/users/{id_}:\n    delete:\n      description: Updates User with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to delete\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '204':\n          description: No Content - Object was successfully deleted\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Delete Users by id\n      tags:\n      - Users\n    get:\n      description: Retrieves a list of User objects\n      parameters:\n      - description: The id of the entity to retrieve\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USER'\n          description: Success - the matching User\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Find the User matching the given ID\n      tags:\n      - Users\n    patch:\n      description: Updates User with the specified ID with details provided in the\n        request body\n      parameters:\n      - description: The id of the entity to update\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/USER'\n        description: The values to use to update the object(s) with\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USER'\n          description: Success - returns the updated object\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Update Users by id\n      tags:\n      - Users\n  /datagateway-api/users/count:\n    get:\n      description: Return the count of the User objects that would be retrieved given\n        the filters provided\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the User objects\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count Users\n      tags:\n      - Users\n  /datagateway-api/users/findone:\n    get:\n      description: Retrieves the first User objects that satisfies the filters.\n      parameters:\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/USER'\n          description: Success - a User object that satisfies the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get single User\n      tags:\n      - Users\n  /datagateway-api/sessions:\n    delete:\n      description: Deletes a users sessionID when they logout\n      responses:\n        '200':\n          description: Success - User's session was successfully deleted\n        '400':\n          description: Bad request - something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: Not Found - Unable to find session ID\n      summary: Delete session\n      tags:\n      - Sessions\n    get:\n      description: Gives details of a user's session\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  EXPIREDATETIME:\n                    description: When this session expires\n                    example: '2017-07-21T17:32:28Z'\n                    format: datetime\n                    type: string\n                  ID:\n                    description: The session ID\n                    example: xxxxxx-yyyyyyy-zzzzzz\n                    type: string\n                  USERNAME:\n                    description: Username associated with this session\n                    type: string\n                type: object\n          description: Success - a user's session details\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n      summary: Get session details\n      tags:\n      - Sessions\n    post:\n      description: Generates a sessionID if the user has correct credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                mechanism:\n                  type: string\n                password:\n                  type: string\n                username:\n                  type: string\n              type: object\n        description: User credentials to login with\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                properties:\n                  sessionID:\n                    description: Session ID\n                    example: xxxxxx-yyyyyyy-zzzzzz\n                    type: string\n                type: object\n          description: Success - returns a session ID\n        '400':\n          description: Bad request - User credentials not provided in request body\n        '403':\n          description: Forbidden - User credentials were invalid\n      security: []\n      summary: Login\n      tags:\n      - Sessions\n    put:\n      description: Refreshes a users session\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: Session ID\n                example: xxxxxx-yyyyyyy-zzzzzz\n                type: string\n          description: Success - the user's session ID that has been refreshed\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n      summary: Refresh session\n      tags:\n      - Sessions\n  /datagateway-api/instruments/{id_}/facilitycycles:\n    get:\n      description: Given an Instrument id get facility cycles where the instrument\n        has investigations that occur within that cycle, subject to the given filters\n      parameters:\n      - description: The id of the instrument to retrieve the facility cycles of\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FACILITYCYCLE'\n                type: array\n          description: Success - returns a list of the instrument's facility cycles\n            that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get an Instrument's FacilityCycles\n      tags:\n      - FacilityCycles\n  /datagateway-api/instruments/{id_}/facilitycycles/count:\n    get:\n      description: Return the count of the Facility Cycles that have investigations\n        that occur within that cycle on the specified instrument that would be retrieved\n        given the filters provided\n      parameters:\n      - description: The id of the instrument to count the facility cycles of\n        in: path\n        name: id_\n        required: true\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the instrument's facility cycles that\n            satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count an Instrument's FacilityCycles\n      tags:\n      - FacilityCycles\n  /datagateway-api/instruments/{instrument_id}/facilitycycles/{cycle_id}/investigations:\n    get:\n      description: Given an Instrument id and Facility Cycle id, get the investigations\n        that occur within that cycle on that instrument, subject to the given filters\n      parameters:\n      - description: The id of the instrument to retrieve the investigations of\n        in: path\n        name: instrument_id\n        required: true\n        schema:\n          type: integer\n      - description: The id of the facility cycle to retrieve the investigations\n        in: path\n        name: cycle_id\n        required: true\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/ORDER_FILTER'\n      - $ref: '#/components/parameters/LIMIT_FILTER'\n      - $ref: '#/components/parameters/SKIP_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      - $ref: '#/components/parameters/INCLUDE_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/INVESTIGATION'\n                type: array\n          description: Success - returns a list of the investigations for the given\n            instrument and facility cycle that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Get the investigations for a given Facility Cycle \u0026 Instrument\n      tags:\n      - Investigations\n  /datagateway-api/instruments/{instrument_id}/facilitycycles/{cycle_id}/investigations/count:\n    get:\n      description: Given an Instrument id and Facility Cycle id, get the number of\n        investigations that occur within that cycle on that instrument, subject to\n        the given filters\n      parameters:\n      - description: The id of the instrument to retrieve the investigations of\n        in: path\n        name: instrument_id\n        required: true\n        schema:\n          type: integer\n      - description: The id of the facility cycle to retrieve the investigations\n        in: path\n        name: cycle_id\n        required: true\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/WHERE_FILTER'\n      - $ref: '#/components/parameters/DISTINCT_FILTER'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: integer\n          description: Success - The count of the investigations for the given instrument\n            and facility cycle that satisfy the filters\n        '400':\n          description: Bad request - Something was wrong with the request\n        '401':\n          description: Unauthorized - No session ID found in HTTP Auth. header\n        '403':\n          description: Forbidden - The session ID provided is invalid\n        '404':\n          description: No such record - Unable to find a record in ICAT\n      summary: Count investigations for a given Facility Cycle \u0026 Instrument\n      tags:\n      - Investigations\n  /datagateway-api/ping:\n    get:\n      description: Pings the API's connection method to check responsiveness\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: OK message\n                example: DataGateway API OK\n                type: string\n          description: Success - the API is responsive on the backend configured\n        '500':\n          description: Pinging the API's connection method has gone wrong\n      summary: Ping API connection method\n      tags:\n      - Ping\nsecurity:\n- session_id: []\n",
			"canonicalURL": "/github.com/ral-facilities/datagateway-api@71d81ac444be2cf2ff18fae1eb7f5108a819d55b/-/blob/datagateway_api/src/swagger/datagateway_api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ral-facilities/datagateway-api/blob/71d81ac444be2cf2ff18fae1eb7f5108a819d55b/datagateway_api/src/swagger/datagateway_api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 49: cannot unmarshal !!seq into ogen.Schema; yaml: line 57: cannot unmarshal !!seq into ogen.Schema"
}