{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oicr-gsi/shesmu"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "shesmu-server/src/main/resources/ca/on/oicr/gsi/shesmu/swagger.json",
			"byteSize": 61597,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"ActionFilter\": {\n        \"description\": \"Action filtering.\",\n        \"discriminator\": {\n          \"mapping\": {\n            \"added\": \"#/components/schemas/ActionFilterAdded\",\n            \"addedago\": \"#/components/schemas/ActionFilterAddedAgo\",\n            \"and\": \"#/components/schemas/ActionFilterAnd\",\n            \"checked\": \"#/components/schemas/ActionFilterChecked\",\n            \"checkedago\": \"#/components/schemas/ActionFilterCheckedAgo\",\n            \"created\": \"#/components/schemas/ActionFilterCreated\",\n            \"createdago\": \"#/components/schemas/ActionFilterCreatedAgo\",\n            \"external\": \"#/components/schemas/ActionFilterExternal\",\n            \"externalago\": \"#/components/schemas/ActionFilterExternalAgo\",\n            \"id\": \"#/components/schemas/ActionFilterId\",\n            \"or\": \"#/components/schemas/ActionFilterOr\",\n            \"regex\": \"#/components/schemas/ActionFilterRegex\",\n            \"sourcefile\": \"#/components/schemas/ActionFilterSourceFile\",\n            \"sourcelocation\": \"#/components/schemas/ActionFilterSourceLocation\",\n            \"status\": \"#/components/schemas/ActionFilterStatus\",\n            \"statuschanged\": \"#/components/schemas/ActionFilterStatusChanged\",\n            \"statuschangedago\": \"#/components/schemas/ActionFilterStatusChangedAgo\",\n            \"tag\": \"#/components/schemas/ActionFilterTag\",\n            \"tag-regex\": \"#/components/schemas/ActionFilterTagRegex\",\n            \"text\": \"#/components/schemas/ActionFilterText\",\n            \"type\": \"#/components/schemas/ActionFilterType\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterAdded\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterAddedAgo\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterAnd\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterChecked\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterCheckedAgo\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterCreated\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterCreatedAgo\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterExternal\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterExternalAgo\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterId\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterOr\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterRegex\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterSourceFile\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterSourceLocation\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterStatus\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterStatusChanged\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterStatusChangedAgo\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterTag\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterTagRegex\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterText\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/ActionFilterType\"\n          }\n        ]\n      },\n      \"ActionFilterAdded\": {\n        \"properties\": {\n          \"end\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"start\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterAddedAgo\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"offset\": {\n            \"description\": \"milliseconds since the current time\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterAnd\": {\n        \"properties\": {\n          \"filters\": {\n            \"description\": \"the filters which must be all be satisified\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ActionFilter\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterChecked\": {\n        \"properties\": {\n          \"end\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"start\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterCheckedAgo\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"offset\": {\n            \"description\": \"milliseconds since the current time\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterCreated\": {\n        \"properties\": {\n          \"end\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"start\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterCreatedAgo\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"offset\": {\n            \"description\": \"milliseconds since the current time\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterExternal\": {\n        \"properties\": {\n          \"end\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"start\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterExternalAgo\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"offset\": {\n            \"description\": \"milliseconds since the current time\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterId\": {\n        \"properties\": {\n          \"filters\": {\n            \"description\": \"the action IDs; note that action IDs are unique, but even across restarts\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterOr\": {\n        \"properties\": {\n          \"filters\": {\n            \"description\": \"the filters from which at least one must be satisified\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ActionFilter\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterRegex\": {\n        \"properties\": {\n          \"matchCase\": {\n            \"description\": \"whether the regular must match as provided or if the case can be different\",\n            \"type\": \"boolean\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"pattern\": {\n            \"description\": \"a Java regular expression the action must match\",\n            \"type\": \"regex\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterSourceFile\": {\n        \"properties\": {\n          \"files\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterSourceLocation\": {\n        \"properties\": {\n          \"locations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SourceOliveLocation\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterStatus\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"states\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterStatusChanged\": {\n        \"properties\": {\n          \"end\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"start\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterStatusChangedAgo\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"offset\": {\n            \"description\": \"milliseconds since the current time\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterTag\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"tags\": {\n            \"description\": \"tags which must appear attached to the action\",\n            \"type\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterTagRegex\": {\n        \"properties\": {\n          \"matchCase\": {\n            \"description\": \"whether the regular must match as provided or if the case can be different\",\n            \"type\": \"boolean\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"pattern\": {\n            \"description\": \"a Java regular expression the action's tags must match\",\n            \"type\": \"regex\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterText\": {\n        \"properties\": {\n          \"matchCase\": {\n            \"description\": \"whether the text must match as provided or if the case can be different\",\n            \"type\": \"boolean\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"text\": {\n            \"description\": \"text which must appear in the action\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ActionFilterType\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"types\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Alert\": {\n        \"properties\": {\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"endsAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"generatorURL\": {\n            \"format\": \"uri\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"startsAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilter\": {\n        \"description\": \"Alert filtering.\",\n        \"discriminator\": {\n          \"mapping\": {\n            \"and\": \"#/components/schemas/AlertFilterAnd\",\n            \"eq\": \"#/components/schemas/AlertFilterLabelValue\",\n            \"has\": \"#/components/schemas/AlertFilterLabelName\",\n            \"is_live\": \"#/components/schemas/AlertFilterIsLive\",\n            \"or\": \"#/components/schemas/AlertFilterOr\",\n            \"sourcelocation\": \"#/components/schemas/AlertFilterSourceLocation\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterAnd\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterIsLive\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterLabelName\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterLabelValue\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterOr\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/AlertFilterSourceLocation\"\n          }\n        ]\n      },\n      \"AlertFilterAnd\": {\n        \"properties\": {\n          \"filters\": {\n            \"description\": \"the filters which must be all be satisified\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertFilter\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilterIsLive\": {\n        \"properties\": {\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilterLabelName\": {\n        \"properties\": {\n          \"isRegex\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilterLabelValue\": {\n        \"properties\": {\n          \"isRegex\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilterOr\": {\n        \"properties\": {\n          \"filters\": {\n            \"description\": \"the filters from which at least one must be satisified\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AlertFilter\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AlertFilterSourceLocation\": {\n        \"properties\": {\n          \"locations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SourceOliveLocation\"\n            },\n            \"type\": \"array\"\n          },\n          \"negate\": {\n            \"description\": \"if true, the filter's output will be inverted\",\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AnyValue\": {\n        \"anyOf\": [\n          {\n            \"type\": \"string\"\n          },\n          {\n            \"type\": \"number\"\n          },\n          {\n            \"type\": \"integer\"\n          },\n          {\n            \"type\": \"boolean\"\n          },\n          {\n            \"items\": {},\n            \"type\": \"array\"\n          }\n        ],\n        \"description\": \"Can be any value - string, number, boolean, array or object.\"\n      },\n      \"CacheInfo\": {\n        \"description\": \"Cache information\",\n        \"discriminator\": {\n          \"mapping\": {\n            \"k\": \"#/components/schemas/CacheInfoKeyValue\",\n            \"kv\": \"#/components/schemas/CacheInfoValue\"\n          },\n          \"propertyName\": \"type\"\n        },\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/CacheInfoKeyValue\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/CacheInfoValue\"\n          }\n        ]\n      },\n      \"CacheInfoKeyValue\": {\n        \"properties\": {\n          \"entries\": {\n            \"additionalProperties\": {\n              \"properties\": {\n                \"collectionSize\": {\n                  \"description\": \"the number of items in this cache\",\n                  \"type\": \"integer\"\n                },\n                \"lastUpdate\": {\n                  \"description\": \"milliseconds since UNIX epoch\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"description\": \"the items stored in this cache\",\n            \"type\": \"object\"\n          },\n          \"name\": {\n            \"description\": \"the name of the cache\",\n            \"type\": \"string\"\n          },\n          \"ttl\": {\n            \"description\": \"the number of minutes before the cache is refreshed\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheInfoValue\": {\n        \"properties\": {\n          \"collectionSize\": {\n            \"description\": \"the number of items in this cache\",\n            \"type\": \"integer\"\n          },\n          \"lastUpdate\": {\n            \"description\": \"milliseconds since UNIX epoch\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"description\": \"the name of the cache\",\n            \"type\": \"string\"\n          },\n          \"ttl\": {\n            \"description\": \"the number of minutes before the cache is refreshed\",\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Command\": {\n        \"properties\": {\n          \"buttonText\": {\n            \"description\": \"the text that should be displayed to the user for this command\",\n            \"type\": \"string\"\n          },\n          \"command\": {\n            \"description\": \"the command's identifier\",\n            \"type\": \"string\"\n          },\n          \"count\": {\n            \"description\": \"the number of actions that will be affected (for bulk commands only)\",\n            \"type\": \"boolean\"\n          },\n          \"showPrompt\": {\n            \"description\": \"the user should get a confirmation prompt before doing this\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SimulationResponse\": {\n        \"properties\": {\n          \"actions\": {\n            \"items\": {\n              \"additionalProperties\": true,\n              \"properties\": {\n                \"type\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"alerts\": {\n            \"properties\": {\n              \"annotations\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              },\n              \"labels\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"bytecode\": {\n            \"type\": \"string\"\n          },\n          \"dumpers\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"errors\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"exports\": {\n            \"additionalProperties\": {\n              \"properties\": {\n                \"parameters\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"returns\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"metrics\": {\n            \"type\": \"string\"\n          },\n          \"olives\": {\n            \"items\": {\n              \"properties\": {\n                \"column\": {\n                  \"type\": \"integer\"\n                },\n                \"description\": {\n                  \"type\": \"string\"\n                },\n                \"diagram\": {\n                  \"type\": \"string\"\n                },\n                \"duration\": {\n                  \"type\": \"integer\"\n                },\n                \"line\": {\n                  \"type\": \"integer\"\n                },\n                \"syntax\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"overloadedInputs\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SourceOliveLocation\": {\n        \"properties\": {\n          \"column\": {\n            \"type\": \"integer\"\n          },\n          \"file\": {\n            \"type\": \"string\"\n          },\n          \"hash\": {\n            \"type\": \"string\"\n          },\n          \"line\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"andre.masella@oicr.on.ca\"\n    },\n    \"description\": \"This API is implemented by [Shesmu](https://github.com/oicr-gsi/shesmu).\",\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"https://opensource.org/licenses/MIT\"\n    },\n    \"title\": \"Shesmu Server\",\n    \"version\": \"1.0.0\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/actions\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getActionCatalog\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"properties\": {\n                      \"description\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"parameters\": {\n                        \"items\": {\n                          \"properties\": {\n                            \"name\": {\n                              \"type\": \"string\"\n                            },\n                            \"required\": {\n                              \"type\": \"boolean\"\n                            },\n                            \"type\": {\n                              \"format\": \"typedescriptor\",\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Action catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get a list of actions that can be performed by this server.\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/allalerts\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getAllAlerts\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Alert\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"All alerts produced by this instance\"\n          }\n        },\n        \"summary\": \"Get a list of current firing alerts.\",\n        \"tags\": [\n          \"alerts\"\n        ]\n      }\n    },\n    \"/caches\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getCacheInfo\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CacheInfo\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Get information on all caches in all plugins\"\n          }\n        },\n        \"summary\": \"Get a list of caches that are in use on this server.\",\n        \"tags\": [\n          \"caches\"\n        ]\n      }\n    },\n    \"/command\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"sendCommandToActions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"command\": {\n                    \"type\": \"string\"\n                  },\n                  \"filters\": {\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ActionFilter\"\n                    },\n                    \"type\": \"array\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"Sends a command to the actions that match the supplied filters.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"description\": \"The number of actions that enacted the command\"\n          }\n        },\n        \"summary\": \"Send commands to actions\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/constant\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"getConstant\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"$ref\": \"#/components/schemas/AnyValue\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"The current value of the constant or an error\"\n          }\n        },\n        \"summary\": \"Get the value of a constant\",\n        \"tags\": [\n          \"constants\"\n        ]\n      }\n    },\n    \"/constants\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getConstantsCatalog\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"properties\": {\n                      \"description\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": {\n                        \"format\": \"typedescriptor\",\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Constants catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get a list of constants that can be use in olives on this server.\",\n        \"tags\": [\n          \"constants\"\n        ]\n      }\n    },\n    \"/count\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"countActions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/ActionFilter\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"Counts the number of actions matching the query.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"description\": \"The number of actions matched\"\n          }\n        },\n        \"summary\": \"Count actions generated by olives\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/currentalerts\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getCurrentAlerts\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Alert\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Current active alerts\"\n          }\n        },\n        \"summary\": \"Get a list of current firing alerts.\",\n        \"tags\": [\n          \"alerts\"\n        ]\n      }\n    },\n    \"/drain\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"drainActions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/ActionFilter\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"Removes actions from the actions generated by olives just like purging, but also returns these actions as if queried.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"additionalProperties\": true,\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"The number of actions purged\"\n          }\n        },\n        \"summary\": \"Remove actions generated by olives\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/function\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"runFunction\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"args\": {\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/AnyValue\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"$ref\": \"#/components/schemas/AnyValue\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"The current value of the constant or an error\"\n          }\n        },\n        \"summary\": \"Compute value of function\",\n        \"tags\": [\n          \"functions\"\n        ]\n      }\n    },\n    \"/functions\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getFunctionsCatalog\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"properties\": {\n                      \"description\": {\n                        \"type\": \"string\"\n                      },\n                      \"name\": {\n                        \"type\": \"string\"\n                      },\n                      \"return\": {\n                        \"format\": \"typedescriptor\",\n                        \"type\": \"string\"\n                      },\n                      \"types\": {\n                        \"items\": {\n                          \"properties\": {\n                            \"description\": {\n                              \"type\": \"string\"\n                            },\n                            \"type\": {\n                              \"format\": \"typedescriptor\",\n                              \"type\": \"string\"\n                            }\n                          },\n                          \"type\": \"object\"\n                        },\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Functions catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get a list of functions that can be use in olives on this server.\",\n        \"tags\": [\n          \"functions\"\n        ]\n      }\n    },\n    \"/getalert\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"getAlert\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Alert\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"$ref\": \"#/components/schemas/AnyValue\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"The current value of the constant or an error\"\n          }\n        },\n        \"summary\": \"Get the value of a constant\",\n        \"tags\": [\n          \"constants\"\n        ]\n      }\n    },\n    \"/input/{format}\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getInputCatalog\",\n        \"parameters\": [\n          {\n            \"description\": \"The name of the input format\",\n            \"in\": \"path\",\n            \"name\": \"format\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Input data catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get a list of olive input data known by this server.\",\n        \"tags\": [\n          \"inputdata\"\n        ]\n      }\n    },\n    \"/input/{format}/stale\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getStaleInputCatalog\",\n        \"parameters\": [\n          {\n            \"description\": \"The name of the input format\",\n            \"in\": \"path\",\n            \"name\": \"format\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Input data catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get a list of olive input data known by this server but do not attempt to refresh it.\",\n        \"tags\": [\n          \"inputdata\"\n        ]\n      }\n    },\n    \"/invalidate\": {\n      \"post\": {\n        \"description\": \"Invalidates caches; DO NOT USE IN PRODUCTION\",\n        \"operationId\": \"invalidateCaches\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Caches were invalidated\"\n          }\n        },\n        \"summary\": \"Invalidate caches; DEBUGGING ONLY\",\n        \"tags\": [\n          \"caches\"\n        ]\n      }\n    },\n    \"/jsondumper\": {\n      \"delete\": {\n        \"description\": \"\",\n        \"operationId\": \"jsonDumperDelete\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            },\n            \"description\": \"Remove this dumper from the list and discard any data. Returns true if the dumper previously existed.\"\n          }\n        },\n        \"summary\": \"Delete dumper\",\n        \"tags\": [\n          \"misc\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"jsonDumperDump\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/AnyValue\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"Copy the data last pushed into this dumper by an olive; if the dumper does not exist, an empty array is returned.\"\n          }\n        },\n        \"summary\": \"Download dumped data\",\n        \"tags\": [\n          \"misc\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\",\n        \"operationId\": \"jsonDumperCreate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Create a new dumper with the provided name. If one already exists, this operation does nothing.\"\n          }\n        },\n        \"summary\": \"Create dumper\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/parsefiltertext\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"parseFilterText\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ActionFilter\"\n                }\n              }\n            },\n            \"description\": \"The filters that were parsed from the text\"\n          },\n          \"400\": {\n            \"description\": \"No filters were found in the text\"\n          }\n        },\n        \"summary\": \"Extract ASCII-encoded filters from text\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/parsequery\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"parseActionQuery\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"Parses a human-friendly-ish text query into an action filter\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"errors\": {\n                      \"items\": {\n                        \"properties\": {\n                          \"column\": {\n                            \"type\": \"integer\"\n                          },\n                          \"line\": {\n                            \"type\": \"integer\"\n                          },\n                          \"message\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"filter\": {\n                      \"$ref\": \"#/components/schemas/ActionFilter\"\n                    },\n                    \"formatted\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"A filter equivalent to the query or a collection of parse errors\"\n          }\n        },\n        \"summary\": \"Create a filter JSON from a text query\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/pausefile\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"pauseOlive\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\"\n                  },\n                  \"pause\": {\n                    \"nullable\": true,\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"Stops any actions from olive in a file from running. This does not stop the olives from running and has no affect on Alert or Refill olives. If the pause state provided is null, this queries the current state only.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            },\n            \"description\": \"Whether the file is currently paused\"\n          }\n        },\n        \"summary\": \"Throttle a file's actions.\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/pauseolive\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"pauseOlive\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"column\": {\n                    \"type\": \"int\"\n                  },\n                  \"file\": {\n                    \"type\": \"string\"\n                  },\n                  \"hash\": {\n                    \"type\": \"string\"\n                  },\n                  \"line\": {\n                    \"type\": \"int\"\n                  },\n                  \"pause\": {\n                    \"nullable\": true,\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"Stops an olive's actions from running. This does not stop the olive from running and has no affect on Alert or Refill olives. If the pause state provided is null, this queries the current state only.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            },\n            \"description\": \"Whether the olive is currently paused\"\n          }\n        },\n        \"summary\": \"Throttle an olive's actions.\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/printquery\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"printActionQuery\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ActionFilter\"\n              }\n            }\n          },\n          \"description\": \"Converts an action filter into a human-friendly-ish query string\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"A query equivalent to the filter\"\n          }\n        },\n        \"summary\": \"Create text query from a filter\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/purge\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"purgeActions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/ActionFilter\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"Removes actions from the actions generated by olives. These may reappear if an olive regenerates the same action. This is mostly used to clear failed actions that are no longer in the input data.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\"\n                }\n              }\n            },\n            \"description\": \"The number of actions purged\"\n          }\n        },\n        \"summary\": \"Remove actions generated by olives\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/query\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"queryActions\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"filters\": {\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ActionFilter\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"limit\": {\n                    \"type\": \"integer\"\n                  },\n                  \"skip\": {\n                    \"type\": \"integer\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"Causes an action to be launched. The status code indicates whether the job has successfully finished running. If completed successfully, an optional URL may be provided where the result may be viewed.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"bulkCommands\": {\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Command\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"results\": {\n                      \"items\": {\n                        \"additionalProperties\": true,\n                        \"properties\": {\n                          \"commands\": {\n                            \"items\": {\n                              \"$ref\": \"#/components/schemas/Command\"\n                            },\n                            \"type\": \"array\"\n                          },\n                          \"type\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"array\"\n                    },\n                    \"total\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"A list of actions that match the supplied filters\"\n          }\n        },\n        \"summary\": \"Get actions generated by olives\",\n        \"tags\": [\n          \"actions\"\n        ]\n      }\n    },\n    \"/queryalerts\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"queryAlerts\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AlertFilter\"\n              }\n            }\n          },\n          \"description\": \"Causes an action to be launched. The status code indicates whether the job has successfully finished running. If completed successfully, an optional URL may be provided where the result may be viewed.\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Alert\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"All alerts produced by this instance\"\n          }\n        },\n        \"summary\": \"Get a list of current firing alerts.\",\n        \"tags\": [\n          \"alerts\"\n        ]\n      }\n    },\n    \"/simulate\": {\n      \"post\": {\n        \"description\": \"Simulate Olive\",\n        \"operationId\": \"simulate\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"allowUnused\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"dryRun\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"fakeActions\": {\n                    \"additionalProperties\": {\n                      \"additionalProperties\": {\n                        \"properties\": {\n                          \"required\": {\n                            \"type\": \"boolean\"\n                          },\n                          \"type\": {\n                            \"anyOf\": [\n                              {\n                                \"type\": \"string\"\n                              },\n                              {\n                                \"additionalProperties\": {\n                                  \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                              }\n                            ]\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"fakeConstants\": {\n                    \"additionalProperties\": {\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\"\n                        },\n                        \"value\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"fakeRefillers\": {\n                    \"additionalProperties\": {\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"readStale\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"script\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SimulationResponse\"\n                }\n              },\n              \"description\": \"Results from the compilation and running.\"\n            },\n            \"description\": \"Simulation complete. Does not indicate that olive ran successfully.\"\n          }\n        },\n        \"summary\": \"Performs a dry-run of an olive script and returns all the alerts and actions generated by the script.\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/simulate-existing\": {\n      \"post\": {\n        \"description\": \"Simulate an olive already on the server\",\n        \"operationId\": \"simulateExisting\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"fakeConstants\": {\n                    \"additionalProperties\": {\n                      \"properties\": {\n                        \"type\": {\n                          \"type\": \"string\"\n                        },\n                        \"value\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"fileName\": {\n                    \"type\": \"string\"\n                  },\n                  \"readStale\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SimulationResponse\"\n                }\n              },\n              \"description\": \"Results from the compilation and running.\"\n            },\n            \"description\": \"Simulation complete. Does not indicate that olive ran successfully.\"\n          }\n        },\n        \"summary\": \"Performs a dry-run of an olive script and returns all the alerts and actions generated by the script.\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/type\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"prettyType\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"The human readable type\"\n          },\n          \"400\": {\n            \"description\": \"The type descriptor provided is not valid.\"\n          }\n        },\n        \"summary\": \"Parse a Shesmu type\",\n        \"tags\": [\n          \"misc\"\n        ]\n      }\n    },\n    \"/variables\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getVariablesCatalog\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"additionalProperties\": {\n                    \"properties\": {\n                      \"gangs\": {\n                        \"additionalProperties\": {\n                          \"items\": {\n                            \"properties\": {\n                              \"dropIfDefault\": {\n                                \"type\": \"boolean\"\n                              },\n                              \"name\": {\n                                \"type\": \"string\"\n                              },\n                              \"type\": {\n                                \"format\": \"typedescriptor\",\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"type\": \"array\"\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"variables\": {\n                        \"additionalProperties\": {\n                          \"format\": \"typedescriptor\",\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"object\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"Variables catalog transmitted\"\n          }\n        },\n        \"summary\": \"Get the variables that can be use in olives on this server.\",\n        \"tags\": [\n          \"inputdata\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"Actions\",\n      \"name\": \"actions\"\n    },\n    {\n      \"description\": \"Alerts\",\n      \"name\": \"alerts\"\n    },\n    {\n      \"description\": \"Caches\",\n      \"name\": \"caches\"\n    },\n    {\n      \"description\": \"Constants/Predefined Values\",\n      \"name\": \"constants\"\n    },\n    {\n      \"description\": \"Functions\",\n      \"name\": \"functions\"\n    },\n    {\n      \"description\": \"Olive Input Data\",\n      \"name\": \"inputdata\"\n    },\n    {\n      \"description\": \"Miscellaneous\",\n      \"name\": \"misc\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "unmarshal: json: line 5:39: callback: json: cannot unmarshal object into Go struct field Schema.type of type string"
}