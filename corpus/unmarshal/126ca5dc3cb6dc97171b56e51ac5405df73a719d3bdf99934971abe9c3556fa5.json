{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "datumbox.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/datumbox.com-1.0-swagger.yaml",
			"byteSize": 11599,
			"content": "openapi: 3.0.0\ninfo:\n  description: Datumbox offers a Machine Learning platform composed of 14 classifiers and\n    Natural Language processing functions. Functions include sentiment analysis,\n    topic classification, readability assessment, language detection, and much\n    more.\n  title: DatumBox\n  version: \"1.0\"\n  x-apisguru-categories:\n    - machine_learning\n    - text\n  x-logo:\n    url: http://www.datumbox.com/img/logo.png\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.11\n      format: swagger\n      url: http://www.datumbox.com/api-sandbox/api-docs\n      version: \"1.2\"\n  x-providerName: datumbox.com\ntags:\n  - description: Document Classification Functions\n    name: Document-Classification\n  - description: Information Retrieval Functions\n    name: Information-Retrieval\n  - description: Metrics\n    name: Metrics\npaths:\n  /1.0/AdultContentDetection.json:\n    post:\n      deprecated: false\n      description: The Adult Content Detection function classifies the documents as adult\n        or noadult based on their context. It can be used to detect whether a\n        document contains content unsuitable for minors.\n      operationId: AdultContentDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Classifies the Document as adult or noadult\n      tags:\n        - Document-Classification\n  /1.0/CommercialDetection.json:\n    post:\n      deprecated: false\n      description: The Commercial Detection function labels the documents as commercial or\n        non-commercial based on their keywords and expressions. It can be used\n        to detect whether a website is commercial or not.\n      operationId: CommercialDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Classifies the Document as commercial or nocommercial\n      tags:\n        - Document-Classification\n  /1.0/DocumentSimilarity.json:\n    post:\n      deprecated: false\n      description: The Document Similarity function estimates the degree of similarity\n        between two documents. It can be used to detect duplicate webpages or\n        detect plagiarism.\n      operationId: DocumentSimilarity\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                api_key:\n                  description: Your API Key\n                  type: string\n                original:\n                  description: The first text. It should not contain HTML tags.\n                  type: string\n                copy:\n                  description: The second text. It should not contain HTML tags.\n                  type: string\n              required:\n                - api_key\n                - original\n                - copy\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Estimates the similarity between 2 Documents\n      tags:\n        - Metrics\n  /1.0/EducationalDetection.json:\n    post:\n      deprecated: false\n      description: The Educational Detection function classifies the documents as\n        educational or non-educational based on their context. It can be used to\n        detect whether a website is educational or not.\n      operationId: EducationalDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Classifies the Document as educational or noeducational\n      tags:\n        - Document-Classification\n  /1.0/GenderDetection.json:\n    post:\n      deprecated: false\n      description: The Gender Detection function identifies if a particular document is\n        written-by or targets-to a man or a woman based on the context, the\n        words and the idioms found in the text.\n      operationId: GenderDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Gender Detection Service\n      tags:\n        - Document-Classification\n  /1.0/KeywordExtraction.json:\n    post:\n      deprecated: false\n      description: The Keyword Extraction function enables you to extract from an arbitrary\n        document all the keywords and word-combinations along with their\n        occurrences in the text.\n      operationId: KeywordExtraction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                api_key:\n                  description: Your API Key\n                  type: string\n                n:\n                  description: The number of keyword combinations (n-grams) that you wish\n                    to extract.\n                  type: integer\n                  minimum: 1\n                  maximum: 5\n                text:\n                  description: The text that you want to analyze. It should not contain\n                    HTML tags.\n                  type: string\n              required:\n                - api_key\n                - n\n                - text\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Extracts the Keywords of the Document\n      tags:\n        - Information-Retrieval\n  /1.0/LanguageDetection.json:\n    post:\n      deprecated: false\n      description: The Language Detection function identifies the natural language of the\n        given document based on its words and context. This classifier is able\n        to detect 96 different languages.\n      operationId: LanguageDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Identifies the Language of the Document\n      tags:\n        - Document-Classification\n  /1.0/ReadabilityAssessment.json:\n    post:\n      deprecated: false\n      description: The Readability Assessment function determines the degree of readability\n        of a document based on its terms and idioms. The texts are classified as\n        basic, intermediate and advanced depending their difficulty.\n      operationId: ReadabilityAssessment\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Evaluates the Readability of the Document\n      tags:\n        - Document-Classification\n  /1.0/SentimentAnalysis.json:\n    post:\n      deprecated: false\n      description: The Sentiment Analysis function classifies documents as positive,\n        negative or neutral (lack of sentiment) depending on whether they\n        express a positive, negative or neutral opinion.\n      operationId: SentimentAnalysis\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Identifies the Sentiment of the Document\n      tags:\n        - Document-Classification\n  /1.0/SpamDetection.json:\n    post:\n      deprecated: false\n      description: The Spam Detection function labels documents as spam or nospam by taking\n        into account their context. It can be used to filter out spam emails and\n        comments.\n      operationId: SpamDetection\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Classifies the Document as spam or nospam\n      tags:\n        - Document-Classification\n  /1.0/SubjectivityAnalysis.json:\n    post:\n      deprecated: false\n      description: The Subjectivity Analysis function categorizes documents as subjective\n        or objective based on their writing style. Texts that express personal\n        opinions are labeled as subjective and the others as objective.\n      operationId: SubjectivityAnalysis\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Classifies Document as Subjective or Objective\n      tags:\n        - Document-Classification\n  /1.0/TextExtraction.json:\n    post:\n      deprecated: false\n      description: The Text Extraction function enables you to extract the important\n        information from a given webpage. Extracting the clear text of the\n        documents is an important step before any other analysis.\n      operationId: TextExtraction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                api_key:\n                  description: Your API Key\n                  type: string\n                text:\n                  description: The HTML source of the webpage.\n                  type: string\n              required:\n                - api_key\n                - text\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Extracts the clear text from Webpage\n      tags:\n        - Information-Retrieval\n  /1.0/TopicClassification.json:\n    post:\n      deprecated: false\n      description: The Topic Classification function assigns documents in 12 thematic\n        categories based on their keywords, idioms and jargon. It can be used to\n        identify the topic of the texts.\n      operationId: TopicClassification\n      requestBody:\n        $ref: \"#/components/requestBodies/AdultContentDetection\"\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Identifies the Topic of the Document\n      tags:\n        - Document-Classification\n  /1.0/TwitterSentimentAnalysis.json:\n    post:\n      deprecated: false\n      description: The Twitter Sentiment Analysis function allows you to perform Sentiment\n        Analysis on Twitter. It classifies the tweets as positive, negative or\n        neutral depending on their context.\n      operationId: TwitterSentimentAnalysis\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                api_key:\n                  description: Your API Key\n                  type: string\n                text:\n                  description: The text of the tweet that we evaluate.\n                  type: string\n              required:\n                - api_key\n                - text\n      responses:\n        \"200\":\n          description: No response was specified\n      summary: Identifies the Sentiment of Twitter Messages\n      tags:\n        - Document-Classification\nservers:\n  - url: http://api.datumbox.com/\ncomponents:\n  requestBodies:\n    AdultContentDetection:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              api_key:\n                description: Your API Key\n                type: string\n              text:\n                description: The text that you want to analyze. It should not contain HTML\n                  tags.\n                type: string\n            required:\n              - api_key\n              - text\n"
		}
	},
	"Error": "unmarshal: json: line 1:4606: json: cannot unmarshal bool into Go struct field Schema.paths.post.requestBody.content.schema.required of type string"
}