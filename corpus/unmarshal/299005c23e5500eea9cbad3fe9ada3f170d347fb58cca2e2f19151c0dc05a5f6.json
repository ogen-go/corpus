{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "job.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/job.yml",
			"byteSize": 35204,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Job Services\n  version: v6\npaths:\n  /jobs/:\n    get:\n      operationId: _rest_v6_job_list\n      summary: Job List\n      description: Returns a list of all jobs\n      parameters:\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: The page of the results to return. Defaults to 1.\n      - in: query\n        name: page_size\n        schema:\n          type: integer\n        description: The size of the page to use for pagination of results. \n            Defaults to 100, and can be anywhere from 1-1000.\n      - in: query\n        name: started\n        schema:\n          type: string\n          format: date-time\n        description: The start of the time range to query\n      - in: query\n        name: ended\n        schema:\n          type: string\n          format: date-time\n        description: End of the time range to query, defaults to the current time\n      - in: query\n        name: source_started\n        schema:\n          type: string\n          format: date-time\n        description: The start of the source time range to query\n      - in: query\n        name: source_ended\n        schema:\n          type: string\n          format: date-time\n        description: End of the source time range to query, defaults to the current time\n      - in: query\n        name: source_sensor_class\n        schema:\n          type: string\n        description: Return only jobs for the given source sensor class.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: source_sensor\n        schema:\n          type: string\n        description: Return only jobs for the given source sensor.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: source_collection\n        schema:\n          type: string\n        description: Return only jobs for the given source collection.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: source_task\n        schema:\n          type: string\n        description: Return only jobs for the given source task.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: order\n        schema:\n          type: string\n        description: \"One or more fields to use when ordering the results.\n                      Duplicate it to multi-sort, (ex: order=host_name&order=created)\n                      Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n      - in: query\n        name: status\n        schema:\n          type: string\n        description: \"Return only jobs with a status matching this string.\n                      Choices: [QUEUED, RUNNING, FAILED, COMPLETED, CANCELED].\n                      Duplicate it to filter by multiple values.\"\n      - in: query\n        name: job_id\n        schema:\n          type: integer\n        description: Return only jobs with a given identifier.\n            Duplicate it to filter by multiple values. \n      - in: query\n        name: job_type_id\n        schema:\n          type: integer\n        description: Return only jobs with a given job type identifier.\n            Duplicate it to filter by multiple values. \n      - in: query\n        name: job_type_name\n        schema:\n          type: string\n        description: Return only jobs with a given job type name.\n            Duplicate it to filter by multiple values. \n      - in: query\n        name: batch_id\n        schema:\n          type: integer\n        description: Return only jobs with the given batch identifier.\n            Duplicate it to filter by multiple values. \n      - in: query\n        name: recipe_id\n        schema:\n          type: integer\n        description: Return only jobs with the given recipe identifier.\n            Duplicate it to filter by multiple values. \n      - in: query\n        name: error_category\n        schema:\n          type: string\n        description: \"Return only jobs that failed due to an error with the given category.\n                      Choices: [SYSTEM, DATA, ALGORITHM].\n                      Duplicate it to filter by multiple values.\"\n      - in: query\n        name: error_id\n        schema:\n          type: integer\n        description: Return only jobs that failed with this error.\n            Duplicate it to filter by multiple values. \n      responses:\n        '200':\n          description: 200 response\n          content: \n            application/json:\n              schema: \n                $ref: '#/components/schemas/job_list'\n    post:\n      operationId: _rest_v6_job_post\n      description: creates a new job and adds it to the queue\n      requestBody:\n        required: true\n        content: \n          application/json:\n            schema:\n              $ref: '#/components/schemas/job_post'\n      responses:\n        '201':\n          description: |-\n            201 CREATED response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job_details'\n\n  /jobs/{id}/:\n    get:\n      operationId: _rest_v6_job_details\n      summary: Job Details\n      description: Returns a specific job and all its related model information.  \n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing job\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/job_details'\n\n  /jobs/{id}/input_files/:\n    get:\n      operationId: _rest_v6_job_input_files\n      summary: Job Input Files\n      description: Returns detailed information about input files associated with a given Job ID.  \n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: id of an existing job\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: The page of the results to return. Defaults to 1.\n      - in: query\n        name: page_size\n        schema:\n          type: integer\n        description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n      - in: query\n        name: started\n        schema:\n          type: string\n          format: date-time\n        description: The start of the time range to query\n      - in: query\n        name: ended\n        schema:\n          type: string\n          format: date-time\n        description: End of the time range to query, defaults to the current time\n      - in: query\n        name: time_field\n        schema:\n          type: string\n        description: \"Indicates the time field(s) that *started* and *ended*\n                      will use for time filtering. Valid values are: *last_modified*,\n                      *data* and *source*. The default value is *last_modified*.\"\n      - in: query\n        name: file_name\n        schema:\n          type: string\n        description: Returns only input files with this file name.\n      - in: query\n        name: job_input\n        schema:\n          type: string\n        description: Returns files for this job input.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/file_list'\n\n  /jobs/{id}/executions/:\n    get:\n      operationId: _rest_v6_job_executions\n      summary: Job Executions\n      description: Returns a list of job executions associated with a given Job ID\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: id of an existing job\n      - in: query\n        name: page\n        schema:\n          type: integer\n        description: The page of the results to return. Defaults to 1.\n      - in: query\n        name: page_size\n        schema:\n          type: integer\n        description: The size of the page to use for pagination of results.\n          Defaults to 100, and can be anywhere from 1-1000.\n      - in: query\n        name: status\n        schema:\n          type: string\n        description: \"Return only executions with a status matching this string.\n                      Choices: [QUEUED, RUNNING, FAILED, COMPLETED, CANCELED].\n                      Duplicate it to filter by multiple values.\"\n      - in: query\n        name: node_id\n        schema:\n          type: integer\n        description: Return only executions run on the given node.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: error_id\n        schema:\n          type: integer\n        description: Return only excutions with the given error.\n            Duplicate it to filter by multiple values.\n      - in: query\n        name: error_category\n        schema:\n          type: string\n        description: Return only excutions with errors of the given category.\n            Duplicate it to filter by multiple values.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job_execution_list'\n  \n  /jobs/{id}/executions/{exe_num}:\n    get:\n      operationId: _rest_v6_job_execution_details\n      summary: Job Execution Details\n      description: Returns a specific job execution and all its related model\n        information including job, node, environment, and results.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: id of an existing job\n      - in: path\n        name: exe_num\n        schema:\n          type: integer\n        description: execution number of a job execution\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/job_execution_details'\n  \n  /jobs/cancel/:\n    post:\n      operationId: _rest_v6_job_cancel\n      summary: Cancel Jobs\n      description: Cancels the jobs that fit the given filter criteria.\n        The canceling will be done asynchronously, so the response will just\n        indicate that the cancel request has been accepted.\n      requestBody:\n        required: false\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/job_cancel_post'\n      responses:\n        '202':\n          description: 202 ACCEPTED response\n  \n  /jobs/requeue/:\n    post:\n      operationId: _rest_v6_job_requeue\n      summary: Requeue Jobs\n      description: Re-queues the jobs that fit the given filter criteria.\n        The re-queuing will be done asynchronously, so the response will just\n        indicate that the re-queue request has been accepted.\n      requestBody:\n        required: false\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/job_requeue_post'\n      responses:\n        '202':\n          description: 202 ACCEPTED response\n  \n  /job-executions/{job_exe_id}/logs/{log_name}:\n    get:\n      operationId: _rest_v6_job_execution_logs\n      summary: Job Execution Logs\n      description: Returns a specific job execution log\n      parameters:\n      - in: path\n        name: job_exe_id\n        schema:\n          type: integer\n        description: id of a job execution\n      - in: path\n        name: log_name\n        schema:\n          type: string\n        description: Name of the log to get (stdout, stderr, or combined)\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/job_execution_log'\n\ncomponents:\n  schemas:\n    job_list:\n      title: Job List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters \n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/job'\n          description: List of Job objects\n\n    job_post:\n      title: Job Post\n      type: object\n      required: [job_type_id,input]\n      properties:\n        job_type_id:\n          type: int\n          description: the ID of the job type\n        input:\n            description: The input data for the job.\n            $ref: './data.yml#/components/schemas/data'\n        configuration:\n            description: The job type configuration for the job.\n            $ref: '#/components/schemas/job_type_config'\n    \n    job_base:\n      title: Job Base\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        job_type:\n          $ref: '#/components/schemas/job_type_base'\n        status:\n          type: string\n          description: \"The current status of the job. Choices: [QUEUED, RUNNING,\n                        FAILED, COMPLETED, CANCELED].\"\n          example: QUEUED\n    job:\n      title: Job\n      allOf:\n        - $ref: '#/components/schemas/job_base'\n        - type: object\n          properties:      \n            job_type_rev:\n              $ref: '#/components/schemas/job_type_revision_base'\n            event:\n              $ref: '#/components/schemas/event_base'\n            recipe:\n              $ref: '#/components/schemas/recipe_base'\n            batch:\n              $ref: '#/components/schemas/batch_base'\n            is_superseded: \n              type: boolean\n              description: Whether this job has been replaced and is now obsolete.\n              example: false\n            superseded_job:\n              description: The previous job in the chain that was superseded by this job.\n              $ref: '#/components/schemas/job_base'\n            status:\n              type: string\n              description: \"The current status of the job. Choices: [QUEUED, RUNNING, FAILED, COMPLETED, CANCELED].\"\n            node:\n              description: The node that the job is/was running on. \n              $ref: '#/components/schemas/node_base'\n            error:\n              description: The error that is associated with the job\n              $ref: '#/components/schemas/error_base'\n            num_exes:\n              type: integer\n              description: The number of executions this job has had.  \n              example: 1\n            input_file_size:\n              type: number\n              description: The amount of disk space in MiB required for input files for this job. \n              example: 1.0\n            input_files:\n              description: The input file names for the associated job\n              type: array\n              items:\n                type: string\n            source_started:\n              type: string\n              format: date-time\n              description: When collection of the source file started. \n              example: 2015-09-10T15:24:53.503Z\n            source_ended:\n              type: string\n              format: date-time\n              description: When collection of the source file ended. \n              example: 2015-09-10T15:24:53.503Z\n            source_sensor_class:\n              type: string\n              description: The class of sensor used to produce the source file.\n              example: classA\n            source_sensor:\n              type: string\n              description: The specific identifier of the sensor used to produce the source file.\n              example: 1\n            source_collection:\n              type: string\n              description: The collection of the source file.\n              example: 12345\n            source_task:\n              type: string\n              description: The task that produced the source file.\n              example: my-task\n            created:\n              type: string\n              format: date-time\n              description: When the associated database model was initially created.\n              example: 2015-09-10T15:24:53.503Z\n            queued:\n              type: string\n              format: date-time\n              description: When the job was added to the queue to be run when resources are available.\n              example: 2015-09-10T15:24:53.987Z\n            started:\n              type: string\n              format: date-time\n              description: When the job started running\n              example: 2015-09-10T15:24:53.987Z\n            ended:\n              type: string\n              format: date-time\n              description: When the job stopped running\n              example: 2015-09-10T15:24:53.987Z\n            last_status_change:\n              type: string\n              format: date-time\n              description: When the job's status last changed\n              example: 2015-09-10T15:24:53.987Z\n            superseded:\n              type: string\n              format: date-time\n              description: When the job was superseded.\n              example: 2015-09-10T15:24:53.503Z\n            last_modified:\n              type: string\n              format: date-time\n              description: When the associated database model was last saved.\n              example: 2015-09-10T15:24:53.987Z\n\n    job_input_files:\n      title: Job Input Files\n      type: object\n      properties:\n\n\n\n    job_details:\n      title: Job Details\n      allOf:\n        - $ref: '#/components/schemas/job'\n        - type: object\n          properties:\n          max_tries:\n            type: integer\n            description: Number of times this job will automatically be retried in case of an error.\n            example: 3\n          job_type_rev:\n            $ref: '#/components/schemas/job_type_revision_detail'\n          superseded_by_job:\n            description: The next job in the chain that superseded this job.\n            $ref: '#/components/schemas/job_base'\n          resources:\n            description: JSON description describing the resources required for this job.\n            $ref: '#/components/schemas/resources'\n          execution:\n            description: The most recent execution of the job.\n            $ref: '#/components/schemas/job_execution_details'\n          input:\n            description: The input data for the job.\n            $ref: './data.yml#/components/schemas/data'\n          output:\n            description: The output data for the job.\n            $ref: './data.yml#/components/schemas/data'\n\n    job_execution_list:\n      title: Job Execution List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/job_execution'\n          description: List of Job Execution objects\n\n    job_execution_base:\n      title: Job Execution Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call.\n          example: 10\n        status:\n          type: string\n          description: The status of the job execution. (RUNNING,FAILED,COMPLETED,CANCELED)\n          example: RUNNING\n        exe_num:\n          type: integer\n          description: The unique job execution number for the job identifer.\n          example: 1\n        cluster_id:\n          type: string\n          description: The Scale cluster identifier.\n          example: scale_job_1234_263x0\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        queued:\n          type: string\n          format: date-time\n          description: When the job was added to the queue for this run and went to QUEUED status.\n          example: 2015-09-10T15:24:53.987Z\n        started:\n          type: string\n          format: date-time\n          description: When the job was scheduled and went to RUNNING status.\n          example: 2015-09-10T15:24:53.987Z\n        ended:\n          type: string\n          format: date-time\n          description: When the job execution ended. (FAILED, COMPLETED, or CANCELED)\n          example: 2015-09-10T15:24:53.987Z\n        job:\n          description: The job that is associated with the execution.\n          $ref: '#/components/schemas/job_base'\n        node:\n          description: The node that ran the execution.\n          $ref: '#/components/schemas/node_base'\n        error:\n          description: The last error that was recorded for the execution.\n          $ref: '#/components/schemas/error_base'\n        job_type:\n          description: The job type that is associated with the execution.\n          $ref: '#/components/schemas/job_type_base'\n    job_execution:\n      title: Job Execution\n      allOf:\n        - $ref: '#/components/schemas/job_execution_base'\n        - type: object\n          properties:\n            node:\n              description: The node that ran the execution.\n              $ref: '#/components/schemas/node_base'\n            error:\n              description: The last error that was recorded for the execution.\n              $ref: '#/components/schemas/error_base'\n            job_type:\n              description: The job type that is associated with the execution.\n              $ref: '#/components/schemas/job_type_base'\n            timeout:\n              type: integer\n              description: The maximum amount of time this job can run before being killed (in seconds).\n              example: 1800\n            input_file_size:\n              type: number\n              format: float\n              description: The total amount of disk space in MiB for all input files for this execution.\n              example: 10.0\n    job_execution_details:\n      title: Job Execution Details\n      allOf:\n        - $ref: '#/components/schemas/job_execution'\n        - type: object\n          properties:\n            task_results:\n              description: JSON description of the task results for this execution.\n              $ref: '#/components/schemas/exe_task_results'\n            resources:\n              description: JSON description describing the resources allocated to this execution.\n              $ref: '#/components/schemas/resources_wrapper'\n            configuration:\n              description: JSON description of the configuration for running the job\n              $ref: '#/components/schemas/exe_config'\n            output:\n              description: JSON description of the job output.\n              $ref: '#/components/schemas/exe_output'\n    exe_task_results:\n      title: Task Results\n      type: object\n      properties:\n        task_id:\n          type: string\n          description: The unique identifier of the model. Can be passed to the details API call.\n          example: 10\n        type:\n          type: string\n          description: type of the task (“pull”, “pre”, “main”, or “post”)\n          example: pull\n        was_launched:\n          type: boolean\n          description: whether the task was launched\n          example: true\n        launched:\n          type: string\n          format: date-time\n          description: when the task was launched\n          example: 2015-09-10T15:24:53.987Z\n        was_started:\n          type: boolean\n          description: wether the task was started\n          example: true\n        started:\n          type: string\n          format: date-time\n          description: when the task was started\n          example: 2015-09-10T15:24:53.987Z\n        was_timed_out:\n          type: boolean\n          description: whether the task timed out\n          example: false\n        ended:\n          type: string\n          format: date-time\n          description: when the task finished\n          example: 2015-09-10T15:24:53.987Z\n        status:\n          type: string\n          description: final status of the task (FAILED/COMPLETED/CANCELED)\n          example: COMPLETED\n        exit_code:\n          type: integer\n          description: exit code returned by the task execution\n          example: 0\n    resources_wrapper:\n      title: Resources Wrapper\n      type: object\n      properties:\n        resources:\n          type: object\n          additionalProperties:\n            type: string\n    resources_obj:\n      title: Resources Object\n      type: object\n      additionalProperties:\n        type: string\n\n    exe_config:\n      title: Execution Configuration\n      type: object\n      properties:\n        input_files:\n          type: array\n          items:\n            $ref: '#/components/schemas/input_file'\n        output_workspaces:\n          type: object\n          additionalProperties:\n            type: string\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/task'\n\n    input_file:\n      title: Input File\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n          description: type of the input file (SOURCE or PRODUCT)\n        workspace_name:\n          type: string\n          description: name of the workspace holding the input file\n        workspace_path:\n          type: string\n          description: path of the input file within the workspace\n        local_file_name:\n          type: string\n          description: Alternate file name to use when passing the\n            input file to the executing container. This is used to\n            deconflict identical input file names when multiple\n            files with the same name are passed to the same input.\n        is_deleted:\n          type: boolean\n          description: Whether the input file has been deleted or not.\n    task:\n      title: Task\n      type: object\n      properties:\n        task_id:\n          type: integer\n        type:\n          type: string\n          description: type of the task (“pull”, “pre”, “main”, or “post”)\n        resources:\n          $ref: '#/components/schemas/resources_obj'\n        args:\n          type: string\n          description: command arguments that will be passed to the task\n        env_vars:\n          type: object\n          description: optional object where each key is the name of an environment\n            variable and each corresponding value is the value passed to that environment variable\n          additionalProperties:\n            type: string\n        workspaces:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/task_workspace'\n        mounts:\n          type: object\n          description: Optional object where each key is the name of a mount\n            variable and each corresponding value is the name of the docker \n            volume that will be mounted into the task's container. A null value\n            indicates a required mount that was not provided.\n          additionalProperties:\n            type: string\n        settings:\n          type: object\n          description: optional object where each key is the name of a setting\n            variable and each corresponding value is the value passed to that\n            setting. A null value indicates a required setting that was not provided.\n          additionalProperties:\n            type: string\n        volumes:\n          type: object\n          description: Optional object where each key is the name of a Docker\n            volume being mounted into the task.\n          additionalProperties:\n            $ref: '#/components/schemas/task_volume'\n        docker_params:\n          type: array\n          description: Objects that describe each Docker parameter to pass to the container\n          items:\n            $ref: '#/components/schemas/docker_param'\n    task_workspace:\n      title: Task Workspace\n      type: object\n      required: [mode]\n      properties:\n        mode:\n          type: string\n          description: \"Mode to use for the workspace. There are two valid\n                        values: “ro” for read-only mode and “rw” for read-write mode.\"\n        volume_name:\n          type: string\n          description: The name of Docker volume that will be mounted into the\n            task’s container in order to make the workspace available.\n\n    task_volume:\n      title: Task Volume\n      type: object\n      properties:\n        mode:\n          type: string\n          description: \"Mode to use for mounting the volume. There are two valid\n                        values: “ro” for read-only mode and “rw” for read-write mode.\"\n        type:\n          type: string\n          description: \"The type of the volume: “volume” for normal Docker volume\n                        mounts and “host” for Docker host path mounts.\"\n        host_path:\n          type: string\n          description: \"The path on the host machine that should be mounted into\n                        the container. This field should only be specified when type is “host”.\"\n        driver:\n          type: string\n          description: \"Custom Docker volume driver to use for the volume. This\n                        field should only be specified when type is “volume”.\"\n        driver_opts:\n          type: object\n          description: \"Name and value of a Docker volume driver argument option\n                        that should be passed to the volume driver. This field should only\n                        be specified when type is “volume”.\"\n        additionalPropterties:\n          type: string\n      required:\n      - type\n      - mode\n\n    docker_param:\n      title: Docker Parameter\n      type: object\n      properties:\n        flag:\n          type: string\n          description: \"The command line flag (long form) to use for passing the\n            parameter without the preceding dashes (e.g. use “volume” for passing\n            “–volume=...”).\"\n          example: volume\n        value:\n          type: string\n          description: The value to pass to the parameter on the Docker command line.\n          \n    exe_output:\n      title: Execution Output\n      type: object\n      properties:\n        output_data:\n          type: array\n          items:\n            $ref: '#/components/schemas/output_file'\n    output_file:\n      title: Output File\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the output file\n        file_id:\n          type: integer\n          description: Unique ID of the file in the Scale system\n          \n    job_cancel_post:\n      title: Cancel Jobs Post\n      type: object\n      properties:\n        started:\n          type: string\n          format: date-time\n          description: Cancel only jobs that ran after this datetime\n          example: 2015-09-10T15:24:53.503Z\n        ended:\n          type: string\n          format: date-time\n          description: Cancel only jobs that ran before this datetime\n          example: 2015-09-10T15:24:53.503Z\n        status:\n          type: string\n          description: \"Cancel only jobs with this status.\n                        Choices: [QUEUED, RUNNING, FAILED, COMPLETED, CANCELED].\"\n        job_ids:\n          description: Cancel only jobs with these ids\n          type: array\n          items:\n            type: integer\n        job_type_ids:\n          description: Cancel only jobs with these job type ids\n          type: array\n          items:\n            type: integer\n        job_types:\n          description: Cancel only jobs with these job type name/version combos\n          type: array\n          items:\n            $ref: '#/components/schemas/job_type_key'\n        job_type_names:\n          description: Cancel only jobs with these job type names\n          type: array\n          items:\n            type: string\n        batch_ids:\n          description: Cancel only jobs with these batch ids\n          type: array\n          items:\n            type: integer\n        recipe_ids:\n          description: Cancel only jobs with these recipe ids\n          type: array\n          items:\n            type: integer\n        error_categories:\n          description: Cancel only jobs with an error in these categories\n          type: array\n          items:\n            type: string\n        error_ids:\n          description: Cancel only jobs with an error with one of these ids\n          type: array\n          items:\n            type: integer\n        is_superseded: \n          type: boolean\n          description: Cancel only jobs with matching is_superseded flag.\n\n    job_requeue_post:\n      title: Requeue Jobs Post\n      allOf:\n        - $ref: '#/components/schemas/job_cancel_post'\n        - type: object\n          properties:\n            priority:\n              type: integer\n              description: Change the priority of matching jobs when adding them\n                to the queue. Defaults to jobs current priority; lower number is higher priority.\n\n    job_type_key:\n      title: Job Type Key\n      type: object\n      required: [name, version]\n      properties:\n        name:\n          type: string\n          description: The job type name\n          example: my-job-type\n        version:\n          type: string\n          description: The job type version\n          example: 1.0.0\n\n    job_execution_log:\n      title: Job Execution Log\n      type: object\n      properties:\n        message:\n          type: string\n          description: The log message\n          example: INFO - Starting job execution\n        timestamp:\n          type: string\n          format: date-time\n          description: The ISO-8601 timestamp marking when the message was logged.\n          example: 2015-08-28T17:57:41.033Z\n        scale_order_num:\n          type: integer\n          description: A sequence number used to indicate correct log message\n            order when multiple messages share the same @timestamp value.\n          example: 1\n        scale_task:\n          type: integer\n          description: The ID of the Scale task that produced this log message.\n          example: 123\n        scale_job_exe:\n          type: string\n          description: The unique cluster ID of the Scale job execution that produced this log message\n          example: scale_job_1234_263x0\n        scale_node:\n          type: string\n          description: The host name of the Scale node that executed the Scale task \n          example: machine.com\n        stream:\n          type: string\n          description: Indicates which stream produced the log message, either “stdout” or “stderr”\n          example: stdout",
			"canonicalURL": "/github.com/ngageoint/scale@1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/-/blob/scale/docs/rest/v6/job.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ngageoint/scale/blob/1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/scale/docs/rest/v6/job.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: json: line 1:8409: json: cannot unmarshal Go value of type ogen.Spec: spec: json: unable to unmarshal Go value of type ogen.Properties: json: cannot handle JSON null with Go value of type *ogen.Properties within JSON value at \"/components/schemas/job_details/allOf/1/properties\": unexpected type null"
}