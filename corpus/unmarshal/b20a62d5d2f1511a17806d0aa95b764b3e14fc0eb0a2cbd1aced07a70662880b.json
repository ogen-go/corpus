{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ULCA-IN/ulca"
		},
		"file": {
			"name": "ulca-dataset-api-contract.yaml",
			"size": 0,
			"path": "backend/api/ulca-dataset-api/docs/ulca-dataset-api-contract.yaml",
			"byteSize": 27254,
			"content": "openapi: 3.0.1\ninfo:\n  title: Unified Language Contribution API (ULCA) documentation\n  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'\n  contact:\n    name: ekstep foundation\n    email: contact@ekstep.org\n  version: 0.7.0\nservers:\n- url: https://meity-auth.ulcacontrib.org\n  description: Production server (uses live data)\npaths:\n  /ulca/apis/v0/dataset/corpus/submit:\n    post:\n      tags:\n      - dataset-controller\n      operationId: datasetSubmit\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSubmitRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetSubmitResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      \n\n  /ulca/apis/v0/dataset/corpus/search:\n    post:\n      tags:\n      - dataset-controller\n      operationId: corpusSearch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetCorpusSearchRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetCorpusSearchResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/listByUserId:\n    get:\n      tags:\n      - dataset-controller\n      operationId: listByUserId\n      parameters:\n      - name: userId\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: startPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      - name: endPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetListByUserIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/getByServiceRequestNumber:\n    get:\n      tags:\n      - dataset-controller\n      operationId: datasetByServiceRequestNumber\n      parameters:\n      - name: serviceRequestNumber\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetByServiceReqNrResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/getByDatasetId:\n    get:\n      tags:\n      - dataset-controller\n      operationId: datasetById\n      parameters:\n      - name: datasetId\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetByIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/corpus/search/status:\n    get:\n      tags:\n      - dataset-controller\n      operationId: searchStatus\n      parameters:\n      - name: serviceRequestNumber\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/DatasetSearchStatusResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/dataset/corpus/search/listByUserId:\n    get:\n      tags:\n      - dataset-controller\n      operationId: searchListByUserId\n      parameters:\n      - name: userId\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: startPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      - name: endPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SearchListByUserIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v1/users/signup:\n    post:\n      tags:\n        - 'Create Users'\n      summary: 'REST API to register/create new user'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSignupRequest'\n        required: true\n      responses:\n        '200':\n          description: New user is created successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in user account creation.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user account creation.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n      \n  /v1/users/verify-user:\n    post:\n      tags:\n        - 'Verify Users'\n      summary: 'REST API to verify user account.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserVerificationRequest'\n        required: true\n      responses:\n        '200':\n          description: User has verified successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserVerificationResponse'\n        '400':\n          description: On input errors causing failure in user verification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user verification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n  \n  /v1/users/api-key-search:\n    post:\n      tags:\n        - 'Api-key-search'\n      summary: 'REST API key for search'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ApiKeySearchRequest'\n        required: true\n      responses:\n        '200':\n          description: apiKey search is successful.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ApiKeySearchResponse'\n        '400':\n          description: On input errors causing failure in auth token search.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in auth token search.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'   \n                \n  /v1/users/login:\n    post:\n      tags:\n        - 'Login'\n      summary: 'REST API to login'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLoginRequest'\n        required: true\n      responses:\n        '200':\n          description: Logged in successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserLoginResponse'\n        '400':\n          description: On input errors causing failure in user login.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user login.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error' \n                \n   \n  /v1/users/forgot-password:\n    post:\n      tags:\n        - 'Forgot Password'\n      summary: 'REST API for forgot password request'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ForgotPasswordRequest'\n        required: true\n      responses:\n        '200':\n          description: User has notfied successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in user notification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in user notification.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'          \n  /v1/users/reset-password:\n    post:\n      tags:\n        - 'Reset Password'\n      summary: 'REST API for resetting password'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n        required: true\n      responses:\n        '200':\n          description: Password updated successfully.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Status'\n        '400':\n          description: On input errors causing failure in password resetting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in password resetting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n  /v0/error/report:\n    post:\n      tags:\n        - 'Report Errors'\n      summary: 'REST API to get a downloadable reports on errors '\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReportRequest'\n        required: true\n      responses:\n        '200':\n          description: Request successfull.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ErrorReportResponse'\n        '400':\n          description: On input errors causing failure reporting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: On system level errors causing failure in reporting.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/Error'\n    \n                \ncomponents:\n  schemas:\n    DatasetSubmitRequest:\n      required:\n      - datasetName\n      - url\n      - userId\n      type: object\n      properties:\n        userId:\n          type: string\n        datasetName:\n          type: string\n        url:\n          type: string\n    Data:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n        datasetId:\n          type: string\n        timestamp:\n          type: string\n    DatasetSubmitResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/Data'\n    DatasetCorpusSearchRequest:\n      required:\n      - criteria\n      type: object\n      properties:\n        userId:\n          type: string\n        datasetType:\n          type: string\n          enum:\n          - parallel-corpus\n          - monolingual-corpus\n          - asr-corpus\n          - asr-unlabeled-corpus\n          - ocr-corpus\n          - document-layout-corpus\n        criteria:\n          $ref: '#/components/schemas/SearchCriteria'\n    SearchCriteria:\n      type: object\n      properties:\n        licence:\n          type: array\n          items:\n            type: string\n        minScore:\n          type: number\n          format: float\n        serviceRequestNumber:\n          type: string\n        targetLanguage:\n          type: array\n          items:\n            type: string\n        collectionMode:\n          type: array\n          items:\n            type: string\n        multipleContributors:\n          type: boolean\n        maxScore:\n          type: number\n          format: float\n        collectionSource:\n          type: array\n          items:\n            type: string\n        score:\n          type: number\n          format: float\n        domain:\n          type: array\n          items:\n            type: string\n        limit:\n          type: integer\n          format: int32\n        datasetId:\n          type: string\n        datasetType:\n          type: string\n        sourceLanguage:\n          type: array\n          items:\n            type: string\n        groupBy:\n          type: boolean\n        countOfTranslations:\n          type: integer\n          format: int32\n        originalSourceSentence:\n          type: boolean\n    DatasetCorpusSearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/Data'\n    DatasetListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetListByUserIdResponseDto'\n        count:\n          type: integer\n          format: int32\n        startPage:\n          type: integer\n          format: int32\n        endPage:\n          type: integer\n          format: int32\n    DatasetListByUserIdResponseDto:\n      type: object\n      properties:\n        datasetId:\n          type: string\n        serviceRequestNumber:\n          type: string\n        datasetName:\n          type: string\n        datasetType:\n          type: string\n        submittedOn:\n          type: string\n        status:\n          type: string\n    DatasetByServiceReqNrResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskTracker'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Code of the error\n        message:\n          type: string\n          description: Description of the error\n        cause:\n          type: object\n          description: Additional details related to the cause of the error\n        report:\n          type: string\n          description: Link to the error report file\n      description: Task Tracker entity\n    TaskTracker:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          description: Unique identifier of the service request\n        tool:\n          type: string\n          description: Tool updating this data\n          enum:\n          - download\n          - pseudo\n          - ingest\n          - validate\n          - publish\n          - search\n          - delete\n        id:\n          type: string\n        status:\n          type: string\n          description: Status of the task\n        details:\n          type: string\n          description: Details of the current status of the task\n        startTime:\n          type: string\n          description: ISO timestamp of the instance of the start of process\n        endTime:\n          type: string\n          description: ISO timestamp of the instance of the end of process\n        lastModified:\n          type: string\n          description: ISO timestamp of the instance of the end of process\n        error:\n          $ref: '#/components/schemas/Error'\n      description: Task Tracker entity\n    DatasetByIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/TaskTracker'\n    DatasetSearchStatusResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/Data'\n    SearchListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/SearchListByUserIdResponseDto'\n        count:\n          type: integer\n          format: int32\n        startPage:\n          type: integer\n          format: int32\n        endPage:\n          type: integer\n          format: int32\n    SearchListByUserIdResponseDto:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n        timestamp:\n          type: string\n        searchCriteria:\n          $ref: '#/components/schemas/SearchCriteria'\n        status:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaskTracker'\n    HttpErrorResponse:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: status code as encountered in the processing life-cycle\n          \n        message:\n          type: string\n          description: human understandable format\n        timestamp:\n          type: string\n          format: datetime\n    \n    UserSignupRequest:\n      type: object\n      required:\n        - firstName\n        - email\n        - password\n        - roles\n      properties:\n        firstName:\n         type: string\n         description: Firstname of the user to be registered.\n        lastName:\n          type: string\n          description: Lastname of the user to be registered.\n        email:\n          type: string\n          description: email of the user to be registered.\n        password:\n          type: string\n          description: password of the user to be registered.\n        roles:\n          type: array\n          description: Roles assigned to the user to be registered.\n          items:\n            type: string\n        phoneNo:\n          type: string\n          description: Mobile phone number of the user to be registered.\n    \n\n    \n    UserLoginRequest:\n      type: object\n      properties:\n        authenticator:\n          $ref: '#/components/schemas/Authenticator'\n        data:\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/UlcaLoginAuthenticator'\n            - $ref: '#/components/schemas/GmailLoginAuthenticator'\n    \n  \n\n    ApiKeySearchRequest:\n      type: object\n      properties:\n        key:\n          type: string\n          description: Unique auth token of verified user\n      description: Request for user records.\n\n\n    ForgotPasswordRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Unique email of the user.\n      description: Request for user records.\n    \n\n    ResetPasswordRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Unique email of the user.\n        password:\n          type: string\n          description: password to be updated\n\n\n    UserVerificationRequest:\n      type: object\n      properties:\n        email:\n          type: string\n          description: unique email value.\n        userID:\n          type: string\n          description: unique userid value.\n    \n        \n\n    User:\n      type: object\n      properties:\n        userID:\n          type: string\n          description: Unique 32-bit UUID per user.\n        firstName:\n          type: string\n          description: FirstName of the user.\n        lastName:\n          type: string\n          description: LastName of the user.\n        email:\n          type: string\n          description: email id of the user.\n        oauthId:\n          type: string\n          description: oauthId of the user.\n        oauthProvider:\n          type: string\n          description: oauthProvider of the user.\n        registeredTime:\n          type: string\n          description: UTC object indicating time of user signup. \n        activatedTime:\n          type: string\n          description: UTC object indicating time of user verification.\n        isVerified:\n          type: boolean\n          description: status of user verification.\n        isActive:\n          type: boolean\n          description: status of user activation.\n        phoneNo:\n          type: string\n          description: mobile number of the user\n        roles:\n          type: array\n          items:\n            type: string\n            \n          \n  \n    Role:\n      type: object\n      properties:\n        roleId:\n          type: string\n          description: Unique code per role.\n        name:\n          type: string\n          description: role name.\n        description:\n          type: string\n          description: Description of the role.\n  \n   \n  \n          \n    AuthData:\n      type: object\n      properties:\n        email:\n          type: string\n          description: email of the logged in user.\n        publicKey:\n          type: string\n          description: random uuid key to be used as public key for the logged in user.\n        privateKey:\n          type: string\n          description: hexadecimal uuid key for the logged in user for encrypting request data.\n          \n    UserData:\n      type: object\n      properties:\n        userKeys:\n          $ref: '#/components/schemas/AuthData'\n        userDetails:\n          $ref: '#/components/schemas/User'\n          \n          \n    Status:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          type: object\n          description: data returned by the request.\n        count:\n          type: integer\n          description: count of data items.\n    \n    UserVerificationResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/AuthData'\n        count:\n          type: integer\n          description: count of data items.\n    \n    UserLoginResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/UserData'\n        count:\n          type: integer\n          description: count of data items.\n    \n    ApiKeySearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: message returned after succesful request completion.\n        data:\n          $ref: '#/components/schemas/UserData'\n        count:\n          type: integer\n          description: count of data items.\n      \n   \n      \n    UlcaLoginAuthenticator:\n      type: object\n      properties:\n        email:\n          type: string\n          description: email of user\n        password:\n          type: string\n          description: password of user\n         \n    GmailLoginAuthenticator:\n      type: object\n      properties:\n        token_type:\n          type: string\n          description: token type\n        access_token:\n          type: string\n          description: token type\n        scope:\n          type: string\n          description: scope\n        login_hint:\n          type: string\n          description: login_hint\n        expires_in:\n          type: number\n          description: expires_in\n        id_token:\n          type: number\n          description: id_token \n        session_state:\n          type: object\n          description: session_state\n          properties:\n            extraQueryParams:\n              type: string\n              description: extraQueryParams\n            authuser:\n              type: number\n              description: authuser \n\n          \n  \n    Authenticator:\n      type: string\n      enum:\n        - ULCA\n        - GMAIL\n        - GITHUB\n        - FACEBOOK\n        - LINKEDIN\n    \n   \n  \n    Error:\n      type: object\n      properties:\n        errorID:\n          type: string\n          description: Unique UUID for the error.\n        code:\n          type: string\n          description: Unique code signifying the category for the error.\n        message:\n          type: string\n          description: User readable message pertaining to the error\n        timeStamp:\n          type: number\n          description: 13 digit epoch timestamp\n    ErrorReportRequest:\n      type: object\n      properties:\n        serviceRequestNumber:\n          type: string\n          description: Unique submission id.\n      description: Request for error report on a particular submission.\n\n    \n    ErrorReportResponse:\n      type: object\n      properties:\n        file:\n          type: string\n          description: File path to object store.\n        internal_file:\n          type: string\n          description: Internal file path.\n        serviceRequestNumber:\n          type: string\n          description: Unique id for dataset submission\n        time_stamp:\n          type: string\n          description: Report generated date and time.\n        count:\n          type: integer\n          description: Count of errors uploaded on to object store.\n        uploaded:\n          type: boolean\n          description: status of file upload.\n\n  securitySchemes:\n      apiKey:\n        type: apiKey\n        in: header\n        name: key\n      apiSig:\n        type: apiKey\n        in: header\n        name: sig\n        description: signed request url or body   \n        \nsecurity:\n  - apiKey: []\n    apiSig: []",
			"canonicalURL": "/github.com/ULCA-IN/ulca@8cab1c6955a2e727d8d573356122edc0ea02948d/-/blob/backend/api/ulca-dataset-api/docs/ulca-dataset-api-contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ULCA-IN/ulca/blob/8cab1c6955a2e727d8d573356122edc0ea02948d/backend/api/ulca-dataset-api/docs/ulca-dataset-api-contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 972: mapping key \"Error\" already defined at line 581"
}