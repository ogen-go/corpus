{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/broadinstitute/firecloud-orchestration"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "src/main/resources/swagger/api-docs.yaml",
			"byteSize": 339104,
			"content": "openapi: 3.0.1\ninfo:\n  title: Terra\n  description: |\n    Terra API\n  termsOfService: https://app.terra.bio/#terms-of-service\n  license:\n    name: BSD\n    url: http://opensource.org/licenses/BSD-3-Clause\n  version: \"0.1\"\nservers:\n  - url: /\ntags:\n  - name: Billing\n  - name: BillingV2\n  - name: CromIAM Engine (for Job Manager)\n  - name: CromIAM Workflows (for Admin)\n  - name: CromIAM Workflows (for Job Manager)\n  - name: Entities\n  - name: GA4GH Tool Registry\n  - name: Groups\n  - name: Library\n  - name: Method Configurations\n  - name: Method Repository\n  - name: NIH\n  - name: Notifications\n  - name: OAuth\n  - name: Profile\n  - name: Service Perimeters\n  - name: ShareLog\n  - name: Static Notebooks\n  - name: Status\n  - name: Storage\n  - name: Submissions\n  - name: Terms of Service\n  - name: Version\n  - name: Womtool\n  - name: Workspaces\nsecurity:\n  - googleoauth:\n      - openid\n      - email\n      - profile\n  - oidc:\n      - openid\n      - email\n      - profile\npaths:\n  /api/billing:\n    post:\n      tags:\n        - Billing\n      summary: create billing project in Terra and google\n      operationId: createBillingProjectFull\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'\n        required: true\n      responses:\n        204:\n          description: Successfully Created Billing Project in Terra and Google\n          content: {}\n        400:\n          description: Terra billing user must be an admin of the billing account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be an admin of the google billing account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in Terra or google\n          content: {}\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: createProjectRequest\n  /api/billing/{projectId}/members:\n    get:\n      tags:\n        - Billing\n      summary: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/billing/v2/{projectId}/spendReportConfiguration:\n    get:\n      tags:\n        - BillingV2\n      summary: get the spend report configuration for the billing project\n      description: get the spend report configuration for the billing project\n      operationId: getSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully retrieved spend report configuration\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SpendReportConfiguration'\n        204:\n          description: The specified billing project exists but does not have spend reporting configured\n        403:\n          description: You must be a billing project owner to view the spend report configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: The specified billing project could not be found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n    put:\n      tags:\n        - BillingV2\n      summary: set the spend configuration for the billing project\n      description: set the spend configuration for the billing project\n      operationId: setSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: billing project spend configuration information\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SpendReportConfiguration'\n      responses:\n        204:\n          description: Successfully updated spend configuration\n        400:\n          description: Either the billing project does not have an active billing account, the specified dataset does not exist, or the specified table does not exist\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a billing project owner to alter the spend configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: The specified billing project could not be found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - BillingV2\n      summary: clear the spend configuration for the billing project\n      description: clear the spend configuration for the billing project\n      operationId: clearSpendReportConfiguration\n      parameters:\n        - name: projectId\n          in: path\n          description: Billing Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully cleared spend configuration\n        403:\n          description: You must be a billing project owner to alter the spend configuration of the billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/billing/{projectId}/{workbenchRole}/{email}:\n    put:\n      tags:\n        - Billing\n      summary: add user to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User To Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - Billing\n      summary: remove user from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n          content: {}\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/billing/v2:\n    post:\n      tags:\n        - BillingV2\n      summary: create billing project in rawls\n      description: create new billing project in rawls\n      operationId: createBillingProjectFullV2\n      requestBody:\n        description: create project request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CreateRawlsV2BillingProjectFullRequest'\n        required: true\n      responses:\n        201:\n          description: Successfully Created Billing Project in Terra\n        400:\n          description: both you and Terra billing user must be a user of the billing account\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: project already exists in rawls\n          content: {}\n        500:\n          description: FireCloud Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-codegen-request-body-name: createProjectRequest\n  /api/billing/v2/{projectId}:\n    get:\n      tags:\n        - BillingV2\n      summary: get billing project\n      description: get billing project\n      operationId: getBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/BillingProjectResponse'\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - BillingV2\n      summary: delete billing project\n      description: delete billing project\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: OK\n        404:\n          description: Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/billingAccount:\n    put:\n      tags:\n        - BillingV2\n      summary: update billing account on billing project\n      description: Update the Billing Account on the Billing Project and on each Workspace in the Billing Project\n      operationId: updateBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: update billing account request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UpdateRawlsBillingAccountRequest'\n        required: true\n      responses:\n        200:\n          description: Billing Account on Billing Project is successfully updated and process is started to update the Billing Account on each Workspace in the Billing Project\n        400:\n          description: Billing account not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Billing Project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - BillingV2\n      summary: deletes the billing account on billing project\n      description: Clears the Billing Account on the Billing Project and on each Workspace in the Billing Project\n      operationId: deleteBillingProjectBillingAccount\n      parameters:\n        - name: projectId\n          in: path\n          description: Id of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Billing account successfully removed\n        404:\n          description: Billing project Not Found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Server Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/billing/v2/{projectId}/members:\n    get:\n      tags:\n        - BillingV2\n      summary: list members of billing project the caller owns\n      description: list members of billing project the caller owns\n      operationId: listBillingProjectMembers\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMember'\n        403:\n          description: You must be a project owner to view the members of a project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/billing/v2/{projectId}/members/{workbenchRole}/{email}:\n    put:\n      tags:\n        - BillingV2\n      summary: add user or group to billing project the caller owns\n      description: add user or group to billing project the caller owns\n      operationId: addUserToBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Added User/Group To Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n    delete:\n      tags:\n        - BillingV2\n      summary: remove user or group from billing project the caller owns\n      description: remove user or group from billing project the caller owns\n      operationId: removeUserFromBillingProject\n      parameters:\n        - name: projectId\n          in: path\n          description: Project ID\n          required: true\n          schema:\n            type: string\n        - name: workbenchRole\n          in: path\n          description: role of user for project\n          required: true\n          schema:\n            type: string\n            enum:\n              - user\n              - owner\n        - name: email\n          in: path\n          description: email of user or group to remove\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully Removed User From Billing Project\n        403:\n          description: You must be a project owner to add a user to a billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/user/billing/{projectName}:\n    delete:\n      tags:\n        - Billing\n      summary: delete billing project\n      description: delete billing project\n      operationId: deleteBillingProject\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully delete billing project\n          content: {}\n        400:\n          description: Project cannot be deleted because it contains workspaces.\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: You must be a project owner to delete billing project\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - authorization:\n            - openid\n            - email\n            - profile\n  /api/configurations:\n    get:\n      tags:\n        - Method Repository\n      summary: |\n        List Method Repository configurations.\n      description: |\n        The configurations endpoint returns all configurations the requester\n        has permissions to read that fit the filter criteria.\n      operationId: listMethodRepositoryConfigurations\n      parameters:\n        - name: namespace\n          in: query\n          description: Namespace of configuration.\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Name of configuration.\n          schema:\n            type: string\n        - name: snapshotId\n          in: query\n          description: Snapshot ID of configuration.\n          schema:\n            type: integer\n            format: int32\n        - name: snapshotComment\n          in: query\n          description: Snapshot comment of AgoraEntity\n          schema:\n            type: string\n        - name: synopsis\n          in: query\n          description: Synopsis of configuration.\n          schema:\n            type: string\n        - name: documentation\n          in: query\n          description: Documentation of configuration.\n          schema:\n            type: string\n        - name: owner\n          in: query\n          description: Owner of configuration.\n          schema:\n            type: string\n        - name: payload\n          in: query\n          description: Payload of configuration in WDL.\n          schema:\n            type: string\n        - name: entityType\n          in: query\n          description: Type of configuration - Task or Workflow\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of configurations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConfigurationResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n    post:\n      tags:\n        - Method Repository\n      summary: Add a configuration.\n      description: |\n        Inserts a method configuration into the method repository and\n        gives the owner full access permissions. Must supply a namespace,\n        name, payload, and entityType. Cannot supply a snapshotId\n      requestBody:\n        description: Agora Entity\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/ConfigurationQuery'\n        required: false\n      responses:\n        201:\n          description: Method successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationResponse'\n        400:\n          description: Malformed input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n      x-codegen-request-body-name: body\n  /api/configurations/{namespace}/{name}/{snapshotId}:\n    get:\n      tags:\n        - Method Repository\n      summary: Get a Method Repository configuration\n      operationId: getMethodRepositoryConfiguration\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method Configuration snapshot ID\n          required: true\n          schema:\n            type: string\n        - name: payloadAsObject\n          in: query\n          description: Instead of returning a string under key payload, return a JSON\n            object under key payloadObject\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Method Repository configuration detail\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigurationResponse'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n    delete:\n      tags:\n        - Method Repository\n      summary: Redact a single configuration.\n      description: |\n        Redacts a configuration and all of its associated configurations\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method Configuration snapshot ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            An integer showing how many configurations were deleted. Should be 1.\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Error upon redaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /api/configurations/{namespace}/{name}/{snapshotId}/permissions:\n    get:\n      tags:\n        - Method Repository\n      summary: get ACL permissions on a Method Repository configuration\n      operationId: getConfigACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method Configuration snapshot ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: the indicated configuration ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Method Repository\n      summary: set ACL permissions on a Method Repository configuration\n      operationId: setConfigACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method Configuration snapshot ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: the ACLs to upsert\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigACL'\n        required: true\n      responses:\n        200:\n          description: the indicated configuration ACL once the posted changes have\n            been applied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        400:\n          description: Bad Request\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: payload\n  /api/configurations/{namespace}/permissions:\n    get:\n      tags:\n        - Method Repository\n      summary: get ACL permissions on a Method Repository Configuration Namespace\n      operationId: getConfigNamespaceACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of the indicated configuration namespace ACL permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        403:\n          description: user does not have correct permissions to manage namespace\n            permissions or the indicated namespace was not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Method Repository\n      summary: set ACL permissions on a Method Repository Configuration Namespace\n      operationId: setConfigNamespaceACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: the ACLs to upsert\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigACL'\n        required: true\n      responses:\n        200:\n          description: the indicated configuration ACL once the posted changes have\n            been applied\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodConfigACL'\n        400:\n          description: Invalid content format\n          content: {}\n        403:\n          description: User does not have correct permissions to manage namespace\n            permissions or the indicated namespace was not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: payload\n  /api/groups:\n    get:\n      tags:\n        - Groups\n      summary: get the list of the groups that the caller is a member of\n      operationId: getGroups\n      responses:\n        200:\n          description: Successfully listed group membership\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ManagedGroupAccessResponse'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n  /api/workflows/{version}/{id}/abort:\n    post:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Abort a workflow based on workflow id\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: id\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowStatusResponse'\n        400:\n          description: Malformed Workflow ID\n          content: {}\n        403:\n          description: Workflow in terminal status\n          content: {}\n        404:\n          description: Workflow ID Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /api/workflows/{version}/{id}/backend/metadata/{backendId}:\n    get:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Get backend (e.g. PAPI) metadata for a job\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: id\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n        - name: backendId\n          in: path\n          description: Backend ID, must be a job that is part of the workflow\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request, format is backend dependent\n          content: {}\n        404:\n          description: Workflow or Backend ID Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workflows/{version}/{id}/labels:\n    patch:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Add new labels or update values for existing label keys by workflow\n        id.\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: id\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: |\n          Custom labels submitted as JSON. Example: {\"key-1\":\"value-1\",\"key-2\":\"value-2\"}\n        content:\n          'application/json':\n            schema:\n              type: object\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelsResponse'\n        400:\n          description: Malformed Workflow ID\n          content: {}\n        404:\n          description: Workflow ID Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: cromiam\n      x-codegen-request-body-name: labels\n  /api/workflows/{version}/{id}/metadata:\n    get:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Query for workflow and call-level metadata for a specified workflow\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: id\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n        - name: includeKey\n          in: query\n          description: |\n            When specified key(s) to include from the metadata. Matches any key starting with the value. May not be used with excludeKey.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: excludeKey\n          in: query\n          description: |\n            When specified key(s) to exclude from the metadata. Matches any key starting with the value. May not be used with includeKey.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: expandSubWorkflows\n          in: query\n          description: |\n            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowMetadataResponse'\n            workflowName:\n              example: example\n            calls:\n              example:\n                example.gather:\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stdout\n                    shardIndex: -1\n                    outputs:\n                      str: |-\n                        _one_\n                        _two_\n                        _three_\n                        _four_\n                    inputs:\n                      array: analysis.out\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:23.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stderr\n                    executionEvents:\n                      - description: execution event - only one in this call, some calls\n                          might have none!\n                        startTime: 2015-12-11T16:53:23.000-05:00\n                        endTime: 2015-12-11T16:53:23.000-05:00\n                    start: 2015-12-11T16:53:23.000-05:00\n                example.prepare:\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stdout\n                    shardIndex: -1\n                    outputs:\n                      array:\n                        - one\n                        - two\n                        - three\n                        - four\n                    inputs: {}\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:22.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stderr\n                    executionEvents: []\n                    start: 2015-12-11T16:53:21.000-05:00\n                example.analysis:\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stdout\n                    shardIndex: 0\n                    outputs:\n                      out: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt\n                    inputs:\n                      str: x\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:23.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stderr\n                    executionEvents: []\n                    start: 2015-12-11T16:53:22.000-05:00\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stdout\n                    shardIndex: 1\n                    outputs:\n                      out: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt\n                    inputs:\n                      str: x\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:23.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stderr\n                    executionEvents: []\n                    start: 2015-12-11T16:53:22.000-05:00\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stdout\n                    shardIndex: 2\n                    outputs:\n                      out: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt\n                    inputs:\n                      str: x\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:23.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stderr\n                    executionEvents: []\n                    start: 2015-12-11T16:53:22.000-05:00\n                  - executionStatus: Done\n                    stdout: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stdout\n                    shardIndex: 3\n                    outputs:\n                      out: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt\n                    inputs:\n                      str: x\n                    returnCode: 0\n                    backend: Local\n                    end: 2015-12-11T16:53:23.000-05:00\n                    stderr: /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stderr\n                    executionEvents: []\n                    start: 2015-12-11T16:53:22.000-05:00\n            outputs:\n              example:\n                example.analysis.out:\n                  - /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt\n                  - /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt\n                  - /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt\n                  - /cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt\n                example.gather.str: |-\n                  _one_\n                  _two_\n                  _three_\n                  _four_\n                example.prepare.array:\n                  - one\n                  - two\n                  - three\n                  - four\n            id:\n              example: e552029e-4b9a-48e9-b11f-6e5d6d0dccc4\n            inputs:\n              example:\n                test.hello.name: chris\n                blah2.grep.pattern: h\n                blah2.cat.asdf: gs://cromwell-root/blah/c0c116ef-aac6-4029-8d0a-70d86b17c843/call-ls/job.stdout.txt\n                blah.grep.pattern: v\n                blah.ls.pattern: ./\n            submission:\n              example: 2015-12-11T16:53:21.000-05:00\n            status:\n              example: Succeeded\n            end:\n              example: 2015-12-11T16:53:23.000-05:00\n            start:\n              example: 2015-12-11T16:53:21.000-05:00\n        400:\n          description: Malformed Workflow ID\n          content: {}\n        404:\n          description: Workflow ID Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /api/workflows/{version}/{id}/releaseHold:\n    post:\n      tags:\n        - CromIAM Workflows (for Admin)\n      summary: Request Cromwell to release the hold on a workflow. It will switch\n        the status of a workflow from ‘On Hold’ to ‘Submitted’ so it can be picked\n        for running. For instance this might be necessary in cases where you have\n        submitted a workflow with workflowOnHold = true.\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: id\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowStatusResponse'\n        400:\n          description: Malformed Workflow ID\n          content: {}\n        403:\n          description: Malformed Request\n          content: {}\n        404:\n          description: Workflow ID Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /api/workflows/{version}/callcaching/diff:\n    get:\n      tags:\n        - CromIAM Workflows (for Admin)\n      summary: Return the hash differential between two calls\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: workflowA\n          in: query\n          description: Workflow Id of the first workflow\n          required: true\n          schema:\n            type: string\n        - name: callA\n          in: query\n          description: Call FQN (including workflow name) of the first call\n          required: true\n          schema:\n            type: string\n        - name: indexA\n          in: query\n          description: Index of the first call\n          schema:\n            type: number\n        - name: workflowB\n          in: query\n          description: Workflow Id of the second workflow\n          required: true\n          schema:\n            type: string\n        - name: callB\n          in: query\n          description: Call FQN (including workflow name) of the second call\n          required: true\n          schema:\n            type: string\n        - name: indexB\n          in: query\n          description: Index of the second call\n          schema:\n            type: number\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowCacheDiffResponse'\n        400:\n          description: Malformed query parameters\n          content: {}\n        404:\n          description: No matching cache entry\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n  /api/workflows/{version}/query:\n    get:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Query workflows by start dates, end dates, names, ids, or statuses.\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n        - name: start\n          in: query\n          description: |\n            Returns only workflows with an equal or later start datetime.  Can be specified at most once. If both start and end date are specified, start date must be before or equal to end date.\n          schema:\n            type: string\n            format: date-time\n        - name: end\n          in: query\n          description: |\n            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once. If both start and end date are specified, start date must be before or equal to end date.\n          schema:\n            type: string\n            format: date-time\n        - name: status\n          in: query\n          description: |\n            Returns only workflows with the specified status.  If specified multiple times, returns workflows in any of the specified statuses.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n            enum:\n              - Submitted\n              - Running\n              - Aborting\n              - Failed\n              - Succeeded\n              - Aborted\n        - name: name\n          in: query\n          description: |\n            Returns only workflows with the specified name.  If specified multiple times, returns workflows with any of the specified names.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: id\n          in: query\n          description: |\n            Returns only workflows with the specified workflow id.  If specified multiple times, returns workflows with any of the specified workflow ids.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowQueryResponse'\n        403:\n          description: Malformed Request\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: cromiam\n    post:\n      tags:\n        - CromIAM Workflows (for Job Manager)\n      summary: Query workflows by start dates, end dates, names, ids, or statuses.\n      parameters:\n        - name: version\n          in: path\n          description: API version\n          required: true\n          schema:\n            type: string\n            default: v1\n      requestBody:\n        description: |\n          Same query parameters as GET /query endpoint, submitted as a json list. Example: [{\"status\":\"Success\"},{\"status\":\"Failed\"}]\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkflowQueryParameter'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowQueryResponse'\n        400:\n          description: Malformed Request\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: cromiam\n      x-codegen-request-body-name: parameters\n  /api/womtool/{version}/describe:\n    post:\n      tags:\n        - Womtool\n      summary: Machine-readable description of a workflow, including inputs and outputs\n      operationId: describe\n      parameters:\n        - name: version\n          in: path\n          description: Cromwell API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                workflowSource:\n                  type: string\n                  description: The workflow source file to submit for execution. Either\n                    workflow source or workflow url is required.\n                  format: binary\n                workflowUrl:\n                  type: string\n                  description: URL which points to the workflow. Either workflow source\n                    or workflow url is required.\n                workflowInputs:\n                  type: string\n                  description: JSON or YAML file containing the inputs as an object.\n                  format: binary\n                workflowType:\n                  type: string\n                  description: The workflow language for the file you submitted. Cromwell\n                    currently supports WDL and CWL.\n                  enum:\n                    - WDL\n                    - CWL\n                workflowTypeVersion:\n                  type: string\n                  description: The specification version for the workflow language\n                    being used. For WDL, Cromwell currently supports draft-2 and 1.0.\n                    For CWL, Cromwell currently supports v1.0.\n                  enum:\n                    - draft-2\n                    - \"1.0\"\n                    - v1.0\n      responses:\n        200:\n          description: Workflow description.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowDescription'\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /engine/{version}/version:\n    get:\n      tags:\n        - CromIAM Engine (for Job Manager)\n      summary: Returns the version of the Cromwell Engine\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /engine/{version}/status:\n    get:\n      tags:\n        - CromIAM Engine (for Job Manager)\n      summary: Returns the current health status of any monitored subsystems\n      parameters:\n        - name: version\n          in: path\n          description: API Version\n          required: true\n          schema:\n            type: string\n            default: v1\n      responses:\n        200:\n          description: All subsystems report an \"ok\" status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n        500:\n          description: At least one subsystem does not have an \"ok\" status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n      x-passthrough: true\n      x-passthrough-target: cromiam\n  /api/groups/{groupName}:\n    get:\n      tags:\n        - Groups\n      summary: view the members in a group\n      operationId: getGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successfully loaded group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedGroupWithMembers'\n        403:\n          description: You must be an admin of this group in order to view members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n    post:\n      tags:\n        - Groups\n      summary: create a new group\n      operationId: createGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        201:\n          description: Successfully created group\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedGroupWithMembers'\n        409:\n          description: Group already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n    delete:\n      tags:\n        - Groups\n      summary: delete a group that the caller owns\n      operationId: deleteGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully Deleted Group\n          content: {}\n        403:\n          description: You must be an admin of this group in order to delete it\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Group is in use and cannot be deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n  /api/groups/{groupName}/requestAccess:\n    post:\n      tags:\n        - Groups\n      summary: request access to a group\n      operationId: requestAccessToGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully requested access\n          content: {}\n        404:\n          description: Group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n  /api/groups/{groupName}/{role}/{email}:\n    put:\n      tags:\n        - Groups\n      summary: add a user to a group the caller owns\n      operationId: addUserToGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for group\n          required: true\n          schema:\n            type: string\n            enum:\n              - member\n              - admin\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully Added User To Group\n          content: {}\n        403:\n          description: You must be an admin of this group in order to add members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n    delete:\n      tags:\n        - Groups\n      summary: remove a user from a group the caller owns\n      operationId: removeUserFromGroup\n      parameters:\n        - name: groupName\n          in: path\n          description: Group name\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: role of user for group\n          required: true\n          schema:\n            type: string\n            enum:\n              - member\n              - admin\n        - name: email\n          in: path\n          description: email of user or group to add\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Successfully Removed User From Group\n          content: {}\n        403:\n          description: You must be an admin of this group in order to remove members\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: FireCloud Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n  /api/inputsOutputs:\n    post:\n      tags:\n        - Method Repository\n      summary: Get information about a method's inputs and outputs\n      operationId: getMethodIO\n      requestBody:\n        description: name of Method to look up\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodID'\n        required: true\n      responses:\n        200:\n          description: Method Configuration inputs and outputs\n          content: {}\n        400:\n          description: Method WDL can't be parsed\n          content: {}\n        404:\n          description: No Such Method\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: methodName\n  /api/library/admin/reindex:\n    post:\n      tags:\n        - Library\n      summary: |\n        deletes and rebuilds the entire index of published library datasets\n      operationId: reindexAll\n      responses:\n        200:\n          description: Indexing Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LibraryBulkIndexResponse'\n        204:\n          description: No published datasets exist to index\n          content:\n            application/json:\n              schema:\n                type: string\n        500:\n          description: Indexing Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LibraryBulkIndexResponse'\n      x-passthrough: false\n  /api/library/groups:\n    get:\n      tags:\n        - Library\n      summary: |\n        returns groups that can be used for discoverable datasets\n      operationId: groups\n      responses:\n        200:\n          description: Names of the allowed groups\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n      x-passthrough: false\n  /api/library/search:\n    post:\n      tags:\n        - Library\n      summary: |\n        searches published library datasets\n      operationId: FindDocuments\n      requestBody:\n        description: Search terms and pagination parameters\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SearchTermRef'\n        required: false\n      responses:\n        200:\n          description: Matching datasets\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: searchParams\n  /api/library/suggest:\n    post:\n      tags:\n        - Library\n      summary: |\n        search suggestions\n      operationId: searchSuggest\n      requestBody:\n        description: Search terms and pagination parameters\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SearchTermRef'\n        required: false\n      responses:\n        200:\n          description: Search suggestions, with highlighting\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: searchParams\n  /api/library/populate/suggest/{field}:\n    get:\n      tags:\n        - Library\n      summary: |\n        suggestions for populating a field\n      operationId: populateSuggest\n      parameters:\n        - name: field\n          in: path\n          description: the property to get suggestions for\n          required: true\n          schema:\n            type: string\n        - name: q\n          in: query\n          description: the initial text to complete\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Field specific suggestions\n          content: {}\n        400:\n          description: Bad Request, specified field that was not configured for suggestions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n  /api/library/user/role/curator:\n    get:\n      tags:\n        - Profile\n      summary: Query to see if you're a library curator\n      description: gets the curator status of a user\n      operationId: isCurator\n      responses:\n        200:\n          description: are you a curator?\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CuratorStatus'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n  /api/library/{workspaceNamespace}/{workspaceName}/discoverableGroups:\n    get:\n      tags:\n        - Library\n      summary: |\n        get the groups that can discover this library dataset\n      operationId: getDiscoverableGroups\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The groups that can discover the dataset\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        403:\n          description: Insufficient permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n    put:\n      tags:\n        - Library\n      summary: |\n        set the groups that can discover this library dataset\n      operationId: updateDiscoverableGroups\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Json array of group names, or empty array for no restrictions\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/StringArray'\n        required: true\n      responses:\n        200:\n          description: The workspace, after assigning groups to be able to discover\n            the dataset\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workspace'\n        400:\n          description: Invalid input\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Insufficient permissions to change catalog permissions (must\n            be owner or have grant or catalog with access to the workspace)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, user or group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n      x-codegen-request-body-name: discoverableGroups\n  /api/library/{workspaceNamespace}/{workspaceName}/metadata:\n    get:\n      tags:\n        - Library\n      summary: |\n        get the entire metadata for a library dataset\n      operationId: getLibraryMetadata\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LibraryMetadataInput'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n    put:\n      tags:\n        - Library\n      summary: |\n        put the entire metadata for a library dataset\n      operationId: putLibraryMetadata\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: validate\n          in: query\n          description: |\n            Should the payload be validated? Validation is always enabled for published datasets and defaults to false for unpublished datasets.\n          schema:\n            type: boolean\n      requestBody:\n        description: Library metadata\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/LibraryMetadataInput'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workspace'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n      x-codegen-request-body-name: libraryMetadataJson\n  /api/library/{workspaceNamespace}/{workspaceName}/published:\n    post:\n      tags:\n        - Library\n      summary: |\n        publish the workspace in the Library\n      operationId: publishLibraryWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workspace'\n        204:\n          description: Dataset already in requested published state\n          content: {}\n        403:\n          description: You must be the workspace owner and library curator to publish\n            a workspace to the library\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n    delete:\n      tags:\n        - Library\n      summary: |\n        unpublish the workspace in the Library\n      operationId: unpublishLibraryWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Workspace'\n        403:\n          description: You must be the workspace owner and library curator to unpublish\n            a workspace from the library\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n  /api/methods:\n    get:\n      tags:\n        - Method Repository\n      summary: |\n        Lists Method Repository methods.\n      operationId: listMethodRepositoryMethods\n      parameters:\n        - name: namespace\n          in: query\n          description: Namespace of method.\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: Name of method.\n          schema:\n            type: string\n        - name: snapshotId\n          in: query\n          description: Snapshot ID of method.\n          schema:\n            type: integer\n            format: int32\n        - name: snapshotComment\n          in: query\n          description: Snapshot comment of AgoraEntity\n          schema:\n            type: string\n        - name: synopsis\n          in: query\n          description: Synopsis of method.\n          schema:\n            type: string\n        - name: documentation\n          in: query\n          description: Documentation of method.\n          schema:\n            type: string\n        - name: owner\n          in: query\n          description: Owner of method.\n          schema:\n            type: string\n        - name: payload\n          in: query\n          description: Payload of method in WDL.\n          schema:\n            type: string\n        - name: entityType\n          in: query\n          description: Type of Method - Task or Workflow\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of methods.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n    post:\n      tags:\n        - Method Repository\n      summary: Add a Method.\n      description: |\n        Inserts a method into the method repository and\n        gives the owner full access permissions. Must supply a namespace\n        name, payload, and entityType. Cannot supply a snapshotId\n      requestBody:\n        description: Agora Entity\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodQuery'\n        required: false\n      responses:\n        201:\n          description: Method successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        400:\n          description: Malformed input.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        500:\n          description: Internal error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n      x-codegen-request-body-name: body\n  /api/methods/definitions:\n    get:\n      tags:\n        - Method Repository\n      summary: List method definitions\n      description: |\n        List method definitions - i.e. unique namespace/name pairs - with counts\n        of snapshots and associated configurations\n      responses:\n        200:\n          description: An array of method definitions.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodDefinition'\n        500:\n          description: Internal error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /api/methods/{namespace}/{name}/configurations:\n    get:\n      tags:\n        - Method Repository\n      summary: List configurations associated with a method\n      description: |\n        Given the namespace/name of a method, returns all configurations\n        in the repository that reference that method\n      parameters:\n        - name: namespace\n          in: path\n          description: Namespace of method.\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Name of method.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of configurations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConfigurationResponseWithPayloadObject'\n        404:\n          description: Method not found.\n          content: {}\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /api/methods/{namespace}/{name}/{snapshotId}:\n    get:\n      tags:\n        - Method Repository\n      summary: Find a single method.\n      description: |\n        Returns one method that matches the namespace,\n        name, and snapshotId.\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n        - name: onlyPayload\n          in: query\n          description: Boolean to return only the payload of the method.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: A single method.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n    post:\n      tags:\n        - Method Repository\n      summary: Create a new snapshot of an existing Method.\n      description: |\n        Inserts a new snapshot of the method into the method repository and\n        copies access permissions from previous snapshot, optionally redacting\n        the source snapshot. Documentation, synopsis, and payload are the only\n        arguments considered for the new snapshot; everything else is copied\n        from the source.\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n        - name: redact\n          in: query\n          description: Should the source method be redacted?\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Agora Entity\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                synopsis:\n                  type: string\n                  description: Synopsis which contains AgoraEntity.\n                  default: Quickly aligns short nucleotide sequences.\n                documentation:\n                  type: string\n                  description: Documentation of the AgoraEntity.\n                  default: |\n                    BWA is a software package for mapping low-divergent sequences\n                    against a large reference genome, such as the human genome.\n                    It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n                payload:\n                  type: string\n                  description: Payload of method -- must be in WDL format\n                  default: |\n                    task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}\n                snapshotComment:\n                  type: string\n                  description: Snapshot comment of the AgoraEntity\n                  default: Improve spline reticulation\n        required: false\n      responses:\n        200:\n          description: Method successfully copied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        206:\n          description: Method successfully copied, but error while redacting.\n          content: {}\n        400:\n          description: Malformed input.\n          content: {}\n        403:\n          description: Forbidden to create copy.\n          content: {}\n        404:\n          description: Source snapshot not found.\n          content: {}\n        500:\n          description: Internal error.\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: agora\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Method Repository\n      summary: Redact a single method.\n      description: |\n        Redacts a method and all of its associated configurations\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: |\n            An integer showing how many methods were deleted.\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int32\n        default:\n          description: Error upon redaction\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /api/methods/{namespace}/{name}/{snapshotId}/configurations:\n    get:\n      tags:\n        - Method Repository\n      summary: List compatible configurations for this method snapshot\n      description: |\n        Returns all configurations that 1. have the exact same input and output\n        arguments as the supplied method snapshot, and 2. reference any snapshot\n        of this method.\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of configurations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConfigurationResponseWithPayloadObject'\n        404:\n          description: Method not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /api/methods/{namespace}/{name}/{snapshotId}/permissions:\n    get:\n      tags:\n        - Method Repository\n      summary: get ACL permissions on a Method Repository method\n      operationId: getMethodACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: the indicated method ACL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Method Repository\n      summary: set ACL permissions on a Method Repository method\n      operationId: setMethodACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n        - name: name\n          in: path\n          description: Method Name\n          required: true\n          schema:\n            type: string\n        - name: snapshotId\n          in: path\n          description: Method snapshot ID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: the ACLs to upsert\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigACL'\n        required: true\n      responses:\n        200:\n          description: the indicated method ACL once the posted changes have been\n            applied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        400:\n          description: Bad Request\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: payload\n  /api/methods/{namespace}/permissions:\n    get:\n      tags:\n        - Method Repository\n      summary: get ACL permissions on a Method Repository Method Namespace\n      operationId: getMethodNamespaceACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of indicated method namespace ACL permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        403:\n          description: user does not have correct permissions to manage namespace\n            permissions or the indicated namespace was not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Method Repository\n      summary: set ACL permissions on a Method Repository Method Namespace\n      operationId: setMethodNamespaceACL\n      parameters:\n        - name: namespace\n          in: path\n          description: Method Namespace\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: the ACLs to upsert\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigACL'\n        required: true\n      responses:\n        200:\n          description: the indicated method namespace ACL permissions once the posted\n            changes have been applied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodConfigACL'\n        400:\n          description: Invalid content format\n          content: {}\n        403:\n          description: User does not have correct permissions to manage namespace\n            permissions or the indicated namespace was not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: payload\n  /api/methods/permissions:\n    put:\n      tags:\n        - Method Repository\n      summary: set ACLs for multiple methods in one call\n      operationId: multiUpsertMethodsACL\n      requestBody:\n        description: method acls to upsert\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/MethodAclPair'\n        required: true\n      responses:\n        200:\n          description: the indicated method namespace ACL permissions once the posted\n            changes have been applied\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodAclPair'\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MethodAclPair'\n        400:\n          description: Invalid content format\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: methodacls\n  /api/nih/callback:\n    post:\n      tags:\n        - NIH\n      summary: Updates a user's NIH link from a JWT\n      operationId: NIHCallback\n      requestBody:\n        description: JWT from NIH login\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/JWTWrapper'\n        required: true\n      responses:\n        200:\n          description: Successfully updated NIH link\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NihStatus'\n        400:\n          description: Invalid or malformed JWT\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        500:\n          description: Internal server error saving NIH link to profile\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: jwt\n  /api/nih/status:\n    get:\n      tags:\n        - NIH\n      summary: Retrieves info about a user's NIH link\n      operationId: NIHStatus\n      responses:\n        200:\n          description: Successfully retrieved NIH status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NihStatus'\n        404:\n          description: linkedNihUsername key missing from status\n          content: {}\n        500:\n          description: Internal server error retrieving NIH status\n          content: {}\n      x-passthrough: false\n  /api/nih/account:\n    delete:\n      tags:\n        - NIH\n      summary: Unlinks a user's NIH account from their Terra account\n      operationId: NIHUnlink\n      responses:\n        204:\n          description: Successfully unlinked NIH account\n        404:\n          description: NIH account link not found\n          content: {}\n        500:\n          description: Internal server error unlinking NIH account\n          content: {}\n      x-passthrough: false\n  /api/notifications/general:\n    get:\n      tags:\n        - Notifications\n      summary: Gets the general notifications available\n      operationId: generalNotifications\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationType'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/notifications/workspace/{workspaceNamespace}/{workspaceName}:\n    get:\n      tags:\n        - Notifications\n      summary: Gets the notifications available for a workspace\n      operationId: workspaceNotifications\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspace namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspace name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationType'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/profile/billing:\n    get:\n      tags:\n        - Profile\n      summary: List billing projects for a user\n      operationId: billing\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingProjectMembership'\n        404:\n          description: User Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/profile/billing/{projectName}:\n    get:\n      tags:\n        - Profile\n      summary: billing project status\n      description: billing project status\n      operationId: billingProjectStatus\n      parameters:\n        - name: projectName\n          in: path\n          description: Name of the billing project\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BillingProjectStatus'\n        404:\n          description: Project Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/profile/billingAccounts:\n    get:\n      tags:\n        - Profile\n      summary: List billing accounts for a user\n      operationId: billingAccounts\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BillingAccount'\n        403:\n          description: Forbidden - redirect to Google to enable appropriate scopes\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BillingAccountRedirect'\n        500:\n          description: Internal Server Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n            - https://www.googleapis.com/auth/cloud-billing\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/profile/importstatus:\n    get:\n      tags:\n        - Profile\n        - Method Configurations\n      summary: Check the user's ability to import a method config into a workspace\n      operationId: importStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserImportPermission'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/profile/preferences:\n    post:\n      tags:\n        - Profile\n      summary: Update the preferences for the user\n      operationId: updateProfile\n      requestBody:\n        description: The preferences to set as a Map[String, String]\n        content:\n          'application/json':\n            schema:\n              type: object\n              additionalProperties:\n                type: string\n        required: true\n      responses:\n        204:\n          description: Success (No Content)\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: preferences\n  /api/profile/terra:\n    get:\n      tags:\n        - Profile\n      summary: Returns the current user's preference for Terra UI vs. Legacy view\n      operationId: getTerraPreference\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerraPreference'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Profile\n      summary: Sets the current user's preference to use Terra UI, not Legacy view\n      operationId: setTerraPreference\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerraPreference'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    delete:\n      tags:\n        - Profile\n      summary: Sets the current user's preference to use Legacy view, not Terra UI\n      operationId: setFCPreference\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TerraPreference'\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/refresh-token-status:\n    get:\n      tags:\n        - OAuth\n      summary: deprecated\n      description: |\n        This API is a deprecated noop. Previously, it returned the status of the current user's refresh token.\n        Since refresh tokens are no longer used in the back end, this API is now hardcoded to respond as if the\n        user's refresh token is valid. This API may be removed in a future release.\n      operationId: getRefreshTokenStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n      x-passthrough: false\n  /api/sharelog/sharees:\n    get:\n      tags:\n        - ShareLog\n      summary: |\n        Get a list of users with whom current user has shared a Workspace.\n      description: |\n        Get a list of users with whom current user has shared a Workspace.\n      operationId: getSharees\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/staticNotebooks/convert:\n    post:\n      tags:\n        - Static Notebooks\n      summary: |\n        Convert a Notebook ipynb file to a static HTML representation\n      description: |\n        Convert a Notebook ipynb file to a static HTML representation\n      operationId: convertNotebook\n      requestBody:\n        description: Notebook ipynb file\n        content:\n          'application/json':\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: Success\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: calhoun\n      x-codegen-request-body-name: notebook\n  /api/storage/{bucket}/{object}:\n    get:\n      tags:\n        - Storage\n      summary: |\n        Get metadata about an object stored in GCS.\n      description: |\n        Returns a subset of the metadata available from Google's Cloud Storage JSON API, as well as the estimated egress\n        charge to North America. If you need the full metadata, we recommend you use Google's API directly; see\n        https://cloud.google.com/storage/docs/json_api/v1/objects/get.\n      operationId: getMetadata\n      parameters:\n        - name: bucket\n          in: path\n          description: Name of the bucket in which the object resides.\n          required: true\n          schema:\n            type: string\n        - name: object\n          in: path\n          description: Name of the object. (be sure to urlencode)\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/submissions/queueStatus:\n    get:\n      tags:\n        - Submissions\n      summary: workflow queue status\n      description: List workflow counts by queueing state\n      operationId: workflowQueueStatus\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowQueueStatusResponse'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/template:\n    post:\n      tags:\n        - Method Repository\n      summary: Create a Method Configuration template from a Method\n      operationId: createMethodTemplate\n      requestBody:\n        description: name of Method to use for template\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodID'\n        required: true\n      responses:\n        200:\n          description: Method Configuration template\n          content: {}\n        400:\n          description: Method WDL can't be parsed\n          content: {}\n        404:\n          description: No Such Method\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: methodName\n  /version:\n    get:\n      tags:\n        - Version\n      summary: Returns the currently deployed version of this service.\n      operationId: orchestrationVersion\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrchestrationVersion'\n      x-passthrough: false\n  /version/executionEngine:\n    get:\n      tags:\n        - Version\n      summary: Returns the currently deployed version of Terra's execution engine\n      operationId: executionEngineVersion\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecutionEngineVersion'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        Lists workspaces.\n      operationId: listWorkspaces\n      parameters:\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: List of workspaces.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceListResponse'\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceListResponse'\n        400:\n          description: Unrecognized query parameters\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    post:\n      tags:\n        - Workspaces\n      summary: Create workspace\n      operationId: createWorkspace\n      requestBody:\n        description: New workspace information\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/WorkspaceRequest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Bad request\n          content: {}\n        403:\n          description: Unable to create bucket for workspace\n          content: {}\n        409:\n          description: Workspace by that name already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: workspace\n  /api/workspaces/{workspaceNamespace}/{workspaceName}:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace\n      description: |\n        Get a single workspace's details, optionally filtered to only the specified fields. See additional GET methods in this section to retrieve additional details about the workspace. For instance, this API only returns the workspace's owners; use the GET .../acl method to retrieve the full list of all users at all permission levels.\n      operationId: getWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: fields\n          in: query\n          description: |\n            When specified, include only these keys in the response payload and exclude other keys. Accepts a comma-delimited list of values. To include a nested key, specify the key's path using a dot delimiter; for example, to include {\"workspace\": {\"attributes\": {}}}, specify \"workspace.attributes\". Legal values are any first-level key in the response, any first-level key inside the {\"workspace\": {}} object, and any first-level key inside the {\"workspace\": {\"attributes\": {}}} object. If omitted, will return the full response payload.\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceResponse'\n        400:\n          description: Unrecognized query parameters\n          content: {}\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - Workspaces\n      summary: Delete workspace\n      operationId: deleteWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        202:\n          description: Request Accepted\n          content: {}\n        403:\n          description: User does not have correct permissions to delete a published\n            workspace\n          content: {}\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/accessInstructions:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace access instructions (if any)\n      operationId: getWorkspaceAccessInstructions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ManagedGroupAccessInstructions'\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace ACL\n      operationId: getWorkspaceAcl\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceACL'\n        400:\n          description: Can't retrieve ACL for workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    patch:\n      tags:\n        - Workspaces\n      summary: Update workspace ACL\n      operationId: updateWorkspaceACL\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: inviteUsersNotFound\n          in: query\n          description: true to invite unregistered users, false to ignore\n          required: true\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Series of ACL updates for workspace\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkspaceACLUpdate'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceACLUpdateResponseList'\n        400:\n          description: Can't set ACL for workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: aclUpdates\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketOptions:\n    get:\n      tags:\n        - Workspaces\n      summary: Get metadata about the workspace bucket\n      description: Returns metadata about the workspace bucket.\n      operationId: getWorkspaceBucketOptions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceBucketOptions'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketUsage:\n    get:\n      tags:\n        - Workspaces\n      summary: Get bucket usage\n      operationId: getBucketUsage\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/BucketUsageResponse'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/catalog:\n    get:\n      tags:\n        - Workspaces\n      summary: Get workspace catalog permission\n      description: Get catalog permissions for a workspace\n      operationId: getCatalog\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceCatalog'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n    patch:\n      tags:\n        - Workspaces\n      summary: Update catalog permission\n      description: Set catalog permisisons for a workspace\n      operationId: updateCatalog\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Series of Catalog updates for workspace\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/WorkspaceCatalog'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceCatalogUpdateResponseList'\n        403:\n          description: Insufficient permissions to change catalog permissions (must\n            be owner or admin)\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, user or group not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: false\n      x-codegen-request-body-name: catalogUpdates\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkBucketReadAccess:\n    get:\n      tags:\n        - Workspaces\n      summary: Read workspace bucket\n      description: Read a workspace bucket\n      operationId: readBucket\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        403:\n          description: Insufficient permissions to access workspace bucket\n          content: {}\n        404:\n          description: Workspace Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkIamActionWithLock/{samActionName}:\n    get:\n      tags:\n        - Workspaces\n      summary: Check IAM action with lock\n      description: Check to see if the user has the given action on a workspace in\n        Sam. Takes into account if the workspace is locked too.\n      operationId: checkIamActionWithLock\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: samActionName\n          in: path\n          description: Sam action\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: User can perform the given action on the workspace\n          content: {}\n        403:\n          description: User may not perform the given action on the workspace (including\n            if it doesn't exist)\n          content: {}\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:\n    post:\n      tags:\n        - Workspaces\n      summary: Clone Workspace\n      operationId: cloneWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Cloned workspace information\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/WorkspaceRequestClone'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Unable to create resources for workspace\n          content: {}\n        404:\n          description: Source workspace not found\n          content: {}\n        409:\n          description: Destination workspace already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: workspace\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities:\n    get:\n      tags:\n        - Entities\n      summary: |\n        List of entity types in a workspace\n      operationId: getEntityTypes\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of entity types in workspace\n          content: {}\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities_with_type:\n    get:\n      tags:\n        - Entities\n      summary: |\n        List of entities in a workspace with type and attribute information\n      operationId: getEntitiesWithType\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of entities\n          content: {}\n        404:\n          description: Workspace or entities not found.\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/copy:\n    post:\n      tags:\n        - Entities\n      summary: |\n        Copy entities from one workspace to another\n      operationId: copyEntities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Destination Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Destination Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: linkExistingEntities\n          in: query\n          description: true to link new entities to existing entities, false to fail\n            instead of link\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Entities to Copy\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CopyEntity'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityCopyResponse'\n        404:\n          description: Source Workspace or source entities does not exist\n          content: {}\n        409:\n          description: There are conflicts in your copy operation. Retry with the\n            paramater linkExistingEntities=true to link all soft conflicts to the\n            entities that already exist in your workspace.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityCopyResponse'\n        422:\n          description: Destination workspace must match source's authorization domain,\n            if the source has one\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: body\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete:\n    post:\n      tags:\n        - Entities\n      summary: Bulk delete entities from a workspace\n      operationId: deleteEntities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Entities to delete\n        content:\n          'application/json':\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/EntityID'\n        required: true\n      responses:\n        204:\n          description: Successful Request\n          content: {}\n        400:\n          description: Not all Entities exist\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        409:\n          description: Cannot create dangling references when deleting Entities -\n            must specify whole set\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EntityID'\n        500:\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: body\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}:\n    get:\n      tags:\n        - Entities\n      summary: |\n        List of entities in a workspace\n      operationId: getEntities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of entities in workspace\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Entity'\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}:\n    get:\n      tags:\n        - Entities\n      summary: Get entity in a workspace\n      operationId: getEntity\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n        404:\n          description: Workspace or Entity does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    patch:\n      tags:\n        - Entities\n      summary: Update entity in a workspace\n      description: Update an entity\n      operationId: update_entity\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Update operations for attributes\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/AttributeUpdateOperationArray'\n        required: false\n      responses:\n        200:\n          description: Entity updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entity'\n        400:\n          description: Attribute does not exist\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: User does not have permission to update attributes in the namespace\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace or Entity not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: attributeUpdateJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/evaluate:\n    post:\n      tags:\n        - Entities\n      summary: Evaluate entity expression\n      operationId: evaluateEntityExpression\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: entityName\n          in: path\n          description: Entity Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Expression\n        content:\n          'application/json':\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: Success\n          content: {}\n        400:\n          description: Invalid entity expression\n          content: {}\n        404:\n          description: Workspace or Entity does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: expression\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/exportAttributesTSV:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        TSV file containing workspace attributes\n      operationId: exportAttributesTSV\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Workspace attributes in TSV format\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/tsv:\n    get:\n      tags:\n        - Entities\n      summary: |\n        TSV file containing workspace entities of the specified type\n      operationId: downloadEntitiesTSV\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: attributeNames\n          in: query\n          description: comma separated list of ordered attribute names to be in downloaded\n            tsv\n          schema:\n            type: string\n        - name: model\n          in: query\n          description: firecloud (default) or flexible\n          schema:\n            type: string\n      responses:\n        200:\n          description: Workspace entities of specified type in TSV format\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        414:\n          description: |\n            URI length exceeds the configured limit of 2048 characters.\n            Please use the POST endpoint when it's necessary to supply a large number of attribute names.\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}:\n    get:\n      tags:\n        - Entities\n      summary: Paginated query for entities in a workspace\n      operationId: entityQuery\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Page number, 1-indexed (default 1)\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n            default: 1\n        - name: pageSize\n          in: query\n          description: Page size (default 10)\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n            default: 10\n        - name: sortField\n          in: query\n          description: Sort field (default \"name\")\n          schema:\n            type: string\n            default: name\n        - name: sortDirection\n          in: query\n          description: Sort direction (asc or desc, default asc)\n          schema:\n            type: string\n            default: asc\n            enum:\n              - asc\n              - desc\n        - name: filterTerms\n          in: query\n          description: Filter terms\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of entities in workspace\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityQueryResponse'\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importAttributesTSV:\n    post:\n      tags:\n        - Workspaces\n      summary: Import workspace attributes from a tsv file\n      operationId: importAttributesTSV\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - attributes\n              properties:\n                attributes:\n                  type: string\n                  description: A valid TSV import file\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Source Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importBagit:\n    post:\n      tags:\n        - Entities\n      summary: Import entity TSVs from a zipped [BagIt](https://tools.ietf.org/html/draft-kunze-bagit-14)\n        directory, whose payload contains two files - participants.tsv and samples.tsv\n      operationId: importBagit\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: JSON object containing bagit URL\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/BagitRequest'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Source Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: bagitImportRequest\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importEntities:\n    post:\n      tags:\n        - Entities\n      summary: Import entities from a tsv file\n      operationId: importEntities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Destination Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Destination Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: deleteEmptyValues\n          in: query\n          description: Delete empty values? Values left blank in the TSV will be deleted if set to true (default is false)\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - entities\n              properties:\n                entities:\n                  type: string\n                  description: A valid TSV import file\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Source Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importPFB:\n    get:\n      deprecated: true\n      tags:\n        - Entities\n      summary: List PFB import jobs in this workspace\n      description: |\n        Lists all imports for this workspace, optionally filtered to only those imports currently in progress\n      operationId: listImportPFBJobs\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: running_only\n          in: query\n          description: When true, filters to only those imports currently in progress\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ImportJobStatusResponse'\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Entities\n      summary: Import PFB data from an [Avro](https://avro.apache.org/) file\n      description: |\n        This API will return a jobID representing the import operation. The import itself will continue asynchronously in the background.\n      operationId: importPFB\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: JSON object containing PFB URL\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/PFBRequest'\n        required: true\n      responses:\n        202:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportResponse'\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: Unauthorized access to Workspace\n          content: {}\n        403:\n          description: Forbidden access to Workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: pfbImportRequest\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importPFB/{jobId}:\n    get:\n      deprecated: true\n      tags:\n        - Entities\n      summary: Use the importJob API instead.\n      description: |\n        Use /api/workspaces/{workspaceNamespace}/{workspaceName}/importJob/{jobId} instead.\n      operationId: importPFBStatus\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          description: job ID of the import to check\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportJobStatusResponse'\n        404:\n          description: workspace or job ID not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importJob:\n    get:\n      tags:\n        - Entities\n      summary: List asynchronous import jobs in this workspace\n      description: |\n        Lists all imports for this workspace, optionally filtered to only those imports currently in progress\n      operationId: listImportJobs\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: running_only\n          in: query\n          description: When true, filters to only those imports currently in progress\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ImportJobStatusResponse'\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Entities\n      summary: Import data from a PFB file or TDR snapshot\n      description: |\n        This API will return a jobID representing the import operation. The import itself will continue asynchronously in the background.\n      operationId: createImportJob\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: JSON object containing URL to import\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/ImportRequest'\n        required: true\n      responses:\n        202:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportResponse'\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: Unauthorized access to Workspace\n          content: {}\n        403:\n          description: Forbidden access to Workspace\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: importRequest\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/importJob/{jobId}:\n    get:\n      tags:\n        - Entities\n      summary: Report status on an asynchronous import job\n      description: |\n        This API will return status of an import jobID. The jobID was returned from a previous import request.\n      operationId: importJobStatus\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: jobId\n          in: path\n          description: job ID of the import to check\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportJobStatusResponse'\n        404:\n          description: workspace or job ID not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/flexibleImportEntities:\n    post:\n      tags:\n        - Entities\n      summary: Import entities from a tsv file\n      operationId: flexibleImportEntities\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Destination Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Destination Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: async\n          in: query\n          description: Import asynchronously?\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: deleteEmptyValues\n          in: query\n          description: Delete empty values? Values left blank in the TSV will be deleted if set to true (default is false)\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - entities\n              properties:\n                entities:\n                  type: string\n                  description: A valid TSV import file\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: Successful Request for synchronous import\n          content: {}\n        202:\n          description: Successful Request for asynchronous import\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImportResponse'\n        400:\n          description: Bad Request\n          content: {}\n        404:\n          description: Source Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/lock:\n    put:\n      tags:\n        - Workspaces\n      summary: Lock Workspace\n      operationId: lockWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: No response was specified\n          content: {}\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: Not Owner\n          content: {}\n        404:\n          description: Workspace Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}:\n    get:\n      tags:\n        - Method Configurations\n      summary: Get a method configuration in a workspace\n      operationId: getWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    put:\n      tags:\n        - Method Configurations\n      summary: Add or overwrite a method configuration in a workspace\n      description: |\n        Add or overwrite a method configuration in a workspace.\n        The method configuration name and namespace in the URI must match the values in the JSON.\n      operationId: overwriteWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Config to Update\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/ConfigurationIngest'\n        required: true\n      responses:\n        200:\n          description: Successful\n          content: {}\n        400:\n          description: Method configuration name and namespace in URI do not match\n            those in JSON body\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: body\n    post:\n      tags:\n        - Method Configurations\n      summary: Update a method configuration in a workspace\n      description: |\n        Update method configuration.\n        Updates and moves the method configuration at the URI to the location in the request body.\n        The location in the URI may be the same as the location in the request body.\n        If the location in the request body matches the location in the URI, it is overwritten.\n        If the location in the request body is different to the location in the URI, and there is a method config already at that location, 409 is returned.\n      operationId: updateWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Config to Update\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/ConfigurationIngest'\n        required: true\n      responses:\n        200:\n          description: Successful\n          content: {}\n        403:\n          description: Invalid attribute namespace(s) in outputs\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        409:\n          description: Method configuration with the new name already exists in the\n            workspace\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n        - Method Configurations\n      summary: Delete a method configuration in a workspace\n      operationId: deleteWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful request\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}/rename:\n    post:\n      tags:\n        - Method Configurations\n      summary: Rename a method configuration in a workspace\n      operationId: renameWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Configuration Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Config Rename\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/MethodConfigRename'\n        required: true\n      responses:\n        204:\n          description: Successful request\n          content: {}\n        400:\n          description: Workspace details in payload don't match the URI\n          content: {}\n        404:\n          description: Workspace or Method Configuration not found\n          content: {}\n        409:\n          description: Method Configuration with that name already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: rename\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}/validate:\n    get:\n      tags:\n        - Method Configurations\n      summary: get syntax validation information for a method configuration\n      operationId: validate_method_configuration\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: configNamespace\n          in: path\n          description: Method Configuration Namespace\n          required: true\n          schema:\n            type: string\n        - name: configName\n          in: path\n          description: Method Configuration Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatedMethodConfiguration'\n        404:\n          description: Workspace or Method Configuration does not exist\n          content: {}\n        500:\n          description: Rawls Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/copyFromMethodRepo:\n    post:\n      tags:\n        - Method Configurations\n        - Method Repository\n      summary: Copy a Method Repository Configuration into a workspace\n      operationId: copyFromMethodRepo\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Configuration to Copy\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/CopyConfigurationIngest'\n        required: true\n      responses:\n        201:\n          description: Successful request\n          content: {}\n        404:\n          description: Source method configuration does not exist\n          content: {}\n        409:\n          description: Destination method configuration by that name already exists\n          content: {}\n        422:\n          description: Error parsing source method configuration\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: configToCopy\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/copyToMethodRepo:\n    post:\n      tags:\n        - Method Configurations\n        - Method Repository\n      summary: Copy a Method Config in a workspace to the Method Repository\n      operationId: copyToMethodRepo\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Configuration to Copy\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/PublishConfigurationIngest'\n        required: true\n      responses:\n        201:\n          description: Successful request\n          content: {}\n        404:\n          description: Source method configuration does not exist\n          content: {}\n        409:\n          description: Destination method configuration by that name already exists\n          content: {}\n        422:\n          description: Error parsing source method configuration\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: configToCopy\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:\n    get:\n      tags:\n        - Method Configurations\n        - Workspaces\n      summary: List method configurations in a workspace\n      description: |\n        List method configurations in a workspace. By default, only Agora method configs are returned. To return configs for all repos, specify `allRepos` to be `true`.\n\n        #### Expanded discussion on the methodRepoMethod field\n\n        This endpoint returns method references to Agora in the format\n        ```\n        \"methodRepoMethod\": {\n          \"methodNamespace\": \"namespace\",\n          \"methodName\": \"name\",\n          \"methodVersion\": 1,\n          \"sourceRepo\": \"agora\",\n          \"methodUri\": \"agora://namespace/name/1\"\n        }\n        ```\n        and for Dockstore in the format\n        ```\n        \"methodRepoMethod\": {\n          \"methodPath\": \"path\",\n          \"methodVersion\": \"version\",\n          \"sourceRepo\": \"agora\",\n          \"methodUri\": \"dockstore://path/version\"\n        }\n        ```\n        If you are only working with Agora methods, the fields `\"sourceRepo\"` and `\"methodUri\"` can be considered informational and do not need to be round-tripped (see the corresponding `POST /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs` for more details).\n      operationId: listWorkspaceMethodConfigs\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: allRepos\n          in: query\n          description: Configs for all repos, not just Agora\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: List of Method Configurations\n          content: {}\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    post:\n      tags:\n        - Method Configurations\n        - Workspaces\n      summary: Create a Method Configuration in a workspace\n      description: |\n        Create method configurations.\n        #### Expanded discussion on the methodRepoMethod field\n        To create a method config for an Agora method, `\"sourceRepo\": \"agora\"` is optional; the following is sufficient:\n        ```\n        \"methodRepoMethod\": {\n          \"methodNamespace\": \"namespace\",\n          \"methodName\": \"name\",\n          \"methodVersion\": 1\n        }\n        ```\n        To create a method config for a Dockstore method, `\"sourceRepo\": \"dockstore\"` is required:\n        ```\n        \"methodRepoMethod\": {\n          \"sourceRepo\": \"dockstore\",\n          \"methodPath\": \"path\",\n          \"methodVersion\": \"version\"\n        }\n        ```\n        You may also use the URI on its own to create a config referencing any supported repo (currently Agora and Dockstore):\n        ```\n        \"methodRepoMethod\": {\n          \"methodUri\": \"agora://namespace/name/1\"\n        }\n        ```\n        ```\n        \"methodRepoMethod\": {\n          \"methodUri\": \"dockstore://path/version\"\n        }\n        ```\n        The system is specified to check for a URI first before falling back to the legacy fields. Unsupported repos will return a 400 Bad Request.\n      operationId: postWorkspaceMethodConfig\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Method Configuration contents\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/NewMethodConfigIngest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        409:\n          description: Method Configuration already exists\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: methodConfigJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/permissionReport:\n    post:\n      tags:\n        - Method Configurations\n        - Workspaces\n      summary: Retrieve user permissions for the workspace and the workspace's method\n        references\n      operationId: workspacePermissionReport\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Users and/or configs on which to report, both optional\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/PermissionReportRequest'\n        required: true\n      responses:\n        200:\n          description: Permission Report\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionReport'\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: reportInput\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/sendChangeNotification:\n    post:\n      tags:\n        - Workspaces\n      summary: Sends notifications for change to workspace\n      operationId: changedWorkspaceNotification\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: workspace namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: workspace name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n        403:\n          description: Insufficient permisions to send notification on this workspace\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/storageCostEstimate:\n    get:\n      tags:\n        - Workspaces\n      summary: Calculate an estimate of the monthly storage cost for the workspace\n        bucket\n      operationId: getStorageCostEstimate\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/BucketStorageCost'\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:\n    get:\n      tags:\n        - Submissions\n      summary: |\n        List submissions.\n      operationId: listSubmissions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: List of submissions\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    post:\n      tags:\n        - Submissions\n      summary: |\n        Create a submission.\n      operationId: createSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Post Submission\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SubmissionRequest'\n        required: true\n      responses:\n        201:\n          description: Successful Request\n          content: {}\n        400:\n          description: Expression eval failed or entities are not of type required\n            by method config\n          content: {}\n        404:\n          description: Method Configuration or Entity not found\n          content: {}\n        409:\n          description: Method Configuration failed to resolve input expressions with\n            the supplied Entity\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: submission\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissionsCount:\n    get:\n      tags:\n        - Submissions\n      summary: Count submissions by status\n      description: Counts all submissions run in the workspace, grouped by status.\n        Returns a map of status:count.\n      operationId: countSubmissions\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionsCountResponse'\n        404:\n          description: Workspace not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:\n    get:\n      tags:\n        - Submissions\n      summary: |\n        Monitor submission status\n      operationId: monitorSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Submission'\n        404:\n          description: Submission not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n    delete:\n      tags:\n        - Submissions\n      summary: |\n        abort a submission\n      operationId: abortSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Aborted successfully\n          content: {}\n        404:\n          description: Submission not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n    patch:\n      tags:\n        - Submissions\n      summary: Update user comment for a submission\n      description: Update user comment for a submission\n      operationId: updateSubmissionUserComment\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission Id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: User comment to be updated\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/UserCommentUpdateOperation'\n        required: true\n      responses:\n        200:\n          description: Successful Request\n        404:\n          description: Workspace or submission not found\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/validate:\n    post:\n      tags:\n        - Submissions\n      summary: Validate submission\n      description: Validate expression syntax for a submission\n      operationId: validateSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Description of a submission.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/SubmissionRequest'\n        required: true\n      responses:\n        200:\n          description: Validation Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionValidationReport'\n        400:\n          description: Expression evaluation failed or entities are not of type required\n            by method config\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Workspace, Method Configuration or Entity not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        502:\n          description: Trouble talking to Agora\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n      x-codegen-request-body-name: submission\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}:\n    get:\n      tags:\n        - Submissions\n      summary: Get call-level metadata for workflow\n      description: Get call-level metadata for workflow\n      operationId: workflowMetadata\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n        - name: includeKey\n          in: query\n          description: |\n            When specified, return only these keys in the response. Matches any key in the response, including within nested blocks. May not be used with excludeKey.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: excludeKey\n          in: query\n          description: |\n            When specified, omit these keys from the response. Matches any key in the response, including within nested blocks. May not be used with includeKey.\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: expandSubWorkflows\n          in: query\n          description: |\n            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: Successful Request\n          content: {}\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs:\n    get:\n      tags:\n        - Submissions\n      summary: |\n        Get workflow outputs.\n      operationId: workflowOutputsInSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Get workflow outputs\n          content: {}\n        404:\n          description: Workspace, Submission or Workflow not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/cost:\n    get:\n      tags:\n        - Submissions\n      summary: |\n        Retrieve workflow cost, if available.\n      operationId: workflowCostInSubmission\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: submissionId\n          in: path\n          description: Submission ID\n          required: true\n          schema:\n            type: string\n        - name: workflowId\n          in: path\n          description: Workflow ID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Successful Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowCost'\n        404:\n          description: Workspace, Submission or Workflow not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/tags:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        Get the tags for this workspace.\n      operationId: getWorkspaceTags\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Workspace tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n    put:\n      tags:\n        - Workspaces\n      summary: |\n        Replace all tags for this workspace with the user input.\n      operationId: putWorkspaceTags\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: List of tags.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/StringArray'\n        required: true\n      responses:\n        200:\n          description: Workspace tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        400:\n          description: Invalid input\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: tags\n    delete:\n      tags:\n        - Workspaces\n      summary: |\n        Remove the user-supplied tags from the workspace.\n      operationId: deleteWorkspaceTags\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: List of tags.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/StringArray'\n        required: true\n      responses:\n        200:\n          description: Workspace tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        400:\n          description: Invalid input\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: tags\n    patch:\n      tags:\n        - Workspaces\n      summary: |\n        Add tags to the workspace without modifying pre-existing tags.\n      operationId: patchWorkspaceTags\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: List of tags.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/StringArray'\n        required: true\n      responses:\n        200:\n          description: Workspace tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArray'\n        400:\n          description: Invalid input\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: tags\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/unlock:\n    put:\n      tags:\n        - Workspaces\n      summary: Unlock Workspace\n      operationId: unlockWorkspace\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: No response was specified\n          content: {}\n        204:\n          description: Successful Request\n          content: {}\n        403:\n          description: Not Owner\n          content: {}\n        404:\n          description: Workspace Not Found\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/updateAttributes:\n    patch:\n      tags:\n        - Workspaces\n      summary: |\n        Modify attributes on a workspace.\n      operationId: updateAttributes\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Attribute operations. WARNING! This should not be used to change\n          library metadata (republish will not happen). Use UpdateAttributes in the\n          library section.\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/AttributeUpdateOperationArray'\n        required: true\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkspaceDetails'\n        400:\n          description: Invalid operation\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: workspaceUpdateJson\n  /api/workspaces/{workspaceNamespace}/{workspaceName}/setAttributes:\n    patch:\n      tags:\n        - Workspaces\n      summary: |\n        Set attributes on a workspace.\n      operationId: setAttributes\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: New attribute values, as Map[String, Attribute]. WARNING! This\n          should not be used to change library metadata (republish will not happen).\n          Use UpdateAttributes in the library section\n        content:\n          'application/json':\n            schema:\n              type: object\n              additionalProperties:\n                type: object\n        required: true\n      responses:\n        200:\n          description: Success\n          content: {}\n        400:\n          description: Malformed request\n          content: {}\n        404:\n          description: Workspace not found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: newAttributes\n  /api/workspaces/tags:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        Get all workspace tags (for autocomplete)\n      description: Get all tags for workspaces that a user has access to (for autocomplete)\n      operationId: getTags\n      parameters:\n        - name: q\n          in: query\n          description: Query string\n          schema:\n            type: string\n      responses:\n        200:\n          description: list of all tags used by workspaces that the user\n            has access to and their associated frequencies\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WorkspaceTag'\n        500:\n          description: Rawls Internal Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: rawls\n  /cookie-authed/download/b/{bucket}/o/{object}:\n    get:\n      tags:\n        - Storage\n      summary: |\n        Download GCS object using a cookie token\n      description: |\n        Download GCS object using a cookie token\n      operationId: getStorageDownload\n      parameters:\n        - name: bucket\n          in: path\n          description: Name of the bucket in which the object resides.\n          required: true\n          schema:\n            type: string\n        - name: object\n          in: path\n          description: Name of the object. (be sure to urlencode)\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Not Found\n          content: {}\n        500:\n          description: Internal Error\n          content: {}\n      x-passthrough: false\n  /cookie-authed/workspaces/{workspaceNamespace}/{workspaceName}/exportAttributesTSV:\n    get:\n      tags:\n        - Workspaces\n      summary: |\n        TSV file containing workspace attributes (allows cookie-based authentication)\n      operationId: browserDownloadAttributes\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Workspace attributes in TSV format\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Workspace does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /cookie-authed/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/tsv:\n    get:\n      tags:\n        - Entities\n      summary: |\n        TSV file containing workspace entities of the specified type\n      description: |\n        swagger-ui seems to not handle file downloads, so this endpoint won't function through the ui.\n        It is here for documentation purposes only.\n      operationId: browserDownloadEntitiesTSVGet\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n        - name: attributeNames\n          in: query\n          description: comma separated list of ordered attribute names to be in downloaded\n            tsv\n          schema:\n            type: string\n        - name: model\n          in: query\n          description: flexible or firecloud (firecloud model will be used by default)\n          schema:\n            type: string\n      responses:\n        200:\n          description: Workspace entities of specified type in TSV format\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        414:\n          description: |\n            URI length exceeds the configured limit of 2048 characters.\n            Please use the POST endpoint when it's necessary to supply a large number of attribute names.\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Entities\n      summary: |\n        TSV file containing workspace entities of the specified type\n      description: |\n        swagger-ui seems to not handle file downloads, so this endpoint won't function through the ui.\n        It is here for documentation purposes only.\n      operationId: browserDownloadEntitiesTSV\n      parameters:\n        - name: workspaceNamespace\n          in: path\n          description: Workspace Namespace\n          required: true\n          schema:\n            type: string\n        - name: workspaceName\n          in: path\n          description: Workspace Name\n          required: true\n          schema:\n            type: string\n        - name: entityType\n          in: path\n          description: Entity Type\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - FCtoken\n              properties:\n                FCtoken:\n                  type: string\n                  description: valid access token to use for authentication\n                attributeNames:\n                  type: string\n                  description: comma separated list of ordered attribute names to\n                    be in downloaded tsv\n                model:\n                  type: string\n                  description: flexible or firecloud (firecloud model will be used\n                    by default)\n        required: true\n      responses:\n        200:\n          description: Workspace entities of specified type in TSV format\n          content:\n            text/plain:\n              schema:\n                type: string\n                format: binary\n        404:\n          description: Workspace or entity type does not exist\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /duos/autocomplete/{queryTerm}:\n    get:\n      tags:\n        - Library\n      summary: |\n        Passes through to DUOS' autocomplete method to select ontology terms of disease type that match the query term.\n      operationId: duosAutocomplete\n      parameters:\n        - name: queryTerm\n          in: path\n          description: The query term (word fragment) which the service should try and\n            complete.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Array of results.\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: false\n  /duos/researchPurposeQuery:\n    post:\n      tags:\n        - Library\n      summary: Generates an ElasticSearch clause for filtering by research purpose\n      operationId: duosResearchPurposeQuery\n      requestBody:\n        description: Research Purpose Request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/ResearchPurposeRequest'\n        required: true\n      responses:\n        200:\n          description: JSON of ES filter clause\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: body\n  /duos/structuredData:\n    post:\n      tags:\n        - Library\n      summary: Data Use Search ingest\n      description: The ingest API will take the answers to consent questions and return\n        the elasticsearch structure to persist with the data reference.\n      operationId: dataIngest\n      requestBody:\n        description: Structured Data Request\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/structuredDataRequest'\n        required: true\n      responses:\n        500:\n          description: Internal Server Error\n          content: {}\n      security:\n        - googleoauth:\n            - openid\n            - email\n            - profile\n      x-passthrough: false\n      x-codegen-request-body-name: body\n  /api/duos/consent/orsp/{orspId}:\n    get:\n      tags:\n        - Library\n      summary: Find Consent by ORSP ID\n      operationId: duosConsentOrspId\n      parameters:\n        - name: orspId\n          in: path\n          description: Finds the consent for the provided ORSP ID.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Consent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consent'\n        400:\n          description: The consent associated with the provided name has not been\n            approved.\n          content: {}\n        401:\n          description: Invalid authorization, must be a Terra user.\n          content: {}\n        404:\n          description: The consent associated with the provided name could not be\n            found.\n          content: {}\n        500:\n          description: Internal Server Error\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: consent\n  /error:\n    get:\n      tags:\n        - Status\n      summary: |\n        An error status endpoint for load balancing purposes\n      operationId: error\n      responses:\n        503:\n          description: Service Unavailable\n          content: {}\n      x-passthrough: false\n  /health:\n    get:\n      tags:\n        - Status\n      summary: |\n        A health status endpoint for load balancing purposes\n      operationId: health\n      responses:\n        200:\n          description: Success\n          content: {}\n      x-passthrough: false\n  /status:\n    get:\n      tags:\n        - Status\n      summary: |\n        An orchestrated status check that includes a health report of underlying systems\n      operationId: status\n      responses:\n        200:\n          description: This service is healthy; check payload for subsystem health.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemStatus'\n        500:\n          description: This service is not healthy; therefore, payload may be missing\n            or incomplete.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemStatus'\n      x-passthrough: false\n  /handle-oauth-code:\n    post:\n      tags:\n        - OAuth\n      summary: deprecated\n      description: |\n        This API is a deprecated noop. Previously, it allowed the server to acquire a refresh token.\n        Since refresh tokens are no longer used in the back end, this API is now hardcoded to respond as if\n        it successfully acquired a refresh token, without doing any actual work.\n        This API may be removed in a future release.\n      operationId: handleOauthCode\n      requestBody:\n        content:\n          'application/json':\n            schema:\n              required:\n                - code\n                - redirectUri\n              type: object\n              properties:\n                code:\n                  type: string\n                redirectUri:\n                  type: string\n        required: false\n      responses:\n        204:\n          description: All set\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: body\n  /me:\n    get:\n      tags:\n        - Profile\n      summary: Returns registration and activation status for the current user\n      operationId: me\n      parameters:\n        - name: userDetailsOnly\n          in: query\n          description: when set to true does not check the various enabled statuses\n            of the user\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Me'\n        401:\n          description: Unauthorized. User is not allowed in Terra or has not signed\n            in.\n          content: {}\n        403:\n          description: Forbidden. User is registered in Terra, but not activated.\n          content: {}\n        404:\n          description: Not Found. User is authenticated to Google but not a Terra\n            member.\n          content: {}\n        500:\n          description: Internal Server Error determining user status.\n          content: {}\n        503:\n          description: Service Unavailable. Could not reach underlying services to\n            determine user status.\n          content: {}\n      x-passthrough: false\n  /api/proxyGroup/{email}:\n    get:\n      tags:\n        - Profile\n      summary: Returns the proxy group email for the current user\n      operationId: getProxyGroup\n      parameters:\n        - name: email\n          in: path\n          description: User email whose proxy group to retrieve\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: user proxy group\n          content:\n            application/json:\n              schema:\n                type: string\n        404:\n          description: user not found\n          content: {}\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n      x-passthrough: true\n      x-passthrough-target: sam\n  /register:\n    get:\n      tags:\n        - Profile\n      summary: Passes through to the Rawls userinfo API and returns its response\n      operationId: getUserStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RawlsMe'\n        404:\n          description: User Not Found.\n          content: {}\n        500:\n          description: Internal Server Error determining Rawls user status.\n          content: {}\n      x-passthrough: true\n      x-passthrough-target: sam\n  /register/profile:\n    get:\n      tags:\n        - Profile\n      summary: Returns a list of all keys and values stored in the user profile service\n        for the currently logged-in user.\n      operationId: getAll\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterProfile'\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RegisterProfile'\n        500:\n          description: Internal server error\n          content: {}\n      x-passthrough: false\n    post:\n      tags:\n        - Profile\n      summary: Sets a profile object in the user profile service for the currently\n        logged-in user.\n      operationId: setProfile\n      requestBody:\n        description: A complete profile\n        content:\n          'application/json':\n            schema:\n              $ref: '#/components/schemas/Profile'\n        required: false\n      responses:\n        200:\n          description: OK\n          content: {}\n        400:\n          description: Bad request\n          content: {}\n        403:\n          description: Forbidden\n          content: {}\n        500:\n          description: Internal server error\n          content: {}\n      x-passthrough: false\n      x-codegen-request-body-name: profile\n  /register/userinfo:\n    get:\n      tags:\n        - Profile\n      summary: Passes through to Google's userinfo API and returns its response\n      description: |\n        See https://developers.google.com/+/web/api/rest/openidconnect/getOpenIdConnect for response info. Userinfo endpoint lives at https://www.googleapis.com/oauth2/v3/userinfo.\n      operationId: userInfo\n      responses:\n        200:\n          description: OK\n          content: {}\n      x-passthrough: false\n  /tos/text:\n    get:\n      tags:\n        - Terms of Service\n      summary: gets terms of service text\n      operationId: getTermsOfServiceText\n      responses:\n        200:\n          description: success\n          content:\n            text/plain:\n              schema:\n                type: string\n  /register/user/v1/termsofservice:\n    post:\n      tags:\n        - Terms of Service\n      summary: Passes through to Sam API and accepts Terra Terms of Service\n      operationId: acceptTermsOfService\n      requestBody:\n        description: Must equal the (double-quoted) url of the Terra Terms of Service\n        content:\n          'application/json':\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RawlsMe'\n        404:\n          description: User Not Found.\n          content: { }\n    delete:\n      tags:\n        - Terms of Service\n      summary: Passes through to Sam API and rejects Terra Terms of Service\n      operationId: rejectTermsOfService\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RawlsMe'\n        404:\n          description: User Not Found.\n          content: { }\n  /register/user/v1/termsofservice/status:\n    get:\n      tags:\n        - Terms of Service\n      summary: Check whether user has accepted the current version of the Terms of Service\n      operationId: getTermsOfServiceStatus\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n        404:\n          description: User Not Found.\n          content: { }\n  /ga4gh/v1/tools/{id}:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: List one specific tool, acts as an anchor for self references\n      description: This endpoint returns one specific tool (which has ToolVersions\n        nested inside it)\n      parameters:\n        - name: id\n          in: path\n          description: A unique identifier of the tool, scoped to this registry, for\n            example `123456`\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A tool.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tool'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/tools/{id}/versions:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: List versions of a tool\n      description: Returns all versions of the specified tool\n      parameters:\n        - name: id\n          in: path\n          description: A unique identifier of the tool, scoped to this registry, for\n            example `123456`\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: An array of tool versions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ToolVersion'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/tools/{id}/versions/{version-id}:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: List one specific tool version, acts as an anchor for self references\n      description: This endpoint returns one specific tool version\n      parameters:\n        - name: id\n          in: path\n          description: A unique identifier of the tool, scoped to this registry, for\n            example `123456`\n          required: true\n          schema:\n            type: string\n        - name: version-id\n          in: path\n          description: An identifier of the tool version, scoped to this registry, for\n            example `v1`\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: A tool version.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ToolVersion'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/tools:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: List all tools\n      description: |\n        This endpoint returns all tools available.\n      responses:\n        200:\n          description: An array of Tools that match the filter.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tool'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/tools/{id}/versions/{version-id}/{type}/descriptor:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: Get the tool descriptor (WDL) for the specified tool.\n      description: Returns the WDL descriptor for the specified tool.\n      parameters:\n        - name: type\n          in: path\n          description: |\n            The output type of the descriptor. If not specified it is up to the underlying implementation to determine which output type to return. Plain types return the bare descriptor while the \"non-plain\" types return a descriptor wrapped with metadata.\n          required: true\n          schema:\n            type: string\n            enum:\n              - WDL\n              - plain-WDL\n        - name: id\n          in: path\n          description: |\n            A unique identifier of the tool, scoped to this registry, for example `123456`.\n\n              *In Terra, this must be a namespace + \":\" + name. For instance, if your namespace\n              is 'foo' and name is 'bar', this must be 'foo:bar'.*\n          required: true\n          schema:\n            type: string\n        - name: version-id\n          in: path\n          description: |\n            An identifier of the tool version for this particular tool registry, for example `v1`.\n\n              *In Terra, this must be an integer representing the method snapshot id.*\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The tool descriptor.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ToolDescriptor'\n        404:\n          description: The tool can not be output in the specified type.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/metadata:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: Return some metadata that is useful for describing this registry\n      description: Return some metadata that is useful for describing this registry\n      responses:\n        200:\n          description: A Metadata object describing this service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metadata'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /ga4gh/v1/tool-classes:\n    get:\n      tags:\n        - GA4GH Tool Registry\n      summary: List all tool types\n      description: |\n        This endpoint returns all tool-classes available\n      responses:\n        200:\n          description: An array of methods that match the filter.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ToolClass'\n      x-passthrough: true\n      x-passthrough-target: agora\n  /servicePerimeters/{servicePerimeterName}/projects/{projectName}:\n    put:\n      tags:\n        - Service Perimeters\n      summary: Add a project to a service perimeter\n      description: |\n        Add a project to a service perimeter, must have 'add_to_service_perimeter'\n        action on project and 'add_project' action on perimeter, included in owner\n        role for both\n      operationId: addProjectToServicePerimeter\n      parameters:\n        - name: servicePerimeterName\n          in: path\n          description: |\n            Fully qualified google service perimeter name in the form of\n            accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME], url encoded\n          required: true\n          schema:\n            type: string\n        - name: projectName\n          in: path\n          description: Project name\n          required: true\n          schema:\n            type: string\n      x-passthrough: true\n      x-passthrough-target: rawls\n      responses:\n        202:\n          description: Successful request, check the project's status for completion\n          content: {}\n        400:\n          description: Project is already in perimeter or is not in 'Ready' state\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        403:\n          description: Project does not exist or you do not have access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        404:\n          description: Service Perimeter does not exist or you do not have access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        500:\n          description: Rawls Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\ncomponents:\n  schemas:\n    AttributeEntityReference:\n      required:\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: The type of the entity\n        entityName:\n          type: string\n          description: The name of the entity\n      description: \"\"\n    AttributeUpdateOperationArray:\n      type: array\n      description: \"\"\n      example: |\n        [\n          {\n            \"op\": \"AddUpdateAttribute\",\n            \"attributeName\": \"name of attribute to add/update\",\n            \"addUpdateAttribute\": \"value to add/update\"\n          },\n          {\n            \"op\": \"RemoveAttribute\",\n            \"attributeName\": \"name of attribute to remove\"\n          },\n          {\n            \"op\": \"AddListMember\",\n            \"attributeListName\": \"name of list attribute\",\n            \"newMember\": \"value to add to list\"\n          },\n          {\n            \"op\": \"RemoveListMember\",\n            \"attributeListName\": \"name of list attribute\",\n            \"removeMember\": \"value to remove from list\"\n          },\n          {\n            \"op\": \"CreateAttributeEntityReferenceList\",\n            \"attributeListName\": \"name of entity-reference list attribute to create\"\n          },\n          {\n            \"op\": \"CreateAttributeValueList\",\n            \"attributeName\": \"name of value-list attribute to create\"\n          }\n        ]\n      items:\n        $ref: '#/components/schemas/AttributeUpdateOperation'\n    AttributeUpdateOperation:\n      required:\n        - op\n      type: object\n      properties:\n        op:\n          type: string\n          description: The operation to perform on the attribute\n          enum:\n            - AddUpdateAttribute\n            - RemoveAttribute\n            - AddListMember\n            - RemoveListMember\n            - CreateAttributeEntityReferenceList\n            - CreateAttributeValueList\n      discriminator:\n        propertyName: op\n    AddUpdateAttribute:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: Name of attribute to add/update\n            addUpdateAttribute:\n              type: string\n              description: Value to add/update. Accepts strings, numbers, booleans.\n    RemoveAttribute:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: The name of attribute to remove\n    AddListMember:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the attribute list\n            newMember:\n              type: string\n              description: The attribute to add to the list\n    RemoveListMember:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the attribute list\n            removeMember:\n              type: string\n              description: The attribute to remove from the list\n    CreateAttributeEntityReferenceList:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeListName:\n              type: string\n              description: The name of the empty attribute entity-reference list to\n                create. This is a non-destructive operation.\n    CreateAttributeValueList:\n      allOf:\n        - $ref: '#/components/schemas/AttributeUpdateOperation'\n        - type: object\n          properties:\n            attributeName:\n              type: string\n              description: The name of the empty attribute value-list to create. This\n                is a non-destructive operation.\n    BillingAccount:\n      required:\n        - accountName\n        - displayName\n        - firecloudHasAccess\n      type: object\n      properties:\n        accountName:\n          type: string\n          description: name of billing account\n        firecloudHasAccess:\n          type: boolean\n          description: whether the Firecloud service has been given access to this\n            billing account\n        displayName:\n          type: string\n          description: display name of billing account\n      description: Details for a single billing account\n    BillingAccountRedirect:\n      required:\n        - redirect\n      type: object\n      properties:\n        redirect:\n          type: string\n          description: URL to redirect to\n      description: Google redirect URL to enable appropriate scopes\n    BillingProjectMember:\n      required:\n        - email\n        - role\n      type: object\n      properties:\n        email:\n          type: string\n          description: the email of the user\n        role:\n          type: string\n          description: the role of the user in the project\n      description: \"\"\n    BillingProjectStatus:\n      required:\n        - creationStatus\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the billing project\n        creationStatus:\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n      description: a billing project status\n    BillingProjectMembership:\n      required:\n        - projectName\n        - role\n        - status\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        role:\n          type: string\n          description: the role of the current user in the project\n        status:\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n        message:\n          type: string\n          description: informational message about the project\n      description: \"\"\n    BucketStorageCost:\n      required:\n        - estimate\n      type: object\n      properties:\n        estimate:\n          type: string\n          description: The estimated monthly storage cost of the bucket\n        lastUpdated:\n          type: string\n          format: timestamp\n          description: timestamp (UTC) marking the date that the bucket cost was last updated (YYYY-MM-DDThh:mm:ss.fffZ)\n      description: \"\"\n    BucketUsageResponse:\n      required:\n        - usageInBytes\n      type: object\n      properties:\n        usageInBytes:\n          type: integer\n          description: The current storage bucket usage in bytes\n        lastUpdated:\n          type: string\n          format: timestamp\n          description: timestamp (UTC) marking the date that the bucket usage was last updated (YYYY-MM-DDThh:mm:ss.fffZ)\n      description: \"\"\n    CallMetadata:\n      type: object\n      properties:\n        inputs:\n          type: object\n          additionalProperties:\n            type: object\n          description: map from input names onto resolved values\n        executionStatus:\n          type: string\n          description: status of call\n        executionEvents:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExecutionEvent'\n        backendStatus:\n          type: string\n          description: status of the backend\n        backendLogs:\n          type: object\n          additionalProperties:\n            type: string\n          description: map of log files from backend\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: map from output names to local files\n        start:\n          type: string\n          description: starting time of call\n          format: date-time\n        end:\n          type: string\n          description: ending time of call\n          format: date-time\n        jobId:\n          type: string\n          description: unique ID of job\n        returnCode:\n          type: integer\n          description: result code\n          format: int32\n        backend:\n          type: string\n          description: type of backend executing the call\n        stdout:\n          type: string\n          description: location of stdout\n        stderr:\n          type: string\n          description: location of stderr\n        shardIndex:\n          type: integer\n          description: call index within a scatter block, as reported by execution\n            service\n          format: int32\n      description: Stuff you need to know about calls\n    BagitRequest:\n      required:\n        - bagitURL\n        - format\n      type: object\n      properties:\n        bagitURL:\n          type: string\n          description: link to publically accessible zipped BagIt directory\n        format:\n          type: string\n          description: the type of the files inside the bagit. Currently this must\n            be the string \"TSV\".\n          enum:\n            - TSV\n    ConfigurationIngest:\n      required:\n        - inputs\n        - methodRepoMethod\n        - name\n        - namespace\n        - outputs\n        - prerequisites\n        - rootEntityType\n        - workspaceName\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Method configuration namespace\n        name:\n          type: string\n          description: Method configuration name\n        rootEntityType:\n          type: string\n          description: Root entity type\n        workspaceName:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] with corresponding workspace-related information\n            - name and namespace\n        methodRepoMethod:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] with corresponding method-related information\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] with outputs information\n        inputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] with inputs information\n        prerequisites:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] of prerequisites (keys unused, will be\n            removed in the future)\n    ConfigurationQuery:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Namespace which contains Configuration.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the Configuration.\n          default: quick-BWA-config\n        synopsis:\n          type: string\n          description: Synopsis which contains Configuration.\n          default: Quick synopsis of configuration.\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        documentation:\n          type: string\n          description: Documentation of the Configuration.\n          default: |\n            Example configuration with an associated method.\n        payload:\n          type: string\n          description: Payload of method -- must be in WDL format\n          default: |\n            { \"methodRepoMethod\": { \"methodNamespace\": \"YOUR_NAMESPACE\", \"methodName\": \"BWA\", \"methodVersion\": 1}}\n        entityType:\n          type: string\n          description: Can only be Configuration.\n          default: Configuration\n    ConfigurationResponse:\n      type: object\n      properties:\n        managers:\n          type: array\n          description: List of Owners.\n          items:\n            type: string\n        method:\n          type: object\n          additionalProperties:\n            type: object\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        snapshotId:\n          type: integer\n          description: SnapshotId of AgoraEntity\n          format: int32\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        createDate:\n          type: string\n          description: Timestamp of creation\n        url:\n          type: string\n          description: URL where resource can be accessed.\n        payload:\n          type: string\n          description: Payload of config - JSON format in a string\n          default: |\n            { \"methodRepoMethod\": { \"methodNamespace\": \"YOUR_NAMESPACE\", \"methodName\": \"BWA\", \"methodVersion\": 1}}\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n        public:\n          type: boolean\n          description: Is this method publicly readable?\n    ConfigurationResponseWithPayloadObject:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        snapshotId:\n          type: integer\n          description: SnapshotId of AgoraEntity\n          format: int32\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        createDate:\n          type: string\n          description: Timestamp of creation\n        url:\n          type: string\n          description: URL where resource can be accessed.\n        payloadObject:\n          $ref: '#/components/schemas/ConfigurationPayload'\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n    Consent:\n      type: object\n      properties:\n        consentId:\n          type: string\n          description: The ID of the entity.\n        name:\n          type: string\n          description: Name used to identify the consent.\n        createDate:\n          type: integer\n          description: Creation Date in date-time milliseconds\n          format: int64\n        lastUpdate:\n          type: integer\n          description: Date of the last update in date-time milliseconds\n          format: int64\n        sortDate:\n          type: integer\n          description: The lastest modification date in date-time milliseconds\n          format: int64\n        requiresManualReview:\n          type: boolean\n          description: Describes if this consent has to be reviewed manually.\n        dataUseLetter:\n          type: string\n          description: The URL of the saved file.\n        useRestriction:\n          type: object\n          additionalProperties:\n            type: object\n          description: The UseRestriction of this consent. Used to match against another\n            entities.\n        dulName:\n          type: string\n          description: Name that identifies the Data Use Letter file.\n        translatedUseRestriction:\n          type: string\n          description: The translated use restriction of the consent.\n    structuredDataRequest:\n      required:\n        - aggregateLevelDataProhibited\n        - commercialUseProhibited\n        - controlsUseProhibited\n        - diseaseUseRequired\n        - forProfitUseProhibited\n        - genderUseRequired\n        - generalResearchUse\n        - healthMedicalBiomedicalUseRequired\n        - irbRequired\n        - methodsResearchProhibited\n        - pediatricResearchRequired\n      type: object\n      properties:\n        generalResearchUse:\n          type: boolean\n          description: Is the data available for future general research use?\n        healthMedicalBiomedicalUseRequired:\n          type: boolean\n          description: Is future use limited for health/medical/biomedical research?\n        diseaseUseRequired:\n          type: array\n          description: Future use is limited to research involving the following disease\n            area(s). These values must be urls such as \"http://purl.obolibrary.org/obo/DOID_12345\".\n          items:\n            type: string\n            example: http://purl.obolibrary.org/obo/DOID_4\n        commercialUseProhibited:\n          type: boolean\n          description: Is future commercial use prohibited?\n        forProfitUseProhibited:\n          type: boolean\n          description: Is future use by for-profit entities prohibited?\n        methodsResearchProhibited:\n          type: boolean\n          description: Is future use for methods research (analytic/software/technology\n            development) outside the bounds of the other specified restrictions prohibited?\n        aggregateLevelDataProhibited:\n          type: boolean\n          description: Is future use of aggregate-level data for general research\n            purposes prohibited?\n        controlsUseProhibited:\n          type: boolean\n          description: Is future use as a control set for diseases other than those\n            specified prohibited?\n        genderUseRequired:\n          type: string\n          description: If future use is limited to research involving a particular\n            gender, specify \"male\" or \"female\". Any other value will be read as false.\n            This field is case-insensitive.\n        pediatricResearchRequired:\n          type: boolean\n          description: Is future use limited to pediatric research?\n        irbRequired:\n          type: boolean\n          description: Should the requester provide documentation of local IRB/REC\n            approval?\n        prefix:\n          type: string\n          description: Optional. A prefix that is prepended to the field names of\n            the responses. This is purely for personalization.\n    CopyConfigurationIngest:\n      required:\n        - configurationName\n        - configurationNamespace\n        - configurationSnapshotId\n        - destinationName\n        - destinationNamespace\n      type: object\n      properties:\n        configurationNamespace:\n          type: string\n          description: Method configuration namespace\n        configurationName:\n          type: string\n          description: Method configuration name\n        configurationSnapshotId:\n          type: integer\n          description: Method configuration snapshot id\n          format: int32\n        destinationNamespace:\n          type: string\n          description: Method configuration destination namespace\n        destinationName:\n          type: string\n          description: Method configuration destination name\n    CopyEntity:\n      type: object\n      properties:\n        sourceWorkspace:\n          $ref: '#/components/schemas/Namespace'\n        entityType:\n          type: string\n          description: Entity Type\n        entityNames:\n          type: array\n          description: List of entity names to be copied\n          items:\n            type: string\n    CreateRawlsBillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        highSecurityNetwork:\n          type: boolean\n          description: Optional, false if not specified. If true, spin up all compute\n            in a VPC network.\n        enableFlowLogs:\n          type: boolean\n          description: Requires highSecurityNetwork = true. Optional, false if not\n            specified. If true, enable flow logs within the high security network.\n        privateIpGoogleAccess:\n          type: boolean\n          description: Requires highSecurityNetwork = true. Optional, false if not\n            specified. If true, it configures the VPC network to only allow access\n            to GCP APIs that are protected by the project's service perimeter and\n            routes all allowed API traffic through a narrow IP range.\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    CreateRawlsV2BillingProjectFullRequest:\n      required:\n        - billingAccount\n        - projectName\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project to create\n        billingAccount:\n          type: string\n          description: the id of the billing account to use, must start with 'billingAccounts/'\n        servicePerimeter:\n          type: string\n          description: The fully qualified name of the GCP service perimeter to put\n            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].\n            Caller must have the add_project action for this service perimeter in\n            Sam.\n      description: \"\"\n    CuratorStatus:\n      required:\n        - curator\n      type: object\n      properties:\n        curator:\n          type: boolean\n      description: is the user a curator?\n    DatasetPermission:\n      type: object\n      properties:\n        name:\n          type: string\n          description: the name of the NIH dataset\n        authorized:\n          type: boolean\n          description: true if you have access to the dataset, false otherwise\n    Enabled:\n      type: object\n      properties:\n        google:\n          type: boolean\n          description: User enabled via Google?\n        ldap:\n          type: boolean\n          description: User enabled in LDAP?\n        allUsersGroup:\n          type: boolean\n          description: User is a member of the \"All Users\" group?\n        adminEnabled:\n          type: boolean\n          description: User is enabled in the system?\n        tosAccepted:\n          type: boolean\n          description: User has accepted the latest Terms of Service?\n    Entity:\n      required:\n        - attributes\n        - entityType\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the entity\n        entityType:\n          type: string\n          description: The type of the entity\n        attributes:\n          type: object\n          additionalProperties:\n            type: object\n          description: Map[String,Attribute]\n      description: \"\"\n    EntityAccessControl:\n      required:\n        - acls\n        - referencedBy\n      type: object\n      properties:\n        method:\n          $ref: '#/components/schemas/MethodShort'\n        referencedBy:\n          $ref: '#/components/schemas/MethodConfigurationName'\n        acls:\n          type: array\n          description: method repo ACLs for the referenced method\n          items:\n            $ref: '#/components/schemas/FireCloudPermission'\n        message:\n          type: string\n          description: error message generated when retrieving acls for this method\n    EntityCopyResponse:\n      required:\n        - entitiesCopied\n        - hardConflicts\n        - softConflicts\n      type: object\n      properties:\n        entitiesCopied:\n          type: array\n          description: the entities that were successfully copied into the workspace\n          items:\n            $ref: '#/components/schemas/AttributeEntityReference'\n        hardConflicts:\n          type: array\n          description: these entities already exist in your workspace\n          items:\n            $ref: '#/components/schemas/EntityHardConflict'\n        softConflicts:\n          type: array\n          description: the conflicts within your entity subtrees. note that this will\n            be empty if there are hard conflicts\n          items:\n            $ref: '#/components/schemas/EntitySoftConflict'\n      description: \"\"\n    EntityHardConflict:\n      required:\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: the type of the entity\n        entityName:\n          type: string\n          description: the name of the entity\n      description: \"\"\n    EntityID:\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: Entity Type\n        entityName:\n          type: string\n          description: Entity Name\n    EntityQueryParameters:\n      required:\n        - page\n        - pageSize\n        - sortDirection\n        - sortField\n      type: object\n      properties:\n        page:\n          type: integer\n          description: page number, 1-indexed positive integer\n          format: int32\n        pageSize:\n          type: integer\n          description: count of items per page, positive integer\n          format: int32\n        sortField:\n          type: string\n          description: field to sort by\n        sortDirection:\n          type: string\n          description: asc or desc\n        filterTerms:\n          type: string\n          description: terms to filter results by\n      description: \"\"\n    EntityQueryResponse:\n      required:\n        - parameters\n        - resultMetadata\n        - results\n      type: object\n      properties:\n        parameters:\n          $ref: '#/components/schemas/EntityQueryParameters'\n        resultMetadata:\n          $ref: '#/components/schemas/EntityQueryResultMetadata'\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Entity'\n      description: \"\"\n    EntityQueryResultMetadata:\n      required:\n        - filteredCount\n        - filteredPageCount\n        - unfilteredCount\n      type: object\n      properties:\n        unfilteredCount:\n          type: integer\n          description: count of results before filtering\n          format: int32\n        filteredCount:\n          type: integer\n          description: count of results after filtering\n          format: int32\n        filteredPageCount:\n          type: integer\n          description: count of pages after filtering; honors pageSize parameter\n          format: int32\n      description: \"\"\n    EntitySoftConflict:\n      required:\n        - conflicts\n        - entityName\n        - entityType\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: the type of the entity\n        entityName:\n          type: string\n          description: the name of the entity\n        conflicts:\n          type: array\n          description: the next entity in the path to the conflict\n          items:\n            $ref: '#/components/schemas/EntitySoftConflict'\n      description: \"\"\n    Error:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n          default: 500\n        message:\n          type: string\n          default: Internal Server Error\n    ErrorReport:\n      required:\n        - causes\n        - message\n        - source\n        - stackTrace\n      type: object\n      properties:\n        source:\n          type: string\n          description: service causing error\n        message:\n          type: string\n          description: what went wrong\n        statusCode:\n          type: integer\n          description: HTTP status code\n          format: int32\n        causes:\n          type: array\n          description: errors triggering this one\n          items:\n            $ref: '#/components/schemas/ErrorReport'\n        stackTrace:\n          type: array\n          description: stack trace\n          items:\n            $ref: '#/components/schemas/StackTraceElement'\n      description: \"\"\n    ExecutionEngineVersion:\n      type: object\n      properties:\n        cromwell:\n          type: string\n    ExecutionEvent:\n      required:\n        - description\n        - startTime\n      type: object\n      properties:\n        description:\n          type: string\n          description: Description of the event\n        startTime:\n          type: string\n          description: When the event started\n          format: date-time\n        endTime:\n          type: string\n          description: When the event finished\n          format: date-time\n      description: \"\"\n    ExtendedEnabled:\n      allOf:\n        - $ref: '#/components/schemas/Enabled'\n    FireCloudPermission:\n      required:\n        - role\n        - user\n      type: object\n      properties:\n        user:\n          type: string\n        role:\n          type: string\n    JWTWrapper:\n      type: object\n      properties:\n        jwt:\n          type: string\n          description: the encoded/signed JWT\n    KeyValuePair:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    LibraryBulkIndexResponse:\n      type: object\n      properties:\n        totalCount:\n          type: integer\n          description: the number of published workspaces sent to be indexed\n          format: int32\n        hasFailures:\n          type: boolean\n          description: did the indexing operation result in any failures?\n          default: false\n        failureMessages:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String,String] of id -\u003e failure message\n    LibraryMetadataInput:\n      type: object\n      description: JSON-standard packet of metadata as defined by the Library schema\n      example: |\n        {\n          \"library:requiresExternalApproval\": false,\n          \"library:contactEmail\": \"someone@broadinstitute.org\",\n          \"library:datasetName\": \"My Dataset\",\n          \"library:numSubjects\": 123,\n          \"library:datatype\": [\"Whole Exome\", \"Whole Genome\"]\n          ...\n          additional JSON-standard fields as\n          defined by the Library schema\n          ...\n        }\n    ManagedGroupRef:\n      required:\n        - membersGroupName\n      type: object\n      properties:\n        membersGroupName:\n          type: string\n      description: a reference to a group that can be managed by users\n    ManagedGroupAccessInstructions:\n      required:\n        - groupName\n        - instructions\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: The name of the Group with instructions\n        instructions:\n          type: string\n          description: The instructions for applying to the Group\n      description: \"\"\n    ManagedGroupAccessResponse:\n      required:\n        - groupEmail\n        - groupName\n        - role\n      type: object\n      properties:\n        groupName:\n          type: string\n        groupEmail:\n          type: string\n        role:\n          type: string\n      description: an element of a list of groups a user has access to\n    ManagedGroupWithMembers:\n      required:\n        - adminsEmails\n        - adminsGroup\n        - membersEmails\n        - membersGroup\n      type: object\n      properties:\n        membersGroup:\n          $ref: '#/components/schemas/RawlsGroupShort'\n        adminsGroup:\n          $ref: '#/components/schemas/RawlsGroupShort'\n        membersEmails:\n          type: array\n          items:\n            type: string\n        adminsEmails:\n          type: array\n          items:\n            type: string\n      description: a group with all of its members\n    Me:\n      type: object\n      properties:\n        userInfo:\n          $ref: '#/components/schemas/UserInfo'\n        enabled:\n          $ref: '#/components/schemas/Enabled'\n    MethodAclPair:\n      required:\n        - acls\n        - method\n      type: object\n      properties:\n        method:\n          $ref: '#/components/schemas/MethodRepoMethod'\n        acls:\n          type: array\n          items:\n            $ref: '#/components/schemas/FireCloudPermission'\n        message:\n          type: string\n          description: ignored during input; if present during output, contains error\n            messages\n    MethodConfigACL:\n      type: array\n      items:\n        required:\n          - role\n          - user\n        type: object\n        properties:\n          user:\n            type: string\n            description: a user's ID or \"public\"\n          role:\n            type: string\n            description: one of \"NO ACCESS\", \"READER\", or \"OWNER\"\n    MethodConfigRename:\n      required:\n        - name\n        - namespace\n        - workspaceName\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Method configuration namespace\n        name:\n          type: string\n          description: Method configuration name\n        workspaceName:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String] with corresponding workspace-related information\n            - name and namespace\n    MethodConfiguration:\n      required:\n        - inputs\n        - methodRepoMethod\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: This method configuration's namespace\n        name:\n          type: string\n          description: The name of the method configuration\n        rootEntityType:\n          type: string\n          description: The root entity type that the method will be running on. Optional\n            if this method config doesn't run on an entity (i.e. uses only workspace\n            attributes and literal inputs).\n        prerequisites:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String]\n        inputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String]\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, String]\n        methodRepoMethod:\n          $ref: '#/components/schemas/MethodRepoMethod'\n        methodConfigVersion:\n          type: integer\n          description: Version number, incremented on edit\n          format: int32\n        deleted:\n          type: boolean\n          description: Is this config marked as deleted?\n        dataReferenceName:\n          type: string\n          description: the name of the data reference within this workspace to be used to derive input values\n      description: \"\"\n    MethodConfigurationName:\n      required:\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: This method configuration's namespace\n        name:\n          type: string\n          description: The name of the method configuration\n    MethodDefinition:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Namespace which contains the method.\n        name:\n          type: string\n          description: Name of the method.\n        synopsis:\n          type: string\n          description: Synopsis of the method\n        managers:\n          type: array\n          description: List of Owners.\n          items:\n            type: string\n        public:\n          type: boolean\n          description: Is this method publicly readable?\n        numConfigurations:\n          type: integer\n          description: count of configurations associated with this method\n          format: int32\n        numSnapshots:\n          type: integer\n          description: count of snapshots of this method\n          format: int32\n        entityType:\n          type: string\n          description: always \"Workflow\".\n          default: Workflow\n    MethodID:\n      required:\n        - methodName\n        - methodNamespace\n        - methodVersion\n      type: object\n      properties:\n        methodNamespace:\n          type: string\n          description: Method namespace\n        methodName:\n          type: string\n          description: Method name\n        methodVersion:\n          type: integer\n          description: Method version\n          format: int32\n          default: 0\n    MethodQuery:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        payload:\n          type: string\n          description: Payload of method -- must be in WDL format\n          default: |\n            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n    MethodShort:\n      required:\n        - managers\n        - name\n        - namespace\n        - snapshotId\n      type: object\n      properties:\n        managers:\n          type: array\n          description: List of Owners.\n          items:\n            type: string\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        snapshotId:\n          type: integer\n          description: SnapshotId of AgoraEntity\n          format: int32\n        public:\n          type: boolean\n          description: If this AgoraEntity is publicly readable.\n    MethodRepoMethod:\n      required:\n        - methodName\n        - methodNamespace\n        - methodVersion\n      type: object\n      properties:\n        methodNamespace:\n          type: string\n          description: The namespace of the method in Agora\n        methodName:\n          type: string\n          description: The name of the method in Agora\n        methodVersion:\n          type: integer\n          description: The integer method version in Agora (or a string method version\n            for Dockstore)\n          format: int32\n        methodPath:\n          type: string\n          description: The path of the method in Dockstore\n        sourceRepo:\n          type: string\n          description: The method's repository, currently one of \"agora\" or \"dockstore\"\n        methodUri:\n          type: string\n          description: URI that specifies the method's repository and captures all\n            the information necessary to identify the method within its repository\n            (e.g. agora://namespace/name/1, dockstore://path/version)\n      description: \"\"\n    MethodResponse:\n      required:\n        - managers\n        - name\n        - namespace\n        - snapshotId\n      type: object\n      properties:\n        managers:\n          type: array\n          description: List of Owners.\n          items:\n            type: string\n        namespace:\n          type: string\n          description: Namespace which contains AgoraEntity.\n          default: YOUR_NAMESPACE\n        name:\n          type: string\n          description: Name of the AgoraEntity.\n          default: BWA\n        snapshotId:\n          type: integer\n          description: SnapshotId of AgoraEntity\n          format: int32\n        snapshotComment:\n          type: string\n          description: Snapshot comment of AgoraEntity\n          default: Improved spline reticulation\n        synopsis:\n          type: string\n          description: Synopsis which contains AgoraEntity.\n          default: Quickly aligns short nucleotide sequences.\n        documentation:\n          type: string\n          description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.\n          default: |\n            BWA is a software package for mapping low-divergent sequences\n            against a large reference genome, such as the human genome.\n            It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.\n        createDate:\n          type: string\n          description: Timestamp of creation\n        url:\n          type: string\n          description: URL where resource can be accessed.\n        payload:\n          type: string\n          description: Payload of method -- must be in WDL format. MUST BE REQUESTED\n            EXPLICITLY.\n          default: |\n            task wc {File in_file command { cat ${in_file} | wc -l } output { Int count = read_int(stdout()) }}\n        entityType:\n          type: string\n          description: Type of the AgoraEntity -- Task or Workflow.\n          default: Task\n    Namespace:\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Entity namespace\n        name:\n          type: string\n          description: Entity name\n    NewMethodConfigIngest:\n      required:\n        - deleted\n        - inputs\n        - methodConfigVersion\n        - methodRepoMethod\n        - name\n        - namespace\n        - outputs\n        - prerequisites\n        - rootEntityType\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: Method configuration namespace\n        name:\n          type: string\n          description: Method configuration name\n        rootEntityType:\n          type: string\n          description: Method configuration root entity type\n        inputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Input map - Map[string, string]\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Output map - Map[string, string]\n        prerequisites:\n          type: object\n          additionalProperties:\n            type: string\n          description: Prerequisites map - Map[string, string]\n        methodRepoMethod:\n          type: object\n          additionalProperties:\n            type: string\n          description: Method ID - Map\n        methodConfigVersion:\n          type: integer\n          description: Version number, incremented on edit\n          format: int32\n        deleted:\n          type: boolean\n          description: Is this config marked as deleted?\n          default: false\n    NihStatus:\n      required:\n        - linkedNihUsername\n      type: object\n      properties:\n        linkedNihUsername:\n          type: string\n        datasetPermissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetPermission'\n        linkExpireTime:\n          type: integer\n          format: int64\n          default: 0\n    NotificationType:\n      required:\n        - description\n        - notificationKey\n      type: object\n      properties:\n        notificationKey:\n          type: string\n        description:\n          type: string\n      description: key and description of a notification\n    OrchestrationVersion:\n      type: object\n      properties:\n        version:\n          type: string\n    PermissionReport:\n      required:\n        - referencedMethods\n        - workspaceACL\n      type: object\n      properties:\n        workspaceACL:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/WorkspaceAccessEntry'\n          description: a map of (user email -\u003e WorkspaceAccessEntry). `exampleEmail`\n            is an example key.\n        referencedMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityAccessControl'\n      description: ACLs for users of a workspace and methods referenced by that workspace\n    PermissionReportRequest:\n      type: object\n      properties:\n        users:\n          type: array\n          description: list of email addresses; optional; defaults to all users in\n            the workspace\n          items:\n            type: string\n        configs:\n          type: array\n          description: list of configs; optional; defaults to all configs in the workspace\n          items:\n            $ref: '#/components/schemas/MethodConfigurationName'\n      description: users and/or configs on which to report.\n    PFBRequest:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n          description: link to publically accessible PFB/Avro\n    ImportRequest:\n      required:\n        - filetype\n        - url\n      type: object\n      properties:\n        filetype:\n          type: string\n          description: \"'pfb' or 'tdrexport'; the type of import to perform\"\n        url:\n          type: string\n          description: link to publically accessible file to import\n    ImportResponse:\n      required:\n        - jobId\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n          description: the link to TSV or PFB/Avro specified in the request\n        jobId:\n          type: string\n          description: unique id for the import job.\n        workspace:\n          type: object\n          properties:\n            namespace:\n              type: string\n              description: the workspace namespace specified in the request\n            name:\n              type: string\n              description: the workspace name specified in the request\n    ImportJobStatusResponse:\n      required:\n        - jobId\n        - status\n      type: object\n      properties:\n        jobId:\n          type: string\n          description: unique id for the import job.\n        filetype:\n          type: string\n          description: type of the import job.\n        status:\n          type: string\n          description: short status for the import job.\n        message:\n          type: string\n          description: extended explanation for the import job.\n    Profile:\n      required:\n        - firstName\n        - institute\n        - institutionalProgram\n        - lastName\n        - nonProfitStatus\n        - pi\n        - programLocationCity\n        - programLocationCountry\n        - programLocationState\n        - title\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: User's first name\n        lastName:\n          type: string\n          description: User's last name\n        title:\n          type: string\n          description: User's title\n        contactEmail:\n          type: string\n          description: User's contact email (if different from account email)\n        institute:\n          type: string\n          description: User's home institution\n        institutionalProgram:\n          type: string\n          description: User's institutional program\n        programLocationCity:\n          type: string\n          description: User's program location city\n        programLocationState:\n          type: string\n          description: User's program location state\n        programLocationCountry:\n          type: string\n          description: User's program location country\n        pi:\n          type: string\n          description: Principal Investigator\n        nonProfitStatus:\n          type: string\n          description: User's program non-profit status\n        termsOfService:\n          type: string\n          description:\n            The Terms of Service url, \"app.terra.bio/#terms-of-service\", which a user\n            must include to show they accept the Terms of Service\n    PublishConfigurationIngest:\n      required:\n        - configurationName\n        - configurationNamespace\n        - sourceName\n        - sourceNamespace\n      type: object\n      properties:\n        configurationNamespace:\n          type: string\n          description: Method configuration namespace\n        configurationName:\n          type: string\n          description: Method configuration name\n        sourceNamespace:\n          type: string\n          description: Method configuration source namespace\n        sourceName:\n          type: string\n          description: Method configuration source name\n    RawlsGroupRef:\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: \"\"\n      description: a reference to a group\n    RawlsGroupShort:\n      type: object\n      properties:\n        groupName:\n          type: string\n          description: the name of the group\n        groupEmail:\n          type: string\n          description: the email associated with the group\n      description: a reference to a group\n    RawlsMe:\n      type: object\n      properties:\n        userInfo:\n          $ref: '#/components/schemas/UserInfo'\n        enabled:\n          $ref: '#/components/schemas/ExtendedEnabled'\n    RegisterProfile:\n      type: object\n      properties:\n        userId:\n          type: string\n          description: The user's subject id\n        keyValuePairs:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValuePair'\n    ResearchPurpose:\n      required:\n        - DS\n        - NAGR\n        - NCTRL\n        - NCU\n        - NMDS\n        - POA\n      type: object\n      properties:\n        DS:\n          type: array\n          description: |\n            Disease focused research. Values are DOID ontology node ids in the form http://purl.obolibrary.org/obo/DOID_NNN. Specify an empty array if this is not disease focused research.\n          items:\n            type: string\n            example: http://purl.obolibrary.org/obo/DOID_4\n        NMDS:\n          type: boolean\n          description: Methods development/Validation study\n          default: false\n        NCTRL:\n          type: boolean\n          description: Control set\n          default: false\n        NAGR:\n          type: boolean\n          description: Aggregate analysis to understand variation in the general population\n          default: false\n        POA:\n          type: boolean\n          description: Study population origins or ancestry\n          default: false\n        NCU:\n          type: boolean\n          description: Commercial purpose/by a commercial entity\n          default: false\n    ResearchPurposeRequest:\n      type: object\n      properties:\n        DS:\n          type: array\n          description: |\n            Disease focused research. Values are DOID ontology node ids in the form http://purl.obolibrary.org/obo/DOID_NNN. Specify an empty array if this is not disease focused research.\n          items:\n            type: string\n            example: http://purl.obolibrary.org/obo/DOID_4\n        NMDS:\n          type: boolean\n          description: Methods development/Validation study\n          default: false\n        NCTRL:\n          type: boolean\n          description: Control set\n          default: false\n        NAGR:\n          type: boolean\n          description: Aggregate analysis to understand variation in the general population\n          default: false\n        POA:\n          type: boolean\n          description: Study population origins or ancestry\n          default: false\n        NCU:\n          type: boolean\n          description: Commercial purpose/by a commercial entity\n          default: false\n        prefix:\n          type: string\n          description: Prefix for query properties. Must match prefix used when indexing.\n          default: \"\"\n    SearchTermRef:\n      type: object\n      properties:\n        searchString:\n          type: string\n          description: The term to search for\n        filters:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: Map[String, Array[String]] Each entry contains the column name\n            (i.e. \"library:indication\") and a list of terms that will be or'ed in\n            the query ([\"cancer\", \"sleep apnea\"])\n        researchPurpose:\n          $ref: '#/components/schemas/ResearchPurpose'\n        fieldAggregations:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int32\n          description: Map[String, Int] The list of fields for which you would like\n            to retrieve aggregations and the number of aggregations to return. Default\n            is 5. Specify 0 to get all\n        from:\n          type: integer\n          description: Where in the results list to start (used for pagination)\n          format: int32\n          default: 0\n        size:\n          type: integer\n          description: How many results to return\n          format: int32\n          default: 10\n        sortField:\n          type: string\n          description: Field name on which to sort; defaults to sort by relevance\n            if not specified\n        sortDirection:\n          type: string\n          description: asc or desc; defaults to asc if not specified\n    StackTraceElement:\n      required:\n        - className\n        - fileName\n        - lineNumber\n        - methodName\n      type: object\n      properties:\n        className:\n          type: string\n          description: class name\n        methodName:\n          type: string\n          description: method name\n        fileName:\n          type: string\n          description: source file name\n        lineNumber:\n          type: integer\n          description: line number\n          format: int32\n      description: \"\"\n    SpendReportConfiguration:\n      required:\n        - datasetGoogleProject\n        - datasetName\n      type: object\n      properties:\n        datasetGoogleProject:\n          type: string\n          description: the name of the Google Project where the BigQuery dataset resides\n        datasetName:\n          type: string\n          description: the name of the BigQuery dataset containing project spend data\n      description: \"\"\n    StringArray:\n      type: array\n      example:\n        - foo\n        - bar\n      items:\n        type: string\n    Submission:\n      type: object\n      properties:\n        submissionId:\n          type: string\n          description: SubmissionRequest unique identifier\n        submissionDate:\n          type: string\n          description: SubmissionRequest date\n          format: date-time\n        submitter:\n          type: string\n          description: user that created the submission\n        methodConfigurationNamespace:\n          type: string\n          description: Method configuration namespace\n        methodConfigurationName:\n          type: string\n          description: Method configuration name\n        submissionEntity:\n          $ref: '#/components/schemas/AttributeEntityReference'\n        workflows:\n          type: array\n          description: Status of Workflow(s)\n          items:\n            $ref: '#/components/schemas/Workflow'\n        status:\n          $ref: '#/components/schemas/SubmissionStatus'\n        cost:\n          type: number\n          description: The compute cost of this submission\n          format: float\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See Cromwell docs for more information.\n        useReferenceDisks:\n          type: boolean\n          description: Whether or not to use pre-built disks for common genome references\n        memoryRetryMultiplier:\n          type: number\n          description: If a task fails due to running out of memory and the task has `maxRetries` in its runtime attributes,\n            then it will be retried with its memory multiplied by this amount.  See [Cromwell docs](https://cromwell.readthedocs.io/en/develop/cromwell_features/RetryWithMoreMemory/#retry-with-more-memory)\n            for more information.\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n        userComment:\n          type: string\n          description: Comment for the submission\n      description: \"\"\n    SubmissionsCountResponse:\n      type: object\n      properties:\n        Accepted:\n          type: integer\n          format: int32\n        Evaluating:\n          type: integer\n          format: int32\n        Submitting:\n          type: integer\n          format: int32\n        Submitted:\n          type: integer\n          format: int32\n        Aborting:\n          type: integer\n          format: int32\n        Aborted:\n          type: integer\n          format: int32\n        Done:\n          type: integer\n          format: int32\n    SubmissionRequest:\n      required:\n        - methodConfigurationName\n        - methodConfigurationNamespace\n        - useCallCache\n      type: object\n      properties:\n        methodConfigurationNamespace:\n          type: string\n          description: Namespace of the method configuration to execute.\n        methodConfigurationName:\n          type: string\n          description: Name of the method configuration to execute.\n        entityType:\n          type: string\n          description: Type of root entity for expression. Optional if the method\n            configuration has no root entity.\n        entityName:\n          type: string\n          description: Name of root entity for expression. Optional if the method\n            configuration has no root entity.\n        expression:\n          type: string\n          description: Expression that resolves to one or more entities matching the\n            entity type in the method configuration. Optional if the method configuration\n            has no root entity.\n        useCallCache:\n          type: boolean\n          description: Whether or not to read from cache for this submission.\n        deleteIntermediateOutputFiles:\n          type: boolean\n          description: Whether or not to delete intermediate output files when the\n            workflow completes. See Cromwell docs for more information.\n        useReferenceDisks:\n          type: boolean\n          description: Whether or not to use pre-built disks for common genome references\n        memoryRetryMultiplier:\n          type: number\n          description: If a task fails due to running out of memory and the task has `maxRetries` in its runtime attributes,\n            then it will be retried with its memory multiplied by this amount.  See [Cromwell docs](https://cromwell.readthedocs.io/en/develop/cromwell_features/RetryWithMoreMemory/#retry-with-more-memory)\n            for more information.\n        workflowFailureMode:\n          type: string\n          description: What happens after a task fails. Choose from ContinueWhilePossible\n            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell\n            docs for more information.\n          default: NoNewCalls\n          enum:\n            - NoNewCalls\n            - ContinueWhilePossible\n        userComment:\n          type: string\n          description: Freeform user defined description, optional (max length 1000 characters)\n      description: If the referenced method configuration takes no root entity, do\n        not define `entityType`, `entityName` and `expression`.\n    SubmissionStatus:\n      type: string\n      description: submission status\n      enum:\n        - Accepted\n        - Evaluating\n        - Submitting\n        - Submitted\n        - Aborting\n        - Aborted\n        - Done\n    SubmissionValidationEntityInputs:\n      required:\n        - entityName\n        - inputResolutions\n      type: object\n      properties:\n        entityName:\n          type: string\n          description: name of entity\n        inputResolutions:\n          type: array\n          description: input resolution\n          items:\n            $ref: '#/components/schemas/SubmissionValidationValue'\n      description: the results of parsing each of the inputs for one entity\n    SubmissionValidationHeader:\n      required:\n        - entityType\n        - inputExpressions\n      type: object\n      properties:\n        entityType:\n          type: string\n          description: type of entity\n        inputExpressions:\n          type: array\n          description: input descriptions\n          items:\n            $ref: '#/components/schemas/SubmissionValidationInput'\n      description: common values for all the entities -- the entity type and the input\n        descriptions\n    SubmissionValidationInput:\n      required:\n        - expression\n        - wdlName\n      type: object\n      properties:\n        wdlName:\n          type: string\n          description: name of input\n        expression:\n          type: string\n          description: expression for input\n      description: method configuration input parameter, it's name and the associated\n        expression from the method config\n    SubmissionValidationReport:\n      required:\n        - header\n        - invalidEntities\n        - request\n        - validEntities\n      type: object\n      properties:\n        header:\n          $ref: '#/components/schemas/SubmissionValidationHeader'\n        validEntities:\n          type: array\n          description: runnable entities\n          items:\n            $ref: '#/components/schemas/SubmissionValidationEntityInputs'\n        invalidEntities:\n          type: array\n          description: non-runnable entities\n          items:\n            $ref: '#/components/schemas/SubmissionValidationEntityInputs'\n        request:\n          $ref: '#/components/schemas/SubmissionRequest'\n      description: the results of parsing each input for each entity\n    SystemStatus:\n      required:\n        - ok\n        - systems\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: whether any system(s) need attention\n          example: false\n        systems:\n          type: object\n          additionalProperties:\n            type: object\n          description: Map[String, SubsystemStatus]\n          example:\n            Agora:\n              ok: true\n            Google:\n              ok: true\n            Consent:\n              ok: false\n              messages:\n                - ClusterHealth is RED\n            Rawls:\n              ok: true\n            Ontology:\n              ok: true\n            Search:\n              ok: true\n            Thurloe:\n              ok: false\n              messages:\n                - Thurloe misbehavior message\n      description: report status of systems Orchestration calls out to\n    SubsystemStatus:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: whether this system needs attention\n        messages:\n          type: array\n          items:\n            type: string\n      description: specifics for each subsystem\n    SubmissionValidationValue:\n      required:\n        - inputName\n      type: object\n      properties:\n        value:\n          type: string\n          description: the value of the input expression for the specified entity\n        error:\n          type: string\n          description: parsing error(s)\n        inputName:\n          type: string\n          description: name of input\n      description: result of an expression parse for one of the inputs\n    TerraPreference:\n      type: object\n      properties:\n        preferTerra:\n          type: boolean\n          description: When true, prefer Terra UI; when false, prefer Legacy FireCloud\n            UI.\n        preferTerraLastUpdated:\n          type: integer\n          description: Epoch timestamp representing when the Terra Preference was\n            last saved.\n          format: int64\n      description: Current user's choice of UI views.\n    ToolClass:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique identifier for the class\n        name:\n          type: string\n          description: A short friendly name for the class\n        description:\n          type: string\n          description: A longer explanation of what this class is and what it can\n            accomplish\n      description: Describes a class (type) of tool allowing us to categorize workflows,\n        tools, and maybe even other entities (such as services) separately\n    Tool:\n      required:\n        - author\n        - id\n        - meta-version\n        - organization\n        - toolclass\n        - url\n        - versions\n      type: object\n      properties:\n        url:\n          type: string\n          description: The URL for this tool in this registry, for example `http://agora.broadinstitute.org/tools/123456`\n        id:\n          type: string\n          description: A unique identifier of the tool, scoped to this registry, for\n            example `123456` or `123456_v1`\n        organization:\n          type: string\n          description: The organization that published the image.\n        toolname:\n          type: string\n          description: The name of the tool.\n        toolclass:\n          $ref: '#/components/schemas/ToolClass'\n        description:\n          type: string\n          description: The description of the tool.\n        author:\n          type: string\n          description: Contact information for the author of this tool entry in the\n            registry. (More complex authorship information is handled by the descriptor)\n        meta-version:\n          type: string\n          description: The version of this tool in the registry. Iterates when fields\n            like the description, author, etc. are updated.\n        contains:\n          type: array\n          description: An array of IDs for the applications that are stored inside\n            this tool (for example `https://bio.tools/tool/mytum.de/SNAP2/1`). This\n            always returns an empty array.\n          items:\n            type: string\n        verified:\n          type: boolean\n          description: Reports whether this tool has been verified by a specific organization\n            or individual.  This always returns false.\n        verified-source:\n          type: string\n          description: Source of metadata that can support a verified tool, such as\n            an email or URL\n        signed:\n          type: boolean\n          description: Reports whether this tool has been signed.  This always returns\n            false.\n        versions:\n          type: array\n          description: A list of versions for this tool\n          items:\n            $ref: '#/components/schemas/ToolVersion'\n      description: A tool (or described tool) describes one pairing of a tool as described\n        in a descriptor file (which potentially describes multiple tools) and a Docker\n        image.\n    ToolVersion:\n      required:\n        - id\n        - meta-version\n        - url\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the version.\n        url:\n          type: string\n          description: The URL for this tool in this registry, for example `http://agora.broadinstitute.org/tools/123456/1`\n        id:\n          type: string\n          description: An identifier of the version of this tool for this particular\n            tool registry, for example `v1`\n        image:\n          type: string\n          description: The docker path to the image (and version) for this tool. (e.g.\n            quay.io/seqware/seqware_full/1.1). This always returns an empty string.\n        descriptor-type:\n          type: array\n          description: The type (or types) of descriptors available.\n          items:\n            type: string\n            enum:\n              - WDL\n        dockerfile:\n          type: boolean\n          description: Reports if this tool has a dockerfile available. This always\n            returns false.\n        meta-version:\n          type: string\n          description: The version of this tool version in the registry. Iterates\n            when fields like the description, author, etc. are updated.\n      description: A tool version describes a particular iteration of a tool as described\n        by a reference to a specific image and dockerfile.\n    ToolDescriptor:\n      required:\n        - descriptor\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - WDL\n        descriptor:\n          type: string\n          description: The descriptor that represents this version of the tool. (WDL)\n        url:\n          type: string\n          description: Optional url to the tool descriptor used to build this image,\n            should include version information, and can include a git hash (e.g. https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/ea2a5db69bd20a42976838790bc29294df3af02b/delly_docker/Delly.cwl\n            )\n      description: A tool descriptor is a metadata document that describes one or\n        more tools.\n    Metadata:\n      required:\n        - api-version\n        - version\n      type: object\n      properties:\n        version:\n          type: string\n          description: The version of this registry\n        api-version:\n          type: string\n          description: The version of the GA4GH tool-registry API supported by this\n            registry\n        country:\n          type: string\n          description: A country code for the registry (ISO 3166-1 alpha-3)\n        friendly-name:\n          type: string\n          description: A friendly name that can be used in addition to the hostname\n            to describe a registry\n      description: Describes this registry to better allow for mirroring and indexing.\n    UpdateRawlsBillingAccountRequest:\n      required:\n        - billingAccount\n      type: object\n      properties:\n        billingAccount:\n          type: string\n          description: The name of the billing account to use\n    UserImportPermission:\n      type: object\n      properties:\n        billingProject:\n          type: boolean\n          description: does the user have at least one ready billing project?\n        writableWorkspace:\n          type: boolean\n          description: does the user have at least one writable workspace?\n    UserInfo:\n      type: object\n      properties:\n        userSubjectId:\n          type: string\n          description: User's ID (subject id from Google)\n        userEmail:\n          type: string\n          description: User's email\n    ValidatedMethodConfiguration:\n      required:\n        - extraInputs\n        - invalidInputs\n        - invalidOutputs\n        - methodConfiguration\n        - missingInputs\n        - validInputs\n        - validOutputs\n      type: object\n      properties:\n        validInputs:\n          type: array\n          items:\n            type: string\n        invalidInputs:\n          type: object\n          additionalProperties:\n            type: object\n        missingInputs:\n          type: array\n          items:\n            type: string\n        extraInputs:\n          type: array\n          items:\n            type: string\n        validOutputs:\n          type: array\n          items:\n            type: string\n        invalidOutputs:\n          type: object\n          additionalProperties:\n            type: object\n        methodConfiguration:\n          $ref: '#/components/schemas/MethodConfiguration'\n      description: Information about the validity of a method configuration's expressions\n        relative to the method itself\n    Workflow:\n      type: object\n      properties:\n        workflowId:\n          type: string\n          description: Workflow unique identifier\n        status:\n          $ref: '#/components/schemas/WorkflowStatus'\n        statusLastChangedDate:\n          type: string\n          description: Status last-changed date\n          format: date-time\n        workflowEntity:\n          $ref: '#/components/schemas/AttributeEntityReference'\n        inputResolutions:\n          type: array\n          description: The evaluation of each input\n          items:\n            $ref: '#/components/schemas/SubmissionValidationValue'\n        messages:\n          type: array\n          description: List of messages about this workflow\n          items:\n            type: string\n        cost:\n          type: number\n          description: The run cost of this workflow\n          format: float\n      description: \"\"\n    UserCommentUpdateOperation:\n      required:\n        - userComment\n      type: object\n      properties:\n        userComment:\n          type: string\n          description: The updated value for user comment (max length 1000 characters)\n      description: Update user comment for submission\n    WorkflowCost:\n      type: object\n      properties:\n        cost:\n          type: number\n          description: Workflow cost\n          format: float\n        workflowId:\n          type: string\n          description: The id of this workflow\n      description: The cost of a workflow, if available\n    WorkflowQueueStatusResponse:\n      required:\n        - estimatedQueueTimeMS\n        - workflowCountsByStatus\n        - workflowsBeforeNextUserWorkflow\n      type: object\n      properties:\n        estimatedQueueTimeMS:\n          type: integer\n          description: estimated milliseconds until the current queue is submitted\n          format: int64\n        workflowsBeforeNextUserWorkflow:\n          type: integer\n          description: the number of workflows in the queue ahead of the user's first\n            workflow\n          format: int32\n        workflowCountsByStatus:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int32\n          description: Map[String,Int]\n      description: Information about the status of workflows and the workflow queue\n    WorkflowStatus:\n      type: string\n      description: workflow status\n      enum:\n        - Queued\n        - Launching\n        - Submitted\n        - Running\n        - Failed\n        - Succeeded\n        - Aborting\n        - Aborted\n        - Unknown\n    Workspace:\n      required:\n        - accessLevels\n        - attributes\n        - authDomainACLs\n        - authorizationDomain\n        - bucketName\n        - createdBy\n        - createdDate\n        - isLocked\n        - lastModified\n        - name\n        - namespace\n        - workspaceId\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups to form the Authorization Domain (empty\n            if no Authorization Domain is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        workspaceId:\n          type: string\n          description: A UUID associated with the workspace\n        bucketName:\n          type: string\n          description: The name of the bucket associated with the workspace\n        createdDate:\n          type: string\n          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        lastModified:\n          type: string\n          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        createdBy:\n          type: string\n          description: The user who created the workspace\n        attributes:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, Attribute]\n        accessLevels:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RawlsGroupRef'\n          description: Map[String, RawlsGroupRef]\n        authDomainACLs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/RawlsGroupRef'\n          description: Map[String, RawlsGroupRef]\n        isLocked:\n          type: boolean\n          description: Can the Workspace currently be modified?\n      description: \"\"\n    WorkspaceACL:\n      required:\n        - acl\n      type: object\n      properties:\n        acl:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/WorkspaceAccessEntry'\n          description: Map[String, WorkspaceAccessEntry]\n      description: \"\"\n    WorkspaceACLUpdate:\n      required:\n        - accessLevel\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: email address of the user or group whose permissions will be\n            changed\n        accessLevel:\n          type: string\n          description: The access level to grant to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        canShare:\n          type: boolean\n          description: Set to true if you want this user to be able to share the workspace\n            with other users, only meaningful for readers and writers, default false\n        canCompute:\n          type: boolean\n          description: Set to true if you want this user to be able to launch compute\n            in this workspace, may not be true for readers, default false for reader,\n            true otherwise\n      description: \"\"\n    WorkspaceACLUpdateResponse:\n      required:\n        - accessLevel\n        - subjectId\n      type: object\n      properties:\n        subjectId:\n          type: string\n          description: id of the user or group whose permissions will be changed\n        accessLevel:\n          type: string\n          description: The access level granted to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n      description: \"\"\n    WorkspaceACLUpdateResponseList:\n      required:\n        - invitesSent\n        - invitesUpdated\n        - usersNotFound\n        - usersUpdated\n      type: object\n      properties:\n        usersUpdated:\n          type: array\n          description: the users or groups who were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdateResponse'\n        invitesSent:\n          type: array\n          description: the list of invites that were sent\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        invitesUpdated:\n          type: array\n          description: the list of invites that were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n        usersNotFound:\n          type: array\n          description: the users or groups who were not found\n          items:\n            $ref: '#/components/schemas/WorkspaceACLUpdate'\n      description: \"\"\n    WorkspaceAccessEntry:\n      required:\n        - accessLevel\n        - canCompute\n        - canShare\n        - pending\n      type: object\n      properties:\n        accessLevel:\n          type: string\n          description: The access level granted to this user or group (OWNER, READER,\n            WRITER, NO ACCESS)\n        pending:\n          type: boolean\n          description: The status of the users access\n        canShare:\n          type: boolean\n          description: True if the user can share the workspace with others, false\n            otherwise\n        canCompute:\n          type: boolean\n          description: True if the user can launch compute in this workspace, false\n            otherwise\n      description: \"\"\n    WorkspaceAccessLevel:\n      type: string\n      description: The level of access a user or group has on a Workspace. NoAccess,\n        Read, Write, Owner, ProjectOwner\n      enum:\n        - PROJECT_OWNER\n        - OWNER\n        - WRITER\n        - READER\n        - NO ACCESS\n    WorkspaceBucketOptions:\n      required:\n        - requesterPays\n      type: object\n      properties:\n        requesterPays:\n          type: boolean\n          description: Whether the bucket is requester pays\n      description: Extra information about a GCS bucket attached to a workspace\n    WorkspaceCatalog:\n      required:\n        - catalog\n        - email\n      type: object\n      properties:\n        email:\n          type: string\n          description: email address of the user or group whose permissions will be\n            changed\n        catalog:\n          type: boolean\n          description: Set to true if you want this user to be able to perform library\n            related operations on the workspace\n      description: \"\"\n    WorkspaceCatalogResponse:\n      required:\n        - catalog\n        - subjectId\n      type: object\n      properties:\n        subjectId:\n          type: string\n          description: subject id of the user or group whose permissions were changed\n        catalog:\n          type: boolean\n          description: Set to true if you want this user to be able to perform library\n            related operations on the workspace\n      description: \"\"\n    WorkspaceCatalogUpdateResponseList:\n      required:\n        - emailsNotFound\n        - usersUpdated\n      type: object\n      properties:\n        usersUpdated:\n          type: array\n          description: the users or groups who were updated\n          items:\n            $ref: '#/components/schemas/WorkspaceCatalogResponse'\n        emailsNotFound:\n          type: array\n          description: the emails of users or groups who were not found\n          items:\n            type: string\n      description: \"\"\n    WorkspaceDetails:\n      required:\n        - bucketName\n        - createdBy\n        - createdDate\n        - isLocked\n        - lastModified\n        - name\n        - namespace\n        - workspaceId\n        - googleProject\n        - workspaceVersion\n      type: object\n      properties:\n        attributes:\n          type: object\n          properties: { }\n          description: Map[String, Attribute]\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        bucketName:\n          type: string\n          description: The name of the bucket associated with the workspace\n        createdBy:\n          type: string\n          description: The user who created the workspace\n        createdDate:\n          type: string\n          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        isLocked:\n          type: boolean\n          description: Can the Workspace currently be modified?\n        lastModified:\n          type: string\n          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ\n            format\n          format: date-time\n        name:\n          type: string\n          description: The name of the workspace\n        namespace:\n          type: string\n          description: The namespace the workspace belongs to\n        workflowCollectionName:\n          type: string\n          description: The name of the workflow collection associated with the workspace\n        workspaceId:\n          type: string\n          description: A UUID associated with the workspace\n        googleProject:\n          type: string\n          description: Identifies the google project used by the workspace for compute and storage\n        googleProjectNumber:\n          type: string\n          description: A different google project identifier for the same project identified by the googleProject; required by google for certain actions\n        workspaceVersion:\n          type: string\n          description: internal use\n        billingAccount:\n          type: string\n          description: The current billing account being charged for activity within this workspace. For desired billing account, look to the billing account specified on this workspace's billing project\n        billingAccountErrorMessage:\n          type: string\n          description: Error message received during most recent attempt to update the current billing account on workspace's Google project. Empty if update was successful.\n        completedCloneWorkspaceFileTransfer:\n          type: string\n          description: The date all files were successfully transferred to the workspace bucket if applicable\n            in yyyy-MM-ddTHH:mm:ss.SSSZZ format\n          format: date-time\n      description: \"\"\n    WorkspaceListResponse:\n      type: object\n      properties:\n        accessLevel:\n          $ref: '#/components/schemas/WorkspaceAccessLevel'\n        public:\n          type: boolean\n        workspace:\n          $ref: '#/components/schemas/WorkspaceDetails'\n        workspaceSubmissionStats:\n          $ref: '#/components/schemas/WorkspaceSubmissionStats'\n      description: \"\"\n    WorkspaceRequest:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        attributes:\n          type: object\n          properties: {}\n        noWorkspaceOwner:\n          type: boolean\n          description: Optional, false if not specified. If true, the workspace is created with a Billing Project owner but no workspace owner. Requires being a Billing Project owner.\n          default: false\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not provided, the bucket will be created in the 'US' multi-region.\n      description: \"\"\n    WorkspaceRequestClone:\n      required:\n        - attributes\n        - name\n        - namespace\n      type: object\n      properties:\n        namespace:\n          type: string\n          description: The namespace (billing project) the workspace belongs to\n        name:\n          type: string\n          description: The name of the workspace\n        authorizationDomain:\n          type: array\n          description: The list of groups in the Authorization Domain (empty if no\n            AD is set)\n          items:\n            $ref: '#/components/schemas/ManagedGroupRef'\n        attributes:\n          type: object\n          properties: {}\n        copyFilesWithPrefix:\n          type: string\n          description: Used for clone operations only; the prefix for files to copy between source and destination workspace buckets\n        noWorkspaceOwner:\n          type: boolean\n          description: Optional, false if not specified. If true, the workspace is created with a Billing Project owner but no workspace owner. Requires being a Billing Project owner.\n          default: false\n        bucketLocation:\n          type: string\n          required: false\n          description: Region (NOT multi-region) in which bucket attached to the workspace should be created. If not provided, the bucket will be created in the 'US' multi-region.\n      description: \"\"\n    WorkspaceResponse:\n      type: object\n      properties:\n        accessLevel:\n          $ref: '#/components/schemas/WorkspaceAccessLevel'\n        bucketOptions:\n          $ref: '#/components/schemas/WorkspaceBucketOptions'\n        canCompute:\n          type: boolean\n        canShare:\n          type: boolean\n        catalog:\n          type: boolean\n        owners:\n          type: array\n          description: |\n            Owners of this workspace. This API only lists owners; use the get-workspace-ACL API to get the full list of all users at all permission levels.\n          items:\n            type: string\n        workspace:\n          $ref: '#/components/schemas/WorkspaceDetails'\n        workspaceSubmissionStats:\n          $ref: '#/components/schemas/WorkspaceSubmissionStats'\n      description: \"\"\n    WorkspaceSubmissionStats:\n      required:\n        - runningSubmissionsCount\n      type: object\n      properties:\n        lastSuccessDate:\n          type: string\n          description: The date of the last successful submission\n          format: date-time\n        lastFailureDate:\n          type: string\n          description: The date of the last failed submission\n          format: date-time\n        runningSubmissionsCount:\n          type: integer\n          description: Count of all the running submissions\n      description: Statistics about submissions in a workspace\n    WorkspaceTag:\n      required:\n        - count\n        - tag\n      type: object\n      properties:\n        tag:\n          type: string\n          description: tag string\n          example: a tag\n        count:\n          type: integer\n          description: number of usages of the tag\n          format: int32\n          example: 5\n    ConfigurationPayload:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of this config\n          default: cancer_exome_pipeline_v2\n        namespace:\n          type: string\n          description: Namespace of this config\n          default: broad-dsde-dev\n        methodRepoMethod:\n          type: object\n          properties:\n            methodName:\n              type: string\n              description: Name of referenced method\n              default: cancer_exome_pipeline_v2\n            methodNamespace:\n              type: string\n              description: Namespace of referenced method\n              default: broad-dsde-dev,\n            methodVersion:\n              type: integer\n              description: Snapshot ID of referenced method\n              format: int32\n              default: 1\n        outputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, AttributeString] from method's WDL outputs to fields\n            in the workspace data model\n        inputs:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, AttributeString] from method's WDL inputs to fields\n            in the workspace data model\n        rootEntityType:\n          type: string\n          default: pair\n        prerequisites:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map[String, AttributeString]\n        methodConfigVersion:\n          type: integer\n          description: Snapshot ID of this config\n          format: int32\n          default: 1\n        deleted:\n          type: boolean\n          description: Has this config been deleted?\n          default: false\n    WorkflowQueryResponse:\n      required:\n        - results\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowQueryResult'\n      description: Response to a workflow query\n    WorkflowQueryResult:\n      required:\n        - id\n        - name\n        - start\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: Workflow ID\n        name:\n          type: string\n          description: Workflow name\n        status:\n          type: string\n          description: Workflow status\n        start:\n          type: string\n          description: Workflow start datetime\n          format: date-time\n        end:\n          type: string\n          description: Workflow end datetime\n          format: date-time\n      description: Result for an individual workflow returned by a workflow query\n    WorkflowQueryParameter:\n      type: object\n      properties:\n        start:\n          type: string\n          description: |\n            Returns only workflows with an equal or later start datetime.  Can be specified at most once. If both start and end date are specified, start date must be before or equal to end date.\n          format: date-time\n        end:\n          type: string\n          description: |\n            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once. If both start and end date are specified, start date must be before or equal to end date.\n          format: date-time\n        status:\n          type: string\n          description: |\n            Returns only workflows with the specified status.  If specified multiple times, returns workflows in any of the specified statuses.\n          enum:\n            - Submitted\n            - Running\n            - Aborting\n            - Failed\n            - Succeeded\n            - Aborted\n        name:\n          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$\n          type: string\n          description: |\n            Returns only workflows with the specified name.  If specified multiple times, returns workflows with any of the specified names.\n        id:\n          pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$\n          type: string\n          description: |\n            Returns only workflows with the specified workflow id.  If specified multiple times, returns workflows with any of the specified workflow ids.\n      description: Workflow query parameters\n    VersionResponse:\n      type: object\n      properties:\n        cromwell:\n          type: string\n          description: The version of the Cromwell Engine\n      description: Returns the version of Cromwell\n    StatusResponse:\n      type: object\n      properties:\n        serviceName:\n          type: object\n          properties:\n            ok:\n              type: boolean\n            messages:\n              type: array\n              items:\n                type: string\n      description: Returns the status of monitored subsystems.\n    WorkflowCacheDiffResponse:\n      type: object\n      properties:\n        callA:\n          $ref: '#/components/schemas/WorkflowCallDiff'\n        callB:\n          $ref: '#/components/schemas/WorkflowCallDiff'\n        hashDifferential:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowCallDiffCallHashDiff'\n    WorkflowCallDiff:\n      type: object\n      properties:\n        allowResultReuse:\n          type: boolean\n        callFqn:\n          type: string\n        executionStatus:\n          type: string\n        jobIndex:\n          type: number\n        workflowId:\n          $ref: '#/components/parameters/workflowIdParam'\n    WorkflowCallDiffCallHashDiff:\n      type: object\n      properties:\n        hashKey:\n          type: string\n        callA:\n          type: string\n        callB:\n          type: string\n    WorkflowStatusResponse:\n      required:\n        - id\n        - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of the workflow\n        status:\n          type: string\n          description: The status of the workflow\n    WorkflowMetadataResponse:\n      required:\n        - id\n        - status\n        - submission\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of the workflow\n        status:\n          type: string\n          description: The status of the workflow\n        submission:\n          type: string\n          description: Submission datetime of the workflow in ISO8601 format with\n            milliseconds\n          format: date-time\n        start:\n          type: string\n          description: Start datetime of the workflow in ISO8601 format with milliseconds\n          format: date-time\n        end:\n          type: string\n          description: End datetime of the workflow in ISO8601 format with milliseconds\n          format: date-time\n        inputs:\n          type: object\n          additionalProperties:\n            type: object\n          description: Map of input keys to input values\n        outputs:\n          type: object\n          additionalProperties:\n            type: object\n          description: Map of output keys to output values\n        calls:\n          $ref: '#/components/schemas/CallMetadata'\n        failures:\n          $ref: '#/components/schemas/FailureMessage'\n      description: Workflow and call level metadata\n    FailureMessage:\n      required:\n        - failure\n        - timestamp\n      type: object\n      properties:\n        failure:\n          type: string\n          description: The failure message\n        timestamp:\n          type: string\n          description: The time at which this failure occurred\n          format: date-time\n      description: Failure messages\n    WorkflowDescription:\n      required:\n        - errors\n        - inputs\n        - name\n        - outputs\n        - submittedDescriptorType\n        - valid\n      type: object\n      properties:\n        valid:\n          type: boolean\n          description: Whether the workflow and inputs as submitted passed validation\n        errors:\n          type: array\n          description: The set of validation failure messages\n          example:\n            - The 'errors' field will be filled if 'valid' is false\n            - We might also provide warnings to a 'valid' workflow here\n            - Otherwise, 'errors' will be the empty array\n          items:\n            type: string\n        name:\n          type: string\n          description: For a source file with one workflow and zero or more tasks,\n            the name of the workflow. For a single task, the name of the task. For\n            a source file with multiple tasks but no workflows, the empty string.\n        inputs:\n          type: array\n          description: A list of inputs for this tool\n          example:\n            - name: my_wf.string_input\n              valueType:\n                typeName: String\n              optional: false\n              typeDisplayName: String\n            - name: my_wf.array_input\n              valueType:\n                typeName: Array\n                arrayType:\n                  typeName: String\n              optional: false\n              typeDisplayName: Array[String]\n            - name: my_wf.optional_input\n              valueType:\n                typeName: Optional\n                optionalType:\n                  typeName: String\n              optional: true\n              default: hello\n              typeDisplayName: String?\n            - name: my_wf.map_input\n              valueType:\n                typeName: Map\n                mapType:\n                  keyType:\n                    typeName: String\n                  valueType:\n                    typeName: Int\n              optional: false\n              typeDisplayName: Map[String, Int]\n            - name: my_wf.object_input\n              valueType:\n                typeName: Object\n                objectFieldTypes:\n                  - fieldName: int_field\n                    fieldType:\n                      typeName: Int\n                  - fieldName: int_array_field\n                    fieldType:\n                      typeName: Array\n                      arrayType:\n                        typeName: Int\n              optional: false\n              typeDisplayName: Object\n            - name: my_wf.int_string_pair_input\n              valueType:\n                typeName: Pair\n                pairTypes:\n                  - leftType:\n                      - typeName: Int\n                  - rightType:\n                      - typeName: String\n              optional: false\n              typeDisplayName: Pair[Int, String]\n          items:\n            $ref: '#/components/schemas/ToolInputParameter'\n        outputs:\n          type: array\n          description: A list of outputs for this tool\n          example:\n            - name: my_wf.string_output\n              valueType:\n                typeName: String\n              typeDisplayName: String\n            - name: my_wf.array_output\n              valueType:\n                typeName: Array\n                arrayType:\n                  typeName: String\n              typeDisplayName: Array[String]\n            - name: my_wf.map_output\n              valueType:\n                typeName: Map\n                mapType:\n                  keyType:\n                    typeName: String\n                  valueType:\n                    typeName: Int\n              typeDisplayName: Map[String, Int]\n            - name: my_wf.object_output\n              valueType:\n                typeName: Object\n                objectFieldTypes:\n                  - fieldName: int_field\n                    fieldType:\n                      typeName: Int\n                  - fieldName: int_array_field\n                    fieldType:\n                      typeName: Array\n                      arrayType:\n                        typeName: Int\n              typeDisplayName: Object\n            - name: my_wf.int_string_pair_output\n              valueType:\n                typeName: Pair\n                tupleTypes:\n                  - typeName: Int\n                  - typeName: String\n              typeDisplayName: Pair[Int, String]\n          items:\n            $ref: '#/components/schemas/ToolOutputParameter'\n        submittedDescriptorType:\n          $ref: '#/components/schemas/DescriptorTypeAndVersion'\n    ToolInputParameter:\n      required:\n        - default\n        - name\n        - optional\n        - valueType\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this input value (formatted as expected by the\n            tool)\n        valueType:\n          $ref: '#/components/schemas/ValueType'\n        optional:\n          type: boolean\n          description: Whether the tool allows this value to not be specified\n        default:\n          type: string\n          description: The in-language expression used to evaluate a default value\n            for this parameter, if none is supplied.\n      description: An input parameter for a tool or workflow.\n    ToolOutputParameter:\n      required:\n        - name\n        - valueType\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of this input value (formatted as expected by the\n            tool)\n        valueType:\n          $ref: '#/components/schemas/ValueType'\n      description: An output parameter for a tool or workflow.\n    ValueType:\n      type: object\n      properties:\n        typeName:\n          type: string\n          description: The type of this value\n          enum:\n            - String\n            - File\n            - Directory\n            - Float\n            - Int\n            - Boolean\n            - Optional\n            - Array\n            - Tuple\n            - Map\n            - Object\n        optionalType:\n          $ref: '#/components/schemas/ValueType'\n        arrayType:\n          $ref: '#/components/schemas/ValueType'\n        mapType:\n          $ref: '#/components/schemas/MapValueType'\n        tupleTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValueType'\n        objectFieldTypes:\n          type: array\n          items:\n            type: object\n            properties:\n              fieldName:\n                type: string\n              fieldType:\n                $ref: '#/components/schemas/ValueType'\n      description: The type expected for a given value.\n    MapValueType:\n      required:\n        - keyType\n        - valueType\n      type: object\n      properties:\n        keyType:\n          $ref: '#/components/schemas/ValueType'\n        valueType:\n          $ref: '#/components/schemas/ValueType'\n      description: A type representing a map from one type to another.\n    DescriptorTypeAndVersion:\n      required:\n        - descriptorType\n        - descriptorTypeVersion\n      type: object\n      properties:\n        descriptorType:\n          $ref: '#/components/schemas/DescriptorType'\n        descriptorTypeVersion:\n          type: string\n          example: \"1.0\"\n      description: A workflow descriptor file type and version.\n    DescriptorType:\n      type: string\n      description: One from a list of descriptor type strings (e.g. CWL, WDL). Note\n        that these files can also include associated Docker/container files and test\n        parameters that further describe a version of a tool\n      example: WDL\n      enum:\n        - CWL\n        - WDL\n    LabelsResponse:\n      required:\n        - id\n        - labels\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of the workflow\n        labels:\n          type: string\n          description: The custom labels as json\n    BillingProjectResponse:\n      required:\n        - projectName\n        - invalidBillingAccount\n        - roles\n      type: object\n      properties:\n        projectName:\n          type: string\n          description: the name of the project\n        billingAccount:\n          type: string\n          description: the billing account to use in google projects\n        servicePerimeter:\n          type: string\n          description: the name of the service permeters for google project\n        invalidBillingAccount:\n          type: boolean\n          description: whether or not the billing account is usable by Terra\n        roles:\n          type: array\n          items:\n            type: string\n          description: the roles the caller has on the project\n        status:\n          deprecated: true\n          type: string\n          enum:\n            - Creating\n            - Ready\n            - Error\n            - AddingToPerimeter\n          description: the status of allocating the billing project's resources.\n        message:\n          deprecated: true\n          type: string\n          description: informational message about the project\n    WorkspaceBillingAccount:\n      required:\n        - workspaceName\n      type: object\n      properties:\n        workspaceName:\n          type: string\n          description: the name of the workspace\n        currentBillingAccountOnGoogleProject:\n          type: string\n          description: the billing project associated with the workspace\n  parameters:\n    versionParam:\n      name: version\n      in: path\n      description: Cromwell API Version\n      required: true\n      schema:\n        type: string\n        default: v1\n    workspaceNamespaceParam:\n      name: workspaceNamespace\n      in: path\n      description: Workspace Namespace\n      required: true\n      schema:\n        type: string\n    workspaceNameParam:\n      name: workspaceName\n      in: path\n      description: Workspace Name\n      required: true\n      schema:\n        type: string\n    methodNamespaceParam:\n      name: namespace\n      in: path\n      description: Method Namespace\n      required: true\n      schema:\n        type: string\n    methodNameParam:\n      name: name\n      in: path\n      description: Method Name\n      required: true\n      schema:\n        type: string\n    methodSnapshotId:\n      name: snapshotId\n      in: path\n      description: Method snapshot ID\n      required: true\n      schema:\n        type: string\n    configNamespaceParam:\n      name: namespace\n      in: path\n      description: Method Configuration Namespace\n      required: true\n      schema:\n        type: string\n    configNameParam:\n      name: name\n      in: path\n      description: Method Configuration Name\n      required: true\n      schema:\n        type: string\n    configSnapshotId:\n      name: snapshotId\n      in: path\n      description: Method Configuration snapshot ID\n      required: true\n      schema:\n        type: string\n    entityTypeParam:\n      name: entityType\n      in: path\n      description: Entity Type\n      required: true\n      schema:\n        type: string\n    entityNameParam:\n      name: entityName\n      in: path\n      description: Entity Name\n      required: true\n      schema:\n        type: string\n    submissionIdParam:\n      name: submissionId\n      in: path\n      description: Submission ID\n      required: true\n      schema:\n        type: string\n    workflowIdParam:\n      name: workflowId\n      in: path\n      description: Workflow ID\n      required: true\n      schema:\n        type: string\n    jobIdParam:\n      name: jobId\n      in: path\n      description: Operations job ID from Google Genomics API\n      required: true\n      schema:\n        type: string\n  requestBodies:\n    configACLPayload:\n      description: the ACLs to upsert\n      content:\n        'application/json':\n          schema:\n            $ref: '#/components/schemas/MethodConfigACL'\n      required: true\n    preferencesParam:\n      description: The preferences to set as a Map[String, String]\n      content:\n        'application/json':\n          schema:\n            type: object\n            additionalProperties:\n              type: string\n      required: true\n  securitySchemes:\n    googleoauth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            openid: open id authorization\n            email: email authorization\n            profile: profile authorization\n            https://www.googleapis.com/auth/cloud-billing: GCS billing\n    oidc:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth2/authorize\n          tokenUrl: /oauth2/token\n          scopes:\n            openid: open id authorization\n            email: email authorization\n            profile: profile authorization\n",
			"canonicalURL": "/github.com/broadinstitute/firecloud-orchestration@db2167f3be54ae9214ac0952257f56a7b4cd11c1/-/blob/src/main/resources/swagger/api-docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/broadinstitute/firecloud-orchestration/blob/db2167f3be54ae9214ac0952257f56a7b4cd11c1/src/main/resources/swagger/api-docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: yaml: unmarshal errors:\n  yaml: line 1: cannot unmarshal !!bool `false` into []string; yaml: line 1: cannot unmarshal !!bool `false` into []string"
}