{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/City-of-Helsinki/parkkihubi"
		},
		"file": {
			"name": "enforcement.yaml",
			"size": 0,
			"path": "docs/api/enforcement.yaml",
			"byteSize": 32082,
			"content": "openapi: 3.0.1\ninfo:\n  title: Parkkihubi Enforcement API\n  description: \u003e-\n    Parkkihubi Enforcement REST API Documentation\n  version: \"1.2.0\"\nservers:\n  - url: https://api.parkkiopas.fi/enforcement/v1/\n    description: Production server\n  - url: https://testapi.parkkiopas.fi/enforcement/v1/\n    description: Test server\n  - url: http://localhost:8000/enforcement/v1/\n    description: Local development server\ntags:\n  - name: Parking Validation\n    description: \u003e-\n      Endpoints for validating parkings\n  - name: Operators\n    description: \u003e-\n      Information about parking operators\n  - name: Permit Series\n    description: \u003e-\n      Creating, listing and activating permit series\n  - name: Permits\n    description: \u003e-\n      Parking permit management\n  - name: Active Permits by External Id\n    description: \u003e-\n      Managing parking permits in the currently active series by the\n      external identifiers of the permits\ncomponents:\n  securitySchemes:\n    ApiKey:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |-\n        Requests must have value `ApiKey \u003cyour_api_key\u003e` in the\n        `Authorization` header, i.e. the HTTP header should look like:\n\n            Authorization: ApiKey \u003cyour_api_key\u003e\n  schemas:\n    Parking:\n      type: object\n      example: \u0026parkingExample\n        id: \"ee9feaaa-ebb8-41fc-a6c3-362a3aadb731\"\n        created_at: \"2020-04-15T11:10:05Z\"\n        modified_at: \"2020-04-15T13:29:46Z\"\n        registration_number: \"ABC-123\"\n        time_start: \"2020-04-15T11:10:05Z\"\n        time_end: \"2020-04-15T14:00:00Z\"\n        zone: 2\n        is_disc_parking: false\n        operator: \"63f8374e-1eed-44fa-9224-4cd0c64ddf35\"\n        operator_name: \"Foobar Parkings\"\n      properties:\n        id:\n          description: Unique identifier for the parking object\n          type: string\n          format: uuid\n        created_at:\n          description: Creation time of the parking\n          type: string\n          format: date-time\n        modified_at:\n          description: Modification time of the parking\n          type: string\n          format: date-time\n        registration_number:\n          description: Registration number of vehicle for the parking\n          type: string\n        time_start:\n          description: Start time of the parking\n          type: string\n          format: date-time\n        time_end:\n          description: End time of the parking\n          type: string\n          nullable: true\n          format: date-time\n        zone:\n          description: Payment zone code\n          oneOf: [{type: integer}, {type: string}]\n          nullable: true\n        is_disc_parking:\n          description: \u003e-\n            Specify whether this is a parking disc parking.\n\n            Note: For compatibility reasons this field is present in the\n            result only for parking disc parkings, i.e. when the value\n            is true.\n          type: boolean\n        operator:\n          description: Id of the operator\n          type: string\n          format: uuid\n        operator_name:\n          description: Name of the operator\n          type: string\n    Operator:\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the operator object\n          type: string\n          format: uuid\n          readOnly: true\n        created_at:\n          description: Creation time of the operator\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          description: Modification time of the operator\n          type: string\n          format: date-time\n          readOnly: true\n        name:\n          description: Name of the parking operator\n          type: string\n    PermitSeries:\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the permit series\n          type: integer\n        created_at:\n          description: Creation time of the permit series\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          description: Modification time of the permit series\n          type: string\n          format: date-time\n          readOnly: true\n        active:\n          description: Specifies whether the series is currently active\n          type: boolean\n    Permit:\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the permit object\n          type: integer\n        external_id: \u0026permitExternalId\n          description: External id of the permit\n          type: string\n        series: \u0026permitSeries\n          description: Permit series id\n          type: integer\n        properties: \u0026permitMetaProperties\n          description: Permit properties\n          type: object\n        subjects: \u0026permitSubjects\n          $ref: '#/components/schemas/PermitSubjects'\n        areas: \u0026permitAreas\n          $ref: '#/components/schemas/PermitAreas'\n    ValidPermitItem:\n      type: object\n      example: \u0026validPermitItemExample\n        id: 12432\n        permit_id: 4992\n        area: \"B\"\n        registration_number: \"ABC-123\"\n        start_time: \"2019-12-31T21:00:00Z\"\n        end_time: \"2020-12-31T20:59:59Z\"\n        operator: \"63f8374e-1eed-44fa-9224-4cd0c64ddf35\"\n        operator_name: \"Foobar Parkings\"\n        properties:\n          permit_type: \"Asukaspysäköintitunnus\"\n      properties:\n        id:\n          description: Id of the permit item\n          type: integer\n        permit_id:\n          description: Id of the permit containing this item\n          type: integer\n        area:\n          description: Code of the permit area that this item permits parking to\n          type: string\n        registration_number:\n          description: Registration number of the vehicle that this item permits parking of\n          type: string\n        start_time:\n          description: Start time of the validity period of this item\n          type: string\n          format: date-time\n        end_time:\n          description: End time of the validity period of this item\n          type: string\n          format: date-time\n        operator:\n          description: Id of the operator\n          type: string\n          nullable: true\n          format: uuid\n        operator_name:\n          description: Name of the operator\n          type: string\n          nullable: true\n        properties:\n          description: Permit properties\n          type: object\n          nullable: true\n    PermitSubjects:\n      description: \u003e-\n        List of subjects of a permit with validity time ranges.  Each\n        subject is identified by its registration number.\n      type: array\n      items:\n        $ref: '#/components/schemas/PermitSubject'\n    PermitSubject:\n      description: \u003e-\n        Subject of a permit, i.e. a vehicle.  The permit applies to the\n        specified subject for validity period specified by the start and\n        end times.\n      type: object\n      properties:\n        start_time:\n          description: Start time of the validity period\n          type: string\n          format: date-time\n        end_time:\n          description: End time of the validity period\n          type: string\n          format: date-time\n        registration_number:\n          description: \u003e-\n            Registration number of vehicle, which is subject to the permit\n          type: string\n          maxLength: 20\n    PermitAreas:\n      description: \u003e-\n        List of permit area codes with validity time ranges\n      type: array\n      items:\n        $ref: '#/components/schemas/PermitArea'\n    PermitArea:\n      type: object\n      properties:\n        start_time:\n          description: Start time of the parking\n          type: string\n          format: date-time\n        end_time:\n          description: End time of the parking\n          type: string\n          format: date-time\n        area:\n          description: Name of the area\n          type: string\n          maxLength: 10\n  responses:\n    BadRequest:  # 400\n      description: \u003e-\n        Bad Request. Request was invalid. Field specific errors\n        available in the body.\n      content:\n        application/json:\n          schema:\n            type: object\n            example:\n              non_field_errors:\n                - 'The fields series, external_id must make a unique set.'\n              subjects:\n                - 'Each list item must be a dictionary'\n    Unauthorized:  # 401\n      description: \u003e-\n        Unauthorized.  No authentication credentials were provided or\n        they were incorrect.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              detail:\n                type: string\n    Forbidden:  # 403\n      description: \u003e-\n        Forbidden. Not enough permissions to perform the action.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              code:\n                type: string\n                enum:\n                  - permission_denied\n              detail:\n                type: string\n    NotFound:  # 404\n      description: \u003e-\n        Not Found.  The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              detail:\n                type: string\npaths:\n  /check_parking/:\n    post:\n      tags: ['Parking Validation']\n      summary: Check validity of a parking\n      operationId: checkParking\n      security: [{ApiKey: []}]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [registration_number, location]\n              properties:\n                registration_number:\n                  description: Registration number to check\n                  type: string\n                  maxLength: 20\n                location:\n                  description: Location of the parked vehicle\n                  type: object\n                  required: [latitude, longitude]\n                  properties:\n                    latitude:\n                      description: WGS84 latitude of the location\n                      type: number\n                      minimum: -90.0\n                      maximum: 90.0\n                    longitude:\n                      description: WGS84 longitude of the location\n                      type: number\n                      minimum: -180.0\n                      maximum: 180.0\n                time:\n                  description: \u003e-\n                    Optional timestamp to use for the check. If not\n                    given, defaults to current time.\n                  type: string\n                  format: date-time\n      responses:\n        '200':\n          description: OK. Validity check succeeded.\n          content:\n            application/json:\n              schema:\n                type: object\n                required: [allowed, end_time, location, time]\n                properties:\n                  allowed:\n                    description: \u003e-\n                      Allowance status of the parking.  True if there\n                      exists a parking or permit in the system which is\n                      valid for the specified registration number at the\n                      specified location (and time), false otherwise.\n                    type: boolean\n                  end_time:\n                    description: \u003e-\n                      Time when the validity ends or has ended.  There\n                      are three cases for this:\n\n                        * If the parking is allowed, the time will be in\n                          the future (compared to the specified time).\n                          Then the value specifies when the allowance\n                          time ends, but note that it can be extended.\n\n                        * If there exists a recently expired parking or\n                          permit for the given registration number and\n                          location, the time will be in the past\n                          (compared to the specified time).  Expired\n                          parkings or permits are visible through this\n                          timestamp for 15 minutes by default, but this\n                          may be changed in the server configuration.\n\n                        * If there is no recent parking allowance for\n                          the specified registration number, location\n                          and time, this value will be null.\n                    type: string\n                    format: date-time\n                    nullable: true\n                  location:\n                    type: object\n                    required: [payment_zone, permit_area]\n                    properties:\n                      payment_zone:\n                        description: \u003e-\n                          Payment Zone found by the provided location,\n                          or null if the provided location is not in any\n                          payment zone in the system.\n                        type: integer\n                        nullable: true\n                      permit_area:\n                        description: \u003e-\n                          Permit Area found by the provided location,\n                          or null if the provided location is not in any\n                          permit area in the system.\n                        type: string\n                        maxLength: 10\n                        nullable: true\n                  time:\n                    description: \u003e-\n                      Time used in the check.  It will either be equal\n                      to the time value provided in the request or the\n                      current time if none was provided.\n                    type: string\n                    format: date-time\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /valid_parking/:\n    get:\n      tags: ['Parking Validation']\n      summary: Get list of valid parkings\n      description: \u003e-\n        Get list of valid parkings by either registration number, time\n        or both\n      operationId: getParkingList\n      security: [{ApiKey: []}]\n      parameters:\n        - name: reg_num\n          in: query\n          description: \u003e-\n            Registration number of parkings. Dashes are ignored.\n            Required if no time is set.\n          schema:\n            type: string\n        - name: time\n          in: query\n          description: \u003e-\n            Time when parking should be valid.  If not given, default\n            is current time. Required if no registration number is set.\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: An array of parkings with metadata information\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  count: 1\n                  next: null\n                  previous: null\n                  results:\n                    - \u003c\u003c : *parkingExample\n                properties: \u0026paginatedResult\n                  count:\n                    description: Total number of objects\n                    type: integer\n                  next:\n                    description: Link to the next result page\n                    type: string\n                    format: uri\n                  previous:\n                    description: Link to the previous result page\n                    type: string\n                    format: uri\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Parking'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /valid_permit_item/:\n    get:\n      tags: ['Parking Validation']\n      summary: Get list of valid permit items\n      operationId: getValidPermitItemList\n      security: [{ApiKey: []}]\n      parameters:\n        - name: time\n          in: query\n          description: \u003e-\n            Time when returned permit items should be valid.\n          schema:\n            type: string\n            format: date-time\n        - name: reg_num\n          in: query\n          description: \u003e-\n            Registration number of permit items. Dashes are ignored.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: An array of permit items\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                  count: 100\n                  next: \"https://api.parkkiopas.fi/enforcement/v1/valid_permit_item/?page=2\"\n                  previous: null\n                  results:\n                    - \u003c\u003c : *validPermitItemExample\n                      area: \"A\"\n                      registration_number: \"ABC-123\"\n                    - \u003c\u003c : *validPermitItemExample\n                      area: \"B\"\n                      registration_number: \"ABC-123\"\n                    - \u003c\u003c : *validPermitItemExample\n                      area: \"A\"\n                      registration_number: \"XYZ-456\"\n                    - \u003c\u003c : *validPermitItemExample\n                      area: \"B\"\n                      registration_number: \"XYZ-456\"\n                properties: \u0026cursorPaginatedResult\n                  next:\n                    description: Link to the next result page\n                    type: string\n                    format: uri\n                  previous:\n                    description: Link to the previous result page\n                    type: string\n                    format: uri\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ValidPermitItem'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /operator/:\n    get:\n      tags: ['Operators']\n      summary: Get list of parking operators\n      operationId: getOperatorList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: A list of parking opertors\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/Operator'\n  /operator/{operator_id}/:\n    get:\n      tags: ['Operators']\n      summary: Get details of a parking operator\n      operationId: getOperatorDetails\n      security: [{ApiKey: []}]\n      parameters:\n        - name: operator_id\n          in: path\n          description: \u003e-\n            Id of operator\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: A parking operator\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operator'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /permitseries/:\n    get:\n      tags: ['Permit Series']\n      summary: Get list of permit series\n      description: |-\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: getPermitSeriesList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit series\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/PermitSeries'\n    post:\n      tags: ['Permit Series']\n      summary: Create a permit series object\n      description: |-\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: createPermitSeries\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit series to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '201':\n          description: Permit series was created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermitSeries'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /permitseries/{permitseries_id}/:\n    get:\n      tags: ['Permit Series']\n      summary: Get details of a permit series\n      operationId: getPermitSeriesDetails\n      security: [{ApiKey: []}]\n      parameters:\n        - name: permitseries_id\n          in: path\n          description: \u003e-\n            Id of permit series\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: A permit series object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermitSeries'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /permitseries/{permitseries_id}/activate/:\n    post:\n      tags: ['Permit Series']\n      summary: Activate a permit series\n      description: |-\n        Activate the specified permit series and deactivate all other\n        permit series owned by you.\n\n        Inactive permit series may be deleted from the system.\n        The time limit which defines which series are considered\n        for removal is 3 days by default, but may be configured by the\n        service administrator to a different value.\n      operationId: activatePermitSeries\n      security: [{ApiKey: []}]\n      parameters:\n        - name: permitseries_id\n          in: path\n          description: \u003e-\n            Id of the permit series\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: Activation succeeded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"OK\", \"No change\"]\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /permit/:\n    get:\n      tags: ['Permits']\n      summary: Get list of your parking permits\n      description: |-\n        Get a list of parking permits that you own.  Note however, that\n        there might be also other permits in the system.\n\n        Note: This endpoint is meant for permit managing purposes only.\n        To check validity of a parking use the [Parking\n        Validation](#tag/Parking-Validation) endpoints (e.g.  [``POST\n        /check_parking/``](#operation/checkParking) or [``GET\n        /valid_permit_item/``](#operation/getValidPermitItemList)).\n      operationId: getPermitList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit objects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/Permit'\n    post:\n      tags: ['Permits']\n      summary: Create a permit object\n      operationId: createPermit\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: \u0026permitProperties\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                series:\n                  \u003c\u003c : *permitSeries\n                external_id:\n                  \u003c\u003c : *permitExternalId\n                subjects:\n                  \u003c\u003c : *permitSubjects\n                areas:\n                  \u003c\u003c : *permitAreas\n              required:\n                - series\n                - subjects\n                - areas\n      responses:\n        '201':\n          description: Permit object was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /permit/{permit_id}/:\n    get:\n      tags: ['Permits']\n      summary: Get details of a permit\n      operationId: getPermitDetails\n      security: [{ApiKey: []}]\n      parameters:\n      - name: permit_id\n        in: path\n        description: \u003e-\n          Id of permit\n        schema:\n          type: integer\n        required: true\n      responses:\n        '200':\n          description: A permit object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      tags: ['Permits']\n      summary: Replace a permit\n      operationId: replacePermit\n      security: [{ApiKey: []}]\n      parameters:\n      - name: permit_id\n        in: path\n        required: true\n        description: Id of permit to update\n        schema:\n          type: integer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permit'\n      responses:\n        '200':\n          description: The permit object was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    patch:\n      tags: ['Permits']\n      summary: Update a permit\n      operationId: updatePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - name: permit_id\n          in: path\n          description: Id of permit to update\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                \u003c\u003c : *permitProperties\n        required: false\n      responses:\n        '200':\n          description: Permit was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /active_permit_by_external_id/:\n    get:\n      tags: ['Active Permits by External Id']\n      summary: Get list of permits in the active series\n      operationId: getActivePermitList\n      security: [{ApiKey: []}]\n      responses:\n        '200':\n          description: An array of permit objects\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \u003c\u003c : *paginatedResult\n                  results:\n                    items:\n                      $ref: '#/components/schemas/Permit'\n    post:\n      tags: ['Active Permits by External Id']\n      summary: Create a permit to the active series\n      operationId: createActivePermit\n      security: [{ApiKey: []}]\n      requestBody:\n        description: Permit to add to the system\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                external_id:\n                  description: External id of the permit\n                  type: string\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                subjects:\n                  $ref: '#/components/schemas/PermitSubjects'\n                areas:\n                  $ref: '#/components/schemas/PermitAreas'\n      responses:\n        '200':\n          description: Creation of the permit succeeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n  /active_permit_by_external_id/{external_id}/:\n    get:\n      tags: ['Active Permits by External Id']\n      summary: Get details of a permit in the active series\n      operationId: getActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - name: external_id\n          in: path\n          description: \u003e-\n            External id of permit\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: A permit object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    patch:\n      tags: ['Active Permits by External Id']\n      summary: Update a permit in the active series\n      operationId: updateActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - name: external_id\n          in: path\n          description: External id of the permit to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                properties:\n                  \u003c\u003c : *permitMetaProperties\n                subjects:\n                  \u003c\u003c : *permitSubjects\n                areas:\n                  \u003c\u003c : *permitAreas\n      responses:\n        '200':\n          description: Permit was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      tags: ['Active Permits by External Id']\n      summary: Replace a permit in the active series\n      operationId: replaceActivePermit\n      security: [{ApiKey: []}]\n      parameters:\n        - name: external_id\n          in: path\n          description: External id of permit to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permit'\n      responses:\n        '200':\n          description: The permit object was updated successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Permit'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n",
			"canonicalURL": "/github.com/City-of-Helsinki/parkkihubi@62df86945ecd510ec5ab1157593abcd53b9ab2ff/-/blob/docs/api/enforcement.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/City-of-Helsinki/parkkihubi/blob/62df86945ecd510ec5ab1157593abcd53b9ab2ff/docs/api/enforcement.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "unmarshal: convert YAML to JSON: yaml: unknown anchor 'parkingExample' referenced"
}