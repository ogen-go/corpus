{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "teams.yaml",
			"size": 0,
			"path": "providers/src/github/v0.3.0/services/teams.yaml",
			"byteSize": 301692,
			"content": "paths:\n  /organizations/{org}/team/{team_slug}/external-groups:\n    get:\n      summary: List a connection between an external group and a team\n      description: |-\n        Lists a connection between a team and an external group.\n\n        You can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.\n      tags:\n        - teams\n      operationId: teams/list-linked-external-idp-groups-to-team-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-external-idp-group-team-connection\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external-groups'\n              examples:\n                default:\n                  $ref: '#/components/examples/external-groups'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: external-groups\n  /orgs/{org}/external-group/{group_id}:\n    get:\n      summary: Get an external group\n      description: |-\n        Displays information about the specific group's usage.  Provides a list of the group's external members as well as a list of teams that this group is connected to.\n\n        You can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.\n      tags:\n        - teams\n      operationId: teams/external-idp-group-info-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#external-idp-group-info-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/group-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external-group'\n              examples:\n                default:\n                  $ref: '#/components/examples/external-group'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: external-groups\n  /orgs/{org}/external-groups:\n    get:\n      summary: List external groups in an organization\n      description: |-\n        Lists external groups available in an organization. You can query the groups using the `display_name` parameter, only groups with a `group_name` containing the text provided in the `display_name` parameter will be returned.  You can also limit your page results using the `per_page` parameter. GitHub generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\n        You can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.\n      tags:\n        - teams\n      operationId: teams/list-external-idp-groups-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-external-idp-groups-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - name: page\n          description: Page token\n          in: query\n          schema:\n            type: integer\n        - name: display_name\n          description: Limits the list to groups containing the text in the group name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external-groups'\n              examples:\n                default:\n                  $ref: '#/components/examples/external-groups'\n          headers:\n            Link:\n              example: \u003chttps://api.github.com/resource?per_page=2\u0026page=url-encoded-next-page-token\u003e; rel=\"next\"\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: external-groups\n  /orgs/{org}/team-sync/groups:\n    get:\n      summary: List IdP groups for an organization\n      description: |-\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        List IdP groups available in an organization. You can limit your page results using the `per_page` parameter. GitHub generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n      tags:\n        - teams\n      operationId: teams/list-idp-groups-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-idp-groups-for-an-organization\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - name: page\n          description: Page token\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group-mapping'\n              examples:\n                default:\n                  $ref: '#/components/examples/group-mapping-3'\n          headers:\n            Link:\n              example: \u003chttps://api.github.com/resource?per_page=2\u0026page=url-encoded-next-page-token\u003e; rel=\"next\"\n              schema:\n                type: string\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: team-sync\n  /orgs/{org}/teams:\n    get:\n      summary: List teams\n      description: Lists all teams in an organization that are visible to the authenticated user.\n      tags:\n        - teams\n      operationId: teams/list\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-teams\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    post:\n      summary: Create a team\n      description: |-\n        To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://docs.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\n        When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\".\n      tags:\n        - teams\n      operationId: teams/create\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the team.\n                description:\n                  type: string\n                  description: The description of the team.\n                maintainers:\n                  type: array\n                  description: List GitHub IDs for organization members who will become team maintainers.\n                  items:\n                    type: string\n                repo_names:\n                  type: array\n                  description: The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.\n                  items:\n                    type: string\n                privacy:\n                  type: string\n                  description: |-\n                    The level of privacy this team should have. The options are:  \n                    **For a non-nested team:**  \n                    \\* `secret` - only visible to organization owners and members of this team.  \n                    \\* `closed` - visible to all members of this organization.  \n                    Default: `secret`  \n                    **For a parent or child team:**  \n                    \\* `closed` - visible to all members of this organization.  \n                    Default for child team: `closed`\n                  enum:\n                    - secret\n                    - closed\n                permission:\n                  type: string\n                  description: |-\n                    **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n                    \\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n                    \\* `push` - team members can pull and push, but not administer newly-added repositories.\n                  enum:\n                    - pull\n                    - push\n                  default: pull\n                parent_team_id:\n                  type: integer\n                  description: The ID of a team to set as the parent team.\n              required:\n                - name\n            example:\n              name: Justice League\n              description: A great team\n              permission: push\n              privacy: closed\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}:\n    get:\n      summary: Get a team by name\n      description: |-\n        Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.\n      tags:\n        - teams\n      operationId: teams/get-by-name\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-a-team-by-name\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    patch:\n      summary: Update a team\n      description: |-\n        To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.\n      tags:\n        - teams\n      operationId: teams/update-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#update-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the team.\n                description:\n                  type: string\n                  description: The description of the team.\n                privacy:\n                  type: string\n                  description: |-\n                    The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:  \n                    **For a non-nested team:**  \n                    \\* `secret` - only visible to organization owners and members of this team.  \n                    \\* `closed` - visible to all members of this organization.  \n                    **For a parent or child team:**  \n                    \\* `closed` - visible to all members of this organization.\n                  enum:\n                    - secret\n                    - closed\n                permission:\n                  type: string\n                  description: |-\n                    **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n                    \\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n                    \\* `push` - team members can pull and push, but not administer newly-added repositories.  \n                    \\* `admin` - team members can pull, push and administer newly-added repositories.\n                  enum:\n                    - pull\n                    - push\n                    - admin\n                  default: pull\n                parent_team_id:\n                  type: integer\n                  description: The ID of a team to set as the parent team.\n                  nullable: true\n            example:\n              name: new team name\n              description: new team description\n              privacy: closed\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    delete:\n      summary: Delete a team\n      description: |-\n        To delete a team, the authenticated user must be an organization owner or team maintainer.\n\n        If you are an organization owner, deleting a parent team will delete all of its child teams as well.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.\n      tags:\n        - teams\n      operationId: teams/delete-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#delete-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}/discussions:\n    get:\n      summary: List discussions\n      description: |-\n        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.\n      tags:\n        - teams\n      operationId: teams/list-discussions-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-discussions\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n        - name: pinned\n          in: query\n          required: false\n          description: Pinned discussions only filter\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussions\n    post:\n      summary: Create a discussion\n      description: |-\n        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.\n      tags:\n        - teams\n      operationId: teams/create-discussion-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-a-discussion\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The discussion post's title.\n                body:\n                  type: string\n                  description: The discussion post's body text.\n                private:\n                  type: boolean\n                  description: Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.\n                  default: false\n              required:\n                - title\n                - body\n            example:\n              title: Our first team post\n              body: Hi! This is an area for us to collaborate as a team.\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussions\n  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}:\n    get:\n      summary: Get a discussion\n      description: |-\n        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n      tags:\n        - teams\n      operationId: teams/get-discussion-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-a-discussion\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussions\n    patch:\n      summary: Update a discussion\n      description: |-\n        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n      tags:\n        - teams\n      operationId: teams/update-discussion-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#update-a-discussion\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The discussion post's title.\n                body:\n                  type: string\n                  description: The discussion post's body text.\n            example:\n              title: Welcome to our first team post\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussions\n    delete:\n      summary: Delete a discussion\n      description: |-\n        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.\n      tags:\n        - teams\n      operationId: teams/delete-discussion-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#delete-a-discussion\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussions\n  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments:\n    get:\n      summary: List discussion comments\n      description: |-\n        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.\n      tags:\n        - teams\n      operationId: teams/list-discussion-comments-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-discussion-comments\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussion-comments\n    post:\n      summary: Create a discussion comment\n      description: |-\n        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.\n      tags:\n        - teams\n      operationId: teams/create-discussion-comment-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-a-discussion-comment\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The discussion comment's body text.\n              required:\n                - body\n            example:\n              body: Do you like apples?\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussion-comments\n  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}:\n    get:\n      summary: Get a discussion comment\n      description: |-\n        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n      tags:\n        - teams\n      operationId: teams/get-discussion-comment-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-a-discussion-comment\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussion-comments\n    patch:\n      summary: Update a discussion comment\n      description: |-\n        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n      tags:\n        - teams\n      operationId: teams/update-discussion-comment-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#update-a-discussion-comment\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The discussion comment's body text.\n              required:\n                - body\n            example:\n              body: Do you like pineapples?\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussion-comments\n    delete:\n      summary: Delete a discussion comment\n      description: |-\n        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.\n      tags:\n        - teams\n      operationId: teams/delete-discussion-comment-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#delete-a-discussion-comment\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: discussion-comments\n  /orgs/{org}/teams/{team_slug}/external-groups:\n    patch:\n      summary: Update the connection between an external group and a team\n      description: |-\n        Creates a connection between a team and an external group.  Only one external group can be linked to a team.\n\n        You can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.\n      tags:\n        - teams\n      operationId: teams/link-external-idp-group-to-team-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#link-external-idp-group-team-connection\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                group_id:\n                  type: integer\n                  description: External Group Id\n                  example: 1\n              required:\n                - group_id\n            example:\n              group_id: 123\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external-group'\n              examples:\n                default:\n                  $ref: '#/components/examples/external-group'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        category: teams\n        subcategory: external-groups\n    delete:\n      summary: Remove the connection between an external group and a team\n      description: |-\n        Deletes a connection between a team and an external group.\n\n        You can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n      tags:\n        - teams\n      operationId: teams/unlink-external-idp-group-from-team-for-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#unlink-external-idp-group-team-connection\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        category: teams\n        subcategory: external-groups\n  /orgs/{org}/teams/{team_slug}/invitations:\n    get:\n      summary: List pending team invitations\n      description: |-\n        The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.\n      tags:\n        - teams\n      operationId: teams/list-pending-invitations-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-pending-team-invitations\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: members\n  /orgs/{org}/teams/{team_slug}/members:\n    get:\n      summary: List team members\n      description: |-\n        Team members will include the members of child teams.\n\n        To list members in a team, the team must be visible to the authenticated user.\n      tags:\n        - teams\n      operationId: teams/list-members-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-team-members\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - name: role\n          description: |-\n            Filters members returned by their role in the team. Can be one of:  \n            \\* `member` - normal members of the team.  \n            \\* `maintainer` - team maintainers.  \n            \\* `all` - all members of the team.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - member\n              - maintainer\n              - all\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: members\n  /orgs/{org}/teams/{team_slug}/memberships/{username}:\n    get:\n      summary: Get team membership for a user\n      description: |-\n        Team members will include the members of child teams.\n\n        To get a user's membership with a team, the team must be visible to the authenticated user.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n        **Note:**\n        The response contains the `state` of the membership and the member's `role`.\n\n        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).\n      tags:\n        - teams\n      operationId: teams/get-membership-for-user-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-membership'\n              examples:\n                response-if-user-is-a-team-maintainer:\n                  $ref: '#/components/examples/team-membership-response-if-user-is-a-team-maintainer'\n        '404':\n          description: if user has no team membership\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: members\n    put:\n      summary: Add or update team membership for a user\n      description: |-\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n        An organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the \"pending\" state until the person accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team.\n\n        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n      tags:\n        - teams\n      operationId: teams/add-or-update-membership-for-user-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/username'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                role:\n                  type: string\n                  description: |-\n                    The role that this user should have in the team. Can be one of:  \n                    \\* `member` - a normal member of the team.  \n                    \\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.\n                  enum:\n                    - member\n                    - maintainer\n                  default: member\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-membership'\n              examples:\n                response-if-users-membership-with-team-is-now-pending:\n                  $ref: '#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending'\n        '403':\n          description: Forbidden if team synchronization is set up\n        '422':\n          description: Unprocessable Entity if you attempt to add an organization to a team\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: members\n    delete:\n      summary: Remove team membership for a user\n      description: |-\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n      tags:\n        - teams\n      operationId: teams/remove-membership-for-user-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          description: Forbidden if team synchronization is set up\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: members\n  /orgs/{org}/teams/{team_slug}/projects:\n    get:\n      summary: List team projects\n      description: |-\n        Lists the organization projects for a team.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.\n      tags:\n        - teams\n      operationId: teams/list-projects-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-team-projects\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-project'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-project-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}/projects/{project_id}:\n    get:\n      summary: Check team permissions for a project\n      description: |-\n        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n      tags:\n        - teams\n      operationId: teams/check-permissions-for-project-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-project\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-project'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-project'\n        '404':\n          description: Not Found if project is not managed by this team\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    put:\n      summary: Add or update team project permissions\n      description: |-\n        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n      tags:\n        - teams\n      operationId: teams/add-or-update-project-permissions-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/project-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  type: string\n                  description: |-\n                    The permission to grant to the team for this project. Can be one of:  \n                    \\* `read` - team members can read, but not write to or administer this project.  \n                    \\* `write` - team members can read and write, but not administer this project.  \n                    \\* `admin` - team members can read, write and administer this project.  \n                    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n                  enum:\n                    - read\n                    - write\n                    - admin\n              nullable: true\n      responses:\n        '204':\n          description: Response\n        '403':\n          description: Forbidden if the project is not owned by the organization\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n              examples:\n                response-if-the-project-is-not-owned-by-the-organization:\n                  value:\n                    message: Must have admin rights to Repository.\n                    documentation_url: https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    delete:\n      summary: Remove a project from a team\n      description: |-\n        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.\n      tags:\n        - teams\n      operationId: teams/remove-project-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#remove-a-project-from-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}/repos:\n    get:\n      summary: List team repositories\n      description: |-\n        Lists a team's repositories visible to the authenticated user.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.\n      tags:\n        - teams\n      operationId: teams/list-repos-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-team-repositories\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/minimal-repository-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}:\n    get:\n      summary: Check team permissions for a repository\n      description: |-\n        Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\n        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\n        If a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n      tags:\n        - teams\n      operationId: teams/check-permissions-for-repo-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#check-team-permissions-for-a-repository\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Alternative response with repository permissions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-repository'\n              examples:\n                alternative-response-with-repository-permissions:\n                  $ref: '#/components/examples/team-repository-alternative-response-with-repository-permissions'\n        '204':\n          description: Response if team has permission for the repository. This is the response when the repository media type hasn't been provded in the Accept header.\n        '404':\n          description: Not Found if team does not have permission for the repository\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    put:\n      summary: Add or update team repository permissions\n      description: |-\n        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\n        For more information about the permission levels, see \"[Repository permission levels for an organization](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n      tags:\n        - teams\n      operationId: teams/add-or-update-repo-permissions-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#add-or-update-team-repository-permissions\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  type: string\n                  description: |-\n                    The permission to grant the team on this repository. Can be one of:  \n                    \\* `pull` - team members can pull, but not push to or administer this repository.  \n                    \\* `push` - team members can pull and push, but not administer this repository.  \n                    \\* `admin` - team members can pull, push and administer this repository.  \n                    \\* `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.  \n                    \\* `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.  \n                    \\* custom repository role name - A custom repository role if the owning organization has defined any.  \n                      \n                    If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.\n                  enum:\n                    - pull\n                    - push\n                    - admin\n                    - maintain\n                    - triage\n                  default: push\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n    delete:\n      summary: Remove a repository from a team\n      description: |-\n        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n      tags:\n        - teams\n      operationId: teams/remove-repo-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#remove-a-repository-from-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /orgs/{org}/teams/{team_slug}/team-sync/group-mappings:\n    get:\n      summary: List IdP groups for a team\n      description: |-\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        List IdP groups connected to a team on GitHub.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.\n      tags:\n        - teams\n      operationId: teams/list-idp-groups-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group-mapping'\n              examples:\n                default:\n                  $ref: '#/components/examples/group-mapping-3'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        category: teams\n        subcategory: team-sync\n    patch:\n      summary: Create or update IdP group connections\n      description: |-\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Creates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.\n      tags:\n        - teams\n      operationId: teams/create-or-update-idp-group-connections-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groups:\n                  type: array\n                  description: The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.\n                  items:\n                    type: object\n                    properties:\n                      group_id:\n                        type: string\n                        description: ID of the IdP group.\n                      group_name:\n                        type: string\n                        description: Name of the IdP group.\n                      group_description:\n                        type: string\n                        description: Description of the IdP group.\n                    required:\n                      - group_id\n                      - group_name\n                      - group_description\n              additionalProperties: false\n            example:\n              groups:\n                - group_id: '123'\n                  group_name: Octocat admins\n                  group_description: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group-mapping'\n              examples:\n                default:\n                  $ref: '#/components/examples/group-mapping'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        category: teams\n        subcategory: team-sync\n  /orgs/{org}/teams/{team_slug}/teams:\n    get:\n      summary: List child teams\n      description: |-\n        Lists the child teams of the team specified by `{team_slug}`.\n\n        **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.\n      tags:\n        - teams\n      operationId: teams/list-child-in-org\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-child-teams\n      parameters:\n        - $ref: '#/components/parameters/org'\n        - $ref: '#/components/parameters/team-slug'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: if child teams exist\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                response-if-child-teams-exist:\n                  $ref: '#/components/examples/team-items-response-if-child-teams-exist'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: teams\n        subcategory: null\n  /teams/{team_id}:\n    get:\n      summary: Get a team (Legacy)\n      description: '**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/rest/reference/teams#get-a-team-by-name) endpoint.'\n      tags:\n        - teams\n      operationId: teams/get-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#get-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    patch:\n      summary: Update a team (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://docs.github.com/rest/reference/teams#update-a-team) endpoint.\n\n        To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n        **Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.\n      tags:\n        - teams\n      operationId: teams/update-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#update-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The name of the team.\n                description:\n                  type: string\n                  description: The description of the team.\n                privacy:\n                  type: string\n                  description: |-\n                    The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n                    **For a non-nested team:**  \n                    \\* `secret` - only visible to organization owners and members of this team.  \n                    \\* `closed` - visible to all members of this organization.  \n                    **For a parent or child team:**  \n                    \\* `closed` - visible to all members of this organization.\n                  enum:\n                    - secret\n                    - closed\n                permission:\n                  type: string\n                  description: |-\n                    **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n                    \\* `pull` - team members can pull, but not push to or administer newly-added repositories.  \n                    \\* `push` - team members can pull and push, but not administer newly-added repositories.  \n                    \\* `admin` - team members can pull, push and administer newly-added repositories.\n                  enum:\n                    - pull\n                    - push\n                    - admin\n                  default: pull\n                parent_team_id:\n                  type: integer\n                  description: The ID of a team to set as the parent team.\n                  nullable: true\n              required:\n                - name\n            example:\n              name: new team name\n              description: new team description\n              privacy: closed\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    delete:\n      summary: Delete a team (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://docs.github.com/rest/reference/teams#delete-a-team) endpoint.\n\n        To delete a team, the authenticated user must be an organization owner or team maintainer.\n\n        If you are an organization owner, deleting a parent team will delete all of its child teams as well.\n      tags:\n        - teams\n      operationId: teams/delete-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#delete-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /teams/{team_id}/discussions:\n    get:\n      summary: List discussions (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/rest/reference/teams#list-discussions) endpoint.\n\n        List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/list-discussions-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-discussions-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussions\n      deprecated: true\n    post:\n      summary: Create a discussion (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://docs.github.com/rest/reference/teams#create-a-discussion) endpoint.\n\n        Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - teams\n      operationId: teams/create-discussion-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-a-discussion-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The discussion post's title.\n                body:\n                  type: string\n                  description: The discussion post's body text.\n                private:\n                  type: boolean\n                  description: Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.\n                  default: false\n              required:\n                - title\n                - body\n            example:\n              title: Our first team post\n              body: Hi! This is an area for us to collaborate as a team.\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussions\n      deprecated: true\n  /teams/{team_id}/discussions/{discussion_number}:\n    get:\n      summary: Get a discussion (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/reference/teams#get-a-discussion) endpoint.\n\n        Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/get-discussion-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-a-discussion-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussions\n      deprecated: true\n    patch:\n      summary: Update a discussion (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://docs.github.com/rest/reference/teams#update-a-discussion) endpoint.\n\n        Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/update-discussion-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#update-a-discussion-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: The discussion post's title.\n                body:\n                  type: string\n                  description: The discussion post's body text.\n            example:\n              title: Welcome to our first team post\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussions\n      deprecated: true\n    delete:\n      summary: Delete a discussion (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://docs.github.com/rest/reference/teams#delete-a-discussion) endpoint.\n\n        Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/delete-discussion-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#delete-a-discussion-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussions\n      deprecated: true\n  /teams/{team_id}/discussions/{discussion_number}/comments:\n    get:\n      summary: List discussion comments (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/rest/reference/teams#list-discussion-comments) endpoint.\n\n        List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/list-discussion-comments-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-discussion-comments-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/direction'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussion-comments\n      deprecated: true\n    post:\n      summary: Create a discussion comment (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://docs.github.com/rest/reference/teams#create-a-discussion-comment) endpoint.\n\n        Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n        This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n      tags:\n        - teams\n      operationId: teams/create-discussion-comment-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-a-discussion-comment-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The discussion comment's body text.\n              required:\n                - body\n            example:\n              body: Do you like apples?\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment'\n      x-github:\n        triggersNotification: true\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussion-comments\n      deprecated: true\n  /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}:\n    get:\n      summary: Get a discussion comment (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/rest/reference/teams#get-a-discussion-comment) endpoint.\n\n        Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/get-discussion-comment-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-a-discussion-comment-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussion-comments\n      deprecated: true\n    patch:\n      summary: Update a discussion comment (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://docs.github.com/rest/reference/teams#update-a-discussion-comment) endpoint.\n\n        Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/update-discussion-comment-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#update-a-discussion-comment-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                body:\n                  type: string\n                  description: The discussion comment's body text.\n              required:\n                - body\n            example:\n              body: Do you like pineapples?\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-discussion-comment'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-discussion-comment-2'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussion-comments\n      deprecated: true\n    delete:\n      summary: Delete a discussion comment (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://docs.github.com/rest/reference/teams#delete-a-discussion-comment) endpoint.\n\n        Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/delete-discussion-comment-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#delete-a-discussion-comment-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/discussion-number'\n        - $ref: '#/components/parameters/comment-number'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: discussion-comments\n      deprecated: true\n  /teams/{team_id}/invitations:\n    get:\n      summary: List pending team invitations (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://docs.github.com/rest/reference/teams#list-pending-team-invitations) endpoint.\n\n        The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n      tags:\n        - teams\n      operationId: teams/list-pending-invitations-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-pending-team-invitations-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/organization-invitation'\n              examples:\n                default:\n                  $ref: '#/components/examples/organization-invitation-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n  /teams/{team_id}/members:\n    get:\n      summary: List team members (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/rest/reference/teams#list-team-members) endpoint.\n\n        Team members will include the members of child teams.\n      tags:\n        - teams\n      operationId: teams/list-members-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-team-members-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - name: role\n          description: |-\n            Filters members returned by their role in the team. Can be one of:  \n            \\* `member` - normal members of the team.  \n            \\* `maintainer` - team maintainers.  \n            \\* `all` - all members of the team.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - member\n              - maintainer\n              - all\n            default: all\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n  /teams/{team_id}/members/{username}:\n    get:\n      summary: Get team member (Legacy)\n      description: |-\n        The \"Get team member\" endpoint (described below) is deprecated.\n\n        We recommend using the [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\n        To list members in a team, the team must be visible to the authenticated user.\n      tags:\n        - teams\n      operationId: teams/get-member-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-team-member-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: if user is a member\n        '404':\n          description: if user is not a member\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n    put:\n      summary: Add team member (Legacy)\n      description: |-\n        The \"Add team member\" endpoint (described below) is deprecated.\n\n        We recommend using the [Add or update team membership for a user](https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n      tags:\n        - teams\n      operationId: teams/add-member-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#add-team-member-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          description: Not Found if team synchronization is set up\n        '422':\n          description: Unprocessable Entity if you attempt to add an organization to a team or you attempt to add a user to a team when they are not a member of at least one other team in the same organization\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n    delete:\n      summary: Remove team member (Legacy)\n      description: |-\n        The \"Remove team member\" endpoint (described below) is deprecated.\n\n        We recommend using the [Remove team membership for a user](https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        To remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n      tags:\n        - teams\n      operationId: teams/remove-member-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#remove-team-member-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '404':\n          description: Not Found if team synchronization is setup\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n  /teams/{team_id}/memberships/{username}:\n    get:\n      summary: Get team membership for a user (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\n        Team members will include the members of child teams.\n\n        To get a user's membership with a team, the team must be visible to the authenticated user.\n\n        **Note:**\n        The response contains the `state` of the membership and the member's `role`.\n\n        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).\n      tags:\n        - teams\n      operationId: teams/get-membership-for-user-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-membership'\n              examples:\n                response-if-user-is-a-team-maintainer:\n                  $ref: '#/components/examples/team-membership-response-if-user-is-a-team-maintainer'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n    put:\n      summary: Add or update team membership for a user (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user) endpoint.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n        If the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\n        If the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n      tags:\n        - teams\n      operationId: teams/add-or-update-membership-for-user-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#add-or-update-team-membership-for-a-user-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                role:\n                  type: string\n                  description: |-\n                    The role that this user should have in the team. Can be one of:  \n                    \\* `member` - a normal member of the team.  \n                    \\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.\n                  enum:\n                    - member\n                    - maintainer\n                  default: member\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-membership'\n              examples:\n                response-if-users-membership-with-team-is-now-pending:\n                  $ref: '#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending'\n        '403':\n          description: Forbidden if team synchronization is set up\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          description: Unprocessable Entity if you attempt to add an organization to a team\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n    delete:\n      summary: Remove team membership for a user (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user) endpoint.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n        **Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n      tags:\n        - teams\n      operationId: teams/remove-membership-for-user-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#remove-team-membership-for-a-user-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '403':\n          description: if team synchronization is set up\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: members\n      deprecated: true\n  /teams/{team_id}/projects:\n    get:\n      summary: List team projects (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/rest/reference/teams#list-team-projects) endpoint.\n\n        Lists the organization projects for a team.\n      tags:\n        - teams\n      operationId: teams/list-projects-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#list-team-projects-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-project'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-project-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /teams/{team_id}/projects/{project_id}:\n    get:\n      summary: Check team permissions for a project (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\n        Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n      tags:\n        - teams\n      operationId: teams/check-permissions-for-project-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#check-team-permissions-for-a-project-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-project'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-project'\n        '404':\n          description: Not Found if project is not managed by this team\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    put:\n      summary: Add or update team project permissions (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team project permissions](https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions) endpoint.\n\n        Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n      tags:\n        - teams\n      operationId: teams/add-or-update-project-permissions-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#add-or-update-team-project-permissions-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/project-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  type: string\n                  description: |-\n                    The permission to grant to the team for this project. Can be one of:  \n                    \\* `read` - team members can read, but not write to or administer this project.  \n                    \\* `write` - team members can read and write, but not administer this project.  \n                    \\* `admin` - team members can read, write and administer this project.  \n                    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n                  enum:\n                    - read\n                    - write\n                    - admin\n      responses:\n        '204':\n          description: Response\n        '403':\n          description: Forbidden if the project is not owned by the organization\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  documentation_url:\n                    type: string\n              examples:\n                response-if-the-project-is-not-owned-by-the-organization:\n                  value:\n                    message: Must have admin rights to Repository.\n                    documentation_url: https://docs.github.com/rest/reference/teams#add-or-update-team-project-permissions\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    delete:\n      summary: Remove a project from a team (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a project from a team](https://docs.github.com/rest/reference/teams#remove-a-project-from-a-team) endpoint.\n\n        Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.\n      tags:\n        - teams\n      operationId: teams/remove-project-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#remove-a-project-from-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/project-id'\n      responses:\n        '204':\n          description: Response\n        '404':\n          $ref: '#/components/responses/not_found'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /teams/{team_id}/repos:\n    get:\n      summary: List team repositories (Legacy)\n      description: '**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/rest/reference/teams#list-team-repositories) endpoint.'\n      tags:\n        - teams\n      operationId: teams/list-repos-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#list-team-repositories-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/minimal-repository'\n              examples:\n                default:\n                  $ref: '#/components/examples/minimal-repository-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /teams/{team_id}/repos/{owner}/{repo}:\n    get:\n      summary: Check team permissions for a repository (Legacy)\n      description: |-\n        **Note**: Repositories inherited through a parent team will also be checked.\n\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\n        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:\n      tags:\n        - teams\n      operationId: teams/check-permissions-for-repo-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#check-team-permissions-for-a-repository-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '200':\n          description: Alternative response with extra repository information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/team-repository'\n              examples:\n                alternative-response-with-extra-repository-information:\n                  $ref: '#/components/examples/team-repository-alternative-response-with-extra-repository-information'\n        '204':\n          description: Response if repository is managed by this team\n        '404':\n          description: Not Found if repository is not managed by this team\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    put:\n      summary: Add or update team repository permissions (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new \"[Add or update team repository permissions](https://docs.github.com/rest/reference/teams#add-or-update-team-repository-permissions)\" endpoint.\n\n        To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\n        Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n      tags:\n        - teams\n      operationId: teams/add-or-update-repo-permissions-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#add-or-update-team-repository-permissions-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                permission:\n                  type: string\n                  description: |-\n                    The permission to grant the team on this repository. Can be one of:  \n                    \\* `pull` - team members can pull, but not push to or administer this repository.  \n                    \\* `push` - team members can pull and push, but not administer this repository.  \n                    \\* `admin` - team members can pull, push and administer this repository.  \n                      \n                    If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.\n                  enum:\n                    - pull\n                    - push\n                    - admin\n      responses:\n        '204':\n          description: Response\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n    delete:\n      summary: Remove a repository from a team (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://docs.github.com/rest/reference/teams#remove-a-repository-from-a-team) endpoint.\n\n        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.\n      tags:\n        - teams\n      operationId: teams/remove-repo-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#remove-a-repository-from-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /teams/{team_id}/team-sync/group-mappings:\n    get:\n      summary: List IdP groups for a team (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team) endpoint.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        List IdP groups connected to a team on GitHub.\n      tags:\n        - teams\n      operationId: teams/list-idp-groups-for-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group-mapping'\n              examples:\n                default:\n                  $ref: '#/components/examples/group-mapping-3'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: team-sync\n      deprecated: true\n    patch:\n      summary: Create or update IdP group connections (Legacy)\n      description: |-\n        **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections) endpoint.\n\n        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n        Creates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n      tags:\n        - teams\n      operationId: teams/create-or-update-idp-group-connections-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groups:\n                  type: array\n                  description: The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.\n                  items:\n                    type: object\n                    properties:\n                      group_id:\n                        type: string\n                        description: ID of the IdP group.\n                      group_name:\n                        type: string\n                        description: Name of the IdP group.\n                      group_description:\n                        type: string\n                        description: Description of the IdP group.\n                      id:\n                        type: string\n                        example: '\"caceab43fc9ffa20081c\"'\n                      name:\n                        type: string\n                        example: '\"external-team-6c13e7288ef7\"'\n                      description:\n                        type: string\n                        example: '\"moar cheese pleese\"'\n                    required:\n                      - group_id\n                      - group_name\n                      - group_description\n                synced_at:\n                  type: string\n                  example: '\"I am not a timestamp\"'\n              required:\n                - groups\n            example:\n              groups:\n                - group_id: '123'\n                  group_name: Octocat admins\n                  description: The people who configure your octoworld.\n                  group_description: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group-mapping'\n              examples:\n                default:\n                  $ref: '#/components/examples/group-mapping-2'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: true\n        enabledForGitHubApps: false\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: team-sync\n      deprecated: true\n  /teams/{team_id}/teams:\n    get:\n      summary: List child teams (Legacy)\n      description: '**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/rest/reference/teams#list-child-teams) endpoint.'\n      tags:\n        - teams\n      operationId: teams/list-child-legacy\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams/#list-child-teams-legacy\n      parameters:\n        - $ref: '#/components/parameters/team-id'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: if child teams exist\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team'\n              examples:\n                response-if-child-teams-exist:\n                  $ref: '#/components/examples/team-items-response-if-child-teams-exist'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        removalDate: '2021-02-01'\n        deprecationDate: '2020-01-21'\n        category: teams\n        subcategory: null\n      deprecated: true\n  /user/teams:\n    get:\n      summary: List teams for the authenticated user\n      description: List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/apps/building-oauth-apps/).\n      tags:\n        - teams\n      operationId: teams/list-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/teams#list-teams-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/team-full'\n              examples:\n                default:\n                  $ref: '#/components/examples/team-full-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: teams\n        subcategory: null\ncomponents:\n  schemas:\n    external-groups:\n      title: ExternalGroups\n      description: A list of external groups available to be connected to a team\n      type: object\n      properties:\n        groups:\n          description: An array of external groups available to be mapped to a team\n          example:\n            - group_id: 1\n              group_name: group-azuread-test\n              updated_at: 2021-01-03 22:27:15:000 -700\n            - group_id: 2\n              group_name: group-azuread-test2\n              updated_at: 2021-06-03 22:27:15:000 -700\n          type: array\n          items:\n            type: object\n            required:\n              - group_id\n              - group_name\n              - updated_at\n            properties:\n              group_id:\n                description: The internal ID of the group\n                example: 1\n                type: integer\n              group_name:\n                description: The display name of the group\n                example: group-azuread-test\n                type: string\n              updated_at:\n                description: The time of the last update for this group\n                example: 2019-06-03 22:27:15:000 -700\n                type: string\n    external-group:\n      title: ExternalGroup\n      description: Information about an external group's usage and its members\n      type: object\n      required:\n        - group_id\n        - group_name\n        - teams\n        - members\n      properties:\n        group_id:\n          description: The internal ID of the group\n          example: 1\n          type: integer\n        group_name:\n          description: The display name for the group\n          example: group-azuread-test\n          type: string\n        updated_at:\n          description: The date when the group was last updated_at\n          example: 2021-01-03 22:27:15:000 -700\n          type: string\n        teams:\n          description: An array of teams linked to this group\n          example:\n            - team_id: 1\n              team_name: team-test\n            - team_id: 2\n              team_name: team-test2\n          type: array\n          items:\n            type: object\n            required:\n              - team_id\n              - team_name\n            properties:\n              team_id:\n                description: The id for a team\n                example: 1\n                type: integer\n              team_name:\n                description: The name of the team\n                example: team-test\n                type: string\n        members:\n          description: An array of external members linked to this group\n          example:\n            - member_id: 1\n              member_login: mona-lisa_eocsaxrs\n              member_name: Mona Lisa\n              member_email: mona_lisa@github.com\n            - member_id: 2\n              member_login: octo-lisa_eocsaxrs\n              member_name: Octo Lisa\n              member_email: octo_lisa@github.com\n          type: array\n          items:\n            type: object\n            required:\n              - member_id\n              - member_login\n              - member_name\n              - member_email\n            properties:\n              member_id:\n                description: The internal user ID of the identity\n                example: 1\n                type: integer\n              member_login:\n                description: The handle/login for the user\n                example: mona-lisa_eocsaxrs\n                type: string\n              member_name:\n                description: The user display name/profile name\n                example: Mona Lisa\n                type: string\n              member_email:\n                description: An email attached to a user\n                example: mona_lisa@github.com\n                type: string\n    group-mapping:\n      title: GroupMapping\n      description: External Groups to be mapped to a team for membership\n      type: object\n      properties:\n        groups:\n          description: Array of groups to be mapped to this team\n          example:\n            - group_id: 111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa\n              group_name: saml-azuread-test\n              group_description: A group of Developers working on AzureAD SAML SSO\n            - group_id: 2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2\n              group_name: saml-azuread-test2\n              group_description: Another group of Developers working on AzureAD SAML SSO\n          type: array\n          items:\n            type: object\n            required:\n              - group_id\n              - group_name\n              - group_description\n            properties:\n              group_id:\n                description: The ID of the group\n                example: 111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa\n                type: string\n              group_name:\n                description: The name of the group\n                example: saml-azuread-test\n                type: string\n              group_description:\n                description: a description of the group\n                example: A group of Developers working on AzureAD SAML SSO\n                type: string\n              status:\n                description: synchronization status for this group mapping\n                example: unsynced\n                type: string\n              synced_at:\n                description: the time of the last sync for this group-mapping\n                example: 2019-06-03 22:27:15:000 -700\n                type: string\n                nullable: true\n    team:\n      title: Team\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          type: string\n        slug:\n          type: string\n        description:\n          type: string\n          nullable: true\n        privacy:\n          type: string\n        permission:\n          type: string\n        permissions:\n          type: object\n          properties:\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - pull\n            - triage\n            - push\n            - maintain\n            - admin\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        members_url:\n          type: string\n        repositories_url:\n          type: string\n          format: uri\n        parent:\n          $ref: '#/components/schemas/nullable-team-simple'\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n        - parent\n    nullable-team-simple:\n      title: Team Simple\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the team\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VGVhbTE=\n        url:\n          description: URL for the team\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1\n        members_url:\n          type: string\n          example: https://api.github.com/organizations/1/team/1/members{/member}\n        name:\n          description: Name of the team\n          type: string\n          example: Justice League\n        description:\n          description: Description of the team\n          type: string\n          nullable: true\n          example: A great team.\n        permission:\n          description: Permission that the team will have for its repositories\n          type: string\n          example: admin\n        privacy:\n          description: The level of privacy this team should have\n          type: string\n          example: closed\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1/repos\n        slug:\n          type: string\n          example: justice-league\n        ldap_dn:\n          description: Distinguished Name (DN) that team maps to within LDAP environment\n          example: uid=example,ou=users,dc=github,dc=com\n          type: string\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    team-full:\n      title: Full Team\n      description: Groups of organization members that gives permissions on specified repositories.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the team\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDQ6VGVhbTE=\n        url:\n          description: URL for the team\n          example: https://api.github.com/organizations/1/team/1\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/rails/teams/core\n        name:\n          description: Name of the team\n          example: Developers\n          type: string\n        slug:\n          type: string\n          example: justice-league\n        description:\n          type: string\n          example: A great team.\n          nullable: true\n        privacy:\n          description: The level of privacy this team should have\n          type: string\n          enum:\n            - closed\n            - secret\n          example: closed\n        permission:\n          description: Permission that the team will have for its repositories\n          example: push\n          type: string\n        members_url:\n          type: string\n          example: https://api.github.com/organizations/1/team/1/members{/member}\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/1/repos\n        parent:\n          $ref: '#/components/schemas/nullable-team-simple'\n        members_count:\n          type: integer\n          example: 3\n        repos_count:\n          type: integer\n          example: 10\n        created_at:\n          type: string\n          format: date-time\n          example: '2017-07-14T16:53:42Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2017-08-17T12:37:15Z'\n        organization:\n          $ref: '#/components/schemas/organization-full'\n        ldap_dn:\n          description: Distinguished Name (DN) that team maps to within LDAP environment\n          example: uid=example,ou=users,dc=github,dc=com\n          type: string\n      required:\n        - id\n        - node_id\n        - url\n        - members_url\n        - name\n        - description\n        - permission\n        - html_url\n        - repositories_url\n        - slug\n        - created_at\n        - updated_at\n        - members_count\n        - repos_count\n        - organization\n    organization-full:\n      title: Organization Full\n      description: Organization Full\n      type: object\n      properties:\n        login:\n          type: string\n          example: github\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDEyOk9yZ2FuaXphdGlvbjE=\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/repos\n        events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/orgs/github/events\n        hooks_url:\n          type: string\n          example: https://api.github.com/orgs/github/hooks\n        issues_url:\n          type: string\n          example: https://api.github.com/orgs/github/issues\n        members_url:\n          type: string\n          example: https://api.github.com/orgs/github/members{/member}\n        public_members_url:\n          type: string\n          example: https://api.github.com/orgs/github/public_members{/member}\n        avatar_url:\n          type: string\n          example: https://github.com/images/error/octocat_happy.gif\n        description:\n          type: string\n          example: A great organization\n          nullable: true\n        name:\n          type: string\n          example: github\n        company:\n          type: string\n          example: GitHub\n        blog:\n          type: string\n          format: uri\n          example: https://github.com/blog\n        location:\n          type: string\n          example: San Francisco\n        email:\n          type: string\n          format: email\n          example: octocat@github.com\n        twitter_username:\n          type: string\n          example: github\n          nullable: true\n        is_verified:\n          type: boolean\n          example: true\n        has_organization_projects:\n          type: boolean\n          example: true\n        has_repository_projects:\n          type: boolean\n          example: true\n        public_repos:\n          type: integer\n          example: 2\n        public_gists:\n          type: integer\n          example: 1\n        followers:\n          type: integer\n          example: 20\n        following:\n          type: integer\n          example: 0\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        created_at:\n          type: string\n          format: date-time\n          example: '2008-01-14T04:33:35Z'\n        type:\n          type: string\n          example: Organization\n        total_private_repos:\n          type: integer\n          example: 100\n        owned_private_repos:\n          type: integer\n          example: 100\n        private_gists:\n          type: integer\n          example: 81\n          nullable: true\n        disk_usage:\n          type: integer\n          example: 10000\n          nullable: true\n        collaborators:\n          type: integer\n          example: 8\n          nullable: true\n        billing_email:\n          type: string\n          format: email\n          example: org@example.com\n          nullable: true\n        plan:\n          type: object\n          properties:\n            name:\n              type: string\n            space:\n              type: integer\n            private_repos:\n              type: integer\n            filled_seats:\n              type: integer\n            seats:\n              type: integer\n          required:\n            - name\n            - space\n            - private_repos\n        default_repository_permission:\n          type: string\n          nullable: true\n        members_can_create_repositories:\n          type: boolean\n          example: true\n          nullable: true\n        two_factor_requirement_enabled:\n          type: boolean\n          example: true\n          nullable: true\n        members_allowed_repository_creation_type:\n          type: string\n          example: all\n        members_can_create_public_repositories:\n          type: boolean\n          example: true\n        members_can_create_private_repositories:\n          type: boolean\n          example: true\n        members_can_create_internal_repositories:\n          type: boolean\n          example: true\n        members_can_create_pages:\n          type: boolean\n          example: true\n        members_can_create_public_pages:\n          type: boolean\n          example: true\n        members_can_create_private_pages:\n          type: boolean\n          example: true\n        members_can_fork_private_repositories:\n          type: boolean\n          example: false\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - login\n        - url\n        - id\n        - node_id\n        - repos_url\n        - events_url\n        - hooks_url\n        - issues_url\n        - members_url\n        - public_members_url\n        - avatar_url\n        - description\n        - html_url\n        - has_organization_projects\n        - has_repository_projects\n        - public_repos\n        - public_gists\n        - followers\n        - following\n        - type\n        - created_at\n        - updated_at\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    team-discussion:\n      title: Team Discussion\n      description: A team discussion is a persistent record of a free-form conversation within a team.\n      type: object\n      properties:\n        author:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body:\n          description: The main text of the discussion.\n          example: Please suggest improvements to our workflow in comments.\n          type: string\n        body_html:\n          type: string\n          example: \u003cp\u003eHi! This is an area for us to collaborate as a team\u003c/p\u003e\n        body_version:\n          description: The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.\n          example: 0307116bbf7ced493b8d8a346c650b71\n          type: string\n        comments_count:\n          type: integer\n          example: 0\n        comments_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments\n        created_at:\n          type: string\n          format: date-time\n          example: '2018-01-25T18:56:31Z'\n        last_edited_at:\n          type: string\n          format: date-time\n          nullable: true\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/github/teams/justice-league/discussions/1\n        node_id:\n          type: string\n          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==\n        number:\n          description: The unique sequence number of a team discussion.\n          example: 42\n          type: integer\n        pinned:\n          description: Whether or not this discussion should be pinned for easy retrieval.\n          example: true\n          type: boolean\n        private:\n          description: Whether or not this discussion should be restricted to team members and organization administrators.\n          example: true\n          type: boolean\n        team_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/2343027\n        title:\n          description: The title of the discussion.\n          example: How can we improve our workflow?\n          type: string\n        updated_at:\n          type: string\n          format: date-time\n          example: '2018-01-25T18:56:31Z'\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/2343027/discussions/1\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - author\n        - body\n        - body_html\n        - body_version\n        - comments_count\n        - comments_url\n        - created_at\n        - last_edited_at\n        - html_url\n        - pinned\n        - private\n        - node_id\n        - number\n        - team_url\n        - title\n        - updated_at\n        - url\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    reaction-rollup:\n      title: Reaction Rollup\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        total_count:\n          type: integer\n        '+1':\n          type: integer\n        '-1':\n          type: integer\n        laugh:\n          type: integer\n        confused:\n          type: integer\n        heart:\n          type: integer\n        hooray:\n          type: integer\n        eyes:\n          type: integer\n        rocket:\n          type: integer\n      required:\n        - url\n        - total_count\n        - '+1'\n        - '-1'\n        - laugh\n        - confused\n        - heart\n        - hooray\n        - eyes\n        - rocket\n    team-discussion-comment:\n      title: Team Discussion Comment\n      description: A reply to a discussion within a team.\n      type: object\n      properties:\n        author:\n          $ref: '#/components/schemas/nullable-simple-user'\n        body:\n          description: The main text of the comment.\n          example: I agree with this suggestion.\n          type: string\n        body_html:\n          type: string\n          example: \u003cp\u003eDo you like apples?\u003c/p\u003e\n        body_version:\n          description: The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.\n          example: 0307116bbf7ced493b8d8a346c650b71\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          example: '2018-01-15T23:53:58Z'\n        last_edited_at:\n          type: string\n          format: date-time\n          nullable: true\n        discussion_url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/2403582/discussions/1\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\n        node_id:\n          type: string\n          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\n        number:\n          description: The unique sequence number of a team discussion comment.\n          example: 42\n          type: integer\n        updated_at:\n          type: string\n          format: date-time\n          example: '2018-01-15T23:53:58Z'\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1\n        reactions:\n          $ref: '#/components/schemas/reaction-rollup'\n      required:\n        - author\n        - body\n        - body_html\n        - body_version\n        - created_at\n        - last_edited_at\n        - discussion_url\n        - html_url\n        - node_id\n        - number\n        - updated_at\n        - url\n    organization-invitation:\n      title: Organization Invitation\n      description: Organization Invitation\n      type: object\n      properties:\n        id:\n          type: integer\n        login:\n          type: string\n          nullable: true\n        email:\n          type: string\n          nullable: true\n        role:\n          type: string\n        created_at:\n          type: string\n        failed_at:\n          type: string\n          nullable: true\n        failed_reason:\n          type: string\n          nullable: true\n        inviter:\n          $ref: '#/components/schemas/simple-user'\n        team_count:\n          type: integer\n        node_id:\n          type: string\n          example: '\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"'\n        invitation_teams_url:\n          type: string\n          example: '\"https://api.github.com/organizations/16/invitations/1/teams\"'\n      required:\n        - id\n        - login\n        - email\n        - role\n        - created_at\n        - inviter\n        - team_count\n        - invitation_teams_url\n        - node_id\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    team-membership:\n      title: Team Membership\n      description: Team Membership\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        role:\n          description: The role of the user in the team.\n          enum:\n            - member\n            - maintainer\n          default: member\n          example: member\n          type: string\n        state:\n          description: The state of the user's membership in the team.\n          type: string\n          enum:\n            - active\n            - pending\n      required:\n        - role\n        - state\n        - url\n    team-project:\n      title: Team Project\n      description: A team's access to a project.\n      type: object\n      properties:\n        owner_url:\n          type: string\n        url:\n          type: string\n        html_url:\n          type: string\n        columns_url:\n          type: string\n        id:\n          type: integer\n        node_id:\n          type: string\n        name:\n          type: string\n        body:\n          type: string\n          nullable: true\n        number:\n          type: integer\n        state:\n          type: string\n        creator:\n          $ref: '#/components/schemas/simple-user'\n        created_at:\n          type: string\n        updated_at:\n          type: string\n        organization_permission:\n          description: The organization permission for this project. Only present when owner is an organization.\n          type: string\n        private:\n          description: Whether the project is private or not. Only present when owner is an organization.\n          type: boolean\n        permissions:\n          type: object\n          properties:\n            read:\n              type: boolean\n            write:\n              type: boolean\n            admin:\n              type: boolean\n          required:\n            - read\n            - write\n            - admin\n      required:\n        - owner_url\n        - url\n        - html_url\n        - columns_url\n        - id\n        - node_id\n        - name\n        - body\n        - number\n        - state\n        - creator\n        - created_at\n        - updated_at\n        - permissions\n    minimal-repository:\n      title: Minimal Repository\n      description: Minimal Repository\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1296269\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          type: string\n          example: Hello-World\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n        mirror_url:\n          type: string\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n        homepage:\n          type: string\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n        stargazers_count:\n          type: integer\n        watchers_count:\n          type: integer\n        size:\n          type: integer\n        default_branch:\n          type: string\n        open_issues_count:\n          type: integer\n        is_template:\n          type: boolean\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          type: boolean\n        has_projects:\n          type: boolean\n        has_wiki:\n          type: boolean\n        has_pages:\n          type: boolean\n        has_downloads:\n          type: boolean\n        archived:\n          type: boolean\n        disabled:\n          type: boolean\n        visibility:\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            maintain:\n              type: boolean\n            push:\n              type: boolean\n            triage:\n              type: boolean\n            pull:\n              type: boolean\n        role_name:\n          type: string\n          example: admin\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n        delete_branch_on_merge:\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        code_of_conduct:\n          $ref: '#/components/schemas/code-of-conduct'\n        license:\n          type: object\n          properties:\n            key:\n              type: string\n            name:\n              type: string\n            spdx_id:\n              type: string\n            url:\n              type: string\n            node_id:\n              type: string\n          nullable: true\n        forks:\n          type: integer\n          example: 0\n        open_issues:\n          type: integer\n          example: 0\n        watchers:\n          type: integer\n          example: 0\n        allow_forking:\n          type: boolean\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n    nullable-repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n      nullable: true\n    code-of-conduct:\n      title: Code Of Conduct\n      description: Code Of Conduct\n      type: object\n      properties:\n        key:\n          type: string\n          example: contributor_covenant\n        name:\n          type: string\n          example: Contributor Covenant\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/codes_of_conduct/contributor_covenant\n        body:\n          type: string\n          example: |\n            # Contributor Covenant Code of Conduct\n\n            ## Our Pledge\n\n            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n            ## Our Standards\n\n            Examples of behavior that contributes to creating a positive environment include:\n\n            * Using welcoming and inclusive language\n            * Being respectful of differing viewpoints and experiences\n            * Gracefully accepting constructive criticism\n            * Focusing on what is best for the community\n            * Showing empathy towards other community members\n\n            Examples of unacceptable behavior by participants include:\n\n            * The use of sexualized language or imagery and unwelcome sexual attention or advances\n            * Trolling, insulting/derogatory comments, and personal or political attacks\n            * Public or private harassment\n            * Publishing others' private information, such as a physical or electronic address, without explicit permission\n            * Other conduct which could reasonably be considered inappropriate in a professional setting\n\n            ## Our Responsibilities\n\n            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                              to any instances of unacceptable behavior.\n\n            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n            ## Scope\n\n            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n            ## Enforcement\n\n            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n            ## Attribution\n\n            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n            [homepage]: http://contributor-covenant.org\n            [version]: http://contributor-covenant.org/version/1/4/\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n      required:\n        - url\n        - html_url\n        - key\n        - name\n    nullable-license-simple:\n      title: License Simple\n      description: License Simple\n      type: object\n      properties:\n        key:\n          type: string\n          example: mit\n        name:\n          type: string\n          example: MIT License\n        url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://api.github.com/licenses/mit\n        spdx_id:\n          type: string\n          nullable: true\n          example: MIT\n        node_id:\n          type: string\n          example: MDc6TGljZW5zZW1pdA==\n        html_url:\n          type: string\n          format: uri\n      required:\n        - key\n        - name\n        - url\n        - spdx_id\n        - node_id\n      nullable: true\n    team-repository:\n      title: Team Repository\n      description: A team's access to a repository.\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        role_name:\n          type: string\n          example: admin\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          default: false\n          type: boolean\n          example: false\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n  parameters:\n    org:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n    team-slug:\n      name: team_slug\n      description: team_slug parameter\n      in: path\n      required: true\n      schema:\n        type: string\n    group-id:\n      name: group_id\n      description: group_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    direction:\n      name: direction\n      description: One of `asc` (ascending) or `desc` (descending).\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        default: desc\n    discussion-number:\n      name: discussion_number\n      in: path\n      required: true\n      schema:\n        type: integer\n    comment-number:\n      name: comment_number\n      in: path\n      required: true\n      schema:\n        type: integer\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n    project-id:\n      name: project_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    team-id:\n      name: team_id\n      in: path\n      required: true\n      schema:\n        type: integer\n  responses:\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n    not_modified:\n      description: Not modified\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    external-groups:\n      value:\n        groups:\n          - group_id: '123'\n            group_name: Octocat admins\n            updated_at: '2021-01-24T11:31:04-06:00'\n          - group_id: '456'\n            group_name: Octocat docs members\n            updated_at: '2021-03-24T11:31:04-06:00'\n    external-group:\n      value:\n        group_id: '123'\n        group_name: Octocat admins\n        updated_at: '2021-01-24T11:31:04-06:00'\n        teams:\n          - team_id: 1\n            team_name: team-test\n          - team_id: 2\n            team_name: team-test2\n        members:\n          - member_id: 1\n            member_login: mona-lisa_eocsaxrs\n            member_name: Mona Lisa\n            member_email: mona_lisa@github.com\n          - member_id: 2\n            member_login: octo-lisa_eocsaxrs\n            member_name: Octo Lisa\n            member_email: octo_lisa@github.com\n    group-mapping-3:\n      value:\n        groups:\n          - group_id: '123'\n            group_name: Octocat admins\n            group_description: The people who configure your octoworld.\n          - group_id: '456'\n            group_name: Octocat docs members\n            group_description: The people who make your octoworld come to life.\n    team-items:\n      value:\n        - id: 1\n          node_id: MDQ6VGVhbTE=\n          url: https://api.github.com/teams/1\n          html_url: https://github.com/orgs/github/teams/justice-league\n          name: Justice League\n          slug: justice-league\n          description: A great team.\n          privacy: closed\n          permission: admin\n          members_url: https://api.github.com/teams/1/members{/member}\n          repositories_url: https://api.github.com/teams/1/repos\n          parent: null\n    team-full:\n      value:\n        id: 1\n        node_id: MDQ6VGVhbTE=\n        url: https://api.github.com/teams/1\n        html_url: https://github.com/orgs/github/teams/justice-league\n        name: Justice League\n        slug: justice-league\n        description: A great team.\n        privacy: closed\n        permission: admin\n        members_url: https://api.github.com/teams/1/members{/member}\n        repositories_url: https://api.github.com/teams/1/repos\n        parent: null\n        members_count: 3\n        repos_count: 10\n        created_at: '2017-07-14T16:53:42Z'\n        updated_at: '2017-08-17T12:37:15Z'\n        organization:\n          login: github\n          id: 1\n          node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n          url: https://api.github.com/orgs/github\n          repos_url: https://api.github.com/orgs/github/repos\n          events_url: https://api.github.com/orgs/github/events\n          hooks_url: https://api.github.com/orgs/github/hooks\n          issues_url: https://api.github.com/orgs/github/issues\n          members_url: https://api.github.com/orgs/github/members{/member}\n          public_members_url: https://api.github.com/orgs/github/public_members{/member}\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          description: A great organization\n          name: github\n          company: GitHub\n          blog: https://github.com/blog\n          location: San Francisco\n          email: octocat@github.com\n          is_verified: true\n          has_organization_projects: true\n          has_repository_projects: true\n          public_repos: 2\n          public_gists: 1\n          followers: 20\n          following: 0\n          html_url: https://github.com/octocat\n          created_at: '2008-01-14T04:33:35Z'\n          updated_at: '2017-08-17T12:37:15Z'\n          type: Organization\n    team-discussion-items:\n      value:\n        - author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          body: Hi! This is an area for us to collaborate as a team.\n          body_html: \u003cp\u003eHi! This is an area for us to collaborate as a team\u003c/p\u003e\n          body_version: 0d495416a700fb06133c612575d92bfb\n          comments_count: 0\n          comments_url: https://api.github.com/teams/2343027/discussions/1/comments\n          created_at: '2018-01-25T18:56:31Z'\n          last_edited_at: null\n          html_url: https://github.com/orgs/github/teams/justice-league/discussions/1\n          node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==\n          number: 1\n          pinned: false\n          private: false\n          team_url: https://api.github.com/teams/2343027\n          title: Our first team post\n          updated_at: '2018-01-25T18:56:31Z'\n          url: https://api.github.com/teams/2343027/discussions/1\n          reactions:\n            url: https://api.github.com/teams/2343027/discussions/1/reactions\n            total_count: 5\n            '+1': 3\n            '-1': 1\n            laugh: 0\n            confused: 0\n            heart: 1\n            hooray: 0\n            eyes: 1\n            rocket: 1\n    team-discussion:\n      value:\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        body: Hi! This is an area for us to collaborate as a team.\n        body_html: \u003cp\u003eHi! This is an area for us to collaborate as a team\u003c/p\u003e\n        body_version: 0d495416a700fb06133c612575d92bfb\n        comments_count: 0\n        comments_url: https://api.github.com/teams/2343027/discussions/1/comments\n        created_at: '2018-01-25T18:56:31Z'\n        last_edited_at: null\n        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1\n        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==\n        number: 1\n        pinned: false\n        private: false\n        team_url: https://api.github.com/teams/2343027\n        title: Our first team post\n        updated_at: '2018-01-25T18:56:31Z'\n        url: https://api.github.com/teams/2343027/discussions/1\n        reactions:\n          url: https://api.github.com/teams/2343027/discussions/1/reactions\n          total_count: 5\n          '+1': 3\n          '-1': 1\n          laugh: 0\n          confused: 0\n          heart: 1\n          hooray: 0\n          eyes: 1\n          rocket: 1\n    team-discussion-2:\n      value:\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        body: Hi! This is an area for us to collaborate as a team.\n        body_html: \u003cp\u003eHi! This is an area for us to collaborate as a team\u003c/p\u003e\n        body_version: 0d495416a700fb06133c612575d92bfb\n        comments_count: 1\n        comments_url: https://api.github.com/teams/2343027/discussions/1/comments\n        created_at: '2018-01-25T18:56:31Z'\n        last_edited_at: '2018-01-26T18:22:20Z'\n        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1\n        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==\n        number: 1\n        pinned: false\n        private: false\n        team_url: https://api.github.com/teams/2343027\n        title: Welcome to our first team post\n        updated_at: '2018-01-26T18:22:20Z'\n        url: https://api.github.com/teams/2343027/discussions/1\n        reactions:\n          url: https://api.github.com/teams/2343027/discussions/1/reactions\n          total_count: 5\n          '+1': 3\n          '-1': 1\n          laugh: 0\n          confused: 0\n          heart: 1\n          hooray: 0\n          eyes: 1\n          rocket: 1\n    team-discussion-comment-items:\n      value:\n        - author:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          body: Do you like apples?\n          body_html: \u003cp\u003eDo you like apples?\u003c/p\u003e\n          body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51\n          created_at: '2018-01-15T23:53:58Z'\n          last_edited_at: null\n          discussion_url: https://api.github.com/teams/2403582/discussions/1\n          html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\n          node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\n          number: 1\n          updated_at: '2018-01-15T23:53:58Z'\n          url: https://api.github.com/teams/2403582/discussions/1/comments/1\n          reactions:\n            url: https://api.github.com/teams/2403582/discussions/1/reactions\n            total_count: 5\n            '+1': 3\n            '-1': 1\n            laugh: 0\n            confused: 0\n            heart: 1\n            hooray: 0\n            eyes: 1\n            rocket: 1\n    team-discussion-comment:\n      value:\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        body: Do you like apples?\n        body_html: \u003cp\u003eDo you like apples?\u003c/p\u003e\n        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51\n        created_at: '2018-01-15T23:53:58Z'\n        last_edited_at: null\n        discussion_url: https://api.github.com/teams/2403582/discussions/1\n        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\n        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\n        number: 1\n        updated_at: '2018-01-15T23:53:58Z'\n        url: https://api.github.com/teams/2403582/discussions/1/comments/1\n        reactions:\n          url: https://api.github.com/teams/2403582/discussions/1/reactions\n          total_count: 5\n          '+1': 3\n          '-1': 1\n          laugh: 0\n          confused: 0\n          heart: 1\n          hooray: 0\n          eyes: 1\n          rocket: 1\n    team-discussion-comment-2:\n      value:\n        author:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        body: Do you like pineapples?\n        body_html: \u003cp\u003eDo you like pineapples?\u003c/p\u003e\n        body_version: e6907b24d9c93cc0c5024a7af5888116\n        created_at: '2018-01-15T23:53:58Z'\n        last_edited_at: '2018-01-26T18:22:20Z'\n        discussion_url: https://api.github.com/teams/2403582/discussions/1\n        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\n        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\n        number: 1\n        updated_at: '2018-01-26T18:22:20Z'\n        url: https://api.github.com/teams/2403582/discussions/1/comments/1\n        reactions:\n          url: https://api.github.com/teams/2403582/discussions/1/reactions\n          total_count: 5\n          '+1': 3\n          '-1': 1\n          laugh: 0\n          confused: 0\n          heart: 1\n          hooray: 0\n          eyes: 1\n          rocket: 1\n    organization-invitation-items:\n      value:\n        - id: 1\n          login: monalisa\n          node_id: MDQ6VXNlcjE=\n          email: octocat@github.com\n          role: direct_member\n          created_at: '2016-11-30T06:46:10-08:00'\n          failed_at: ''\n          failed_reason: ''\n          inviter:\n            login: other_user\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/other_user_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/other_user\n            html_url: https://github.com/other_user\n            followers_url: https://api.github.com/users/other_user/followers\n            following_url: https://api.github.com/users/other_user/following{/other_user}\n            gists_url: https://api.github.com/users/other_user/gists{/gist_id}\n            starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/other_user/subscriptions\n            organizations_url: https://api.github.com/users/other_user/orgs\n            repos_url: https://api.github.com/users/other_user/repos\n            events_url: https://api.github.com/users/other_user/events{/privacy}\n            received_events_url: https://api.github.com/users/other_user/received_events\n            type: User\n            site_admin: false\n          team_count: 2\n          invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    team-membership-response-if-user-is-a-team-maintainer:\n      summary: Response if user is a team maintainer\n      value:\n        url: https://api.github.com/teams/1/memberships/octocat\n        role: maintainer\n        state: active\n    team-membership-response-if-users-membership-with-team-is-now-pending:\n      summary: Response if user's membership with team is now pending\n      value:\n        url: https://api.github.com/teams/1/memberships/octocat\n        role: member\n        state: pending\n    team-project-items:\n      value:\n        - owner_url: https://api.github.com/orgs/octocat\n          url: https://api.github.com/projects/1002605\n          html_url: https://github.com/orgs/api-playground/projects/1\n          columns_url: https://api.github.com/projects/1002605/columns\n          id: 1002605\n          node_id: MDc6UHJvamVjdDEwMDI2MDU=\n          name: Organization Roadmap\n          body: High-level roadmap for the upcoming year.\n          number: 1\n          state: open\n          creator:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          created_at: '2011-04-11T20:09:31Z'\n          updated_at: '2014-03-04T18:58:10Z'\n          organization_permission: write\n          private: false\n          permissions:\n            read: true\n            write: true\n            admin: false\n    team-project:\n      value:\n        owner_url: https://api.github.com/orgs/octocat\n        url: https://api.github.com/projects/1002605\n        html_url: https://github.com/orgs/api-playground/projects/1\n        columns_url: https://api.github.com/projects/1002605/columns\n        id: 1002605\n        node_id: MDc6UHJvamVjdDEwMDI2MDU=\n        name: Organization Roadmap\n        body: High-level roadmap for the upcoming year.\n        number: 1\n        state: open\n        creator:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        created_at: '2011-04-11T20:09:31Z'\n        updated_at: '2014-03-04T18:58:10Z'\n        organization_permission: write\n        private: false\n        permissions:\n          read: true\n          write: true\n          admin: false\n    minimal-repository-items:\n      value:\n        - id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World\n          full_name: octocat/Hello-World\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World\n          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World.git\n          mirror_url: git:git.example.com/octocat/Hello-World\n          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World\n          homepage: https://github.com\n          language: null\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          size: 108\n          default_branch: master\n          open_issues_count: 0\n          is_template: false\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            admin: false\n            push: false\n            pull: true\n          template_repository: null\n    team-repository-alternative-response-with-repository-permissions:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        language: null\n        forks_count: 9\n        stargazers_count: 80\n        watchers_count: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          admin: false\n          maintain: false\n          push: false\n          triage: false\n          pull: true\n        role_name: read\n        allow_rebase_merge: true\n        template_repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World-Template\n          full_name: octocat/Hello-World-Template\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World-Template\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World-Template\n          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World-Template.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World-Template.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World-Template.git\n          mirror_url: git:git.example.com/octocat/Hello-World-Template\n          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World-Template\n          homepage: https://github.com\n          language: null\n          forks: 9\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          watchers: 80\n          size: 108\n          default_branch: master\n          open_issues: 0\n          open_issues_count: 0\n          is_template: true\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            pull: true\n            triage: false\n            push: false\n            maintain: false\n            admin: false\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n        allow_squash_merge: true\n        allow_auto_merge: false\n        delete_branch_on_merge: true\n        allow_merge_commit: true\n        subscribers_count: 42\n        network_count: 0\n        license:\n          key: mit\n          name: MIT License\n          url: https://api.github.com/licenses/mit\n          spdx_id: MIT\n          node_id: MDc6TGljZW5zZW1pdA==\n          html_url: https://api.github.com/licenses/mit\n        forks: 1\n        open_issues: 1\n        watchers: 1\n    group-mapping:\n      value:\n        groups:\n          - group_id: '123'\n            group_name: Octocat admins\n            group_description: The people who configure your octoworld.\n          - group_id: '456'\n            group_name: Octocat docs members\n            group_description: The people who make your octoworld come to life.\n    team-items-response-if-child-teams-exist:\n      value:\n        - id: 2\n          node_id: MDQ6VGVhbTI=\n          url: https://api.github.com/teams/2\n          name: Original Roster\n          slug: original-roster\n          description: Started it all.\n          privacy: closed\n          permission: admin\n          members_url: https://api.github.com/teams/2/members{/member}\n          repositories_url: https://api.github.com/teams/2/repos\n          parent:\n            id: 1\n            node_id: MDQ6VGVhbTE=\n            url: https://api.github.com/teams/1\n            html_url: https://github.com/orgs/github/teams/justice-league\n            name: Justice League\n            slug: justice-league\n            description: A great team.\n            privacy: closed\n            permission: admin\n            members_url: https://api.github.com/teams/1/members{/member}\n            repositories_url: https://api.github.com/teams/1/repos\n          html_url: https://github.com/orgs/rails/teams/core\n    team-repository-alternative-response-with-extra-repository-information:\n      value:\n        id: 1296269\n        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name: Hello-World\n        full_name: octocat/Hello-World\n        owner:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        private: false\n        html_url: https://github.com/octocat/Hello-World\n        description: This your first repo!\n        fork: false\n        url: https://api.github.com/repos/octocat/Hello-World\n        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads\n        events_url: https://api.github.com/repos/octocat/Hello-World/events\n        forks_url: https://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url: git:github.com/octocat/Hello-World.git\n        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url: https://api.github.com/repos/octocat/Hello-World/languages\n        merges_url: https://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url: git@github.com:octocat/Hello-World.git\n        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url: https://api.github.com/repos/octocat/Hello-World/tags\n        teams_url: https://api.github.com/repos/octocat/Hello-World/teams\n        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url: https://github.com/octocat/Hello-World.git\n        mirror_url: git:git.example.com/octocat/Hello-World\n        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url: https://svn.github.com/octocat/Hello-World\n        homepage: https://github.com\n        language: null\n        forks_count: 9\n        stargazers_count: 80\n        watchers_count: 80\n        size: 108\n        default_branch: master\n        open_issues_count: 0\n        is_template: false\n        topics:\n          - octocat\n          - atom\n          - electron\n          - api\n        has_issues: true\n        has_projects: true\n        has_wiki: true\n        has_pages: false\n        has_downloads: true\n        archived: false\n        disabled: false\n        visibility: public\n        pushed_at: '2011-01-26T19:06:43Z'\n        created_at: '2011-01-26T19:01:12Z'\n        updated_at: '2011-01-26T19:14:43Z'\n        permissions:\n          admin: false\n          maintain: false\n          push: false\n          triage: false\n          pull: true\n        role_name: read\n        allow_rebase_merge: true\n        template_repository:\n          id: 1296269\n          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n          name: Hello-World-Template\n          full_name: octocat/Hello-World-Template\n          owner:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          private: false\n          html_url: https://github.com/octocat/Hello-World-Template\n          description: This your first repo!\n          fork: false\n          url: https://api.github.com/repos/octocat/Hello-World-Template\n          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}\n          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}\n          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}\n          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}\n          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}\n          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}\n          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}\n          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}\n          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}\n          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors\n          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments\n          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads\n          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events\n          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks\n          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}\n          git_url: git:github.com/octocat/Hello-World-Template.git\n          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}\n          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}\n          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}\n          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}\n          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}\n          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages\n          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges\n          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}\n          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}\n          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}\n          ssh_url: git@github.com:octocat/Hello-World-Template.git\n          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers\n          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}\n          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers\n          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription\n          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags\n          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams\n          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}\n          clone_url: https://github.com/octocat/Hello-World-Template.git\n          mirror_url: git:git.example.com/octocat/Hello-World-Template\n          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks\n          svn_url: https://svn.github.com/octocat/Hello-World-Template\n          homepage: https://github.com\n          language: null\n          forks: 9\n          forks_count: 9\n          stargazers_count: 80\n          watchers_count: 80\n          watchers: 80\n          size: 108\n          default_branch: master\n          open_issues: 0\n          open_issues_count: 0\n          is_template: true\n          license:\n            key: mit\n            name: MIT License\n            url: https://api.github.com/licenses/mit\n            spdx_id: MIT\n            node_id: MDc6TGljZW5zZW1pdA==\n            html_url: https://api.github.com/licenses/mit\n          topics:\n            - octocat\n            - atom\n            - electron\n            - api\n          has_issues: true\n          has_projects: true\n          has_wiki: true\n          has_pages: false\n          has_downloads: true\n          archived: false\n          disabled: false\n          visibility: public\n          pushed_at: '2011-01-26T19:06:43Z'\n          created_at: '2011-01-26T19:01:12Z'\n          updated_at: '2011-01-26T19:14:43Z'\n          permissions:\n            pull: true\n            triage: false\n            push: false\n            maintain: false\n            admin: false\n          allow_rebase_merge: true\n          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n          allow_squash_merge: true\n          allow_auto_merge: false\n          delete_branch_on_merge: true\n          allow_merge_commit: true\n          subscribers_count: 42\n          network_count: 0\n        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O\n        allow_squash_merge: true\n        allow_auto_merge: false\n        delete_branch_on_merge: true\n        allow_merge_commit: true\n        subscribers_count: 42\n        network_count: 0\n        license:\n          key: mit\n          name: MIT License\n          url: https://api.github.com/licenses/mit\n          spdx_id: MIT\n          node_id: MDc6TGljZW5zZW1pdA==\n          html_url: https://api.github.com/licenses/mit\n        forks: 1\n        open_issues: 1\n        watchers: 1\n    group-mapping-2:\n      value:\n        groups:\n          - group_id: '123'\n            group_name: Octocat admins\n            group_description: The people who configure your octoworld.\n    team-full-items:\n      value:\n        - id: 1\n          node_id: MDQ6VGVhbTE=\n          url: https://api.github.com/teams/1\n          html_url: https://github.com/orgs/github/teams/justice-league\n          name: Justice League\n          slug: justice-league\n          description: A great team.\n          privacy: closed\n          permission: admin\n          members_url: https://api.github.com/teams/1/members{/member}\n          repositories_url: https://api.github.com/teams/1/repos\n          parent: null\n          members_count: 3\n          repos_count: 10\n          created_at: '2017-07-14T16:53:42Z'\n          updated_at: '2017-08-17T12:37:15Z'\n          organization:\n            login: github\n            id: 1\n            node_id: MDEyOk9yZ2FuaXphdGlvbjE=\n            url: https://api.github.com/orgs/github\n            repos_url: https://api.github.com/orgs/github/repos\n            events_url: https://api.github.com/orgs/github/events\n            hooks_url: https://api.github.com/orgs/github/hooks\n            issues_url: https://api.github.com/orgs/github/issues\n            members_url: https://api.github.com/orgs/github/members{/member}\n            public_members_url: https://api.github.com/orgs/github/public_members{/member}\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            description: A great organization\n            name: github\n            company: GitHub\n            blog: https://github.com/blog\n            location: San Francisco\n            email: octocat@github.com\n            is_verified: true\n            has_organization_projects: true\n            has_repository_projects: true\n            public_repos: 2\n            public_gists: 1\n            followers: 20\n            following: 0\n            html_url: https://github.com/octocat\n            created_at: '2008-01-14T04:33:35Z'\n            updated_at: '2017-08-17T12:37:15Z'\n            type: Organization\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    external_groups:\n      id: github.teams.external_groups\n      name: external_groups\n      title: External Groups\n      methods:\n        list_linked_external_idp_groups_to_team_for_org:\n          operation:\n            $ref: '#/paths/~1organizations~1{org}~1team~1{team_slug}~1external-groups/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        external_idp_group_info_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1external-group~1{group_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_external_idp_groups_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1external-groups/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        link_external_idp_group_to_team_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1external-groups/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        unlink_external_idp_group_from_team_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1external-groups/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/external_groups/methods/list_linked_external_idp_groups_to_team_for_org'\n          - $ref: '#/components/x-stackQL-resources/external_groups/methods/list_external_idp_groups_for_org'\n        insert: []\n        update: []\n        delete: []\n    team_sync:\n      id: github.teams.team_sync\n      name: team_sync\n      title: Team Sync Group Mapping\n      methods:\n        list_idp_groups_for_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1team-sync~1groups/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_idp_groups_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1team-sync~1group-mappings/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_or_update_idp_group_connections_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1team-sync~1group-mappings/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_idp_groups_for_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1team-sync~1group-mappings/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_or_update_idp_group_connections_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1team-sync~1group-mappings/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/team_sync/methods/list_idp_groups_in_org'\n          - $ref: '#/components/x-stackQL-resources/team_sync/methods/list_idp_groups_for_org'\n          - $ref: '#/components/x-stackQL-resources/team_sync/methods/list_idp_groups_for_legacy'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/team_sync/methods/create_or_update_idp_group_connections_in_org'\n          - $ref: '#/components/x-stackQL-resources/team_sync/methods/create_or_update_idp_group_connections_legacy'\n        update: []\n        delete: []\n    projects:\n      id: github.teams.projects\n      name: projects\n      title: Teams Projects\n      methods:\n        list_projects_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1projects/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_permissions_for_project_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1projects~1{project_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_or_update_project_permissions_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1projects~1{project_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_project_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1projects~1{project_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/projects/methods/list_projects_in_org'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/projects/methods/add_or_update_project_permissions_in_org'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/projects/methods/remove_project_in_org'\n    repos:\n      id: github.teams.repos\n      name: repos\n      title: Teams Repos\n      methods:\n        list_repos_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1repos/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_permissions_for_repo_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1repos~1{owner}~1{repo}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        add_or_update_repo_permissions_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1repos~1{owner}~1{repo}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_repo_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1repos~1{owner}~1{repo}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/list_repos_in_org'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/add_or_update_repo_permissions_in_org'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos/methods/remove_repo_in_org'\n    child_teams:\n      id: github.teams.child_teams\n      name: child_teams\n      title: Child Teams\n      methods:\n        list_child_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/child_teams/methods/list_child_in_org'\n        insert: []\n        update: []\n        delete: []\n    legacy:\n      id: github.teams.legacy\n      name: legacy\n      title: Teams Legacy\n      methods:\n        get_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_projects_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1projects/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_permissions_for_project_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1projects~1{project_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_or_update_project_permissions_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1projects~1{project_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_project_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1projects~1{project_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_repos_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1repos/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_permissions_for_repo_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1repos~1{owner}~1{repo}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        add_or_update_repo_permissions_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1repos~1{owner}~1{repo}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_repo_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1repos~1{owner}~1{repo}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_child_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    teams:\n      id: github.teams.teams\n      name: teams\n      title: Teams\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_by_name:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1teams/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/teams/methods/get_by_name'\n          - $ref: '#/components/x-stackQL-resources/teams/methods/list'\n          - $ref: '#/components/x-stackQL-resources/teams/methods/list_for_authenticated_user'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/teams/methods/create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/teams/methods/delete_in_org'\n    discussions:\n      id: github.teams.discussions\n      name: discussions\n      title: Discussions\n      methods:\n        list_discussions_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_discussion_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_discussion_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_discussion_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_discussion_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_discussions_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_discussion_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_discussion_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_discussion_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_discussion_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/get_discussion_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/list_discussions_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/get_discussion_legacy'\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/list_discussions_legacy'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/create_discussion_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/create_discussion_legacy'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/delete_discussion_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussions/methods/delete_discussion_legacy'\n    discussion_comments:\n      id: github.teams.discussion_comments\n      name: discussion_comments\n      title: Discussion_comments\n      methods:\n        list_discussion_comments_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_discussion_comment_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}~1comments/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_discussion_comment_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}~1comments~1{comment_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_discussion_comment_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}~1comments~1{comment_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_discussion_comment_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1discussions~1{discussion_number}~1comments~1{comment_number}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_discussion_comments_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}~1comments/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_discussion_comment_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}~1comments/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_discussion_comment_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}~1comments~1{comment_number}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_discussion_comment_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}~1comments~1{comment_number}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_discussion_comment_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1discussions~1{discussion_number}~1comments~1{comment_number}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/get_discussion_comment_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/list_discussion_comments_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/get_discussion_comment_legacy'\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/list_discussion_comments_legacy'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/create_discussion_comment_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/create_discussion_comment_legacy'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/delete_discussion_comment_in_org'\n          - $ref: '#/components/x-stackQL-resources/discussion_comments/methods/delete_discussion_comment_legacy'\n    membership:\n      id: github.teams.membership\n      name: membership\n      title: Team Membership\n      methods:\n        get_membership_for_user_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1memberships~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_or_update_membership_for_user_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1memberships~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_membership_for_user_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1memberships~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_membership_for_user_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1memberships~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_or_update_membership_for_user_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1memberships~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        remove_membership_for_user_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1memberships~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/membership/methods/get_membership_for_user_in_org'\n          - $ref: '#/components/x-stackQL-resources/membership/methods/get_membership_for_user_legacy'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/membership/methods/add_or_update_membership_for_user_in_org'\n          - $ref: '#/components/x-stackQL-resources/membership/methods/add_or_update_membership_for_user_legacy'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/membership/methods/remove_membership_for_user_in_org'\n          - $ref: '#/components/x-stackQL-resources/membership/methods/remove_membership_for_user_legacy'\n    pending_invitations:\n      id: github.teams.pending_invitations\n      name: pending_invitations\n      title: Pending Invitations\n      methods:\n        list_pending_invitations_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_pending_invitations_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1invitations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/pending_invitations/methods/list_pending_invitations_in_org'\n          - $ref: '#/components/x-stackQL-resources/pending_invitations/methods/list_pending_invitations_legacy'\n        insert: []\n        update: []\n        delete: []\n    members:\n      id: github.teams.members\n      name: members\n      title: Members\n      methods:\n        list_members_in_org:\n          operation:\n            $ref: '#/paths/~1orgs~1{org}~1teams~1{team_slug}~1members/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_members_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1members/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_member_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1members~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        add_member_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1members~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        remove_member_legacy:\n          operation:\n            $ref: '#/paths/~1teams~1{team_id}~1members~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/members/methods/list_members_in_org'\n          - $ref: '#/components/x-stackQL-resources/members/methods/get_member_legacy'\n          - $ref: '#/components/x-stackQL-resources/members/methods/list_members_legacy'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/members/methods/add_member_legacy'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/members/methods/remove_member_legacy'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - teams\n  description: Interact with GitHub Teams.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.3.0/services/teams.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.3.0/services/teams.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}