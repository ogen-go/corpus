{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/m1nhtu99-hoan9/NerdHerd-Final-Project-backend"
		},
		"file": {
			"name": "openapi_ specs.yaml",
			"size": 0,
			"path": "openapi_ specs.yaml",
			"byteSize": 11296,
			"content": "# published at: https://app.swaggerhub.com/apis/minhtu-thomas-hoang9/nerdherd-crescorex-api/1.0.1\n\nopenapi: \"3.0.0\"\ninfo:\n  description: OPENAPI Documentation for NerdHerd Backend service\n  version: 1.0.0-oas3\n  title: CreScorex API\n  contact:\n    email: minhtu.hoang19@gmai.com\n  license:\n    name: MIT licensed\n\ntags:\n  - name: public\n    description: Public routes\n  - name: protected\n    description: Routes require JWT authorisation header\n\npaths:\n  /auth/login:\n    get:\n      tags:\n        - public\n      summary: login route\n      description: login route\n        Login route\n      security:\n        - BasicAuth: []\n      responses:\n        \"201\":\n          description: login successfully with new JWT generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Jwt201\"\n        \"400\":\n          description: login credentials are incorrect\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Login400\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\n  /auth/logout:\n    post:\n      tags:\n        - protected\n      summary: logout route\n      description: Logout route\n      security:\n        - BearerAuth: []\n      responses:\n        \"200\":\n          description: logged out successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Successful\"\n        \"401\":\n          description: token expired or revoked\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unauthorised\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\n  /auth/register:\n    post:\n      tags:\n        - public\n      summary: register route\n      description: Register new user account\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterUser\"\n      responses:\n        \"201\":\n          description: new user successfully registered\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Register201\"\n        \"403\":\n          description: invalid license key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Forbidden\"\n        \"409\":\n          description: an user with the same email/phone number already existed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Register409\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\n  /otp:\n    get:\n      tags:\n        - protected\n      summary: request an OTP code\n      description: request an OTP code to be sent to customer's phone number\n      security:\n        - BearerAuth: []\n      parameters:\n        - in: query\n          name: phone\n          required: true\n          schema:\n            type: string\n            example: \"0123465987\"\n      responses:\n        \"201\":\n          description: new OTP code generated and sent back\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Otp201\"\n        \"401\":\n          description: user token is missing (not found in request header) or invalid\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unauthorised\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\n  /crescore:\n    get:\n      tags:\n        - protected\n      summary: query customer's credit score\n      description: query customer's credit score\n      security:\n        - BearerAuth: []\n      parameters:\n        - in: query\n          name: phone\n          schema:\n            type: string\n            example: \"0123465987\"\n      responses:\n        \"200\":\n          description: request successfully resolved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreScore200\"\n        \"400\":\n          description: phone number missing in request query or invalid\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n        \"401\":\n          description: unauthorised access\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unauthorised\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\n  /profile:\n    get:\n      tags:\n        - protected\n      summary: query user's profile\n      description: \u003e-\n        Query user's profile to display in User Profile screen and Home Screen (search history). \n        User's phone number is extracted from the token access attached with request header.\n      security:\n        - BearerAuth: []\n      responses:\n        \"200\":\n          description: request successfully resolved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User200\"\n        \"401\":\n          description: unauthorised access (token missing or invalid)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unauthorised\"\n        \"500\":\n          description: internal server error (bugs in code or database connection error)\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Internal server error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n      description: For encryption of login credentials in login route\n    BearerAuth:\n      type: http\n      scheme: bearer\n      description: Using JWT for user session management\n  schemas:\n    RegisterUser:\n      type: object\n      required:\n        - full_name\n        - phone\n        - email\n        - password\n        - license_key\n        - role\n      properties:\n        full_name:\n          type: string\n          example: \"John Doe\"\n        phone:\n          type: string\n          example: \"john_doe@gmail.com\"\n        email:\n          type: string\n          example: \"0124365897\"\n        password:\n          type: string\n          example: \"*password*\"\n        license_key:\n          type: string\n          example: \"Y9MXSIF79O\"\n        role:\n          type: string\n          example: \"Staff\"\n    User200:\n      type: object\n      required:\n        - phone\n        - full_name\n        - bank_id\n        - user_id\n        - email\n        - search_history\n      properties:\n        phone:\n          type: string\n          example: \"0132645978\"\n        full_name:\n          type: string\n          example: \"Minh Tu Hoang\"\n        bank_id:\n          type: string\n          example: \"BIDV\"\n        user_id:\n          type: string\n          example: \"TCB2444666666\"\n        email:\n          type: string\n          example: \"minhtu.hoang19@gmail.com\"\n        search_history:\n          type: array\n          items:\n            type: object\n            required:\n              - customer_phone\n              - credit_score\n            properties:\n              customer_phone:\n                type: string\n                example: \"0123465789\"\n              customer_score:\n                type: number\n                example: 0.78945145\n\n            example: \"01247896325\"\n    Otp201:\n      type: object\n      required:\n        - otp_code\n      properties:\n        otp_code:\n          type: string\n          example: \"086547\"\n    Jwt201:\n      type: object\n      required:\n        - jwt\n      properties:\n        jwt:\n          type: string\n          example: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\"\n    CreScore200:\n      type: object\n      required:\n        - phone\n        - score\n      properties:\n        phone: \n          type: string\n          example: \"0914258763\" \n        score:\n          type: number\n          example: 0.69\n    Login400:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"Your login credentials are incorrect. Please re-check!\"\n    Register409:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"This user already existed. Forgot password?\"\n    Register201:\n      type: object\n      required:\n        - db_user_id\n      properties:\n        db_user_id:\n          type: string\n          example: \"5f5ae8fd231b91224ef4ed89\"\n    Successful:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"Request successfully resolved!\"\n    BadRequest:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"Important fields are missing or invalid. Please re-check!\"\n    Unauthorised:\n      type: object\n      required:\n        - msg\n      properties:\n        msg:\n          type: string\n          example: \"Your token is expired or has been revoked. Please re-login!\"\n    Forbidden:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"Invalid license key. Please re-check!\"\n    InternalServerError:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          example: \"Internal server error detected.\"\n",
			"canonicalURL": "/github.com/m1nhtu99-hoan9/NerdHerd-Final-Project-backend@42c31cd71f4e8a45a59e8a4fd057f6d16f39781c/-/blob/openapi_%20specs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/m1nhtu99-hoan9/NerdHerd-Final-Project-backend/blob/42c31cd71f4e8a45a59e8a4fd057f6d16f39781c/openapi_ specs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}