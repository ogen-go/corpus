{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/googleapis.discovery/openapi.yaml",
			"byteSize": 20787,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://www.googleapis.com/discovery/v1\ninfo:\n  x-ballerina-display:\n    label: Google Discovery\n    iconPath: \"icon.png\"\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: \u003e\n    This is a generated connector for [Google Discovery REST API v1](https://developers.google.com/discovery/v1/reference) OpenAPI specification.\n    \n    Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API.\n  x-ballerina-init-description: \u003e\n    The connector initialization doesn't require setting the API credentials.\n\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: API Discovery Service\n  version: v1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n    - analytics\n    - media\n  x-logo:\n    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\n  x-origin:\n    - format: google\n      url: https://discovery.googleapis.com/$discovery/rest?version=v1\n      version: v1\n  x-providerName: googleapis.com\n  x-serviceName: discovery\nexternalDocs:\n  url: https://developers.google.com/discovery/\ntags:\n  - name: apis\npaths:\n  /apis:\n    get:\n      summary: Retrieve the list of APIs supported at this endpoint.\n      operationId: listAPIList\n      parameters:\n        - description: Only include APIs with the given name.\n          in: query\n          name: name\n          schema:\n            type: string\n        - description: Return only the preferred version of an API.\n          in: query\n          name: preferred\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DirectoryList\"\n          description: Successful response\n      tags:\n        - apis\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\n  \"/apis/{api}/{version}/rest\":\n    get:\n      summary: Retrieve the description of a particular version of an api.\n      operationId: getAPIDescription\n      parameters:\n        - description: The name of the API.\n          in: path\n          name: api\n          required: true\n          schema:\n            type: string\n        - description: The version of the API.\n          in: path\n          name: version\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestDescription\"\n          description: Successful response\n      tags:\n        - apis\n    parameters:\n      - $ref: \"#/components/parameters/alt\"\n      - $ref: \"#/components/parameters/fields\"\n      - $ref: \"#/components/parameters/quotaUser\"\n      - $ref: \"#/components/parameters/userIp\"\ncomponents:\n  parameters:\n    alt:\n      description: Data format for the response.\n      in: query\n      name: alt\n      schema:\n        enum:\n          - json\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    userIp:\n      description: Deprecated. Please use quotaUser instead.\n      in: query\n      name: userIp\n      schema:\n        type: string\n  schemas:\n    DirectoryList:\n      properties:\n        discoveryVersion:\n          default: v1\n          description: Indicate the version of the Discovery API used to generate this doc.\n          type: string\n        items:\n          description: The individual directory entries. One entry per api/version pair.\n          items:\n            properties:\n              description:\n                description: The description of this API.\n                type: string\n              discoveryLink:\n                description: A link to the discovery document.\n                type: string\n              discoveryRestUrl:\n                description: The URL for the discovery REST document.\n                type: string\n              documentationLink:\n                description: A link to human readable documentation for the API.\n                type: string\n              icons:\n                description: Links to 16x16 and 32x32 icons representing the API.\n                properties:\n                  x16:\n                    description: The URL of the 16x16 icon.\n                    type: string\n                  x32:\n                    description: The URL of the 32x32 icon.\n                    type: string\n                type: object\n              id:\n                description: The id of this API.\n                type: string\n              kind:\n                default: discovery#directoryItem\n                description: The kind for this response.\n                type: string\n              labels:\n                description: Labels for the status of this API, such as labs or deprecated.\n                items:\n                  type: string\n                type: array\n              name:\n                description: The name of the API.\n                type: string\n              preferred:\n                description: True if this version is the preferred version to use.\n                type: boolean\n              title:\n                description: The title of this API.\n                type: string\n              version:\n                description: The version of the API.\n                type: string\n            type: object\n          type: array\n        kind:\n          default: discovery#directoryList\n          description: The kind for this response.\n          type: string\n      type: object\n    JsonSchema:\n      properties:\n        $ref:\n          description: A reference to another schema. The value of this property is the \"id\" of another schema.\n          type: string\n        additionalProperties:\n          $ref: \"#/components/schemas/JsonSchema\"\n          description: If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.\n        annotations:\n          description: Additional information about this property.\n          properties:\n            required:\n              description: A list of methods for which this property is required on requests.\n              items:\n                type: string\n              type: array\n          type: object\n        description:\n          description: A description of this object.\n          type: string\n        enum:\n          description: Values this parameter may take (if it is an enum).\n          items:\n            type: string\n          type: array\n        enumDescriptions:\n          description: The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array.\n          items:\n            type: string\n          type: array\n        format:\n          description: \"An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23\"\n          type: string\n        id:\n          description: Unique identifier for this schema.\n          type: string\n        items:\n          $ref: \"#/components/schemas/JsonSchema\"\n          description: If this is a schema for an array, this property is the schema for each element in the array.\n        location:\n          description: Whether this parameter goes in the query or the path for REST requests.\n          type: string\n        maximum:\n          description: The maximum value of this parameter.\n          type: string\n        minimum:\n          description: The minimum value of this parameter.\n          type: string\n        pattern:\n          description: \"The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html\"\n          type: string\n        properties:\n          additionalProperties:\n            $ref: \"#/components/schemas/JsonSchema\"\n            description: A single property of this object. The value is itself a JSON Schema object describing this property.\n          description: If this is a schema for an object, list the schema for each property of this object.\n          type: object\n        readOnly:\n          description: The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service.\n          type: boolean\n        repeated:\n          description: Whether this parameter may appear multiple times.\n          type: boolean\n        required:\n          description: Whether the parameter is required.\n          type: boolean\n        type:\n          description: \"The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1\"\n          type: string\n        variant:\n          description: In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.\n          properties:\n            discriminant:\n              description: The name of the type discriminant property.\n              type: string\n            map:\n              description: The map of discriminant value to schema to use for parsing..\n              items:\n                properties:\n                  $ref:\n                    type: string\n                  type_value:\n                    type: string\n                type: object\n              type: array\n          type: object\n      type: object\n    RestDescription:\n      properties:\n        auth:\n          description: Authentication information.\n          properties:\n            oauth2:\n              description: OAuth 2.0 authentication information.\n              properties:\n                scopes:\n                  additionalProperties:\n                    description: The scope value.\n                    properties:\n                      description:\n                        description: Description of scope.\n                        type: string\n                    type: object\n                  description: Available OAuth 2.0 scopes.\n                  type: object\n              type: object\n          type: object\n        basePath:\n          description: \"[DEPRECATED] The base path for REST requests.\"\n          type: string\n        baseUrl:\n          description: \"[DEPRECATED] The base URL for REST requests.\"\n          type: string\n        batchPath:\n          description: The path for REST batch requests.\n          type: string\n        canonicalName:\n          description: Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.\n          type: string\n        description:\n          description: The description of this API.\n          type: string\n        discoveryVersion:\n          default: v1\n          description: Indicate the version of the Discovery API used to generate this doc.\n          type: string\n        documentationLink:\n          description: A link to human readable documentation for the API.\n          type: string\n        etag:\n          description: The ETag for this response.\n          readOnly: true\n          type: string\n        exponentialBackoffDefault:\n          description: Enable exponential backoff for suitable methods in the generated clients.\n          type: boolean\n        features:\n          description: A list of supported features for this API.\n          items:\n            type: string\n          type: array\n        icons:\n          description: Links to 16x16 and 32x32 icons representing the API.\n          properties:\n            x16:\n              description: The URL of the 16x16 icon.\n              type: string\n            x32:\n              description: The URL of the 32x32 icon.\n              type: string\n          type: object\n        id:\n          description: The ID of this API.\n          type: string\n        kind:\n          default: discovery#restDescription\n          description: The kind for this response.\n          type: string\n        labels:\n          description: Labels for the status of this API, such as labs or deprecated.\n          items:\n            type: string\n          type: array\n        methods:\n          additionalProperties:\n            $ref: \"#/components/schemas/RestMethod\"\n            description: An individual method description.\n          description: API-level methods for this API.\n          type: object\n        name:\n          description: The name of this API.\n          type: string\n        ownerDomain:\n          description: The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.\n          type: string\n        ownerName:\n          description: The name of the owner of this API. See ownerDomain.\n          type: string\n        packagePath:\n          description: The package of the owner of this API. See ownerDomain.\n          type: string\n        parameters:\n          additionalProperties:\n            $ref: \"#/components/schemas/JsonSchema\"\n            description: Description of a single parameter.\n          description: Common parameters that apply across all apis.\n          type: object\n        protocol:\n          default: rest\n          description: The protocol described by this document.\n          type: string\n        resources:\n          additionalProperties:\n            $ref: \"#/components/schemas/RestResource\"\n            description: An individual resource description. Contains methods and sub-resources related to this resource.\n          description: The resources in this API.\n          type: object\n        revision:\n          description: The version of this API.\n          type: string\n        rootUrl:\n          description: The root URL under which all API services live.\n          type: string\n        schemas:\n          additionalProperties:\n            $ref: \"#/components/schemas/JsonSchema\"\n            description: An individual schema description.\n          description: The schemas for this API.\n          type: object\n        servicePath:\n          description: The base path for all REST requests.\n          type: string\n        title:\n          description: The title of this API.\n          type: string\n        version:\n          description: The version of this API.\n          type: string\n        version_module:\n          type: boolean\n      type: object\n    RestMethod:\n      properties:\n        description:\n          description: Description of this method.\n          type: string\n        etagRequired:\n          description: Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.\n          type: boolean\n        flatPath:\n          description: The URI path of this REST method in (RFC 6570) format without level 2 features ({+var}). Supplementary to the path property.\n          type: string\n        httpMethod:\n          description: HTTP method used by this method.\n          type: string\n        id:\n          description: A unique ID for this method. This property can be used to match methods between different versions of Discovery.\n          type: string\n        mediaUpload:\n          description: Media upload parameters.\n          properties:\n            accept:\n              description: MIME Media Ranges for acceptable media uploads to this method.\n              items:\n                type: string\n              type: array\n            maxSize:\n              description: Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\".\n              type: string\n            protocols:\n              description: Supported upload protocols.\n              properties:\n                resumable:\n                  description: Supports the Resumable Media Upload protocol.\n                  properties:\n                    multipart:\n                      default: true\n                      description: True if this endpoint supports uploading multipart media.\n                      type: boolean\n                    path:\n                      description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.\n                      type: string\n                  type: object\n                simple:\n                  description: Supports uploading as a single HTTP request.\n                  properties:\n                    multipart:\n                      default: true\n                      description: True if this endpoint supports upload multipart media.\n                      type: boolean\n                    path:\n                      description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.\n                      type: string\n                  type: object\n              type: object\n          type: object\n        parameterOrder:\n          description: Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.\n          items:\n            type: string\n          type: array\n        parameters:\n          additionalProperties:\n            $ref: \"#/components/schemas/JsonSchema\"\n            description: Details for a single parameter in this method.\n          description: Details for all parameters in this method.\n          type: object\n        path:\n          description: The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.\n          type: string\n        request:\n          description: The schema for the request.\n          properties:\n            $ref:\n              description: Schema ID for the request schema.\n              type: string\n            parameterName:\n              description: parameter name.\n              type: string\n          type: object\n        response:\n          description: The schema for the response.\n          properties:\n            $ref:\n              description: Schema ID for the response schema.\n              type: string\n          type: object\n        scopes:\n          description: OAuth 2.0 scopes applicable to this method.\n          items:\n            type: string\n          type: array\n        supportsMediaDownload:\n          description: Whether this method supports media downloads.\n          type: boolean\n        supportsMediaUpload:\n          description: Whether this method supports media uploads.\n          type: boolean\n        supportsSubscription:\n          description: Whether this method supports subscriptions.\n          type: boolean\n        useMediaDownloadService:\n          description: Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download.\n          type: boolean\n      type: object\n    RestResource:\n      properties:\n        methods:\n          additionalProperties:\n            $ref: \"#/components/schemas/RestMethod\"\n            description: Description for any methods on this resource.\n          description: Methods on this resource.\n          type: object\n        resources:\n          additionalProperties:\n            $ref: \"#/components/schemas/RestResource\"\n            description: Description for any sub-resources on this resource.\n          description: Sub-resources on this resource.\n          type: object\n      type: object\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/googleapis.discovery/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/googleapis.discovery/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}