{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/firefly-dataexchange-https"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/swagger.yaml",
			"byteSize": 10128,
			"content": "---\n  openapi: 3.0.0\n  info:\n    version: '1.0'\n    title: Data Exchange API\n    description: To invoke the API programmatically, include the API key as Bearer token in the authorization header.\n  servers:\n    - url: /api/v1\n  paths:\n    /id:\n      get:\n        tags:\n          - ID\n        description: Peer information\n        responses:\n          '200':\n            description: Peer information\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/PeerInformation'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n    /status:\n      get:\n        tags:\n          - Status\n        description: Status\n        responses:\n          '200':\n            description: Status\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Status'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'  \n    /peers:\n      get:\n        tags:\n          - Peers\n        description: List peers\n        responses:\n          '200':\n            description: Peers\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Peers'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'  \n    /peers/{id}:\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        description: Peer id\n      put:\n        tags:\n          - Peers\n        description: Add peer\n        responses:\n          '200':\n            description: Peer added\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Added'\n          '400':\n            description: Missing peer endpoint\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error' \n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error' \n      delete:\n        tags:\n          - Peers\n        description: Remove peer\n        responses:\n          '200':\n            description: Peer removed\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Removed'\n          '404':\n            description: Peer not found\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error' \n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error' \n    /messages:\n      post:\n        tags:\n          - Messages\n        description: Send message\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n        responses:\n          '200':\n            description: Message submitted\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Submitted'\n          '400':\n            description: Invalid message or recipient\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'   \n    /blobs/{blobPath}:\n      parameters:\n      - in: path\n        name: blobPath\n        required: true\n        schema:\n          type: string\n        description: Blob path\n      head:\n        tags:\n          - Blobs\n        description: Retrieve blob metadata\n        responses:\n          '204':\n            description: Blob metadata\n            headers:\n              dx-hash:\n                schema:\n                  type: string\n                description: Blob hash\n              dx-last-update:\n                schema:\n                  type: string\n                description: Blob last update timestamp\n          '404':\n            description: Blob not found\n          '500':\n            description: Internal error\n      get:\n        tags:\n          - Blobs\n        description: Retreive blob\n        responses:\n          '200':\n            description: Blob content\n            headers:\n              dx-hash:\n                schema:\n                  type: string\n                description: Blob hash\n              dx-last-update:\n                schema:\n                  type: string\n                description: Blob last update timestamp\n            content:\n              application/json:\n                schema:\n                  type: string\n                  format: binary\n          '404':\n            description: Blob not found\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n      put:\n        tags:\n          - Blobs\n        description: Store blob\n        requestBody:\n          description: Blob\n          required: true\n          content:\n            multipart/form-data:\n              schema:\n                type: object\n                properties:\n                  fileName:\n                    type: string\n                    format: binary\n        responses:\n          '200':\n            description: Blob hash\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/BlobHash'\n          '400':\n            description: Missing blob\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n    /transfers:\n      post:\n        tags:\n          - Transfers\n        description: Transfer blob\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transfer'\n        responses:\n          '200':\n            description: Transfer submitted\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Submitted'\n          '400':\n            description: Invalid path or recipient\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '404':\n            description: Blob not found\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n          '500':\n            description: Internal error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'           \n  components:\n    securitySchemes:\n      ApiKeyAuth:\n        type: apiKey\n        in: header\n        name: X-API-KEY\n    schemas:\n      PeerInformation:\n        type: object\n        required:\n          - id\n          - endpoint\n          - cert\n        properties:\n          id:\n            type: string\n          endpoint:\n            type: string\n          cert:\n            type: string\n      Status:\n        type: object\n        required:\n          - messageQueueSize\n          - peers\n        properties:\n          messageQueueSize:\n            type: integer\n          peers:\n            type: array\n            items:\n              type: object\n              required:\n                - id\n                - available\n              properties:\n                id:\n                  type: string\n                available:\n                  type: boolean\n      Peer:\n        type: object\n        required:\n          - id\n          - endpoint\n        properties:\n          id:\n            type: string\n          endpoint:\n            type: string\n      Peers:\n        type: array\n        items:\n          $ref: '#/components/schemas/Peer'\n      Added:\n        type: object\n        required:\n          - status\n        properties:\n          status:\n            type: string\n            enum: ['added']\n      Removed:\n        type: object\n        required:\n          - status\n        properties:\n          status:\n            type: string\n            enum: ['removed']\n      Message:\n        type: object\n        required:\n          - message\n          - recipient\n        properties:\n          message:\n            type: string\n          recipient:\n            type: string\n          requestId:\n            type: string\n      BlobHash:\n        type: object\n        required:\n          - hash\n        properties:\n          hash:\n            type: string\n      Transfer:\n        type: object\n        required:\n          - path\n          - recipient\n        properties:\n          path:\n            type: string\n          recipient:\n            type: string\n          requestId:\n            type: string\n      Submitted:\n        type: object\n        required:\n          - requestId\n        properties:\n          requestId:\n            type: string\n      Error:\n        type: object\n        required:\n          - error\n        properties:\n          error:\n            type: string\n  security:\n    - ApiKeyAuth: [] ",
			"canonicalURL": "/github.com/hyperledger/firefly-dataexchange-https@46bf3cbdc37e49a0c8daca3f868e4585e3897dcf/-/blob/src/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/firefly-dataexchange-https/blob/46bf3cbdc37e49a0c8daca3f868e4585e3897dcf/src/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}