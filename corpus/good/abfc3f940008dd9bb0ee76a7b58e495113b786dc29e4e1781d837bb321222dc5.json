{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dennis-tra/optimistic-provide"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "pkg/api/openapi.yaml",
			"byteSize": 32630,
			"content": "openapi: 3.0.0\ninfo:\n  title: OptProv API\n  description: |\n    This is the REST API to interact and control with libp2p hosts. All responses not in the HTTP status code range\n    [200,300) return the error object below.\n  version: \"1.0\"\nservers:\n  - url: http://localhost:7000\npaths:\n  /hosts:\n    get:\n      operationId: getHosts\n      tags:\n        - Hosts\n      summary: Lists all running libp2p hosts.\n      description: Returns a list of all running libp2p hosts ordered by their creation date ascending.\n      responses:\n        '200':\n          description: A list of all running libp2p hosts.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Host'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      operationId: createHost\n      tags:\n        - Hosts\n      summary: Creates a new libp2p host.\n      description: Starts a new libp2p host with the provided parameters.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateHostRequest'\n      responses:\n        '201':\n          description: The newly created libp2p host.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Host'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}:\n    get:\n      operationId: getHost\n      tags:\n        - Hosts\n      summary: Returns information about a single running host.\n      description: Returns a single running host.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The requested host.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Host'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      operationId: deleteHost\n      tags:\n        - Hosts\n      summary: Stops a running host\n      description: Stops a running host and aborts all in-progress provide, refresh, etc. operations.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '201':\n          description: The host was stopped.\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/bootstrap:\n    post:\n      operationId: bootstrapHost\n      tags:\n        - Hosts\n      summary: Connect to bootstrap nodes.\n      description: Instructs the given host to connect to the canonical bootstrap peers.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The host was bootstrapped.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Host'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/routing-tables:\n    get:\n      operationId: getRoutingTables\n      tags:\n        - Routing Table\n      summary: Lists all saved routing tables.\n      description: Lists all saved routing tables for a specific host.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The routing table.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RoutingTable'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      operationId: routingTableCreate\n      tags:\n        - Routing Table\n      summary: Saves a current routing table snapshot of the given host.\n      description: Saves a current routing table snapshot of the given host.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The routing table.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingTable'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/routing-table:\n    get:\n      operationId: getCurrentRoutingTable\n      tags:\n        - Routing Table\n      summary: Returns the current routing table.\n      description: Returns the current routing table with its entries for the given peer.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The routing table.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingTablePeers'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/routing-tables/{routingTableId}:\n    get:\n      operationId: getRoutingTable\n      tags:\n        - Routing Table\n      summary: Returns a single routing table.\n      description: Returns a single routing table with its entries\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n        - name: routingTableId\n          in: path\n          description: The routing table identifier.\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: The routing table.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RoutingTableDetails'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/routing-tables/listen:\n    get:\n      operationId: listenRoutingTable\n      tags:\n        - Routing Table\n      summary: Subscribe to real time updates of the routing table.\n      description: Returns routing table updates as they occur for the given host. Prepend is a full update\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The routing table updates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoutingTableUpdate'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/routing-tables/refresh:\n    post:\n      operationId: refreshRoutingTable\n      tags:\n        - Routing Table\n      summary: Instructs the host to refresh its routing table.\n      description: Instructs the host to refresh its routing table.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '201':\n          description: The routing table started the refresh procedure\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/provides:\n    post:\n      operationId: startProvide\n      tags:\n        - Provides\n      summary: Starts providing random content.\n      description: Instructs the given host to generate random content and announce its CID to the network.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvideRequest'\n      responses:\n        '200':\n          description: The provide instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provide'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      operationId: listProvides\n      tags:\n        - Provides\n      summary: Get a list of provide operations.\n      description: Get a list of provide operations for the given host\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The provide instance.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Provide'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/provides/{provideId}:\n    get:\n      operationId: getProvide\n      tags:\n        - Provides\n      summary: Get details of a single provide operations.\n      description: Get details of a single provide operations.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n        - name: provideId\n          in: path\n          description: The provide operation identifier.\n          required: true\n          example: 2\n          schema:\n            type: number\n      responses:\n        '200':\n          description: The provide instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvideDetails'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /hosts/{hostId}/provides/{provideId}/graph:\n    get:\n      operationId: graphProvide\n      tags:\n        - Provides\n      summary: Returns graph data.\n      description: Returns data to graph this provide operation\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n        - name: provideId\n          in: path\n          description: The provide operation identifier.\n          required: true\n          example: 1\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: The graph data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvideGraph'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /peers/{peerId}:\n    get:\n      operationId: getPeer\n      tags:\n        - Peers\n      summary: Returns information about a single peer.\n      description: Returns information about a single peer.\n      parameters:\n        - name: peerId\n          in: path\n          description: The peer identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      responses:\n        '200':\n          description: The requested host.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Peer'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /hosts/{hostId}/retrievals:\n    post:\n      operationId: startRetrieval\n      tags:\n        - Retrievals\n      summary: Starts retrieving the given content ID.\n      description: Instructs the given host to generate random content and announce its CID to the network.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RetrievalRequest'\n      responses:\n        '200':\n          description: The retrieval instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Retrieval'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /hosts/{hostId}/rpcs/getProviders:\n    post:\n      operationId: rpcGetProviders\n      tags:\n        - RPCs\n      summary: Returns the result of the GetProviders RPCs against the given peer.\n      description: Returns the GetProviders content.\n      parameters:\n        - name: hostId\n          in: path\n          description: The host identifier.\n          required: true\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetProvidersRequest'\n      responses:\n        '200':\n          description: The graph data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetProvidersResponse'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /measurements:\n    post:\n      operationId: createMeasurement\n      tags:\n        - Measurements\n      summary: Starts a new measurement with the provided configuration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMeasurementRequest'\n      responses:\n        '200':\n          description: The measurement instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMeasurementResponse'\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /measurements/{measurementId}/stop:\n    post:\n      operationId: stopMeasurement\n      tags:\n        - Measurements\n      summary: Stops the given measurement.\n      parameters:\n        - name: measurementId\n          in: path\n          description: The measurement DB identifier.\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: The measurement instance was stopped - no content.\n        default:\n          description: A JSON object with error information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    ProvideMeasurementConfiguration:\n      type: object\n      properties:\n        iterations:\n          type: integer\n          default: 1\n          minimum: 1\n        concurrency:\n          type: integer\n          description: Multi-Query parallelism.\n          default: 2\n          minimum: 2\n        provideType:\n          $ref: '#/components/schemas/ProvideType'\n      required:\n        - iterations\n        - provideType\n    CreateMeasurementRequest:\n      type: object\n      properties:\n        hostId:\n          type: string\n          description: The host to use for this measurement\n        configuration:\n          oneOf:\n            - $ref: '#/components/schemas/ProvideMeasurementConfiguration'\n      required:\n        - hostId\n        - configuration\n    CreateMeasurementResponse:\n      type: object\n      properties:\n        measurementId:\n          type: integer\n        startedAt:\n          type: string\n        endedAt:\n          type: string\n          nullable: true\n      required:\n        - measurementId\n        - startedAt\n        - endedAt\n    AddrInfo:\n      type: object\n      properties:\n        peerID:\n          type: string\n        multiAddresses:\n          type: array\n          items:\n            type: string\n      required:\n        - peerID\n        - multiAddresses\n    GetProvidersRequest:\n      type: object\n      properties:\n        remoteId:\n          description: Peer ID of the remote peer.\n          type: string\n        contentId:\n          description: The CID that should be asked for.\n          type: string\n      required:\n        - remoteId\n        - contentId\n    GetProvidersResponse:\n      type: object\n      properties:\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AddrInfo'\n        closerPeers:\n          type: array\n          items:\n            $ref: '#/components/schemas/AddrInfo'\n      required:\n        - providers\n        - closerPeers\n    NetworkType:\n      type: string\n      enum:\n        - IPFS\n        - FILECOIN\n        - POLKADOT\n        - KUSAMA\n    CreateHostRequest:\n      type: object\n      properties:\n        name:\n          description: An arbitrary name for this host.\n          type: string\n        network:\n          $ref: '#/components/schemas/NetworkType'\n      required:\n        - network\n        - name\n    ErrorCode:\n      type: string\n      enum:\n        - INTERNAL\n        - HOST_NOT_FOUND\n        - MALFORMED_REQUEST\n        - PEER_NOT_FOUND\n        - ROUTING_TABLE_NOT_FOUND\n        - MALFORMED_PEER_ID\n        - SAVING_ROUTING_TABLE\n        - HOST_STOPPED\n    AnyValue:\n      nullable: true\n      description: Can be any value - string, number, boolean, array or object.\n    RoutingTable:\n      type: object\n      properties:\n        id:\n          type: integer\n        hostId:\n          type: string\n        bucketSize:\n          type: integer\n        entryCount:\n          type: integer\n        createdAt:\n          type: string\n          format: date-format\n      required:\n        - id\n        - hostId\n        - bucketSize\n        - entryCount\n        - createdAt\n    RoutingTableDetails:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/RoutingTable'\n        - type: object\n          properties:\n            entries:\n              type: array\n              items:\n                $ref: '#/components/schemas/RoutingTableEntry'\n          required:\n            - entries\n    RoutingTableEntry:\n      type: object\n      properties:\n        peerId:\n          type: string\n        bucket:\n          type: integer\n        addedAt:\n          type: string\n          format: date-format\n        connectedSince:\n          type: string\n          nullable: true\n          format: date-format\n        lastUsefulAt:\n          type: string\n          nullable: true\n          format: date-format\n        lastSuccessfulOutboundQueryAt:\n          type: string\n          format: date-format\n      required:\n        - peerId\n        - bucket\n        - addedAt\n        - connectedSince\n        - lastUsefulAt\n        - lastSuccessfulOutboundQueryAt\n    RoutingTableUpdate:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - FULL\n            - PEER_ADDED\n            - PEER_REMOVED\n        update:\n          oneOf:\n            - $ref: '#/components/schemas/RoutingTablePeer'\n            - $ref: '#/components/schemas/RoutingTablePeers'\n            - type: string\n              description: The Peer ID of the removed peer.\n      required:\n        - type\n        - update\n    RoutingTablePeers:\n      type: array\n      items:\n        $ref: '#/components/schemas/RoutingTablePeer'\n    RoutingTablePeer:\n      type: object\n      properties:\n        peerId:\n          type: string\n        agentVersion:\n          type: string\n          nullable: true\n        protocols:\n          type: array\n          items:\n            type: string\n        bucket:\n          type: integer\n        addedAt:\n          type: string\n          format: date-format\n        connectedSince:\n          type: string\n          nullable: true\n          format: date-format\n        lastUsefulAt:\n          type: string\n          nullable: true\n          format: date-format\n        lastSuccessfulOutboundQueryAt:\n          type: string\n          format: date-format\n      required:\n        - peerId\n        - agentVersion\n        - protocols\n        - bucket\n        - addedAt\n        - connectedSince\n        - lastUsefulAt\n        - lastSuccessfulOutboundQueryAt\n    Peer:\n      type: object\n      properties:\n        peerId:\n          type: string\n          example: QmSKVUFAyCddg2wDUdZVCfvqG5YCwwJTWY1HRmorebXcKG\n        agentVersion:\n          type: string\n          nullable: true\n        protocols:\n          type: array\n          items:\n            type: string\n        createdAt:\n          type: string\n          format: date-format\n      required:\n        - peerId\n        - agentVersion\n        - protocols\n        - createdAt\n    Host:\n      type: object\n      properties:\n        hostId:\n          type: string\n        name:\n          type: string\n        network:\n          $ref: '#/components/schemas/NetworkType'\n        startedAt:\n          type: string\n          format: date-format\n          nullable: true\n        createdAt:\n          type: string\n          format: date-format\n        bootstrappedAt:\n          type: string\n          nullable: true\n          format: date-format\n        runningProvidesCount:\n          type: number\n      required:\n        - hostId\n        - name\n        - network\n        - startedAt\n        - createdAt\n        - bootstrappedAt\n        - runningProvidesCount\n    RetrievalRequest:\n      type: object\n      properties:\n        contentId:\n          type: string\n        count:\n          type: integer\n          description: Number of providers to find until the query stops. 0 indicates that the query will run until it completes.\n      required:\n        - contentId\n        - count\n    Retrieval:\n      type: object\n      properties:\n        retrievalId:\n          type: integer\n        hostId:\n          type: string\n        contentId:\n          type: string\n        initialRoutingTableId:\n          type: integer\n        finalRoutingTableId:\n          type: integer\n          nullable: true\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          nullable: true\n          format: date-format\n        error:\n          type: string\n          nullable: true\n      required:\n        - retrievalId\n        - hostId\n        - contentId\n        - initialRoutingTableId\n        - finalRoutingTableId\n        - startedAt\n        - endedAt\n        - error\n    ProvideType:\n      type: string\n      enum:\n        - SINGLE_QUERY\n        - MULTI_QUERY\n        - ESTIMATOR\n    ProvideRequest:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/ProvideType'\n      required:\n        - type\n    Provide:\n      type: object\n      properties:\n        provideId:\n          type: integer\n        hostId:\n          type: string\n        contentId:\n          type: string\n        initialRoutingTableId:\n          type: integer\n        finalRoutingTableId:\n          type: integer\n          nullable: true\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          nullable: true\n          format: date-format\n        error:\n          type: string\n          nullable: true\n      required:\n        - provideId\n        - hostId\n        - contentId\n        - initialRoutingTableId\n        - finalRoutingTableId\n        - startedAt\n        - endedAt\n        - error\n    ProvideDetails:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Provide'\n        - type: object\n          properties:\n            distance:\n              type: string\n              example: 0xdece0cc853fa62e5e653ae02f4d1f85931e38eba8326a707b4c62dfc6336dafa\n            connectionsCount:\n              type: integer\n            dialsCount:\n              type: integer\n            findNodesCount:\n              type: integer\n            addProvidersCount:\n              type: integer\n          required:\n            - distance\n            - connectionsCount\n            - dialsCount\n            - findNodesCount\n            - addProvidersCount\n    AddProvider:\n      type: object\n      properties:\n        id:\n          type: integer\n        remoteId:\n          type: string\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          format: date-format\n        durationInS:\n          type: number\n        distance:\n          type: string\n        error:\n          type: string\n          nullable: true\n      required:\n        - id\n        - remoteId\n        - distance\n        - startedAt\n        - endedAt\n        - durationInS\n        - closerPeersCount\n        - error\n    FindNodeCloserPeer:\n      type: object\n      properties:\n        peerId:\n          type: string\n        distance:\n          type: string\n          description: How far away is this peer from the desired hash.\n        bucket:\n          type: integer\n          description: In which bucket was this peer of the remote peers routing table\n      required:\n        - peerId\n        - distance\n        - bucket\n    FindNode:\n      type: object\n      properties:\n        id:\n          type: integer\n        queryId:\n          type: string\n        remoteId:\n          type: string\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          format: date-format\n        durationInS:\n          type: number\n        closerPeers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FindNodeCloserPeer\"\n        error:\n          type: string\n          nullable: true\n      required:\n        - id\n        - queryId\n        - remoteId\n        - startedAt\n        - endedAt\n        - durationInS\n        - closerPeers\n        - error\n    Connection:\n      type: object\n      properties:\n        id:\n          type: integer\n        remoteId:\n          type: string\n        multiAddress:\n          type: string\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          format: date-format\n        durationInS:\n          type: number\n      required:\n        - id\n        - remoteId\n        - multiAddress\n        - startedAt\n        - endedAt\n        - durationInS\n    Dial:\n      type: object\n      properties:\n        id:\n          type: integer\n        remoteId:\n          type: string\n        transport:\n          type: string\n        multiAddress:\n          type: string\n        startedAt:\n          type: string\n          format: date-format\n        endedAt:\n          type: string\n          format: date-format\n        durationInS:\n          type: number\n        error:\n          type: string\n          nullable: true\n      required:\n        - id\n        - remoteId\n        - transport\n        - multiAddress\n        - startedAt\n        - endedAt\n        - durationInS\n        - error\n    QueryPeerState:\n      type: string\n      enum:\n        - HEARD\n        - WAITING\n        - QUERIED\n        - UNREACHABLE\n    ProvidePeerInfo:\n      type: object\n      properties:\n        peerId:\n          type: string\n        agentVersion:\n          type: string\n          nullable: true\n        protocols:\n          type: array\n          items:\n            type: string\n        distance:\n          type: string\n          example: 0xdece0cc853fa62e5e653ae02f4d1f85931e38eba8326a707b4c62dfc6336dafa\n        state:\n          $ref: \"#/components/schemas/QueryPeerState\"\n        firstInteractedAt:\n          type: string\n          format: date-format\n          nullable: true\n        referredBy:\n          type: string\n      required:\n        - peerId\n        - agentVersion\n        - protocols\n        - distance\n        - firstInteractedAt\n        - referredBy\n        - state\n    ProvideGraph:\n      allOf:\n        - $ref: \"#/components/schemas/Provide\"\n        - type: object\n          properties:\n            peers:\n              type: array\n              description: All peers + information in the order they should be plotted.\n              items:\n                $ref: \"#/components/schemas/ProvidePeerInfo\"\n            dials:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Dial\"\n            connections:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Connection\"\n            findNodes:\n              type: array\n              items:\n                $ref: \"#/components/schemas/FindNode\"\n            addProviders:\n              type: array\n              items:\n                $ref: \"#/components/schemas/AddProvider\"\n          required:\n            - peers\n            - dials\n            - connections\n            - findNodes\n            - addProviders\n    ErrorResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        code:\n          $ref: \"#/components/schemas/ErrorCode\"\n        details:\n          $ref: \"#/components/schemas/AnyValue\"\n      required:\n        - code\n        - message\n        - details\n",
			"canonicalURL": "/github.com/dennis-tra/optimistic-provide@8ece94fcc0fccbf5c2285ffb41b3ed98c76d37c0/-/blob/pkg/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dennis-tra/optimistic-provide/blob/8ece94fcc0fccbf5c2285ffb41b3ed98c76d37c0/pkg/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}