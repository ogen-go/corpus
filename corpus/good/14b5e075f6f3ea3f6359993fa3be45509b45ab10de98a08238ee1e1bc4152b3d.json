{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-traffic-generator/models"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "artifacts/openapi.yaml",
			"byteSize": 476192,
			"content": "openapi: 3.0.3\ninfo:\n  title: Open Traffic Generator API\n  description: \"Open Traffic Generator API defines a model-driven, vendor-neutral\\\n    \\ and standard \\ninterface for emulating layer 2-7 network devices and generating\\\n    \\ test traffic.\\n\\nContributions can be made in the following ways:\\n- [open an\\\n    \\ issue](https://github.com/open-traffic-generator/models/issues) in the models\\\n    \\ repository\\n- [fork the models repository](https://github.com/open-traffic-generator/models)\\\n    \\ and submit a PR\"\n  version: 0.7.16\n  contact:\n    url: https://github.com/open-traffic-generator/models\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  x-model-guide: https://github.com/open-traffic-generator/models/blob/master/MODEL-GUIDE.md\nservers:\n- url: /\npaths:\n  /config:\n    post:\n      tags:\n      - Configuration\n      operationId: set_config\n      description: |-\n        Sets configuration resources on the traffic generator.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Config'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n    get:\n      tags:\n      - Configuration\n      operationId: get_config\n      responses:\n        '200':\n          description: |-\n            Config response from the traffic generator\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Config'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/transmit:\n    post:\n      tags:\n      - Control\n      operationId: set_transmit_state\n      description: |-\n        Updates the state of configuration resources on the traffic generator.\n        The Response.Warnings in the Success response is available for implementers to disclose additional information about a state change including any implicit changes that are outside the scope of the state change.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transmit.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/link:\n    post:\n      tags:\n      - Control\n      operationId: set_link_state\n      description: |-\n        Updates the state of configuration resources on the traffic generator.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Link.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/capture:\n    post:\n      tags:\n      - Control\n      operationId: set_capture_state\n      description: |-\n        Updates the state of configuration resources on the traffic generator.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Capture.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/flows:\n    post:\n      tags:\n      - Control\n      operationId: update_flows\n      description: |-\n        Updates flow properties without disruption of transmit state.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Flows.Update'\n      responses:\n        '200':\n          description: |-\n            Response with updated Config from the traffic generator\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Config'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/routes:\n    post:\n      tags:\n      - Control\n      operationId: set_route_state\n      description: |-\n        Updates the state of configuration resources on the traffic generator.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Route.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/ping:\n    post:\n      tags:\n      - Control\n      operationId: send_ping\n      description: |-\n        API to send an IPv4 and/or IPv6 ICMP Echo Request(s) between endpoints. For each endpoint 1 ping packet will be sent and API shall wait for ping response to either be successful or timeout. The API wait timeout for each request is 300ms.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Ping.Request'\n      responses:\n        '200':\n          description: |-\n            Responses for Ping\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ping.Response'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/protocols:\n    post:\n      tags:\n      - Control\n      operationId: set_protocol_state\n      description: |-\n        Sets all configured protocols to `start` or `stop` state.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Protocol.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /control/devices:\n    post:\n      tags:\n      - Control\n      operationId: set_device_state\n      description: |-\n        Set specific state/actions on device configuration resources on the traffic generator.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device.State'\n      responses:\n        '200':\n          $ref: '#/components/responses/Success'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /results/metrics:\n    description: |-\n      Metrics API\n    post:\n      tags:\n      - Metrics\n      operationId: get_metrics\n      requestBody:\n        description: |-\n          Request to traffic generator for metrics of choice\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metrics.Request'\n      responses:\n        '200':\n          description: |-\n            Response from traffic generator for chosen metrics\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Metrics.Response'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /results/states:\n    description: |-\n      States API\n    post:\n      tags:\n      - States\n      operationId: get_states\n      requestBody:\n        description: |-\n          Request to traffic generator for states of choice\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/States.Request'\n      responses:\n        '200':\n          description: |-\n            Response from traffic generator for chosen states\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/States.Response'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n  /results/capture:\n    description: |-\n      Capture results API\n    post:\n      tags:\n      - Capture\n      operationId: get_capture\n      requestBody:\n        description: |-\n          Capture results request to the traffic generator.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Capture.Request'\n      responses:\n        '200':\n          description: |-\n            Capture results response from the traffic generator.\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  responses:\n    Success:\n      description: \"The request has succeeded with no application content but the\\\n        \\ server \\nmay return a list of detailed warnings.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response.Warning'\n    BadRequest:\n      description: \"This indicates that the server cannot or will not process the\\\n        \\ request \\ndue to something that is perceived to be a client error.\\nAdditional\\\n        \\ details are in the errors.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response.Error'\n    InternalServerError:\n      description: \"This indicates that the server encountered an unexpected condition\\\n        \\ that \\nprevented it from fulfilling the request.\\nAdditional details are\\\n        \\ in the errors.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response.Error'\n  schemas:\n    Config:\n      description: |-\n        A container for all models that are part of the configuration.\n      type: object\n      properties:\n        ports:\n          description: |-\n            The ports that will be configured on the traffic generator.\n          type: array\n          items:\n            $ref: '#/components/schemas/Port'\n        lags:\n          description: |-\n            The LAGs that will be configured on the traffic generator.\n          type: array\n          items:\n            $ref: '#/components/schemas/Lag'\n        layer1:\n          description: |-\n            The layer1 settings that will be configured on the traffic generator.\n          type: array\n          items:\n            $ref: '#/components/schemas/Layer1'\n        captures:\n          description: |-\n            The capture settings that will be configured on the traffic generator.\n          type: array\n          items:\n            $ref: '#/components/schemas/Capture'\n        devices:\n          description: \"The emulated devices that will be configured on the traffic\\\n            \\ generator.\\nEach device contains configurations for network interfaces\\\n            \\ and \\nprotocols running on top of those interfaces.\"\n          type: array\n          items:\n            $ref: '#/components/schemas/Device'\n        flows:\n          description: |-\n            The flows that will be configured on the traffic generator.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n        events:\n          $ref: '#/components/schemas/Event'\n        options:\n          $ref: '#/components/schemas/Config.Options'\n    Config.Options:\n      description: |-\n        Global configuration options.\n      type: object\n      properties:\n        port_options:\n          $ref: '#/components/schemas/Port.Options'\n    Port:\n      description: |-\n        An abstract test port.\n      type: object\n      properties:\n        location:\n          description: |-\n            The location of a test port.  It is the endpoint where packets will emit from.\n            Test port locations can be the following:\n              - physical appliance with multiple ports\n              - physical chassis with multiple cards and ports\n              - local interface\n              - virtual machine, docker container, kubernetes cluster\n\n            The test port location format is implementation specific. Use the /results/capabilities API to determine what formats an  implementation supports for the location property.\n            Get the configured location state by using the /results/port API.\n          type: string\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Port.Options:\n      description: \"Common port options that apply to all configured Port objects. \"\n      type: object\n      properties:\n        location_preemption:\n          description: |-\n            Preempt all the test port locations as defined by the  Port.Port.properties.location. If the test ports defined by their location values are in use and  this value is true, the test ports will be preempted.\n          type: boolean\n          default: false\n    Lag:\n      description: |-\n        The container for LAG (ports group) - aggregation of multiple LAG members (ports)\n      type: object\n      properties:\n        ports:\n          type: array\n          items:\n            $ref: '#/components/schemas/Lag.Port'\n          minItems: 1\n          maxItems: 32\n        protocol:\n          $ref: '#/components/schemas/Lag.Protocol'\n        min_links:\n          description: |-\n            Specifies the mininum number of member interfaces that must be active for the aggregate interface to be available\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 32\n          default: 1\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Lag.Port:\n      description: |-\n        The container for a port's ethernet interface and LAG protocol settings\n      type: object\n      required:\n      - port_name\n      - ethernet\n      properties:\n        port_name:\n          description: \"The name of a port object that will be part of the LAG. \\n\\\n            \\nx-constraint:\\n- /components/schemas/Port/properties/name\\n\"\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        lacp:\n          $ref: '#/components/schemas/Lag.Port.Lacp'\n        ethernet:\n          $ref: '#/components/schemas/Device.EthernetBase'\n    Lag.Protocol:\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of controlling protocol for the LAG (ports group).\n          type: string\n          enum:\n          - lacp\n          - static\n          default: lacp\n        lacp:\n          $ref: '#/components/schemas/Lag.Protocol.Lacp'\n        static:\n          $ref: '#/components/schemas/Lag.Protocol.Static'\n    Lag.Protocol.Static:\n      description: |-\n        The container for static link aggregation protocol settings.\n      type: object\n      properties:\n        lag_id:\n          description: |-\n            The static lag id\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n    Lag.Protocol.Lacp:\n      description: |-\n        The container for link aggregation control protocol settings of a LAG (ports group).\n      type: object\n      properties:\n        actor_system_id:\n          description: |-\n            The actor system id\n          type: string\n          format: mac\n          default: 00:00:00:00:00:00\n        actor_system_priority:\n          description: |-\n            The actor system priority\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n        actor_key:\n          description: |-\n            The actor key\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n    Lag.Port.Lacp:\n      description: |-\n        The container for link aggregation control protocol settings of a LAG member (port).\n      type: object\n      properties:\n        actor_port_number:\n          description: |-\n            The actor port number\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n        actor_port_priority:\n          description: |-\n            The actor port priority\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 1\n        actor_activity:\n          description: |-\n            Sets the value of LACP actor activity as either passive or active.\n            Passive indicates the port's preference for not transmitting  LACPDUs unless its partner's control is Active.\n            Active indicates the port's preference to participate in the  protocol regardless of the partner's control value.\n          type: string\n          enum:\n          - passive\n          - active\n          default: active\n        lacpdu_periodic_time_interval:\n          x-constants:\n            fast: 1\n            slow: 30\n            auto: 0\n          description: |-\n            This field defines how frequently LACPDUs are sent to the link partner\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n        lacpdu_timeout:\n          x-constants:\n            short: 3\n            long: 90\n            auto: 0\n          description: |-\n            This timer is used to detect whether received protocol information has expired\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n    Device.EthernetBase:\n      description: |-\n        Base Ethernet interface.\n      type: object\n      required:\n      - mac\n      - name\n      properties:\n        mac:\n          description: |-\n            Media Access Control address.\n          type: string\n          format: mac\n        mtu:\n          description: |-\n            Maximum Transmission Unit.\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 1500\n        vlans:\n          description: |-\n            List of VLANs\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Vlan'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Device.Ethernet:\n      description: |-\n        An Ethernet interface with IPv4 and IPv6 addresses.\n        Base Ethernet interface.\n      type: object\n      properties:\n        port_name:\n          description: |\n            Status: deprecated\n            The unique name of a Port or a LAG that will emulate this interface.\n            port_name is deprecated and will be removed in future release.port_name and connection can't be used together, use either port_name or connection.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n            - /components/schemas/Lag/properties/name\n          x-status: deprecated\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n          - /components/schemas/Lag/properties/name\n        connection:\n          description: |-\n            Device connection to physical, LAG or another device.\n          $ref: '#/components/schemas/Ethernet.Connection'\n        ipv4_addresses:\n          description: \"List of IPv4 addresses and their gateways. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Ipv4'\n        ipv6_addresses:\n          description: |-\n            List of global IPv6 addresses and their gateways.\n            The Link Local IPv6 address will be automatically generated.\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Ipv6'\n        mac:\n          description: |-\n            Media Access Control address.\n          type: string\n          format: mac\n        mtu:\n          description: |-\n            Maximum Transmission Unit.\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 1500\n        vlans:\n          description: |-\n            List of VLANs\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Vlan'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - mac\n      - name\n    Ethernet.Connection:\n      description: |-\n        Ethernet interface connection to a port, LAG or VXLAN tunnel.\n      type: object\n      properties:\n        choice:\n          description: |-\n            port_name, lag_name or vxlan_name\n          type: string\n          enum:\n          - port_name\n          - lag_name\n          - vxlan_name\n        port_name:\n          description: |\n            Name of the port that the Ethernet interface is configured on.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        lag_name:\n          description: |\n            Name of the LAG that the Ethernet interface is configured on.\n\n            x-constraint:\n            - /components/schemas/Lag/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Lag/properties/name\n        vxlan_name:\n          description: |\n            Name of the VXLAN instance (or VXLAN tunnel) that this Ethernet interface is connected to.\n\n            x-constraint:\n            - #/components/schemas/VXlan.V4Tunnel/properties/name\n            - #/components/schemas/VXlan.V6Tunnel/properties/name\n          type: string\n          x-constraint:\n          - '#/components/schemas/VXlan.V4Tunnel/properties/name'\n          - '#/components/schemas/VXlan.V6Tunnel/properties/name'\n    Device.Vlan:\n      description: |-\n        Emulated VLAN protocol.\n      type: object\n      properties:\n        tpid:\n          description: |-\n            Tag protocol identifier\n          type: string\n          enum:\n          - x8100\n          - x88A8\n          - x9100\n          - x9200\n          - x9300\n          default: x8100\n        priority:\n          description: |-\n            Priority code point\n          type: integer\n          minimum: 0\n          maximum: 3\n          default: 0\n        id:\n          description: |-\n            VLAN identifier\n          type: integer\n          minimum: 0\n          maximum: 4095\n          default: 1\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Device.Ipv4:\n      description: |-\n        An IPv4 interface with gateway\n        A base IPv4 interface.\n      type: object\n      required:\n      - gateway\n      - address\n      - name\n      properties:\n        gateway:\n          description: |-\n            The IPv4 address of the gateway\n          type: string\n          format: ipv4\n        address:\n          description: |-\n            The IPv4 address\n          type: string\n          format: ipv4\n        prefix:\n          description: |-\n            The prefix of the IPv4 address.\n          type: integer\n          minimum: 1\n          maximum: 32\n          default: 24\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Device.Ipv4Loopback:\n      description: |-\n        An IPv4 Loopback interface.\n      type: object\n      required:\n      - eth_name\n      - name\n      properties:\n        eth_name:\n          description: |\n            The unique name of the Ethernet interface behind which this Loopback  interface will be created.\n\n            x-constraint:\n            - /components/schemas/Device.Ethernet/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n        address:\n          description: |-\n            The IPv4 Loopback address with prefix length of 32.\n          type: string\n          format: ipv4\n          default: 0.0.0.0\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Device.Ipv6:\n      description: |-\n        Status: under-review\n        An IPv6 interface with gateway.\n        A base IPv6 interface.\n      type: object\n      required:\n      - gateway\n      - address\n      - name\n      properties:\n        gateway:\n          description: |-\n            The IPv6 gateway address.\n          type: string\n          format: ipv6\n        address:\n          description: |-\n            The IPv6 address.\n          type: string\n          format: ipv6\n        prefix:\n          description: |-\n            The network prefix.\n          type: integer\n          minimum: 1\n          maximum: 128\n          default: 64\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      x-status: under-review\n    Device.Ipv6Loopback:\n      description: |-\n        An IPv6 Loopback interface\n      type: object\n      required:\n      - eth_name\n      - name\n      properties:\n        eth_name:\n          description: \"The unique name of the Ethernet interface behind which this\\\n            \\ Loopback \\n interface will be created.\\n\\nx-constraint:\\n- /components/schemas/Device.Ethernet/properties/name\\n\"\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n        address:\n          description: |-\n            The IPv6 Loopback address with prefix length of 128.\n          type: string\n          format: ipv6\n          default: ::0\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Layer1:\n      description: |-\n        A container for layer1 settings.\n      type: object\n      required:\n      - port_names\n      - name\n      properties:\n        port_names:\n          description: \"A list of unique names of port objects that will share the\\n\\\n            choice settings. \\n\\nx-constraint:\\n- /components/schemas/Port/properties/name\\n\"\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        speed:\n          description: |-\n            Set the speed if supported.\n          type: string\n          enum:\n          - speed_10_fd_mbps\n          - speed_10_hd_mbps\n          - speed_100_fd_mbps\n          - speed_100_hd_mbps\n          - speed_1_gbps\n          - speed_10_gbps\n          - speed_25_gbps\n          - speed_40_gbps\n          - speed_50_gbps\n          - speed_100_gbps\n          - speed_200_gbps\n          - speed_400_gbps\n          default: speed_10_gbps\n        media:\n          description: |-\n            Set the type of media interface if supported.\n          type: string\n          enum:\n          - copper\n          - fiber\n          - sgmii\n        promiscuous:\n          description: |-\n            Enable promiscuous mode if supported.\n          type: boolean\n          default: true\n        mtu:\n          description: |-\n            Set the maximum transmission unit size if supported.\n          type: integer\n          minimum: 64\n          maximum: 9000\n          default: 1500\n        ieee_media_defaults:\n          description: |-\n            Set to true to override the auto_negotiate, link_training\n            and rs_fec settings for gigabit ethernet interfaces.\n          type: boolean\n        auto_negotiate:\n          description: |-\n            Enable/disable auto negotiation.\n          type: boolean\n        auto_negotiation:\n          $ref: '#/components/schemas/Layer1.AutoNegotiation'\n        flow_control:\n          $ref: '#/components/schemas/Layer1.FlowControl'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Layer1.AutoNegotiation:\n      description: |-\n        Configuration for auto negotiation settings\n      type: object\n      properties:\n        advertise_1000_mbps:\n          description: |-\n            If auto_negotiate is true and the interface supports this option\n            then this speed will be advertised.\n          type: boolean\n          default: true\n        advertise_100_fd_mbps:\n          description: |-\n            If auto_negotiate is true and the interface supports this option\n            then this speed will be advertised.\n          type: boolean\n          default: true\n        advertise_100_hd_mbps:\n          description: |-\n            If auto_negotiate is true and the interface supports this option\n            then this speed will be advertised.\n          type: boolean\n          default: true\n        advertise_10_fd_mbps:\n          description: |-\n            If auto_negotiate is true and the interface supports this option\n            then this speed will be advertised.\n          type: boolean\n          default: true\n        advertise_10_hd_mbps:\n          description: |-\n            If auto_negotiate is true and the interface supports this option\n            then this speed will be advertised.\n          type: boolean\n          default: true\n        link_training:\n          description: |-\n            Enable/disable gigabit ethernet link training.\n          type: boolean\n          default: false\n        rs_fec:\n          description: |-\n            Enable/disable gigabit ethernet reed solomon forward error correction (RS FEC).\n          type: boolean\n          default: false\n    Layer1.FlowControl:\n      description: |-\n        A container for layer1 receive flow control settings.\n        To enable flow control settings on ports this object must be a valid\n        object not a null value.\n      type: object\n      properties:\n        directed_address:\n          description: |-\n            The 48bit mac address that the layer1 port names will listen on\n            for a directed pause.\n          type: string\n          format: mac\n          default: 01:80:C2:00:00:01\n        choice:\n          description: |-\n            The type of priority flow control.\n          type: string\n          enum:\n          - ieee_802_1qbb\n          - ieee_802_3x\n          default: ieee_802_1qbb\n        ieee_802_1qbb:\n          $ref: '#/components/schemas/Layer1.Ieee8021qbb'\n        ieee_802_3x:\n          $ref: '#/components/schemas/Layer1.Ieee8023x'\n    Layer1.Ieee8023x:\n      description: |-\n        A container for ieee 802.3x rx pause settings\n      type: object\n    Layer1.Ieee8021qbb:\n      description: \"These settings enhance the existing 802.3x pause priority capabilities\\\n        \\ \\nto enable flow control based on 802.1p priorities (classes of service). \"\n      type: object\n      properties:\n        pfc_delay:\n          description: \"The upper limit on the transmit time of a queue after receiving\\\n            \\ a \\nmessage to pause a specified priority.\\nA value of 0 or null indicates\\\n            \\ that pfc delay will not be enabled. \"\n          type: integer\n          default: 0\n        pfc_class_0:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 0\n        pfc_class_1:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 1\n        pfc_class_2:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 2\n        pfc_class_3:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 3\n        pfc_class_4:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 4\n        pfc_class_5:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 5\n        pfc_class_6:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 6\n        pfc_class_7:\n          description: |-\n            The valid values are null, 0 - 7.\n            A null value indicates there is no setting for this pfc class.\n          type: integer\n          default: 7\n    Capture:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for capture settings.\n      type: object\n      required:\n      - port_names\n      - name\n      properties:\n        port_names:\n          description: |\n            The unique names of ports that the capture settings will apply to. Port_names cannot be duplicated between capture objects.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        filters:\n          description: |-\n            A list of filters to apply to the capturing ports. If no filters are specified then all packets will be captured. A capture can have multiple filters. The number of filters supported is determined by the implementation which can be retrieved using the capabilities API.\n            When multiple filters are specified the capture implementation  must \u0026\u0026 (and) all the filters.\n          type: array\n          items:\n            $ref: '#/components/schemas/Capture.Filter'\n        overwrite:\n          description: |-\n            Overwrite the capture buffer.\n          type: boolean\n          default: true\n        packet_size:\n          description: |-\n            The maximum size of each captured packet. If no value is specified or it is null then the entire packet will be captured.\n          type: integer\n        format:\n          description: |-\n            The format of the capture file.\n          type: string\n          enum:\n          - pcap\n          - pcapng\n          default: pcap\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Capture.Filter:\n      description: |-\n        Configuration for capture filters\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of capture filter.\n          type: string\n          enum:\n          - custom\n          - ethernet\n          - vlan\n          - ipv4\n          - ipv6\n          default: custom\n        custom:\n          description: |-\n            Offset from last filter in the list. If no filters are present it is offset from position 0. Multiple custom filters can be present, the length of each custom filter is the length of the value being filtered.\n          $ref: '#/components/schemas/Capture.Custom'\n        ethernet:\n          $ref: '#/components/schemas/Capture.Ethernet'\n        vlan:\n          $ref: '#/components/schemas/Capture.Vlan'\n        ipv4:\n          $ref: '#/components/schemas/Capture.Ipv4'\n        ipv6:\n          $ref: '#/components/schemas/Capture.Ipv6'\n    Capture.Custom:\n      properties:\n        offset:\n          description: |-\n            The bit offset of field to filter on\n          type: integer\n          default: 0\n        bit_length:\n          description: |-\n            The bit length of field to filter on\n          type: integer\n          default: 8\n        value:\n          type: string\n          format: hex\n          default: '00'\n        mask:\n          type: string\n          format: hex\n          default: '00'\n        negate:\n          type: boolean\n          default: false\n      type: object\n    Capture.Field:\n      type: object\n      properties:\n        value:\n          type: string\n          format: hex\n          default: '00'\n        mask:\n          type: string\n          format: hex\n          default: '00'\n        negate:\n          type: boolean\n          default: false\n    Capture.Ethernet:\n      type: object\n      properties:\n        src:\n          $ref: '#/components/schemas/Capture.Field'\n        dst:\n          $ref: '#/components/schemas/Capture.Field'\n        ether_type:\n          $ref: '#/components/schemas/Capture.Field'\n        pfc_queue:\n          $ref: '#/components/schemas/Capture.Field'\n    Capture.Vlan:\n      type: object\n      properties:\n        priority:\n          $ref: '#/components/schemas/Capture.Field'\n        cfi:\n          $ref: '#/components/schemas/Capture.Field'\n        id:\n          $ref: '#/components/schemas/Capture.Field'\n        protocol:\n          $ref: '#/components/schemas/Capture.Field'\n    Capture.Ipv4:\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Capture.Field'\n        header_length:\n          $ref: '#/components/schemas/Capture.Field'\n        priority:\n          $ref: '#/components/schemas/Capture.Field'\n        total_length:\n          $ref: '#/components/schemas/Capture.Field'\n        identification:\n          $ref: '#/components/schemas/Capture.Field'\n        reserved:\n          $ref: '#/components/schemas/Capture.Field'\n        dont_fragment:\n          $ref: '#/components/schemas/Capture.Field'\n        more_fragments:\n          $ref: '#/components/schemas/Capture.Field'\n        fragment_offset:\n          $ref: '#/components/schemas/Capture.Field'\n        time_to_live:\n          $ref: '#/components/schemas/Capture.Field'\n        protocol:\n          $ref: '#/components/schemas/Capture.Field'\n        header_checksum:\n          $ref: '#/components/schemas/Capture.Field'\n        src:\n          $ref: '#/components/schemas/Capture.Field'\n        dst:\n          $ref: '#/components/schemas/Capture.Field'\n    Capture.Ipv6:\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Capture.Field'\n        traffic_class:\n          $ref: '#/components/schemas/Capture.Field'\n        flow_label:\n          $ref: '#/components/schemas/Capture.Field'\n        payload_length:\n          $ref: '#/components/schemas/Capture.Field'\n        next_header:\n          $ref: '#/components/schemas/Capture.Field'\n        hop_limit:\n          $ref: '#/components/schemas/Capture.Field'\n        src:\n          $ref: '#/components/schemas/Capture.Field'\n        dst:\n          $ref: '#/components/schemas/Capture.Field'\n    Device:\n      description: |-\n        A container for emulated interfaces, loopback interfaces and protocol configurations.\n      type: object\n      properties:\n        ethernets:\n          description: |-\n            Ethernet configuration for one or more emulated network interfaces.\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Ethernet'\n        ipv4_loopbacks:\n          description: |-\n            IPv4 Loopback interface that can be attached to an Ethernet in the same device  or to an Ethernet in another device.\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Ipv4Loopback'\n        ipv6_loopbacks:\n          description: |-\n            IPv6 Loopback interface that can be attached to an Ethernet in the same device  or to an Ethernet in another device.\n          type: array\n          items:\n            $ref: '#/components/schemas/Device.Ipv6Loopback'\n        isis:\n          description: |-\n            The properties of an IS-IS router and its children,  such as IS-IS interfaces and route ranges.\n          $ref: '#/components/schemas/Device.IsisRouter'\n        bgp:\n          description: |-\n            The properties of BGP router and its children,  such as BGPv4, BGPv6 peers and their route ranges.\n          $ref: '#/components/schemas/Device.BgpRouter'\n        vxlan:\n          description: |-\n            Configuration of VXLAN tunnel interfaces RFC Ref: https://datatracker.ietf.org/doc/html/rfc7348\n          $ref: '#/components/schemas/Device.Vxlan'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Device.IsisRouter:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        A container of properties for an ISIS router and its interfaces.\n      type: object\n      required:\n      - system_id\n      - interfaces\n      - name\n      properties:\n        instance:\n          description: |-\n            This contains the properties of a Multi-Instance-capable routers or MI-RTR. Each router can emulate one ISIS instance at a time.\n          $ref: '#/components/schemas/Device.IsisMultiInstance'\n        system_id:\n          description: |-\n            The System ID for this emulated ISIS router, e.g. \"640100010000\".\n          type: string\n          format: hex\n        interfaces:\n          description: |-\n            List of ISIS interfaces for this router.\n          type: array\n          items:\n            $ref: '#/components/schemas/Isis.Interface'\n        basic:\n          description: \"Contains basic properties of an ISIS Router. \"\n          $ref: '#/components/schemas/Isis.Basic'\n        advanced:\n          description: |-\n            Contains advance properties of an ISIS Router..\n          $ref: '#/components/schemas/Isis.Advanced'\n        router_auth:\n          description: |-\n            ISIS Router authentication properties.\n          $ref: '#/components/schemas/Isis.Authentication'\n        v4_routes:\n          description: |-\n            Emulated ISIS IPv4 routes.\n          type: array\n          items:\n            $ref: '#/components/schemas/Isis.V4RouteRange'\n        v6_routes:\n          description: |-\n            Emulated ISIS IPv6 routes.\n          type: array\n          items:\n            $ref: '#/components/schemas/Isis.V6RouteRange'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Device.IsisMultiInstance:\n      x-status: under-review\n      description: \"Status: under-review\\nThis container properties of an Multi-Instance-capable\\\n        \\ router (MI-RTR). \"\n      type: object\n      properties:\n        iid:\n          description: |-\n            Instance Identifier (IID) TLV will associate a PDU with an ISIS instance  by using a unique 16-bit number and including one or more  Instance-Specific Topology Identifiers (ITIDs).\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        itids:\n          description: |-\n            This contains one or more ITIDs that will be advertised in IID TLV.\n          type: array\n          items:\n            type: integer\n            default: 0\n            minimum: 0\n            maximum: 65535\n    Isis.Interface:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for single ISIS interface.\n      type: object\n      required:\n      - eth_name\n      - name\n      properties:\n        eth_name:\n          description: \"The unique name of the Ethernet interface on which ISIS is\\\n            \\ running. Two ISIS interfaces cannot share the same Ethernet.       \\\n            \\  \\n\\nx-constraint:\\n- /components/schemas/Device.Ethernet/properties/name\\n\"\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n        metric:\n          description: |-\n            The default metric cost for the interface.\n          type: integer\n          default: 10\n        network_type:\n          description: \"The type of network link. \"\n          type: string\n          enum:\n          - broadcast\n          - point_to_point\n          default: broadcast\n        level_type:\n          description: \"This indicates whether this router is participating in Level-1\\\n            \\ (L1), \\nLevel-2 (L2) or both L1 and L2 domains on this interface.\"\n          type: string\n          enum:\n          - level_1\n          - level_2\n          - level_1_2\n          default: level_2\n        l1_settings:\n          description: |-\n            Settings of Level 1 Hello.\n          $ref: '#/components/schemas/IsisInterface.Level'\n        l2_settings:\n          description: |-\n            Settings of Level 2 Hello.\n          $ref: '#/components/schemas/IsisInterface.Level'\n        multi_topology_ids:\n          description: |-\n            Contains the properties of multiple topologies.\n          type: array\n          items:\n            $ref: '#/components/schemas/Isis.MT'\n        traffic_engineering:\n          description: |-\n            Contains a list of Traffic Engineering attributes.\n          type: array\n          items:\n            $ref: '#/components/schemas/LinkState.TE'\n        authentication:\n          description: |-\n            The Circuit authentication method used for the interfaces on this emulated ISIS v4/v6 router.\n          $ref: '#/components/schemas/IsisInterface.Authentication'\n        advanced:\n          description: |-\n            Optional container for advanced interface properties.\n          $ref: '#/components/schemas/IsisInterface.Advanced'\n        link_protection:\n          description: |-\n            Link protection on the ISIS link between two interfaces.\n          $ref: '#/components/schemas/IsisInterface.LinkProtection'\n        srlg_values:\n          description: |-\n            This contains list of SRLG values for the link between two interfaces.\n          type: array\n          items:\n            type: integer\n            default: 0\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    IsisInterface.Level:\n      description: |-\n        Configuration for the properties of Level 1 Hello.\n      type: object\n      properties:\n        priority:\n          description: |-\n            The Priority setting in Level 1 LAN Hellos for Designated Router election.\n          type: integer\n          default: 0\n        hello_interval:\n          description: |-\n            The Hello interval for Level 1 Hello messages, in seconds.\n          type: integer\n          default: 10\n        dead_interval:\n          description: |-\n            The Dead (Holding Time) interval for Level 1 Hello messages, in seconds.\n          type: integer\n          default: 30\n    Isis.MT:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration of properties per interface per topology when multiple topologies are configured in an ISIS router.\n        in a ISIS router.\n      type: object\n      properties:\n        mt_id:\n          description: |-\n            The Multi Topology ID for one of the topologies supported on the ISIS interface.\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n        link_metric:\n          description: |-\n            Specifies the link metric for this topology on the ISIS interface.\n          type: integer\n          default: 10\n          minimum: 0\n          maximum: 16777215\n    LinkState.TE:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        A container for Traffic Engineering properties on a interface.\n      type: object\n      properties:\n        administrative_group:\n          description: \"The Administrative group sub-TLV (sub-TLV 3). It is a 4-octet\\\n            \\ \\nuser-defined bit mask used to assign administrative group numbers\\\n            \\ \\nto the interface, for use in assigning colors and resource classes.\\\n            \\ \\nEach set bit corresponds to a single administrative group for this\\\n            \\ \\ninterface. The settings translate into Group numbers, which range\\\n            \\ \\nfrom 0 to 31 (integers).\"\n          type: string\n          format: hex\n          default: '00000000'\n        metric_level:\n          description: |-\n            The user-assigned link metric for Traffic Engineering.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4261412864\n          default: 0\n        max_bandwith:\n          description: \"The maximum link bandwidth (sub-TLV 9) in bytes/sec allowed\\\n            \\ for this \\nlink for a direction.\"\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        max_reservable_bandwidth:\n          description: \"The maximum link bandwidth (sub-TLV 10) in bytes/sec allowed\\\n            \\ for this \\nlink in a direction.\"\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        priority_bandwidths:\n          description: |-\n            Configuration of bandwidths of priority 0 through priority 7.\n          $ref: '#/components/schemas/LinkState.priorityBandwidths'\n    LinkState.priorityBandwidths:\n      description: \"Specifies the amount of bandwidth that can be reserved with a\\\n        \\ setup priority of 0 \\nthrough 7, arranged in increasing order with priority\\\n        \\ 0 having highest priority. \\nIn ISIS, this is sent in sub-TLV (11) of Extended\\\n        \\ IS Reachability TLV. \"\n      type: object\n      properties:\n        pb0:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 0.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb1:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 1.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb2:\n          description: |-\n            Specify the amount of bandwidth that can be reserved for the Priority 2.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb3:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 3.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb4:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 4.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb5:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 5.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb6:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 6.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n        pb7:\n          description: |-\n            Specifies the amount of bandwidth that can be reserved for the Priority 7.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 125000000\n    IsisInterface.Authentication:\n      description: |-\n        Optional container for circuit authentication properties.\n      type: object\n      required:\n      - auth_type\n      properties:\n        auth_type:\n          description: |-\n            The circuit authentication method.\n          type: string\n          enum:\n          - md5\n          - password\n        md5:\n          description: |-\n            MD5 key to be used for authentication.\n          type: string\n          minLength: 0\n          maxLength: 255\n        password:\n          description: |-\n            The password, in clear text, to be used for Authentication.\n          type: string\n          minLength: 0\n          maxLength: 255\n    IsisInterface.Advanced:\n      description: |-\n        Optional container for advanced interface properties.\n      type: object\n      properties:\n        auto_adjust_mtu:\n          description: \"If a padded Hello message is received on the interface, the\\\n            \\ length of \\nthe Hello packets sent out on that interface is adjusted\\\n            \\ to match.\"\n          type: boolean\n          default: true\n        auto_adjust_area:\n          description: \"If a Level 1 Hello is received on this emulated router for\\\n            \\ an area \\nnot currently in its area list, an area from the received\\\n            \\ Hello is \\nadded to that list. This ensures an area match for all future\\\n            \\ \\nLevel 1 Hellos from the source L1 router.\"\n          type: boolean\n          default: true\n        auto_adjust_supported_protocols:\n          description: \"If a Hello message listing supported protocols is received\\\n            \\ on this \\nemulated router, the supported protocols advertised by this\\\n            \\ router \\nare changed to match exactly.\"\n          type: boolean\n          default: false\n        enable_3way_handshake:\n          description: |-\n            If it is true, the Point-to-Point circuit will include 3-way TLV in its Point-to-Point IIH  and attempt to establish the adjacency as specified in RFC 5303. This field is not applicable if network_type is set to 'broadcast' type in ISIS interface.\n          type: boolean\n          default: true\n        p2p_hellos_to_unicast_mac:\n          description: \"If it is true, the Point-to-Point Hello messages will be sent\\\n            \\ to the unicast MAC address. \"\n          type: boolean\n          default: false\n    IsisInterface.LinkProtection:\n      description: |-\n        Optional container for the link protection sub TLV (type 20).\n      type: object\n      properties:\n        extra_traffic:\n          description: |-\n            Enable this to protect other link or links. LSPs on a link of this type are lost\n            if any of the links fail.\n          type: boolean\n          default: false\n        unprotected:\n          description: \"Enabling this signifies that there is no other link protecting\\\n            \\ this \\nlink. LSPs on a link of this type are lost if the link fails.\"\n          type: boolean\n          default: false\n        shared:\n          description: \"Enable this to share the Extra Traffic links between one or\\\n            \\ more \\nlinks of type Shared.There are one or more disjoint links of\\\n            \\ type \\nExtra Traffic that are protecting this link.\"\n          type: boolean\n          default: false\n        dedicated_1_to_1:\n          description: \"Enabling this signifies that there is one dedicated disjoint\\\n            \\ link \\nof type Extra Traffic that is protecting this link.\"\n          type: boolean\n          default: false\n        dedicated_1_plus_1:\n          description: \"Enabling this signifies that a dedicated disjoint link is\\\n            \\ protecting \\nthis link. However, the protecting link is not advertised\\\n            \\ in the \\nlink state database and is therefore not available for the\\\n            \\ routing \\nof LSPs.\"\n          type: boolean\n          default: false\n        enhanced:\n          description: \"Enabling this signifies that a protection scheme that is more\\\n            \\ \\nreliable than Dedicated 1+1.\"\n          type: boolean\n          default: false\n        reserved_40:\n          description: \"This is a Protection Scheme with value 0x40. \"\n          type: boolean\n          default: false\n        reserved_80:\n          description: \"This is a Protection Scheme with value 0x80. \"\n          type: boolean\n          default: false\n    Isis.Basic:\n      description: |-\n        This contains ISIS router basic properties.\n      type: object\n      properties:\n        ipv4_te_router_id:\n          description: \"IPv4 Traffic Engineering(TE) router id. This address should\\\n            \\ be configured as an IPv4 Loopback address in 'ipv4_loopbacks' in the\\\n            \\ Device.      \"\n          type: string\n          format: ipv4\n        hostname:\n          description: |-\n            Host name for the router. The host name is transmitted in all the packets sent from the router.\n          type: string\n        enable_wide_metric:\n          description: |-\n            When set to true, it allows sending of more detailed metric information  for the routes using 32-bit wide values using TLV 135 IP reachability and  more detailed reachability information for IS reachability by using TLV 22.  The detailed usage is described in RFC3784.\n          type: boolean\n          default: true\n    Isis.Advanced:\n      description: |-\n        Contains ISIS router advanced properties.\n      type: object\n      properties:\n        enable_hello_padding:\n          description: |-\n            It enables padding of Hello message to MTU size.\n          type: boolean\n          default: true\n        max_area_addresses:\n          description: \"The Number of Area Addresses permitted, with a valid range\\\n            \\ from 0 to 254.  A zero indicates a maximum of 3 addresses. \"\n          type: integer\n          minimum: 0\n          maximum: 254\n          default: 3\n        area_addresses:\n          description: |-\n            Its combination of the ISP and HO-DSP.Usually all nodes within an area have  the same area address. If no area addresses are configured, a default area of \"490001\" will be advertised.\n          type: array\n          items:\n            type: string\n            format: hex\n        lsp_refresh_rate:\n          description: |-\n            The rate at which LSPs are re-sent in seconds.\n          type: integer\n          minimum: 1\n          maximum: 65535\n          default: 600\n        lsp_lifetime:\n          description: |-\n            The MaxAge for retaining a learned LSP on this router in seconds.\n          type: integer\n          minimum: 1\n          maximum: 65535\n          default: 1200\n        psnp_interval:\n          description: |-\n            The number of milliseconds between transmissions of Partial Sequence Number PDU.\n          type: integer\n          minimum: 1\n          maximum: 60000\n          default: 2000\n        csnp_interval:\n          description: |-\n            The number of milliseconds between transmissions of Partial Sequence Number PDU.\n          type: integer\n          minimum: 1\n          maximum: 65535000\n          default: 10000\n        max_lsp_size:\n          description: |-\n            The maximum size in bytes of any LSP that can be transmitted over a link of equal or less  than maximum MTU size.\n          type: integer\n          minimum: 64\n          maximum: 9216\n          default: 1492\n        lsp_mgroup_min_trans_interval:\n          description: |-\n            The number of seconds between transmissions of LSPs/MGROUP-PDUs.\n          type: integer\n          minimum: 1\n          maximum: 60000\n          default: 5000\n        enable_attached_bit:\n          description: |-\n            If the Attached bit is enabled, it indicates that the ISIS router is attached to another area  or the Level 2 backbone. The purpose of an Attached-Bit is to accomplish Inter-Area Routing.  When an L1/L2 router is connected to more than one area, it sets the Attached-bit on its L1 LSP. This can cause a default route ( 0.0.0.0/0 ) to be installed by the receiving router.\n          type: boolean\n          default: true\n    Isis.Authentication:\n      description: |-\n        This contains ISIS Area/Domain authentication properties.\n      type: object\n      properties:\n        ignore_receive_md5:\n          description: |-\n            Do not verify MD5 checksum in received LSPs.\n          type: boolean\n          default: true\n        area_auth:\n          description: |-\n            The Area authentication method used for the emulated ISIS router.\n            This is used for L1 LSPs.\n          $ref: '#/components/schemas/Isis.AuthenticationBase'\n        domain_auth:\n          description: |-\n            The Domain authentication method used for the emulated ISIS router.\n            This is used for L2 LSPs.\n          $ref: '#/components/schemas/Isis.AuthenticationBase'\n    Isis.AuthenticationBase:\n      description: |-\n        Optional container for ISIS authentication properties.\n      type: object\n      required:\n      - auth_type\n      properties:\n        auth_type:\n          description: |-\n            The authentication method.\n          type: string\n          enum:\n          - md5\n          - password\n        md5:\n          description: |-\n            Authentication as an MD5 key.\n          type: string\n          minLength: 0\n          maxLength: 255\n        password:\n          description: |-\n            Authentication as a clear text password.\n          type: string\n          minLength: 0\n          maxLength: 255\n    Isis.V4RouteRange:\n      description: |-\n        Emulated ISIS IPv4 routes.\n        Configuration for ISIS route ranges.\n        This contains the properties of ISIS Prefix attributes for  the extended IPv4 and IPv6 reachability. https://www.rfc-editor.org/rfc/rfc7794.html\n      type: object\n      properties:\n        addresses:\n          description: |-\n            A list of group of IPv4 route addresses.\n          type: array\n          items:\n            $ref: '#/components/schemas/V4RouteAddress'\n        link_metric:\n          description: |-\n            The user-defined metric associated with this route range.\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        origin_type:\n          description: \"The origin of the advertised route-internal or external to\\\n            \\ the ISIS area. Options include the following: \\n  Internal-for intra-area\\\n            \\ routes, through Level 1 LSPs. \\n  External-for inter-area routes redistributed\\\n            \\ within L1, through Level 1 LSPs.\"\n          type: string\n          enum:\n          - internal\n          - external\n          default: internal\n        redistribution_type:\n          description: \"Defines the Up/Down (Redistribution) bit defined for TLVs\\\n            \\ 128 and 130 by RFC 2966.  It is used for domain-wide advertisement of\\\n            \\ prefix information. \\n  Up (0)-used when a prefix is initially advertised\\\n            \\ within the ISIS L3 hierarchy, \\n          and for all other prefixes\\\n            \\ in L1 and L2 LSPs. (default) \\n  Down (1)-used when an L1/L2 router\\\n            \\ advertises L2 prefixes in L1 LSPs. \\nThe prefixes are being advertised\\\n            \\ from a higher level (L2) down to a lower level (L1). \"\n          type: string\n          enum:\n          - up\n          - down\n          default: up\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        prefix_attr_enabled:\n          description: \"Specifies whether the sub-TLV for IPv4/IPv6 Extended Reachability\\\n            \\ Attribute Flags\\nwill be advertised or not. \"\n          type: boolean\n          default: false\n        x_flag:\n          description: |-\n            External Prefix Flag (Bit 0)\n          type: boolean\n          default: false\n        r_flag:\n          description: |-\n            Re-advertisement Flag (Bit 1)\n          type: boolean\n          default: false\n        n_flag:\n          description: |-\n            Node Flag (Bit 2)\n          type: boolean\n          default: false\n      required:\n      - name\n    V4RouteAddress:\n      description: |-\n        A container for IPv4 route addresses.\n      type: object\n      required:\n      - address\n      properties:\n        address:\n          description: |-\n            The starting address of the network.\n          type: string\n          format: ipv4\n        prefix:\n          description: \"The IPv4 network prefix length to be applied to the address. \"\n          type: integer\n          default: 24\n          minimum: 0\n          maximum: 32\n        count:\n          description: |-\n            The total number of addresses in the range.\n          type: integer\n          default: 1\n          minimum: 1\n        step:\n          description: |-\n            Increments the network address prefixes within a route range  where multiple routes are present.  The value is incremented according to the Prefix Length and Step.\n          type: integer\n          default: 1\n          minimum: 1\n    V6RouteAddress:\n      description: |-\n        A container for IPv6 route addresses.\n      type: object\n      required:\n      - address\n      properties:\n        address:\n          description: |-\n            The starting address of the network.\n          type: string\n          format: ipv6\n        prefix:\n          description: |-\n            The IPv6 network prefix length to be applied to the address.\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 128\n        count:\n          description: |-\n            The total number of addresses in the range.\n          type: integer\n          default: 1\n          minimum: 1\n        step:\n          description: |-\n            Increments the network address prefixes within a route range  where multiple routes are present.  The value is incremented according to the Prefix Length and Step.\n          type: integer\n          default: 1\n          minimum: 1\n    MACRouteAddress:\n      description: |-\n        A container for MAC route addresses.\n      type: object\n      required:\n      - address\n      properties:\n        address:\n          description: |-\n            The starting address of the MAC Range.\n          type: string\n          format: mac\n        prefix:\n          description: \"The MAC prefix length to be applied to the address. \"\n          type: integer\n          default: 48\n          minimum: 0\n          maximum: 48\n        count:\n          description: |-\n            The total number of mac addresses in the range.\n          type: integer\n          default: 1\n          minimum: 1\n        step:\n          description: |-\n            Increments the mac address prefixes within a mac range  where multiple routes are present.  The value is incremented according to the mac prefix Length and Step.\n          type: integer\n          default: 1\n          minimum: 1\n    Isis.V6RouteRange:\n      description: |-\n        Emulated ISIS IPv6 routes.\n        Configuration for ISIS route ranges.\n        This contains the properties of ISIS Prefix attributes for  the extended IPv4 and IPv6 reachability. https://www.rfc-editor.org/rfc/rfc7794.html\n      type: object\n      properties:\n        addresses:\n          description: |-\n            A list of group of IPv6 route addresses.\n          type: array\n          items:\n            $ref: '#/components/schemas/V6RouteAddress'\n        link_metric:\n          description: |-\n            The user-defined metric associated with this route range.\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        origin_type:\n          description: \"The origin of the advertised route-internal or external to\\\n            \\ the ISIS area. Options include the following: \\n  Internal-for intra-area\\\n            \\ routes, through Level 1 LSPs. \\n  External-for inter-area routes redistributed\\\n            \\ within L1, through Level 1 LSPs.\"\n          type: string\n          enum:\n          - internal\n          - external\n          default: internal\n        redistribution_type:\n          description: \"Defines the Up/Down (Redistribution) bit defined for TLVs\\\n            \\ 128 and 130 by RFC 2966.  It is used for domain-wide advertisement of\\\n            \\ prefix information. \\n  Up (0)-used when a prefix is initially advertised\\\n            \\ within the ISIS L3 hierarchy, \\n          and for all other prefixes\\\n            \\ in L1 and L2 LSPs. (default) \\n  Down (1)-used when an L1/L2 router\\\n            \\ advertises L2 prefixes in L1 LSPs. \\nThe prefixes are being advertised\\\n            \\ from a higher level (L2) down to a lower level (L1). \"\n          type: string\n          enum:\n          - up\n          - down\n          default: up\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        prefix_attr_enabled:\n          description: \"Specifies whether the sub-TLV for IPv4/IPv6 Extended Reachability\\\n            \\ Attribute Flags\\nwill be advertised or not. \"\n          type: boolean\n          default: false\n        x_flag:\n          description: |-\n            External Prefix Flag (Bit 0)\n          type: boolean\n          default: false\n        r_flag:\n          description: |-\n            Re-advertisement Flag (Bit 1)\n          type: boolean\n          default: false\n        n_flag:\n          description: |-\n            Node Flag (Bit 2)\n          type: boolean\n          default: false\n      required:\n      - name\n    Device.BgpRouter:\n      description: |-\n        Configuration for one or more IPv4 or IPv6 BGP peers.\n      type: object\n      required:\n      - router_id\n      properties:\n        router_id:\n          description: |-\n            The BGP router ID is a unique identifier used by BGP. It is a 32-bit value that is often represented by an IPv4 address.\n          type: string\n          format: ipv4\n        ipv4_interfaces:\n          description: \"This contains an array of references to IPv4 interfaces, \\\n            \\ each of which will have list of peers to different destinations.   \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V4Interface'\n        ipv6_interfaces:\n          description: |-\n            This contains an array of references to IPv6 interfaces,  each of which will have list of peers to different destinations.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V6Interface'\n    Bgp.V4Peer:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for emulated BGPv4 peers and routes.\n        Configuration for basic emulated BGP peer settings.\n      type: object\n      required:\n      - peer_address\n      - as_type\n      - as_number\n      - name\n      properties:\n        peer_address:\n          description: |-\n            IPv4 address of the BGP peer for the session.\n          type: string\n          format: ipv4\n        evpn_ethernet_segments:\n          description: \"This contains the list of Ethernet Virtual Private Network\\\n            \\ (EVPN) Ethernet Segments (ES) Per BGP Peer for IPv4 Address Family Identifier\\\n            \\ (AFI).\\n\\nEach Ethernet Segment contains a list of EVPN Instances (EVIs)\\\n            \\ . \\nEach EVI contains a list of Broadcast Domains. \\nEach Broadcast\\\n            \\ Domain contains a list of MAC/IP Ranges. \\n\\n\u003cEthernet Segment, EVI,\\\n            \\ Broadcast Domain\u003e is responsible for advertising Ethernet Auto-discovery\\\n            \\ Route Per EVI (Type 1).\\n\\n\u003cEthernet Segment, EVI\u003e is responsible for\\\n            \\ advertising Ethernet Auto-discovery Route Per Ethernet Segment (Type\\\n            \\ 1).\\n\\n\u003cEthernet Segment, EVI, Broadcast Domain, MAC/IP\u003e is responsible\\\n            \\ for advertising MAC/IP Advertisement Route (Type 2).\\n\\n\u003cEthernet Segment,\\\n            \\ EVI, Broadcast Domain\u003e is responsible for advertising Inclusive Multicast\\\n            \\ Ethernet Tag Route (Type 3).\\n\\nEthernet Segment is responsible for\\\n            \\ advertising Ethernet Segment Route (Type 4).\"\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV4.EthernetSegment'\n        as_type:\n          description: |-\n            The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp). Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as 'ebgp' then other properties will need to be specified as per an external BGP peer. Specifically, for 'ebgp',  'as_set_mode' attribute in 'as_path' field  in any Route Range should be changed from default value 'do_not_include_local_as' to any other value.\n          type: string\n          enum:\n          - ibgp\n          - ebgp\n        as_number:\n          description: |-\n            Autonomous System Number (AS number or ASN)\n          type: integer\n        as_number_width:\n          description: |-\n            The width in bytes of the as_number values. Any as_number values that exceeds the width MUST result in an error.\n          type: string\n          enum:\n          - two\n          - four\n          default: four\n        advanced:\n          $ref: '#/components/schemas/Bgp.Advanced'\n        capability:\n          $ref: '#/components/schemas/Bgp.Capability'\n        learned_information_filter:\n          $ref: '#/components/schemas/Bgp.LearnedInformationFilter'\n        v4_routes:\n          description: |-\n            Emulated BGPv4 route ranges.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V4RouteRange'\n        v6_routes:\n          description: |-\n            Emulated BGPv6 route ranges.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V6RouteRange'\n        v4_srte_policies:\n          description: |-\n            Segment Routing Traffic Engineering (SR TE) Policies for IPv4 Address Family Identifier (AFI).\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V4Policy'\n        v6_srte_policies:\n          description: |-\n            Segment Routing Traffic Engineering (SR TE) Policies for IPv6 Address Family Identifier (AFI).\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V6Policy'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Bgp.V4Interface:\n      description: |-\n        Configuration for emulated BGPv4 peers and routes on a single IPv4 interface.\n      type: object\n      required:\n      - ipv4_name\n      properties:\n        ipv4_name:\n          description: |\n            The unique name of the IPv4 or Loopback IPv4 interface used as the source IP for this list of BGP peers.\n\n            x-constraint:\n            - /components/schemas/Device.Ipv4/properties/name\n            - /components/schemas/Device.Ipv4Loopback/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv4/properties/name\n          - /components/schemas/Device.Ipv4Loopback/properties/name\n        peers:\n          description: |-\n            This contains the list of BGPv4 peers configured on this interface.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V4Peer'\n    Bgp.Advanced:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for BGP advanced settings.\n      type: object\n      properties:\n        hold_time_interval:\n          description: |-\n            Number of seconds the sender proposes for the value of the Hold Timer.\n          type: integer\n          default: 90\n        keep_alive_interval:\n          description: |-\n            Number of seconds between transmissions of Keepalive messages by this peer.\n          type: integer\n          default: 30\n        update_interval:\n          description: |-\n            The time interval at which Update messages are sent to the DUT, expressed as the number of milliseconds between Update messages. The update interval 0 implies to send all the updates as fast as possible.\n          type: integer\n          default: 0\n        time_to_live:\n          description: |-\n            The limited number of iterations that a unit of data can experience before the data is discarded. This is placed in the TTL field in the IP header of the  transmitted packets.\n          type: integer\n          default: 64\n        md5_key:\n          description: |-\n            The value to be used as a secret MD5 key for authentication. If not configured, MD5 authentication will not be enabled.\n          type: string\n    Bgp.Capability:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for BGP capability settings.\n      type: object\n      properties:\n        ipv4_unicast:\n          description: |-\n            Support for the IPv4 Unicast address family.\n          type: boolean\n          default: true\n        ipv4_multicast:\n          description: \"Support for the IPv4 Multicast address family. \"\n          type: boolean\n          default: false\n        ipv6_unicast:\n          description: |-\n            Support for the IPv4 Unicast address family.\n          type: boolean\n          default: true\n        ipv6_multicast:\n          description: |-\n            Support for the IPv6 Multicast address family.\n          type: boolean\n          default: false\n        vpls:\n          description: \"Support for VPLS as below. \\nRFC4761 - Virtual Private LAN\\\n            \\ Service (VPLS) using BGP for Auto-Discovery\\nand Signaling. \\nRFC6624\\\n            \\ - Layer 2 Virtual Private Networks using BGP for Auto-Discovery \\nand\\\n            \\ Signaling.\"\n          type: boolean\n          default: false\n        route_refresh:\n          description: |-\n            Support for the route refresh capabilities. Route Refresh allows the dynamic exchange of route refresh requests  and routing information between BGP peers and the subsequent re-advertisement  of the outbound or inbound routing table.\n          type: boolean\n          default: true\n        route_constraint:\n          description: |-\n            Supports for the route constraint capabilities. Route Constraint allows the advertisement of Route Target Membership  information. The BGP peers exchange Route Target Reachability Information,  which is used to build a route distribution graph.  This limits the propagation of VPN Network Layer Reachability Information (NLRI) between different autonomous systems  or distinct clusters of the same autonomous system. This is supported for Layer 3 Virtual Private Network scenario.\n          type: boolean\n          default: false\n        link_state_non_vpn:\n          description: |-\n            Support for BGP Link State for ISIS and OSPF.\n          type: boolean\n          default: false\n        link_state_vpn:\n          description: |-\n            Capability advertisement of BGP Link State for VPNs.\n          type: boolean\n          default: false\n        evpn:\n          description: |-\n            Support for the EVPN address family.\n          type: boolean\n          default: false\n        extended_next_hop_encoding:\n          description: |-\n            Support for extended Next Hop Encoding for Nexthop field in  IPv4 routes advertisement.  This allows IPv4 routes being advertised by IPv6 peers to  include an IPv6 Nexthop.\n          type: boolean\n          default: false\n        ipv4_multicast_vpn:\n          description: |-\n            Support for the IPv4 Multicast VPN address family.\n          type: boolean\n          default: false\n        ipv4_mpls_vpn:\n          description: |-\n            Support for the IPv4 MPLS L3VPN address family.\n          type: boolean\n          default: false\n        ipv4_mdt:\n          description: |-\n            Supports for IPv4 MDT address family messages.\n          type: boolean\n          default: false\n        ipv4_multicast_mpls_vpn:\n          description: |-\n            Support for the IPv4 Multicast VPN address family.\n          type: boolean\n          default: false\n        ipv4_unicast_flow_spec:\n          description: |-\n            Support for propagation of IPv4 unicast flow specification rules.\n          type: boolean\n          default: false\n        ipv4_sr_te_policy:\n          description: |-\n            Support for IPv4 SRTE policy.\n          type: boolean\n          default: false\n        ipv4_unicast_add_path:\n          description: |-\n            Support for IPv4 Unicast Add Path Capability.\n          type: boolean\n          default: false\n        ipv6_multicast_vpn:\n          description: |-\n            Support for the IPv6 Multicast VPN address family.\n          type: boolean\n          default: false\n        ipv6_mpls_vpn:\n          description: |-\n            Support for the IPv6 MPLS L3VPN address family.\n          type: boolean\n          default: false\n        ipv6_mdt:\n          description: |-\n            Support for IPv6 MDT address family messages.\n          type: boolean\n          default: false\n        ipv6_multicast_mpls_vpn:\n          description: |-\n            Support for the IPv6 Multicast VPN address family.\n          type: boolean\n          default: false\n        ipv6_unicast_flow_spec:\n          description: |-\n            Support for propagation of IPv6 unicast flow specification rules.\n          type: boolean\n          default: false\n        ipv6_sr_te_policy:\n          description: |-\n            Support for IPv6 SRTE policy.\n          type: boolean\n          default: false\n        ipv6_unicast_add_path:\n          description: |-\n            Support for IPv6 Unicast Add Path Capability.\n          type: boolean\n          default: false\n    Bgp.LearnedInformationFilter:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for controlling storage of BGP learned information recieved from the peer.\n      type: object\n      properties:\n        unicast_ipv4_prefix:\n          description: |-\n            If enabled, will store the information related to Unicast IPv4 Prefixes recieved from the peer.\n          type: boolean\n          default: false\n        unicast_ipv6_prefix:\n          description: |-\n            If enabled, will store the information related to Unicast IPv6 Prefixes recieved from the peer.\n          type: boolean\n          default: false\n    Bgp.V4RouteRange:\n      description: |-\n        Emulated BGPv4 route range.\n        Configuration for BGP route ranges.\n      type: object\n      properties:\n        addresses:\n          description: |-\n            A list of group of IPv4 route addresses.\n          type: array\n          items:\n            $ref: '#/components/schemas/V4RouteAddress'\n        next_hop_mode:\n          description: \"Specify the NextHop in MP REACH NLRI. The mode for setting\\\n            \\ the IP address  of the NextHop in the MP REACH NLRI can be one of the\\\n            \\ following:\\n  Local IP: Automatically fills the Nexthop with the Local\\\n            \\ IP of the BGP peer.\\n  If BGP peer is of type IPv6, Nexthop Encoding\\\n            \\ capability should be enabled.\\n  Manual: Override the Nexthop with any\\\n            \\ arbitrary IPv4/IPv6 address.   \"\n          type: string\n          enum:\n          - local_ip\n          - manual\n          default: local_ip\n        next_hop_address_type:\n          description: \"If the Nexthop Mode is Manual, it sets the type of the NextHop\\\n            \\ IP address. \"\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv4\n        next_hop_ipv4_address:\n          description: |-\n            The IPv4 address of the next hop if the Nexthop Mode is manual and the Nexthop type is IPv4. If BGP peer is of type IPv6, Nexthop Encoding capability should be enabled.\n          type: string\n          format: ipv4\n          default: 0.0.0.0\n        next_hop_ipv6_address:\n          description: \"The IPv6 address of the next hop if the Nexthop Mode is manual\\\n            \\ and the Nexthop type is IPv6. \"\n          type: string\n          format: ipv6\n          default: ::0\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        as_path:\n          $ref: '#/components/schemas/Bgp.AsPath'\n        add_path:\n          $ref: '#/components/schemas/Bgp.AddPath'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Bgp.RouteAdvanced:\n      description: |-\n        Configuration for advanced BGP route range settings.\n      type: object\n      properties:\n        multi_exit_discriminator:\n          description: |-\n            The multi exit discriminator (MED) value.  A null value means the MED feature is not enabled.\n          type: integer\n        origin:\n          description: |-\n            The origin value.  A null value means the origin feature is not enabled.\n          type: string\n          enum:\n          - igp\n          - egp\n          default: igp\n    Bgp.Community:\n      description: |-\n        BGP communities provide additional capability for tagging routes and  for modifying BGP routing policy on upstream and downstream routers. BGP community is a 32-bit number which is broken into 16-bit AS number and  a 16-bit custom value.\n      type: object\n      properties:\n        type:\n          description: |-\n            The type of community AS number.\n          type: string\n          enum:\n          - manual_as_number\n          - no_export\n          - no_advertised\n          - no_export_subconfed\n          - llgr_stale\n          - no_llgr\n        as_number:\n          description: |-\n            First two octets of 32 bit community AS number.\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n        as_custom:\n          description: \"Last two octets of the community AS number. \"\n          type: integer\n          minimum: 0\n          maximum: 65535\n          default: 0\n    Bgp.AsPath:\n      description: |-\n        This attribute identifies the autonomous systems through  which routing information carried in this UPDATE message has passed. This contains the configuration of how to include the Local AS in the AS path attribute of the MP REACH NLRI. It also contains optional configuration of additional AS Path Segments that can be included in the AS Path attribute. The AS Path consists of a Set or Sequence of Autonomous Systems (AS) numbers  that a routing information passes through to reach the destination.\n      type: object\n      properties:\n        as_set_mode:\n          description: |-\n            Defines how the Local AS should be included in the MP REACH NLRI. For iBGP sessions, \"Do Not Include Local AS\" must be chosen. For eBGP sessions, any choice other than \"Do Not Include Local AS\" can be chosen.\n          type: string\n          enum:\n          - do_not_include_local_as\n          - include_as_seq\n          - include_as_set\n          - include_as_confed_seq\n          - include_as_confed_set\n          - prepend_to_first_segment\n          default: do_not_include_local_as\n        segments:\n          description: \"The additional AS path segments to be added in the NLRI. \\\n            \\ By default, an empty AS path is always included and  the local AS is\\\n            \\ added to it as per the value of 'as_set_mode' attribute. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.AsPathSegment'\n    Bgp.AsPathSegment:\n      description: |-\n        Configuration for a single BGP AS path segment\n      type: object\n      properties:\n        type:\n          description: |-\n            AS sequence is the most common type of AS_PATH, it contains the  list of ASNs starting with the most recent ASN being added read  from left to right.\n            The other three AS_PATH types are used for Confederations - AS_SET is the type of AS_PATH attribute that summarizes routes using using the aggregate-address command, allowing AS_PATHs to be  summarized in the update as well. - AS_CONFED_SEQ gives the list of ASNs in the path starting with the  most recent ASN to be added reading left to right - AS_CONFED_SET will allow summarization of multiple AS PATHs to be  sent in BGP Updates.\n          type: string\n          enum:\n          - as_seq\n          - as_set\n          - as_confed_seq\n          - as_confed_set\n          default: as_seq\n        as_numbers:\n          description: |-\n            The AS numbers in this AS path segment.\n          type: array\n          items:\n            type: integer\n            format: int64\n            minimum: 0\n            maximum: 4294967295\n            default: 1\n    Bgp.AddPath:\n      description: |-\n        The BGP Additional Paths feature is a BGP extension that allows the  advertisement of multiple paths for the same prefix without the new  paths implicitly replacing any previous paths.\n      type: object\n      properties:\n        path_id:\n          description: |-\n            The id of the additional path.\n          type: integer\n          default: 1\n    Bgp.V6RouteRange:\n      description: |-\n        Emulated BGPv6 route range.\n        Configuration for BGP route ranges.\n      type: object\n      properties:\n        addresses:\n          description: |-\n            A list of group of IPv6 route addresses.\n          type: array\n          items:\n            $ref: '#/components/schemas/V6RouteAddress'\n        next_hop_mode:\n          description: \"Specify the NextHop in MP REACH NLRI. The mode for setting\\\n            \\ the IP address  of the NextHop in the MP REACH NLRI can be one of the\\\n            \\ following:\\n  Local IP: Automatically fills the Nexthop with the Local\\\n            \\ IP of the BGP peer.\\n  If BGP peer is of type IPv6, Nexthop Encoding\\\n            \\ capability should be enabled.\\n  Manual: Override the Nexthop with any\\\n            \\ arbitrary IPv4/IPv6 address.   \"\n          type: string\n          enum:\n          - local_ip\n          - manual\n          default: local_ip\n        next_hop_address_type:\n          description: \"If the Nexthop Mode is Manual, it sets the type of the NextHop\\\n            \\ IP address. \"\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv6\n        next_hop_ipv4_address:\n          description: |-\n            The IPv4 address of the next hop if the Nexthop Mode is manual and the Nexthop type is IPv4. If BGP peer is of type IPv6, Nexthop Encoding capability should be enabled.\n          type: string\n          format: ipv4\n          default: 0.0.0.0\n        next_hop_ipv6_address:\n          description: \"The IPv6 address of the next hop if the Nexthop Mode is manual\\\n            \\ and the Nexthop type is IPv6. \"\n          type: string\n          format: ipv6\n          default: ::0\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        as_path:\n          $ref: '#/components/schemas/Bgp.AsPath'\n        add_path:\n          $ref: '#/components/schemas/Bgp.AddPath'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    BgpSrte.V4Policy:\n      description: \"Configuration for BGP Segment Routing Traffic Engineering(SRTE)\\\n        \\ \\npolicy.\\n\"\n      type: object\n      required:\n      - ipv4_endpoint\n      - name\n      properties:\n        distinguisher:\n          description: |-\n            4-octet value uniquely identifying the policy in the context of (color, endpoint) tuple. It is used by the SR Policy originator to make unique (from an NLRI perspective)  both for multiple candidate  paths of the same SR Policy as well as candidate paths  of different SR Policies (i.e. with different segment list) with the same Color  and Endpoint but meant for different head-ends.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 1\n        color:\n          description: |-\n            Policy color is used to match the color of the destination prefixes to steer traffic into the SR Policy.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 100\n        ipv4_endpoint:\n          description: |-\n            Specifies a single node or a set of nodes (e.g. an anycast address). It is selected on the basis of the SR Policy type (AFI).\n          type: string\n          format: ipv4\n        next_hop_mode:\n          description: |-\n            Mode for choosing the NextHop in MP REACH NLRI. Available modes are : Local IP: Automatically fills the Nexthop with the Local IP of the BGP peer. For IPv6 BGP peer the Nexthop Encoding capability should be enabled. Manual: Override the Nexthop with any arbitrary IPv4/IPv6 address.\n          type: string\n          enum:\n          - local_ip\n          - manual\n          default: local_ip\n        next_hop_address_type:\n          description: \"Type of next hop IP address to be used when 'next_hop_mode'\\\n            \\ is set to 'manual'. \"\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv4\n        next_hop_ipv4_address:\n          description: |-\n            The IPv4 address of the next hop if the Nexthop type 'next_hop_mode' is 'manual' and the Nexthop type 'next_hop_address_type' is IPv4. If BGP peer is of type IPv6, Nexthop Encoding capability extended_next_hop_encoding should be enabled.\n          type: string\n          format: ipv4\n        next_hop_ipv6_address:\n          description: \"The IPv6 address of the next hop if the Nexthop Mode 'next_hop_address_type'\\\n            \\ is 'manual' and the Nexthop type 'next_hop_address_type' is IPv6. \"\n          type: string\n          format: ipv6\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        add_path:\n          $ref: '#/components/schemas/Bgp.AddPath'\n        as_path:\n          $ref: '#/components/schemas/Bgp.AsPath'\n        communities:\n          description: |-\n            Optional Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        tunnel_tlvs:\n          description: |-\n            List Tunnel Encapsulation Attributes.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V4TunnelTlv'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n    Bgp.ExtCommunity:\n      description: |-\n        The Extended Communities Attribute is a transitive optional BGP attribute, with the Type Code 16. Community and Extended Communities  attributes to trigger routing decisions, such as acceptance, rejection,  preference, or redistribution. An extended community is an 8-Bytes value. It is also divided into two main parts. The first 2 Bytes of the community encode a type and sub-type fields and the last 6 Bytes carry a unique set of data in a  format defined by the type and sub-type field. Extended communities provide a larger  range for grouping or categorizing communities.\n      type: object\n      properties:\n        type:\n          description: \"Extended Community Type field of 1 Byte.\\n - administrator_as_2octet:\\\n            \\ Two-Octet AS Specific Extended Community (RFC 4360).\\n - administrator_ipv4_address:\\\n            \\ IPv4 Address Specific Extended Community (RFC 4360).\\n - administrator_as_4octet:\\\n            \\  4-Octet AS Specific Extended Community (RFC 5668).\\n - opaque: Opaque\\\n            \\ Extended Community (RFC 7432).\\n - evpn: EVPN Extended Community (RFC\\\n            \\ 7153).  \\n - administrator_as_2octet_link_bandwidth : Link Bandwidth\\\n            \\ Extended Community (RFC 7153).\"\n          type: string\n          enum:\n          - administrator_as_2octet\n          - administrator_ipv4_address\n          - administrator_as_4octet\n          - opaque\n          - evpn\n          - administrator_as_2octet_link_bandwidth\n        subtype:\n          description: |-\n            Extended Community Sub Type field of 1 Byte.\n            - route_target: Route Target.\n            - origin: Origin.\n            - extended_bandwidth: Specifies the link bandwidth.\n            - color: Specifies the color value.\n            - encapsulation: Specifies the Encapsulation Extended Community.\n            - mac_address: Specifies the Extended community MAC address.\n          type: string\n          enum:\n          - route_target\n          - origin\n          - extended_bandwidth\n          - color\n          - encapsulation\n          - mac_address\n        value:\n          description: |-\n            Extended Community value of 6 Bytes. Example - for the Opaque type and Color subtype value can be '0000000000c8'  for the color value 200.\n          type: string\n          format: hex\n    BgpSrte.V4TunnelTlv:\n      description: |-\n        Configuration for BGP SRTE Tunnel TLV.\n      type: object\n      properties:\n        remote_endpoint_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.RemoteEndpointSubTlv'\n        color_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.ColorSubTlv'\n        binding_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.BindingSubTlv'\n        preference_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PreferenceSubTlv'\n        policy_priority_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PolicyPrioritySubTlv'\n        policy_name_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PolicyNameSubTlv'\n        explicit_null_label_policy_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.ExplicitNullLabelPolicySubTlv'\n        segment_lists:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.SegmentList'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n      required:\n      - name\n    BgpSrte.RemoteEndpointSubTlv:\n      description: |-\n        Configuration for the BGP remote endpoint sub TLV.\n      type: object\n      properties:\n        as_number:\n          description: |-\n            Autonomous system (AS) number\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 0\n        address_family:\n          description: |-\n            Determines the address type\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv4\n        ipv4_address:\n          description: |-\n            The IPv4 address of the Remote Endpoint.\n          type: string\n          format: ipv4\n          default: 0.0.0.0\n        ipv6_address:\n          description: |-\n            The IPv6 address of the Remote Endpoint.\n          type: string\n          format: ipv6\n          default: ::0\n    BgpSrte.ColorSubTlv:\n      description: \"Configuration for the Policy Color attribute sub-TLV. The Color\\\n        \\ sub-TLV MAY be used as a way to \\\"color\\\" the corresponding Tunnel TLV.\\\n        \\ The Value field of the sub-TLV is eight octets long and consists of a Color\\\n        \\ Extended Community. First two octets of its Value field are 0x030b as type\\\n        \\ and subtype of extended  community. Remaining six octets are are exposed\\\n        \\ to configure. \"\n      type: object\n      properties:\n        color:\n          description: |-\n            Six octet values. Example: 000000000064 for color value 100.\n          type: string\n          format: hex\n    BgpSrte.BindingSubTlv:\n      description: |-\n        Configuration for the binding SID sub-TLV.  This is used to signal the binding SID related information  of the SR Policy candidate path.\n      type: object\n      properties:\n        binding_sid_type:\n          description: |-\n            Type of the binding SID.  Supported types are \"No Binding SID\" or \"Four Octets Sid\" or \"IPv6 SID\".\n          type: string\n          enum:\n          - no_binding\n          - four_octet_sid\n          - ipv6_sid\n          default: no_binding\n        four_octet_sid:\n          description: \"Binding SID is encoded in 4 octets. \"\n          type: integer\n        ipv6_sid:\n          description: |-\n            IPv6 SID value.\n          type: string\n          format: ipv6\n        s_flag:\n          description: |-\n            S-Flag encodes the \"Specified-BSID-only\" behavior.\n          type: boolean\n          default: false\n        i_flag:\n          description: |-\n            I-Flag encodes the \"Drop Upon Invalid\" behavior.\n          type: boolean\n          default: false\n    BgpSrte.PreferenceSubTlv:\n      description: |-\n        Configuration for BGP preference sub TLV of the SR Policy candidate path.\n      type: object\n      properties:\n        preference:\n          description: |-\n            The preference value of the SR Policy candidate path.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 0\n    BgpSrte.PolicyPrioritySubTlv:\n      description: |-\n        Configuration for the Policy Priority sub-TLV. The Policy Priority to indicate the order in which the SR policies  are re-computed upon topological change.\n      type: object\n      properties:\n        policy_priority:\n          description: |-\n            One-octet Priority value.\n          type: integer\n          minimum: 0\n          maximum: 255\n    BgpSrte.PolicyNameSubTlv:\n      description: |-\n        Configuration for the Policy Name sub-TLV. The Policy Name sub-TLV is used to attach a symbolic name to the SR Policy candidate path.\n      type: object\n      properties:\n        policy_name:\n          description: |-\n            Symbolic name for the policy that should be a string of printable ASCII characters, without a NULL terminator.\n          type: string\n          minLength: 1\n          maxLength: 32\n    BgpSrte.ExplicitNullLabelPolicySubTlv:\n      description: |-\n        Configuration for BGP explicit null label policy sub TLV settings.\n      type: object\n      properties:\n        explicit_null_label_policy:\n          description: \"The value of the explicit null label policy \"\n          type: string\n          enum:\n          - reserved_enlp\n          - push_ipv4_enlp\n          - push_ipv6_enlp\n          - push_ipv4_ipv6_enlp\n          - do_not_push_enlp\n          default: do_not_push_enlp\n    BgpSrte.SegmentList:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Optional configuration for BGP SR TE Policy segment list. The Segment List sub-TLV encodes a single explicit path towards the Endpoint.\n      type: object\n      properties:\n        weight:\n          description: |-\n            The Weight associated with a given path and the sub-TLV is optional.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 0\n        segments:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.Segment'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n      required:\n      - name\n    BgpSrte.Segment:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        A Segment sub-TLV describes a single segment in a segment list  i.e., a single element of the explicit path. The Segment sub-TLVs are optional.\n      type: object\n      required:\n      - segment_type\n      - name\n      properties:\n        segment_type:\n          description: |-\n            Specify one of the segment type.\n            https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13\n            Type  A: SID only, in the form of MPLS Label.\n            Type  B: SID only, in the form of IPv6 Address.\n            Type  C: IPv4 Node Address with optional SID.\n            Type  D: IPv6 Node Address with optional SID for SR MPLS.\n            Type  E: IPv4 Address and index with optional SID.\n            Type  F: IPv4 Local and Remote addresses with optional SID.\n            Type  G: IPv6 Address and index for local and remote pair with optional\n                  SID for SR MPLS.\n            Type  H: IPv6 Local and Remote addresses with optional SID for SR MPLS.\n            Type  I: IPv6 Node Address with optional SID for SRv6.\n            Type  J: IPv6 Address and index for local and remote pair with optional\n                  SID for SRv6.\n            Type  K: IPv6 Local and Remote addresses for SRv6.\n          type: string\n          enum:\n          - type_a\n          - type_b\n          - type_c\n          - type_d\n          - type_e\n          - type_f\n          - type_g\n          - type_h\n          - type_i\n          - type_j\n          - type_k\n        type_a:\n          $ref: '#/components/schemas/BgpSrte.SegmentATypeSubTlv'\n        type_b:\n          $ref: '#/components/schemas/BgpSrte.SegmentBTypeSubTlv'\n        type_c:\n          $ref: '#/components/schemas/BgpSrte.SegmentCTypeSubTlv'\n        type_d:\n          $ref: '#/components/schemas/BgpSrte.SegmentDTypeSubTlv'\n        type_e:\n          $ref: '#/components/schemas/BgpSrte.SegmentETypeSubTlv'\n        type_f:\n          $ref: '#/components/schemas/BgpSrte.SegmentFTypeSubTlv'\n        type_g:\n          $ref: '#/components/schemas/BgpSrte.SegmentGTypeSubTlv'\n        type_h:\n          $ref: '#/components/schemas/BgpSrte.SegmentHTypeSubTlv'\n        type_i:\n          $ref: '#/components/schemas/BgpSrte.SegmentITypeSubTlv'\n        type_j:\n          $ref: '#/components/schemas/BgpSrte.SegmentJTypeSubTlv'\n        type_k:\n          $ref: '#/components/schemas/BgpSrte.SegmentKTypeSubTlv'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n    BgpSrte.SrMplsSid:\n      description: |-\n        Configuration for SR-MPLS with Label, TC, Bottom-of-Stack and TTL.\n      type: object\n      properties:\n        label:\n          description: |-\n            Label value in [0, 2^20 -1].\n          type: integer\n          minimum: 0\n          maximum: 1048575\n        tc:\n          description: |-\n            Traffic class in bits.\n          type: integer\n          minimum: 0\n          maximum: 7\n        s_bit:\n          description: |-\n            Bottom-of-Stack bit.\n          type: boolean\n        ttl:\n          description: \"Time To Live. \"\n          type: integer\n          minimum: 0\n          maximum: 255\n    BgpSrte.SRv6SIDEndpointBehaviorAndStructure:\n      description: |-\n        Configuration for SRv6 Endpoint Behavior and SID Structure.  Its optional. Summation of lengths for Locator Block, Locator Node,  Function, and Argument MUST be less than or equal to 128.\n      type: object\n      properties:\n        lb_length:\n          description: |-\n            SRv6 SID Locator Block length in bits.\n          type: integer\n          minimum: 0\n          maximum: 128\n          default: 0\n        ln_length:\n          description: |-\n            SRv6 SID Locator Node length in bits.\n          type: integer\n          minimum: 0\n          maximum: 128\n          default: 0\n        func_length:\n          description: |-\n            SRv6 SID Function length in bits.\n          type: integer\n          minimum: 0\n          maximum: 128\n          default: 0\n        arg_length:\n          description: |-\n            SRv6 SID Arguments length in bits.\n          type: integer\n          minimum: 0\n          maximum: 128\n          default: 0\n    BgpSrte.SegmentATypeSubTlv:\n      description: |-\n        Type  A: SID only, in the form of MPLS Label.\n        Configuration for SR-MPLS with Label, TC, Bottom-of-Stack and TTL.\n      type: object\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        label:\n          description: |-\n            Label value in [0, 2^20 -1].\n          type: integer\n          minimum: 0\n          maximum: 1048575\n        tc:\n          description: |-\n            Traffic class in bits.\n          type: integer\n          minimum: 0\n          maximum: 7\n        s_bit:\n          description: |-\n            Bottom-of-Stack bit.\n          type: boolean\n        ttl:\n          description: \"Time To Live. \"\n          type: integer\n          minimum: 0\n          maximum: 255\n    BgpSrte.SegmentBTypeSubTlv:\n      description: |-\n        Type  B: SID only, in the form of IPv6 address.\n      type: object\n      required:\n      - srv6_sid\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        srv6_sid:\n          description: |-\n            SRv6 SID.\n          type: string\n          format: ipv6\n        srv6_sid_endpoint_behavior:\n          description: |-\n            Optional SRv6 Endpoint Behavior and SID Structure.\n          $ref: '#/components/schemas/BgpSrte.SRv6SIDEndpointBehaviorAndStructure'\n    BgpSrte.SegmentCTypeSubTlv:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Type C: IPv4 Node Address with optional SID.\n      type: object\n      required:\n      - ipv4_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        sr_algorithm:\n          description: |-\n            SR Algorithm identifier when A-Flag in on.\n          type: integer\n          minimum: 0\n          maximum: 255\n          default: 0\n        ipv4_node_address:\n          description: |-\n            IPv4 address representing a node.\n          type: string\n          format: ipv4\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentDTypeSubTlv:\n      description: |-\n        Type D: IPv6 Node Address with optional SID for SR MPLS.\n      type: object\n      required:\n      - ipv6_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        sr_algorithm:\n          description: |-\n            specifying SR Algorithm when when A-Flag as defined in above flags.\n          type: integer\n          minimum: 0\n          maximum: 255\n          default: 0\n        ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentETypeSubTlv:\n      description: |-\n        Type E: IPv4 Address and Local Interface ID with optional SID\n      type: object\n      required:\n      - ipv4_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        local_interface_id:\n          description: |-\n            Local Interface ID: The Interface Index as defined in [RFC8664].\n          type: integer\n          minimum: 0\n          maximum: 2147483647\n          default: 0\n        ipv4_node_address:\n          description: |-\n            IPv4 address representing a node.\n          type: string\n          format: ipv4\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentFTypeSubTlv:\n      description: |-\n        Type F: IPv4 Local and Remote addresses with optional SID.\n      type: object\n      required:\n      - local_ipv4_address\n      - remote_ipv4_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        local_ipv4_address:\n          description: |-\n            Local IPv4 Address.\n          type: string\n          format: ipv4\n        remote_ipv4_address:\n          description: |-\n            Remote IPv4 Address.\n          type: string\n          format: ipv4\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentGTypeSubTlv:\n      description: |-\n        Type G: IPv6 Address, Interface ID for local and remote pair with optional SID for SR MPLS.\n      type: object\n      required:\n      - local_ipv6_node_address\n      - remote_ipv6_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        local_interface_id:\n          description: |-\n            Local Interface ID: The Interface Index as defined in [RFC8664].\n          type: integer\n          minimum: 0\n          maximum: 2147483647\n          default: 0\n        local_ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        remote_interface_id:\n          description: |-\n            Local Interface ID: The Interface Index as defined in [RFC8664].\n          type: integer\n          minimum: 0\n          maximum: 2147483647\n          default: 0\n        remote_ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentHTypeSubTlv:\n      description: |-\n        Type H: IPv6 Local and Remote addresses with optional SID for SR MPLS.\n      type: object\n      required:\n      - local_ipv6_address\n      - remote_ipv6_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        local_ipv6_address:\n          description: |-\n            Local IPv6 Address.\n          type: string\n          format: ipv6\n        remote_ipv6_address:\n          description: |-\n            Remote IPv6 Address.\n          type: string\n          format: ipv6\n        sr_mpls_sid:\n          description: |-\n            Optional SR-MPLS SID.\n          $ref: '#/components/schemas/BgpSrte.SrMplsSid'\n    BgpSrte.SegmentITypeSubTlv:\n      description: |-\n        Type I: IPv6 Node Address with optional SRv6 SID.\n      type: object\n      required:\n      - ipv6_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        srv6_sid:\n          description: |-\n            Optional SRv6 SID.\n          type: string\n          format: ipv6\n        srv6_sid_endpoint_behavior:\n          description: |-\n            Optional SRv6 Endpoint Behavior and SID Structure.\n          $ref: '#/components/schemas/BgpSrte.SRv6SIDEndpointBehaviorAndStructure'\n    BgpSrte.SegmentJTypeSubTlv:\n      description: |-\n        Type J: IPv6 Address, Interface ID for local and remote pair for SRv6 with optional SID.\n      type: object\n      required:\n      - local_ipv6_node_address\n      - remote_ipv6_node_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        sr_algorithm:\n          description: |-\n            SR Algorithm identifier when A-Flag in on.\n          type: integer\n          minimum: 0\n          maximum: 255\n          default: 0\n        local_interface_id:\n          description: |-\n            Local Interface ID: The Interface Index as defined in [RFC8664].\n          type: integer\n          minimum: 0\n          maximum: 2147483647\n          default: 0\n        local_ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        remote_interface_id:\n          description: |-\n            Local Interface ID: The Interface Index as defined in [RFC8664].\n          type: integer\n          minimum: 0\n          maximum: 2147483647\n          default: 0\n        remote_ipv6_node_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        srv6_sid:\n          description: |-\n            Optional SRv6 SID.\n          type: string\n          format: ipv6\n        srv6_sid_endpoint_behavior:\n          description: |-\n            Optional SRv6 Endpoint Behavior and SID Structure.\n          $ref: '#/components/schemas/BgpSrte.SRv6SIDEndpointBehaviorAndStructure'\n    BgpSrte.SegmentKTypeSubTlv:\n      description: |-\n        Type K: IPv6 Local and Remote addresses for SRv6 with optional SID.\n      type: object\n      required:\n      - local_ipv6_address\n      - remote_ipv6_address\n      properties:\n        flags:\n          description: |-\n            One octet bitmap for flags including V-Flag, A-Flag, S-Flag, B-Flag etc. as defined in https://datatracker.ietf.org/doc/html/draft-ietf-idr-segment-routing-te-policy-13#section-2.4.4.2.12\n          type: string\n          format: hex\n        sr_algorithm:\n          description: |-\n            SR Algorithm identifier when A-Flag in on.\n          type: integer\n          minimum: 0\n          maximum: 255\n          default: 0\n        local_ipv6_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        remote_ipv6_address:\n          description: |-\n            IPv6 address representing a node.\n          type: string\n          format: ipv6\n        srv6_sid:\n          description: |-\n            Optional SRv6 SID.\n          type: string\n          format: ipv6\n        srv6_sid_endpoint_behavior:\n          description: |-\n            Optional SRv6 Endpoint Behavior and SID Structure.\n          $ref: '#/components/schemas/BgpSrte.SRv6SIDEndpointBehaviorAndStructure'\n    BgpSrte.V6Policy:\n      description: |\n        Configuration for BGP Segment Routing Traffic Engineering policy.\n      type: object\n      required:\n      - ipv6_endpoint\n      - name\n      properties:\n        distinguisher:\n          description: |-\n            Identifies the policy in the context of (color and endpoint) tuple.  It is used by the SR Policy originator to make unique multiple  occurrences of the same SR Policy.\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 1\n        color:\n          description: \"Identifies the policy. It is used to match the color of the\\\n            \\  destination prefixes to steer traffic into the SR Policy. \"\n          type: integer\n          format: int64\n          minimum: 0\n          maximum: 4294967295\n          default: 100\n        ipv6_endpoint:\n          description: |-\n            Specifies a single node or a set of nodes (e.g., an anycast address). It is selected on the basis of the SR Policy type (AFI).\n          type: string\n          format: ipv6\n        next_hop_mode:\n          description: |-\n            Mode for choosing the NextHop in MP REACH NLRI. Available modes are : Local IP: Automatically fills the Nexthop with the Local IP of the BGP peer. For IPv6 BGP peer the Nexthop Encoding capability should be enabled. Manual: Override the Nexthop with any arbitrary IPv4/IPv6 address.\n          type: string\n          enum:\n          - local_ip\n          - manual\n          default: local_ip\n        next_hop_address_type:\n          description: \"Type of next hop IP address to be used when 'next_hop_mode'\\\n            \\ is set to 'manual'. \"\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv6\n        next_hop_ipv4_address:\n          description: |-\n            The IPv4 address of the Nexthop if the 'next_hop_mode' is 'manual' and the Nexthop type 'next_hop_address_type' is IPv4. If BGP peer is of type IPv6, Nexthop Encoding capability extended_next_hop_encoding should be enabled.\n          type: string\n          format: ipv4\n          default: 0.0.0.0\n        next_hop_ipv6_address:\n          description: \"The IPv6 address of the next hop if the Nexthop Mode 'next_hop_address_type'\\\n            \\ is 'manual' and the Nexthop type 'next_hop_address_type' is IPv6. \"\n          type: string\n          format: ipv6\n          default: ::0\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        add_path:\n          $ref: '#/components/schemas/Bgp.AddPath'\n        as_path:\n          $ref: '#/components/schemas/Bgp.AsPath'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        extcommunities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        tunnel_tlvs:\n          description: |-\n            List of optional tunnel TLV settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V6TunnelTlv'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n    BgpSrte.V6TunnelTlv:\n      description: |-\n        Configuration for BGP SRTE Tunnel TLV.\n      type: object\n      properties:\n        remote_endpoint_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.RemoteEndpointSubTlv'\n        color_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.ColorSubTlv'\n        binding_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.BindingSubTlv'\n        preference_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PreferenceSubTlv'\n        policy_priority_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PolicyPrioritySubTlv'\n        policy_name_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.PolicyNameSubTlv'\n        explicit_null_label_policy_sub_tlv:\n          $ref: '#/components/schemas/BgpSrte.ExplicitNullLabelPolicySubTlv'\n        segment_lists:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.SegmentList'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n        active:\n          description: |-\n            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.\n          type: boolean\n          default: true\n      required:\n      - name\n    BgpV4.EthernetSegment:\n      description: \"Configuration for BGP Ethernet Segment ranges. Advertises following\\\n        \\ routes - \\n\\nType 4 - Ethernet Segment Route\"\n      type: object\n      properties:\n        df_election:\n          description: |-\n            Designated Forwarder (DF) election configuration.\n          $ref: '#/components/schemas/Bgp.EthernetSegment.DfElection'\n        evis:\n          description: |-\n            This contains the list of EVIs.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV4.EvpnEvis'\n        esi:\n          description: |-\n            10-octet Ethernet Segment Identifier (ESI) Example - For multi-home scenario nonZero ESI is '10000000000000000000' .\n          type: string\n          format: hex\n          default: '00000000000000000000'\n        active_mode:\n          description: |-\n            Single Active or All Active mode Redundancy mode selection for Multi-home.\n          type: string\n          enum:\n          - single_active\n          - all_active\n          default: all_active\n        esi_label:\n          description: \"The label value to be advertised as ESI Label in ESI Label\\\n            \\ Extended Community. This is included in Ethernet Auto-discovery per\\\n            \\ ES Routes advertised by a router. \"\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        as_path:\n          description: |-\n            Optional AS PATH settings.\n          $ref: '#/components/schemas/Bgp.AsPath'\n    Bgp.EthernetSegment.DfElection:\n      description: |-\n        Configuration for Designated Forwarder (DF) election among the Provider Edge (PE) routers on the same Ethernet Segment.\n      type: object\n      properties:\n        election_timer:\n          description: |-\n            The DF election timer in seconds.\n          type: integer\n          minimum: 1\n          maximum: 300\n          default: 3\n    BgpV4.EvpnEvis:\n      description: \"This contains a list of different flavors of EVPN. \\nFor example\\\n        \\ EVPN over VXLAN or EVPN over MPLS etc to be configured per Ethernet segment.\\\n        \\ \\nNeed to instantiate correct type of EVPN instance as per requirement.\"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - evi_vxlan\n          default: evi_vxlan\n        evi_vxlan:\n          description: \"EVPN VXLAN instance to be configured per Ethernet Segment.\\\n            \\                  \"\n          $ref: '#/components/schemas/BgpV4.EviVxlan'\n    BgpV4.EviVxlan:\n      description: \"Configuration for BGP EVPN EVI. Advertises following routes -\\\n        \\ \\n\\nType 3 - Inclusive Multicast Ethernet Tag Route\\n\\nType 1 -  Ethernet\\\n        \\ Auto-discovery Route (Per EVI)\\n\\nType 1 -  Ethernet Auto-discovery Route\\\n        \\ (Per ES)\"\n      type: object\n      properties:\n        broadcast_domains:\n          description: |-\n            This contains the list of Broadcast Domains to be configured per EVI.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV4.EviVxlan.BroadcastDomain'\n        replication_type:\n          description: |-\n            This model only supports Ingress Replication\n          type: string\n          enum:\n          - ingress_replication\n          default: ingress_replication\n        pmsi_label:\n          description: |-\n            Downstream assigned VNI to be carried as Part of P-Multicast Service Interface Tunnel attribute (PMSI Tunnel Attribute) in Type 3 Inclusive Multicast Ethernet Tag Route.\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 16\n        ad_label:\n          description: |-\n            The Auto-discovery Route label (AD label) value, which gets advertised in the Ethernet Auto-discovery Route per \u003cEVI, ESI\u003e\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        route_distinguisher:\n          description: |-\n            Colon separated Extended Community value of 6 Bytes - \"AS number: Value\" identifying an EVI.            Example - for the as_2octet \"60005:100\".\n          $ref: '#/components/schemas/Bgp.RouteDistinguisher'\n        route_target_export:\n          description: \"List of Layer 2 Virtual Network Identifier (L2VNI) export\\\n            \\ targets associated with this EVI. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        route_target_import:\n          description: \"List of L2VNI import targets associated with this EVI. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        l3_route_target_export:\n          description: |-\n            List of Layer 3 Virtual Network Identifier (L3VNI) Export Route Targets.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        l3_route_target_import:\n          description: |-\n            List of L3VNI Import Route Targets.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        as_path:\n          description: |-\n            Optional AS PATH settings.\n          $ref: '#/components/schemas/Bgp.AsPath'\n    Bgp.RouteDistinguisher:\n      description: |-\n        BGP Route Distinguisher.\n      type: object\n      properties:\n        rd_type:\n          description: \"Route Distinguisher Type field of 2 Byte.\\n - as_2octet: Two-Octet\\\n            \\ AS Specific Extended Community (RFC 4360).\\n - ipv4_address: IPv4 Address\\\n            \\ Specific Extended Community (RFC 4360).\\n - as_4octet:  4-Octet AS Specific\\\n            \\ Extended Community (RFC 5668). \"\n          type: string\n          enum:\n          - as_2octet\n          - ipv4_address\n          - as_4octet\n          default: as_2octet\n        auto_config_rd_ip_addr:\n          description: |-\n            Allow to automatically configure RD IP address  from local ip.\n          type: boolean\n          default: false\n        rd_value:\n          description: |-\n            Colon separated Extended Community value of 6 Bytes - \"AS number: Value\".  Example - for the as_2octet or as_4octet \"60005:100\",  for ipv4_address \"1.1.1.1:100\"\n          type: string\n    Bgp.RouteTarget:\n      description: |-\n        BGP Route Target.\n      type: object\n      properties:\n        rt_type:\n          description: \"Extended Community Type field of 2 Byte.\\n - as_2octet: Two-Octet\\\n            \\ AS Specific Extended Community (RFC 4360).\\n - ipv4_address: IPv4 Address\\\n            \\ Specific Extended Community (RFC 4360).\\n - as_4octet:  4-Octet AS Specific\\\n            \\ Extended Community (RFC 5668). \"\n          type: string\n          enum:\n          - as_2octet\n          - ipv4_address\n          - as_4octet\n        rt_value:\n          description: |-\n            Colon separated Extended Community value of 6 Bytes - AS number: Assigned Number.   Example - for the as_2octet or as_4octet \"60005:100\",  for ipv4_address \"1.1.1.1:100\"\n          type: string\n    BgpV4.EviVxlan.BroadcastDomain:\n      description: |-\n        Configuration for Broadcast Domains per EVI.\n      type: object\n      properties:\n        cmac_ip_range:\n          description: \"This contains the list of Customer MAC/IP Ranges to be configured\\\n            \\ per Broadcast Domain. \\n\\nAdvertises following route - \\nType 2 - MAC/IP\\\n            \\ Advertisement Route.\"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.CMacIpRange'\n        ethernet_tag_id:\n          description: |-\n            The Ethernet Tag ID of the Broadcast Domain.\n          type: integer\n          minimum: 0\n          maximum: 4294967295\n          default: 0\n        vlan_aware_service:\n          description: |-\n            VLAN-Aware service to be enabled or disabled.\n          type: boolean\n          default: false\n    Bgp.CMacIpRange:\n      description: \"Configuration for MAC/IP Ranges per Broadcast Domain. \\n\\nAdvertises\\\n        \\ following route -\\n\\nType 2 - MAC/IP Advertisement Route.\"\n      type: object\n      properties:\n        mac_addresses:\n          description: \"Host MAC address range per Broadcast Domain. \"\n          $ref: '#/components/schemas/MACRouteAddress'\n        l2vni:\n          description: |-\n            Layer 2 Virtual Network Identifier (L2VNI) to be advertised with MAC/IP Advertisement Route (Type 2)\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        ipv4_addresses:\n          description: \"Host IPv4 address range per Broadcast Domain.         \"\n          $ref: '#/components/schemas/V4RouteAddress'\n        ipv6_addresses:\n          description: \"Host IPv6 address range per Broadcast Domain.            \\\n            \\     \"\n          $ref: '#/components/schemas/V6RouteAddress'\n        l3vni:\n          description: |-\n            Layer 3 Virtual Network Identifier (L3VNI) to be advertised with MAC/IP Advertisement Route (Type 2).\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        include_default_gateway:\n          description: |-\n            Include default Gateway Extended Community in MAC/IP Advertisement Route (Type 2).\n          type: boolean\n          default: false\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        as_path:\n          description: |-\n            Optional AS PATH settings.\n          $ref: '#/components/schemas/Bgp.AsPath'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n      required:\n      - name\n    Bgp.V6Peer:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for BGPv6 peer settings and routes.\n        Configuration for basic emulated BGP peer settings.\n      type: object\n      required:\n      - peer_address\n      - as_type\n      - as_number\n      - name\n      properties:\n        peer_address:\n          description: |-\n            IPv6 address of the BGP peer for the session\n          type: string\n          format: ipv6\n        segment_routing:\n          $ref: '#/components/schemas/Bgp.V6SegmentRouting'\n        evpn_ethernet_segments:\n          description: \"This contains the list of Ethernet Virtual Private Network\\\n            \\ (EVPN) Ethernet Segments (ES) Per BGP Peer for IPv6 Address Family Identifier\\\n            \\ (AFI).\\n\\nEach Ethernet Segment contains a list of EVPN Instances (EVIs)\\\n            \\ . \\nEach EVI contains a list of Broadcast Domains. \\nEach Broadcast\\\n            \\ Domain contains a list of MAC/IP Ranges. \\n\\n\u003cEthernet Segment, EVI,\\\n            \\ Broadcast Domain\u003e is responsible for advertising Ethernet Auto-discovery\\\n            \\ Route Per EVI (Type 1).\\n\\n\u003cEthernet Segment, EVI\u003e is responsible for\\\n            \\ advertising Ethernet Auto-discovery Route Per Ethernet Segment (Type\\\n            \\ 1).\\n\\n\u003cEthernet Segment, EVI, Broadcast Domain, MAC/IP\u003e is responsible\\\n            \\ for advertising MAC/IP Advertisement Route (Type 2).\\n\\n\u003cEthernet Segment,\\\n            \\ EVI, Broadcast Domain\u003e is responsible for advertising Inclusive Multicast\\\n            \\ Ethernet Tag Route (Type 3).\\n\\nEthernet Segment is responsible for\\\n            \\ advertising Ethernet Segment Route (Type 4).\"\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV6.EthernetSegment'\n        as_type:\n          description: |-\n            The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp). Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as 'ebgp' then other properties will need to be specified as per an external BGP peer. Specifically, for 'ebgp',  'as_set_mode' attribute in 'as_path' field  in any Route Range should be changed from default value 'do_not_include_local_as' to any other value.\n          type: string\n          enum:\n          - ibgp\n          - ebgp\n        as_number:\n          description: |-\n            Autonomous System Number (AS number or ASN)\n          type: integer\n        as_number_width:\n          description: |-\n            The width in bytes of the as_number values. Any as_number values that exceeds the width MUST result in an error.\n          type: string\n          enum:\n          - two\n          - four\n          default: four\n        advanced:\n          $ref: '#/components/schemas/Bgp.Advanced'\n        capability:\n          $ref: '#/components/schemas/Bgp.Capability'\n        learned_information_filter:\n          $ref: '#/components/schemas/Bgp.LearnedInformationFilter'\n        v4_routes:\n          description: |-\n            Emulated BGPv4 route ranges.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V4RouteRange'\n        v6_routes:\n          description: |-\n            Emulated BGPv6 route ranges.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V6RouteRange'\n        v4_srte_policies:\n          description: |-\n            Segment Routing Traffic Engineering (SR TE) Policies for IPv4 Address Family Identifier (AFI).\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V4Policy'\n        v6_srte_policies:\n          description: |-\n            Segment Routing Traffic Engineering (SR TE) Policies for IPv6 Address Family Identifier (AFI).\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpSrte.V6Policy'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Bgp.V6Interface:\n      description: |-\n        Configuration for emulated BGPv6 peers and routes on a single IPv6 interface.\n      type: object\n      required:\n      - ipv6_name\n      properties:\n        ipv6_name:\n          description: |\n            The unique name of IPv6 or Loopback IPv6 interface used as the source IP for this list of BGP peers.\n\n            x-constraint:\n            - /components/schemas/Device.Ipv6/properties/name\n            - /components/schemas/Device.Ipv6Loopback/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv6/properties/name\n          - /components/schemas/Device.Ipv6Loopback/properties/name\n        peers:\n          description: |-\n            This contains the list of BGPv6 peers configured on this interface.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.V6Peer'\n    Bgp.V6SegmentRouting:\n      x-status: under-review\n      description: |-\n        Status: under-review\n        Configuration for BGPv6 segment routing settings.\n      type: object\n      properties:\n        ingress_supports_vpn:\n          description: |-\n            TBD\n          type: boolean\n          default: false\n        reduced_encapsulation:\n          description: |-\n            TBD\n          type: boolean\n          default: false\n        copy_time_to_live:\n          description: |-\n            TBD\n          type: boolean\n          default: false\n        time_to_live:\n          description: |-\n            TBD\n          type: integer\n          default: 0\n        max_sids_per_srh:\n          description: |-\n            TBD\n          type: integer\n          default: 0\n        auto_generate_segment_left_value:\n          description: |-\n            TBD\n          type: boolean\n          default: false\n        segment_left_value:\n          description: |-\n            TBD\n          type: integer\n          default: 0\n        advertise_sr_te_policy:\n          description: |-\n            TBD\n          type: boolean\n          default: false\n    BgpV6.EthernetSegment:\n      description: |-\n        Configuration for BGP Ethernet Segment ranges. Advertises following routes -\n\n        Type 4 - Ethernet Segment Route\n      type: object\n      properties:\n        df_election:\n          description: |-\n            Designated Forwarder (DF) election configuration.\n          $ref: '#/components/schemas/Bgp.EthernetSegment.DfElection'\n        evis:\n          description: |-\n            This contains the list of EVIs.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV6.EvpnEvis'\n        esi:\n          description: |-\n            10-octet Ethernet Segment Identifier (ESI) Example - For multi-home scenario nonZero ESI is '10000000000000000000' .\n          type: string\n          format: hex\n          default: '00000000000000000000'\n        active_mode:\n          description: |-\n            Single Active or All Active mode Redundancy mode selection for Multi-home.\n          type: string\n          enum:\n          - single_active\n          - all_active\n          default: all_active\n        esi_label:\n          description: \"The label value to be advertised as ESI Label in ESI Label\\\n            \\ Extended Community. This is included in Ethernet Auto-discovery per\\\n            \\ ES Routes advertised by a router. \"\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        as_path:\n          description: |-\n            Optional AS PATH settings.\n          $ref: '#/components/schemas/Bgp.AsPath'\n    BgpV6.EvpnEvis:\n      description: \"This contains a list of different flavors of EVPN. \\nFor example\\\n        \\ EVPN over VXLAN or EVPN over MPLS etc to be configured per Ethernet segment.\\\n        \\ \\nNeed to instantiate correct type of EVPN instance as per requirement.\"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - evi_vxlan\n          default: evi_vxlan\n        evi_vxlan:\n          description: \"EVPN VXLAN instance to be configured per Ethernet Segment.\\\n            \\                    \"\n          $ref: '#/components/schemas/BgpV6.EviVxlan'\n    BgpV6.EviVxlan:\n      description: |-\n        Configuration for BGP EVPN EVI. Advertises following routes -\n\n        Type 3 - Inclusive Multicast Ethernet Tag Route\n\n        Type 1 -  Ethernet Auto-discovery Route (Per EVI)\n\n        Type 1 -  Ethernet Auto-discovery Route (Per ES)\n      type: object\n      properties:\n        broadcast_domains:\n          description: |-\n            This contains the list of Broadcast Domains to be configured per EVI.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpV6.EviVxlan.BroadcastDomain'\n        replication_type:\n          description: |-\n            This model only supports Ingress Replication\n          type: string\n          enum:\n          - ingress_replication\n          default: ingress_replication\n        pmsi_label:\n          description: |-\n            Downstream assigned VNI to be carried as Part of P-Multicast Service Interface Tunnel attribute (PMSI Tunnel Attribute) in Type 3 Inclusive Multicast Ethernet Tag Route.\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 16\n        ad_label:\n          description: |-\n            The Auto-discovery Route label (AD label) value, which gets advertised in the Ethernet Auto-discovery Route per \u003cEVI, ESI\u003e\n          type: integer\n          minimum: 0\n          maximum: 16777215\n          default: 0\n        route_distinguisher:\n          description: |-\n            Colon separated Extended Community value of 6 Bytes - \"AS number: Value\" identifying an EVI.            Example - for the as_2octet \"60005:100\".\n          $ref: '#/components/schemas/Bgp.RouteDistinguisher'\n        route_target_export:\n          description: \"List of Layer 2 Virtual Network Identifier (L2VNI) export\\\n            \\ targets associated with this EVI. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        route_target_import:\n          description: \"List of L2VNI import targets associated with this EVI. \"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        l3_route_target_export:\n          description: |-\n            List of Layer 3 Virtual Network Identifier (L3VNI) Export Route Targets.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        l3_route_target_import:\n          description: |-\n            List of L3VNI Import Route Targets.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.RouteTarget'\n        advanced:\n          $ref: '#/components/schemas/Bgp.RouteAdvanced'\n        communities:\n          description: |-\n            Optional community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.Community'\n        ext_communities:\n          description: |-\n            Optional Extended Community settings.\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.ExtCommunity'\n        as_path:\n          description: |-\n            Optional AS PATH settings.\n          $ref: '#/components/schemas/Bgp.AsPath'\n    BgpV6.EviVxlan.BroadcastDomain:\n      description: |-\n        Configuration for Broadcast Domains per EVI.\n      type: object\n      properties:\n        cmac_ip_range:\n          description: \"This contains the list of Customer MAC/IP Ranges to be configured\\\n            \\ per Broadcast Domain. \\n\\nAdvertises following route - \\nType 2 - MAC/IP\\\n            \\ Advertisement Route.\"\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgp.CMacIpRange'\n        ethernet_tag_id:\n          description: |-\n            The Ethernet Tag ID of the Broadcast Domain.\n          type: integer\n          minimum: 0\n          maximum: 4294967295\n          default: 0\n        vlan_aware_service:\n          description: |-\n            VLAN-Aware service to be enabled or disabled.\n          type: boolean\n          default: false\n    Device.Vxlan:\n      properties:\n        v4_tunnels:\n          description: |-\n            IPv4 VXLAN Tunnels\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.V4Tunnel'\n        v6_tunnels:\n          description: |-\n            IPv6 VXLAN Tunnels\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.V6Tunnel'\n    Vxlan.V4Tunnel:\n      description: |-\n        Configuration and operational state parameters relating to IPv4 VXLAN tunnel end-point interface.\n      type: object\n      required:\n      - source_interface\n      - vni\n      - name\n      properties:\n        source_interface:\n          description: |\n            Determines the source interface.\n\n            x-constraint:\n            - /components/schemas/Device.Ipv4/properties/name\n            - /components/schemas/Device.Ipv4Loopback/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv4/properties/name\n          - /components/schemas/Device.Ipv4Loopback/properties/name\n        destination_ip_mode:\n          $ref: '#/components/schemas/Vxlan.V4Tunnel.DestinationIPMode'\n        vni:\n          description: |-\n            VXLAN Network Identifier (VNI) to distinguish network instances on the wire\n          type: integer\n          minimum: 1\n          maximum: 16777215\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Vxlan.V6Tunnel:\n      description: |-\n        Configuration and operational state parameters relating to IPv6 VXLAN tunnel end-point interface.\n      type: object\n      required:\n      - source_interface\n      - vni\n      - name\n      properties:\n        source_interface:\n          description: |\n            Determines the source interface.\n\n            x-constraint:\n            - /components/schemas/Device.Ipv6/properties/name\n            - /components/schemas/Device.Ipv6Loopback/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv6/properties/name\n          - /components/schemas/Device.Ipv6Loopback/properties/name\n        destination_ip_mode:\n          $ref: '#/components/schemas/Vxlan.V6Tunnel.DestinationIPMode'\n        vni:\n          description: |-\n            VXLAN Network Identifier (VNI) to distinguish network instances on the wire\n          type: integer\n          minimum: 1\n          maximum: 16777215\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Vxlan.V4Tunnel.DestinationIPMode:\n      description: |-\n        Communication mode between the VTEPs, either unicast or multicast.\n      type: object\n      properties:\n        choice:\n          description: |-\n            unicast or multicast\n          type: string\n          enum:\n          - unicast\n          - multicast\n          default: multicast\n        unicast:\n          $ref: '#/components/schemas/Vxlan.V4Tunnel.DestinationIPMode.Unicast'\n        multicast:\n          $ref: '#/components/schemas/Vxlan.V4Tunnel.DestinationIPMode.Multicast'\n    Vxlan.V6Tunnel.DestinationIPMode:\n      description: |-\n        Communication mode between the VTEPs, either unicast or multicast.\n      type: object\n      properties:\n        choice:\n          description: |-\n            unicast or multicast\n          type: string\n          enum:\n          - unicast\n          - multicast\n          default: multicast\n        unicast:\n          $ref: '#/components/schemas/Vxlan.V6Tunnel.DestinationIPMode.Unicast'\n        multicast:\n          $ref: '#/components/schemas/Vxlan.V6Tunnel.DestinationIPMode.Multicast'\n    Vxlan.V4Tunnel.DestinationIPMode.Unicast:\n      properties:\n        vteps:\n          description: |-\n            List of VTEPs for member VNI(VXLAN Network Identifier)\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.V4Tunnel.DestinationIPMode.Unicast.Vtep'\n    Vxlan.V6Tunnel.DestinationIPMode.Unicast:\n      properties:\n        vteps:\n          description: |-\n            List of VTEPs for member VNI(VXLAN Network Identifier)\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.V6Tunnel.DestinationIPMode.Unicast.Vtep'\n    Vxlan.Tunnel.DestinationIPMode.Unicast.ArpSuppressionCache:\n      description: |-\n        Each VTEP maintains an ARP suppression cache table for known IP hosts and their associated MAC addresses in the VNI segment.  When an end host in the VNI sends an ARP request for another end-host IP address,  its local VTEP intercepts the ARP request and checks for the ARP-resolved IP address in its ARP suppression cache table.  If it finds a match, the local VTEP sends an ARP response on behalf of the remote end host.\n      type: object\n      properties:\n        remote_vm_mac:\n          description: |-\n            Remote VM MAC address bound to Remote VM IPv4 address\n          type: string\n          format: mac\n        remote_vm_ipv4:\n          description: |-\n            Remote VM IPv4 address\n          type: string\n          format: ipv4\n    Vxlan.V4Tunnel.DestinationIPMode.Unicast.Vtep:\n      description: |-\n        VTEP (VXLAN Tunnel End Point (VTEP)) parameters\n        DestinationIPMode Unicast VTEP Base\n      type: object\n      properties:\n        remote_vtep_address:\n          description: |-\n            Remote VXLAN Tunnel End Point address\n          type: string\n          format: ipv4\n        arp_suppression_cache:\n          description: |-\n            Each VTEP maintains an ARP suppression cache table for known IP hosts and their associated MAC addresses in the VNI segment.  When an end host in the VNI sends an ARP request for another end-host IP address,  its local VTEP intercepts the ARP request and checks for the ARP-resolved IP address in its ARP suppression cache table.  If it finds a match, the local VTEP sends an ARP response on behalf of the remote end host.\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.Tunnel.DestinationIPMode.Unicast.ArpSuppressionCache'\n    Vxlan.V6Tunnel.DestinationIPMode.Unicast.Vtep:\n      description: |-\n        VTEP (VXLAN Tunnel End Point (VTEP)) parameters\n        DestinationIPMode Unicast VTEP Base\n      type: object\n      properties:\n        remote_vtep_address:\n          description: |-\n            Remote VXLAN Tunnel End Point address\n          type: string\n          format: ipv6\n        arp_suppression_cache:\n          description: |-\n            Each VTEP maintains an ARP suppression cache table for known IP hosts and their associated MAC addresses in the VNI segment.  When an end host in the VNI sends an ARP request for another end-host IP address,  its local VTEP intercepts the ARP request and checks for the ARP-resolved IP address in its ARP suppression cache table.  If it finds a match, the local VTEP sends an ARP response on behalf of the remote end host.\n          type: array\n          items:\n            $ref: '#/components/schemas/Vxlan.Tunnel.DestinationIPMode.Unicast.ArpSuppressionCache'\n    Vxlan.V4Tunnel.DestinationIPMode.Multicast:\n      description: |-\n        Multicast Group address for member VNI(VXLAN Network Identifier)\n      type: object\n      properties:\n        address:\n          description: |-\n            IPv4 Multicast address\n          type: string\n          format: ipv4\n    Vxlan.V6Tunnel.DestinationIPMode.Multicast:\n      description: |-\n        Multicast Group address for member VNI(VXLAN Network Identifier)\n      type: object\n      properties:\n        address:\n          description: |-\n            IPv6 Multicast address\n          type: string\n          format: ipv6\n    Flow:\n      description: |-\n        A high level data plane traffic flow.\n      type: object\n      required:\n      - tx_rx\n      - name\n      properties:\n        tx_rx:\n          description: |-\n            The transmit and receive endpoints.\n          $ref: '#/components/schemas/Flow.TxRx'\n        packet:\n          description: \"The header is a list of traffic protocol headers.\\n\\nThe order\\\n            \\ of traffic protocol headers assigned to the list is the\\norder they\\\n            \\ will appear on the wire.\\n\\nIn the case of an empty list the keyword/value\\\n            \\ of minItems: 1 \\nindicates that an implementation MUST provide at least\\\n            \\ one \\nFlow.Header object.\\n\\nThe default value for the Flow.Header choice\\\n            \\ property is ethernet \\nwhich will result in an implementation by default\\\n            \\ providing at least \\none ethernet packet header.\"\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Flow.Header'\n        size:\n          description: |-\n            The size of the packets.\n          $ref: '#/components/schemas/Flow.Size'\n        rate:\n          description: |-\n            The transmit rate of the packets.\n          $ref: '#/components/schemas/Flow.Rate'\n        duration:\n          description: |-\n            The transmit duration of the packets.\n          $ref: '#/components/schemas/Flow.Duration'\n        metrics:\n          description: \"Flow metrics. \"\n          $ref: '#/components/schemas/Flow.Metrics'\n        name:\n          description: |-\n            Globally unique name of an object. It also serves as the primary key for arrays of objects.\n          type: string\n          pattern: ^[\\sa-zA-Z0-9-_()\u003e\u003c\\[\\]]+$\n    Flow.TxRx:\n      description: \"A container for different types of transmit and receive \\nendpoint\\\n        \\ containers.\"\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of transmit and receive container used by the flow.\n          type: string\n          enum:\n          - port\n          - device\n          default: port\n        port:\n          $ref: '#/components/schemas/Flow.Port'\n        device:\n          $ref: '#/components/schemas/Flow.Router'\n    Flow.Port:\n      description: \"A container for a transmit port and 0..n intended receive ports.\\n\\\n        When assigning this container to a flow the flows's \\npacket headers will\\\n        \\ not be populated with any address resolution \\ninformation such as source\\\n        \\ and/or destination addresses. \\nFor example Flow.Ethernet dst mac address\\\n        \\ values will be defaulted to 0. \\nFor full control over the Flow.properties.packet\\\n        \\ header contents use this \\ncontainer. \"\n      type: object\n      required:\n      - tx_name\n      properties:\n        tx_name:\n          description: |\n            The unique name of a port that is the transmit port.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n            - /components/schemas/Lag/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n          - /components/schemas/Lag/properties/name\n        rx_name:\n          description: |\n            The unique name of a port that is the intended receive port.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n            - /components/schemas/Lag/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n          - /components/schemas/Lag/properties/name\n    Flow.Router:\n      description: |-\n        A container for declaring a map of 1..n transmit devices to 1..n receive devices. This allows for a single flow to have  different tx to rx device flows such as a single one to one map or a  many to many map.\n      type: object\n      required:\n      - tx_names\n      - rx_names\n      properties:\n        mode:\n          description: \"Determines the mapping of tx_names to rx_names.\\n\\nThe mesh\\\n            \\ mode creates traffic between each value in tx_names to\\nevery value\\\n            \\ in rx_names except in the case where the individual \\ntx_names value\\\n            \\ is equal to rx_names value which will be ignored.\\nIdentical values\\\n            \\ in tx_names or rx_names MUST raise an error.\\n\\nThe one_to_one mode\\\n            \\ creates traffic between each value pair in \\nof tx_names and rx_names\\\n            \\ by index.\\nThe length of tx_names and rx_name MUST be the same.\\nIdentical\\\n            \\ values in tx_names or rx_names MUST raise an error.\"\n          type: string\n          enum:\n          - mesh\n          - one_to_one\n          default: mesh\n        tx_names:\n          type: array\n          items:\n            description: |-\n              The unique name of an emulated device that will be transmitting.\n            type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n          - /components/schemas/Device.Ipv4/properties/name\n          - /components/schemas/Device.Ipv6/properties/name\n          - /components/schemas/Bgp.V4RouteRange/properties/name\n          - /components/schemas/Bgp.V6RouteRange/properties/name\n          - /components/schemas/Bgp.CMacIpRange/properties/name\n          example:\n          - Eth 1\n          - Eth 2\n          - Eth 3\n          - IPv4 1\n          - IPv6 1\n          - Bgp V4RouteRange 1\n          - Bgp V6RouteRange 1\n          description: |\n            TBD\n\n            x-constraint:\n            - /components/schemas/Device.Ethernet/properties/name\n            - /components/schemas/Device.Ipv4/properties/name\n            - /components/schemas/Device.Ipv6/properties/name\n            - /components/schemas/Bgp.V4RouteRange/properties/name\n            - /components/schemas/Bgp.V6RouteRange/properties/name\n            - /components/schemas/Bgp.CMacIpRange/properties/name\n        rx_names:\n          type: array\n          items:\n            description: |-\n              The unique name of an emulated device that will be receiving.\n            type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n          - /components/schemas/Device.Ipv4/properties/name\n          - /components/schemas/Device.Ipv6/properties/name\n          - /components/schemas/Bgp.V4RouteRange/properties/name\n          - /components/schemas/Bgp.V6RouteRange/properties/name\n          - /components/schemas/Bgp.CMacIpRange/properties/name\n          example:\n          - Eth 1\n          - Eth 2\n          - Eth 3\n          - IPv4 1\n          - IPv6 1\n          - Bgp V4RouteRange 1\n          - Bgp V6RouteRange 1\n          description: |\n            TBD\n\n            x-constraint:\n            - /components/schemas/Device.Ethernet/properties/name\n            - /components/schemas/Device.Ipv4/properties/name\n            - /components/schemas/Device.Ipv6/properties/name\n            - /components/schemas/Bgp.V4RouteRange/properties/name\n            - /components/schemas/Bgp.V6RouteRange/properties/name\n            - /components/schemas/Bgp.CMacIpRange/properties/name\n    Flow.Header:\n      description: |-\n        Configuration for all traffic packet headers\n      type: object\n      properties:\n        choice:\n          description: \"The available types of flow headers. If one is not provided\\\n            \\ the \\ndefault ethernet packet header MUST be provided.\"\n          type: string\n          enum:\n          - custom\n          - ethernet\n          - vlan\n          - vxlan\n          - ipv4\n          - ipv6\n          - pfcpause\n          - ethernetpause\n          - tcp\n          - udp\n          - gre\n          - gtpv1\n          - gtpv2\n          - arp\n          - icmp\n          - icmpv6\n          - ppp\n          - igmpv1\n          - mpls\n          default: ethernet\n        custom:\n          $ref: '#/components/schemas/Flow.Custom'\n        ethernet:\n          $ref: '#/components/schemas/Flow.Ethernet'\n        vlan:\n          $ref: '#/components/schemas/Flow.Vlan'\n        vxlan:\n          $ref: '#/components/schemas/Flow.Vxlan'\n        ipv4:\n          $ref: '#/components/schemas/Flow.Ipv4'\n        ipv6:\n          $ref: '#/components/schemas/Flow.Ipv6'\n        pfcpause:\n          $ref: '#/components/schemas/Flow.PfcPause'\n        ethernetpause:\n          $ref: '#/components/schemas/Flow.EthernetPause'\n        tcp:\n          $ref: '#/components/schemas/Flow.Tcp'\n        udp:\n          $ref: '#/components/schemas/Flow.Udp'\n        gre:\n          $ref: '#/components/schemas/Flow.Gre'\n        gtpv1:\n          $ref: '#/components/schemas/Flow.Gtpv1'\n        gtpv2:\n          $ref: '#/components/schemas/Flow.Gtpv2'\n        arp:\n          $ref: '#/components/schemas/Flow.Arp'\n        icmp:\n          $ref: '#/components/schemas/Flow.Icmp'\n        icmpv6:\n          $ref: '#/components/schemas/Flow.Icmpv6'\n        ppp:\n          $ref: '#/components/schemas/Flow.Ppp'\n        igmpv1:\n          $ref: '#/components/schemas/Flow.Igmpv1'\n        mpls:\n          $ref: '#/components/schemas/Flow.Mpls'\n    Flow.Custom:\n      type: object\n      description: |-\n        Custom packet header\n      required:\n      - bytes\n      properties:\n        bytes:\n          description: |-\n            A custom packet header defined as a string of hex bytes. The string MUST contain sequence of valid hex bytes. Spaces or colons can be part of the bytes but will be discarded. This packet header can be used in multiple places in the packet.\n          type: string\n          pattern: '^[A-Fa-f0-9: ]+$'\n    Flow.Ethernet:\n      description: |-\n        Ethernet packet header\n      type: object\n      properties:\n        dst:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst'\n        src:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src'\n        ether_type:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType'\n        pfc_queue:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue'\n    Flow.Vlan:\n      description: |-\n        VLAN packet header\n      type: object\n      properties:\n        priority:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority'\n        cfi:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi'\n        id:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id'\n        tpid:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid'\n    Flow.Vxlan:\n      description: |-\n        VXLAN packet header\n      type: object\n      properties:\n        flags:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags'\n        reserved0:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0'\n        vni:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni'\n        reserved1:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1'\n    Flow.Ipv4:\n      description: |-\n        IPv4 packet header\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version'\n        header_length:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength'\n        priority:\n          $ref: '#/components/schemas/Flow.Ipv4.Priority'\n        total_length:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength'\n        identification:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification'\n        reserved:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved'\n        dont_fragment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment'\n        more_fragments:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments'\n        fragment_offset:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset'\n        time_to_live:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive'\n        protocol:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol'\n        header_checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderChecksum'\n        src:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src'\n        dst:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst'\n    Flow.Ipv4.Priority:\n      description: |-\n        A container for ipv4 raw, tos, dscp ip priorities.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - raw\n          - tos\n          - dscp\n          default: dscp\n        raw:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw'\n        tos:\n          $ref: '#/components/schemas/Flow.Ipv4.Tos'\n        dscp:\n          $ref: '#/components/schemas/Flow.Ipv4.Dscp'\n    Flow.Ipv4.Dscp:\n      description: |-\n        Differentiated services code point (DSCP) packet field.\n      type: object\n      properties:\n        phb:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb'\n        ecn:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn'\n    Flow.Ipv4.Tos:\n      description: |-\n        Type of service (TOS) packet field.\n      type: object\n      properties:\n        precedence:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence'\n        delay:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay'\n        throughput:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput'\n        reliability:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability'\n        monetary:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary'\n        unused:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused'\n    Flow.Ipv6:\n      description: |-\n        IPv6 packet header\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version'\n        traffic_class:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass'\n        flow_label:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel'\n        payload_length:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength'\n        next_header:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader'\n        hop_limit:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit'\n        src:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src'\n        dst:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst'\n    Flow.PfcPause:\n      description: |-\n        IEEE 802.1Qbb PFC Pause packet header.\n      type: object\n      properties:\n        dst:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst'\n        src:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src'\n        ether_type:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType'\n        control_op_code:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode'\n        class_enable_vector:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector'\n        pause_class_0:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0'\n        pause_class_1:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1'\n        pause_class_2:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2'\n        pause_class_3:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3'\n        pause_class_4:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4'\n        pause_class_5:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5'\n        pause_class_6:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6'\n        pause_class_7:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7'\n    Flow.EthernetPause:\n      description: |-\n        IEEE 802.3x global ethernet pause packet header\n      type: object\n      properties:\n        dst:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst'\n        src:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src'\n        ether_type:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType'\n        control_op_code:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode'\n        time:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time'\n    Flow.Tcp:\n      description: |-\n        TCP packet header\n      type: object\n      properties:\n        src_port:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort'\n        dst_port:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort'\n        seq_num:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum'\n        ack_num:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum'\n        data_offset:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset'\n        ecn_ns:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs'\n        ecn_cwr:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr'\n        ecn_echo:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho'\n        ctl_urg:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg'\n        ctl_ack:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck'\n        ctl_psh:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh'\n        ctl_rst:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst'\n        ctl_syn:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn'\n        ctl_fin:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin'\n        window:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window'\n    Flow.Udp:\n      description: |-\n        UDP packet header\n      type: object\n      properties:\n        src_port:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort'\n        dst_port:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort'\n        length:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.Length'\n        checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.Checksum'\n    Flow.Gre:\n      description: |-\n        Standard GRE packet header (RFC2784)\n      type: object\n      properties:\n        checksum_present:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent'\n        reserved0:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0'\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Version'\n        protocol:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol'\n        checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Checksum'\n        reserved1:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1'\n    Flow.Gtpv1:\n      description: |-\n        GTPv1 packet header\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version'\n        protocol_type:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType'\n        reserved:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved'\n        e_flag:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag'\n        s_flag:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag'\n        pn_flag:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag'\n        message_type:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType'\n        message_length:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength'\n        teid:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid'\n        squence_number:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber'\n        n_pdu_number:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber'\n        next_extension_header_type:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType'\n        extension_headers:\n          description: |-\n            A list of optional extension headers.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow.GtpExtension'\n    Flow.GtpExtension:\n      type: object\n      properties:\n        extension_length:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength'\n        contents:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents'\n        next_extension_header:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader'\n    Flow.Gtpv2:\n      description: |-\n        GTPv2 packet header\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version'\n        piggybacking_flag:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag'\n        teid_flag:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag'\n        spare1:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1'\n        message_type:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType'\n        message_length:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength'\n        teid:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid'\n        sequence_number:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber'\n        spare2:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2'\n    Flow.Arp:\n      description: |-\n        ARP packet header\n      type: object\n      properties:\n        hardware_type:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType'\n        protocol_type:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType'\n        hardware_length:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength'\n        protocol_length:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength'\n        operation:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation'\n        sender_hardware_addr:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr'\n        sender_protocol_addr:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr'\n        target_hardware_addr:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr'\n        target_protocol_addr:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr'\n    Flow.Icmp:\n      description: |-\n        ICMP packet header\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - echo\n          default: echo\n        echo:\n          $ref: '#/components/schemas/Flow.Icmp.Echo'\n    Flow.Icmp.Echo:\n      description: |-\n        Packet Header for ICMP echo request\n        Common properties for ICMP packet headers that require checksum\n        Common properties for ICMP packet headers that require identifier and sequence number properties\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Type'\n        code:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Code'\n        checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Checksum'\n        identifier:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Identifier'\n        sequence_number:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.SequenceNumber'\n    Flow.Icmpv6:\n      description: |-\n        ICMPv6 packet header\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - echo\n          default: echo\n        echo:\n          $ref: '#/components/schemas/Flow.Icmpv6.Echo'\n    Flow.Icmpv6.Echo:\n      description: |-\n        Packet Header for ICMPv6 Echo\n        Common properties for ICMPv6 packet headers that require checksum\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Type'\n        code:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Code'\n        identifier:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Identifier'\n        sequence_number:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.SequenceNumber'\n        checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Checksum'\n    Flow.Ppp:\n      description: |-\n        PPP packet header\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address'\n        control:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control'\n        protocol_type:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType'\n    Flow.Igmpv1:\n      description: |-\n        IGMPv1 packet header\n      type: object\n      properties:\n        version:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version'\n        type:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type'\n        unused:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused'\n        checksum:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Checksum'\n        group_address:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress'\n    Flow.Mpls:\n      description: |-\n        Mpls packet header\n      type: object\n      properties:\n        label:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.Label'\n        traffic_class:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TrafficClass'\n        bottom_of_stack:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.BottomOfStack'\n        time_to_live:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TimeToLive'\n    Flow.Size:\n      description: |-\n        The frame size which overrides the total length of the packet\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - fixed\n          - increment\n          - random\n          default: fixed\n        fixed:\n          type: integer\n          default: 64\n        increment:\n          $ref: '#/components/schemas/Flow.SizeIncrement'\n        random:\n          $ref: '#/components/schemas/Flow.SizeRandom'\n    Flow.SizeIncrement:\n      type: object\n      description: \"Frame size that increments from a starting size to \\nan ending\\\n        \\ size incrementing by a step size.\"\n      properties:\n        start:\n          description: |-\n            Starting frame size in bytes\n          type: integer\n          minimum: 1\n          default: 64\n        end:\n          description: |-\n            Ending frame size in bytes\n          type: integer\n          minimum: 64\n          default: 1518\n        step:\n          description: |-\n            Step frame size in bytes\n          type: integer\n          default: 1\n    Flow.SizeRandom:\n      type: object\n      description: |-\n        Random frame size from a min value to a max value.\n      properties:\n        min:\n          type: integer\n          default: 64\n        max:\n          type: integer\n          default: 1518\n    Flow.Rate:\n      type: object\n      description: |-\n        The rate of packet transmission\n      properties:\n        choice:\n          description: |-\n            The available types of flow rate.\n          type: string\n          enum:\n          - pps\n          - bps\n          - kbps\n          - mbps\n          - gbps\n          - percentage\n          default: pps\n        pps:\n          description: |-\n            Packets per second.\n          type: integer\n          format: int64\n          minimum: 1\n          default: 1000\n        bps:\n          description: |-\n            Bits per second.\n          type: integer\n          format: int64\n          minimum: 672\n          default: 1000000000\n        kbps:\n          description: |-\n            Kilobits per second.\n          type: integer\n          format: int64\n          minimum: 1\n          default: 1000000\n        mbps:\n          description: \"Megabits per second. \"\n          type: integer\n          format: int64\n          minimum: 1\n          default: 1000\n        gbps:\n          description: |-\n            Gigabits per second.\n          type: integer\n          format: int32\n          minimum: 1\n          default: 1\n        percentage:\n          description: |-\n            The percentage of a port location's available bandwidth.\n          type: number\n          format: float\n          minimum: 0\n          maximum: 100\n          default: 100\n    Flow.Duration:\n      description: \"A container for different transmit durations. \"\n      type: object\n      properties:\n        choice:\n          description: |-\n            A choice used to determine the type of duration.\n          type: string\n          enum:\n          - fixed_packets\n          - fixed_seconds\n          - burst\n          - continuous\n          default: continuous\n        fixed_packets:\n          $ref: '#/components/schemas/Flow.FixedPackets'\n        fixed_seconds:\n          $ref: '#/components/schemas/Flow.FixedSeconds'\n        burst:\n          $ref: '#/components/schemas/Flow.Burst'\n        continuous:\n          $ref: '#/components/schemas/Flow.Continuous'\n    Flow.Continuous:\n      description: \"Transmit will be continuous and will not stop automatically. \"\n      type: object\n      properties:\n        gap:\n          description: |-\n            The minimum gap between packets expressed as bytes.\n          type: integer\n          minimum: 0\n          default: 12\n        delay:\n          $ref: '#/components/schemas/Flow.Delay'\n    Flow.Delay:\n      description: \"The optional container to specify the delay before starting \\n\\\n        transmission of packets.\"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - bytes\n          - nanoseconds\n          - microseconds\n          default: bytes\n        bytes:\n          description: |-\n            The delay before starting transmission of packets.\n            A value of 0 indicates no delay.\n          type: number\n          format: float\n          minimum: 0\n          default: 0\n        nanoseconds:\n          description: |-\n            The delay before starting transmission of packets.\n            A value of 0 indicates no delay.\n          type: number\n          format: float\n          minimum: 0\n          default: 0\n        microseconds:\n          description: |-\n            The delay before starting transmission of packets.\n            A value of 0 indicates no delay.\n          type: number\n          format: float\n          minimum: 0\n          default: 0\n    Flow.FixedPackets:\n      description: |-\n        Transmit a fixed number of packets after which the flow will stop.\n      type: object\n      properties:\n        packets:\n          description: |-\n            Stop transmit of the flow after this number of packets.\n          type: integer\n          minimum: 1\n          default: 1\n        gap:\n          description: |-\n            The minimum gap between packets expressed as bytes.\n          type: integer\n          minimum: 0\n          default: 12\n        delay:\n          $ref: '#/components/schemas/Flow.Delay'\n    Flow.FixedSeconds:\n      description: |-\n        Transmit for a fixed number of seconds after which the flow will stop.\n      type: object\n      properties:\n        seconds:\n          description: |-\n            Stop transmit of the flow after this number of seconds.\n          type: number\n          minimum: 0\n          default: 1\n        gap:\n          description: |-\n            The minimum gap between packets expressed as bytes.\n          type: integer\n          minimum: 0\n          default: 12\n        delay:\n          $ref: '#/components/schemas/Flow.Delay'\n    Flow.Burst:\n      description: \"Transmits continuous or fixed burst of packets. \\nFor continuous\\\n        \\ burst of packets, it will not automatically stop.\\nFor fixed burst of packets,\\\n        \\ it will stop after transmitting fixed number of bursts.      \"\n      type: object\n      properties:\n        bursts:\n          description: |-\n            The number of packet bursts transmitted per flow.\n            A value of 0 implies continuous burst of packets.\n          type: integer\n          minimum: 0\n          default: 0\n        packets:\n          description: |-\n            The number of packets transmitted per burst.\n          type: integer\n          minimum: 1\n          default: 1\n        gap:\n          description: |-\n            The minimum gap between packets expressed as bytes.\n          type: integer\n          minimum: 0\n          default: 12\n        inter_burst_gap:\n          $ref: '#/components/schemas/Flow.Duration.InterBurstGap'\n    Flow.Duration.InterBurstGap:\n      type: object\n      description: |-\n        The optional container for specifying a gap between bursts.\n      properties:\n        choice:\n          description: |-\n            The type of inter burst gap units.\n          type: string\n          enum:\n          - bytes\n          - nanoseconds\n          - microseconds\n          default: bytes\n        bytes:\n          description: |-\n            The amount of time between bursts expressed in bytes.\n            A value of 0 indicates no gap between bursts.\n          type: number\n          format: double\n          minimum: 0\n          default: 12\n        nanoseconds:\n          description: |-\n            The amount of time between bursts expressed in nanoseconds.\n            A value of 0 indicates no gap between bursts.\n          type: number\n          format: double\n          minimum: 0\n          default: 96\n        microseconds:\n          description: |-\n            The amount of time between bursts expressed in microseconds.\n            A value of 0 indicates no gap between bursts.\n          type: number\n          format: double\n          minimum: 0\n          default: 0.096\n    Flow.Metrics:\n      description: |-\n        The optional container for configuring flow metrics.\n      type: object\n      properties:\n        enable:\n          description: \"Enables flow metrics.\\nEnabling this option may affect the\\\n            \\ resultant packet payload due to \\nadditional instrumentation data.\"\n          type: boolean\n          default: false\n        loss:\n          description: |-\n            Enables additional flow metric loss calculation.\n          type: boolean\n          default: false\n        timestamps:\n          description: |-\n            Enables additional flow metric first and last timestamps.\n          type: boolean\n          default: false\n        latency:\n          description: |-\n            Latency metrics.\n          $ref: '#/components/schemas/Flow.Latency.Metrics'\n    Flow.Latency.Metrics:\n      description: |-\n        The optional container for per flow latency metric configuration.\n      type: object\n      properties:\n        enable:\n          description: \"True to enable latency metrics using timestamps.\\n\\nEnabling\\\n            \\ this option may affect the resultant packet payload due to \\nadditional\\\n            \\ instrumentation data.\"\n          type: boolean\n          default: false\n        mode:\n          description: \"Select the type of latency measurement. The different types\\\n            \\ of \\nlatency measurements are:\\n\\n\\nstore_forward:\\nThe time interval\\\n            \\ starting when the last bit of the frame leaves the\\nsending port and\\\n            \\ ending when the first bit of the frame is seen on\\nthe receiving port\\\n            \\ (LIFO).  This is based on the RFC 1242 standard.\\n\\n\\ncut_through:\\n\\\n            The time interval starting when the first bit of the frame leaves\\nthe\\\n            \\ sending port and ending when the first bit of the frame is seen\\non\\\n            \\ the receiving port (FIFO).  This is based on the RFC 1242 \\nstandard.\"\n          type: string\n          enum:\n          - store_forward\n          - cut_through\n          default: store_forward\n    Event:\n      description: |-\n        The optional container for event configuration.\n      type: object\n      properties:\n        enable:\n          description: \"True to enable all events. \\nEnabling this option may affect\\\n            \\ the resultant packet payload due to \\nadditional instrumentation data.\"\n          type: boolean\n          default: false\n        link:\n          $ref: '#/components/schemas/Event.Link'\n        rx_rate_threshold:\n          $ref: '#/components/schemas/Event.RxRateThreshold'\n        route_advertise_withdraw:\n          $ref: '#/components/schemas/Event.RouteAdvertiseWithdraw'\n    Event.RxRateThreshold:\n      description: |-\n        The optional container for rx rate threshold event configuration.\n      type: object\n      properties:\n        enable:\n          description: \"True to enable the rx_rate_threshold event. \\nEnabling this\\\n            \\ option may affect the resultant packet payload due to \\nadditional instrumentation\\\n            \\ data.\"\n          type: boolean\n          default: false\n        threshold:\n          description: \"True to enable notifications when the rx rate of a flow passes\\\n            \\ above \\nor below the threshold value. \"\n          type: number\n          format: float\n          maximum: 100\n          minimum: 0\n          default: 95\n    Event.Link:\n      description: |-\n        The optional container for link up/down event configuration.\n      type: object\n      properties:\n        enable:\n          description: \"True to enable notifications when a link up/down event occurs. \"\n          type: boolean\n          default: false\n    Event.RouteAdvertiseWithdraw:\n      description: |-\n        The optional container for route advertise/withdraw event configuration.\n      type: object\n      properties:\n        enable:\n          description: \"True to enable notifications when a route advertise/withdraw\\\n            \\ \\nevent occurs. \"\n          type: boolean\n          default: false\n    Event.Request:\n      type: object\n      properties:\n        type:\n          description: \"Constrain the events being returned by specifying event types.\\n\\\n            If the list is empty then all event types will be returned. \"\n          type: array\n          items:\n            type: string\n            enum:\n            - link_down\n            - link_up\n            - route_withdraw\n            - route_advertise\n            - flow_rx_rate_above_threshold\n            - flow_rx_rate_below_threshold\n            example: route_withdraw\n        source:\n          description: \"Constrain the events being returned by specifying event sources.\\\n            \\ \\nIf the list is empty then all event sources will be returned. \\n\\n\\\n            x-constraint:\\n- /components/schemas/Port/properties/name\\n- /components/schemas/Bgp.V4RouteRange/name\\n\\\n            - /components/schemas/Bgp.V6RouteRange/name\\n\"\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n          - /components/schemas/Bgp.V4RouteRange/name\n          - /components/schemas/Bgp.V6RouteRange/name\n    Event.Subscription:\n      description: \"A container that describes what events a system should provide\\\n        \\ and \\noptionally where to publish them.  \"\n      type: object\n      properties:\n        events:\n          $ref: '#/components/schemas/Event.Request'\n        callbackUrl:\n          description: |-\n            Indicates where a client wants to be notified of the events set in\n            the events property.\n            If this property is empty or null then no event notifications will\n            be forwarded.\n          type: string\n          format: uri\n          example: https://127.0.0.1/event/notification\n    Response.Error:\n      description: |-\n        A list of errors that may have occurred while executing the request.\n      type: object\n      properties:\n        errors:\n          description: \"A list of any system specific errors that have occurred while\\\n            \\ \\nexecuting the request.\"\n          type: array\n          items:\n            type: string\n    Response.Warning:\n      description: |-\n        A list of warnings that have occurred while executing the request.\n      type: object\n      properties:\n        warnings:\n          description: \"A list of any system specific warnings that have occurred\\\n            \\ while \\nexecuting the request.\"\n          type: array\n          items:\n            type: string\n    Link.State:\n      description: |-\n        Port link state.\n      type: object\n      required:\n      - state\n      properties:\n        port_names:\n          description: |\n            The names of port objects to. An empty or null list will control all port objects.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        state:\n          description: |-\n            The link state.\n          type: string\n          enum:\n          - up\n          - down\n    Transmit.State:\n      description: |-\n        Flow transmit state.\n      type: object\n      required:\n      - state\n      properties:\n        flow_names:\n          description: |\n            The names of flows to which the transmit state will be applied to. If the list of flow_names is empty or null the state will be applied to all configured flows.\n            If the list is not empty any flow that is not included in the list of flow_names MUST be ignored and not included in the state change.\n\n            x-constraint:\n            - /components/schemas/Flow/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Flow/properties/name\n        state:\n          description: |-\n            The transmit state.\n            If the value of the state property is 'start' then all flows defined by the 'flow_names' property will be started and the metric counters MUST be cleared prior to starting the flow(s).\n            If the value of the state property is 'stop' then all flows defined by the 'flow_names' property will be stopped and the metric counters MUST NOT be cleared.\n            If the value of the state property is 'pause' then all flows defined by the 'flow_names' property will be paused and the metric counters MUST NOT be cleared.\n            If the value of the state property is 'resume' then any paused flows defined by the 'flow_names' property will start transmit at the point at which they were paused. Any flow that is stopped will start transmit at the beginning of the flow. The flow(s) MUST NOT have their metric counters cleared.\n          type: string\n          enum:\n          - start\n          - stop\n          - pause\n          - resume\n    Capture.State:\n      description: |-\n        Control port capture state\n      type: object\n      required:\n      - state\n      properties:\n        port_names:\n          description: |\n            The names of ports to which the capture state will be applied to. If the list of port_names is empty or null the state will be applied to all configured ports.\n            If the list is not empty any port that is not included in the list of port_names MUST be ignored and not included in the state change.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        state:\n          description: |-\n            The capture state.\n          type: string\n          enum:\n          - start\n          - stop\n    Flows.Update:\n      description: |-\n        A container of flows with associated properties to be updated without affecting the flows current transmit state.\n      type: object\n      required:\n      - property_names\n      - flows\n      properties:\n        property_names:\n          description: |-\n            Flow properties to be updated without affecting the transmit state.\n          type: array\n          items:\n            type: string\n            enum:\n            - rate\n            - size\n        flows:\n          description: |-\n            The list of configured flows for which given property will be updated.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n    Route.State:\n      description: |-\n        Sets the device route state\n      type: object\n      required:\n      - state\n      properties:\n        names:\n          description: |\n            The names of device route objects to control. If no names are specified then all route objects that match the x-constraint will be affected.\n\n            x-constraint:\n            - /components/schemas/Bgp.V4RouteRange/properties/name\n            - /components/schemas/Bgp.V6RouteRange/properties/name\n            - /components/schemas/Isis.V4RouteRange/properties/name\n            - /components/schemas/Isis.V6RouteRange/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Bgp.V4RouteRange/properties/name\n          - /components/schemas/Bgp.V6RouteRange/properties/name\n          - /components/schemas/Isis.V4RouteRange/properties/name\n          - /components/schemas/Isis.V6RouteRange/properties/name\n        state:\n          description: |-\n            Route specific states\n          type: string\n          enum:\n          - withdraw\n          - advertise\n    Ping.Request:\n      description: |-\n        Ping request details\n      type: object\n      properties:\n        endpoints:\n          description: |-\n            Array of ping requests\n          type: array\n          items:\n            $ref: '#/components/schemas/Ping'\n    Protocol.State:\n      description: |-\n        Sets all configured protocols to `start` or `stop` state.\n      type: object\n      required:\n      - state\n      properties:\n        state:\n          description: |-\n            Protocol specific states\n          type: string\n          enum:\n          - start\n          - stop\n    Device.State:\n      description: |-\n        Sets attributes for the requested state/actions to be performed on device(s)\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - lacp_member_state\n        lacp_member_state:\n          $ref: '#/components/schemas/LacpMember.State'\n    Ping:\n      type: object\n      properties:\n        choice:\n          description: |-\n            IPv4 or IPv6 ping.\n          type: string\n          enum:\n          - ipv4\n          - ipv6\n          default: ipv4\n        ipv4:\n          $ref: '#/components/schemas/Ping.Ipv4'\n        ipv6:\n          $ref: '#/components/schemas/Ping.Ipv6'\n    Ping.Ipv4:\n      type: object\n      properties:\n        src_name:\n          description: |\n            A base IPv4 interface\n\n            x-constraint:\n            - /components/schemas/Device.Ipv4Base/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv4Base/properties/name\n        dst_ip:\n          description: |-\n            IPv4 address to ping\n          type: string\n          format: ipv4\n    Ping.Ipv6:\n      type: object\n      properties:\n        src_name:\n          description: |\n            A base IPv6 interface\n\n            x-constraint:\n            - /components/schemas/Device.Ipv6Base/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv6Base/properties/name\n        dst_ip:\n          description: |-\n            IPv6 addresses to ping.\n          type: string\n          format: ipv6\n    Ping.Response:\n      description: |-\n        A container for ping responses.\n      type: object\n      properties:\n        responses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Response'\n    Response:\n      type: object\n      properties:\n        src_name:\n          description: |\n            The name of the source IPv4 or IPv6 interface from which ping was sent.\n\n            x-constraint:\n            - /components/schemas/Device.Ipv4Base/properties/name\n            - /components/schemas/Device.Ipv6Base/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Device.Ipv4Base/properties/name\n          - /components/schemas/Device.Ipv6Base/properties/name\n        dst_ip:\n          description: |-\n            Destination address.\n          type: string\n        result:\n          description: |-\n            Result of the ping request.\n          type: string\n          enum:\n          - success\n          - failure\n          default: failure\n    LacpMember.State:\n      description: |-\n        Set LACP state for specified LAG Member Port(s).\n      type: object\n      required:\n      - state\n      properties:\n        lag_member_port_names:\n          description: |\n            The names of LAG members (ports) for which the state has to be applied. An empty or null list will control all LAG members.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        state:\n          description: |-\n            The LACP Member admin state. 'up' will start transmission of LACPDUs on selected member ports. 'down' will send a LACPDU with 'sync' flag unset and then stop transmission of LACPDUs on selected member ports.\n          type: string\n          enum:\n          - up\n          - down\n    Metrics.Request:\n      description: |-\n        Request to traffic generator for metrics of choice\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - port\n          - flow\n          - bgpv4\n          - bgpv6\n          - isis\n          - lag\n          - lacp_lag_member\n          default: port\n        port:\n          $ref: '#/components/schemas/Port.Metrics.Request'\n        flow:\n          $ref: '#/components/schemas/Flow.Metrics.Request'\n        bgpv4:\n          $ref: '#/components/schemas/Bgpv4.Metrics.Request'\n        bgpv6:\n          $ref: '#/components/schemas/Bgpv6.Metrics.Request'\n        isis:\n          $ref: '#/components/schemas/Isis.Metrics.Request'\n        lag:\n          $ref: '#/components/schemas/Lag.Metrics.Request'\n        lacp_lag_member:\n          $ref: '#/components/schemas/LacpLagMember.Metrics.Request'\n    Metrics.Response:\n      description: |-\n        Response containing chosen traffic generator metrics\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - flow_metrics\n          - port_metrics\n          - bgpv4_metrics\n          - bgpv6_metrics\n          - isis_metrics\n          - lag_metrics\n          - lacp_lag_member_metrics\n          default: port_metrics\n        port_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Port.Metric'\n        flow_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow.Metric'\n        bgpv4_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgpv4.Metric'\n        bgpv6_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Bgpv6.Metric'\n        isis_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Isis.Metric'\n        lag_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/Lag.Metric'\n        lacp_lag_member_metrics:\n          type: array\n          items:\n            $ref: '#/components/schemas/LacpLagMember.Metric'\n    Port.Metrics.Request:\n      description: |-\n        The port result request to the traffic generator\n      type: object\n      properties:\n        port_names:\n          description: |\n            The names of objects to return results for. An empty list will return all port row results.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned. The name of the port cannot be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - transmit\n            - location\n            - link\n            - capture\n            - frames_tx\n            - frames_rx\n            - bytes_tx\n            - bytes_rx\n            - frames_tx_rate\n            - frames_rx_rate\n            - bytes_tx_rate\n            - bytes_rx_rate\n    Port.Metric:\n      type: object\n      properties:\n        name:\n          description: |\n            The name of a configured port\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        location:\n          description: |-\n            The state of the connection to the test port location. The format should be the configured port location along with  any custom connection state message.\n          type: string\n        link:\n          description: |-\n            The state of the test port link The string can be up, down or a custom error message.\n          type: string\n          enum:\n          - up\n          - down\n        capture:\n          description: |-\n            The state of the test port capture infrastructure. The string can be started, stopped or a custom error message.\n          type: string\n          enum:\n          - started\n          - stopped\n        frames_tx:\n          description: |-\n            The current total number of frames transmitted\n          type: integer\n          format: int64\n          minimum: 0\n        frames_rx:\n          description: |-\n            The current total number of valid frames received\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_tx:\n          description: |-\n            The current total number of bytes transmitted\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_rx:\n          description: |-\n            The current total number of valid bytes received\n          type: integer\n          format: int64\n          minimum: 0\n        frames_tx_rate:\n          description: |-\n            The current rate of frames transmitted\n          type: number\n        frames_rx_rate:\n          description: |-\n            The current rate of valid frames received\n          type: number\n        bytes_tx_rate:\n          description: |-\n            The current rate of bytes transmitted\n          type: number\n        bytes_rx_rate:\n          description: |-\n            The current rate of bytes received\n          type: number\n    Flow.Metrics.Request:\n      description: |-\n        The container for a flow metric request.\n      type: object\n      properties:\n        flow_names:\n          description: |\n            Flow metrics will be retrieved for these flow names.\n            If no flow names are specified then all flows will be returned.\n\n            x-constraint:\n            - /components/schemas/Flow/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Flow/properties/name\n        metric_groups:\n          description: |-\n            A list of metric groups used to disaggregate flows. A metric group that does not exist for a flow group MUST return an error.\n          $ref: '#/components/schemas/Flow.MetricGroup.Request'\n        metric_names:\n          description: |-\n            The list of metric names that the returned result set will contain. If the list is empty then all metrics will be returned.\n          type: array\n          items:\n            type: string\n            enum:\n            - transmit\n            - frames_tx\n            - frames_rx\n            - bytes_tx\n            - bytes_rx\n            - frames_tx_rate\n            - frames_rx_rate\n    Flow.MetricGroup.Request:\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of disaggregation to be applied to the flow metrics.\n          type: string\n          enum:\n          - ingress\n          - egress\n          default: ingress\n        ingress:\n          description: \"Disaggregate the flow metrics by ingress packet header field\\\n            \\ names.\\nIf the items is empty then no disaggregation will be done. \\n\\\n            \\nx-constraint:\\n- /components/schemas/Flow/properties/packet/../metric_group\\n\"\n          type: array\n          default: []\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Flow/properties/packet/../metric_group\n        egress:\n          description: \"Disaggregate the flow metrics by egress packet header field\\\n            \\ names \\nIf the items is empty then no disaggregation will be done. \\n\\\n            \\nx-constraint:\\n- /components/schemas/Flow/properties/egress/../metric_group\\n\"\n          type: array\n          default: []\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Flow/properties/egress/../metric_group\n    Flow.Metric:\n      description: |-\n        A container for flow metrics.\n        The container is keyed by the name, port_tx, port_rx and metric_groups\n        values.\n      type: object\n      properties:\n        name:\n          description: |-\n            The name of the flow\n          type: string\n          example: Tx -\u003e Rx\n        port_tx:\n          description: |-\n            The name of the transmit port\n          type: string\n        port_rx:\n          description: |-\n            The name of the receive port\n          type: string\n        metric_groups:\n          description: |-\n            Flow disaggregation groups.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow.MetricGroup'\n        transmit:\n          description: |-\n            The transmit state of the flow.\n          type: string\n          enum:\n          - started\n          - stopped\n          - paused\n        frames_tx:\n          description: |-\n            The current total number of frames transmitted\n          type: integer\n          format: int64\n          minimum: 0\n        frames_rx:\n          description: |-\n            The current total number of valid frames received\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_tx:\n          description: |-\n            The current total number of bytes transmitted\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_rx:\n          description: |-\n            The current total number of bytes received\n          type: integer\n          format: int64\n          minimum: 0\n        frames_tx_rate:\n          description: |-\n            The current rate of frames transmitted\n          type: number\n        frames_rx_rate:\n          description: |-\n            The current rate of valid frames received\n          type: number\n        loss:\n          description: |-\n            The percentage of lost frames\n          type: number\n        timestamps:\n          $ref: '#/components/schemas/Metric.Timestamp'\n        latency:\n          $ref: '#/components/schemas/Metric.Latency'\n    Flow.MetricGroup:\n      type: object\n      properties:\n        name:\n          description: |-\n            Name of packet field metric group\n          type: string\n        value:\n          description: |-\n            Value of named packet field metric group\n          type: string\n    Metric.Timestamp:\n      description: |-\n        The container for timestamp metrics.\n        The container will be empty if the timestamp has not been configured for\n        the flow.\n      type: object\n      properties:\n        first_timestamp_ns:\n          description: |-\n            First timestamp in nanoseconds\n          type: number\n          format: double\n        last_timestamp_ns:\n          description: |-\n            Last timestamp in nanoseconds\n          type: number\n          format: double\n    Metric.Latency:\n      description: \"The container for latency metrics. \\nThe min/max/avg values are\\\n        \\ dependent on the type of latency measurement \\nmode that is configured.\\n\\\n        The container will be empty if the latency has not been configured for\\nthe\\\n        \\ flow.\"\n      type: object\n      properties:\n        minimum_ns:\n          description: |-\n            Minimum latency in nanoseconds\n          type: number\n          format: double\n        maximum_ns:\n          description: |-\n            Maximum latency in nanoseconds\n          type: number\n          format: double\n        average_ns:\n          description: |-\n            Average latency in nanoseconds\n          type: number\n          format: double\n    Bgpv4.Metrics.Request:\n      description: |-\n        The request to retrieve BGPv4 per peer metrics/statistics.\n      type: object\n      properties:\n        peer_names:\n          description: |\n            The names of BGPv4 peers to return results for. An empty list will return results for all BGPv4 peers.\n\n            x-constraint:\n            - /components/schemas/Bgp.V4peer/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Bgp.V4peer/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv4 peer cannot be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - session_state\n            - session_flap_count\n            - routes_advertised\n            - routes_received\n            - route_withdraws_sent\n            - route_withdraws_received\n            - updates_sent\n            - updates_received\n            - opens_sent\n            - opens_received\n            - keepalives_sent\n            - keepalives_received\n            - notifications_sent\n            - notifications_received\n    Bgpv4.Metric:\n      description: |-\n        BGPv4 per peer statistics information.\n      type: object\n      properties:\n        name:\n          description: |-\n            The name of a configured BGPv4 peer.\n          type: string\n        session_state:\n          description: |-\n            Session state as up or down. Up refers to an Established state and Down refers to any other state.\n          type: string\n          enum:\n          - up\n          - down\n        session_flap_count:\n          description: |-\n            Number of times the session went from Up to Down state.\n          type: integer\n        routes_advertised:\n          description: |-\n            Number of routes advertised.\n          type: integer\n        routes_received:\n          description: |-\n            Number of routes received.\n          type: integer\n        route_withdraws_sent:\n          description: |-\n            Number of route withdraws sent.\n          type: integer\n        route_withdraws_received:\n          description: |-\n            Number of route withdraws received.\n          type: integer\n        updates_sent:\n          description: |-\n            Number of Update messages sent.\n          type: integer\n        updates_received:\n          description: |-\n            Number of Update messages received.\n          type: integer\n        opens_sent:\n          description: |-\n            Number of Open messages sent.\n          type: integer\n        opens_received:\n          description: |-\n            Number of Open messages received.\n          type: integer\n        keepalives_sent:\n          description: |-\n            Number of Keepalive messages sent.\n          type: integer\n        keepalives_received:\n          description: |-\n            Number of Keepalive messages received.\n          type: integer\n        notifications_sent:\n          description: |-\n            Number of Notification messages sent.\n          type: integer\n        notifications_received:\n          description: |-\n            Number of Notification messages received.\n          type: integer\n    Bgpv6.Metrics.Request:\n      description: |-\n        The request to retrieve BGPv6 per peer metrics/statistics.\n      type: object\n      properties:\n        peer_names:\n          description: |\n            The names of BGPv6 peers to return results for. An empty list will return results for all BGPv6 peers.\n\n            x-constraint:\n            - /components/schemas/Bgp.V6peer/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Bgp.V6peer/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv6 peer cannot be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - session_state\n            - session_flap_count\n            - routes_advertised\n            - routes_received\n            - route_withdraws_sent\n            - route_withdraws_received\n            - updates_sent\n            - updates_received\n            - opens_sent\n            - opens_received\n            - keepalives_sent\n            - keepalives_received\n            - notifications_sent\n            - notifications_received\n    Bgpv6.Metric:\n      description: |-\n        BGPv6 per peer statistics information.\n      type: object\n      properties:\n        name:\n          description: |-\n            The name of a configured BGPv6 peer.\n          type: string\n        session_state:\n          description: |-\n            Session state as up or down. Up refers to an Established state and Down refers to any other state.\n          type: string\n          enum:\n          - up\n          - down\n        session_flap_count:\n          description: |-\n            Number of times the session went from Up to Down state.\n          type: integer\n        routes_advertised:\n          description: |-\n            Number of routes advertised.\n          type: integer\n        routes_received:\n          description: |-\n            Number of routes received.\n          type: integer\n        route_withdraws_sent:\n          description: |-\n            Number of route withdraws sent.\n          type: integer\n        route_withdraws_received:\n          description: |-\n            Number of route withdraws received.\n          type: integer\n        updates_sent:\n          description: |-\n            Number of Update messages sent.\n          type: integer\n        updates_received:\n          description: |-\n            Number of Update messages received.\n          type: integer\n        opens_sent:\n          description: |-\n            Number of Open messages sent.\n          type: integer\n        opens_received:\n          description: |-\n            Number of Open messages received.\n          type: integer\n        keepalives_sent:\n          description: |-\n            Number of Keepalive messages sent.\n          type: integer\n        keepalives_received:\n          description: |-\n            Number of Keepalive messages received.\n          type: integer\n        notifications_sent:\n          description: |-\n            Number of Notification messages sent.\n          type: integer\n        notifications_received:\n          description: |-\n            Number of Notification messages received.\n          type: integer\n    Isis.Metrics.Request:\n      description: |-\n        The request to retrieve ISIS per Router metrics/statistics.\n      type: object\n      properties:\n        router_names:\n          description: |\n            The names of ISIS Routers to return results for. An empty list will return results for all ISIS router.\n\n            x-constraint:\n            - /components/schemas/Device.IsisRouter/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Device.IsisRouter/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the ISIS Router cannot be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - l1_sessions_up\n            - l1_session_flap\n            - l1_database_size\n            - l1_broadcast_hellos_sent\n            - l1_broadcast_hellos_received\n            - l1_point_to_point_hellos_sent\n            - l1_point_to_point_hellos_received\n            - l1_psnp_sent\n            - l1_psnp_received\n            - l1_csnp_sent\n            - l1_csnp_received\n            - l1_lsp_sent\n            - l1_lsp_received\n            - l2_sessions_up\n            - l2_session_flap\n            - l2_database_size\n            - l2_broadcast_hellos_sent\n            - l2_broadcast_hellos_received\n            - l2_point_to_point_hellos_sent\n            - l2_point_to_point_hellos_received\n            - l2_psnp_sent\n            - l2_psnp_received\n            - l2_csnp_sent\n            - l2_csnp_received\n            - l2_lsp_sent\n            - l2_lsp_received\n    Isis.Metric:\n      description: |-\n        ISIS per router statistics information.\n      type: object\n      properties:\n        name:\n          description: |-\n            The name of a configured ISIS router.\n          type: string\n        l1_sessions_up:\n          description: |-\n            The number of Level 1 (L1) sessions that are fully up.\n          type: integer\n        l1_session_flap:\n          description: |-\n            The number of Level 1 Sessions Flap.\n          type: integer\n        l1_broadcast_hellos_sent:\n          description: |-\n            Number of Level 1 Hello messages sent.\n          type: integer\n        l1_broadcast_hellos_received:\n          description: |-\n            Number of Level 1 Hello messages received.\n          type: integer\n        l1_point_to_point_hellos_sent:\n          description: |-\n            Number of Level 1 Point-to-Point(P2P) Hello messages sent.\n          type: integer\n        l1_point_to_point_hellos_received:\n          description: |-\n            Number of Level 1 Point-to-Point(P2P) Hello messages received.\n          type: integer\n        l1_database_size:\n          description: |-\n            Number of Link State Updates (LSPs) in the Level 1 LSP Databases.\n          type: integer\n        l1_psnp_sent:\n          description: |-\n            Number of Level 1 (L1) Partial Sequence Number Packet (PSNPs) sent.\n          type: integer\n        l1_psnp_received:\n          description: |-\n            Number of Level 1 (L1) Complete Sequence Number Packet (PSNPs) received.\n          type: integer\n        l1_csnp_sent:\n          description: |-\n            Number of Level 1 (L1) Complete Sequence Number Packet (CSNPs) sent.\n          type: integer\n        l1_csnp_received:\n          description: |-\n            Number of Level 1 (L1) Complete Sequence Number Packet (CSNPs) received.\n          type: integer\n        l1_lsp_sent:\n          description: |-\n            Number of Level 1 (L1) Link State Protocol Data Units (LSPs) sent.\n          type: integer\n        l1_lsp_received:\n          description: |-\n            Number of Level 1 (L1) Link State Protocol Data Units (LSPs) received.\n          type: integer\n        l2_sessions_up:\n          description: |-\n            The number of Level 2 (L2) sessions that are fully up.\n          type: integer\n        l2_session_flap:\n          description: |-\n            The number of Level 2 Sessions Flap.\n          type: integer\n        l2_broadcast_hellos_sent:\n          description: |-\n            Number of Level 2 Hello messages sent.\n          type: integer\n        l2_broadcast_hellos_received:\n          description: |-\n            Number of Level 2 Hello messages received.\n          type: integer\n        l2_point_to_point_hellos_sent:\n          description: |-\n            Number of Level 2 Point-to-Point(P2P) Hello messages sent.\n          type: integer\n        l2_point_to_point_hellos_received:\n          description: |-\n            Number of Level 2 Point-to-Point(P2P) Hello messages received.\n          type: integer\n        l2_database_size:\n          description: |-\n            Number of Link State Updates (LSPs) in the Level 2 LSP Databases.\n          type: integer\n        l2_psnp_sent:\n          description: |-\n            Number of Level 2 (L2) Partial Sequence Number Packet (PSNPs) sent.\n          type: integer\n        l2_psnp_received:\n          description: |-\n            Number of Level 2 (L2) Complete Sequence Number Packet (PSNPs) received.\n          type: integer\n        l2_csnp_sent:\n          description: |-\n            Number of Level 2 (L2) Complete Sequence Number Packet (CSNPs) sent.\n          type: integer\n        l2_csnp_received:\n          description: |-\n            Number of Level 2 (L2) Complete Sequence Number Packet (CSNPs) received.\n          type: integer\n        l2_lsp_sent:\n          description: |-\n            Number of Level 2 (L2) Link State Protocol Data Units (LSPs) sent.\n          type: integer\n        l2_lsp_received:\n          description: |-\n            Number of Level 2 (L2) Link State Protocol Data Units (LSPs) received.\n          type: integer\n    Lag.Metrics.Request:\n      description: |-\n        The request to retrieve per LAG metrics/statistics.\n      type: object\n      properties:\n        lag_names:\n          description: |\n            The names of LAGs to return results for. An empty list will return results for all LAGs.\n\n            x-constraint:\n            - /components/schemas/Lag/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Lag/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned. The name of the LAG cannot be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - oper_states\n            - member_ports_up\n            - frames_tx\n            - frames_rx\n            - bytes_tx\n            - bytes_rx\n            - frames_tx_rate\n            - frames_rx_rate\n            - bytes_tx_rate\n            - bytes_rx_rate\n    Lag.Metric:\n      type: object\n      properties:\n        name:\n          description: |\n            The name of a configured LAG\n\n            x-constraint:\n            - /components/schemas/Lag/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Lag/properties/name\n        oper_status:\n          description: |-\n            The current operational state of the LAG. The state can be up or down. State 'up' indicates member_ports_up \u003e= min_links.\n          type: string\n          enum:\n          - up\n          - down\n        member_ports_up:\n          description: |-\n            The number of LAG member ports up.\n          type: integer\n        frames_tx:\n          description: |-\n            The current total number of frames transmitted.\n          type: integer\n          format: int64\n          minimum: 0\n        frames_rx:\n          description: |-\n            The current total number of valid frames received.\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_tx:\n          description: |-\n            The current total number of bytes transmitted.\n          type: integer\n          format: int64\n          minimum: 0\n        bytes_rx:\n          description: |-\n            The current total number of valid bytes received.\n          type: integer\n          format: int64\n          minimum: 0\n        frames_tx_rate:\n          description: |-\n            The current rate of frames transmitted.\n          type: number\n        frames_rx_rate:\n          description: |-\n            The current rate of valid frames received.\n          type: number\n        bytes_tx_rate:\n          description: |-\n            The current rate of bytes transmitted.\n          type: number\n        bytes_rx_rate:\n          description: |-\n            The current rate of bytes received.\n          type: number\n    LacpLagMember.Metrics.Request:\n      description: |-\n        The request to retrieve LACP per LAG member metrics/statistics.\n      type: object\n      properties:\n        lag_names:\n          description: |\n            The names of LAG (ports group) for which LACP metrics to be returned. An empty list will return metrics for all LAGs.\n\n            x-constraint:\n            - /components/schemas/Lag/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Lag/properties/name\n        lag_member_port_names:\n          description: |\n            The names of LAG members (ports) for which LACP metrics to be returned. An empty list will return metrics for all LAG members.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n        column_names:\n          description: |-\n            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned. The name of LAG and LAG member can not be excluded.\n          type: array\n          items:\n            type: string\n            enum:\n            - lacp_in_pkts\n            - lacp_out_pkts\n            - lacp_rx_errors\n            - activity\n            - timeout\n            - synchronization\n            - aggregatable\n            - collecting\n            - distributing\n            - system_id\n            - oper_key\n            - partner_id\n            - partner_key\n            - port_num\n            - partner_port_num\n    LacpLagMember.Metric:\n      description: |-\n        LACP metrics (statistics) per LAG member.\n      type: object\n      properties:\n        lag_name:\n          description: |-\n            The name of a LAG (ports group) configured with LACP.\n          type: string\n        lag_member_port_name:\n          description: |-\n            The name of a LAG member (port) configured with LACP.\n          type: string\n        lacp_in_pkts:\n          description: |-\n            Number of LACPDUs received.\n          type: integer\n          format: int64\n          minimum: 0\n        lacp_out_pkts:\n          description: |-\n            Number of LACPDUs transmitted.\n          type: integer\n          format: int64\n          minimum: 0\n        lacp_rx_errors:\n          description: |-\n            Number of LACPDUs receive packet errors.\n          type: integer\n          format: int64\n          minimum: 0\n        activity:\n          description: |-\n            Indicates participant is active or passive.\n          type: string\n          enum:\n          - active\n          - passive\n        timeout:\n          description: |-\n            The timeout type (short or long) used by the participant.\n          type: string\n          enum:\n          - short\n          - long\n        synchronization:\n          description: |-\n            Indicates whether the participant is in-sync or out-of-sync.\n          type: string\n          enum:\n          - in_sync\n          - out_sync\n        aggregatable:\n          description: |-\n            A true value indicates that the participant will allow the link to be used as part of the aggregate. A false value indicates the link should be used as an  individual link.\n          type: boolean\n        collecting:\n          description: |-\n            If true, the participant is collecting incoming frames on the link, otherwise false.\n          type: boolean\n        distributing:\n          description: |-\n            When true, the participant is distributing outgoing frames; when false, distribution is disabled.\n          type: boolean\n        system_id:\n          description: |-\n            MAC address that defines the local system ID for the aggregate interface.\n          type: string\n          format: mac\n        oper_key:\n          description: |-\n            Current operational value of the key for the aggregate interface.\n          type: integer\n          format: int32\n        partner_id:\n          description: |-\n            MAC address representing the protocol partner's interface system ID.\n          type: string\n          format: mac\n        partner_key:\n          description: |-\n            Operational value of the protocol partner's key.\n          type: integer\n          format: int32\n        port_num:\n          description: |-\n            Port number of the local (actor) aggregation member.\n          type: integer\n          format: int32\n        partner_port_num:\n          description: |-\n            Port number of the partner (remote) port for this member port.\n          type: integer\n          format: int32\n    States.Request:\n      description: |-\n        Request to traffic generator for states of choice\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - ipv4_neighbors\n          - ipv6_neighbors\n          - bgp_prefixes\n          default: ipv4_neighbors\n        ipv4_neighbors:\n          $ref: '#/components/schemas/Neighborsv4.States.Request'\n        ipv6_neighbors:\n          $ref: '#/components/schemas/Neighborsv6.States.Request'\n        bgp_prefixes:\n          $ref: '#/components/schemas/BgpPrefix.State.Request'\n    States.Response:\n      description: |-\n        Response containing chosen traffic generator states\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - ipv4_neighbors\n          - ipv6_neighbors\n          - bgp_prefixes\n          default: ipv4_neighbors\n        ipv4_neighbors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Neighborsv4.State'\n        ipv6_neighbors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Neighborsv6.State'\n        bgp_prefixes:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpPrefixes.State'\n    Neighborsv4.States.Request:\n      description: |-\n        The request to retrieve IPv4 Neighbor state (ARP cache entries) of a network interface(s).\n      type: object\n      properties:\n        ethernet_names:\n          description: |\n            The names of Ethernet interfaces for which Neighbor state (ARP cache entries) will be retrieved. If no names are specified then the results will contain Neighbor state (ARP cache entries) for all available Ethernet interfaces.\n\n            x-constraint:\n            - /components/schemas/Device.Ethernet/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n    Neighborsv4.State:\n      description: |-\n        IPv4 Neighbor state (ARP cache entry).\n      type: object\n      required:\n      - ethernet_name\n      - ipv4_address\n      properties:\n        ethernet_name:\n          description: |-\n            The name of the Ethernet interface associated with the Neighbor state (ARP cache entry).\n          type: string\n        ipv4_address:\n          description: |-\n            The IPv4 address of the neighbor.\n          type: string\n          format: ipv4\n        link_layer_address:\n          description: |-\n            The link-layer address (MAC) of the neighbor.\n          type: string\n          format: mac\n    Neighborsv6.States.Request:\n      description: |-\n        The request to retrieve IPv6 Neighbor state (NDISC cache entries) of a network interface(s).\n      type: object\n      properties:\n        ethernet_names:\n          description: |\n            The names of Ethernet interfaces for which Neighbor state (NDISC cache entries) will be retrieved. If no names are specified then the results will contain Neighbor state (NDISC cache entries) for all available Ethernet interfaces.\n\n            x-constraint:\n            - /components/schemas/Device.Ethernet/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Device.Ethernet/properties/name\n    Neighborsv6.State:\n      description: |-\n        IPv6 Neighbor state (NDISC cache entry).\n      type: object\n      required:\n      - ethernet_name\n      - ipv6_address\n      properties:\n        ethernet_name:\n          description: |-\n            The name of the Ethernet interface associated with the Neighbor state (NDISC cache entry).\n          type: string\n        ipv6_address:\n          description: |-\n            The IPv6 address of the neighbor.\n          type: string\n          format: ipv6\n        link_layer_address:\n          description: |-\n            The link-layer address (MAC) of the neighbor.\n          type: string\n          format: mac\n    BgpPrefix.State.Request:\n      description: |-\n        The request to retrieve BGP peer prefix information.\n      type: object\n      properties:\n        bgp_peer_names:\n          description: |\n            The names of BGP peers for which prefix information will be retrieved. If no names are specified then the results will contain prefix information for all configured BGP peers.\n\n            x-constraint:\n            - /components/schemas/Bgp.v4Peer/properties/name\n            - /components/schemas/Bgp.v6Peer/properties/name\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - /components/schemas/Bgp.v4Peer/properties/name\n          - /components/schemas/Bgp.v6Peer/properties/name\n        prefix_filters:\n          description: |-\n            Specify which prefixes to return. If the list is empty or missing then all prefixes will be returned.\n          type: array\n          items:\n            type: string\n            enum:\n            - ipv4_unicast\n            - ipv6_unicast\n        ipv4_unicast_filters:\n          description: |-\n            The IPv4 unicast results can be filtered by specifying additional prefix search criteria. If the ipv4_unicast_filters property is missing or empty then all IPv4 prefixes will be returned.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpPrefix.Ipv4Unicast.Filter'\n        ipv6_unicast_filters:\n          description: |-\n            The IPv6 unicast results can be filtered by specifying additional prefix search criteria. If the ipv6_unicast_filters property is missing or empty then all IPv6 prefixes will be returned.\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpPrefix.Ipv6Unicast.Filter'\n    BgpPrefix.Ipv4Unicast.Filter:\n      type: object\n      properties:\n        addresses:\n          description: |-\n            The addresses to match. If the addresses property is missing or empty then all addresses will match.\n          type: array\n          items:\n            type: string\n            format: ipv4\n        prefix_length:\n          description: |-\n            The prefix length to match. If the prefix length is missing then all prefix lengths will match.\n          type: integer\n        origin:\n          description: |-\n            The origin to match. If the origin is missing then all origins will match.\n          type: string\n          enum:\n          - igp\n          - egp\n        path_id:\n          description: |-\n            The path id to match. If the path id is missing then all path ids will match.\n          type: integer\n    BgpPrefix.Ipv6Unicast.Filter:\n      type: object\n      properties:\n        addresses:\n          description: |-\n            The addresses to match. If the addresses property is missing or empty then all addresses will match.\n          type: array\n          items:\n            type: string\n            format: ipv6\n        prefix_length:\n          description: |-\n            The prefix length to match. If the prefix length is missing then all prefix lengths will match.\n          type: integer\n        origin:\n          description: |-\n            The origin to match. If the origin is missing then all origins will match.\n          type: string\n          enum:\n          - igp\n          - egp\n        path_id:\n          description: |-\n            The path id to match. If the path id is missing then all path ids will match.\n          type: integer\n    BgpPrefixes.State:\n      description: |-\n        BGP peer prefixes.\n      type: object\n      properties:\n        bgp_peer_name:\n          description: |-\n            The name of a BGP peer.\n          type: string\n        ipv4_unicast_prefixes:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpPrefixIpv4Unicast.State'\n        ipv6_unicast_prefixes:\n          type: array\n          items:\n            $ref: '#/components/schemas/BgpPrefixIpv6Unicast.State'\n    BgpPrefixIpv4Unicast.State:\n      description: |-\n        IPv4 unicast prefix.\n        BGP peer prefix.\n      type: object\n      properties:\n        ipv4_address:\n          description: |-\n            An IPv4 unicast address\n          type: string\n        prefix_length:\n          description: |-\n            The length of the prefix.\n          type: integer\n        origin:\n          description: |-\n            The origin of the prefix.\n          type: string\n          enum:\n          - igp\n          - egp\n        path_id:\n          description: |-\n            The path id.\n          type: integer\n        ipv4_next_hop:\n          description: |-\n            The IPv4 address of the egress interface.\n          type: string\n          format: ipv4\n        ipv6_next_hop:\n          description: |-\n            The IPv6 address of the egress interface.\n          type: string\n          format: ipv6\n    BgpPrefixIpv6Unicast.State:\n      description: |-\n        IPv6 unicast prefix.\n        BGP peer prefix.\n      type: object\n      properties:\n        ipv6_address:\n          description: |-\n            An IPv6 unicast address\n          type: string\n        prefix_length:\n          description: |-\n            The length of the prefix.\n          type: integer\n        origin:\n          description: |-\n            The origin of the prefix.\n          type: string\n          enum:\n          - igp\n          - egp\n        path_id:\n          description: |-\n            The path id.\n          type: integer\n        ipv4_next_hop:\n          description: |-\n            The IPv4 address of the egress interface.\n          type: string\n          format: ipv4\n        ipv6_next_hop:\n          description: |-\n            The IPv6 address of the egress interface.\n          type: string\n          format: ipv6\n    Capture.Request:\n      description: |-\n        The capture result request to the traffic generator. Stops the port capture on the port_name and returns the capture.\n      type: object\n      required:\n      - port_name\n      properties:\n        port_name:\n          description: |\n            The name of a port a capture is started on.\n\n            x-constraint:\n            - /components/schemas/Port/properties/name\n          type: string\n          x-constraint:\n          - /components/schemas/Port/properties/name\n    Pattern.Flow.Ethernet.Dst.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ethernet.Dst:\n      description: |-\n        Destination MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst.Counter'\n    Pattern.Flow.Ethernet.Src.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ethernet.Src:\n      description: |-\n        Source MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src.Counter'\n    Pattern.Flow.Ethernet.EtherType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 65535\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n        arp: 2054\n        vlan_802_1_q: 33024\n        reserved: 65535\n    Pattern.Flow.Ethernet.EtherType:\n      description: |-\n        Ethernet type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 65535\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 65535\n          minimum: 0\n          maximum: 65535\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 65535\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType.Counter'\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n        arp: 2054\n        vlan_802_1_q: 33024\n        reserved: 65535\n    Pattern.Flow.Ethernet.PfcQueue.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ethernet.PfcQueue:\n      description: |-\n        Priority flow control queue\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue.Counter'\n    Pattern.Flow.Vlan.Priority.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vlan.Priority:\n      description: |-\n        Priority code point\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority.Counter'\n    Pattern.Flow.Vlan.Cfi.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vlan.Cfi:\n      description: |-\n        Canonical format indicator or drop elegible indicator\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi.Counter'\n    Pattern.Flow.Vlan.Id.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4095\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4095\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vlan.Id:\n      description: |-\n        Vlan identifier\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4095\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4095\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id.Counter'\n    Pattern.Flow.Vlan.Tpid.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 33024\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        x8100: 33024\n        x88A8: 34984\n        x9100: 37120\n        x9200: 37376\n        x9300: 37632\n    Pattern.Flow.Vlan.Tpid:\n      description: |-\n        Protocol identifier\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 33024\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 33024\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid.Counter'\n      x-constants:\n        x8100: 33024\n        x88A8: 34984\n        x9100: 37120\n        x9200: 37376\n        x9300: 37632\n    Pattern.Flow.Vxlan.Flags.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 8\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vxlan.Flags:\n      description: |-\n        Flags field with a bit format of RRRRIRRR. The I flag MUST be set to 1 for a valid vxlan network id (VNI).   The other 7 bits (designated \"R\") are reserved fields and MUST be  set to zero on transmission and ignored on receipt.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 8\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 8\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags.Counter'\n    Pattern.Flow.Vxlan.Reserved0.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 16777215\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vxlan.Reserved0:\n      description: |-\n        Reserved field\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 16777215\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0.Counter'\n    Pattern.Flow.Vxlan.Vni.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 16777215\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vxlan.Vni:\n      description: |-\n        VXLAN network id\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 16777215\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni.Counter'\n    Pattern.Flow.Vxlan.Reserved1.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Vxlan.Reserved1:\n      description: |-\n        Reserved field\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1.Counter'\n    Pattern.Flow.Ipv4.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 4\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Version:\n      description: |-\n        Version\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 4\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 4\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version.Counter'\n    Pattern.Flow.Ipv4.HeaderLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 5\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.HeaderLength:\n      description: |-\n        Header length\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 5\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 5\n          minimum: 0\n          maximum: 15\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 5\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength.Counter'\n    Pattern.Flow.Ipv4.TotalLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 46\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.TotalLength:\n      description: |-\n        Total length\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 46\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 46\n          minimum: 0\n          maximum: 65535\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 46\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength.Counter'\n    Pattern.Flow.Ipv4.Identification.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Identification:\n      description: |-\n        Identification\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification.Counter'\n    Pattern.Flow.Ipv4.Reserved.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Reserved:\n      description: |-\n        Reserved flag.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved.Counter'\n    Pattern.Flow.Ipv4.DontFragment.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.DontFragment:\n      description: |-\n        Dont fragment flag If the dont_fragment flag is set and fragmentation is required to route the packet then the packet is dropped.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment.Counter'\n    Pattern.Flow.Ipv4.MoreFragments.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.MoreFragments:\n      description: |-\n        More fragments flag\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments.Counter'\n    Pattern.Flow.Ipv4.FragmentOffset.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 31\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 31\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.FragmentOffset:\n      description: |-\n        Fragment offset\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 31\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 31\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset.Counter'\n    Pattern.Flow.Ipv4.TimeToLive.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.TimeToLive:\n      description: |-\n        Time to live\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 64\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive.Counter'\n    Pattern.Flow.Ipv4.Protocol.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 61\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Protocol:\n      description: |-\n        Protocol, default is 61 any host internal protocol\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 61\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 61\n          minimum: 0\n          maximum: 255\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 61\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol.Counter'\n    Pattern.Flow.Ipv4.HeaderChecksum:\n      description: |-\n        Header checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Ipv4.Src.Counter:\n      description: |-\n        ipv4 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        step:\n          type: string\n          default: 0.0.0.1\n          format: ipv4\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Src:\n      description: |-\n        Source address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 0.0.0.0\n          format: ipv4\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src.Counter'\n    Pattern.Flow.Ipv4.Dst.Counter:\n      description: |-\n        ipv4 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        step:\n          type: string\n          default: 0.0.0.1\n          format: ipv4\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Dst:\n      description: |-\n        Destination address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 0.0.0.0\n          format: ipv4\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst.Counter'\n    Pattern.Flow.Ipv4.Priority.Raw.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Priority.Raw:\n      description: |-\n        Raw priority\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw.Counter'\n    Pattern.Flow.Ipv4.Dscp.Phb.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 63\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 63\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        default: 0\n        cs1: 8\n        cs2: 16\n        cs3: 24\n        cs4: 32\n        cs5: 40\n        cs6: 48\n        cs7: 56\n        af11: 10\n        af12: 12\n        af13: 14\n        af21: 18\n        af22: 20\n        af23: 22\n        af31: 26\n        af32: 28\n        af33: 30\n        af41: 34\n        af42: 36\n        af43: 38\n        ef46: 46\n    Pattern.Flow.Ipv4.Dscp.Phb:\n      description: |-\n        Per hop behavior\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 63\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 63\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb.Counter'\n      x-constants:\n        default: 0\n        cs1: 8\n        cs2: 16\n        cs3: 24\n        cs4: 32\n        cs5: 40\n        cs6: 48\n        cs7: 56\n        af11: 10\n        af12: 12\n        af13: 14\n        af21: 18\n        af22: 20\n        af23: 22\n        af31: 26\n        af32: 28\n        af33: 30\n        af41: 34\n        af42: 36\n        af43: 38\n        ef46: 46\n    Pattern.Flow.Ipv4.Dscp.Ecn.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 3\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 3\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        non_capable: 0\n        capable_transport_0: 1\n        capable_transport_1: 2\n        congestion_encountered: 3\n    Pattern.Flow.Ipv4.Dscp.Ecn:\n      description: |-\n        Explicit congestion notification\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 3\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 3\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn.Counter'\n      x-constants:\n        non_capable: 0\n        capable_transport_0: 1\n        capable_transport_1: 2\n        congestion_encountered: 3\n    Pattern.Flow.Ipv4.Tos.Precedence.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        routine: 0\n        priority: 1\n        immediate: 2\n        flash: 3\n        flash_override: 4\n        critic_ecp: 5\n        internetwork_control: 6\n        network_control: 7\n    Pattern.Flow.Ipv4.Tos.Precedence:\n      description: |-\n        Precedence\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence.Counter'\n      x-constants:\n        routine: 0\n        priority: 1\n        immediate: 2\n        flash: 3\n        flash_override: 4\n        critic_ecp: 5\n        internetwork_control: 6\n        network_control: 7\n    Pattern.Flow.Ipv4.Tos.Delay.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Delay:\n      description: |-\n        Delay\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay.Counter'\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Throughput.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Throughput:\n      description: |-\n        Throughput\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput.Counter'\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Reliability.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Reliability:\n      description: |-\n        Reliability\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability.Counter'\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Monetary.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Monetary:\n      description: |-\n        Monetary\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary.Counter'\n      x-constants:\n        normal: 0\n        low: 1\n    Pattern.Flow.Ipv4.Tos.Unused.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv4.Tos.Unused:\n      description: |-\n        Unused\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused.Counter'\n    Pattern.Flow.Ipv6.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 6\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.Version:\n      description: |-\n        Version number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 6\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 6\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version.Counter'\n    Pattern.Flow.Ipv6.TrafficClass.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.TrafficClass:\n      description: |-\n        Traffic class\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass.Counter'\n    Pattern.Flow.Ipv6.FlowLabel.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1048575\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1048575\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.FlowLabel:\n      description: |-\n        Flow label\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1048575\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1048575\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel.Counter'\n    Pattern.Flow.Ipv6.PayloadLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.PayloadLength:\n      description: |-\n        Payload length\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength.Counter'\n    Pattern.Flow.Ipv6.NextHeader.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 59\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        hopopt: 0\n        icmp: 1\n        igmp: 2\n        ggp: 3\n        ip_in_ip: 4\n        st: 5\n        tcp: 6\n        cpt: 7\n        egp: 8\n        igp: 9\n        no_next_header: 59\n    Pattern.Flow.Ipv6.NextHeader:\n      description: |-\n        Next header\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 59\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 59\n          minimum: 0\n          maximum: 255\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 59\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader.Counter'\n      x-constants:\n        hopopt: 0\n        icmp: 1\n        igmp: 2\n        ggp: 3\n        ip_in_ip: 4\n        st: 5\n        tcp: 6\n        cpt: 7\n        egp: 8\n        igp: 9\n        no_next_header: 59\n    Pattern.Flow.Ipv6.HopLimit.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.HopLimit:\n      description: |-\n        Hop limit\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 64\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit.Counter'\n    Pattern.Flow.Ipv6.Src.Counter:\n      description: |-\n        ipv6 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: ::0\n          format: ipv6\n        step:\n          type: string\n          default: ::1\n          format: ipv6\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.Src:\n      description: |-\n        Source address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: ::0\n          format: ipv6\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - ::0\n          format: ipv6\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src.Counter'\n    Pattern.Flow.Ipv6.Dst.Counter:\n      description: |-\n        ipv6 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: ::0\n          format: ipv6\n        step:\n          type: string\n          default: ::1\n          format: ipv6\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ipv6.Dst:\n      description: |-\n        Destination address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: ::0\n          format: ipv6\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - ::0\n          format: ipv6\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst.Counter'\n    Pattern.Flow.PfcPause.Dst.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 01:80:c2:00:00:01\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.Dst:\n      description: |-\n        Destination MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 01:80:c2:00:00:01\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 01:80:c2:00:00:01\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst.Counter'\n    Pattern.Flow.PfcPause.Src.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.Src:\n      description: |-\n        Source MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src.Counter'\n    Pattern.Flow.PfcPause.EtherType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 34824\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        x8808: 34824\n    Pattern.Flow.PfcPause.EtherType:\n      description: |-\n        Ethernet type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 34824\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 34824\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType.Counter'\n      x-constants:\n        x8808: 34824\n    Pattern.Flow.PfcPause.ControlOpCode.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 257\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.ControlOpCode:\n      description: |-\n        Control operation code\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 257\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 257\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode.Counter'\n    Pattern.Flow.PfcPause.ClassEnableVector.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.ClassEnableVector:\n      description: |-\n        Destination\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector.Counter'\n    Pattern.Flow.PfcPause.PauseClass0.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass0:\n      description: |-\n        Pause class 0\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0.Counter'\n    Pattern.Flow.PfcPause.PauseClass1.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass1:\n      description: |-\n        Pause class 1\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1.Counter'\n    Pattern.Flow.PfcPause.PauseClass2.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass2:\n      description: |-\n        Pause class 2\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2.Counter'\n    Pattern.Flow.PfcPause.PauseClass3.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass3:\n      description: |-\n        Pause class 3\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3.Counter'\n    Pattern.Flow.PfcPause.PauseClass4.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass4:\n      description: |-\n        Pause class 4\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4.Counter'\n    Pattern.Flow.PfcPause.PauseClass5.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass5:\n      description: |-\n        Pause class 5\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5.Counter'\n    Pattern.Flow.PfcPause.PauseClass6.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass6:\n      description: |-\n        Pause class 6\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6.Counter'\n    Pattern.Flow.PfcPause.PauseClass7.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.PfcPause.PauseClass7:\n      description: |-\n        Pause class 7\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7.Counter'\n    Pattern.Flow.EthernetPause.Dst.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 01:80:c2:00:00:01\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.EthernetPause.Dst:\n      description: |-\n        Destination MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 01:80:c2:00:00:01\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 01:80:c2:00:00:01\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst.Counter'\n    Pattern.Flow.EthernetPause.Src.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.EthernetPause.Src:\n      description: |-\n        Source MAC address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src.Counter'\n    Pattern.Flow.EthernetPause.EtherType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 34824\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        flow_control: 34824\n    Pattern.Flow.EthernetPause.EtherType:\n      description: |-\n        Ethernet type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 34824\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 34824\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType.Counter'\n      x-constants:\n        flow_control: 34824\n    Pattern.Flow.EthernetPause.ControlOpCode.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.EthernetPause.ControlOpCode:\n      description: |-\n        Control operation code\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode.Counter'\n    Pattern.Flow.EthernetPause.Time.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.EthernetPause.Time:\n      description: |-\n        Time\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time.Counter'\n    Pattern.Flow.Tcp.SrcPort.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.SrcPort:\n      description: |-\n        Source port\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort.Counter'\n    Pattern.Flow.Tcp.DstPort.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.DstPort:\n      description: |-\n        Destination port\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort.Counter'\n    Pattern.Flow.Tcp.SeqNum.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4294967295\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.SeqNum:\n      description: |-\n        Sequence number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4294967295\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum.Counter'\n    Pattern.Flow.Tcp.AckNum.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4294967295\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.AckNum:\n      description: |-\n        Acknowledgement number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4294967295\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum.Counter'\n    Pattern.Flow.Tcp.DataOffset.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.DataOffset:\n      description: |-\n        The number of 32 bit words in the TCP header. This indicates where the data begins.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset.Counter'\n    Pattern.Flow.Tcp.EcnNs.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.EcnNs:\n      description: |-\n        Explicit congestion notification, concealment protection.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs.Counter'\n    Pattern.Flow.Tcp.EcnCwr.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.EcnCwr:\n      description: |-\n        Explicit congestion notification, congestion window reduced.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr.Counter'\n    Pattern.Flow.Tcp.EcnEcho.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.EcnEcho:\n      description: |-\n        Explicit congestion notification, echo. 1 indicates the peer is ecn capable. 0 indicates that a packet with ipv4.ecn = 11 in the ip header was  received during normal transmission.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho.Counter'\n    Pattern.Flow.Tcp.CtlUrg.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlUrg:\n      description: |-\n        A value of 1 indicates that the urgent pointer field is significant.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg.Counter'\n    Pattern.Flow.Tcp.CtlAck.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlAck:\n      description: |-\n        A value of 1 indicates that the ackknowledgment field is significant.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck.Counter'\n    Pattern.Flow.Tcp.CtlPsh.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlPsh:\n      description: \"Asks to push the buffered data to the receiving application. \"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh.Counter'\n    Pattern.Flow.Tcp.CtlRst.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlRst:\n      description: \"Reset the connection. \"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst.Counter'\n    Pattern.Flow.Tcp.CtlSyn.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlSyn:\n      description: \"Synchronize sequenece numbers. \"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn.Counter'\n    Pattern.Flow.Tcp.CtlFin.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.CtlFin:\n      description: \"Last packet from the sender. \"\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin.Counter'\n    Pattern.Flow.Tcp.Window.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Tcp.Window:\n      description: |-\n        Tcp connection window.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window.Counter'\n    Pattern.Flow.Udp.SrcPort.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Udp.SrcPort:\n      description: |-\n        Source port\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort.Counter'\n    Pattern.Flow.Udp.DstPort.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Udp.DstPort:\n      description: |-\n        Destination port\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort.Counter'\n    Pattern.Flow.Udp.Length.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Udp.Length:\n      description: |-\n        Length\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.Length.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Udp.Length.Counter'\n    Pattern.Flow.Udp.Checksum:\n      description: |-\n        UDP checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Gre.ChecksumPresent.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gre.ChecksumPresent:\n      description: |-\n        Checksum present bit\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent.Counter'\n    Pattern.Flow.Gre.Reserved0.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4095\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4095\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gre.Reserved0:\n      description: |-\n        Reserved bits\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4095\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4095\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0.Counter'\n    Pattern.Flow.Gre.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gre.Version:\n      description: |-\n        GRE version number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Version.Counter'\n    Pattern.Flow.Gre.Protocol.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 2048\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n    Pattern.Flow.Gre.Protocol:\n      description: |-\n        Protocol type of encapsulated payload\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 2048\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 2048\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol.Counter'\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n    Pattern.Flow.Gre.Checksum:\n      description: |-\n        Optional checksum of GRE header and payload. Only present if the checksum_present bit is set.\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Gre.Reserved1.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gre.Reserved1:\n      description: |-\n        Optional reserved field. Only present if the checksum_present bit is set.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1.Counter'\n    Pattern.Flow.Gtpv1.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.Version:\n      description: |-\n        GTPv1 version\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version.Counter'\n    Pattern.Flow.Gtpv1.ProtocolType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.ProtocolType:\n      description: |-\n        Protocol type, GTP is 1, GTP' is 0\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType.Counter'\n    Pattern.Flow.Gtpv1.Reserved.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.Reserved:\n      description: |-\n        Reserved field\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved.Counter'\n    Pattern.Flow.Gtpv1.EFlag.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.EFlag:\n      description: |-\n        Extension header field present\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag.Counter'\n    Pattern.Flow.Gtpv1.SFlag.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.SFlag:\n      description: |-\n        Sequence number field present\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag.Counter'\n    Pattern.Flow.Gtpv1.PnFlag.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.PnFlag:\n      description: |-\n        N-PDU field present\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag.Counter'\n    Pattern.Flow.Gtpv1.MessageType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.MessageType:\n      description: |-\n        The type of GTP message Different types of messages are defined in 3GPP TS 29.060 section 7.1\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType.Counter'\n    Pattern.Flow.Gtpv1.MessageLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.MessageLength:\n      description: |-\n        The length of the payload (the bytes following the mandatory 8-byte GTP header) in bytes that includes any optional fields\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength.Counter'\n    Pattern.Flow.Gtpv1.Teid.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4294967295\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.Teid:\n      description: |-\n        Tunnel endpoint identifier (TEID) used to multiplex connections in the same GTP tunnel\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4294967295\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid.Counter'\n    Pattern.Flow.Gtpv1.SquenceNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.SquenceNumber:\n      description: |-\n        Sequence number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the s_flag bit is on.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber.Counter'\n    Pattern.Flow.Gtpv1.NPduNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.NPduNumber:\n      description: |-\n        N-PDU number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the pn_flag bit is on.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber.Counter'\n    Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv1.NextExtensionHeaderType:\n      description: |-\n        Next extension header. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the e_flag bit is on.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter'\n    Pattern.Flow.GtpExtension.ExtensionLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.GtpExtension.ExtensionLength:\n      description: |-\n        This field states the length of this extension header,  including the length, the contents, and the next extension header field, in 4-octet units, so the length of the extension must  always be a multiple of 4.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength.Counter'\n    Pattern.Flow.GtpExtension.Contents.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 281474976710655\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 281474976710655\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.GtpExtension.Contents:\n      description: |-\n        The extension header contents\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 281474976710655\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 281474976710655\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents.Counter'\n    Pattern.Flow.GtpExtension.NextExtensionHeader.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.GtpExtension.NextExtensionHeader:\n      description: |-\n        It states the type of the next extension, or 0 if no next  extension exists.  This permits chaining several next extension headers.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader.Counter'\n    Pattern.Flow.Gtpv2.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 2\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.Version:\n      description: |-\n        Version number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 2\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 2\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version.Counter'\n    Pattern.Flow.Gtpv2.PiggybackingFlag.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.PiggybackingFlag:\n      description: |-\n        If piggybacking_flag is set to 1 then another GTP-C message with its own header shall be present at the end of the current message\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag.Counter'\n    Pattern.Flow.Gtpv2.TeidFlag.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.TeidFlag:\n      description: |-\n        If teid_flag is set to 1 then the TEID field will be present  between the message length and the sequence number. All messages except Echo and Echo reply require TEID to be present\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag.Counter'\n    Pattern.Flow.Gtpv2.Spare1.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.Spare1:\n      description: |-\n        A 3-bit reserved field (must be 0).\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1.Counter'\n    Pattern.Flow.Gtpv2.MessageType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.MessageType:\n      description: |-\n        An 8-bit field that indicates the type of GTP message. Different types of messages are defined in 3GPP TS 29.060 section 7.1\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType.Counter'\n    Pattern.Flow.Gtpv2.MessageLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.MessageLength:\n      description: |-\n        A 16-bit field that indicates the length of the payload in bytes, excluding the mandatory GTP-c header (first 4 bytes). Includes the TEID and sequence_number if they are present.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength.Counter'\n    Pattern.Flow.Gtpv2.Teid.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 4294967295\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.Teid:\n      description: |-\n        Tunnel endpoint identifier. A 32-bit (4-octet) field used to multiplex different connections in the same GTP tunnel. Is present only if the teid_flag is set.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 4294967295\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 4294967295\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid.Counter'\n    Pattern.Flow.Gtpv2.SequenceNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 16777215\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.SequenceNumber:\n      description: |-\n        The sequence number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 16777215\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 16777215\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber.Counter'\n    Pattern.Flow.Gtpv2.Spare2.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Gtpv2.Spare2:\n      description: |-\n        Reserved field\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2.Counter'\n    Pattern.Flow.Arp.HardwareType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        ethernet: 1\n    Pattern.Flow.Arp.HardwareType:\n      description: |-\n        Network link protocol type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType.Counter'\n      x-constants:\n        ethernet: 1\n    Pattern.Flow.Arp.ProtocolType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 2048\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n    Pattern.Flow.Arp.ProtocolType:\n      description: |-\n        The internetwork protocol for which the ARP request is intended\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 2048\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 2048\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType.Counter'\n      x-constants:\n        ipv4: 2048\n        ipv6: 34525\n    Pattern.Flow.Arp.HardwareLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 6\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.HardwareLength:\n      description: |-\n        Length (in octets) of a hardware address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 6\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 6\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength.Counter'\n    Pattern.Flow.Arp.ProtocolLength.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 4\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.ProtocolLength:\n      description: |-\n        Length (in octets) of internetwork addresses\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 4\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 4\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength.Counter'\n    Pattern.Flow.Arp.Operation.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        request: 1\n        reply: 2\n    Pattern.Flow.Arp.Operation:\n      description: |-\n        The operation that the sender is performing\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation.Counter'\n      x-constants:\n        request: 1\n        reply: 2\n    Pattern.Flow.Arp.SenderHardwareAddr.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.SenderHardwareAddr:\n      description: |-\n        Media address of the sender\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr.Counter'\n    Pattern.Flow.Arp.SenderProtocolAddr.Counter:\n      description: |-\n        ipv4 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        step:\n          type: string\n          default: 0.0.0.1\n          format: ipv4\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.SenderProtocolAddr:\n      description: |-\n        Internetwork address of the sender\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 0.0.0.0\n          format: ipv4\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr.Counter'\n    Pattern.Flow.Arp.TargetHardwareAddr.Counter:\n      description: |-\n        mac counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        step:\n          type: string\n          default: 00:00:00:00:00:01\n          format: mac\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.TargetHardwareAddr:\n      description: |-\n        Media address of the target\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 00:00:00:00:00:00\n          format: mac\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 00:00:00:00:00:00\n          format: mac\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr.Counter'\n    Pattern.Flow.Arp.TargetProtocolAddr.Counter:\n      description: |-\n        ipv4 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        step:\n          type: string\n          default: 0.0.0.1\n          format: ipv4\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Arp.TargetProtocolAddr:\n      description: |-\n        Internetwork address of the target\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 0.0.0.0\n          format: ipv4\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr.Counter'\n    Pattern.Flow.Icmp.Echo.Type.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 8\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        reply: 0\n        request: 8\n    Pattern.Flow.Icmp.Echo.Type:\n      description: |-\n        The type of ICMP echo packet\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 8\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 8\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Type.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Type.Counter'\n      x-constants:\n        reply: 0\n        request: 8\n    Pattern.Flow.Icmp.Echo.Code.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmp.Echo.Code:\n      description: |-\n        The ICMP subtype.  The default code for ICMP echo request and reply is 0.\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Code.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Code.Counter'\n    Pattern.Flow.Icmp.Echo.Checksum:\n      description: |-\n        ICMP checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Icmp.Echo.Identifier.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmp.Echo.Identifier:\n      description: |-\n        ICMP identifier\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Identifier.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.Identifier.Counter'\n    Pattern.Flow.Icmp.Echo.SequenceNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmp.Echo.SequenceNumber:\n      description: |-\n        ICMP sequence number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.SequenceNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.Echo.SequenceNumber.Counter'\n    Pattern.Flow.Icmp.Common.Checksum:\n      description: |-\n        ICMP checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Icmp.NextFields.Identifier.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmp.NextFields.Identifier:\n      description: |-\n        ICMP identifier\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.NextFields.Identifier.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.NextFields.Identifier.Counter'\n    Pattern.Flow.Icmp.NextFields.SequenceNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmp.NextFields.SequenceNumber:\n      description: |-\n        ICMP sequence number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.NextFields.SequenceNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmp.NextFields.SequenceNumber.Counter'\n    Pattern.Flow.Icmpv6.Echo.Type.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 128\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        request: 128\n        reply: 129\n    Pattern.Flow.Icmpv6.Echo.Type:\n      description: |-\n        ICMPv6 echo type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 128\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 128\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Type.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Type.Counter'\n      x-constants:\n        request: 128\n        reply: 129\n    Pattern.Flow.Icmpv6.Echo.Code.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmpv6.Echo.Code:\n      description: |-\n        ICMPv6 echo sub type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Code.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Code.Counter'\n    Pattern.Flow.Icmpv6.Echo.Identifier.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmpv6.Echo.Identifier:\n      description: |-\n        ICMPv6 echo identifier\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Identifier.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.Identifier.Counter'\n    Pattern.Flow.Icmpv6.Echo.SequenceNumber.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Icmpv6.Echo.SequenceNumber:\n      description: |-\n        ICMPv6 echo sequence number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.SequenceNumber.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Echo.SequenceNumber.Counter'\n    Pattern.Flow.Icmpv6.Echo.Checksum:\n      description: |-\n        ICMPv6 checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Icmpv6.Common.Checksum:\n      description: |-\n        ICMPv6 checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Ppp.Address.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 255\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        standard_address: 255\n    Pattern.Flow.Ppp.Address:\n      description: |-\n        PPP address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 255\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 255\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address.Counter'\n      x-constants:\n        standard_address: 255\n    Pattern.Flow.Ppp.Control.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 3\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        unnumbered_data: 3\n    Pattern.Flow.Ppp.Control:\n      description: |-\n        PPP control\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 3\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 3\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control.Counter'\n      x-constants:\n        unnumbered_data: 3\n    Pattern.Flow.Ppp.ProtocolType.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 33\n          minimum: 0\n          maximum: 65535\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 65535\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Ppp.ProtocolType:\n      description: |-\n        PPP protocol type\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 33\n          minimum: 0\n          maximum: 65535\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 33\n          minimum: 0\n          maximum: 65535\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 33\n          minimum: 0\n          maximum: 65535\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType.Counter'\n    Pattern.Flow.Igmpv1.Version.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Igmpv1.Version:\n      description: |-\n        Version number\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version.Counter'\n    Pattern.Flow.Igmpv1.Type.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        count:\n          type: integer\n          default: 1\n      x-constants:\n        query: 1\n        report: 2\n    Pattern.Flow.Igmpv1.Type:\n      description: |-\n        Type of message\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 15\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 15\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type.Counter'\n      x-constants:\n        query: 1\n        report: 2\n    Pattern.Flow.Igmpv1.Unused.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Igmpv1.Unused:\n      description: |-\n        Unused\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused.Counter'\n    Pattern.Flow.Igmpv1.Checksum:\n      description: |-\n        Checksum\n      type: object\n      properties:\n        choice:\n          description: |-\n            The type of checksum\n          type: string\n          enum:\n          - generated\n          - custom\n          default: generated\n        generated:\n          description: |-\n            A system generated checksum value\n          type: string\n          enum:\n          - good\n          - bad\n          default: good\n        custom:\n          description: |-\n            A custom checksum value\n          type: integer\n          minimum: 0\n          maximum: 65535\n    Pattern.Flow.Igmpv1.GroupAddress.Counter:\n      description: |-\n        ipv4 counter pattern\n      type: object\n      properties:\n        start:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        step:\n          type: string\n          default: 0.0.0.1\n          format: ipv4\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Igmpv1.GroupAddress:\n      description: |-\n        Group address\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: string\n          default: 0.0.0.0\n          format: ipv4\n        values:\n          type: array\n          items:\n            type: string\n          default:\n          - 0.0.0.0\n          format: ipv4\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress.Counter'\n    Pattern.Flow.Mpls.Label.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 16\n          minimum: 0\n          maximum: 1048575\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1048575\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Mpls.Label:\n      description: |-\n        Label of routers\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - auto\n          - increment\n          - decrement\n          default: auto\n        value:\n          type: integer\n          default: 16\n          minimum: 0\n          maximum: 1048575\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 16\n          minimum: 0\n          maximum: 1048575\n        auto:\n          description: |-\n            The OTG implementation can provide a system generated\n            value for this property. If the OTG is unable to generate a value\n            the default value must be used.\n          type: integer\n          default: 16\n          minimum: 0\n          maximum: 1048575\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.Label.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.Label.Counter'\n    Pattern.Flow.Mpls.TrafficClass.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 7\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Mpls.TrafficClass:\n      description: |-\n        Traffic class\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 0\n          minimum: 0\n          maximum: 7\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 0\n          minimum: 0\n          maximum: 7\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TrafficClass.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TrafficClass.Counter'\n    Pattern.Flow.Mpls.BottomOfStack.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Mpls.BottomOfStack:\n      description: |-\n        Bottom of stack\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 1\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 1\n          minimum: 0\n          maximum: 1\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.BottomOfStack.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.BottomOfStack.Counter'\n    Pattern.Flow.Mpls.TimeToLive.Counter:\n      description: |-\n        integer counter pattern\n      type: object\n      properties:\n        start:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        step:\n          type: integer\n          default: 1\n          minimum: 0\n          maximum: 255\n        count:\n          type: integer\n          default: 1\n    Pattern.Flow.Mpls.TimeToLive:\n      description: |-\n        Time to live\n      type: object\n      properties:\n        choice:\n          type: string\n          enum:\n          - value\n          - values\n          - increment\n          - decrement\n          default: value\n        value:\n          type: integer\n          default: 64\n          minimum: 0\n          maximum: 255\n        values:\n          type: array\n          items:\n            type: integer\n          default:\n          - 64\n          minimum: 0\n          maximum: 255\n        metric_group:\n          description: |-\n            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.\n          type: string\n        increment:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TimeToLive.Counter'\n        decrement:\n          $ref: '#/components/schemas/Pattern.Flow.Mpls.TimeToLive.Counter'\n",
			"canonicalURL": "/github.com/open-traffic-generator/models@9d319838ffecb6b2ff29f6043a09b2970810ca5a/-/blob/artifacts/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/open-traffic-generator/models/blob/9d319838ffecb6b2ff29f6043a09b2970810ca5a/artifacts/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}