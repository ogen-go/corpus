{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SmartAPI/smartAPI"
		},
		"file": {
			"name": "mygene_full.yml",
			"size": 0,
			"path": "src/tests/mygene_full.yml",
			"byteSize": 21558,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: help@mygene.info\n    name: Chunlei Wu\n    x-id: https://github.com/newgene\n    x-role: responsible developer\n  description: Documentation of the MyGene.info Gene Query web services. Learn more\n    about [MyGene.info](http://mygene.info/)\n  termsOfService: http://mygene.info/terms/\n  title: MyGene.info API\n  version: '3.0'\n  x-translator:\n    component: KP\n    team:\n      - Service Provider\nservers:\n- description: Encrypted Production server\n  url: https://mygene.info/v3\n- description: Production server\n  url: http://mygene.info/v3\ntags:\n- name: gene\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/gene\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/species\"\n        name: species\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                ids:\n                  description: multiple geneids seperated by comma, e.g., \"ids=1017,1018\"\n                    or \"ids=695,ENSG00000123374\". Note that currently we only take\n                    the input ids up to 1000 maximum, the rest will be omitted.\n                  type: string\n              required:\n              - ids\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  \"$ref\": \"#/components/schemas/Gene\"\n                type: array\n          description: a list of matching gene objects\n      summary: For a list of gene ids, return the matching gene objects\n      tags:\n      - annotation\n  \"/gene/{geneid}\":\n    get:\n      parameters:\n      - description: Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired\n          Entrez Gene id works too if it is replaced by a new one, e.g., 245794\n        example: '1017'\n        in: path\n        name: geneid\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Gene\"\n          description: A matching gene object\n      summary: Retrieve gene annotation object based on Entrez or Ensembl gene id,\n        support JSONP and CORS as well.\n      tags:\n      - annotation\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      responses:\n        '200':\n          description: MyGene.info metadata object\n      summary: Get metadata about the data available from MyGene.info.\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - description: Pass a search term to filter the available fields, e.g. \"search=clinvar\".\n        in: query\n        name: search\n        schema:\n          type: string\n      - description: Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".\n        in: query\n        name: prefix\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      responses:\n        '200':\n          description: MyGene.info metadata fields object\n      summary: Get metadata about the data fields available from MyGene.info.\n  \"/query\":\n    get:\n      parameters:\n      - description: Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\", \"chr1:151,073,054-151,383,976\",\n          \"hg19.chr1:151073054-151383976\". The detailed query syntax can be found\n          from our [docs](http://docs.mygene.info/en/latest/doc/query_service.html).\n        example: CDK2\n        in: query\n        name: q\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/species\"\n        name: species\n      - \"$ref\": \"#/components/parameters/size\"\n        name: size\n      - \"$ref\": \"#/components/parameters/from\"\n        name: from\n      - \"$ref\": \"#/components/parameters/sort\"\n        name: sort\n      - description: a single field or comma-separated fields to return facets, for\n          example, \"facets=taxid\", \"facets=taxid,type_of_gene\".\n        in: query\n        name: facets\n        schema:\n          type: string\n      - description: relevant when faceting on species (i.e., “facets=taxid” are passed).\n          It’s used to pass species filter without changing the scope of faceting,\n          so that the returned facet counts won’t change. Either species name or taxonomy\n          id can be used, just like “species” parameter.\n        in: query\n        name: species_facet_filter\n        schema:\n          type: string\n      - description: 'when passed as “True” or “1”, the query returns only the hits\n          with valid Entrez gene ids. Default: False.'\n        in: query\n        name: entrezonly\n        schema:\n          type: boolean\n      - description: 'when passed as “True” or “1”, the query returns only the hits\n          with valid Ensembl gene ids. Default: False.'\n        in: query\n        name: ensemblonly\n        schema:\n          type: boolean\n      - \"$ref\": \"#/components/parameters/callback\"\n        name: callback\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/QueryResult\"\n          description: A query response object with \"hits\" property\n      summary: Make gene query and return matching gene list. Support JSONP and CORS\n        as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/fields\"\n        name: fields\n      - \"$ref\": \"#/components/parameters/species\"\n        name: species\n      - \"$ref\": \"#/components/parameters/dotfield\"\n        name: dotfield\n      - \"$ref\": \"#/components/parameters/email\"\n        name: email\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                q:\n                  description: multiple query terms seperated by comma (also support\n                    \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"\n                  type: string\n                scopes:\n                  description: 'Specify one or more fields (separated by comma) as\n                    the search \"scopes\", e.g., \"scopes=entrezgene\", \"scopes=entrezgene,ensemblgene\".\n                    The available \"fields\" can be passed to \"scopes\" parameter are\n                    listed [here](http://mygene.info/doc/query_service.html#available-fields).\n                    Default: \"scopes=entrezgene,ensemblgene,retired\" (either Entrez\n                    or Ensembl gene ids).'\n                  type: string\n              required:\n              - q\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n          description: Query response objects with \"hits\" property\n      summary: Make gene batch query and return matching gene hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/enablesMF\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/involvedInBP\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/involvedInCC\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/involvedInPathway\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/hasTranscript\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/hasGeneProduct\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/hasHomolog\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/PathwayHasGene\"\ncomponents:\n  parameters:\n    callback:\n      description: you can pass a \"callback\" parameter to make a JSONP call.\n      in: query\n      name: callback\n      schema:\n        type: string\n    dotfield:\n      description: 'control the format of the returned fields when passed \"fields\"\n        parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"True\" or \"1\",\n        the returned data object contains a single \"refseq.rna\" field, otherwise (\"False\"\n        or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default: True.'\n      in: query\n      name: dotfield\n      schema:\n        type: boolean\n    email:\n      description: If you are regular users of our services, we encourage you to provide\n        us an email, so that we can better track the usage or follow up with you.\n      in: query\n      name: email\n      schema:\n        type: string\n    fields:\n      description: 'a comma-separated fields to limit the fields returned from the\n        matching gene hits. The supported field names can be found from any gene object\n        (e.g. http://mygene.info/v3/gene/1017). Note that it supports dot notation\n        as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields\n        will be returned. Default: \"symbol,name,taxid,entrezgene,ensemblgene\".'\n      in: query\n      name: fields\n      schema:\n        type: string\n    from:\n      description: 'the number of matching gene hits to skip, starting from 0. Combining\n        with \"size\" parameter, this can be useful for paging. Default: 0.'\n      in: query\n      name: from\n      schema:\n        type: integer\n    size:\n      description: 'the maximum number of matching gene hits to return (with a cap\n        of 1000 at the moment). Default: 10.'\n      in: query\n      name: size\n      schema:\n        type: integer\n    sort:\n      description: 'the comma-separated fields to sort on. Prefix with \"-\" for descending\n        order, otherwise in ascending order. Default: sort by matching scores in decending\n        order.'\n      in: query\n      name: sort\n      schema:\n        type: string\n    species:\n      description: 'can be used to limit the gene hits from given species. You can\n        use \"common names\" for nine common species (human, mouse, rat, fruitfly, nematode,\n        zebrafish, thale-cress, frog and pig). All other species, you can provide\n        their taxonomy ids. Multiple species can be passed using comma as a separator.\n        Default: human,mouse,rat.'\n      in: query\n      name: species\n      schema:\n        type: string\n  schemas:\n    Gene:\n      properties:\n        AnimalQTLdb:\n          type: string\n        FLYBASE:\n          type: string\n        HGNC:\n          type: string\n        HPRD:\n          type: string\n        MGI:\n          type: string\n        MIM:\n          type: string\n        RATMAP:\n          type: string\n        RGD:\n          type: string\n        TAIR:\n          type: string\n        Vega:\n          type: string\n        WormBase:\n          type: string\n        Xenbase:\n          type: string\n        ZFIN:\n          type: string\n        _id:\n          type: string\n        accession:\n          type: object\n        aliase:\n          type: string\n        ec:\n          type: string\n        ensembl:\n          type: object\n        entrezgene:\n          format: int64\n          type: integer\n        generif:\n          properties:\n            pubmed:\n              \"$ref\": \"#/components/schemas/int64_or_array\"\n            text:\n              type: string\n          type: object\n        genomic_pos:\n          type: object\n        go:\n          type: object\n        homologene:\n          type: object\n        interpro:\n          type: object\n        locus_tag:\n          type: string\n        map_location:\n          type: string\n        miRBase:\n          type: string\n        name:\n          type: string\n        other_names:\n          \"$ref\": \"#/components/schemas/string_or_array\"\n        pathway:\n          type: object\n        pdb:\n          \"$ref\": \"#/components/schemas/string_or_array\"\n        pfam:\n          type: string\n        pharmgkb:\n          type: string\n        pid:\n          type: string\n        pir:\n          type: string\n        prosite:\n          type: string\n        reagent:\n          type: object\n        refseq:\n          type: object\n        reporter:\n          type: object\n        summary:\n          type: string\n        symbol:\n          type: string\n        taxid:\n          format: int32\n          type: integer\n        type_of_gene:\n          type: string\n        umls:\n          type: object\n        unigene:\n          type: string\n        uniprot:\n          properties:\n            Swiss-Prot:\n              \"$ref\": \"#/components/schemas/string_or_array\"\n            TrEMBL:\n              \"$ref\": \"#/components/schemas/string_or_array\"\n          type: object\n        wikipedia:\n          properties:\n            url_stub:\n              type: string\n          type: object\n      required:\n      - _id\n      - taxid\n      type: object\n    MinimalGene:\n      properties:\n        _id:\n          type: string\n        entrezgene:\n          format: int64\n          type: integer\n        name:\n          type: string\n        symbol:\n          type: string\n        taxid:\n          format: int32\n          type: integer\n      required:\n      - _id\n      - taxid\n      type: object\n    QueryPOSTResult:\n      items:\n        allOf:\n        - \"$ref\": \"#/components/schemas/MinimalGene\"\n        - properties:\n            _score:\n              format: float\n              type: number\n            query:\n              type: string\n          type: object\n      type: array\n    QueryResult:\n      properties:\n        hits:\n          items:\n            \"$ref\": \"#/components/schemas/Gene\"\n          type: array\n        max_score:\n          format: float\n          type: number\n        took:\n          type: integer\n        total:\n          type: integer\n      type: object\n    int64_or_array:\n      oneOf:\n      - items:\n          format: int64\n          type: integer\n        type: array\n      - format: int64\n        type: integer\n    string_or_array:\n      oneOf:\n      - items:\n          type: string\n        type: array\n      - type: string\n  x-bte-kgs-operations:\n    enablesMF:\n    - inputSeparator: \",\"\n      inputs:\n      - id: NCBIGene\n        semantic: Gene\n      outputs:\n      - id: GO\n        semantic: MolecularActivity\n      source: entrez\n      predicate: functional_association\n      parameters:\n        fields: go.MF\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_mf\"\n    hasGeneProduct:\n    - inputs:\n      - id: ENSEMBL\n        semantic: Gene\n      outputs:\n      - id: UNIPROTKB\n        semantic: Protein\n      predicate: has_gene_product\n      parameters:\n        fields: uniprot.Swiss-Prot\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: ensembl.gene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/has_gene_product\"\n    - inputs:\n      - id: ENSEMBL\n        semantic: Gene\n      outputs:\n      - id: ENSEMBL\n        semantic: Protein\n      predicate: has_gene_product\n      parameters:\n        fields: ensembl.protein\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: ensembl.gene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/has_gene_product\"\n    hasHomolog:\n    - inputs:\n      - id: NCBIGene\n        semantic: Gene\n      outputs:\n      - id: MGI\n        semantic: Gene\n      predicate: homologous_to\n      parameters:\n        fields: pantherdb.ortholog\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/homologous_to\"\n    hasTranscript:\n    - inputs:\n      - id: ENSEMBL\n        semantic: Gene\n      outputs:\n      - id: ENSEMBL\n        semantic: Transcript\n      parameters:\n        fields: ensembl.transcript\n      predicate: gene_to_transcript_relationship\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: ensembl.gene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/gene_to_transcript_relationship\"\n    involvedInBP:\n    - inputs:\n      - id: NCBIGene\n        semantic: Gene\n      outputs:\n      - id: GO\n        semantic: BiologicalProcess\n      source: entrez\n      predicate: functional_association\n      parameters:\n        fields: go.BP\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_bp\"\n    involvedInCC:\n    - inputs:\n      - id: NCBIGene\n        semantic: Gene\n      outputs:\n      - id: GO\n        semantic: CellularComponent\n      source: entrez\n      predicate: functional_association\n      parameters:\n        fields: go.CC\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_cc\"\n    involvedInPathway:\n    - inputs:\n      - id: NCBIGene\n        semantic: Gene\n      method: post\n      outputs:\n      - id: WIKIPATHWAYS\n        semantic: Pathway\n      source: CPDB\n      predicate: functional_association\n      parameters:\n        fields: pathway.wikipathways\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_wikipathways\"\n    PathwayHasGene:\n    - outputs:\n      - id: NCBIGene\n        semantic: Gene\n      method: post\n      inputs:\n      - id: REACT\n        semantic: Pathway\n      predicate: functional_association\n      source: CPDB\n      parameters:\n        fields: entrezgene\n        species: human\n        size: 1000\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: pathway.reactome.id\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_reactome_gene\"\n    - inputs:\n      - id: NCBIGene\n        semantic: Gene\n      method: post\n      outputs:\n      - id: REACT\n        semantic: Pathway\n      predicate: functional_association\n      source: CPDB\n      parameters:\n        fields: pathway.reactome\n        species: human\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: entrezgene\n        header: application/x-www-form-urlencoded\n      inputSeparator: \",\"\n      supportBatch: true\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/functional_association_reactome\"\n  x-bte-response-mapping:\n    description: summary\n    name:\n    - name\n    - other_names\n    OMIM: MIM\n    PHARMGKB: pharmgkb\n    PHAROS: pahros.target_id\n    SYMBOL: symbol\n    UMLS: umls.cui\n    ENSEMBL: ensembl.gene\n    NCBIGene: entrezgene\n    HGNC: HGNC\n    inTaxon: taxid\n    has_gene_product:\n      ENSEMBL: ensembl.protein\n      UNIPROTKB: uniprot.Swiss-Prot\n    homologous_to:\n      dictyBase: pantherdb.ortholog.dictyBase\n      ENSEMBL: pantherdb.ortholog.Ensembl\n      FlyBase: pantherdb.ortholog.FlyBase\n      HGNC: pantherdb.ortholog.HGNC\n      inTaxon: pantherdb.ortholog.taxid\n      MGI: pantherdb.ortholog.MGI\n      POMBASE: pantherdb.ortholog.PomBase\n      RGD: pantherdb.ortholog.RGD\n      SGD: pantherdb.ortholog.SGD\n      TAIR: pantherdb.ortholog.TAIR\n      ZFIN: pantherdb.ortholog.ZFIN\n    gene_to_transcript_relationship:\n      ENSEMBL: ensembl.transcript\n    functional_association_wikipathways:\n      name: pathway.wikipathways.name\n      WIKIPATHWAYS: pathway.wikipathways.id\n    functional_association_reactome:\n      name: pathway.reactome.name\n      REACT: pathway.reactome.id\n    functional_association_reactome:\n      NCBIGene: entrezgene\n    functional_association_cc:\n      evidence: go.CC.evidence\n      GO: go.CC.id\n      pubmed: go.CC.pubmed\n      term: go.CC.term\n    functional_association_bp:\n      evidence: go.BP.evidence\n      GO: go.BP.id\n      pubmed: go.BP.pubmed\n      term: go.BP.term\n    functional_association_mf:\n      evidence: go.MF.evidence\n      GO: go.MF.id\n      pubmed: go.MF.pubmed\n      term: go.MF.term\n",
			"canonicalURL": "/github.com/SmartAPI/smartAPI@4b65c612ded8e200191ecff2f382f9aaf0e552fe/-/blob/src/tests/mygene_full.yml",
			"externalURLs": [
				{
					"url": "https://github.com/SmartAPI/smartAPI/blob/4b65c612ded8e200191ecff2f382f9aaf0e552fe/src/tests/mygene_full.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}