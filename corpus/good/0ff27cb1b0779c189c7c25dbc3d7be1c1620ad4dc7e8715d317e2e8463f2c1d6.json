{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vtex/openapi-schemas"
		},
		"file": {
			"name": "VTEX - Master Data API - v2.json",
			"size": 0,
			"path": "VTEX - Master Data API - v2.json",
			"byteSize": 84142,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Master Data API - v2\",\n        \"description\": \"# ATTENTION: **This version isn't compliant with data entities of old version (e.g. CL and AD). It's possible to use this configuration only to new data entities.**\\r\\n\\r\\n\\r\\n## Welcome!\\r\\n\\r\\nVTEX Master Data is an easy-to-use, secure, fast, scalable and extensible repository. On it you can create your own Entities, store data and consult directly from the storefront or use it to store info for some external integration.\\r\\n\\r\\nThere are internal VTEX modules that use VTEX Master Data as data repository. We have the VTEX Customer Service, VTEX Profile System and VTEX InStore, for example. It is also used by other internal services.\\r\\n\\r\\nThere are two ways to use Master Data:\\r\\n\\r\\n1. Directly from the storefront\\r\\n2. External integration\\r\\n\\r\\n### Directly from the storefront\\r\\n\\r\\nIf your scenario is to be used inside the storefront, be aware of the following observations:\\r\\n\\r\\n1. Use the storefront host to query or store information to avoid **CORS**;\\r\\n2. Configure which information should be public and which shouldn't, inside the JSON Schema of the Data Entity;\\r\\n3. Do not create query loops (the storefront may be affected with Throttling and apis may be turned off as a security protection);\\r\\n4. Never add via JS any type of authentication key (x-vtex-api-appkey or x-vtex-api-apptoken);\\r\\n\\r\\n**It's important to avoid CORS using the relative path**\\r\\n\\r\\n### External Integration\\r\\n\\r\\nIf your scenario is to perform external integration, such as migrating client data from another service, be aware of the following observations:\\r\\n\\r\\n1. Use the host ```{{accountName}}.vtexcommercestable.com.br```;\\r\\n2. Use the authentication keys (x-vtex-api-appkey ou x-vtex-api-apptoken);\\r\\n\\r\\n### Most used attributes listed here\\r\\n\\r\\n| Name | Description |\\r\\n| -------- | -------- |\\r\\n| accountName | Account name in VTEX License Manager |\\r\\n| name | Data Entity name |\\r\\n| schema | JSON Schema of a Data Entity |\\r\\n| id | Identifier of a document |\\r\\n| x-vtex-api-appKey | User key |\\r\\n| x-vtex-api-appToken | User token |\",\n        \"contact\": {},\n        \"version\": \"1.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"https://{accountName}.{environment}.com.br\",\n            \"description\": \"VTEX server url\",\n            \"variables\": {\n                \"accountName\": {\n                    \"description\": \"Name of the VTEX account. Used as part of the URL\",\n                    \"default\": \"{accountName}\"\n                },\n                \"environment\": {\n                    \"description\": \"Environment to use. Used as part of the URL.\",\n                    \"default\": \"{environment}\"\n                }\n            }\n        }\n    ],\n    \"paths\": {\n        \"/api/dataentities/{dataEntityName}/documents\": {\n            \"post\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Create new document\",\n                \"description\": \"This request allows you to create a new document corresponding to a given data entity. For example, you can create a new customer profile or address.\\r\\n\\r\\n\u003e You can use this request to create documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to create.\\r\\n\\r\\n## Example use cases\\r\\n\\r\\n### Client profile\\r\\n\\r\\nIn order to create a new customer profile, choose the `CL` data entity and send a request similar to this:\\r\\n\\r\\nPOST\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/CL\\/documents\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"email\\\": \\\"clark.kent@examplemail.com\\\",\\r\\n    \\\"firstName\\\": \\\"Clark\\\",\\r\\n    \\\"lastName\\\": \\\"Kent\\\",\\r\\n    \\\"phone\\\": \\\"+12025550195\\\",\\r\\n    \\\"documentType\\\": \\\"CPF\\\",\\r\\n    \\\"document\\\": \\\"12345678900\\\"\\r\\n    \\\"isCorporate\\\": false,\\r\\n    \\\"isNewsletterOptIn\\\": false,\\r\\n    \\\"localeDefault\\\": \\\"en-US\\\"\\r\\n }\\r\\n```\\r\\n\\r\\n### Client address\\r\\n\\r\\nFor a new address, the data entity is `AD` and the request would look like this:\\r\\n\\r\\nPOST\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/AD\\/documents\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"addressName\\\": \\\"My House\\\",\\r\\n    \\\"addressType\\\": \\\"residential\\\",\\r\\n    \\\"city\\\": \\\"Metropolis\\\",\\r\\n    \\\"complement\\\": \\\"\\\",\\r\\n    \\\"country\\\": \\\"USA\\\",\\r\\n    \\\"postalCode\\\": \\\"11375\\\",\\r\\n    \\\"receiverName\\\": \\\"Clark Kent\\\",\\r\\n    \\\"reference\\\": null,\\r\\n    \\\"state\\\": \\\"MP\\\",\\r\\n    \\\"street\\\": \\\"Baker Street\\\",\\r\\n    \\\"neighborhood\\\": \\\"Upper east side\\\",\\r\\n    \\\"number\\\": \\\"21\\\",\\r\\n    \\\"userId\\\": \\\"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\\\"\\r\\n}\\r\\n```\",\n                \"operationId\": \"Createnewdocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DocumentRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"patch\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Create partial document\",\n                \"description\": \"This request allows you to partially update a document corresponding to a given data entity.\\r\\n\\r\\n\u003e You can use this request to create documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\\r\\n\\r\\n## Example use cases\\r\\n\\r\\n### Client profile\\r\\n\\r\\nIn order to create a customer profile's `phone` and `isNewsletterOptIn` fields, choose the `CL` data entity and send a request similar to this:\\r\\n\\r\\nPATCH\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/CL\\/documents\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"phone\\\": \\\"+12025550195\\\",\\r\\n    \\\"isNewsletterOptIn\\\": false\\r\\n }\\r\\n```\\r\\n\\r\\n### Client address\\r\\n\\r\\nIn order to update the `receiverName` of an existing address, the data entity is `AD` and the request would look like this:\\r\\n\\r\\nPATCH\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/AD\\/documents\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"receiverName\\\": \\\"Lois Lane\\\"\\r\\n}\\r\\n```\",\n                \"operationId\": \"Createorupdatepartialdocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"JSON with the fields to be updated.\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DocumentRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/CL/documents\": {\n            \"post\": {\n                \"tags\": [\"Customer profiles\"],\n                \"summary\": \"Create new customer profile\",\n                \"description\": \"Creates new customer profile.\\r\\n\\r\\n\u003e You can use this request to create customer profiles according to any `CL` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).\",\n                \"operationId\": \"CreateNewCustomerProfilev2\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/createUpdateProfileRequests\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/CL/documents/{id}\": {\n            \"patch\": {\n                \"tags\": [\"Customer profiles\"],\n                \"summary\": \"Update customer profile\",\n                \"description\": \"Partially updates a customer profile.\\r\\n\\r\\n\u003e You can use this request to update customer profiles according to any `CL` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).\",\n                \"operationId\": \"UpdateCustomerProfile\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/createUpdateProfileRequests\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"delete\": {\n                \"tags\": [\"Customer profiles\"],\n                \"summary\": \"Delete customer profile\",\n                \"description\": \"Deletes a customer profile.\",\n                \"operationId\": \"DeleteCustomerProfile\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/AD/documents\": {\n            \"post\": {\n                \"tags\": [\"Addresses\"],\n                \"summary\": \"Create new customer address\",\n                \"description\": \"Creates new customer address. \\r\\n\\r\\n\u003e You can use this request to create customer addresses according to any `AD` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).\",\n                \"operationId\": \"CreateNewCustomerAddress\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/createUpdateAddressRequests\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/AD/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/AD/documents/{id}\": {\n            \"patch\": {\n                \"tags\": [\"Addresses\"],\n                \"summary\": \"Update customer address\",\n                \"description\": \"Partially updates a customer address.\\r\\n\\r\\n\u003e You can use this request to update customer addresses according to any `AD` schema. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for the schemas you are using. Learn more about how to use [Master Data v2 schemas](https://developers.vtex.com/vtex-rest-api/docs/master-data-schema-lifecycle).\",\n                \"operationId\": \"UpdateCustomerAddress\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/createUpdateAddressRequests\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/AD/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"delete\": {\n                \"tags\": [\"Addresses\"],\n                \"summary\": \"Delete customer address\",\n                \"description\": \"Deletes a customer address.\",\n                \"operationId\": \"DeleteCustomerAddress\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"AD-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/AD/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/documents/{id}\": {\n            \"get\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Get document\",\n                \"description\": \"Get document.\",\n                \"operationId\": \"Getdocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Sucessful response\",\n                        \"headers\": {},\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Using_fields_all\"\n                                },\n                                \"example\": {\n                                    \"id\": \"b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"accountId\": \"14af940d-9300-4279-9355-61d44c2ff879\",\n                                    \"accountName\": \"my-store-name\",\n                                    \"dataEntityId\": \"CL\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"put\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Update entire document\",\n                \"description\": \"Update an existing document corresponding to a given data entity. For example, you can update a customer profile or address.\\r\\n\\r\\n\u003e You can use this request to update documents in any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\\r\\n\\r\\n## Example use cases\\r\\n\\r\\n### Client profile\\r\\n\\r\\nIn order to update an existing customer profile, choose the `CL` data entity and send a request similar to this:\\r\\n\\r\\nPUT\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/CL\\/documents\\/123456789abc\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"email\\\": \\\"clark.kent@examplemail.com\\\",\\r\\n    \\\"firstName\\\": \\\"Clark\\\",\\r\\n    \\\"lastName\\\": \\\"Kent\\\",\\r\\n    \\\"phone\\\": \\\"+12025550195\\\",\\r\\n    \\\"documentType\\\": \\\"CPF\\\",\\r\\n    \\\"document\\\": \\\"12345678900\\\"\\r\\n    \\\"isCorporate\\\": false,\\r\\n    \\\"isNewsletterOptIn\\\": false,\\r\\n    \\\"localeDefault\\\": \\\"en-US\\\"\\r\\n }\\r\\n```\\r\\n\\r\\n### Client address\\r\\n\\r\\nTo update an address, the data entity is `AD` and the request would look like this:\\r\\n\\r\\nPUT\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/AD\\/documents\\/123456789abc\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"addressName\\\": \\\"My House\\\",\\r\\n    \\\"addressType\\\": \\\"residential\\\",\\r\\n    \\\"city\\\": \\\"Metropolis\\\",\\r\\n    \\\"complement\\\": \\\"\\\",\\r\\n    \\\"country\\\": \\\"USA\\\",\\r\\n    \\\"postalCode\\\": \\\"11375\\\",\\r\\n    \\\"receiverName\\\": \\\"Clark Kent\\\",\\r\\n    \\\"reference\\\": null,\\r\\n    \\\"state\\\": \\\"MP\\\",\\r\\n    \\\"street\\\": \\\"Baker Street\\\",\\r\\n    \\\"neighborhood\\\": \\\"Upper east side\\\",\\r\\n    \\\"number\\\": \\\"21\\\",\\r\\n    \\\"userId\\\": \\\"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\\\"\\r\\n}\\r\\n```\",\n                \"operationId\": \"Updateentiredocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_where\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DocumentRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"patch\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Update partial document\",\n                \"description\": \"This request allows you to partially update a document corresponding to a given data entity. For example, you can update some fields of a customer profile or address.\\r\\n\\r\\n\u003e You can use this request to update documents for any given data entity. Because of this, you are not restricted to using the fields exemplified below in your requests. But you should be aware of the fields allowed or required for each document you wish to update.\\r\\n\\r\\n## Example use cases\\r\\n\\r\\n### Client profile\\r\\n\\r\\nIn order to update a customer profile's `phone` and `isNewsletterOptIn` fields, choose the `CL` data entity and send a request similar to this:\\r\\n\\r\\nPATCH\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/CL\\/documents\\/123456789abc\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"phone\\\": \\\"+12025550195\\\",\\r\\n    \\\"isNewsletterOptIn\\\": false\\r\\n }\\r\\n```\\r\\n\\r\\n### Client address\\r\\n\\r\\nIn order to update the `receiverName` of an existing address, the data entity is `AD` and the request would look like this:\\r\\n\\r\\nPATCH\\r\\n```\\r\\nhttps:\\/\\/examplestore.vtexcommercestable.com.br\\/api\\/dataentities\\/AD\\/documents\\/123456789abc\\r\\n```\\r\\n\\r\\nRequest body\\r\\n```json\\r\\n{\\r\\n    \\\"receiverName\\\": \\\"Lois Lane\\\"\\r\\n}\\r\\n```\",\n                \"operationId\": \"Updatepartialdocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_where\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DocumentRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"delete\": {\n                \"tags\": [\"Documents\"],\n                \"summary\": \"Delete document\",\n                \"description\": \"It allows to delete a document.\",\n                \"operationId\": \"Deletedocument\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/search\": {\n            \"get\": {\n                \"tags\": [\"Search\"],\n                \"summary\": \"Search documents\",\n                \"description\": \"Retrieve documents' information, while choosing which fields will be returned and filtering documents by specific fields.\\r\\n\\r\\nBelow you can see some query examples and learn more about each query parameter.\\r\\n\\r\\n## Query Examples\\r\\n\\r\\n### Simple filter\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?email=my@email.com\\r\\n```\\r\\n\\r\\n### Complex filter\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=(firstName=Jon OR lastName=Smith) OR (createdIn between 2001-01-01 AND 2016-01-01)\\r\\n```\\r\\n\\r\\n### Date Range\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=createdIn between 2001-01-01 AND 2016-01-01\\r\\n```\\r\\n\\r\\n### Range numeric fields\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=age between 18 AND 25\\r\\n```\\r\\n\\r\\n### Partial filter\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?firstName=*Maria*\\r\\n```\\r\\n\\r\\n### Filter for null values\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=firstName is null\\r\\n```\\r\\n\\r\\n### Filter for non-null values\\r\\n\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=firstName is not null\\r\\n```\\r\\n\\r\\n### Filter for difference\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=firstName\u003c\u003emaria\\r\\n```\\r\\n\\r\\n### Filter greater than or less than\\r\\n```\\r\\n\\/dataentities\\/CL\\/search?_where=number\u003e5\\r\\n\\/dataentities\\/CL\\/search?_where=date\u003c2001-01-01\\r\\n```\",\n                \"operationId\": \"Searchdocuments\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/REST-Range\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_fields\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_where\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_keyword\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_sort\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/scroll\": {\n            \"get\": {\n                \"tags\": [\"Scroll\"],\n                \"summary\": \"Scroll documents\",\n                \"description\": \"In the first request, the `X-VTEX-MD-TOKEN` token will be returned in the header. This token must be passed to the next request in the query string `_token` parameter. The token has a timeout of 10 minutes, which refreshes after each request.\\r\\n\\r\\nAfter the token is obtained it is no longer necessary to send the filter or document size per page parameters. You only need to resend the token until the document collection is empty.\\r\\n\\r\\n## Request examples\\r\\n\\r\\nFirst request:\\r\\n```\\r\\n\\/dataentities\\/CL\\/scroll?isCluster=true\u0026_size=250\u0026_fields=email,firstName\\r\\n```\\r\\n\\r\\nRetrieve the token in the header `X-VTEX-MD-TOKEN` from the first request's response and use it to make the next requests.\\r\\n\\r\\nSubsequent requests:\\r\\n```\\r\\n\\/dataentities\\/CL\\/scroll?_token={tokenValueExample}\\r\\n```\",\n                \"operationId\": \"Scrolldocuments\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_token\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/REST-Range\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_fields\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_where\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_schema\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_keyword\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/_sort\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/schemas\": {\n            \"get\": {\n                \"tags\": [\"Schemas\"],\n                \"summary\": \"Get schemas\",\n                \"description\": \"Return the schemas saved.\",\n                \"operationId\": \"Getschemas\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/schemas/{schema_name}\": {\n            \"get\": {\n                \"tags\": [\"Schemas\"],\n                \"summary\": \"Get schema by name\",\n                \"description\": \"Returns the schema saved.\",\n                \"operationId\": \"Getschemabyname\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/schema_name\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"put\": {\n                \"tags\": [\"Schemas\"],\n                \"summary\": \"Save schema by name\",\n                \"description\": \"Save the schema.\",\n                \"operationId\": \"Saveschemabyname\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/schema_name\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Request body for saving schema\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/SaveschemabynameRequest\"\n                            },\n                            \"example\": {\n                                \"properties\": {\n                                    \"name\": {\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/indices\": {\n            \"get\": {\n                \"tags\": [\"Indices\"],\n                \"summary\": \"Get indices\",\n                \"description\": \"Returns the list of indices by data entity.\",\n                \"operationId\": \"Getindices\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"put\": {\n                \"tags\": [\"Indices\"],\n                \"summary\": \"Put indices\",\n                \"description\": \"Create an index.\",\n                \"operationId\": \"Putindices\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Request body for creating an index\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/PutindicesRequest\"\n                            },\n                            \"example\": {\n                                \"name\": \"indexName\",\n                                \"multiple\": false,\n                                \"fields\": \"fieldName\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/indices/{index_name}\": {\n            \"get\": {\n                \"tags\": [\"Indices\"],\n                \"summary\": \"Get index by name\",\n                \"description\": \"Returns an index.\",\n                \"operationId\": \"Getindexbyname\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/index_name\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"delete\": {\n                \"tags\": [\"Indices\"],\n                \"summary\": \"Delete index by name\",\n                \"description\": \"Delete an index.\",\n                \"operationId\": \"Deleteindexbyname\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/index_name\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/documents/{id}/clusters\": {\n            \"post\": {\n                \"tags\": [\"Clusters\"],\n                \"summary\": \"Validate document by clusters\",\n                \"description\": \"Validates document by clusters.\",\n                \"operationId\": \"Validatedocumentbyclusters\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Request body for validating a document by clusters\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"json\",\n                                \"default\": \"[\\n    {\\n        \\\"name\\\": \\\"male\\\",        \\n        \\\"rule\\\": \\\"gender=male\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"complex\\\",\\n        \\\"rule\\\": \\\"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\\\"\\n    },    \\n    {\\n        \\\"name\\\": \\\"complex2\\\",\\n        \\\"rule\\\": \\\"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"createdIn\\\",\\n        \\\"rule\\\": \\\"createdIn between 2015-10-28 AND 2015-10-30\\\"\\n    }\\n]\"\n                            },\n                            \"example\": \"[\\n    {\\n        \\\"name\\\": \\\"male\\\",        \\n        \\\"rule\\\": \\\"gender=male\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"complex\\\",\\n        \\\"rule\\\": \\\"((gender=male AND percent=0.35) AND any is null) AND (name=*go*)\\\"\\n    },    \\n    {\\n        \\\"name\\\": \\\"complex2\\\",\\n        \\\"rule\\\": \\\"((gender=male AND percent=0.35) AND any is not null) OR (name=*go*)\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"createdIn\\\",\\n        \\\"rule\\\": \\\"createdIn between 2015-10-28 AND 2015-10-30\\\"\\n    }\\n]\"\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {}\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/documents/{id}/versions\": {\n            \"get\": {\n                \"tags\": [\"Versions\"],\n                \"summary\": \"List versions\",\n                \"description\": \"Allows to list the versions of a document.\",\n                \"operationId\": \"Listversions\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    },\n                    {\n                        \"name\": \"load\",\n                        \"in\": \"query\",\n                        \"description\": \"If true, return all the fields in each version of the document\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    },\n                    {\n                        \"name\": \"fields\",\n                        \"in\": \"query\",\n                        \"description\": \"If `load` is true, the response will return only these specific fields\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"id,dataEntityId,isNewsletterOptIn,createdBy\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {},\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Listversion\"\n                                    }\n                                },\n                                \"example\": [\n                                    {\n                                        \"id\": \"_EAR0cJ7XB5k5grnmm0zeKGlVvVM9WCPy_\",\n                                        \"date\": \"2016-10-18T16:53:32+00:00\",\n                                        \"document\": {\n                                            \"id\": \"72e7f8dd-1168-23ec-82ac-0e2b61663eb4\",\n                                            \"dataEntityId\": \"CL\",\n                                            \"isNewsletterOptIn\": true,\n                                            \"createdBy\": \"81fc8b10-25b7-48de-b425-7b93554002cc\"\n                                        }\n                                    },\n                                    {\n                                        \"id\": \"_E5SH9WXVvhPBNnbQtYAAGqrIysIeNYhV_\",\n                                        \"date\": \"2016-09-08T20:11:42+00:00\",\n                                        \"document\": {\n                                            \"id\": \"72e7f8dd-1168-23ec-82ac-0e2b61663eb4\",\n                                            \"dataEntityId\": \"CL\",\n                                            \"isNewsletterOptIn\": true,\n                                            \"createdBy\": \"81fc8b10-25b7-48de-b425-7b93554002cc\"\n                                        }\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        },\n        \"/api/dataentities/{dataEntityName}/documents/{id}/versions/{versionId}\": {\n            \"get\": {\n                \"tags\": [\"Versions\"],\n                \"summary\": \"Get version\",\n                \"description\": \"Returns the version of a document.\",\n                \"operationId\": \"Getversion\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/versionId\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"headers\": {},\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Getversion\"\n                                },\n                                \"example\": {\n                                    \"id\": \"version-id\",\n                                    \"author\": \"user-id\",\n                                    \"document\": {\n                                        \"id\": \"my-id\",\n                                        \"dataEntityId\": \"CL\",\n                                        \"accountId\": \"my-account-id\",\n                                        \"accountName\": \"my-account\",\n                                        \"followers\": [],\n                                        \"email\": \"teste@mail.com\",\n                                        \"rclastsession\": \"163054c0-954f-11e6-891e-4d2b1c3450a4\",\n                                        \"rclastsessiondate\": \"2016-10-18T16:53:00\",\n                                        \"checkouttag\": null,\n                                        \"carttag\": null,\n                                        \"departmentVisitedTag\": {\n                                            \"DisplayValue\": \"Ar e Ventilação\",\n                                            \"Scores\": {\n                                                \"Ar e Ventilação\": [\n                                                    {\n                                                        \"Point\": 1,\n                                                        \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                                                        \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                                                    }\n                                                ]\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            },\n            \"put\": {\n                \"tags\": [\"Versions\"],\n                \"summary\": \"Put version\",\n                \"description\": \"Updates document with version values.\",\n                \"operationId\": \"Putversion\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/dataEntityName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Content-Type\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/Accept\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/id\"\n                    },\n                    {\n                        \"name\": \"versionId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of the version to update\",\n                        \"required\": true,\n                        \"style\": \"simple\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"{{versionId}}\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/documentResponse\"\n                                },\n                                \"example\": {\n                                    \"Id\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                                    \"Href\": \"http://api.vtex.com/my-store-name/dataentities/CL/documents/b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"deprecated\": false\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"appKey\": [],\n            \"appToken\": []\n        }\n    ],\n    \"components\": {\n        \"securitySchemes\": {\n            \"appKey\": {\n                \"type\": \"apiKey\",\n                \"in\": \"header\",\n                \"name\": \"X-VTEX-API-AppKey\"\n            },\n            \"appToken\": {\n                \"type\": \"apiKey\",\n                \"in\": \"header\",\n                \"name\": \"X-VTEX-API-AppToken\"\n            }\n        },\n        \"schemas\": {\n            \"DEPRECATED_DocumentRequest\": {\n                \"type\": \"object\",\n                \"description\": \"This can be any pure JSON document.\",\n                \"properties\": {\n                    \"field\": {\n                        \"type\": \"string\",\n                        \"description\": \"This can be any JSON document field.\"\n                    }\n                }\n            },\n            \"DocumentRequest\": {\n                \"title\": \"DocumentRequest\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                    \"type\": \"string\",\n                    \"description\": \"JSON document fields.\"\n                },\n                \"description\": \"This can be any pure JSON document. Add new _Key-Value_ pairs to test.\"\n            },\n            \"Using_fields_all\": {\n                \"title\": \"Using_fields=_all\",\n                \"required\": [\"id\", \"accountId\", \"accountName\", \"dataEntityId\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"accountId\": {\n                        \"type\": \"string\"\n                    },\n                    \"accountName\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataEntityId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"id\": \"b818cbda-e489-11e6-94f4-0ac138d2d42e\",\n                    \"accountId\": \"14af940d-9300-4279-9355-61d44c2ff879\",\n                    \"accountName\": \"my-store-name\",\n                    \"dataEntityId\": \"CL\"\n                }\n            },\n            \"SaveschemabynameRequest\": {\n                \"title\": \"SaveschemabynameRequest\",\n                \"required\": [\"properties\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"properties\": {\n                        \"$ref\": \"#/components/schemas/Properties\"\n                    }\n                },\n                \"example\": {\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"Properties\": {\n                \"title\": \"Properties\",\n                \"required\": [\"name\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/Name\"\n                    }\n                },\n                \"example\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Name\": {\n                \"title\": \"Name\",\n                \"required\": [\"type\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"PutindicesRequest\": {\n                \"title\": \"PutindicesRequest\",\n                \"required\": [\"name\", \"multiple\", \"fields\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"description\": \"Name to identify the index\",\n                        \"type\": \"string\"\n                    },\n                    \"multiple\": {\n                        \"description\": \"Determines whether the values need to be unique. If false, values must be unique.\",\n                        \"type\": \"boolean\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Comma-separted fields of the index\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"name\": \"indexName\",\n                    \"multiple\": false,\n                    \"fields\": \"fieldName\"\n                }\n            },\n            \"ValidatedocumentbyclustersRequest\": {\n                \"title\": \"ValidatedocumentbyclustersRequest\",\n                \"required\": [\"name\", \"rule\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"rule\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"name\": \"male\",\n                    \"rule\": \"gender=male\"\n                }\n            },\n            \"Listversion\": {\n                \"title\": \"Listversion\",\n                \"required\": [\"id\", \"date\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"date\": {\n                        \"type\": \"string\"\n                    },\n                    \"document\": {\n                        \"type\": \"object\"\n                    }\n                }\n            },\n            \"Getversion\": {\n                \"title\": \"Getversion\",\n                \"required\": [\"id\", \"author\", \"document\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"author\": {\n                        \"type\": \"string\"\n                    },\n                    \"document\": {\n                        \"$ref\": \"#/components/schemas/Document\"\n                    }\n                },\n                \"example\": {\n                    \"id\": \"version-id\",\n                    \"author\": \"user-id\",\n                    \"document\": {\n                        \"id\": \"my-id\",\n                        \"dataEntityId\": \"CL\",\n                        \"accountId\": \"my-account-id\",\n                        \"accountName\": \"my-account\",\n                        \"followers\": [],\n                        \"email\": \"teste@mail.com\",\n                        \"rclastsession\": \"163054c0-954f-11e6-891e-4d2b1c3450a4\",\n                        \"rclastsessiondate\": \"2016-10-18T16:53:00\",\n                        \"checkouttag\": null,\n                        \"carttag\": null,\n                        \"departmentVisitedTag\": {\n                            \"DisplayValue\": \"Ar e Ventilação\",\n                            \"Scores\": {\n                                \"Ar e Ventilação\": [\n                                    {\n                                        \"Point\": 1,\n                                        \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                                        \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                }\n            },\n            \"Document\": {\n                \"title\": \"Document\",\n                \"required\": [\n                    \"id\",\n                    \"dataEntityId\",\n                    \"accountId\",\n                    \"accountName\",\n                    \"followers\",\n                    \"email\",\n                    \"rclastsession\",\n                    \"rclastsessiondate\",\n                    \"checkouttag\",\n                    \"carttag\",\n                    \"departmentVisitedTag\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"dataEntityId\": {\n                        \"type\": \"string\"\n                    },\n                    \"accountId\": {\n                        \"type\": \"string\"\n                    },\n                    \"accountName\": {\n                        \"type\": \"string\"\n                    },\n                    \"followers\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"description\": \"\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"rclastsession\": {\n                        \"type\": \"string\"\n                    },\n                    \"rclastsessiondate\": {\n                        \"type\": \"string\"\n                    },\n                    \"checkouttag\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"carttag\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    },\n                    \"departmentVisitedTag\": {\n                        \"$ref\": \"#/components/schemas/DepartmentVisitedTag\"\n                    }\n                },\n                \"example\": {\n                    \"id\": \"my-id\",\n                    \"dataEntityId\": \"CL\",\n                    \"accountId\": \"my-account-id\",\n                    \"accountName\": \"my-account\",\n                    \"followers\": [],\n                    \"email\": \"teste@mail.com\",\n                    \"rclastsession\": \"163054c0-954f-11e6-891e-4d2b1c3450a4\",\n                    \"rclastsessiondate\": \"2016-10-18T16:53:00\",\n                    \"checkouttag\": null,\n                    \"carttag\": null,\n                    \"departmentVisitedTag\": {\n                        \"DisplayValue\": \"Ar e Ventilação\",\n                        \"Scores\": {\n                            \"Ar e Ventilação\": [\n                                {\n                                    \"Point\": 1,\n                                    \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                                    \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"DepartmentVisitedTag\": {\n                \"title\": \"DepartmentVisitedTag\",\n                \"required\": [\"DisplayValue\", \"Scores\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"DisplayValue\": {\n                        \"type\": \"string\"\n                    },\n                    \"Scores\": {\n                        \"$ref\": \"#/components/schemas/Scores\"\n                    }\n                },\n                \"example\": {\n                    \"DisplayValue\": \"Ar e Ventilação\",\n                    \"Scores\": {\n                        \"Ar e Ventilação\": [\n                            {\n                                \"Point\": 1,\n                                \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                                \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                            }\n                        ]\n                    }\n                }\n            },\n            \"Scores\": {\n                \"title\": \"Scores\",\n                \"required\": [\"Ar e Ventilação\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Ar e Ventilação\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ArEVentilaO\"\n                        },\n                        \"description\": \"\"\n                    }\n                },\n                \"example\": {\n                    \"Ar e Ventilação\": [\n                        {\n                            \"Point\": 1,\n                            \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                            \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                        }\n                    ]\n                }\n            },\n            \"ArEVentilaO\": {\n                \"title\": \"ArEVentilaO\",\n                \"required\": [\"Point\", \"Date\", \"Until\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Point\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"Date\": {\n                        \"type\": \"string\"\n                    },\n                    \"Until\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"example\": {\n                    \"Point\": 1,\n                    \"Date\": \"2016-10-18T16:53:31.0842607Z\",\n                    \"Until\": \"2017-04-16T16:53:31.0842607Z\"\n                }\n            },\n            \"documentResponse\": {\n                \"required\": [\"Id\", \"Href\"],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Id\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the document that was created or updated.\"\n                    },\n                    \"Href\": {\n                        \"type\": \"string\",\n                        \"description\": \"Document reference URL.\"\n                    }\n                }\n            },\n            \"createUpdateProfileRequests\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client email address.\",\n                        \"example\": \"clark.kent@examplemail.com\",\n                        \"nullable\": true\n                    },\n                    \"firstName\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client first name.\",\n                        \"example\": \"Clark\",\n                        \"nullable\": true\n                    },\n                    \"lastName\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client last name.\",\n                        \"example\": \"Kent\",\n                        \"nullable\": true\n                    },\n                    \"phone\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client telephone number.\",\n                        \"example\": \"+12025550195\",\n                        \"nullable\": true\n                    },\n                    \"documentType\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client document type.\",\n                        \"example\": \"CPF\",\n                        \"nullable\": true\n                    },\n                    \"document\": {\n                        \"type\": \"string\",\n                        \"description\": \"Client document.\",\n                        \"example\": \"12345678900\",\n                        \"nullable\": true\n                    },\n                    \"isCorporate\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates whether client is corporate.\",\n                        \"example\": false,\n                        \"nullable\": true\n                    },\n                    \"isNewsletterOptIn\": {\n                        \"type\": \"boolean\",\n                        \"description\": \"Indicates whether client otped to receive the store newsletter.\",\n                        \"example\": false,\n                        \"nullable\": true\n                    },\n                    \"localeDefault\": {\n                        \"type\": \"string\",\n                        \"description\": \"Default locale, used to set store language and currency, for example.\",\n                        \"example\": \"en-US\",\n                        \"nullable\": true\n                    }\n                }\n            },\n            \"createUpdateAddressRequests\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"addressName\": {\n                        \"type\": \"string\",\n                        \"description\": \"Address name.\",\n                        \"example\": \"My house\",\n                        \"nullable\": true\n                    },\n                    \"addressType\": {\n                        \"type\": \"string\",\n                        \"description\": \"Type of address. For example, `Residential` or `Pickup`, among others.\",\n                        \"example\": \"residential\",\n                        \"nullable\": true\n                    },\n                    \"receiverName\": {\n                        \"type\": \"string\",\n                        \"description\": \"Name of the person who is going to receive the order.\",\n                        \"example\": \"Clark Kent.\",\n                        \"nullable\": true\n                    },\n                    \"city\": {\n                        \"type\": \"string\",\n                        \"description\": \"City of the shipping address.\",\n                        \"example\": \"Rio de Janeiro\",\n                        \"nullable\": true\n                    },\n                    \"state\": {\n                        \"type\": \"string\",\n                        \"description\": \"State of the shipping address.\",\n                        \"example\": \"Rio de Janeiro\",\n                        \"nullable\": true\n                    },\n                    \"country\": {\n                        \"type\": \"string\",\n                        \"description\": \"Three letter ISO code of the country of the shipping address.\",\n                        \"example\": \"BRA\",\n                        \"nullable\": true\n                    },\n                    \"postalCode\": {\n                        \"type\": \"string\",\n                        \"description\": \"Postal Code.\",\n                        \"example\": \"12345-000\",\n                        \"nullable\": true\n                    },\n                    \"street\": {\n                        \"type\": \"string\",\n                        \"description\": \"Street of the address.\",\n                        \"example\": \"Praia de Botafogo\",\n                        \"nullable\": true\n                    },\n                    \"number\": {\n                        \"type\": \"string\",\n                        \"description\": \"Number of the building, house or apartment in the shipping address.\",\n                        \"example\": \"300\",\n                        \"nullable\": true\n                    },\n                    \"neighborhood\": {\n                        \"type\": \"string\",\n                        \"description\": \"Neighborhood of the address.\",\n                        \"example\": \"Botafogo\",\n                        \"nullable\": true\n                    },\n                    \"complement\": {\n                        \"type\": \"string\",\n                        \"description\": \"Complement to the shipping address in case it applies.\",\n                        \"example\": \"3rd floor\",\n                        \"nullable\": true\n                    },\n                    \"reference\": {\n                        \"type\": \"string\",\n                        \"description\": \"Complement that might help locate the shipping address more precisely in case of delivery.\",\n                        \"example\": \"Grey building\",\n                        \"nullable\": true\n                    },\n                    \"userId\": {\n                        \"type\": \"string\",\n                        \"description\": \"ID of the customer to whom the address belongs.\",\n                        \"example\": \"7e03m794-a33a-11e9-84rt6-0adfa64s5a8e\",\n                        \"nullable\": true\n                    }\n                }\n            }\n        },\n        \"parameters\": {\n            \"Content-Type\": {\n                \"name\": \"Content-Type\",\n                \"in\": \"header\",\n                \"description\": \"Type of the content being sent.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"application/json\"\n                }\n            },\n            \"Accept\": {\n                \"name\": \"Accept\",\n                \"in\": \"header\",\n                \"description\": \"HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"application/json\"\n                }\n            },\n            \"dataEntityName\": {\n                \"name\": \"dataEntityName\",\n                \"in\": \"path\",\n                \"required\": true,\n                \"description\": \"Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"CL\"\n                }\n            },\n            \"_schema\": {\n                \"name\": \"_schema\",\n                \"in\": \"query\",\n                \"description\": \"Name of the schema the document to be created needs to be compliant with.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"schema\"\n                }\n            },\n            \"id\": {\n                \"name\": \"id\",\n                \"in\": \"path\",\n                \"description\": \"ID of the Document.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"CL-b818cbda-e489-11e6-94f4-0ac138d2d42e\"\n                }\n            },\n            \"versionId\": {\n                \"name\": \"versionId\",\n                \"in\": \"path\",\n                \"description\": \"ID of the version to update.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"123456789abc\"\n                }\n            },\n            \"_where\": {\n                \"name\": \"_where\",\n                \"in\": \"query\",\n                \"description\": \"Filter specification.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"firstName is not null.\"\n                }\n            },\n            \"index_name\": {\n                \"name\": \"index_name\",\n                \"in\": \"path\",\n                \"description\": \"Name of the index.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"{{index_name}}\"\n                }\n            },\n            \"schema_name\": {\n                \"name\": \"schema_name\",\n                \"in\": \"path\",\n                \"description\": \"Name of the schema.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"{{schema}}\"\n                }\n            },\n            \"REST-Range\": {\n                \"name\": \"REST-Range\",\n                \"in\": \"header\",\n                \"description\": \"Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"resources=0-10\"\n                }\n            },\n            \"_fields\": {\n                \"name\": \"_fields\",\n                \"in\": \"query\",\n                \"description\": \"Fields that should be returned by document. Separate fields' names with commas. For example `_fields=email,firstName,document`. You can also use `_all` to fetch all fields.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"email,firstName,document\"\n                }\n            },\n            \"_keyword\": {\n                \"name\": \"_keyword\",\n                \"in\": \"query\",\n                \"description\": \"String to search. Use quotes for a partial query. For example, `_keyword=Maria` or `_keyword=\\\"Maria\\\"`.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"String to search\"\n                }\n            },\n            \"_sort\": {\n                \"name\": \"_sort\",\n                \"in\": \"query\",\n                \"description\": \"Sets sorting mode in two parts. The first part is the name of the field you want to sort by. In the second part, use `ASC` for ascending or `DESC` for descending.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"firstName ASC\"\n                }\n            },\n            \"_token\": {\n                \"name\": \"_token\",\n                \"in\": \"query\",\n                \"description\": \"Value of the header `X-VTEX-MD-TOKEN` returned in your first request. Send its value in this query string in the subsequent requests. The token has a timeout of 10 minutes, which refreshes after each new request.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"default\": \"{tokenValueExample}\"\n                }\n            },\n            \"_size\": {\n                \"name\": \"_size\",\n                \"in\": \"query\",\n                \"description\": \"Inform the number of documents per request. Maximum value of `1000`.\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"default\": 100\n                }\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"Documents\",\n            \"description\": \"The APIs within this group are used to save documents and query them by id.\\r\\n\\r\\nIf the document has the id attribute or has fields that have been set to indexes with unique values, VTEX Master Data will attempt to identify the document. If the document is found a change will be made. If it is not found, an inclusion will be made. ** This scenario does not apply to the API with the POST verb**.\\r\\n\\r\\nOtherwise, a new document will always be created.\\r\\n\\r\\nYou can use the query string `_where` to apply an update only if the document is compliant with the clause.\\r\\n\\r\\nIn addition with this feature you can use the schema parameter `_schema` as a query string to apply the update only if the document is compliant with the schema. If the document is not compliant, the body of the response will have an array with each error, where the field ```Message``` indicates the type of the error.\\r\\n\\r\\n### Response status code\\r\\n\\r\\n1. Status Code 201: Document created successfully\\r\\n2. Status Code 200: Document changed successfully\\r\\n3. Status Code 304: There were no changes to the document\\r\\n4. Status Code 400: Invalid information in JSON\\r\\n5. Status Code 403: Unauthorized access\\r\\n\"\n        },\n        {\n            \"name\": \"Search\",\n            \"description\": \"The ```search``` API is intended to query a collection of documents.  \"\n        },\n        {\n            \"name\": \"Scroll\",\n            \"description\": \"The new `` scroll `` API has been developed to meet external integration scenarios. If you need to query the entire VTEX Master Data database, or your collection is over 10.000 documents, use this feature.\"\n        },\n        {\n            \"name\": \"Schemas\"\n        },\n        {\n            \"name\": \"Indices\",\n            \"description\": \"Create alternative keys for data entities.\"\n        },\n        {\n            \"name\": \"Clusters\",\n            \"description\": \"Lets you know if a particular document is in one or more clusters.\"\n        },\n        {\n            \"name\": \"Versions\",\n            \"description\": \"Master Data documents are versioned. This means that for each change a new version is generated. The `versions` APIs allows to query the versions and also apply the state of a document to the most current version.\"\n        },\n        {\n            \"name\": \"Customer profiles\"\n        },\n        {\n            \"name\": \"Addresses\"\n        }\n    ]\n}\n",
			"canonicalURL": "/github.com/vtex/openapi-schemas@ec667dce68b6ca0a8ec7a71898e466938cdc164c/-/blob/VTEX%20-%20Master%20Data%20API%20-%20v2.json",
			"externalURLs": [
				{
					"url": "https://github.com/vtex/openapi-schemas/blob/ec667dce68b6ca0a8ec7a71898e466938cdc164c/VTEX - Master Data API - v2.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}