{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Romanow/lectures"
		},
		"file": {
			"name": "person-service.yaml",
			"size": 0,
			"path": "restful/person-service.yaml",
			"byteSize": 4279,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n  - url: https://rsoi-person-service.herokuapp.com\n    description: Generated server url\npaths:\n  /api/v1/persons:\n    get:\n      tags:\n        - Person REST API operations\n      summary: Get all Persons\n      operationId: listPersons\n      responses:\n        '200':\n          description: All Persons\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PersonResponse'\n    post:\n      tags:\n        - Person REST API operations\n      summary: Create new Person\n      operationId: createPerson\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonRequest'\n        required: true\n      responses:\n        '201':\n          description: Created new Person\n          headers:\n            Location:\n              description: Path to new Person\n              style: simple\n              schema:\n                type: string\n        '400':\n          description: Invalid data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationErrorResponse'\n  '/api/v1/persons/{id}':\n    get:\n      tags:\n        - Person REST API operations\n      summary: Get Person by ID\n      operationId: getPerson\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Person for ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PersonResponse'\n        '404':\n          description: Not found Person for ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - Person REST API operations\n      summary: Remove Person by ID\n      operationId: editPerson_1\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '204':\n          description: Person for ID was removed\n    patch:\n      tags:\n        - Person REST API operations\n      summary: Update Person by ID\n      operationId: editPerson\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PersonRequest'\n        required: true\n      responses:\n        '200':\n          description: Person for ID was updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PersonResponse'\n        '400':\n          description: Invalid data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationErrorResponse'\n        '404':\n          description: Not found Person for ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    ValidationErrorResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        errors:\n          type: object\n          additionalProperties:\n            type: string\n    PersonRequest:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        age:\n          type: integer\n          format: int32\n        address:\n          type: string\n        work:\n          type: string\n    PersonResponse:\n      required:\n        - id\n        - name\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        age:\n          type: integer\n          format: int32\n        address:\n          type: string\n        work:\n          type: string\n    ErrorResponse:\n      type: object\n      properties:\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/Romanow/lectures@47f6c9dda5bffd40542275d12a803076fcc1b51d/-/blob/restful/person-service.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Romanow/lectures/blob/47f6c9dda5bffd40542275d12a803076fcc1b51d/restful/person-service.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}