{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Mastercard/mastercard-api-client-tutorial"
		},
		"file": {
			"name": "MDES_Digital_Enablement.yaml",
			"size": 0,
			"path": "python/MDES_Digital_Enablement.yaml",
			"byteSize": 92103,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.3.0\n  title: MDES Digital Enablement API\n  description: |\n    These APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed.  All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded.  Each API URI includes the major and minor version of API that it conforms to.  This will allow multiple concurrent versions of the API to be deployed simultaneously.\n    \u003cbr\u003e\u003cbr\u003e\n    **Authentication**\n    \u003cbr\u003e\u003cbr\u003e\n    Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of:\n    \u003cbr\u003e\u003cbr\u003e\n    1. A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore.\n    \u003cbr\u003e\n    2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.\u003cbr\u003e\n\n    An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java)\n    \u003cbr\u003e\u003cbr\u003e\n    **Encryption**\n    \u003cbr\u003e\u003cbr\u003e\n    All communications between Issuer web service and the Mastercard gateway is encrypted using TLS.\n    \u003cbr\u003e\u003cbr\u003e\n    **Additional Encryption of Sensitive Data**\n    \u003cbr\u003e\u003cbr\u003e\n    In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). \u003cbr\u003e\n\n    Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java)\npaths:\n  /digitization/static/1/0/tokenize:\n    post:\n      tags:\n        - Tokenize\n      description: \u003e\n        Used to digitize a card to create a server-based Token. MDES will\n        perform both card availability and eligibility checks to check that this\n        specific card is eligible for digitization. As both availability and\n        eligibility are combined, only a Tokenization Authorization message is\n        sent to the issuer as part of this request to authorize the\n        digitization. No Tokenization Eligibility message is sent. The\n        digitization decision will be one of Approved or Declined.\n      operationId: createTokenize\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenizeRequestSchema\"\n        description: |\n          A Tokenize request is used to digitize a PAN.\n      responses:\n        \"200\":\n          description: \u003e\n            Contains the details of the token response message when a push\n            account receipt is supplied in the tokenize request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenizeResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: true\n  /digitization/static/1/0/notifyTokenUpdated:\n    post:\n      tags:\n        - notifyTokenUpdated\n      operationId: notifyTokenUpdate (for token state change)\n      summary: Outbound API used by MDES to notify the Token Requestor of significant\n        Token updates, such as when the Token is activated, suspended,\n        unsuspended or deleted; or when information about the Token or its\n        product configuration has changed.\n      description: \u003e\n        This API is used by MDES to notify the Token Requestor of significant\n        Token updates. Typical notification scenarios include\n\n\n        1. Informing the merchant a token is active\n\n        2. Informing the merchant a token has been suspended by the Issuer\n\n        3. Informing the merchant a token has been unsuspended by the Issuer\n\n        4. Informing the merchant a token has been deleted by the Issuer\n\n        5. Informing the merchant of a product configuration change (such as a change in Card Art)\n\n        6. Informing the merchant of underlying changes to the FPAN metadata associated to the token\n\n\n        **Connection Security**\n\n\n        Mastercard will connect via TLS protocol and verify the server certificate before establishing a connection to the client endpoint. During this handshake, the client server can request TLS client authentication. Mastercard will present a client certificate which identifies as ?ws.mastercard.com? This client certificate is issued by the Entrust L1K certificate and should be available in most trust stores.\n\n\n\n        **Conditional Objects**\n\n\n        The contents of the notifyTokenUpdated API will vary depending which of the above scneraios triggered the notification.\n\n\n        1. *productConfig* - Provided when Product Configuration has changed (e.g. such as card art).\n\n        2. *tokenInfo* - Provided when either the details of the token or associated FPAN have changed (such as token or PAN expiry).\n\n         The optional objects will always contain a minimum set of data which be returned regardless of whether or not updates have been made. These fields are denoted as required fields.\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotifyTokenUpdatedRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotifyTokenUpdatedResponseSchema\"\n      x-testable: false\n  /remotetransaction/static/1/0/transact:\n    post:\n      tags:\n        - Transact\n      operationId: createTransact\n      summary: Used by the Token Requestor to create a Digital Secure Remote Payment\n        (\"DSRP\") transaction cryptogram using the credentials stored within MDES\n        in order to perform a DSRP transaction.\n      description: \u003e\n        This API is used by the Token Requestor to create a Digital Secure\n        Remote Payment (\"DSRP\") transaction cryptogram using the credentials\n        stored within MDES in order to perform a DSRP transaction through a\n        payment processor.  The entire response is encrypted. The caller may\n        only transact using the Tokens belonging to them.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransactRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactError\"\n      x-testable: false\n  \"/assets/static/1/0/asset/{AssetId}\":\n    get:\n      tags:\n        - Get Asset\n      summary: Used to retrieve static Assets from the MDES repository.\n      description: \u003e\n        This API is used to retrieve static Assets from MDES?s repository, such\n        as - Card art, MasterCard brand logos, Issuers? logos, and Terms and\n        Conditions. Every Asset in the repository is referenced using an Asset\n        ID. Once an Asset has been assigned to an Asset ID, the contents of the\n        Asset will not change. If contents do need to change (for example,\n        Issuer has supplied new artwork for a product), they will be updated in\n        the repository and be assigned a new Asset ID.  Different types of\n        Assets are supported in the repository, such as images and text files;\n        and for each type of Asset, multiple formats may be supported. For\n        example, a single image Asset may be supported in various file formats;\n        or variant sizes, allowing the Token Requestor to select the most\n        appropriate format to use for a particular target device.\n      operationId: getAsset\n      parameters:\n        - name: AssetId\n          in: path\n          description: \u003e\n            An Asset ID corresponds to an individual Digital Asset. Digital\n            Assets are returned as part of the Product Configuration from the\n            Tokenize Response. The Asset ID itself is supplied as a Get request\n            in the form of https://{INSERT ENVIRONMENT URL\n            HERE}/mdes/assets/static/1/0/asset/{AssetID} - See JSON examples for\n            details.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetResponseSchema\"\n        default:\n          description: |\n            unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/suspend:\n    post:\n      tags:\n        - Suspend\n      summary: Used to temporarily suspend one or more Tokens.\n      description: \u003e\n        This API is used to temporarily suspend one or more Tokens (for example,\n        suspending all Tokens on a device in response to the device being\n        lost).  The API is limited to 10 Tokens per request. MDES will\n        coordinate the suspension of the Tokens and notify any relevant parties\n        that the Tokens have been suspended. A suspended Token can be\n        unsuspended using the Unsuspend resource.\n      operationId: createSuspend\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SuspendRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SuspendResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/unsuspend:\n    post:\n      tags:\n        - Unsuspend\n      summary: Used to unsuspend one or more previously suspended Tokens. The API is\n        limited to 10 Tokens per request.\n      description: \u003e\n        This API is used to unsuspend one or more previously suspended Tokens.\n        The API is limited to 10 Tokens per request. MDES will coordinate the\n        unsuspension of the Tokens and notify any relevant parties that the\n        Tokens have now been unsuspended.\n      operationId: createUnsuspend\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UnSuspendRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnSuspendResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/delete:\n    post:\n      tags:\n        - Delete\n      summary: Used to delete one or more Tokens. The API is limited to 10 Tokens per\n        request.\n      description: \u003e\n        This API is used to delete one or more Tokens.  The API is limited to 10\n        Tokens per request. MDES will coordinate the deactivation of the Tokens\n        and notify any relevant parties that the Tokens have now been\n        deactivated.\n      operationId: deleteDigitization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/getTaskStatus:\n    post:\n      tags:\n        - Get Task Status\n      summary: Used to check the status of any asynchronous task that was previously\n        requested.\n      description: \u003e\n        Used to check the status of any asynchronous task that was previously\n        requested.\n      operationId: getTaskStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetTaskStatusRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTaskStatusResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/searchTokens:\n    post:\n      tags:\n        - Search Tokens\n      summary: Used to get basic token information for all tokens on a specified\n        device, or all tokens mapped to the given Account PAN.\n      description: \u003e\n        This API is used to get basic token information for all tokens on a\n        specified device, or all tokens mapped to the given Account PAN. It may\n        be used to check current Token(s) state or, in exception scenarios (such\n        as network time out), to ensure that external systems remain in sync\n        with the Token state as maintained by MDES. Deactivated tokens are not\n        returned.\n      operationId: SearchTokens\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchTokensRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchTokensResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\n  /digitization/static/1/0/getToken:\n    post:\n      tags:\n        - Get Token\n      operationId: getToken\n      summary: Used to get the status and details of a single given Token.\n      description: \u003e\n        This API is used to get the status and details of a single given Token.\n        It may be used to check current Token state or in exception scenarios\n        (such as network time out) to ensure that external systems remain in\n        sync with the Token state as maintained by MDES. Optionally, if\n        requested, the token number can also be provided in the response (in\n        encrypted form).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetTokenRequestSchema\"\n        description: |\n          Contains the details of the request message.\n      responses:\n        \"200\":\n          description: |\n            Contains the details of the response message.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTokenResponseSchema\"\n        \"401\":\n          description: |\n            Example gateway error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GatewayErrorsResponse\"\n        \"500\":\n          description: |\n            Example application error response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorsResponse\"\n      x-testable: false\nservers:\n  - url: https://api.mastercard.com/mdes\ncomponents:\n  schemas:\n    TokenizeRequestSchema:\n      required:\n        - tokenRequestorId\n        - tokenType\n        - taskId\n        - fundingAccountInfo\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            \"The host that originated the request. Future calls in the same\n            conversation may be routed to this host. Must be provided as:\n            host[:port][/contextRoot] Where port and contextRoot are optional.\n            If contextRoot is not provided, the default (per the URL Scheme) is\n            assumed and must be used.\"\n          example: site1.your-server.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: \"123456\"\n        tokenType:\n          type: string\n          description: |\n            The type of Token requested. Must be CLOUD\n          maxLength: 32\n          example: CLOUD\n        tokenRequestorId:\n          type: string\n          description: \u003e\n            11-digit numeric ID provided by Mastercard that identifies the Token\n            Requestor.\n          maxLength: 11\n          example: \"98765432101\"\n        taskId:\n          type: string\n          description: \u003e\n            Identifier for this task as assigned by the Token Requestor, unique\n            across a given Token Requestor Identifier. May be used in the Get\n            Task Status API to query the status of this task.\n          maxLength: 64\n          example: \"123456\"\n        fundingAccountInfo:\n          $ref: \"#/components/schemas/fundingAccountInfo\"\n        consumerLanguage:\n          type: string\n          description: \u003e\n            Language preference selected by the consumer. Formatted as an ISO-\n            639-1 two-letter language code.\n          maxLength: 2\n          example: en\n        tokenizationAuthenticationValue:\n          type: string\n          description: \u003e\n            The Tokenization Authentication Value (TAV) as cryptographically\n            signed by the Issuer to authorize this digitization request.\n          maxLength: 2048\n          example: RHVtbXkgYmFzZSA2NCBkYXRhIC0gdGhpcyBpcyBub3QgYSByZWFsIFRBViBleGFtcGxl\n        decisioningData:\n          $ref: \"#/components/schemas/DecisioningData\"\n    TokenizeResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The MasterCard host that originated the request. Future calls in the\n            same conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        decision:\n          type: string\n          description: \u003e\n            The tokenization decision for this digitization request. Must be\n            either APPROVED (Digitization request was approved), DECLINED\n            (Digitization request was declined) OR\n            REQUIRE_ADDITIONAL_AUTHENTICATION Digitization request was approved\n            but optionally requires additional authentication. One or more\n            Authentication methods may be provided).\n          example: APPROVED\n        authenticationMethods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/authenticationMethods\"\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the new Token. Serves as a unique\n            identifier for all subsequent queries or management functions\n            relating to this Token. Provided if the decision was APPROVED or\n            REQUIRE_ADDITIONAL_AUTHENTICATION.\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        panUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the Account Primary Account\n            Number. Provided if the decision was APPROVED or\n            REQUIRE_ADDITIONAL_AUTHENTICATION.\n          maxLength: 64\n          example: FWSPMC000000000159f71f703d2141efaf04dd26803f922b\n        productConfig:\n          $ref: \"#/components/schemas/productConfig\"\n        tokenInfo:\n          $ref: \"#/components/schemas/tokenInfo\"\n        tokenDetail:\n          $ref: \"#/components/schemas/tokenDetail\"\n        supportsAuthentication:\n          type: boolean\n          description: \u003e\n            (required)Flag to indicate if the issuer supports authentication of the cardholder on the token. Must be one of:\n              - TRUE\n              - FALSE\n          maxLength: 5\n          example: true\n    AssetResponseSchema:\n      properties:\n        mediaContents:\n          type: array\n          items:\n            $ref: \"#/components/schemas/mediaContent\"\n    mediaContent:\n      required:\n        - type\n        - data\n      properties:\n        type:\n          type: string\n          description: \u003e\n            What type of media this is. Specified as a MIME type, which will be\n            one of the following supported types\n\n\n            * applicatoin/pdf (for images must be a vector PDF image)\n\n            * image/png (includes alpha channel)\n\n            * text/plain\n\n            * text/html\n\n\n          maxLength: 32\n          example: image/png\n        data:\n          type: string\n          description: \u003e\n            The data for this item of media. Base64-encoded data, given in the\n            format as specified in ?type?.\n          example: iVBORw0KGgoAAAANSUhEUgAAAXcAAAF3CAIAAADRopypAAAABGdBTUEAANbY1E9YMgAAAAlwSFlzAAAASAAAAEgARslrPgAAGtNJREFUeNrt3W9oW\n        height:\n          type: string\n          description: |\n            For image assets, the height of this image. Specified in pixels.\n          maxLength: 6\n          example: \"375\"\n        width:\n          type: string\n          description: \u003e\n            For image assets, the width of this image. Specified in\n            pixels.\n          maxLength: 6\n          example: \"375\"\n    SuspendRequestSchema:\n      required:\n        - requestId\n        - tokenUniqueReferences\n        - causedBy\n        - reasonCode\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        paymentAppInstanceId:\n          type: string\n          description: \u003e\n            Identifier for the specific Mobile Payment App instance, unique\n            across a given Wallet Identifier. This value cannot be changed after\n            digitization. This field is alphanumeric and additionally web-safe\n            base64 characters per RFC 4648 (minus \"-\", underscore \"_\") up to a\n            maximum length of 48, = should not be URL encoded. Conditional - not\n            applicable for server based tokens but required otherwise.\n          maxLength: 48\n          example: 123456789\n        tokenUniqueReferences:\n          type: array\n          items:\n            type: string\n          description: \u003e\n            The specific Token to be suspended. Array of more or more valid\n            references as assigned by MDES\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        causedBy:\n          type: string\n          description: \u003e\n            Who or what caused the Token to be suspended. Must be either the\n            'CARDHOLDER' (operation requested by the Cardholder) or\n            'TOKEN_REQUESTOR' (operation requested by the token requestor).\n          maxLength: 64\n          example: CARDHOLDER\n        reason:\n          type: string\n          description: |\n            Free form reason why the Tokens are being suspended.\n          maxLength: 256\n          example: Lost/stolen device\n        reasonCode:\n          type: string\n          description: \u003e\n            The reason for the action to be suspended. Must be one of\n            'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER'\n            (Other - default used if value not provided).\n          maxLength: 64\n          example: SUSPECTED_FRAUD\n    SuspendResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site1.mastercard.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        tokens:\n          type: array\n          items:\n            $ref: \"#/components/schemas/token_for_LCM\"\n    DeleteRequestSchema:\n      required:\n        - requestId\n        - tokenUniqueReferences\n        - causedBy\n        - reasonCode\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        paymentAppInstanceId:\n          type: string\n          description: \u003e\n            Identifier for the specific Mobile Payment App instance, unique\n            across a given Wallet Identifier. This value cannot be changed after\n            digitization. This field is alphanumeric and additionally web-safe\n            base64 characters per RFC 4648 (minus \"-\", underscore \"_\") up to a\n            maximum length of 48, = should not be URL encoded. Conditional - not\n            applicable for server based tokens but required otherwise.\n          maxLength: 48\n          example: 123456789\n        tokenUniqueReferences:\n          type: array\n          items:\n            type: string\n          description: \u003e\n            The specific Token to be deleted. Array of more or more valid\n            references as assigned by MDES\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        causedBy:\n          type: string\n          description: \u003e\n            Who or what caused the Token to be deleted. Must be either the\n            'CARDHOLDER' (operation requested by the Cardholder) or\n            'TOKEN_REQUESTOR' (operation requested by the token requestor).\n          maxLength: 64\n          example: CARDHOLDER\n        reason:\n          type: string\n          description: |\n            Free form reason why the Tokens are being suspended.\n          maxLength: 256\n          example: Lost/stolen device\n        reasonCode:\n          type: string\n          description: \u003e\n            The reason for the action to be deleted. Must be one of\n            'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER'\n            (Other - default used if value not provided).\n          maxLength: 64\n          example: SUSPECTED_FRAUD\n    DeleteResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site1.mastercard.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        tokens:\n          type: array\n          items:\n            $ref: \"#/components/schemas/token_for_LCM\"\n    UnSuspendRequestSchema:\n      required:\n        - requestId\n        - tokenUniqueReferences\n        - causedBy\n        - reasonCode\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        paymentAppInstanceId:\n          type: string\n          description: \u003e\n            Identifier for the specific Mobile Payment App instance, unique\n            across a given Wallet Identifier. This value cannot be changed after\n            digitization. This field is alphanumeric and additionally web-safe\n            base64 characters per RFC 4648 (minus \"-\", underscore \"_\") up to a\n            maximum length of 48, = should not be URL encoded. Conditional - not\n            applicable for server based tokens but required otherwise.\n          maxLength: 48\n          example: 123456789\n        tokenUniqueReferences:\n          type: array\n          items:\n            type: string\n          description: \u003e\n            The specific Token to be unsuspended. Array of more or more valid\n            references as assigned by MDES\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        causedBy:\n          type: string\n          description: \u003e\n            Who or what caused the Token to be unsuspended. Must be either the\n            'CARDHOLDER' (operation requested by the Cardholder) or\n            'TOKEN_REQUESTOR' (operation requested by the token requestor).\n          maxLength: 64\n          example: CARDHOLDER\n        reason:\n          type: string\n          description: |\n            Free form reason why the Tokens are being suspended.\n          maxLength: 256\n          example: Lost/stolen device\n        reasonCode:\n          type: string\n          description: \u003e\n            The reason for the action to be unsuspended. Must be one of\n            'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER'\n            (Other - default used if value not provided).\n          maxLength: 64\n          example: SUSPECTED_FRAUD\n    UnSuspendResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site1.mastercard.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        tokens:\n          type: array\n          items:\n            $ref: \"#/components/schemas/token_for_LCM\"\n    GetTaskStatusRequestSchema:\n      required:\n        - requestId\n        - taskId\n        - tokenRequestorId\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        tokenRequestorId:\n          type: string\n          description: \u003e\n            11-digit numeric ID provided by Mastercard that identifies the Token\n            Requestor.\n          maxLength: 11\n          minLength: 11\n          example: 98765432101\n        taskId:\n          type: string\n          description: \u003e\n            Unique identifier for this task. Must be an identifier previously\n            used when requesting a task.\n          maxLength: 64\n          example: 123456\n    GetTaskStatusResponseSchema:\n      properties:\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        status:\n          type: string\n          description: \u003e\n            The status of the specified task. Must be either 'PENDING' (The Task\n            has been recieved and is pending processing), 'IN_PROGRESS' (The\n            task is currently in progress), 'COMPLETED' (The task was completed\n            successfully) or 'FAILED' The task was processed but failed to\n            complete successfully.\n          maxLength: 64\n          example: FAILED\n    SearchTokensRequestSchema:\n      required:\n        - requestId\n      properties:\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        fundingAccountInfo:\n          $ref: \"#/components/schemas/fundingAccountInfo\"\n        tokenRequestorId:\n          type: string\n          description: \u003e\n            Identifies the Token Requestor. Only tokens associated with the\n            token requestor will be returned. Length - 11.\n          example: 98765432101\n    SearchTokensResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site1.mastercard.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        tokens:\n          type: array\n          items:\n            $ref: \"#/components/schemas/token\"\n    GetTokenRequestSchema:\n      required:\n        - requestId\n        - tokenUniqueReference\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        paymentAppInstanceId:\n          type: string\n          description: \u003e\n            Identifier for the specific Mobile Payment App instance, unique\n            across a given Wallet Identifier. This value cannot be changed after\n            digitization. This field is alphanumeric and additionally web-safe\n            base64 characters per RFC 4648 (minus \"-\", underscore \"_\") up to a\n            maximum length of 48, = should not be URL encoded. Conditional - not\n            applicable for server-based tokens but required otherwise.\n          maxLength: 48\n          example: 123456789\n        tokenUniqueReference:\n          type: string\n          description: |\n            The specific Token to be queried.\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        includeTokenDetail:\n          type: string\n          description: |\n            Flag to indicate if the encrypted token should be returned.\n          maxLength: 5\n          example: true\n    GetTokenResponseSchema:\n      properties:\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        token:\n          $ref: \"#/components/schemas/token_for_getToken\"\n        tokenDetail:\n          $ref: \"#/components/schemas/tokenDetail_getToken_Only\"\n    NotifyTokenUpdatedRequestSchema:\n      required:\n        - responseHost\n        - requestId\n        - encryptedPayload\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation should be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        encryptedPayload:\n          $ref: \"#/components/schemas/encryptedPayload\"\n    encryptedPayload:\n      required:\n        - publicKeyFingerprint\n        - encryptedKey\n        - encryptedData\n      properties:\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The fingerprint of the public key used to encrypt the ephemeral AES\n            key.\n          maxLength: 64\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5\n            scheme (depending on the value of oaepHashingAlgorithm.\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. Must be either SHA256\n            or SHA512.\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            The initialization vector used when encrypting data using the\n            one-time use AES key. Must be exactly 16 bytes (32 character hex\n            string) to match the block size. If not present, an IV of zero is\n            assumed. Length - 32.\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/notifyTokenEncryptedPayload\"\n    notifyTokenEncryptedPayload:\n      properties:\n        tokens:\n          type: array\n          items:\n            $ref: \"#/components/schemas/token_for_NTU\"\n    NotifyTokenUpdatedResponseSchema:\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site1.mastercard.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n    TransactRequestSchema:\n      required:\n        - requestId\n        - tokenUniqueReference\n        - dsrpType\n      properties:\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        requestId:\n          type: string\n          description: |\n            Unique identifier for the request.\n          example: 123456\n        tokenUniqueReference:\n          type: string\n          description: |\n            Globally unique identifier for the Token, as assigned by MDES.\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        dsrpType:\n          type: string\n          description: \u003e\n            What type of DSRP cryptogram to create. Must be UCAF.\n          maxLength: 64\n          example: UCAF\n        unpredictableNumber:\n          type: string\n          description: \u003e\n            HEX Encoded data (case sensitive) provided by the merchant to\n            provide variability and uniqueness to the generation of a\n            cryptogram.\n          maxLength: 8\n          minLength: 8\n          example: 23424563\n    TransactResponseSchema:\n      properties:\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n        responseHost:\n          type: string\n          description: \u003e\n            The host that originated the request. Future calls in the same\n            conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        encryptedPayload:\n          $ref: \"#/components/schemas/encryptedPayloadTransact\"\n    encryptedPayloadTransact:\n      properties:\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The fingerprint of the public key used to encrypt the ephemeral AES\n            key.\n\n          maxLength: 64\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5\n            scheme (depending on the value of oaepHashingAlgorithm.\n\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. Must be either SHA256\n            or SHA512.\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            The initialization vector used when encrypting data using the\n            one-time use AES key. Must be exactly 16 bytes (32 character hex\n            string) to match the block size. If not present, an IV of zero is\n            assumed.\n          maxLength: 32\n          minLength: 32\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/transactEncryptedData\"\n    transactEncryptedData:\n      properties:\n        accountNumber:\n          type: string\n          description: \u003e\n            The Primary Account Number for the transaction ? this is the Token\n            PAN.\n          minLength: 9\n          maxLength: 19\n          example: 5480981500100002\n        applicationExpiryDate:\n          type: string\n          description: |\n            Application expiry date for the Token. Expressed in YYMMDD format.\n          maxLength: 6\n          minLength: 6\n          example: \"210931\"\n        panSequenceNumber:\n          type: string\n          description: |\n            Application PAN sequence number for the Token\n          maxLength: 2\n          minLength: 2\n          example: \"01\"\n        track2Equivalent:\n          type: string\n          description: \u003e\n            Track 2 equivalent data for the Token. Expressed according to\n            ISO/IEC 7813, excluding start sentinel, end sentinel, and\n            Longitudinal Redundancy Check (LRC), using hex nibble 'D' as field\n            separator, and padded to whole bytes using one hex nibble 'F' as\n            needed.\n          maxLength: 38\n          example: 5480981500100002D18112011000000000000F\n        de48se43Data:\n          type: string\n          description: |\n            Data for DE 48 Subelement 43 containing the cryptogram.\n            DSRP cryptogram must be sent in DE104. Please refer to AN 3363 for details.\n          maxLength: 32\n          example: \"11223344556677889900112233445566778899\"\n    GatewayErrorsResponse:\n      properties:\n        Errors:\n          $ref: \"#/components/schemas/GatewayErrorsSchema\"\n    GatewayErrorsSchema:\n      properties:\n        Error:\n          type: array\n          items:\n            $ref: \"#/components/schemas/GatewayError\"\n    GatewayError:\n      description: Only returned in the event of an error condition.\n      properties:\n        Source:\n          type: string\n          description: \u003e\n            An element used to indicate the source of the issue causing this\n            error. e.g. Gateway\n          maxLength: 32\n          example: GATEWAY\n        Description:\n          type: string\n          description: \u003e\n            Description of the reason the operation failed. See API Response\n            Errors\n\n          maxLength: 256\n          example: OAuth signatures did not match.\n        ReasonCode:\n          type: string\n          description: |\n            A reason code for the error that has occurred.\n          maxLength: 100\n          example: AUTHENTICATION_FAILED\n        Recoverable:\n          type: boolean\n          description: \u003e\n            Generated by the gateway to indicate if the request could presented\n            again for processing. Either \"TRUE\" or \"FALSE\"\n          example: \"false\"\n        Details:\n          type: boolean\n          description: |\n            Always NULL, present for backwards compatiility\n          example: \"null\"\n    ErrorsResponse:\n      properties:\n        errorCode:\n          type: string\n          description: \u003e\n            **CONDITIONAL**\n            Returned in the event of an error and contains\n            the reason the operation failed. Only use if errors object is not\n            present.\n          maxLength: 32\n        errorDescription:\n          type: string\n          description: \u003e\n            **CONDITIONAL**\n            Returned in the event of an error and contains a\n            description of why the operation failed. Only use if errors object\n            is not present.\n          maxLength: 32\n        responseHost:\n          type: string\n          description: \u003e\n            The MasterCard host that originated the request. Future calls in the\n            same conversation may be routed to this host.\n          example: site2.payment-app-provider.com\n        responseId:\n          type: string\n          description: |\n            Unique identifier for the response.\n          example: 123456\n        Errors:\n          $ref: \"#/components/schemas/Error\"\n    Error:\n      description: Only returned in the event of an error condition.\n      properties:\n        source:\n          type: string\n          description: \u003e\n            An element used to indicate the source of the issue causing this\n            error. Must be one of\n             * 'MDES'\n             * 'INPUT'\n          maxLength: 32\n        errorCode:\n          type: string\n          description: \u003e\n            An error code generated by the gateway if the error occurs before\n            reaching the MDES application.\n            maxLength: 100\n        description:\n          type: string\n          description: \u003e\n            Description of the reason the operation failed. See API Response\n            Errors\n\n          maxLength: 256\n        reasonCode:\n          type: string\n          description: |\n            A reason code for the error that has occurred.\n          maxLength: 100\n        recoverable:\n          type: boolean\n          description: \u003e\n            Generated by the gateway to indicate if the request could presented\n            again for processing. Either \"TRUE\" or \"FALSE\"\n          example: \"TRUE\"\n    TransactError:\n      description: Only returned in the event of an error condition for the Transact API\n      properties:\n        source:\n          type: string\n          description: \u003e\n            An element used to indicate the source of the issue causing this\n            error. Must be one of\n             * 'MDES'\n             * 'INPUT'\n          maxLength: 32\n        errorCode:\n          type: string\n          description: \u003e\n            A reason code or information pertaining to the error that has\n            occurred. This will contain the error reported by the platform (e.g.\n            authentication errors) or service (e.g. invalid TUR)\n\n          maxLength: 100\n        description:\n          type: string\n          description: |\n            Description of the reason why the operation failed.\n          maxLength: 256\n        reasonCode:\n          type: string\n          description: \u003e\n            A reason code or information pertaining to the error that has\n            occurred from the service (e.g. invalid TUR). See API Response\n            Errors\n\n          maxLength: 100\n        errorDescription:\n          type: string\n          description: |\n            **DEPRECATED**\n            Use description instead.\n          maxLength: 100\n    fundingAccountInfo:\n      properties:\n        panUniqueReference:\n          type: string\n          description: \u003e\n            **(CONDITIONAL)**\n\n            For repeat digitizations, the unique reference allocated to the Primary Account Number. When supplied, the tokenUniqueReferenceForPanInfo, accountNumber, expiryMonth and expiryYear must be omitted from CardInfoData. Only allowed if Only allowed if tokenUniqueReference and pushAccountReceipt are not present and encrypted data does not contain the account information.\n\n          maxLength: 64\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            **(CONDITIONAL)**\n\n            A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime.  For repeat digitizations, the unique reference allocated to the token will be used to retrieve the financial account information. When supplied, the account information is omitted from FundingAccountData. Only allowed if panUniqueReference and pushAccountReceipt are not present and encrypted data does not contain the account information.\n\n          maxLength: 64\n        encryptedPayload:\n          $ref: \"#/components/schemas/fundingAccountInfo-EncryptedPayload\"\n    fundingAccountInfo-EncryptedPayload:\n      properties:\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The fingerprint of the public key used to encrypt the ephemeral AES\n            key.\n\n          maxLength: 64\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5\n            scheme (depending on the value of oaepHashingAlgorithm.\n\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. Must be either SHA256\n            or SHA512.\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            The initialization vector used when encrypting data using the\n            one-time use AES key. Must be exactly 16 bytes (32 character hex\n            string) to match the block size. If not present, an IV of zero is\n            assumed.\n          maxLength: 32\n          minLength: 32\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/FundingAccountData\"\n    FundingAccountData:\n      properties:\n        cardAccountData:\n          $ref: \"#/components/schemas/CardAccountData_inbound\"\n        accountHolderData:\n          $ref: \"#/components/schemas/accountHolderData\"\n        source:\n          type: string\n          description: |\n            (**Required as minimum for Tokenization**)\n            The source of the account. Must be one of\n              * ACCOUNT_ON_FILE\n              * ACCOUNT_ADDED_MANUALLY\n              * ACCOUNT_ADDED_VIA_APPLICATION\n          maxLength: 32\n          example: ACCOUNT_ON_FILE\n    accountHolderData:\n      properties:\n        accountHolderName:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n            The name of the cardholder in the format LASTNAME/FIRSTNAME or FIRSTNAME LASTNAME\n\n          maxLength: 27\n        accountHolderAddress:\n          $ref: \"#/components/schemas/billingAddress\"\n        consumerIdentifier:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            Customer Identifier that may be required in some regions.\n          maxLength: 88\n        accountHolderEmailAddress:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The e-mail address of the Account Holder\n          maxLength: 320\n        accountHolderMobilePhoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n    accountHolderData_outbound:\n      description: \u003e\n        **(CONDITIONAL)**\n\n        Present in tokenize response if supported by the Merchant, if using a pushAccountReceipt and if there is account holder data associated with the pushAccountReceipt in case that the issuer decision is APPROVED. Refer to MDES Token Connect Token Requestor Implementation Guide and Specification  for more details.\n      properties:\n        accountHolderName:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The name of the cardholder\n          maxLength: 27\n        accountHolderAddress:\n          $ref: \"#/components/schemas/billingAddress\"\n        accountHolderEmailAddress:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The e-mail address of the Account Holder\n          maxLength: 320\n        accountHolderMobilePhoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n    PhoneNumber:\n      properties:\n        countryDialInCode:\n          type: number\n          description: \u003e\n            **(OPTIONAL)**\n            The country code for the phone number. E.g. 1 for US or 44 for UK.\n\n          maxLength: 4\n          example: \"44\"\n        phoneNumber:\n          type: number\n          description: |\n            **(OPTIONAL)**\n            The phone number of the account holder\n          maxLength: 20\n          example: 07777 777 777\n    CardAccountData_inbound:\n      description: \u003e\n        **(CONDITIONAL)**\n        Required in Tokenize or Search Tokens unless a\n        valid panUniqueReference, tokenUniqueReference or pushAccountReceipt is\n        also given in FundingAccountInfo.\n      properties:\n        accountNumber:\n          type: string\n          description: \u003e\n            The account number of the credit or debit card.\n            **(CONDITIONAL)** required in a Tokenize, or Get Digital Asset request,\n            unless a valid panUniqueReference or tokenUniqueReference or pushAccountReceipt was given in FundingAccountInfo.\n            **NOTE**:Only 6 digits can be supplied in SearchTokens if the TokenUniqueReference is provided in fundingAccountInfo.\n          minLength: 9\n          maxLength: 19\n          example: \"5123456789012345\"\n        expiryMonth:\n          type: string\n          description: \u003e\n            The expiry month for the account. Two numeric digits must be supplied.\n            Only supplied in tokenization requests if panUniqueReference or tokenUniqueReferenceForPanInfo or pushAccountReceipt is not present.\n            **Format: MM**\n          minLength: 2\n          maxLength: 2\n          example: \"09\"\n        expiryYear:\n          type: string\n          description: \u003e\n            **(Required as minimum for Tokenization)**\n            The expiry year for the account.\n            Only supplied in tokenization requests if panUniqueReference or tokenUniqueReferenceForPanInfo or pushAccountReceipt is not present.\n\n            **Format: YY**\n          minLength: 2\n          maxLength: 2\n          example: \"21\"\n        securityCode:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n            The security code for the account can optionally be provided for Tokenization. If provided, the validity will be checked.\n\n            Optional in a Tokenize request, not present otherwise.\n          maxLength: 3\n          example: \"123\"\n    CardAccountData_outbound:\n      description: \u003e\n        **(CONDITIONAL)**\n\n        The credit or debit card information for the account that is being tokenized.  Present in tokenize response if supported by the Token Requestor, if using a pushAccountReceipt and if there is a card account associated with the pushAccountReceipt in case that the issuer decision is not DECLINED.\n      properties:\n        accountNumber:\n          type: string\n          description: |\n            The account number of the credit or debit card.\n          minLength: 9\n          maxLength: 19\n          example: \"5123456789012345\"\n        expiryMonth:\n          type: string\n          description: \u003e\n\n            The expiry month for the account. Two numeric digits must be supplied.\n\n            **Format: MM**\n          minLength: 2\n          maxLength: 2\n          example: \"09\"\n        expiryYear:\n          type: string\n          description: |\n            **(Required as minimum for Tokenization)**\n            The expiry year for the account.\n            **Format: YY**\n          minLength: 2\n          maxLength: 2\n          example: \"21\"\n    billingAddress:\n      properties:\n        line1:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The first line of the street address for the billing address.\n          maxLength: 64\n          example: 100 1st Street\n        line2:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The second line of the street address for the billing address.\n          maxLength: 64\n          example: Apt. 4B\n        city:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The city of the billing address.\n          maxLength: 32\n          example: St. Louis\n        countrySubdivision:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The state or country subdivision of the billing address.\n          maxLength: 12\n          example: MO\n        postalCode:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The postal of code of the billing address.\n          maxLength: 16\n          example: \"61000\"\n        country:\n          type: string\n          description: |\n            **(OPTIONAL)**\n            The country of the billing address.\n          maxLength: 3\n          example: USA\n    DecisioningData:\n      properties:\n        recommendation:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            Digitization decision recommended by the Token Requestor. Must be either APPROVED (Recommend a decision of Approved), DECLINED (Recommend a decision of Decline).\n\n          maxLength: 64\n          example: APPROVED\n        recommendationAlgorithmVersion:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            Version of the algorithm used by the Token Requestor to determine its recommendation. Must be a value of \"01\". Other values may be supported in the future.\n\n          maxLength: 16\n          example: \"01\"\n        deviceScore:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            Score assigned by the Token Requestor for the target device being provisioned. Must be a value from 1 to 5.\n          example: \"1\"\n        accountScore:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            Score assigned by the Token Requestor for the consumer account or relationship. Must be a value from 1 to 5.\n          example: \"1\"\n        recommendationReasons:\n          type: array\n          description: \u003e\n            **(OPTIONAL)**\n\n            Code indicating the reasons the Token Requestor is suggesting the digitization decision.  See table here - https://developer.mastercard.com/mdes-digital-enablement/documentation/code-and-formats/#recommendation-reason-codes\n          items:\n            type: string\n            example: LONG_ACCOUNT_TENURE\n        deviceCurrentLocation:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            Latitude and longitude in the format \"(sign) latitude, (sign) longitude\" with a precision of 2 decimal places.  Ex - \"38.63, -90.25\"  Latitude is between -90 and 90.  Longitude between -180 and 180. Relates to the target device being provisioned. If there is no target device, then this should be the current consumer location, if available.\n\n          maxLength: 14\n          example: 38.63,-90.25\n        deviceIpAddress:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n\n            The IP address of the device through which the device reaches the internet. This may be a temporary or permanent IP address assigned to a home router, or the IP address of a gateway through which the device connects to a network. IPv4 address format of 4 octets separated by \".\" Ex - 127.0.0.1 Relates to the target device being provisioned. If there is no target device, then this should be the current consumer IP address, if available.\n          maxLength: 15\n          example: 127.0.0.1\n        mobileNumberSuffix:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n            The last few digits (typically four) of the consumer's mobile phone number as available on file or on the consumer's current device, which may or may not be the mobile number of the target device being provisioned.\n          maxLength: 32\n          example: 3456\n        accountIdHash:\n          type: string\n          description: \u003e\n            **(OPTIONAL)**\n            SHA-256 hash of the Cardholder?s account ID with the Token Requestor. Typically expected to be an email address.\n          maxLength: 64\n          format: Alpha-Numeric and Hex-encoded data (case-insensitive).\n    productConfig:\n      required:\n        - brandLogoAssetId\n        #- issuerLogoAssetId # mr. this is not returned\n        # - isCoBranded # mr. this is not returned\n        #- iconAssetId # mr. this is not returned\n        - foregroundColor\n        - issuerName\n        - shortDescription\n      properties:\n        brandLogoAssetId:\n          type: string\n          description: \u003e\n            The MasterCard or Maestro brand logo associated with this card.\n            Provided as an Asset ID ? use the Get Asset API to retrieve the\n            actual asset. Always returned in Product Configuration object\n          maxLength: 64\n          example: 800200c9-629d-11e3-949a-0739d27e5a66\n        issuerLogoAssetId:\n          type: string\n          description: \u003e\n            The logo of the issuing bank. Provided as an Asset ID ? use the Get\n            Asset API to retrieve the actual asset. Always returned in Product\n            Configuration object\n          maxLength: 64\n          example: dbc55444-986a-4896-b41c-5d5e2dd431e2\n        isCoBranded:\n          type: boolean\n          description: \u003e\n            Whether the product is co-branded. Must be either true (this is a\n            co-branded product) or false (this is not a co-branded product).\n            Always returned in Product Configuration object\n          maxLength: 5\n          example: true\n        coBrandName:\n          type: string\n          description: \u003e\n            Textual name of the co-brand partner. Required if CoBranded is true,\n            not present otherwise.\n            **Conditional: Conditionally required if isCoBranded = \"true\". Not present otherwise**\n          maxLength: 128\n          example: Co brand partner\n        coBrandLogoAssetId:\n          type: string\n          description: \u003e\n            The co-brand logo (if any) for this product. Provided as an Asset ID\n            ? use the Get Asset API to retrieve the actual asset.\n          maxLength: 64\n          example: dbc55444-496a-4896-b41c-5d5e2dd431e2\n        cardBackgroundCombinedAssetId:\n          type: string\n          description: \u003e\n            The card image used to represent the digital card in the wallet.\n            This ?combined? option contains the MasterCard, bank and any co-\n            brand logos.  Provided as an Asset ID ? use the Get Asset API to\n            retrieve the actual asset.\n            **Conditional: either CardBackgroundCombined or CardBackground will be provided**\n          maxLength: 64\n          example: 739d27e5-629d-11e3-949a-0800200c9a66\n        cardBackgroundAssetId:\n          type: string\n          description: \u003e\n            The card image used to represent the digital card in the wallet.\n            This ?non-combined? option does not contain the MasterCard, bank, or\n            co-brand logos. Provided as an Asset ID ? use the Get Asset API to\n            retrieve the actual asset.\n            **Conditional: either CardBackgroundCombined or CardBackground will be provided**\n          maxLength: 64\n          example: 456d27e5-629d-11e3-949a-0800200c9a66\n        iconAssetId:\n          type: string\n          description: \u003e\n            The icon representing the primary brand(s) associated with this\n            product. Provided as an Asset ID ? use the Get Asset API to retrieve\n            the actual asset. Always returned in Product Configuration\n            object\n          maxLength: 64\n          example: 739d87e5-629d-11e3-949a-0800200c9a66\n        foregroundColor:\n          type: string\n          description: \u003e\n            Foreground color, used to overlay text on top of the card image.\n            Always returned in Product Configuration object\n          maxLength: 6\n          format: Hexadecimal RGB color format (case-insensitive).\n          example: 0\n        issuerName:\n          type: string\n          description: \u003e\n            Name of the issuing bank. Always returned in Product Configuration\n            object\n          maxLength: 64\n          example: Issuing Bank\n        shortDescription:\n          type: string\n          description: \u003e\n            A short description for this product. Always returned in Product\n            Configuration object\n          maxLength: 128\n          example: Bank Rewards MasterCard\n        longDescription:\n          type: string\n          description: |\n            A long description for this product.\n          maxLength: 256\n          example: Bank Rewards MasterCard with the super duper rewards program\n        customerServiceUrl:\n          type: string\n          description: |\n            Customer service website of the issuing bank.\n          maxLength: 128\n          example: https://bank.com/customerservice\n        customerServiceEmail:\n          type: string\n          description: |\n            Customer service email address of the issuing bank.\n          maxLength: 64\n          example: customerservice@bank.com\n        customerServicePhoneNumber:\n          type: string\n          description: |\n            Customer service phone number of the issuing bank.\n          maxLength: 64\n          example: 1234567891\n        issuerMobileApp:\n          description: \u003e\n            Contains one or more mobile app details that may be used to deep\n            link from the Mobile Payment App to the issuer mobile app.\n          maxLength: 64\n          type: object\n          example: null\n        onlineBankingLoginUrl:\n          type: string\n          description: |\n            Logon URL for the issuing bank?s online banking website.\n          maxLength: 128\n          example: bank.com\n        termsAndConditionsUrl:\n          type: string\n          description: \u003e\n            URL linking to the issuing bank?s terms and conditions for this\n            product.\n          maxLength: 128\n          example: https://bank.com/termsAndConditions\n        privacyPolicyUrl:\n          type: string\n          description: \u003e\n            URL linking to the issuing bank?s privacy policy for this\n            product.\n          maxLength: 128\n          example: https://bank.com/privacy\n        issuerProductConfigCode:\n          type: string\n          description: \u003e\n            Freeform identifier for this product configuration as assigned by\n            the issuer.\n          maxLength: 128\n          example: 123456\n    tokenInfo:\n      required:\n        - tokenPanSuffix\n        - accountPanSuffix\n        - tokenExpiry\n        - dsrpCapable\n      properties:\n        tokenPanSuffix:\n          type: string\n          description: |\n            The last few digits (typically four) of the Token PAN.\n          maxLength: 8\n          example: \"0001\"\n        accountPanSuffix:\n          type: string\n          description: |\n            The last few digits (typically four) of the Account PAN.\n          maxLength: 8\n          example: \"0011\"\n        tokenExpiry:\n          type: string\n          description: |\n            The expiry of the Token PAN, given in MMYY format.\n          maxLength: 4\n          example: 921\n        accountPanExpiry:\n          type: string\n          description: |\n            The expiry of the Account PAN, given in MMYY format.\n          maxLength: 4\n          example: 921\n        dsrpCapable:\n          type: boolean # mr. this is returned as boolean\n          description: \u003e\n            Whether DSRP transactions are supported by this Token. Must be\n            either 'true' (DSRP capable) or 'false' (Not DSRP capable).\n          maxLength: 5\n          example: true\n        tokenAssuranceLevel:\n          type: integer\n          description: \u003e\n            A value indicating the confidence level of the token to Account PAN\n            binding.\n          maxLength: 2\n          example: 3\n        productCategory:\n          type: string\n          description: \u003e\n            The product category of the Account PAN. When supplied will be one\n            of the following values:\n\n              * CREDIT\n              * DEBIT\n              * PREPAID\n              * UNKNOWN\n\n          maxLength: 32\n          example: CREDIT\n    tokenDetail:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            Globally unique identifier for the Token, as assigned by\n            MDES.\n\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The certificate fingerprint identifying the public key used to\n            encrypt the ephemeral AES key.\n\n          maxLength: 64\n          format: Hex-encoded data (case-insensitive).\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by 'publicKeyFingerprint') using the OAEP or RSA\n            Encryption Standard PKCS #1 v1.5 scheme (depending on the value of\n            'oaepHashingAlgorithm'. Requirement is for a 128-bit key (with\n            256-bit key supported as an option).\n\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. If omitted, then the\n            RSA Encryption Standard PKCS #1 v1.5 will be used. Must be either\n            'SHA256' (Use the SHA-256 algorithm) or 'SHA512' (Use the SHA-512\n            algorithm).\n\n          maxLength: 6\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            It is recommended to supply a random initialization vector when\n            encrypting the data using the one-time use AES key. Must be exactly\n            16 bytes (32 character hex string) to match the block size.\n            Hex-encoded data (case-insensitive).\n          maxLength: 32\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/tokenDetailData\"\n    tokenDetail_getToken_Only:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            Globally unique identifier for the Token, as assigned by\n            MDES.\n\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The certificate fingerprint identifying the public key used to\n            encrypt the ephemeral AES key.\n          maxLength: 64\n          format: Hex-encoded data (case-insensitive).\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by 'publicKeyFingerprint') using the OAEP or RSA\n            Encryption Standard PKCS #1 v1.5 scheme (depending on the value of\n            'oaepHashingAlgorithm'. Requirement is for a 128-bit key (with\n            256-bit key supported as an option).\n\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. If omitted, then the\n            RSA Encryption Standard PKCS #1 v1.5 will be used. Must be either\n            'SHA256' (Use the SHA-256 algorithm) or 'SHA512' (Use the SHA-512\n            algorithm).\n\n          maxLength: 6\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            It is recommended to supply a random initialization vector when\n            encrypting the data using the one-time use AES key. Must be exactly\n            16 bytes (32 character hex string) to match the block size.\n            Hex-encoded data (case-insensitive).\n          maxLength: 32\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/tokenDetailData_getToken_Only\"\n    tokenDetail_PAR_Only:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            Globally unique identifier for the Token, as assigned by\n            MDES.\u003cbr\u003e\n          maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        publicKeyFingerprint:\n          type: string\n          description: \u003e\n            The certificate fingerprint identifying the public key used to\n            encrypt the ephemeral AES key.\n\n          maxLength: 64\n          format: Hex-encoded data (case-insensitive).\n          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b\n        encryptedKey:\n          type: string\n          description: \u003e\n            One-time use AES key encrypted by the MasterCard public key (as\n            identified by 'publicKeyFingerprint') using the OAEP or RSA\n            Encryption Standard PKCS #1 v1.5 scheme (depending on the value of\n            'oaepHashingAlgorithm'. Requirement is for a 128-bit key (with\n            256-bit key supported as an option).\n\n          maxLength: 512\n          example: A1B2C3D4E5F6112233445566\n        oaepHashingAlgorithm:\n          type: string\n          description: \u003e\n            Hashing algorithm used with the OAEP scheme. If omitted, then the\n            RSA Encryption Standard PKCS #1 v1.5 will be used. Must be either\n            'SHA256' (Use the SHA-256 algorithm) or 'SHA512' (Use the SHA-512\n            algorithm).\n\n          maxLength: 6\n          example: SHA512\n        iv:\n          type: string\n          description: \u003e\n            It is recommended to supply a random initialization vector when\n            encrypting the data using the one-time use AES key. Must be exactly\n            16 bytes (32 character hex string) to match the block size.\n            Hex-encoded data (case-insensitive).\n          maxLength: 32\n          example: NA\n        encryptedData:\n          $ref: \"#/components/schemas/tokenDetailData_PAR_Only\"\n    tokenDetailData:\n      properties:\n        paymentAccountReference:\n          type: string\n          description: \u003e\n            \"The unique account reference assigned to the PAN. Conditionally\n            returned if the Token Requestor has opted to receive PAR and\n            providing PAR is assigned by Mastercard or the Issuer provides PAR\n            in the authorization message response.\"\n          maxLength: 29\n          example: 5001a9f027e5629d11e3949a0800a\n    tokenDetailData_getToken_Only:\n      properties:\n        tokenNumber:\n          type: string\n          description: \u003e\n            The Token Primary Account Number of the Card.\n          maxLength: 19\n          minLength: 9\n        expiryMonth:\n          type: string\n          description: |\n            The month of the token expiration date.\n          maxLength: 2\n        expiryYear:\n          type: string\n          description: |\n            The year of the token expiration date.\n          maxLength: 2\n        paymentAccountReference:\n          type: string\n          description: \u003e\n            The unique account reference assigned to the PAN. Conditionally\n            returned if the Token Requestor has opted to receive PAR and\n            providing PAR is assigned by Mastercard or the Issuer provides PAR\n            in the authorization message response.\n          maxLength: 29\n          example: 5001a9f027e5629d11e3949a0800a\n    tokenDetailData_PAR_Only:\n      properties:\n        paymentAccountReference:\n          type: string\n          description: \u003e\n            The unique account reference assigned to the PAN. Conditionally\n            returned if the Token Requestor has opted to receive PAR and\n            providing PAR is assigned by Mastercard or the Issuer provides PAR\n            in the authorization message response.\n          maxLength: 29\n          example: 5001a9f027e5629d11e3949a0800a\n    authenticationMethods:\n      description: |\n        \"authenticationMethods not currently used for MDES for Merchants\"\n      properties:\n        id:\n          type: number # mr: this is returned as number from the service\n          description: |\n            Unique identifier assigned to this Authentication Method.\n          example: 334123523456213450000\n        type:\n          type: string\n          description: \u003e\n            Specifies the authentication method type and provided in the\n            tokenize response.  See table here -\n            https://developer.mastercard.com/mdes-digital-enablement/documentation/code-and-formats/#authentication-method-codes\n          example: TEXT_TO_CARDHOLDER_NUMBER\n        value:\n          type: string\n          description: \u003e\n            Specifies the authentication method value (meaning varies depending\n            on the authentication method type).\n          example: 1\n    token:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the Token which is always present\n            even if an error occurs.\n            maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        status:\n          type: string\n          description: |\n            The current status of Token. Must be either:\n             * 'INACTIVE' (Token has not yet been activated)\n             * 'ACTIVE' (Token is active and ready to transact)\n             * 'SUSPENDED' (Token is suspended and unable to transact)\n             * 'DEACTIVATED' (Token has been permanently deactivated).\n            maxLength: 32\n          example: SUSPENDED\n        suspendedBy:\n          type: array\n          items:\n            type: string\n            example: CARDHOLDER\n          description: \u003e\n            (CONDITIONAL only supplied if status is SUSPENDED)\n            Who or what caused the Token to be suspended One or more values of:\n               * ISSUER - Suspended by the Issuer.\n               * TOKEN_REQUESTOR - Suspended by the Token Requestor\n               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked\n               * CARDHOLDER - Suspended by the Cardholder\n        statusTimestamp:\n          type: string\n          description: \u003e\n            The date and time the token status was last updated. Expressed in\n            ISO 8601 extended format as one of the following:\n               * YYYY-MM-DDThh:mm:ss[.sss]Z\n               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm\n               * Where [.sss] is optional and can be 1 to 3 digits.\n          maxLength: 29\n        productConfig:\n          $ref: \"#/components/schemas/productConfig\"\n        tokenInfo:\n          $ref: \"#/components/schemas/tokenInfo\"\n    token_for_getToken:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the Token which is always present\n            even if an error occurs.\n            maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        tokenRequestorId:\n          type: string\n          description: \u003e\n            Identifies the Token Requestor. \u003cbr\u003e\n            minLength: 11\n            maxLength: 11\n          example: \"98765432101\"\n        status:\n          type: string\n          description: |\n            The current status of Token. Must be either:\n             * 'INACTIVE' (Token has not yet been activated)\n             * 'ACTIVE' (Token is active and ready to transact)\n             * 'SUSPENDED' (Token is suspended and unable to transact)\n             * 'DEACTIVATED' (Token has been permanently deactivated).\n            maxLength: 32\n          example: SUSPENDED\n        suspendedBy:\n          type: array\n          items:\n            type: string\n            example: CARDHOLDER\n          description: \u003e\n            (CONDITIONAL only supplied if status is SUSPENDED)\n            Who or what caused the Token to be suspended One or more values of:\n               * ISSUER - Suspended by the Issuer.\n               * TOKEN_REQUESTOR - Suspended by the Token Requestor\n               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked\n               * CARDHOLDER - Suspended by the Cardholder\n        statusTimestamp:\n          type: string\n          description: \u003e\n            The date and time the token status was last updated. Expressed in\n            ISO 8601 extended format as one of the following:\n               * YYYY-MM-DDThh:mm:ss[.sss]Z\n               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm\n               * Where [.sss] is optional and can be 1 to 3 digits.\n          maxLength: 29\n        productConfig:\n          $ref: \"#/components/schemas/productConfig\"\n        tokenInfo:\n          $ref: \"#/components/schemas/tokenInfo_for_NTU_and_getToken\"\n    token_for_NTU:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the Token which is always present\n            even if an error occurs. \u003cbr\u003e\n            maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        tokenRequestorId:\n          type: string\n          description: \u003e\n            Identifies the Token Requestor. \u003cbr\u003e\n            minLength: 11\n            maxLength: 11\n          example: \"98765432101\"\n        status:\n          type: string\n          description: |\n            The current status of Token. Must be either:\n            * 'INACTIVE' (Token has not yet been activated)\n            * 'ACTIVE' (Token is active and ready to transact)\n            * 'SUSPENDED' (Token is suspended and unable to transact)\n            * 'DEACTIVATED' (Token has been permanently deactivated).\u003cbr\u003e\n            maxLength: 32\n          example: SUSPENDED\n        eventReasonCode:\n          type: string\n          description: |\n            An optional Reason Code provided by the Issuer to explain why the token status has changed.\n            Not present if the Issuer has not supplied a reason code.\n            Note: Recommended that Partners be resilient to new values as new reason codes may be added in the future without notice.\n            * 'DEVICE_LOST' - Cardholder confirmed token device lost.\n            * 'DEVICE_STOLEN' - Cardholder confirmed token device stolen.\n            * 'SUSPECTED_FRAUD' -  Issuer or cardholder reported fraudulent token transactions.\n            * 'ACCOUNT_CLOSED' - Account closed.\n            * 'NOT_FRAUD' - Issuer or cardholder confirmed no fraudulent token transactions.\n            * 'DEVICE_FOUND' - Cardholder reported token device found or not stolen.\n            * 'REDIGITIZATION_COMPLETE' - Token has been re-digitized successfully with either the expiry date extended or both expiry and token number changed.\n            * 'OTHER' -  Other. \u003cbr\u003e\n            maxLength: 32\n          example: SUSPECTED_FRAUD\n        suspendedBy:\n          type: array\n          items:\n            type: string\n            example: CARDHOLDER\n          description: |\n            (CONDITIONAL only supplied if status is SUSPENDED)\n            Who or what caused the Token to be suspended One or more values of:\n              * ISSUER - Suspended by the Issuer.\n              * TOKEN_REQUESTOR - Suspended by the Token Requestor\n              * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked\n              * CARDHOLDER - Suspended by the Cardholder \u003cbr\u003e\n        statusTimestamp:\n          type: string\n          description: \u003e\n            The date and time the token status was last updated. Expressed in ISO\n            8601 extended format as one of the following:\n              * YYYY-MM-DDThh:mm:ss[.sss]Z\n              * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm\n              * Where [.sss] is optional and can be 1 to 3 digits. \u003cbr\u003e\n          maxLength: 29\n        productConfig:\n            $ref: '#/components/schemas/productConfig'\n        tokenInfo:\n            $ref: '#/components/schemas/tokenInfo_for_NTU_and_getToken'\n    tokenInfo_for_NTU_and_getToken:\n      required:\n        - tokenPanSuffix\n        - accountPanPrefix\n        - accountPanSuffix\n        - tokenExpiry\n        - dsrpCapable\n      properties:\n        tokenPanSuffix:\n          type: string\n          description: |\n            The last few digits (typically four) of the Token PAN.\n          maxLength: 8\n          example: \"0001\"\n        accountPanPrefix:\n          type: string\n          description: |\n           The first few digits (typically six) of the Account PAN.\n          example: \"500000\"\n        accountPanSuffix:\n          type: string\n          description: |\n            The last few digits (typically four) of the Account PAN.\n          maxLength: 8\n          example: \"0011\"\n        tokenExpiry:\n          type: string\n          description: |\n            The expiry of the Token PAN, given in MMYY format.\n          maxLength: 4\n          example: 921\n        accountPanExpiry:\n          type: string\n          description: |\n            The expiry of the Account PAN, given in MMYY format.\n          maxLength: 4\n          example: 921\n        dsrpCapable:\n          type: string\n          description: \u003e\n            Whether DSRP transactions are supported by this Token. Must be\n            either 'true' (DSRP capable) or 'false' (Not DSRP capable).\n          maxLength: 5\n          example: true\n        tokenAssuranceLevel:\n          type: integer\n          description: \u003e\n            A value indicating the confidence level of the token to Account PAN\n            binding.\n          maxLength: 2\n          example: 3\n        productCategory:\n          type: string\n          description: \u003e\n            The product category of the Account PAN. When supplied will be one\n            of the following values:\n\n              * CREDIT\n              * DEBIT\n              * PREPAID\n              * UNKNOWN\n\n          maxLength: 32\n          example: CREDIT\n    token_for_LCM:\n      properties:\n        tokenUniqueReference:\n          type: string\n          description: \u003e\n            The unique reference allocated to the Token which is always present\n            even if an error occurs.\n            maxLength: 64\n          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45\n        status:\n          type: string\n          description: |\n            The current status of Token. Must be either:\n             * 'INACTIVE' (Token has not yet been activated)\n             * 'ACTIVE' (Token is active and ready to transact)\n             * 'SUSPENDED' (Token is suspended and unable to transact)\n             * 'DEACTIVATED' (Token has been permanently deactivated).\n            maxLength: 32\n          example: SUSPENDED\n        suspendedBy:\n          type: array\n          items:\n            type: string\n            example: CARDHOLDER\n          description: \u003e\n            (CONDITIONAL only supplied if status is SUSPENDED)\n            Who or what caused the Token to be suspended One or more values of:\n               * ISSUER - Suspended by the Issuer.\n               * TOKEN_REQUESTOR - Suspended by the Token Requestor\n               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked\n               * CARDHOLDER - Suspended by the Cardholder\n        statusTimestamp:\n          type: string\n          description: \u003e\n            The date and time the token status was last updated. Expressed in\n            ISO 8601 extended format as one of the following:\n               * YYYY-MM-DDThh:mm:ss[.sss]Z\n               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm\n               * Where [.sss] is optional and can be 1 to 3 digits.\n\n          maxLength: 29",
			"canonicalURL": "/github.com/Mastercard/mastercard-api-client-tutorial@0c24f778ad57a867eefd8aad44466a49f3f89826/-/blob/python/MDES_Digital_Enablement.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Mastercard/mastercard-api-client-tutorial/blob/0c24f778ad57a867eefd8aad44466a49f3f89826/python/MDES_Digital_Enablement.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}