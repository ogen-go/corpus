{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/adyen.com/NotificationConfigurationService/2/openapi.yaml",
			"byteSize": 32362,
			"content": "openapi: 3.1.0\nservers:\n  - url: https://cal-test.adyen.com/cal/services/Notification/v2\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: |-\n    The Notification Configuration API provides endpoints for setting up and testing notifications that inform you of events on your platform, for example when a KYC check or a payout has been completed.\n\n    For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).\n    ## Authentication\n    To connect to the Notification Configuration API, you must use basic authentication credentials of your web service user. If you don't have one, contact our [Adyen Support Team](https://support.adyen.com/hc/en-us/requests/new). Then use its credentials to authenticate your request, for example:\n\n    ```\n    curl\n    -U \"ws@MarketPlace.YourMarketPlace\":\"YourWsPassword\" \\\n    -H \"Content-Type: application/json\" \\\n    ...\n    ```\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n    ## Versioning\n    The Notification Configuration API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n    For example:\n    ```\n    https://cal-test.adyen.com/cal/services/Notification/v2/createNotificationConfiguration\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: \"Adyen for Platforms: Notification Configuration API\"\n  version: \"2\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/NotificationConfigurationService-v2.json\n      version: \"3.1\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: NotificationConfigurationService\npaths:\n  /createNotificationConfiguration:\n    post:\n      description: Creates a subscription to notifications informing you of events on your platform. After the subscription is created, the events specified in the configuration will be sent to the URL specified in the configuration. Subscriptions must be configured on a per-event basis (as opposed to, for example, a per-account holder basis), so all event notifications of a marketplace and of a given type will be sent to the same endpoint(s). A marketplace may have multiple endpoints if desired; an event notification may be sent to as many or as few different endpoints as configured.\n      operationId: post-createNotificationConfiguration\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-createNotificationConfiguration-basic\"\n            schema:\n              $ref: \"#/components/schemas/CreateNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                basic:\n                  $ref: \"#/components/examples/post-createNotificationConfiguration-basic-200\"\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Subscribe to notifications.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 1\n  /deleteNotificationConfigurations:\n    post:\n      description: This endpoint is used to delete an existing notification subscription configuration. After the subscription is deleted, no further event notifications will be sent to the URL that was in the subscription.\n      operationId: post-deleteNotificationConfigurations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Delete an existing notification subscription configuration.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 6\n  /getNotificationConfiguration:\n    post:\n      description: This endpoint is used to retrieve the details of the configuration of a notification subscription.\n      operationId: post-getNotificationConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve an existing notification subscription configuration.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 2\n  /getNotificationConfigurationList:\n    post:\n      description: This endpoint is used to retrieve the details of the configurations of all of the notification subscriptions in the marketplace of the executing user.\n      operationId: post-getNotificationConfigurationList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EmptyRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationListResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a list of existing notification subscription configurations.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 3\n  /testNotificationConfiguration:\n    post:\n      description: This endpoint is used to test an existing notification subscription configuration. For each event type specified, a test notification will be generated and sent to the URL configured in the subscription specified.\n      operationId: post-testNotificationConfiguration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Test an existing notification configuration.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 4\n  /updateNotificationConfiguration:\n    post:\n      description: This endpoint is used to update an existing notification subscription configuration. If updating the event types, all event types desired must be provided, otherwise the previous event type configuration will be overwritten.\n      operationId: post-updateNotificationConfiguration\n      requestBody:\n        content:\n          application/json:\n            examples:\n              basic:\n                $ref: \"#/components/examples/post-updateNotificationConfiguration-basic\"\n            schema:\n              $ref: \"#/components/schemas/UpdateNotificationConfigurationRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                basic:\n                  $ref: \"#/components/examples/post-updateNotificationConfiguration-basic-200\"\n              schema:\n                $ref: \"#/components/schemas/GetNotificationConfigurationResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update an existing notification subscription configuration.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 5\ncomponents:\n  examples:\n    post-createNotificationConfiguration-basic:\n      summary: Create a notification configuration\n      value:\n        configurationDetails:\n          active: true\n          description: Test notification769551\n          eventConfigs:\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_HOLDER_VERIFICATION\n                includeMode: INCLUDE\n          messageFormat: SOAP\n          notifyPassword: testPassword\n          notifyURL: https://www.adyen.com/notification-handler\n          notifyUsername: testUserName\n          sendActionHeader: true\n          sslProtocol: SSL\n    post-createNotificationConfiguration-basic-200:\n      summary: Example response for request 'basic'\n      value:\n        configurationDetails:\n          active: \"true\"\n          description: Test notification769551\n          eventConfigs:\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_HOLDER_VERIFICATION\n                includeMode: INCLUDE\n          messageFormat: SOAP\n          notificationId: 28467\n          notifyURL: https://www.adyen.com/notification-handler\n          sendActionHeader: \"true\"\n          sslProtocol: SSLInsecureCiphers\n        pspReference: \"8616178952143018\"\n        submittedAsync: \"false\"\n    post-updateNotificationConfiguration-basic:\n      summary: Update notification configurations\n      value:\n        configurationDetails:\n          active: false\n          description: new description799847\n          eventConfigs:\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_HOLDER_CREATED\n                includeMode: EXCLUDE\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_CREATED\n                includeMode: INCLUDE\n          notificationId: 21259\n          notifyPassword: testPassword2\n          notifyURL: http://www.adyen.com\n          notifyUsername: testUserName2\n          sendActionHeader: false\n          sslProtocol: TLSv10\n    post-updateNotificationConfiguration-basic-200:\n      summary: Example response for request 'basic'\n      value:\n        configurationDetails:\n          active: \"false\"\n          description: new description799847\n          eventConfigs:\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_CREATED\n                includeMode: INCLUDE\n            - NotificationEventConfiguration:\n                eventType: ACCOUNT_HOLDER_CREATED\n                includeMode: EXCLUDE\n          messageFormat: JSON\n          notificationId: 21259\n          notifyURL: http://www.adyen.com\n          sendActionHeader: \"false\"\n          sslProtocol: TLSv10\n        pspReference: \"8516178951636344\"\n        submittedAsync: \"false\"\n  schemas:\n    CreateNotificationConfigurationRequest:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the prospective notification subscription configuration.\n      required:\n        - configurationDetails\n    DeleteNotificationConfigurationRequest:\n      properties:\n        notificationIds:\n          description: A list of IDs of the notification subscription configurations to be deleted.\n          items:\n            format: int64\n            type: integer\n          type: array\n      required:\n        - notificationIds\n    EmptyRequest: {}\n    ExchangeMessage:\n      properties:\n        messageCode:\n          type: string\n        messageDescription:\n          type: string\n    GenericResponse:\n      properties:\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n    GetNotificationConfigurationListResponse:\n      properties:\n        configurations:\n          description: Details of the notification subscription configurations.\n          items:\n            $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - configurations\n    GetNotificationConfigurationRequest:\n      properties:\n        notificationId:\n          description: The ID of the notification subscription configuration whose details are to be retrieved.\n          format: int64\n          type: integer\n      required:\n        - notificationId\n    GetNotificationConfigurationResponse:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the notification subscription configuration.\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - configurationDetails\n    NotificationConfigurationDetails:\n      properties:\n        active:\n          description: Indicates whether the notification subscription is active.\n          type: boolean\n        apiVersion:\n          description: The version of the notification to which you are subscribing. To make sure that your integration can properly process the notification, subscribe to the same version as the API that you're using.\n          format: int32\n          type: integer\n        description:\n          description: A description of the notification subscription configuration.\n          type: string\n        eventConfigs:\n          description: Contains objects that define event types and their subscription settings.\n          items:\n            $ref: \"#/components/schemas/NotificationEventConfiguration\"\n          type: array\n        messageFormat:\n          deprecated: true\n          description: |-\n            The data format of the notification to be sent.\n            \u003ePermitted values: `JSON`, `SOAP`.\n          enum:\n            - JSON\n            - SOAP\n          type: string\n        notificationId:\n          description: Adyen-generated ID for the entry, returned in the response when you create a notification configuration. Required when updating an existing configuration using [`/updateNotificationConfiguration`](https://docs.adyen.com/api-explorer/#/NotificationConfigurationService/latest/post/updateNotificationConfiguration).\n          format: int64\n          type: integer\n        notifyPassword:\n          description: The password to use when accessing the notifyURL with the specified username.\n          type: string\n        notifyURL:\n          description: The URL to which the notifications are to be sent.\n          type: string\n        notifyUsername:\n          description: The username to use when accessing the notifyURL.\n          type: string\n        sendActionHeader:\n          deprecated: true\n          description: |-\n            Indicates whether an action header should be included.\n            \u003eOnly applies to SOAP messages (as specified in messageFormat).\n          type: boolean\n        sslProtocol:\n          description: |-\n            The SSL protocol employed by the endpoint.\n            \u003ePermitted values: `SSL`, `SSLInsecureCiphers`, `TLS`, `TLSv10`, `TLSv10InsecureCiphers`, `TLSv11`, `TLSv12`.\n          enum:\n            - SSL\n            - SSLInsecureCiphers\n            - TLS\n            - TLSv10\n            - TLSv10InsecureCiphers\n            - TLSv11\n            - TLSv12\n          type: string\n      required:\n        - eventConfigs\n        - notifyURL\n    NotificationEventConfiguration:\n      properties:\n        eventType:\n          description: |-\n            The type of event.\n\n            Possible values: **ACCOUNT_CLOSED**, **ACCOUNT_CREATED**, **ACCOUNT_FUNDS_BELOW_THRESHOLD**, **ACCOUNT_HOLDER_CREATED**, **ACCOUNT_HOLDER_LIMIT_REACHED**, **ACCOUNT_HOLDER_PAYOUT**, **ACCOUNT_HOLDER_STATUS_CHANGE**, **ACCOUNT_HOLDER_STORE_STATUS_CHANGE**, **ACCOUNT_HOLDER_UPCOMING_DEADLINE**, **ACCOUNT_HOLDER_UPDATED**, **ACCOUNT_HOLDER_VERIFICATION**, **ACCOUNT_UPDATED**, **BENEFICIARY_SETUP**, **COMPENSATE_NEGATIVE_BALANCE**, **DIRECT_DEBIT_INITIATED**, **PAYMENT_FAILURE**, **REFUND_FUNDS_TRANSFER**, **REPORT_AVAILABLE**, **SCHEDULED_REFUNDS**, **TRANSFER_FUNDS**.\n          enum:\n            - ACCOUNT_CLOSED\n            - ACCOUNT_CREATED\n            - ACCOUNT_FUNDS_BELOW_THRESHOLD\n            - ACCOUNT_HOLDER_CREATED\n            - ACCOUNT_HOLDER_LIMIT_REACHED\n            - ACCOUNT_HOLDER_PAYOUT\n            - ACCOUNT_HOLDER_STATUS_CHANGE\n            - ACCOUNT_HOLDER_STORE_STATUS_CHANGE\n            - ACCOUNT_HOLDER_UPCOMING_DEADLINE\n            - ACCOUNT_HOLDER_UPDATED\n            - ACCOUNT_HOLDER_VERIFICATION\n            - ACCOUNT_UPDATED\n            - BENEFICIARY_SETUP\n            - COMPENSATE_NEGATIVE_BALANCE\n            - DIRECT_DEBIT_INITIATED\n            - PAYMENT_FAILURE\n            - REFUND_FUNDS_TRANSFER\n            - REPORT_AVAILABLE\n            - SCHEDULED_REFUNDS\n            - TRANSFER_FUNDS\n            - TRANSFER_NOT_PAIDOUT_TRANSFERS\n          type: string\n        includeMode:\n          description: |-\n            Indicates whether the specified `eventType` is sent to your webhook endpoint.\n            Possible values:\n            * **INCLUDE**: Send the specified `eventType`.\n            * **EXCLUDE**: Send all event types except the specified `eventType` and other event types with the `includeMode` set to **EXCLUDE**.\n          enum:\n            - EXCLUDE\n            - INCLUDE\n          type: string\n      required:\n        - eventType\n        - includeMode\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    TestNotificationConfigurationRequest:\n      properties:\n        eventTypes:\n          description: |-\n            The event types to test.  If left blank, then all of the configured event types will be tested.\n            \u003ePermitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.\n          items:\n            enum:\n              - ACCOUNT_CLOSED\n              - ACCOUNT_CREATED\n              - ACCOUNT_FUNDS_BELOW_THRESHOLD\n              - ACCOUNT_HOLDER_CREATED\n              - ACCOUNT_HOLDER_LIMIT_REACHED\n              - ACCOUNT_HOLDER_PAYOUT\n              - ACCOUNT_HOLDER_STATUS_CHANGE\n              - ACCOUNT_HOLDER_STORE_STATUS_CHANGE\n              - ACCOUNT_HOLDER_UPCOMING_DEADLINE\n              - ACCOUNT_HOLDER_UPDATED\n              - ACCOUNT_HOLDER_VERIFICATION\n              - ACCOUNT_UPDATED\n              - BENEFICIARY_SETUP\n              - COMPENSATE_NEGATIVE_BALANCE\n              - DIRECT_DEBIT_INITIATED\n              - PAYMENT_FAILURE\n              - REFUND_FUNDS_TRANSFER\n              - REPORT_AVAILABLE\n              - SCHEDULED_REFUNDS\n              - TRANSFER_FUNDS\n              - TRANSFER_NOT_PAIDOUT_TRANSFERS\n            type: string\n          type: array\n        notificationId:\n          description: The ID of the notification subscription configuration to be tested.\n          format: int64\n          type: integer\n      required:\n        - notificationId\n    TestNotificationConfigurationResponse:\n      properties:\n        errorMessages:\n          description: Any error messages encountered.\n          items:\n            type: string\n          type: array\n        eventTypes:\n          description: |-\n            The event types that were tested.\n            \u003ePermitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.\n          items:\n            enum:\n              - ACCOUNT_CLOSED\n              - ACCOUNT_CREATED\n              - ACCOUNT_FUNDS_BELOW_THRESHOLD\n              - ACCOUNT_HOLDER_CREATED\n              - ACCOUNT_HOLDER_LIMIT_REACHED\n              - ACCOUNT_HOLDER_PAYOUT\n              - ACCOUNT_HOLDER_STATUS_CHANGE\n              - ACCOUNT_HOLDER_STORE_STATUS_CHANGE\n              - ACCOUNT_HOLDER_UPCOMING_DEADLINE\n              - ACCOUNT_HOLDER_UPDATED\n              - ACCOUNT_HOLDER_VERIFICATION\n              - ACCOUNT_UPDATED\n              - BENEFICIARY_SETUP\n              - COMPENSATE_NEGATIVE_BALANCE\n              - DIRECT_DEBIT_INITIATED\n              - PAYMENT_FAILURE\n              - REFUND_FUNDS_TRANSFER\n              - REPORT_AVAILABLE\n              - SCHEDULED_REFUNDS\n              - TRANSFER_FUNDS\n              - TRANSFER_NOT_PAIDOUT_TRANSFERS\n            type: string\n          type: array\n        exchangeMessages:\n          description: The notification message and related response messages.\n          items:\n            $ref: \"#/components/schemas/ExchangeMessage\"\n          type: array\n        notificationId:\n          description: The ID of the notification subscription configuration.\n          format: int64\n          type: integer\n        okMessages:\n          description: A list of messages describing the testing steps.\n          items:\n            type: string\n          type: array\n        pspReference:\n          description: The reference of a request. Can be used to uniquely identify the request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: |-\n            Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:\n            * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n            * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n          type: boolean\n      required:\n        - notificationId\n        - eventTypes\n        - okMessages\n        - exchangeMessages\n    UpdateNotificationConfigurationRequest:\n      properties:\n        configurationDetails:\n          $ref: \"#/components/schemas/NotificationConfigurationDetails\"\n          description: Details of the notification subscription configuration to be updated.\n      required:\n        - configurationDetails\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n  - General\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/adyen.com/NotificationConfigurationService/2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/adyen.com/NotificationConfigurationService/2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}