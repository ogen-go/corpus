{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PeggyJV/il-loss-charts"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "packages/server/src/docs/api.yml",
			"byteSize": 37510,
			"content": "openapi: 3.0.1\ninfo:\n    title: Sommelier Impermanent Loss App\n    description: üç∑ The Finest AMM Tools for LPs\n    version: 1.0.0\nservers:\n    - url: /api/v1\ntags:\n    - name: Uniswap\n      description: Uniswap-specific API routes.\n    - name: Sommelier\n      description: Routes for IL management via the Sommelier Protocol.\npaths:\n    /healthcheck:\n        get:\n            description: App health-check.\n            responses:\n                200:\n                    description: Returns an 'alive' message.\n    /uniswap/ethPrice:\n        get:\n            tags:\n                - Uniswap\n            description: Get the current price of ETH.\n            responses:\n                200:\n                    description: Returns the price of ETH.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: object\n                                        properties:\n                                            ethPrice:\n                                                type: string\n                                                example: '1104.306304294875977668569909674183'\n    /uniswap/pairs:\n        get:\n            tags:\n                - Uniswap\n            description: List pairs on Uniswap.\n            parameters:\n                - in: query\n                  name: count\n                  example: 100\n                  schema:\n                      type: integer\n                      minimum: 1\n                      maximum: 1000\n                  description: Number of pairs to fetch.\n            responses:\n                400:\n                    description: Invalid 'count' parameter.\n                200:\n                    description: Returns a list of pairs.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/IUniswapPair'\n    /uniswap/pairs/performance/daily:\n        get:\n            tags:\n                - Uniswap\n            description: List top performing pairs on uniswap with stats within the last 24 hours.\n            parameters:\n                - in: query\n                  name: count\n                  example: 10\n                  schema:\n                      type: integer\n                      minimum: 1\n                      maximum: 1000\n                  description: Number of pairs to fetch.\n            responses:\n                400:\n                    description: Invalid 'count' parameter.\n                404:\n                    description: No statistical data for the given timeframe. Check that the window is at least one day.\n                200:\n                    description: Returns return and impermanent loss stats for curated pairs.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/MarketStatsForPair'\n    /uniswap/pairs/performance/weekly:\n        get:\n            tags:\n                - Uniswap\n            description: List top performing pairs on uniswap with stats within the last 7 days.\n            parameters:\n                - in: query\n                  name: count\n                  example: 10\n                  schema:\n                      type: integer\n                      minimum: 1\n                      maximum: 1000\n                  description: Number of pairs to fetch.\n            responses:\n                400:\n                    description: Invalid 'count' parameter.\n                404:\n                    description: No statistical data for the given timeframe. Check that the window is at least one day.\n                200:\n                    description: Returns return and impermanent loss stats for curated pairs.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/MarketStatsForPair'\n    /uniswap/pairs/{id}:\n        get:\n            tags:\n                - Uniswap\n            description: Get details for a pair on Uniwap.\n            parameters:\n                - in: path\n                  name: id\n                  description: The contract address of the pair.\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id'.\n                404:\n                    description: Pair with given 'id' not found.\n                200:\n                    description: Returns an overview for the specified pair.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/IUniswapPair'\n    /uniswap/pairs/{id}/swaps:\n        get:\n            tags:\n                - Uniswap\n            description: Get up to 100 most recent swaps for a pair on Uniswap.\n            parameters:\n                - in: path\n                  name: id\n                  description: The contract address of the pair.\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id'.\n                404:\n                    description: No swaps found for pair with given 'id'.\n                200:\n                    description: Returns up to 100 most recent swaps for a given pair.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/UniswapSwap'\n    /uniswap/pairs/{id}/addremove:\n        get:\n            tags:\n                - Uniswap\n            description: Get up to 100 most mints or burns (liquidity changes) for a pair on Uniswap.\n            parameters:\n                - in: path\n                  name: id\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  description: The contract address of the pair.\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id'.\n                404:\n                    description: No mints or burns found for pair with given 'id'.\n                200:\n                    description: Returns up to 100 most recent mints and burns for a given pair, along with a combined list.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/UniswapMintOrBurn'\n    /uniswap/pairs/{id}/historical/daily:\n        get:\n            tags:\n                - Uniswap\n            description: Get historical daily data for a pair on Uniswap.\n            parameters:\n                - in: path\n                  name: id\n                  description: The contract address of the pair.\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  required: true\n                  schema:\n                      type: string\n                - $ref: '#/components/parameters/startDate'\n                - $ref: '#/components/parameters/endDate'\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id', 'startDate' not provided, invalid 'startDate' or 'endDate'.\n                404:\n                    description: No historical data for the given timeframe. Check that the window is at least one day.\n                200:\n                    description: Returns daily historical data in the specified window.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/UniswapDailyData'\n    /uniswap/pairs/{id}/historical/hourly:\n        get:\n            tags:\n                - Uniswap\n            description: Get historical hourly data for a pair on Uniswap.\n            parameters:\n                - in: path\n                  name: id\n                  description: The contract address of the pair.\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  required: true\n                  schema:\n                      type: string\n                - $ref: '#/components/parameters/startDate'\n                - $ref: '#/components/parameters/endDate'\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id', 'startDate' not provided, invalid 'startDate' or 'endDate'.\n                404:\n                    description: No historical data for the given timeframe. Check that the window is at least one hour.\n                200:\n                    description: Returns daily historical data in the specified window.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/UniswapHourlyData'\n    /uniswap/pairs/{id}/stats:\n        get:\n            tags:\n                - Uniswap\n                - Sommelier\n            description: Get statistics over a given time frame for an LP position.\n            parameters:\n                - in: path\n                  name: id\n                  description: The contract address of the pair.\n                  example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                  required: true\n                  schema:\n                      type: string\n                - $ref: '#/components/parameters/startDate'\n                - $ref: '#/components/parameters/endDate'\n                - in: query\n                  name: lpLiquidityUSD\n                  description: The amount of liquidity provided by the LP in USD value.\n                  required: true\n                  example: 10000\n                  schema:\n                      type: number\n                      minimum: 0\n            responses:\n                400:\n                    description: Parameter 'startDate' not provided, invalid 'startDate' or 'endDate', 'lpLiquidityUSD' not provided or not a positive integer.\n                404:\n                    description: No historical data for the given timeframe. Check that the window is at least one day.\n                200:\n                    description: Returns aggregated stats for the LP positino.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/LPStatsForPair'\n\n    /uniswap/market:\n        get:\n            tags:\n                - Uniswap\n                - Sommelier\n            description: Get an market overview of the top pairs and stats on return and impermanent loss.\n            parameters:\n                - $ref: '#/components/parameters/startDate'\n                - $ref: '#/components/parameters/endDate'\n            responses:\n                400:\n                    description: Parameter 'startDate' not provided, invalid 'startDate' or 'endDate'.\n                404:\n                    description: No statistical data for the given timeframe. Check that the window is at least one day.\n                200:\n                    description: Returns return and impermanent loss stats for top 25 pairs.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/MarketStatsForPair'\n    /uniswap/positions/{address}:\n        get:\n            tags:\n                - Uniswap\n                - Sommelier\n            description: Get a series of snapshots for each liquidity position held by the address.\n            parameters:\n                - in: path\n                  name: address\n                  description: The address of the wallet.\n                  example: '0xf0c683aec313d2e1ef2f6cf2a84214a46526556a'\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id'.\n                404:\n                    description: No liquidity positions held by the address.\n                200:\n                    description: Returns snapshots of liquidity positions organized by pair.\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: array\n                                        items:\n                                            $ref: '#/components/schemas/LiquidityPositions'\n    /uniswap/positions/{address}/stats:\n        get:\n            tags:\n                - Uniswap\n                - Sommelier\n            description: Get accumulated stats for all liquidity positinos.\n            parameters:\n                - in: path\n                  name: address\n                  description: The address of the wallet.\n                  example: '0xf0c683aec313d2e1ef2f6cf2a84214a46526556a'\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                400:\n                    description: Invalid ETH address sent for 'id'.\n                404:\n                    description: No liquidity positions held by the address.\n                200:\n                    description: Returns liquidity position snapshots along with aggregated stats\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    data:\n                                        type: object\n                                        properties:\n                                            positions:\n                                                $ref: '#/components/schemas/LiquidityPositions'\n                                            stats:\n                                                $ref: '#/components/schemas/LiquidityPositionStats'\n    /spec:\n        get:\n            tags:\n                - Specification\n            responses:\n                200:\n                    description: Returns the API specification.\n                    content: {}\ncomponents:\n    schemas:\n        UniswapToken:\n            title: Uniswap Token\n            type: object\n            required:\n                - id\n                - name\n                - symbol\n            properties:\n                __typename:\n                    type: string\n                    example: Token\n                    description: Data type of the object.\n                id:\n                    type: string\n                    example: '0xdac17f958d2ee523a2206206994597c13d831ec7'\n                    description: Contract address of the token.\n                name:\n                    type: string\n                    example: Ether\n                    description: Human-readable name of the token.\n                symbol:\n                    type: string\n                    example: ETH\n                    description: Shorthand symbol of the token.\n                derivedETH:\n                    type: string\n                    example: '0.023640897'\n                    description: The token's price in ETH.\n                totalLiquidity:\n                    type: string\n                    example: '1046965.090656394596780339'\n                    description: Total amount of liquidity for the token across all Uniwap pairs.\n                tradeVolumeUSD:\n                    type: string\n                    example: '54887716003.4390479961'\n                    description: Total USD volume of all Uniswap trades involving the token.\n        IUniswapPair:\n            title: Uniswap Pair\n            type: object\n            required:\n                - id\n                - token0\n                - token1\n                - reserveUSD\n                - volumeUSD\n            properties:\n                __typename:\n                    type: string\n                    example: Pair\n                    description: Data type of the object.\n                id:\n                    type: string\n                    example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                    description: Contract address of the pair.\n                token0:\n                    $ref: '#/components/schemas/UniswapToken'\n                token1:\n                    $ref: '#/components/schemas/UniswapToken'\n                reserve0:\n                    type: string\n                    example: '84044.673944760230451376'\n                    description: Pooled amount of the first token in the pair (token0).\n                reserve1:\n                    type: string\n                    example: '91224650.076696'\n                    description: Pooled amount of the second token in the pair (token1).\n                reserveUSD:\n                    type: string\n                    example: '182449421.13873434'\n                    description: Total combined USD value of all assets in the pool.\n                createdAtTimestamp:\n                    type: string\n                    example: '1589850429'\n                    description: Unix timestamp in seconds of the time the pair was created.\n                token0Price:\n                    type: string\n                    example: '0.00092129'\n                    description: The price of the first token (token0) in terms of the second token (token1).\n                token1Price:\n                    type: string\n                    example: '1085.4304716162612'\n                    description: The price of the secondtoken (token1) in terms of the first token (token0).\n                trackedReserveETH:\n                    type: string\n                    example: '168089.347889520460'\n                    description: Total combined ETH value of all assets in the pool.\n                txCount:\n                    type: string\n                    example: '1533912'\n                    description: Total number of all swaps that have taken place in the pool.\n                volumeUSD:\n                    type: string\n                    example: '8650290506.35372607'\n                    description: Total combined USD value of all swaps in the pool.\n                feesUSD:\n                    type: string\n                    example: '1533912'\n                    description: Total combined USD value of all fees collected by LPs in the pool.\n        UniswapSwap:\n            title: Uniswap Swap\n            type: object\n            required:\n                - amount0In\n                - amount0Out\n                - amount1In\n                - amount1Out\n                - amountUSD\n                - pair\n            properties:\n                __typename:\n                    type: string\n                    example: Swap\n                    description: Data type of the object.\n                amount0In:\n                    type: string\n                    example: '2.973727144159123666'\n                    description: Amount of token0 sent in by the taker of the swap. Must be 0 if amount0Out is non-zero.\n                amount0Out:\n                    type: string\n                    example: '0'\n                    description: Amount of token0 received by the taker of the swap. Must be 0 if amount0In is non-zero.\n                amount1In:\n                    type: string\n                    example: '0'\n                    description: Amount of token1 sent in by the taker of the swap. Must be 0 if amount1Out is non-zero.\n                amount1Out:\n                    type: string\n                    example: '3204.166136'\n                    description: Amount of token1 received by the taker of the swap. Must be 0 if amount1In is non-zero.\n                amountUSD:\n                    type: string\n                    example: '3211.612454595126670197539551826186'\n                    description: USD value of the swapped tokens.\n                pair:\n                    $ref: '#/components/schemas/IUniswapPair'\n                to:\n                    type: string\n                    example: '0x28a13140fd796a0cd5a79bb464841e6c3ad7b2cc'\n                    description: Address of the taker of the swap.\n        UniswapMintOrBurn:\n            title: Uniswap Mint Or Burn\n            type: object\n            required:\n                - amount0\n                - amount1\n                - amountUSD\n                - pair\n            properties:\n                __typename:\n                    type: string\n                    example: Mint\n                    description: Data type of the object.\n                amount0:\n                    type: string\n                    example: '0.897034644703533706'\n                    description: Amount of token0 added or removed from the pool.\n                amount1:\n                    type: string\n                    example: '969.547699'\n                    description: Amount of token1 added or removed from the pool.\n                liquidity:\n                    type: string\n                    example: '0.000021977326919678'\n                    description: Proportional change of the total liquidity in the pool.\n                pair:\n                    $ref: '#/components/schemas/IUniswapPair'\n                createdAtTimestamp:\n                    type: string\n                    example: '1610490292'\n                    description: Unix timestamp in seconds of the time liquidity was added or removed.\n                to:\n                    type: string\n                    example: '0x28a13140fd796a0cd5a79bb464841e6c3ad7b2cc'\n                    description: Address of the account adding or removing liquidity.\n        UniswapDailyData:\n            title: Uniswap Daily Historical Data\n            type: object\n            required:\n                - reserve0\n                - reserve1\n                - reserveUSD\n                - dailyVolumeToken0\n                - dailyVolumeToken1\n                - dailyVolumeUSD\n                - pairAddress\n                - date\n            properties:\n                __typename:\n                    type: string\n                    example: PairDayData\n                    description: Data type of the object.\n                date:\n                    type: number\n                    example: 1610490292\n                    description: Unix timestamp in seconds of the historical data point.\n                dailyVolumeToken0:\n                    type: string\n                    example: '73662.648903125599853115'\n                    description: Amount of token0 traded in the specified day.\n                dailyVolumeToken1:\n                    type: string\n                    example: '55582125.680062'\n                    description: Amount of token1 traded in the specified day.\n                dailyVolumeUSD:\n                    type: string\n                    example: '55607792.23757445236929244702297876'\n                    description: Combined USD equivalent of all trades in the specified day.\n                pairAddress:\n                    type: string\n                    example: '0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852'\n                    description: Contract address of the pair.\n                reserve0:\n                    type: string\n                    example: '102730.915624946031625317'\n                    description: Amount of token0 in the pool at the specified data point.\n                reserve1:\n                    type: string\n                    example: '79614298.470066'\n                    description: Amount of token1 in the pool at the specified data point.\n                reserveUSD:\n                    type: string\n                    example: '159297546.6358876653702590148554321'\n                    description: Total combined USD value of all assets in the pool at the specified data point.\n        UniswapHourlyData:\n            title: Uniswap Hourly Historical Data\n            type: object\n            required:\n                - reserve0\n                - reserve1\n                - reserveUSD\n                - dailyVolumeToken0\n                - dailyVolumeToken1\n                - dailyVolumeUSD\n                - pairAddress\n                - date\n            properties:\n                __typename:\n                    type: string\n                    example: PairHourData\n                    description: Data type of the object.\n                hourStartUnix:\n                    type: number\n                    example: 1610490292\n                    description: Unix timestamp in seconds of the historical data point.\n                hourlyVolumeToken0:\n                    type: string\n                    example: '73662.648903125599853115'\n                    description: Amount of token0 traded in the specified hour.\n                hourlyVolumeToken1:\n                    type: string\n                    example: '55582125.680062'\n                    description: Amount of token1 traded in the specified hour.\n                hourlyVolumeUSD:\n                    type: string\n                    example: '55607792.23757445236929244702297876'\n                    description: Combined USD equivalent of all trades in the specified hour.\n                pair:\n                    $ref: '#/components/schemas/IUniswapPair'\n                reserve0:\n                    type: string\n                    example: '102730.915624946031625317'\n                    description: Amount of token0 in the pool at the specified data point.\n                reserve1:\n                    type: string\n                    example: '79614298.470066'\n                    description: Amount of token1 in the pool at the specified data point.\n                reserveUSD:\n                    type: string\n                    example: '159297546.6358876653702590148554321'\n                    description: Total combined USD value of all assets in the pool at the specified data point.\n        MarketStatsForPair:\n            title: Overall Market Stats for Uniswap Pair\n            allOf:\n                - $ref: '#/components/schemas/IUniswapPair'\n                - $ref: '#/components/schemas/MarketStatsCalculations'\n        MarketStatsCalculations:\n            type: object\n            required:\n                - ilGross\n                - market\n                - impermanentLoss\n                - volume\n                - liquidity\n                - returnsUSD\n                - returnsETH\n                - pctReturn\n            properties:\n                market:\n                    type: string\n                    example: WETH/USDT\n                    description: Human-readable identifier for the given pair.\n                ilGross:\n                    type: number\n                    example: -44509.65711213385\n                    description: Total USD amount lost to impermanent loss over the specified window.\n                impermanentLoss:\n                    type: number\n                    example: -0.011264443091660366\n                    description: Total impermanent loss as a proportion of the total liquidity in the pool on the start date.\n                volume:\n                    type: number\n                    example: 1317113708.354692\n                    description: Combined USD value equivalent of all trades over the specified window.\n                liquidity:\n                    type: number\n                    example: 180327107.35797074\n                    description: Current USD liquidity of the pool.\n                returnsUSD:\n                    type: number\n                    example: 3951341.113799633\n                    description: Total USD return of the pool (fees minus impermanent loss).\n                returnsETH:\n                    type: number\n                    example: 3769.983763773433\n                    description: Total ETH return of the pool (fees minus impermanent loss).\n                pctReturn:\n                    type: number\n                    example: 0.02191207507119687\n                    description: Total USD return of the pool as a proportion of the total liquidity at the start date.\n        LPStatsForPair:\n            title: Uniswap LP Stats for Pair\n            type: object\n            required:\n                - totalFees\n                - runningVolume\n                - runningFees\n                - runningImpermanentLoss\n                - runningReturn\n                - impermanentLoss\n                - totalReturn\n                - days\n            properties:\n                totalFees:\n                    type: string\n                    example: '214.2334725474978266656280801822323365789780133528398'\n                    description: The amount of fees earned by the LP position over the specified window.\n                impermanentLoss:\n                    type: string\n                    example: '-102.5877814053683369'\n                    description: The amount of impermanent loss due to price movement by the LP position over the specified window.\n                totalReturn:\n                    type: string\n                    example: '214.2334725474978266656280801822323365789780133528398'\n                    description: The total return of the LP position over the specified window, equal to fees minus impermanent loss.\n                days:\n                    type: array\n                    description: Array of days for which stats were calculated.\n                    items:\n                        type: string\n                        example: Jan 1\n                runningVolume:\n                    type: array\n                    description: Array of aggregate volume statistics over the specified window.\n                    items:\n                        type: string\n                        example: Jan 1\n                runningFees:\n                    type: array\n                    description: Array of aggregate fees collected by the LP over the specified window.\n                    items:\n                        type: string\n                        example: '18.8234558048299214697440627877520042079675433441'\n                runningImpermanentLoss:\n                    type: array\n                    description: Array of impermanent loss data points over the specified window.\n                    items:\n                        type: string\n                        example: '-65.9390564701701204'\n                runningReturn:\n                    type: array\n                    description: Array of total return data points given the LP position over the specified window.\n                    items:\n                        type: string\n                        example: '-47.1156006653401989302559372122479957920324566559'\n        LiquidityPositions:\n            title: Uniswap Liquidity Positions\n            type: object\n            additionalProperties:\n                $ref: '#/components/schemas/LiquidityPositionSnapshot'\n        LiquidityPositionSnapshot:\n            title: Uniswap Liquidity Position for Pair\n            type: object\n            required:\n                - liquidityTokenBalance\n                - liquidityTokenTotalSupply\n                - pair\n                - timestamp\n            properties:\n                id:\n                    type: string\n                    example: '0x3041cbd36888becc7bbcbc0045e3b1f144466f5f-0xf0c683aec313d2e1ef2f6cf2a84214a46526556a1610764899'\n                    description: A unique identifier for the liquidity position snapshot, in the format {pairId}-{walletAddress}{timestamp}.\n                liquidityPosition:\n                    type: object\n                    properties:\n                        id:\n                            type: string\n                            example: '0x3041cbd36888becc7bbcbc0045e3b1f144466f5f-0xf0c683aec313d2e1ef2f6cf2a84214a46526556a'\n                            description: A unique identifier for the liquidity position, in the format {pairId}-{walletAddress}.\n                        liquidityTokenBalance:\n                            type: string\n                            example: '0.000000000044131501'\n                            description: The amount of LP tokens held by the address.\n                liquidityTokenBalance:\n                    type: string\n                    example: '0.000000000044131501'\n                    description: The amount of LP tokens held by the address.\n                liquidityTokenTotalSupply:\n                    type: string\n                    example: '0.000014792742175772'\n                    description: The total amount of LP tokens held by all LPs in the pool.\n                pair:\n                    $ref: '#/components/schemas/IUniswapPair'\n                reserve0:\n                    type: string\n                    example: '102730.915624946031625317'\n                    description: Amount of token0 in the pool at the time of the snapshot.\n                reserve1:\n                    type: string\n                    example: '79614298.470066'\n                    description: Amount of token1 in the pool at the time of the snapshot.\n                timestamp:\n                    type: number\n                    example: 1610781226\n                    description: The timestamp of the snapshot.\n        LiquidityPositionStats:\n            title: Uniswap Liquidity Position Statistics\n            type: object\n            additionalProperties:\n                type: object\n                required:\n                    - historicalData\n                    - statsWindows\n                    - aggregatedStats\n                properties:\n                    historicalData:\n                        $ref: '#/components/schemas/UniswapDailyData'\n                    statsWindows:\n                        type: array\n                        items:\n                            $ref: '#/components/schemas/LPStatsForPair'\n                    aggregatedStats:\n                        $ref: '#/components/schemas/LPStatsForPair'\n\n    parameters:\n        startDate:\n            in: query\n            name: startDate\n            description: The start date for the market stats window, in YYYY-MM-DD format.\n            example: '2021-01-01'\n            allowReserved: true\n            required: true\n            schema:\n                type: string\n        endDate:\n            in: query\n            name: endDate\n            description: The end date for the historical data window, in YYYY-MM-DD format. Defaults to present.\n            example: '2021-01-07'\n            allowReserved: true\n            schema:\n                type: string\n",
			"canonicalURL": "/github.com/PeggyJV/il-loss-charts@c6e7c090fd4dd4f6d14a014c1b287cf8d8f5339c/-/blob/packages/server/src/docs/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/PeggyJV/il-loss-charts/blob/c6e7c090fd4dd4f6d14a014c1b287cf8d8f5339c/packages/server/src/docs/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}