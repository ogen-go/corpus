{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radixdlt/babylon-pte"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "pte-api-spec/api.yaml",
			"byteSize": 10690,
			"content": "openapi: 3.0.0\ninfo:\n  title: Babylon PTE API\n  description: Babylon Public Test Environment (PTE) API specification.\n  version: 0.1.22\nservers:\n  - url: https://pte01.radixdlt.com/\npaths:\n  /packages:\n    get:\n      summary: List all packages\n      operationId: listPackages\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /components:\n    get:\n      summary: List all components\n      operationId: listComponents\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /resources:\n    get:\n      summary: List all resources\n      operationId: listResources\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /component/{address}:\n    get:\n      summary: Get info about a component\n      operationId: getComponent\n      parameters:\n        - name: address\n          description: The component address\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Component\"\n        \"404\":\n          description: Component not found\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /resource/{address}:\n    get:\n      summary: Get info about a resource\n      operationId: getResource\n      parameters:\n        - name: address\n          description: The resource address\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Resource\"\n        \"404\":\n          description: Resource not found\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /non-fungible/{address}:\n    get:\n      summary: Get info about a specific non-fungible unit\n      operationId: getNonFungible\n      parameters:\n        - name: address\n          description: The non-fungible address\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NonFungible\"\n        \"404\":\n          description: Non-fungible not found\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /nonce:\n    get:\n      summary: Get the nonce of a signer set\n      operationId: getNonce\n      parameters:\n        - in: query\n          name: signers\n          description: The signer public keys\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Nonce\"\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /epoch:\n    get:\n      summary: Get the current epoch\n      operationId: getEpoch\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Epoch\"\n  /receipt/{hash}:\n    get:\n      summary: Retrieve a receipt\n      operationId: getReceipt\n      parameters:\n        - name: hash\n          description: The transaction hash\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Receipt\"\n        \"404\":\n          description: Receipt not found\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /transaction/{hash}:\n    get:\n      summary: Retrieve a transaction\n      operationId: getTransaction\n      parameters:\n        - name: hash\n          description: The transaction hash\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"404\":\n          description: Transaction not found\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\n  /transaction:\n    post:\n      summary: Execute a signed transaction\n      operationId: submitTransaction\n      requestBody:\n        description: The transaction payload in hex.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Transaction\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Receipt\"\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequest\"\ncomponents:\n  schemas:\n    BadRequest:\n      type: object\n      properties:\n        status:\n          type: string\n        reason:\n          type: string\n      required:\n        - status\n        - reason\n    AnyValue:\n      type: string\n    Signature:\n      type: object\n      properties:\n        public_key:\n          type: string\n        signature:\n          type: string\n      required:\n        - public_key\n        - signature\n    Nonce:\n      type: object\n      properties:\n        value:\n          type: integer\n          format: int64\n      required:\n        - value\n    Epoch:\n      type: object\n      properties:\n        epoch:\n          type: integer\n          format: int64\n      required:\n        - epoch\n    Transaction:\n      type: object\n      properties:\n        manifest:\n          type: string\n        nonce:\n          $ref: \"#/components/schemas/Nonce\"\n        signatures:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Signature\"\n      required:\n        - hash\n        - manifest\n        - nonce\n        - signatures\n    Receipt:\n      type: object\n      properties:\n        transaction_hash:\n          type: string\n        status:\n          type: string\n        outputs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AnyValue\"\n        logs:\n          type: array\n          items:\n            type: string\n        new_packages:\n          type: array\n          items:\n            type: string\n        new_components:\n          type: array\n          items:\n            type: string\n        new_resources:\n          type: array\n          items:\n            type: string\n      required:\n        - transaction_hash\n        - status\n        - outputs\n        - logs\n        - new_packages\n        - new_components\n        - new_resources\n    OwnedResource:\n      type: object\n      properties:\n        amount:\n          type: string\n        resource_address:\n          type: string\n        name:\n          type: string\n        symbol:\n          type: string\n        non_fungible_ids:\n          type: array\n          items:\n            type: string\n      required:\n        - amount\n        - resource_address\n        - name\n        - symbol\n    MethodRule:\n      type: object\n      properties:\n        name:\n          type: string\n        rule:\n          $ref: \"#/components/schemas/AnyValue\"\n      required:\n        - name\n        - rule\n    AccessRules:\n      type: object\n      properties:\n        default_rule:\n          $ref: \"#/components/schemas/AnyValue\"\n        method_rules:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MethodRule\"\n      required:\n        - default_rule\n        - method_rules\n    Component:\n      type: object\n      properties:\n        blueprint:\n          type: object\n          properties:\n            package_address:\n              type: string\n            blueprint_name:\n              type: string\n          required:\n            - package_address\n            - blueprint_name\n        access_checks:\n          type: array\n          description: A component is associated with a chain of access checks, each configured by a `AccessRules`.\n          items:\n            $ref: \"#/components/schemas/AccessRules\"\n        state:\n          $ref: \"#/components/schemas/AnyValue\"\n        owned_resources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OwnedResource\"\n      required:\n        - blueprint\n        - access_checks\n        - state\n        - owned_resources\n    Resource:\n      type: object\n      properties:\n        resource_type:\n          type: string\n        divisibility:\n          type: integer\n        metadata:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              value:\n                type: string\n            required:\n              - name\n              - value\n        total_supply:\n          type: string\n      required:\n        - resource_type\n        - divisibility\n        - metadata\n        - total_supply\n    NonFungible:\n      type: object\n      properties:\n        resource_address:\n          type: string\n        immutable_data:\n          $ref: \"#/components/schemas/AnyValue\"\n        mutable_data:\n          $ref: \"#/components/schemas/AnyValue\"\n      required:\n        - resource_address\n        - immutable_data\n        - mutable_data\n\n",
			"canonicalURL": "/github.com/radixdlt/babylon-pte@49db97d4d01fec903a58615469dfca0c0d8373b4/-/blob/pte-api-spec/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/radixdlt/babylon-pte/blob/49db97d4d01fec903a58615469dfca0c0d8373b4/pte-api-spec/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}