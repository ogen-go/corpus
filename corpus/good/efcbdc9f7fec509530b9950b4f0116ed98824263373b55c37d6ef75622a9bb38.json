{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "cloudmersive.com-ocr-v1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/cloudmersive.com-ocr-v1-swagger.yaml",
			"byteSize": 52159,
			"content": "openapi: 3.0.0\ninfo:\n  description: The powerful Optical Character Recognition (OCR) APIs let you convert\n    scanned images of pages into recognized text.\n  title: ocrapi\n  version: v1\n  x-apisguru-categories:\n    - text\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://cloudmersive.com/images/servers.jpeg\n  x-origin:\n    - format: swagger\n      url: https://api.cloudmersive.com/ocr/docs/v1/swagger\n      version: \"2.0\"\n  x-providerName: cloudmersive.com\n  x-serviceName: ocr\npaths:\n  /ocr/image/to/lines-with-location:\n    post:\n      description: Converts an uploaded image in common formats such as JPEG, PNG into\n        lines/text with location information and other metdata via Optical\n        Character Recognition.  This API is intended to be run on scanned\n        documents.  If you want to OCR photos (e.g. taken with a smart phone\n        camera), be sure to use the photo/toText API instead, as it is designed\n        to unskew the image first.\n      operationId: ImageOcr_ImageLinesWithLocation\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToLinesWithLocationResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToLinesWithLocationResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToLinesWithLocationResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToLinesWithLocationResult\"\n      security:\n        - Apikey: []\n      summary: Convert a scanned image into words with location\n      tags:\n        - ImageOcr\n  /ocr/image/to/words-with-location:\n    post:\n      description: Converts an uploaded image in common formats such as JPEG, PNG into\n        words/text with location information and other metdata via Optical\n        Character Recognition.  This API is intended to be run on scanned\n        documents.  If you want to OCR photos (e.g. taken with a smart phone\n        camera), be sure to use the photo/toText API instead, as it is designed\n        to unskew the image first.\n      operationId: ImageOcr_ImageWordsWithLocation\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToWordsWithLocationResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToWordsWithLocationResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToWordsWithLocationResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToWordsWithLocationResult\"\n      security:\n        - Apikey: []\n      summary: Convert a scanned image into words with location\n      tags:\n        - ImageOcr\n  /ocr/image/toText:\n    post:\n      description: Converts an uploaded image in common formats such as JPEG, PNG into text\n        via Optical Character Recognition.  This API is intended to be run on\n        scanned documents.  If you want to OCR photos (e.g. taken with a smart\n        phone camera), be sure to use the photo/toText API instead, as it is\n        designed to unskew the image first.\n      operationId: ImageOcr_Post\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n      security:\n        - Apikey: []\n      summary: Convert a scanned image into text\n      tags:\n        - ImageOcr\n  /ocr/pdf/to/lines-with-location:\n    post:\n      description: Converts a PDF into lines/text with location information and other\n        metdata via Optical Character Recognition.  This API is intended to be\n        run on scanned documents.  If you want to OCR photos (e.g. taken with a\n        smart phone camera), be sure to use the photo/toText API instead, as it\n        is designed to unskew the image first.\n      operationId: PdfOcr_PdfToLinesWithLocation\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PdfOcr_PdfToLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToLinesWithLocationResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToLinesWithLocationResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToLinesWithLocationResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToLinesWithLocationResult\"\n      security:\n        - Apikey: []\n      summary: Convert a PDF into text lines with location\n      tags:\n        - PdfOcr\n  /ocr/pdf/to/words-with-location:\n    post:\n      description: Converts a PDF into words/text with location information and other\n        metdata via Optical Character Recognition.  This API is intended to be\n        run on scanned documents.  If you want to OCR photos (e.g. taken with a\n        smart phone camera), be sure to use the photo/toText API instead, as it\n        is designed to unskew the image first.\n      operationId: PdfOcr_PdfToWordsWithLocation\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PdfOcr_PdfToLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToWordsWithLocationResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToWordsWithLocationResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToWordsWithLocationResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToWordsWithLocationResult\"\n      security:\n        - Apikey: []\n      summary: Convert a PDF into words with location\n      tags:\n        - PdfOcr\n  /ocr/pdf/toText:\n    post:\n      operationId: PdfOcr_Post\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PdfOcr_PdfToLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToTextResponse\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PdfToTextResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToTextResponse\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PdfToTextResponse\"\n      security:\n        - Apikey: []\n      summary: Converts an uploaded PDF file into text via Optical Character\n        Recognition.\n      tags:\n        - PdfOcr\n  /ocr/photo/recognize/business-card:\n    post:\n      description: Analyzes a photograph of a business card as input, and outputs key\n        business information such as the name of the person, name of the\n        business, the address of the business, the phone number, the email\n        address and more.\n      operationId: ImageOcr_PhotoRecognizeBusinessCard\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BusinessCardRecognitionResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BusinessCardRecognitionResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BusinessCardRecognitionResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BusinessCardRecognitionResult\"\n      security:\n        - Apikey: []\n      summary: Recognize a photo of a business card, extract key business information\n      tags:\n        - ImageOcr\n  /ocr/photo/recognize/receipt:\n    post:\n      description: Analyzes a photograph of a receipt as input, and outputs key business\n        information such as the name of the business, the address of the\n        business, the phone number of the business, the total of the receipt,\n        the date of the receipt, and more.\n      operationId: ImageOcr_PhotoRecognizeReceipt\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReceiptRecognitionResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ReceiptRecognitionResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptRecognitionResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ReceiptRecognitionResult\"\n      security:\n        - Apikey: []\n      summary: Recognize a photo of a receipt, extract key business information\n      tags:\n        - ImageOcr\n  /ocr/photo/to/words-with-location:\n    post:\n      description: Converts a photo of a document or receipt in common formats such as\n        JPEG, PNG into words/text with location information and other metdata\n        via Optical Character Recognition.  This API is intended to be run on\n        photographs of documents.  If you want to OCR scanned documents (e.g.\n        taken with a scanner), be sure to use the image/toText API instead, as\n        it is designed for that use case.\n      operationId: ImageOcr_PhotoWordsWithLocation\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Optional, preprocessing mode, default is 'Auto'.  Possible values\n            are None (no preprocessing of the image), and Auto (automatic image\n            enhancement of the image before OCR is applied; this is\n            recommended).\n          in: header\n          name: preprocessing\n          required: false\n          schema:\n            type: string\n        - description: Optional, diagnostics mode, default is 'false'.  Possible values are\n            'true' (will set DiagnosticImage to a diagnostic PNG image in the\n            result), and 'false' (no diagnostics are enabled; this is\n            recommended for best performance).\n          in: header\n          name: diagnostics\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoToWordsWithLocationResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoToWordsWithLocationResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoToWordsWithLocationResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoToWordsWithLocationResult\"\n      security:\n        - Apikey: []\n      summary: Convert a photo of a document or receipt into words with location\n      tags:\n        - ImageOcr\n  /ocr/photo/toText:\n    post:\n      description: Converts an uploaded photo of a document in common formats such as JPEG,\n        PNG into text via Optical Character Recognition.  This API is intended\n        to be run on photos of documents, e.g. taken with a smartphone and\n        supports cases where other content, such as a desk, are in the frame and\n        the camera is crooked.  If you want to OCR a scanned image, use the\n        image/toText API call instead as it is designed for scanned images.\n      operationId: ImageOcr_PhotoToText\n      parameters:\n        - description: Optional, language of the input document, default is English\n            (ENG).  Possible values are ENG (English), ARA (Arabic), ZHO\n            (Chinese - Simplified), ZHO-HANT (Chinese - Traditional), ASM\n            (Assamese), AFR (Afrikaans), AMH (Amharic), AZE (Azerbaijani),\n            AZE-CYRL (Azerbaijani - Cyrillic), BEL (Belarusian), BEN (Bengali),\n            BOD (Tibetan), BOS (Bosnian), BUL (Bulgarian), CAT (Catalan;\n            Valencian), CEB (Cebuano), CES (Czech), CHR (Cherokee), CYM (Welsh),\n            DAN (Danish), DEU (German), DZO (Dzongkha), ELL (Greek), ENM\n            (Archaic/Middle English), EPO (Esperanto), EST (Estonian), EUS\n            (Basque), FAS (Persian), FIN (Finnish), FRA (French), FRK\n            (Frankish), FRM (Middle-French), GLE (Irish), GLG (Galician), GRC\n            (Ancient Greek), HAT (Hatian), HEB (Hebrew), HIN (Hindi), HRV\n            (Croatian), HUN (Hungarian), IKU (Inuktitut), IND (Indonesian), ISL\n            (Icelandic), ITA (Italian), ITA-OLD (Old - Italian), JAV (Javanese),\n            JPN (Japanese), KAN (Kannada), KAT (Georgian), KAT-OLD\n            (Old-Georgian), KAZ (Kazakh), KHM (Central Khmer), KIR (Kirghiz),\n            KOR (Korean), KUR (Kurdish), LAO (Lao), LAT (Latin), LAV (Latvian),\n            LIT (Lithuanian), MAL (Malayalam), MAR (Marathi), MKD (Macedonian),\n            MLT (Maltese), MSA (Malay), MYA (Burmese), NEP (Nepali), NLD\n            (Dutch), NOR (Norwegian), ORI (Oriya), PAN (Panjabi), POL (Polish),\n            POR (Portuguese), PUS (Pushto), RON (Romanian), RUS (Russian), SAN\n            (Sanskrit), SIN (Sinhala), SLK (Slovak), SLV (Slovenian), SPA\n            (Spanish), SPA-OLD (Old Spanish), SQI (Albanian), SRP (Serbian),\n            SRP-LAT (Latin Serbian), SWA (Swahili), SWE (Swedish), SYR (Syriac),\n            TAM (Tamil), TEL (Telugu), TGK (Tajik), TGL (Tagalog), THA (Thai),\n            TIR (Tigrinya), TUR (Turkish), UIG (Uighur), UKR (Ukrainian), URD\n            (Urdu), UZB (Uzbek), UZB-CYR (Cyrillic Uzbek), VIE (Vietnamese), YID\n            (Yiddish)\n          in: header\n          name: language\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ImageToTextResponse\"\n      security:\n        - Apikey: []\n      summary: Convert a photo of a document into text\n      tags:\n        - ImageOcr\n  /ocr/preprocessing/image/binarize:\n    post:\n      description: Perform an adaptive binarization algorithm on the input image to prepare\n        it for further OCR operations.\n      operationId: Preprocessing_Binarize\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                format: byte\n                type: string\n            text/json:\n              schema:\n                format: byte\n                type: string\n            application/xml:\n              schema:\n                format: byte\n                type: string\n            text/xml:\n              schema:\n                format: byte\n                type: string\n      security:\n        - Apikey: []\n      summary: Convert an image of text into a binarized (light and dark) view\n      tags:\n        - Preprocessing\n  /ocr/preprocessing/image/binarize/advanced:\n    post:\n      description: Perform an advanced adaptive, Deep Learning-based binarization algorithm\n        on the input image to prepare it for further OCR operations.  Provides\n        enhanced accuracy than adaptive binarization.  Image will be upsampled\n        to 300 DPI if it has a DPI below 300.\n      operationId: Preprocessing_BinarizeAdvanced\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                format: byte\n                type: string\n            text/json:\n              schema:\n                format: byte\n                type: string\n            application/xml:\n              schema:\n                format: byte\n                type: string\n            text/xml:\n              schema:\n                format: byte\n                type: string\n      security:\n        - Apikey: []\n      summary: Convert an image of text into a binary (light and dark) view with ML\n      tags:\n        - Preprocessing\n  /ocr/preprocessing/image/get-page-angle:\n    post:\n      description: Analyzes a photo or image of a document and identifies the rotation\n        angle of the page.\n      operationId: Preprocessing_GetPageAngle\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPageAngleResult\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/GetPageAngleResult\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/GetPageAngleResult\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetPageAngleResult\"\n      security:\n        - Apikey: []\n      summary: Get the angle of the page / document / receipt\n      tags:\n        - Preprocessing\n  /ocr/preprocessing/image/unrotate:\n    post:\n      description: Detect and unrotate an image of a document (e.g. that was scanned at an\n        angle).  Great for document scanning applications; once unskewed, this\n        image is perfect for converting to PDF using the Convert API or optical\n        character recognition using the OCR API.\n      operationId: Preprocessing_Unrotate\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                format: byte\n                type: string\n            text/json:\n              schema:\n                format: byte\n                type: string\n            application/xml:\n              schema:\n                format: byte\n                type: string\n            text/xml:\n              schema:\n                format: byte\n                type: string\n      security:\n        - Apikey: []\n      summary: Detect and unrotate a document image\n      tags:\n        - Preprocessing\n  /ocr/preprocessing/image/unskew:\n    post:\n      description: Detect and unskew a photo of a document (e.g. taken on a cell phone)\n        into a perfectly square image.  Great for document scanning\n        applications; once unskewed, this image is perfect for converting to PDF\n        using the Convert API or optical character recognition using the OCR\n        API.\n      operationId: Preprocessing_Unskew\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                format: byte\n                type: string\n            text/json:\n              schema:\n                format: byte\n                type: string\n            application/xml:\n              schema:\n                format: byte\n                type: string\n            text/xml:\n              schema:\n                format: byte\n                type: string\n      security:\n        - Apikey: []\n      summary: Detect and unskew a photo of a document\n      tags:\n        - Preprocessing\n  /ocr/receipts/photo/to/csv:\n    post:\n      deprecated: true\n      description: Leverage Deep Learning to automatically turn a photo of a receipt into a\n        CSV file containing the structured information from the receipt.\n      operationId: Receipts_PhotoToCSV\n      requestBody:\n        $ref: \"#/components/requestBodies/ImageOcr_ImageLinesWithLocation\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            application/xml:\n              schema:\n                type: object\n            text/xml:\n              schema:\n                type: object\n      security:\n        - Apikey: []\n      summary: Convert a photo of a receipt into a CSV file containing structured\n        information from the receipt\n      tags:\n        - Receipts\nservers:\n  - url: https://api.cloudmersive.com\ncomponents:\n  requestBodies:\n    ImageOcr_ImageLinesWithLocation:\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            properties:\n              imageFile:\n                description: Image file to perform OCR on.  Common file formats such as\n                  PNG, JPEG are supported.\n                type: string\n                format: binary\n            required:\n              - imageFile\n    PdfOcr_PdfToLinesWithLocation:\n      content:\n        multipart/form-data:\n          schema:\n            type: object\n            properties:\n              imageFile:\n                description: PDF file to perform OCR on.\n                type: string\n                format: binary\n            required:\n              - imageFile\n  securitySchemes:\n    Apikey:\n      description: API Key Authentication\n      in: header\n      name: Apikey\n      type: apiKey\n  schemas:\n    BusinessCardRecognitionResult:\n      description: Result of recognizing a business card, to extract the key information\n        from the business card\n      properties:\n        AddressString:\n          type: string\n        BusinessName:\n          type: string\n        EmailAddress:\n          type: string\n        PersonName:\n          type: string\n        PersonTitle:\n          type: string\n        PhoneNumber:\n          type: string\n        Successful:\n          type: boolean\n        Timestamp:\n          format: date-time\n          type: string\n      type: object\n    GetPageAngleResult:\n      description: Result of performing a get-page-angle operation\n      properties:\n        Angle:\n          description: Angle of the page in radians; 0 represents perfectly horizontal\n          format: double\n          type: number\n        Successful:\n          description: True if the operation was successful, false otherwise\n          type: boolean\n      type: object\n    ImageToLinesWithLocationResult:\n      description: Result of an image to lines-with-location OCR operation\n      properties:\n        Lines:\n          description: Words in the image\n          items:\n            $ref: \"#/components/schemas/OcrLineElement\"\n          type: array\n        Successful:\n          type: boolean\n      type: object\n    ImageToTextResponse:\n      description: Response from an OCR to text operation.  Includes the confience rating\n        and converted text result.\n      properties:\n        MeanConfidenceLevel:\n          description: Confidence level rating of the OCR operation; ratings above 80% are\n            strong.\n          format: float\n          type: number\n        TextResult:\n          description: Converted text string from the image input.\n          type: string\n      type: object\n    ImageToWordsWithLocationResult:\n      description: Result of an image to words-with-location OCR operation\n      properties:\n        Successful:\n          type: boolean\n        Words:\n          description: Word elements in the image\n          items:\n            $ref: \"#/components/schemas/OcrWordElement\"\n          type: array\n      type: object\n    OcrLineElement:\n      description: A contiguous line of text in an OCR document\n      properties:\n        LineText:\n          description: Text of the line\n          type: string\n        Words:\n          description: Word objects in the line\n          items:\n            $ref: \"#/components/schemas/OcrWordElement\"\n          type: array\n      type: object\n    OcrPageResult:\n      properties:\n        MeanConfidenceLevel:\n          description: Confidence level rating of the OCR operation; ratings above 80% are\n            strong.\n          format: float\n          type: number\n        PageNumber:\n          description: Page number of the page that was OCR-ed, starting with 1 for the\n            first page in the PDF file\n          format: int32\n          type: integer\n        TextResult:\n          description: Converted text string from the image input.\n          type: string\n      type: object\n    OcrPageResultWithLinesWithLocation:\n      description: OCR results of a page, including lines of text and their location\n      properties:\n        Lines:\n          description: Word elements in the image\n          items:\n            $ref: \"#/components/schemas/OcrLineElement\"\n          type: array\n        PageNumber:\n          description: Page number of the page that was OCR-ed, starting with 1 for the\n            first page in the PDF file\n          format: int32\n          type: integer\n        Successful:\n          type: boolean\n      type: object\n    OcrPageResultWithWordsWithLocation:\n      description: OCR results of a page, including words of text and their location\n      properties:\n        PageNumber:\n          description: Page number of the page that was OCR-ed, starting with 1 for the\n            first page in the PDF file\n          format: int32\n          type: integer\n        Successful:\n          type: boolean\n        Words:\n          description: Word elements in the image\n          items:\n            $ref: \"#/components/schemas/OcrWordElement\"\n          type: array\n      type: object\n    OcrPhotoTextElement:\n      description: A single text in an OCR document\n      properties:\n        ConfidenceLevel:\n          description: Confidence level of the machine learning result; possible values are\n            0.0 (lowest accuracy) - 1.0 (highest accuracy)\n          format: double\n          type: number\n        Height:\n          description: Height of the word in pixels\n          format: int32\n          type: integer\n        Text:\n          description: Text of the word\n          type: string\n        Width:\n          description: Width of the word in pixels\n          format: int32\n          type: integer\n        XLeft:\n          description: X location of the left edge of the word in pixels\n          format: int32\n          type: integer\n        YTop:\n          description: Y location of the top edge of the word in pixels\n          format: int32\n          type: integer\n      type: object\n    OcrWordElement:\n      description: A single word in an OCR document\n      properties:\n        BlockNumber:\n          description: Index of the containing block\n          format: int32\n          type: integer\n        ConfidenceLevel:\n          description: Confidence level of the machine learning result; possible values are\n            0.0 (lowest accuracy) - 1.0 (highest accuracy)\n          format: double\n          type: number\n        Height:\n          description: Height of the word in pixels\n          format: int32\n          type: integer\n        LineNumber:\n          description: Line number of the word\n          format: int32\n          type: integer\n        PageNumber:\n          description: Index of the containing page\n          format: int32\n          type: integer\n        ParagraphNumber:\n          description: Index of the containing paragraph\n          format: int32\n          type: integer\n        Width:\n          description: Width of the word in pixels\n          format: int32\n          type: integer\n        WordNumber:\n          description: Index of the word in the line\n          format: int32\n          type: integer\n        WordText:\n          description: Text of the word\n          type: string\n        XLeft:\n          description: X location of the left edge of the word in pixels\n          format: int32\n          type: integer\n        YTop:\n          description: Y location of the top edge of the word in pixels\n          format: int32\n          type: integer\n      type: object\n    PdfToLinesWithLocationResult:\n      description: Response from an OCR to lines with location operation.  Includes the\n        confience rating and converted text result, along with the locations of\n        the lines in the pages.\n      properties:\n        OcrPages:\n          items:\n            $ref: \"#/components/schemas/OcrPageResultWithLinesWithLocation\"\n          type: array\n        Successful:\n          type: boolean\n      type: object\n    PdfToTextResponse:\n      description: Response from an OCR to text operation.  Includes the confidence rating\n        and converted text result.\n      properties:\n        OcrPages:\n          items:\n            $ref: \"#/components/schemas/OcrPageResult\"\n          type: array\n        Successful:\n          type: boolean\n      type: object\n    PdfToWordsWithLocationResult:\n      description: Response from an OCR to words with location operation.  Includes the\n        confience rating and converted text result, along with the locations of\n        the words in the pages.\n      properties:\n        OcrPages:\n          items:\n            $ref: \"#/components/schemas/OcrPageResultWithWordsWithLocation\"\n          type: array\n        Successful:\n          type: boolean\n      type: object\n    PhotoToWordsWithLocationResult:\n      description: Result of an photo to words-with-location OCR operation\n      properties:\n        DiagnosticImage:\n          description: Typically null.  To analyze OCR performance, enable diagnostic mode\n            by adding the HTTP header \"DiagnosticMode\" with the value\n            \"true\".  When this is true, a diagnostic image showing the details\n            of the OCR result will be set in PNG format into DiagnosticImage.\n          format: byte\n          type: string\n        Successful:\n          type: boolean\n        TextElements:\n          description: Word elements in the image\n          items:\n            $ref: \"#/components/schemas/OcrPhotoTextElement\"\n          type: array\n      type: object\n    ReceiptRecognitionResult:\n      description: Result of recognizing a receipt, to extract the key information from the\n        receipt\n      properties:\n        AddressString:\n          type: string\n        BusinessName:\n          type: string\n        PhoneNumber:\n          type: string\n        ReceiptTotal:\n          format: double\n          type: number\n        Successful:\n          type: boolean\n        Timestamp:\n          format: date-time\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/cloudmersive.com-ocr-v1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/cloudmersive.com-ocr-v1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}