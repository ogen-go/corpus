{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "boat-maven-plugin/src/it/example/boat-artifact-input/openapi-specs/openapi-zips/src/main/resources/presentation-service-api/openapi.yaml",
			"byteSize": 33382,
			"content": "openapi: 3.0.3\ninfo:\n  title: Wallet Test Service API\n  description: No description available\n  version: 2.19.0\nservers:\n- url: /artifact-service/\n  description: The server\ntags:\n- name: wallet test service api\npaths:\n  /service-api/v1/wallet/admin/{userId}/paymentcards:\n    summary: Payment Cards\n    description: No description available\n    get:\n      tags:\n      - wallet\n      summary: \"Returns available payment card details for user, optionally filtered\\\n        \\ by nameOnCard.\"\n      description: \"Returns available payment card details for user, optionally filtered\\\n        \\ by nameOnCard\"\n      operationId: getPaymentCards\n      parameters:\n      - name: nameOnCard\n        in: query\n        description: \"Filter by the cardholder's name (case-insensitive), can be the\\\n          \\ first one or more characters of one of the words/names\"\n        required: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n            value: Smi\n      - name: dateTimeOnly\n        in: query\n        description: Creation date in datetime-only format\n        required: false\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36\n      - name: dateTime\n        in: query\n        description: Creation date in Zoned RFC3339 Date-time format\n        required: false\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04T14:54:36Z\n      - name: dateTime2616\n        in: query\n        description: Zoned RFC2616 Date-time param example\n        required: false\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: \"Wed, 4 Jul 2001 12:08:56 PDT\"\n      - name: date\n        in: query\n        description: Date-only param example\n        required: false\n        schema:\n          type: string\n          format: date\n        examples:\n          example:\n            summary: example\n            value: 2017-10-04\n      - name: time\n        in: query\n        description: time-only param example\n        required: false\n        schema:\n          type: string\n          format: date-time\n        examples:\n          example:\n            summary: example\n            value: 14:54:36\n      - name: orderBy\n        in: query\n        description: \"Order by field: nameOnCard\\n\"\n        required: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n      - name: direction\n        in: query\n        description: Direction\n        required: false\n        schema:\n          type: string\n          default: DESC\n          enum:\n          - ASC\n          - DESC\n        examples:\n          example:\n            summary: example\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCards'\n              examples:\n                example:\n                  value: \"[ {\\n  \\\"id\\\" : \\\"a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\\\"\\\n                    ,\\n  \\\"pan\\\" : \\\"5434111122223333\\\",\\n  \\\"cvc\\\" : \\\"123\\\",\\n \\\n                    \\ \\\"startDate\\\" : \\\"0116\\\",\\n  \\\"expiryDate\\\" : \\\"1219\\\",\\n  \\\"\\\n                    nameOnCard\\\" : \\\"Mr Timmy Tester\\\",\\n  \\\"creationDate\\\" : \\\"2011-05-30T12:13:14+03:00\\\"\\\n                    ,\\n  \\\"balance\\\" : {\\n    \\\"amount\\\" : \\\"2001\\\",\\n    \\\"currencyCode\\\"\\\n                    \\ : \\\"EUR\\\"\\n  },\\n  \\\"apr\\\" : 12.75\\n}, {\\n  \\\"id\\\" : \\\"d593c212-70ad-41a6-a547-d5d9232414cb\\\"\\\n                    ,\\n  \\\"pan\\\" : \\\"5434111122224444\\\",\\n  \\\"cvc\\\" : \\\"101\\\",\\n \\\n                    \\ \\\"startDate\\\" : \\\"0216\\\",\\n  \\\"expiryDate\\\" : \\\"0120\\\",\\n  \\\"\\\n                    nameOnCard\\\" : \\\"Mr Timmothy Tester\\\",\\n  \\\"creationDate\\\" : \\\"\\\n                    2011-05-30T12:13:14+03:00\\\",\\n  \\\"balance\\\" : {\\n    \\\"amount\\\"\\\n                    \\ : \\\"4.4399999999999995\\\",\\n    \\\"currencyCode\\\" : \\\"GBP\\\"\\n\\\n                    \\  },\\n  \\\"apr\\\" : 12.75\\n}, {\\n  \\\"id\\\" : \\\"9635966b-28e9-4479-8121-bb7bc9beeb62\\\"\\\n                    ,\\n  \\\"pan\\\" : \\\"5434121212121212\\\",\\n  \\\"cvc\\\" : \\\"121\\\",\\n \\\n                    \\ \\\"startDate\\\" : \\\"0115\\\",\\n  \\\"expiryDate\\\" : \\\"1218\\\",\\n  \\\"\\\n                    nameOnCard\\\" : \\\"Mr Timmy Tester\\\",\\n  \\\"creationDate\\\" : \\\"2011-05-30T12:13:14+03:00\\\"\\\n                    ,\\n  \\\"balance\\\" : {\\n    \\\"amount\\\" : \\\"1981\\\",\\n    \\\"currencyCode\\\"\\\n                    \\ : \\\"EUR\\\"\\n  },\\n  \\\"apr\\\" : 12.75\\n} ]\"\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Bad Request\\\",\\n  \\\"errors\\\" : [ {\\n\\\n                    \\    \\\"message\\\" : \\\"Value Exceeded. Must be between {min} and\\\n                    \\ {max}.\\\",\\n    \\\"key\\\" : \\\"common.api.shoesize\\\",\\n    \\\"context\\\"\\\n                    \\ : {\\n      \\\"max\\\" : \\\"50\\\",\\n      \\\"min\\\" : \\\"1\\\"\\n    }\\n\\\n                    \\  } ]\\n}\"\n        \"406\":\n          description: NotAcceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotAcceptableError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Could not find acceptable representation\\\"\\\n                    ,\\n  \\\"supportedMediaTypes\\\" : [ \\\"application/json\\\" ]\\n}\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Description of error\\\"\\n}\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to an insufficient user quota of {quota}.\\\",\\n    \\\"key\\\"\\\n                    \\ : \\\"common.api.quota\\\",\\n    \\\"context\\\" : {\\n      \\\"quota\\\"\\\n                    \\ : \\\"someQuota\\\"\\n    }\\n  } ]\\n}\"\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Unsupported media type.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"The request entity has a media type\\\n                    \\ {mediaType} which the resource does not support.\\\",\\n    \\\"\\\n                    key\\\" : \\\"common.api.mediaType\\\",\\n    \\\"context\\\" : {\\n     \\\n                    \\ \\\"mediaType\\\" : \\\"application/javascript\\\"\\n    }\\n  } ]\\n}\"\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Resource not found.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"Unable to find the resource requested\\\n                    \\ resource: {resource}.\\\",\\n    \\\"key\\\" : \\\"common.api.resource\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"resource\\\" : \\\"aResource\\\"\\n \\\n                    \\   }\\n  } ]\\n}\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedAltError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to invalid credentials.\\\",\\n    \\\"key\\\" : \\\"common.api.token\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"accessToken\\\" : \\\"expired\\\"\\n\\\n                    \\    }\\n  } ]\\n}\"\n    post:\n      tags:\n      - wallet\n      summary: Adds a payment card to the user's wallet.\n      description: Adds a payment card to the user's wallet\n      operationId: postPaymentCards\n      parameters:\n      - name: X-Request-Id\n        in: header\n        description: Correlates HTTP requests between a client and server.\n        required: false\n        schema:\n          type: string\n        examples:\n          example:\n            summary: example\n            value: f058ebd6-02f7-4d3f-942e-904344e8cde5\n      requestBody:\n        description: Adds a payment card to the user's wallet\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentCard'\n            examples:\n              example:\n                value: \"{\\n  \\\"id\\\" : \\\"a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\\\",\\n\\\n                  \\  \\\"pan\\\" : \\\"5434111122223333\\\",\\n  \\\"cvc\\\" : \\\"123\\\",\\n  \\\"startDate\\\"\\\n                  \\ : \\\"0116\\\",\\n  \\\"expiryDate\\\" : \\\"1219\\\",\\n  \\\"nameOnCard\\\" :\\\n                  \\ \\\"Mr Timmy Tester\\\",\\n  \\\"creationDate\\\" : \\\"2011-05-30T12:13:14+03:00\\\"\\\n                  ,\\n  \\\"balance\\\" : {\\n    \\\"amount\\\" : \\\"1000\\\",\\n    \\\"currencyCode\\\"\\\n                  \\ : \\\"EUR\\\"\\n  },\\n  \\\"apr\\\" : 12.75\\n}\"\n      responses:\n        \"201\":\n          description: request to create payment card accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCardsPostResponseBody'\n              examples:\n                example:\n                  value: \"{\\n  \\\"id\\\" : \\\"a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\\\"\\n\\\n                    }\"\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Bad Request\\\",\\n  \\\"errors\\\" : [ {\\n\\\n                    \\    \\\"message\\\" : \\\"Value Exceeded. Must be between {min} and\\\n                    \\ {max}.\\\",\\n    \\\"key\\\" : \\\"common.api.shoesize\\\",\\n    \\\"context\\\"\\\n                    \\ : {\\n      \\\"max\\\" : \\\"50\\\",\\n      \\\"min\\\" : \\\"1\\\"\\n    }\\n\\\n                    \\  } ]\\n}\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Description of error\\\"\\n}\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to an insufficient user quota of {quota}.\\\",\\n    \\\"key\\\"\\\n                    \\ : \\\"common.api.quota\\\",\\n    \\\"context\\\" : {\\n      \\\"quota\\\"\\\n                    \\ : \\\"someQuota\\\"\\n    }\\n  } ]\\n}\"\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Unsupported media type.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"The request entity has a media type\\\n                    \\ {mediaType} which the resource does not support.\\\",\\n    \\\"\\\n                    key\\\" : \\\"common.api.mediaType\\\",\\n    \\\"context\\\" : {\\n     \\\n                    \\ \\\"mediaType\\\" : \\\"application/javascript\\\"\\n    }\\n  } ]\\n}\"\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Resource not found.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"Unable to find the resource requested\\\n                    \\ resource: {resource}.\\\",\\n    \\\"key\\\" : \\\"common.api.resource\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"resource\\\" : \\\"aResource\\\"\\n \\\n                    \\   }\\n  } ]\\n}\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedAltError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to invalid credentials.\\\",\\n    \\\"key\\\" : \\\"common.api.token\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"accessToken\\\" : \\\"expired\\\"\\n\\\n                    \\    }\\n  } ]\\n}\"\n    parameters:\n    - name: userId\n      in: path\n      description: No description available\n      required: true\n      schema:\n        type: string\n      examples:\n        example:\n          summary: example\n  /service-api/v1/wallet/admin/{userId}/paymentcards/{cardId}:\n    summary: Payment Card\n    description: No description available\n    get:\n      tags:\n      - wallet\n      summary: Returns details of a specific payment card.\n      description: Returns details of a specific payment card\n      operationId: getPaymentCard\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentCard'\n              examples:\n                example:\n                  value: \"{\\n  \\\"id\\\" : \\\"a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\\\",\\n\\\n                    \\  \\\"pan\\\" : \\\"5434111122223333\\\",\\n  \\\"cvc\\\" : \\\"123\\\",\\n  \\\"\\\n                    startDate\\\" : \\\"0116\\\",\\n  \\\"expiryDate\\\" : \\\"1219\\\",\\n  \\\"nameOnCard\\\"\\\n                    \\ : \\\"Mr Timmy Tester\\\",\\n  \\\"creationDate\\\" : \\\"2011-05-30T12:13:14+03:00\\\"\\\n                    ,\\n  \\\"balance\\\" : {\\n    \\\"amount\\\" : \\\"1000\\\",\\n    \\\"currencyCode\\\"\\\n                    \\ : \\\"EUR\\\"\\n  },\\n  \\\"apr\\\" : 12.75\\n}\"\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Bad Request\\\",\\n  \\\"errors\\\" : [ {\\n\\\n                    \\    \\\"message\\\" : \\\"Value Exceeded. Must be between {min} and\\\n                    \\ {max}.\\\",\\n    \\\"key\\\" : \\\"common.api.shoesize\\\",\\n    \\\"context\\\"\\\n                    \\ : {\\n      \\\"max\\\" : \\\"50\\\",\\n      \\\"min\\\" : \\\"1\\\"\\n    }\\n\\\n                    \\  } ]\\n}\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Description of error\\\"\\n}\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to an insufficient user quota of {quota}.\\\",\\n    \\\"key\\\"\\\n                    \\ : \\\"common.api.quota\\\",\\n    \\\"context\\\" : {\\n      \\\"quota\\\"\\\n                    \\ : \\\"someQuota\\\"\\n    }\\n  } ]\\n}\"\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Unsupported media type.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"The request entity has a media type\\\n                    \\ {mediaType} which the resource does not support.\\\",\\n    \\\"\\\n                    key\\\" : \\\"common.api.mediaType\\\",\\n    \\\"context\\\" : {\\n     \\\n                    \\ \\\"mediaType\\\" : \\\"application/javascript\\\"\\n    }\\n  } ]\\n}\"\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Resource not found.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"Unable to find the resource requested\\\n                    \\ resource: {resource}.\\\",\\n    \\\"key\\\" : \\\"common.api.resource\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"resource\\\" : \\\"aResource\\\"\\n \\\n                    \\   }\\n  } ]\\n}\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedAltError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to invalid credentials.\\\",\\n    \\\"key\\\" : \\\"common.api.token\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"accessToken\\\" : \\\"expired\\\"\\n\\\n                    \\    }\\n  } ]\\n}\"\n    delete:\n      tags:\n      - wallet\n      summary: Deletes a payment card with a given id.\n      description: Deletes a payment card with a given id\n      operationId: deletePaymentCard\n      responses:\n        \"204\":\n          description: Payment card is succesfully deleted\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Bad Request\\\",\\n  \\\"errors\\\" : [ {\\n\\\n                    \\    \\\"message\\\" : \\\"Value Exceeded. Must be between {min} and\\\n                    \\ {max}.\\\",\\n    \\\"key\\\" : \\\"common.api.shoesize\\\",\\n    \\\"context\\\"\\\n                    \\ : {\\n      \\\"max\\\" : \\\"50\\\",\\n      \\\"min\\\" : \\\"1\\\"\\n    }\\n\\\n                    \\  } ]\\n}\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Description of error\\\"\\n}\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to an insufficient user quota of {quota}.\\\",\\n    \\\"key\\\"\\\n                    \\ : \\\"common.api.quota\\\",\\n    \\\"context\\\" : {\\n      \\\"quota\\\"\\\n                    \\ : \\\"someQuota\\\"\\n    }\\n  } ]\\n}\"\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Unsupported media type.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"The request entity has a media type\\\n                    \\ {mediaType} which the resource does not support.\\\",\\n    \\\"\\\n                    key\\\" : \\\"common.api.mediaType\\\",\\n    \\\"context\\\" : {\\n     \\\n                    \\ \\\"mediaType\\\" : \\\"application/javascript\\\"\\n    }\\n  } ]\\n}\"\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Resource not found.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"Unable to find the resource requested\\\n                    \\ resource: {resource}.\\\",\\n    \\\"key\\\" : \\\"common.api.resource\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"resource\\\" : \\\"aResource\\\"\\n \\\n                    \\   }\\n  } ]\\n}\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedAltError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to invalid credentials.\\\",\\n    \\\"key\\\" : \\\"common.api.token\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"accessToken\\\" : \\\"expired\\\"\\n\\\n                    \\    }\\n  } ]\\n}\"\n    parameters:\n    - name: cardId\n      in: path\n      description: No description available\n      required: true\n      schema:\n        type: string\n      examples:\n        example:\n          summary: example\n    - name: userId\n      in: path\n      description: No description available\n      required: true\n      schema:\n        type: string\n      examples:\n        example:\n          summary: example\n  /service-api/v1/testQuery/required-boolean-query-param:\n    summary: required boolean query param\n    description: arbitrary tests\n    get:\n      tags:\n      - testQuery\n      description: No description available\n      operationId: getrequiredBooleanQueryParam\n      parameters:\n      - name: bool\n        in: query\n        description: Required boolean parameter with no default value\n        required: true\n        schema:\n          type: boolean\n        examples:\n          example:\n            summary: example\n            value: false\n      responses:\n        \"200\":\n          description: No description available\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequiredbooleanqueryparamGetResponseBody'\n        \"400\":\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Bad Request\\\",\\n  \\\"errors\\\" : [ {\\n\\\n                    \\    \\\"message\\\" : \\\"Value Exceeded. Must be between {min} and\\\n                    \\ {max}.\\\",\\n    \\\"key\\\" : \\\"common.api.shoesize\\\",\\n    \\\"context\\\"\\\n                    \\ : {\\n      \\\"max\\\" : \\\"50\\\",\\n      \\\"min\\\" : \\\"1\\\"\\n    }\\n\\\n                    \\  } ]\\n}\"\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Description of error\\\"\\n}\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to an insufficient user quota of {quota}.\\\",\\n    \\\"key\\\"\\\n                    \\ : \\\"common.api.quota\\\",\\n    \\\"context\\\" : {\\n      \\\"quota\\\"\\\n                    \\ : \\\"someQuota\\\"\\n    }\\n  } ]\\n}\"\n        \"415\":\n          description: UnsupportedMediaType\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedMediaTypeError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Unsupported media type.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"The request entity has a media type\\\n                    \\ {mediaType} which the resource does not support.\\\",\\n    \\\"\\\n                    key\\\" : \\\"common.api.mediaType\\\",\\n    \\\"context\\\" : {\\n     \\\n                    \\ \\\"mediaType\\\" : \\\"application/javascript\\\"\\n    }\\n  } ]\\n}\"\n        \"404\":\n          description: NotFound\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Resource not found.\\\",\\n  \\\"errors\\\"\\\n                    \\ : [ {\\n    \\\"message\\\" : \\\"Unable to find the resource requested\\\n                    \\ resource: {resource}.\\\",\\n    \\\"key\\\" : \\\"common.api.resource\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"resource\\\" : \\\"aResource\\\"\\n \\\n                    \\   }\\n  } ]\\n}\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedAltError'\n              examples:\n                example:\n                  value: \"{\\n  \\\"message\\\" : \\\"Access to requested resource denied.\\\"\\\n                    ,\\n  \\\"errors\\\" : [ {\\n    \\\"message\\\" : \\\"Resource access denied\\\n                    \\ due to invalid credentials.\\\",\\n    \\\"key\\\" : \\\"common.api.token\\\"\\\n                    ,\\n    \\\"context\\\" : {\\n      \\\"accessToken\\\" : \\\"expired\\\"\\n\\\n                    \\    }\\n  } ]\\n}\"\ncomponents:\n  schemas:\n    BadRequestError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n    BbAccessControl:\n      required:\n      - function\n      - privilege\n      - resource\n      type: object\n      properties:\n        resource:\n          type: string\n          description: \"Resource being protected, e.g. 'User'\"\n        function:\n          type: string\n          description: \"Business function, e.g. 'Manage Users'\"\n        privilege:\n          type: string\n          description: \"The privilege required, e.g. 'view'\"\n    BbApiDeprecation:\n      required:\n      - deprecatedFromVersion\n      - description\n      - reason\n      - removedFromVersion\n      type: object\n      properties:\n        deprecatedFromVersion:\n          type: string\n          description: Version of the product from which the endpoint has been deprecated\n            and should no longer be used\n          deprecated: true\n        removedFromVersion:\n          type: string\n          description: Version of the product from which the API endpoint will be\n            removed\n        reason:\n          type: string\n          description: The reason the API endpoint was deprecated\n          deprecated: true\n        description:\n          type: string\n          description: \"Any further information, e.g. migration information\"\n    Currency:\n      title: Monetary Amount\n      required:\n      - amount\n      - currencyCode\n      type: object\n      properties:\n        amount:\n          type: string\n          description: The amount in the specified currency\n        currencyCode:\n          pattern: \"^[A-Z]{3}$\"\n          type: string\n          description: The alpha-3 code (complying with ISO 4217) of the currency\n            that qualifies the amount\n      description: Schema defining monetary amount in given currency.\n    ErrorItem:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Default Message. Any further information.\n        key:\n          type: string\n          description: \"{capability-name}.api.{api-key-name}. For generated validation\\\n            \\ errors this is the path in the document the error resolves to. e.g.\\\n            \\ object name + '.' + field\"\n        context:\n          type: object\n          description: Context can be anything used to construct localised messages.\n      description: A validation error\n    ForbiddenError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n    InternalServerError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Further Information\n      description: Represents HTTP 500 Internal Server Error\n    NotAcceptableError:\n      type: object\n      properties:\n        message:\n          type: string\n        supportedMediaTypes:\n          type: array\n          description: List of supported media types for this endpoint\n          items:\n            type: string\n    NotFoundError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n    ObjectWrappingException:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: object\n    PaymentCard:\n      required:\n      - cvc\n      - expiryDate\n      - id\n      - nameOnCard\n      - pan\n      - startDate\n      type: object\n      properties:\n        id:\n          type: string\n        pan:\n          maxLength: 19\n          type: string\n          description: \"Must be sixteen digits, optionally in blocks of 4 separated\\\n            \\ by a dash\"\n        cvc:\n          maxLength: 3\n          minLength: 3\n          type: string\n          description: Card Verification Code\n        startDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        expiryDate:\n          pattern: \"^(0[1-9]|1[0-2])/?([0-9]{4}|[0-9]{2})$\"\n          type: string\n          description: \"Must be in one of these four formats: MM/YY MMYY MMYYYY MM/YYYY\"\n        nameOnCard:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        balance:\n          $ref: '#/components/schemas/Currency'\n        apr:\n          type: number\n        cardtype:\n          type: string\n          enum:\n          - CREDIT\n          - DEBIT\n          - PREPAID\n    PaymentCards:\n      type: array\n      items:\n        $ref: '#/components/schemas/PaymentCard'\n    PaymentCardsPostResponseBody:\n      type: object\n      properties:\n        id:\n          type: string\n      example:\n        id: a5b0fe7d-c4dd-40a7-bd80-dfc7869327e1\n    RequiredbooleanqueryparamGetResponseBody:\n      type: object\n      properties:\n        message:\n          type: string\n    TestHeadersResponseBody:\n      type: object\n      properties:\n        requests:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              url:\n                type: string\n              headers:\n                type: object\n    UnauthorizedAltError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n    UnauthorizedError:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n    UnsupportedMediaTypeError:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Any further information\n        errors:\n          type: array\n          description: Detailed error information\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n",
			"canonicalURL": "/github.com/Backbase/backbase-openapi-tools@b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/-/blob/boat-maven-plugin/src/it/example/boat-artifact-input/openapi-specs/openapi-zips/src/main/resources/presentation-service-api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/backbase-openapi-tools/blob/b6235105d3511f2e8a3dfb8c8b1ecc48ef783c52/boat-maven-plugin/src/it/example/boat-artifact-input/openapi-specs/openapi-zips/src/main/resources/presentation-service-api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}