{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FraunhoferISST/diva"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "core/services/history-assistant/apiDoc/openapi.yml",
			"byteSize": 6794,
			"content": "openapi: 3.0.0\n\ninfo:\n  description: \"History Assistant Service is responsible for providing history entities and a human readable\n    representation.\"\n  version: 1.0.0\n  title: History Assistant API\n\nservers:\n  - url: http://localhost:3006\n\ntags:\n  - name: histories\n    description: Operations on history entities\n\npaths:\n  /histories:\n    parameters:\n      - $ref: \"#/components/parameters/actoridParam\"\n    get:\n      tags:\n        - histories\n      summary: Get list of histories\n      description: To get the list of histories you can specify projection with `fields` paramter and set the\n        page size with `pageSize`. Default page size is **30**. The next page can be fatched by using `cursor`\n        parameter. The cursor to the next page will be included in the response body\n      operationId: getHistories\n      parameters:\n        - name: fields\n          in: query\n          description: Coma separated projection fields\n          required: false\n          explode: true\n          schema:\n            type: string\n        - name: cursor\n          in: query\n          description: Pagination cursor\n          required: false\n          explode: true\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: Page size\n          required: false\n          schema:\n            type: integer\n            default: 30\n            format: int32\n        - name: attributedTo\n          in: query\n          description: Entity the history belongs to\n          required: false\n          allowReserved: true\n          schema:\n            $ref: \"#/components/schemas/EntityId\"\n        - name: humanReadable\n          in: query\n          description: When true, will return human readable diff text\n          required: false\n          schema:\n            type: boolean    \n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  collectionSize:\n                    type: integer\n                  collection:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/HistoryResponse\"\n                  cursor:\n                    type: string\n        \"400\":\n          $ref: \"#/components/responses/RequestValidationError\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n\n  /histories/{id}:\n    parameters:\n      - $ref: \"#/components/parameters/actoridParam\"\n      - $ref: \"#/components/parameters/historyIdParam\"\n    get:\n      tags:\n        - histories\n      summary: Get history by id\n      description: Projection can be specified with `fields` paramter\n      operationId: getHistoryById\n      parameters:\n        - name: fields\n          in: query\n          description: Comma separated projection fields\n          required: false\n          explode: true\n          schema:\n            type: string\n        - name: humanReadable\n          in: query\n          description: When true, will return human readable diff text\n          required: false\n          schema:\n            type: boolean      \n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HistoryResponse\"\n        \"400\":\n          $ref: \"#/components/responses/RequestValidationError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    \n\ncomponents:\n\n  schemas:\n\n    HistoryId:\n      title: History Id\n      description: Unique history identifier\n      type: string\n      example: \"history:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\"\n      pattern: \"^history:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n\n    ActorId:\n      title: Actor Id\n      description: Unique actor identifier\n      type: string\n      example: \"user:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\"\n      pattern: \"^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n\n    EntityId:\n      title: Entity Id\n      description: Unique entity identifier\n      type: string\n      example: \"response:uuid:asdsad4d1fcb08-b894-4bdf-b662-0f105d597189\"\n      pattern: \"^.+:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\" \n\n    HistoryResponse:\n      title: History Response\n      description: History Response schema\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        creatorId:\n          $ref: \"#/components/schemas/ActorId\"\n        entityType:\n          type: string\n        modified:\n          type: string\n          format: date-time\n        created:\n          type: string\n          format: date-time\n        attributedTo:\n          $ref:  \"#/components/schemas/EntityId\"\n        delta:\n          type: object\n        humanReadable:\n          type: array  \n\n    Error:\n      type: object\n      additionalProperties: false\n      required:\n        - type\n        - message\n        - code\n      properties:\n        type:\n          description: Description of the error type\n          type: string\n        message:\n          description: Description of the error\n          type: string\n        code:\n          description: Erro status code\n          type: number\n          format: int32\n        errors:\n          description: JSON Schema validation errors\n          type: array\n          items:\n            type: object\n\n  responses:\n\n    UnexpectedError:\n      description: Internal error\n      content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Error\"\n\n    NotFoundError:\n      description: Entity not found\n      content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Error\"\n\n    RequestValidationError:\n      description: Request violates API Specification\n      content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Error\"\n\n  parameters:\n    actoridParam:\n      in: header\n      description: The id of the origin that produces action/message. Can be a user or service\n      name: x-actorid\n      schema:\n        type: string\n        minLength: 1\n        pattern: \"^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"\n      required: true\n    historyIdParam:\n      in: path\n      description: Existing identifier of the history element that should be affected by the operation\n      name: id\n      schema:\n        $ref: \"#/components/schemas/HistoryId\"\n      required: true\n",
			"canonicalURL": "/github.com/FraunhoferISST/diva@67fac716105e2a805c392529c3b5b14d59dd3773/-/blob/core/services/history-assistant/apiDoc/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/FraunhoferISST/diva/blob/67fac716105e2a805c392529c3b5b14d59dd3773/core/services/history-assistant/apiDoc/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}