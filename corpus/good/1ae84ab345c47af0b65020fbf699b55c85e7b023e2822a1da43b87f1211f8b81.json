{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MurmurationsNetwork/MurmurationsProtocol"
		},
		"file": {
			"name": "library_api-v1.yaml",
			"size": 0,
			"path": "library_api-v1.yaml",
			"byteSize": 5544,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.0'\n  title: Murmurations Library API\n  description: Draft version of the Library API for the Murmurations Protocol\nservers:\n  - description: Murmurations Testing Platform\n    url: https://test-library.murmurations.network/v1\ntags:\n  - name: Common Endpoints\npaths:\n  # TODO - future release\n  # /fields:\n  #   get:\n  #     summary: Get a list of fields\n  #     description: |\n  #       Indices and node UIs will need the list of fields in the library in order to validate profiles, and node UIs will need them to build input forms. This endpoint simply returns all of the fields available in the library.\n\n  #       The examples below do not include a full list of properties that might be returned, but they highlight the main properties to expect in field objects.\n  #     responses:\n  #       200:\n  #         description: OK\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 data:\n  #                   $ref: '#/components/schemas/GetFieldsResponse'\n  #             example:\n  #               data:\n  #                 - name: \"mission-v1\"\n  #                   definition:\n  #                     title: \"Mission Statement\"\n  #                     description: \"A short statement of why the entity exists, what its overall goal is: what kind of product or service it provides, its primary customers or market, and its geographical region of operation.\"\n  #                     type: \"string\"\n  #                     maxLength: 1000\n  #                     context: \"https://en.wikipedia.org/wiki/Mission_statement\"\n  #                 - name: \"keywords-v1\"\n  #                   definition:\n  #                     title: \"Descriptive Keywords\"\n  #                     description: \"The most common keywords used to describe the entity\"\n  #                     type: \"array\"\n  #                     items:\n  #                         type: \"string\"\n  #                     minItems: 1\n  #                     maxItems: 50\n  #                     uniqueItems: true\n  #                     context: \"https://schema.org/keywords\"\n  #       429:\n  #         $ref: '#/components/responses/TooManyRequests'\n  #       500:\n  #         $ref: '#/components/responses/ServerError'\n  /ping:\n    get:\n      tags:\n        - Common Endpoints\n      summary: Ping the library\n      description: |\n        Check if the index is live\n      responses:\n        200:\n          description: OK\n  /schemas:\n    get:\n      tags:\n        - Common Endpoints\n      summary: Get a list of schemas\n      description: |\n        Indices and Murmurations profile generators (MPGs) will need the list of schemas in the library in order to validate profiles, and MPGs will need them to build input forms and present schemas to users. This endpoint simply returns summary information for all of the schemas available in the library.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/GetSchemasResponse'\n              example:\n                data:\n                  - title: 'Test Schema'\n                    description: 'Just for testing - Select this schema to see your profile show up straight away on the Test map.'\n                    name: 'test_schema-v1'\n                    version: 1\n                    url: 'https://murmurations.network/schemas/test_schema'\n        429:\n          $ref: '#/components/responses/TooManyRequests'\n        500:\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  schemas:\n    # TODO - future release\n    # GetFieldsResponse:\n    #   type: array\n    #   items:\n    #     type: object\n    #     properties:\n    #       name:\n    #         type: string\n    #       definition:\n    #         type: object\n    #         properties:\n    #           title:\n    #             type: string\n    #           description:\n    #             type: string\n    #           type:\n    #             type: string\n    GetSchemasResponse:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              description:\n                type: string\n              name:\n                type: string\n              version:\n                type: integer\n              url:\n                type: string\n            required:\n              - title\n              - description\n              - name\n              - version\n              - url\n    Error:\n      type: object\n      required:\n        - message\n        - status\n      properties:\n        message:\n          type: string\n        status:\n          type: integer\n  responses:\n    TooManyRequests:\n      description: The request limit for this resource has been reached for the current rate limit window.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            message: Rate limit exceeded.\n            status: 429\n    ServerError:\n      description: An unknown internal error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            message: Internal server error triggered.\n            status: 500\n",
			"canonicalURL": "/github.com/MurmurationsNetwork/MurmurationsProtocol@33b62c990d457eed6f25622b86f61fb313ab814d/-/blob/library_api-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MurmurationsNetwork/MurmurationsProtocol/blob/33b62c990d457eed6f25622b86f61fb313ab814d/library_api-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}