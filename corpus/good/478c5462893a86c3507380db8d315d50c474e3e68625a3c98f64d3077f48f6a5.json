{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apideck-libraries/portman"
		},
		"file": {
			"name": "oas.methods.yaml",
			"size": 0,
			"path": "__tests__/fixtures/oas.methods.yaml",
			"byteSize": 6388,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Blog Posts API\n  description: \u003e\n    This is an example API for blog posts using OpenApi Specification.\n\n  version: 1.0.0\npaths:\n  /posts:\n    get:\n      summary: Return all the posts\n      responses:\n        '200':\n          description: An array of blog posts in JSON format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Posts'\n\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Post'\n      responses:\n        '201':\n          description: The request has succeeded and a new resource has been created as a result.\n  /posts/{id}:\n    get:\n      summary: Return a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      responses:\n        '200':\n          description: A blog posts in JSON format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Post'\n    put:\n      tags:\n        - Posts\n      summary: Update a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Post'\n      responses:\n        '200':\n          description: Updated the post completely.\n\n    patch:\n      summary: Update a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchPost'\n      responses:\n        '200':\n          description: Updated the post partially.\n\n    head:\n      summary: Fetch a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      responses:\n        '200':\n          description: Post partially.\n\n    options:\n      summary: Pre-flight a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      responses:\n        '200':\n          description: Post partially.\n\n    trace:\n      summary: Loop back a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      responses:\n        '200':\n          description: Post partially.\n\n    delete:\n      summary: Deletes a post\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The postId requested by user.\n          schema:\n            type : string\n      responses:\n        '204':\n          description: The resource was deleted successfully.\ncomponents:\n  schemas:\n    Posts:\n      description: \"An array of post objects.\"\n      type: array\n      items:\n        $ref: '#/components/schemas/Post'\n      example: [\n        {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"First post\",\n          \"body\": \"This is the first post body.\"\n        },\n        {\n          \"userId\": 1,\n          \"id\": 2,\n          \"title\": \"Second post\",\n          \"body\": \"The second post content.\"\n        },\n        {\n          \"userId\": 1,\n          \"id\": 3,\n          \"title\": \"Another post\",\n          \"body\": \"Other post content\"\n        }\n      ]\n    Post:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The post id.\"\n        userId:\n          type: string\n          description: \"The post userId.\"\n        title:\n          type: string\n          description: \"The title of the post\"\n        body:\n          type: string\n          description: \"The body content of the post\"\n      required:\n        - id\n        - userId\n        - title\n        - body\n      example:\n        userId: 1\n        id: 1\n        title: \"The First Post\"\n        body: \"we are building a blog post API using OpenAPI Specification.\"\n    PatchPost:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The post id.\"\n        userId:\n          type: string\n          description: \"The post userId.\"\n        title:\n          type: string\n          description: \"The title of the post\"\n        body:\n          type: string\n          description: \"The body content of the post\"\n    Comments:\n      description: \"The array of comment objects\"\n      type: array\n      items:\n        $ref: '#/components/schemas/Comment'\n      example: [\n        {\n          \"postId\": 1,\n          \"id\": 1,\n          \"name\": \"id labore ex et quam laborum\",\n          \"email\": \"Eliseo@gardner.biz\",\n          \"body\": \"laudantium enim quasi est quidem magnam voluptate\"\n        },\n        {\n          \"postId\": 1,\n          \"id\": 2,\n          \"name\": \"quo vero reiciendis velit similique earum\",\n          \"email\": \"Jayne_Kuhic@sydney.com\",\n          \"body\": \"est natus enim nihil est dolore omnis voluptatem\"\n        },\n        {\n          \"postId\": 1,\n          \"id\": 3,\n          \"name\": \"odio adipisci rerum aut animi\",\n          \"email\": \"Nikita@garfield.biz\",\n          \"body\": \"quia molestiae reprehenderit quasi aspernatur\"\n        }\n      ]\n    Comment:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The comment id.\"\n        postId:\n          type: string\n          description: \"The comment postId.\"\n        name:\n          type: string\n          description: \"The name of the comment.\"\n        email:\n          type: string\n          description: \"The email of the user who posted the comment.\"\n        body:\n          type: string\n          description: \"The comment body.\"\n      example:\n        id: 1\n        postId: 1\n        name: \"The first comment\"\n        email: \"example@example.com\"\n        body: \"This is the first comment!\"\n",
			"canonicalURL": "/github.com/apideck-libraries/portman@35383e6a3e50326eefe7e0fa614083faf0ba1c21/-/blob/__tests__/fixtures/oas.methods.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apideck-libraries/portman/blob/35383e6a3e50326eefe7e0fa614083faf0ba1c21/__tests__/fixtures/oas.methods.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}