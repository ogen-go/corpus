{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-tools"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi-cli/src/test/resources/generators/client/file_provider/swagger/openapi.yaml",
			"byteSize": 23615,
			"content": "openapi: 3.0.0\nservers:\n  - url: http://api.sendgrid.com/v3\n  - url: https://api.sendgrid.com/v3\ninfo:\n  title: SendGrid v3 API DocCommentsGenerator\n  version: \"3.0\"\n  x-apisguru-categories:\n    - email\n    - marketing\n  x-logo:\n    url: https://user-images.githubusercontent.com/21603/27865240-b4c0da22-6189-11e7-9f2c-f35f4c6fa57c.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/sendgrid/sendgrid-oai/main/oai.json\n      version: \"3.0\"\n  x-providerName: sendgrid.com\nexternalDocs:\n  url: https://sendgrid.com/docs/API_Reference/Web_API_v3/index.html\npaths:\n  /sendEmail:\n    post:\n      tags:\n        - SendEmail\n      description: \"Send an email to given recipient\"\n      operationId: sendEmail\n      x-ballerina-display:\n        label: \"Send Email\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                recipient:\n                  type: string\n                  description: \"The recipient of the mail\"\n                  x-ballerina-display: \"Recipient\"\n                subject:\n                  type: string\n                  description: \"The subject of the mail\"\n                  x-ballerina-display:  \"Subject\"\n                body:\n                  type: string\n                  description: \"The message body of the mail\"\n                  x-ballerina-display: \"Message Body\"\n                cc:\n                  type: string\n                  description: \"The cc recipient of the mail. Optional\"\n                  x-ballerina-display: \"Cc\"\n                bcc:\n                  type: string\n                  description: \"The bcc recipient of the mail. Optional\"\n                  x-ballerina-display: \"Bcc\"\n              required:\n                - recipient\n                - subject\n                - body\n      responses:\n        '200':\n          description: \"If success, returns the message id, else return an error\"\n          content:\n            application/json:\n              schema:\n                type: string\n  /alerts:\n    get:\n      operationId: getAlerts\n      parameters:\n        - $ref: \"#/components/parameters/traitOnBehalfOfSubUser\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    - created_at: 1451498784\n                      email_to: example1@example.com\n                      id: 46\n                      percentage: 90\n                      type: number\n                      updated_at: 1451498784\n                    - created_at: 1451498812\n                      email_to: example2@example.com\n                      frequency: monthly\n                      id: 47\n                      type: number\n                      updated_at: 1451498812\n                    - created_at: 1451520930\n                      email_to: example3@example.com\n                      frequency: daily\n                      id: 48\n                      type: number\n                      updated_at: 1451520930\n              schema:\n                description: The list of alerts.\n                items:\n                  $ref: \"#/components/schemas/GetAlertsResponse\"\n                type: array\n          description: \"\"\n      security:\n        - Authorization: []\n      summary: Retrieve all alerts\n      tags:\n        - Alerts\n    post:\n      operationId: postAlerts\n      parameters:\n        - $ref: \"#/components/parameters/traitOnBehalfOfSubUser\"\n      requestBody:\n        $ref: \"#/components/requestBodies/postAlertBody\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PostAlertsResponse\"\n          description: \"\"\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  field:\n                    type: string\n                  message:\n                    type: string\n                type: object\n          description: \"\"\n      security:\n        - Authorization: []\n      summary: Create a new Alert\n      tags:\n        - Alerts\n  \"/alerts/{alert_id}\":\n    delete:\n      operationId: deleteAlertsById\n      parameters:\n        - $ref: \"#/components/parameters/traitOnBehalfOfSubUser\"\n      responses:\n        \"204\":\n          description: \"No Content\"\n      security:\n        - Authorization: []\n      summary: Delete an alert\n      tags:\n        - Alerts\n    get:\n      operationId: getAlertsById\n      parameters:\n        - $ref: \"#/components/parameters/traitOnBehalfOfSubUser\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    created_at: 1451520930\n                    email_to: example@example.com\n                    frequency: daily\n                    id: 48\n                    type: number\n                    updated_at: 1451520930\n              schema:\n                $ref: \"#/components/schemas/GetAlertByIdResponse\"\n          description: \"\"\n      security:\n        - Authorization: []\n      summary: Retrieve a specific alert\n      tags:\n        - Alerts\n    parameters:\n      - description: The ID of the alert you would like to retrieve.\n        in: path\n        name: alert_id\n        required: true\n        schema:\n          type: integer\ncomponents:\n  parameters:\n    traitOnBehalfOfSubUser:\n      in: header\n      name: on-behalf-of\n      schema:\n        default: subuser_\u003cuser_name\u003e\n        type: string\n      required: true\n  requestBodies:\n    MailSendDetails:\n      description: \"\"\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EmailContent\"\n    GET_alertsBody:\n      content:\n        application/json:\n          schema:\n            nullable: true\n    getAlertsBody:\n      content:\n        application/json:\n          schema:\n            nullable: true\n    postAlertBody:\n      content:\n        application/json:\n          schema:\n            example:\n              email_to: example@example.com\n              frequency: daily\n              type: number\n            properties:\n              email_to:\n                description: |-\n                  The email address the alert will be sent to.\n                nullable: true\n                type: string\n              frequency:\n                description: |-\n                  Required for stats_notification. How frequently the alert will be sent.\n                type: string\n              percentage:\n                description: |-\n                  Required for usage_alert. When this usage threshold is reached, the alert will be sent.\n                  Example: 90\n                type: integer\n              type:\n                description: |-\n                  The type of alert you want to create. Can be either usage_limit or stats_notification.\n                enum:\n                  - stats_notification\n                  - usage_limit\n                type: string\n            required:\n              - type\n              - email_to\n            type: object\n    patchAlertBody:\n      content:\n        application/json:\n          schema:\n            example:\n              email_to: example@example.com\n            properties:\n              email_to:\n                description: |-\n                  The new email address you want your alert to be sent to.\n                  Example: test@example.com\n                type: string\n              frequency:\n                description: |-\n                  The new frequency at which to send the stats_notification alert.\n                  Example: monthly\n                type: string\n              percentage:\n                description: |-\n                  The new percentage threshold at which the usage_limit alert will be sent.\n                  Example: 90\n                type: integer\n            type: object\n  schemas:\n    errors:\n      properties:\n        errors:\n          items:\n            properties:\n              field:\n                description: The field that has the error.\n                nullable: true\n                type: string\n              message:\n                description: The message the API caller will receive.\n                type: string\n            type: object\n          type: array\n      title: Error Schema\n      type: object\n    EmailContent:\n      properties:\n        asm:\n          description: An object allowing you to specify how to handle unsubscribes.\n          properties:\n            group_id:\n              description: The unsubscribe group to associate with this email.\n              type: integer\n            groups_to_display:\n              description: An array containing the unsubscribe groups that you would like to be displayed on the unsubscribe preferences page.\n              items:\n                type: integer\n              maxItems: 25\n              type: array\n          required:\n            - group_id\n          type: object\n        attachments:\n          description: An array of objects in which you can specify any attachments you want to include.\n          items:\n            properties:\n              content:\n                description: The Base64 encoded content of the attachment.\n                minLength: 1\n                type: string\n              content_id:\n                description: The content id for the attachment. This is used when the disposition is set to “inline” and the attachment is an image, allowing the file to be displayed within the body of your email.\n                type: string\n              disposition:\n                default: attachment\n                description: The content-disposition of the attachment specifying how you would like the attachment to be displayed. For example, “inline” results in the attached file being displayed automatically within the message while “attachment” results in the attached file requiring some action to be taken before it is displayed (e.g. opening or downloading the file).\n                enum:\n                  - inline\n                  - attachment\n                type: string\n              filename:\n                description: The filename of the attachment.\n                type: string\n              type:\n                description: The mime type of the content you are attaching. For example, “text/plain” or “text/html”.\n                minLength: 1\n                type: string\n            required:\n              - content\n              - filename\n            type: object\n          type: array\n        batch_id:\n          type: string\n        categories:\n          description: \"An array of category names for this message. Each category name may not exceed 255 characters. \"\n          items:\n            maxLength: 255\n            type: string\n          maxItems: 10\n          type: array\n          uniqueItems: true\n        content:\n          items:\n            properties:\n              type:\n                description: The mime type of the content you are including in your email. For example, “text/plain” or “text/html”.\n                minLength: 1\n                type: string\n              value:\n                description: The actual content of the specified mime type that you are including in your email.\n                minLength: 1\n                type: string\n            required:\n              - type\n              - value\n            type: object\n          type: array\n        custom_args:\n          type: object\n        from:\n          $ref: \"#/components/schemas/email_object\"\n        headers:\n          type: object\n        ip_pool_name:\n          description: The IP Pool that you would like to send this email from.\n          maxLength: 64\n          minLength: 2\n          type: string\n        mail_settings:\n          description: A collection of different mail settings that you can use to specify how you would like this email to be handled.\n          properties:\n            bcc:\n              description: This allows you to have a blind carbon copy automatically sent to the specified email address for every email that is sent.\n              properties:\n                email:\n                  description: The email address that you would like to receive the BCC.\n                  format: email\n                  type: string\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n              type: object\n            bypass_list_management:\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n              type: object\n            footer:\n              description: The default footer that you would like included on every email.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                html:\n                  description: The HTML content of your footer.\n                  type: string\n                text:\n                  description: The plain text content of your footer.\n                  type: string\n              type: object\n            sandbox_mode:\n              description: This allows you to send a test email to ensure that your request body is valid and formatted correctly.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n              type: object\n            spam_check:\n              description: This allows you to test the content of your email for spam.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                post_to_url:\n                  description: An Inbound Parse URL that you would like a copy of your email along with the spam report to be sent to.\n                  type: string\n                threshold:\n                  maximum: 10\n                  minimum: 1\n                  type: integer\n              type: object\n          type: object\n        personalizations:\n          items:\n            properties:\n              bcc:\n                items:\n                  $ref: \"#/components/schemas/email_object\"\n                maxItems: 1000\n                type: array\n              cc:\n                items:\n                  $ref: \"#/components/schemas/email_object\"\n                maxItems: 1000\n                type: array\n              custom_args:\n                type: object\n              headers:\n                type: object\n              send_at:\n                description: A unix timestamp allowing you to specify when you want your email to be delivered. Scheduling more than 72 hours in advance is forbidden.\n                type: integer\n              subject:\n                description: The subject of your email. Char length requirements, according to the RFC - http://stackoverflow.com/questions/1592291/what-is-the-email-subject-length-limit#answer-1592310\n                minLength: 1\n                type: string\n              substitutions:\n                maxProperties: 10000\n                type: object\n              to:\n                description: An array of recipients. Each object within this array may contain the name, but must always contain the email, of a recipient.\n                items:\n                  $ref: \"#/components/schemas/email_object\"\n                maxItems: 1000\n                minItems: 1\n                type: array\n            required:\n              - to\n            type: object\n          maxItems: 1000\n          type: array\n          uniqueItems: false\n        reply_to:\n          $ref: \"#/components/schemas/email_object\"\n        sections:\n          description: An object of key/value pairs that define block sections of code to be used as substitutions.\n          type: object\n        send_at:\n          type: integer\n        subject:\n          description: The global, or “message level”, subject of your email. This may be overridden by personalizations[x].subject.\n          minLength: 1\n          type: string\n        template_id:\n          type: string\n        tracking_settings:\n          description: Settings to determine how you would like to track the metrics of how your recipients interact with your email.\n          properties:\n            click_tracking:\n              description: Allows you to track whether a recipient clicked a link in your email.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                enable_text:\n                  description: Indicates if this setting should be included in the text/plain portion of your email.\n                  type: boolean\n              type: object\n            ganalytics:\n              description: Allows you to enable tracking provided by Google Analytics.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                utm_campaign:\n                  description: \"The name of the campaign.\\t\"\n                  type: string\n                utm_content:\n                  description: \"Used to differentiate your campaign from advertisements.\\t\"\n                  type: string\n                utm_medium:\n                  description: Name of the marketing medium. (e.g. Email)\n                  type: string\n                utm_source:\n                  description: Name of the referrer source. (e.g. Google, SomeDomain.com, or Marketing Email)\n                  type: string\n                utm_term:\n                  description: \"Used to identify any paid keywords.\\t\"\n                  type: string\n              type: object\n            open_tracking:\n              description: Allows you to track whether the email was opened or not, but including a single pixel image in the body of the content. When the pixel is loaded, we can log that the email was opened.\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                substitution_tag:\n                  type: string\n              type: object\n            subscription_tracking:\n              properties:\n                enable:\n                  description: Indicates if this setting is enabled.\n                  type: boolean\n                html:\n                  type: string\n                substitution_tag:\n                  type: string\n                text:\n                  type: string\n              type: object\n          type: object\n      required:\n        - personalizations\n        - from\n        - subject\n        - content\n      type: object\n    email_object:\n      properties:\n        email:\n          format: email\n          type: string\n        name:\n          description: The name of the person to whom you are sending an email.\n          type: string\n      required:\n        - email\n      title: Email Object\n      type: object\n    GetAlertsResponse:\n      properties:\n        created_at:\n          description: A Unix timestamp indicating when the alert was created.\n          type: integer\n        email_to:\n          description: The email address that the alert will be sent to.\n          type: string\n        frequency:\n          description: If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example, \"daily\", \"weekly\", or \"monthly\".\n          type: string\n        id:\n          description: The ID of the alert.\n          type: integer\n        percentage:\n          description: If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\n          type: integer\n        type:\n          description: The type of alert.\n          enum:\n            - usage_limit\n            - stats_notification\n          type: string\n        updated_at:\n          description: A Unix timestamp indicating when the alert was last modified.\n          type: integer\n      required:\n        - created_at\n        - email_to\n        - id\n        - type\n      type: object\n    PostAlertsResponse:\n      properties:\n        created_at:\n          description: A Unix timestamp indicating when the alert was created.\n          type: integer\n        email_to:\n          description: The email address that the alert will be sent to.\n          type: string\n        frequency:\n          type: string\n        id:\n          description: The ID of the alert.\n          type: integer\n        percentage:\n          type: integer\n        type:\n          description: The type of alert.\n          type: string\n        updated_at:\n          description: A Unix timestamp indicating when the alert was last modified.\n          type: integer\n      required:\n        - created_at\n        - email_to\n        - id\n        - type\n        - updated_at\n      type: object\n    GetAlertByIdResponse:\n      properties:\n        created_at:\n          description: A Unix timestamp indicating when the alert was created.\n          type: integer\n        email_to:\n          description: The email address that the alert will be sent to.\n          type: string\n        frequency:\n          description: 'If the alert is of type stats_notification, this indicates how frequently the stats notifications will be sent. For example: \"daily\", \"weekly\", or \"monthly\".'\n          type: string\n        id:\n          description: The ID of the alert.\n          type: integer\n        percentage:\n          description: If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\n          type: integer\n        type:\n          description: The type of alert.\n          enum:\n            - usage_alert\n            - stats_notification\n          type: string\n        updated_at:\n          description: A Unix timestamp indicating when the alert was last modified.\n          type: integer\n      required:\n        - created_at\n        - email_to\n        - id\n        - type\n        - updated_at\n      type: object\n    PatchAlertsResponse:\n      properties:\n        created_at:\n          description: A Unix timestamp indicating when the alert was created.\n          type: integer\n        email_to:\n          description: The email address that the alert will be sent to.\n          type: string\n        frequency:\n          type: string\n        id:\n          description: The ID of the alert.\n          type: integer\n        percentage:\n          description: If the alert is of type usage_limit, this indicates the percentage of email usage that must be reached before the alert will be sent.\n          type: integer\n        type:\n          description: The type of alert.\n          enum:\n            - usage_alert\n            - stats_notification\n          type: string\n        updated_at:\n          description: A Unix timestamp indicating when the alert was last modified.\n          type: integer\n      required:\n        - created_at\n        - email_to\n        - id\n        - type\n        - updated_at\n      type: object\n  securitySchemes:\n    Authorization:\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-tools@11ae9f6245584cae7e7e7016eff92c0bf0d27bac/-/blob/openapi-cli/src/test/resources/generators/client/file_provider/swagger/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-tools/blob/11ae9f6245584cae7e7e7016eff92c0bf0d27bac/openapi-cli/src/test/resources/generators/client/file_provider/swagger/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}