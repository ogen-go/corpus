{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "Session.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/Session.yaml",
			"byteSize": 6396,
			"content": "components:\n  schemas:\n    CreateSessionRequest:\n      properties:\n        sessionToken:\n          type: string\n      type: object\n      x-okta-tags:\n      - Session\n    Session:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        amr:\n          items:\n            $ref: '#/components/schemas/SessionAuthenticationMethod'\n          readOnly: true\n          type: array\n        createdAt:\n          format: date-time\n          readOnly: true\n          type: string\n        expiresAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        idp:\n          $ref: '#/components/schemas/SessionIdentityProvider'\n        lastFactorVerification:\n          format: date-time\n          readOnly: true\n          type: string\n        lastPasswordVerification:\n          format: date-time\n          readOnly: true\n          type: string\n        login:\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/SessionStatus'\n        userId:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: read\n        arguments:\n        - dest: sessionId\n          src: id\n        operationId: getSession\n      - alias: delete\n        arguments:\n        - dest: sessionId\n          src: id\n        operationId: endSession\n      x-okta-operations:\n      - alias: refresh\n        arguments:\n        - dest: sessionId\n          src: id\n        operationId: refreshSession\n      x-okta-tags:\n      - Session\n    SessionAuthenticationMethod:\n      enum:\n      - pwd\n      - swk\n      - hwk\n      - otp\n      - sms\n      - tel\n      - geo\n      - fpt\n      - kba\n      - mfa\n      type: string\n      x-okta-tags:\n      - Session\n    SessionIdentityProvider:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        type:\n          $ref: '#/components/schemas/SessionIdentityProviderType'\n      type: object\n      x-okta-tags:\n      - Session\n    SessionIdentityProviderType:\n      enum:\n      - ACTIVE_DIRECTORY\n      - LDAP\n      - OKTA\n      - FEDERATION\n      - SOCIAL\n      type: string\n      x-okta-tags:\n      - Session\n    SessionStatus:\n      enum:\n      - ACTIVE\n      - MFA_ENROLL\n      - MFA_REQUIRED\n      type: string\n      x-okta-tags:\n      - Session\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    sessions:\n      id: okta.session.sessions\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1sessions~1{sessionId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1sessions~1{sessionId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1sessions/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        refresh:\n          operation:\n            $ref: '#/paths/~1api~1v1~1sessions~1{sessionId}~1lifecycle~1refresh/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: sessions\n      title: sessions\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/sessions:\n    post:\n      description: Creates a new session for a user with a valid session token. Use\n        this API if, for example, you want to set the session cookie yourself instead\n        of allowing Okta to set it, or want to hold the session ID in order to delete\n        a session via the API instead of visiting the logout URL.\n      operationId: createSession\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSessionRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n          description: Success\n      security:\n      - api_token: []\n      summary: Create Session with Session Token\n      tags:\n      - Session\n      x-codegen-request-body-name: createSessionRequest\n  /api/v1/sessions/{sessionId}:\n    delete:\n      operationId: endSession\n      parameters:\n      - in: path\n        name: sessionId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Close Session\n      tags:\n      - Session\n    get:\n      description: Get details about a session.\n      operationId: getSession\n      parameters:\n      - in: path\n        name: sessionId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Session\n  /api/v1/sessions/{sessionId}/lifecycle/refresh:\n    post:\n      operationId: refreshSession\n      parameters:\n      - in: path\n        name: sessionId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Session'\n          description: Success\n      security:\n      - api_token: []\n      summary: Refresh Session\n      tags:\n      - Session\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/okta/v0.1.0/services/Session.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/okta/v0.1.0/services/Session.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}