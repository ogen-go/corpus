{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rd-alliance/metadata-catalog-dev"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 48625,
			"content": "openapi: 3.0.1\ninfo:\n  title: Metadata Standards Catalog\n  description: \"The RDA [Metadata Standards Catalog](https://rdamsc.bath.ac.uk/) is a collaborative, open directory of metadata standards applicable to research data. It is offered to the international academic community to help address infrastructure challenges.\"\n  termsOfService: https://rdamsc.bath.ac.uk/terms-of-use\n  version: 1.0.0\nexternalDocs:\n  description: Browse the source code\n  url: https://www.github.com/rd-alliance/metadata-catalog-dev\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/alex-ball/rda-metadata-standards-catalog/1.0.0\n- description: Live server\n  url: https://rdamsc.bath.ac.uk\ntags:\n- name: query\n  description: Search the catalog\n- name: m\n  description: Metadata schemes\n- name: g\n  description: Organizations (groups)\n- name: t\n  description: Tools\n- name: c\n  description: Mappings (crosswalks)\n- name: e\n  description: Endorsements\n- name: user\n  description: Manage your API account\npaths:\n  /query/schemes:\n    post:\n      tags:\n      - query\n      - m\n      summary: \"Search for metadata schemes\"\n      requestBody:\n        description: \"You must provide one or more parameters. Parameters are combined with Boolean OR.\"\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: \"Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within titles.\"\n                keyword:\n                  type: string\n                  description: \"Pipe-separated list of keywords to search for, e.g. Astronomy|Biology. Returns schemes tagged with at least one of the exact given keywords or one of their narrower or broader terms.\"\n                keyword_id:\n                  type: string\n                  description: \"Pipe separated list of URIs from the UNESCO Vocabulary. Returns schemes tagged with at least one of the exact given keywords or one of their narrower or broader terms. (You may notice a difference in behaviour from `keyword` since it skips an initial translation step.)\"\n                identifier:\n                  type: string\n                  description: \"Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:m`.\"\n                funder:\n                  type: string\n                  description: \"Python-compatible [regular expression](https://docs.python.org/3/library/re.html), to search for within names of organizations listed as funders of the scheme.\"\n                funder_id:\n                  type: string\n                  description: \"Single, exact identifier to search for within the IDs of organizations listed as funders of the scheme.\"\n                dataType:\n                  type: string\n                  description: \"Single, exact data type label or URI to search for within the list of data types.\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n  /query/organizations:\n    post:\n      tags:\n      - query\n      - g\n      summary: \"Search for organizations\"\n      requestBody:\n        description: \"You must provide one or more parameters. Parameters are combined with Boolean OR.\"\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: \"Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within organization names.\"\n                identifier:\n                  type: string\n                  description: \"Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:g`.\"\n                type:\n                  type: string\n                  description: \"Type of organization to search for\"\n                  enum:\n                  - standards body\n                  - archive\n                  - professional group\n                  - coordination group\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n  /query/tools:\n    post:\n      tags:\n      - query\n      - t\n      summary: \"Search for tools\"\n      requestBody:\n        description: \"You must provide one or more parameters. Parameters are combined with Boolean OR.\"\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                title:\n                  type: string\n                  description: \"Python-compatible [regular expression](https://docs.python.org/3/library/re.html), for searching within titles.\"\n                identifier:\n                  type: string\n                  description: \"Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:t`.\"\n                type:\n                  type: string\n                  description: \"Type of tool to search for: terminal(⟨platform⟩), graphical(⟨platform⟩), web service, web application.\"\n                supported_scheme:\n                  type: string\n                  description: \"Internal metadata scheme identifier to search for among the schemes supported by the tool: msc:m⟨number⟩.\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n  /query/mappings:\n    post:\n      tags:\n      - query\n      - c\n      summary: \"Search for metadata mappings\"\n      requestBody:\n        description: \"You must provide one or more parameters. `input_scheme` and `output_scheme` are combined with Boolean AND if both are given, while `identifier` combines with the others with Boolean OR.\"\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                identifier:\n                  type: string\n                  description: \"Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:c`.\"\n                input_scheme:\n                  type: string\n                  description: \"Internal metadata scheme identifier to search for among the schemes that can be used as input by the mapping: msc:m⟨number⟩.\"\n                output_scheme:\n                  type: string\n                  description: \"Internal metadata scheme identifier to search for among the schemes that can be constructed as output by the mapping: msc:m⟨number⟩.\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n  /query/endorsements:\n    post:\n      tags:\n      - query\n      - e\n      summary: \"Search for endorsements\"\n      requestBody:\n        description: \"You must provide one or more parameters. Parameters are combined with Boolean OR.\"\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                identifier:\n                  type: string\n                  description: \"Single, exact identifier to search for. DOIs should start `10.` and internal identifiers with `msc:e`.\"\n                endorsed_scheme:\n                  type: string\n                  description: \"Internal metadata scheme identifier to search for among the schemes endorsed by the endorsement: msc:m⟨number⟩.\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryResponse'\n  /api/m:\n    get:\n      tags:\n      - m\n      summary: \"List all metadata schemes\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  metadata-schemes:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ItemResponse'\n    post:\n      tags:\n      - m\n      summary: \"Submit a new metadata scheme record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetadataScheme'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api/m{int}:\n    get:\n      tags:\n      - m\n      summary: \"Retrieve an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataScheme'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n    put:\n      tags:\n      - m\n      summary: \"Modify an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetadataScheme'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - m\n      summary: \"Remove an existing metadata scheme record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Metadata scheme not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api/g:\n    get:\n      tags:\n      - g\n      summary: \"List all organizations\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  organizations:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ItemResponse'\n    post:\n      tags:\n      - g\n      summary: \"Submit a new organization record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api/g{int}:\n    get:\n      tags:\n      - g\n      summary: \"Retrieve an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        404:\n          description: \"Organization not found\"\n          content: {}\n    put:\n      tags:\n      - g\n      summary: \"Modify an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Organization not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - g\n      summary: \"Remove an existing organization record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Organization not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api/t:\n    get:\n      tags:\n      - t\n      summary: \"List all tools\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  organizations:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ItemResponse'\n    post:\n      tags:\n      - t\n      summary: \"Submit a new tool record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tool'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api/t{int}:\n    get:\n      tags:\n      - t\n      summary: \"Retrieve an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tool'\n        404:\n          description: \"Tool not found\"\n          content: {}\n    put:\n      tags:\n      - t\n      summary: \"Modify an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tool'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Tool not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - t\n      summary: \"Remove an existing tool record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Tool not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api/c:\n    get:\n      tags:\n      - c\n      summary: \"List all mappings\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  mappings:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ItemResponse'\n    post:\n      tags:\n      - c\n      summary: \"Submit a new mapping record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mapping'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api/c{int}:\n    get:\n      tags:\n      - c\n      summary: \"Retrieve an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Mapping'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n    put:\n      tags:\n      - c\n      summary: \"Modify an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mapping'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - c\n      summary: \"Remove an existing mapping record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Mapping not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api/e:\n    get:\n      tags:\n      - e\n      summary: \"List all endorsements\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  endorsements:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ItemResponse'\n    post:\n      tags:\n      - e\n      summary: \"Submit a new endorsement record\"\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Endorsement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\n  /api/e{int}:\n    get:\n      tags:\n      - e\n      summary: \"Retrieve an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Endorsement'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n    put:\n      tags:\n      - e\n      summary: \"Modify an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      requestBody:\n        description: \"Complete record in JSON.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Endorsement'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseSuccess'\n        400:\n          description: Failure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionResponseFailure'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n      security:\n      - api_user: []\n    delete:\n      tags:\n      - e\n      summary: \"Remove an existing endorsement record\"\n      parameters:\n      - name: int\n        in: path\n        required: true\n        description: \"Numeric portion of the MSC ID.\"\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResponse'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        404:\n          description: \"Endorsement not found\"\n          content: {}\n      security:\n      - api_user: []\n  /api/reset-password:\n    post:\n      tags:\n      - user\n      summary: \"Change API user password\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                new_password:\n                  type: string\n                  description: \"New password to use for subsequent calls.\"\n              required:\n              - new_password\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                    description: \"Confirmation of the username for which the password was reset.\"\n                  password_reset:\n                    type: boolean\n                    description: \"True if the reset was successful.\"\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        500:\n          description: \"Internal Server Error: password could not be reset\"\n          content: {}\n      security:\n      - api_user: []\n  /api/token:\n    get:\n      tags:\n      - user\n      summary: \"Request an authorization token\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                    description: \"Authorization token valid for 600 seconds.\"\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n      security:\n      - api_user: []\ncomponents:\n  schemas:\n    Endorsement:\n      type: object\n      properties:\n        slug:\n          type: string\n          description: \"Semantic identifier for the record.\"\n          pattern: '^[-a-z0-9]{1,71}$'\n        identifiers:\n          type: array\n          description: \"Strings used to identify the endorsement.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        citation:\n          type: string\n          description: \"A traditional formatted citation for the endorsement statement or a document that contains it.\"\n        issued:\n          type: string\n          pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n          description: \"The date on which the endorsement was made. Use of this element does not imply that the originating organization reviews the endorsement for validity. If both `issued` and `valid` are given, issued is ignored.\"\n        valid:\n          type: string\n          pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?(/\\d{4}(-\\d{2}(-\\d{2})?)?)?$'\n          description: \"This can be either a single date or a date range.\n\nA single date expresses when the endorsement was made, and implies that the originating organization currently endorses the standard. (If that implication is inappropriate, the date should be given under `issued` instead.)\n\nIf a date range is provided, the first date expresses when the endorsement was made, and the second date expresses the date on which the endorsement was withdrawn.\"\n        locations:\n          type: array\n          description: \"Locations where further information about the endorsement may be accessed.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the Web resource.\"\n              type:\n                type: string\n                description: \"A term describing the type of resource.\"\n                enum:\n                  - document\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the endorsement.\"\n                enum:\n                - \"endorsed scheme\"\n                - \"originator\"\n    Mapping:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            slug:\n              type: string\n              description: \"Semantic identifier for the record. Should be in the form ⟨scheme-slug⟩_TO_⟨scheme-slug⟩.\"\n              pattern: '^[-_TOa-z0-9]{6,71}$'\n        - $ref: '#/components/schemas/MappingPart'\n        - type: object\n          properties:\n            version:\n              type: array\n              items:\n                allOf:\n                - type: object\n                  properties:\n                    number:\n                      type: string\n                      description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n                    date:\n                      type: string\n                      pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                      description: \"The date on which the version was published.\"\n                - $ref: '#/components/schemas/MappingPart'\n    MetadataScheme:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            slug:\n              type: string\n              description: \"Semantic identifier for the record.\"\n              pattern: '^[-a-z0-9]{1,71}$'\n        - $ref: '#/components/schemas/MetadataSchemePart'\n        - type: object\n          properties:\n            version:\n              type: array\n              items:\n                allOf:\n                - type: object\n                  properties:\n                    number:\n                      type: string\n                      description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n                    available:\n                      type: string\n                      pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                      description: \"The date on which this version was made available as a draft or proposal. A version with an `available` date but no `issued` date is assumed not to be approved by its maintainer for use. (This element is provided to allow schemes or versions to be entered into the MSC prior to official approval; retrospectively uncovering this information for versions that have been issued is not encouraged.)\"\n                    issued:\n                      type: string\n                      pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                      description: \"The date on which the version was released or published. This also implies the date on which the version was approved for use by its maintainer, unless an explicit `valid` date is also given.\"\n                    valid:\n                      type: string\n                      pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?(/\\d{4}(-\\d{2}(-\\d{2})?)?)?$'\n                      description: \"A version of a scheme is assumed to be approved for use by its maintainer from its `issued` date until the issued date of a subsequent version. If this is not the case, (for example, where multiple versions are approved simultaneously), `valid` expresses the period for which a version is approved for use. A single date indicates that the version is still approved for use, despite the issue of subsequent versions. The second date in a range indicates the date on which approval was withdrawn.\"\n                - $ref: '#/components/schemas/MetadataSchemePart'\n    Organization:\n      type: object\n      properties:\n        slug:\n          type: string\n          description: \"Semantic identifier for the record.\"\n          pattern: '^[-a-z0-9]{1,71}$'\n        identifiers:\n          type: array\n          description: \"Strings used to identify the organization.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        name:\n          type: string\n          description: \"The full name of the organization as it is usually given.\"\n        description:\n          type: string\n          description: \"A sentence or several describing the organization and its relevance to research data and metadata.\"\n        types:\n          type: array\n          items:\n            type: string\n            description: \"A term that describes the organization.\"\n            enum:\n            - standards body\n            - archive\n            - professional group\n            - coordination group\n        locations:\n          type: array\n          description: \"Locations where further information about the organization may be accessed.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the Web resource.\"\n              type:\n                type: string\n                description: \"A term describing the type of resource.\"\n                enum:\n                  - email\n                  - website\n    Tool:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            slug:\n              type: string\n              description: \"Semantic identifier for the record.\"\n              pattern: '^[-a-z0-9]{1,71}$'\n        - $ref: '#/components/schemas/ToolPart'\n        - type: object\n          properties:\n            version:\n              type: array\n              items:\n                allOf:\n                - type: object\n                  properties:\n                    number:\n                      type: string\n                      description: \"The number, code or other string used to identify the version, omitting any initial “v”, “v.” or “ver.”.\"\n                    date:\n                      type: string\n                      pattern: '^\\d{4}(-\\d{2}(-\\d{2})?)?$'\n                      description: \"The date on which the version was published.\"\n                - $ref: '#/components/schemas/ToolPart'\n    Identifier:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \"The identifier string. DOIs should start `10.`.\"\n        scheme:\n          type: string\n          description: \"A keyword indicating the scheme from which the identifier is drawn. Must be ‘RDA-MSCWG’ for internal identifiers and ‘DOI’ for DOIs. Otherwise optional and unrestricted.\"\n    MappingPart:\n      type: object\n      properties:\n        identifiers:\n          type: array\n          description: \"Strings used to identify the mapping or version.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        description:\n          type: string\n          description: \"A short description of the intended use of the mapping, including any assumptions or simplifications used, or any known limitations.\"\n        creators:\n          type: array\n          description: \"Persons or organizations responsible for creating, maintaining, or approving the mapping (the emphasis here is on establishing provenance/responsibility rather than a strict understanding of creation). If a maintaining organization has an entry in the MSC, it should be given under `relatedEntities` with type ‘maintainer’ rather than here.\"\n          items:\n            type: object\n            properties:\n              fullName:\n                type: string\n                description: \"The full name of the person or organization as it is usually given. If absent, a concatenation of the `givenName` and `familyName` will be used for display.\"\n              givenName:\n                type: string\n                description: \"The given name(s) of the person.\"\n              familyName:\n                type: string\n                description: \"The family name of the person.\"\n        locations:\n          type: array\n          description: \"Locations where further information about the tool may be accessed.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the Web resource.\"\n              type:\n                type: string\n                description: \"A keyword describing the type of resource. Must be one of ‘document’, ‘library (⟨language⟩)’, or ‘executable (⟨platform⟩)’, where ⟨language⟩ is a programming language (e.g. Perl, PHP, Python) and ⟨platform⟩ is ‘Windows’, ‘Mac OS X’, ‘Linux’, ‘BSD’, ‘cross-platform’ or similar.\"\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the mapping.\"\n                enum:\n                - \"input scheme\"\n                - \"output scheme\"\n                - \"maintainer\"\n                - \"funder\"\n    MetadataSchemePart:\n      type: object\n      properties:\n        identifiers:\n          type: array\n          description: \"Strings used to identify the scheme or version.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        title:\n          type: string\n          description: \"The full, human understandable name of the metadata scheme.\n\n  - If the scheme is known by an abbreviation, put this at the start of the title, then give the expanded form in parentheses, e.g. “SDMX (Statistical Data and Metadata Exchange)”.\n\n  - If the title is in English, use title case, i.e. give each significant word a capital letter. Do not use an irregular case to indicate how an abbreviation was defined, e.g. do not write “Statistical Data and Metadata eXchange”.\"\n        description:\n          type: string\n          description: \"A few sentences describing the nature of the standard and for what it is meant to be used. If any of the information in the remainder of the record needs be clarified, perhaps because the reality is more nuanced than the coarse semantics provide for, then an explanation can be given here.\"\n        keywords:\n          type: array\n          description: \"Keywords indicating the disciplinary scope of the scheme. Provide as few terms as possible to describe the subject areas in which the scheme is most used and useful. In some cases, it may be better to use a broader term even if not all of the available narrower terms apply.\"\n          items:\n            type: string\n            description: \"A term drawn from the UNESCO Thesaurus; the preferred English labels of Domains, MicroThesauri and Concepts may be used. (If a label is used at more than one level, the broadest one will be inferred.) Schemes with no particular disciplinary focus should be given the special keyword ‘Multidisciplinary’.\"\n        dataTypes:\n          type: array\n          description: \"Data types most commonly described by metadata records that conform to this scheme. The MSC will take a “folksonomic” approach to the human-readable values for this element: users will be able to supply any value but will be encouraged to reuse values already in the database. Trivially different values may be merged/normalized by the MSC editors, unless clarified with a URL.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL pointing to an entry in a data type registry.\"\n              label:\n                type: string\n                description: \"Human-readable term.\"\n        locations:\n          type: array\n          description: \"Locations where further information about the scheme may be accessed.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the Web resource. Normalized specifications hosted by the MSC should be specified using a relative URL.\"\n              type:\n                type: string\n                description: \"A keyword describing the type of resource.\"\n                enum:\n                  - document\n                  - DTD\n                  - RDA-MIG\n                  - RDFS\n                  - website\n                  - XSD\n        samples:\n          type: array\n          description: \"Metadata records conforming to the scheme.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the sample record. For samples hosted by the MSC, the URL should be specified in relative form.\"\n              title:\n                type: string\n                description: \"The value of the title element from the sample record, or an equivalent short summary of what the sample record describes.\"\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the scheme.\"\n                enum:\n                - \"parent scheme\"\n                - \"maintainer\"\n                - \"funder\"\n                - \"user\"\n                - \"endorsement\"\n    ToolPart:\n      type: object\n      properties:\n        identifiers:\n          type: array\n          description: \"Strings used to identify the tool or version.\"\n          items:\n            $ref: '#/components/schemas/Identifier'\n        title:\n          type: string\n          description: \"The full, human understandable name of the tool.\n\n  - If the tool is known by an abbreviation, put this at the start of the title, then give the expanded form in parentheses, e.g. “CMOR (Climate Model Output Rewriter)”.\n\n  - If the title is in English, use title case, i.e. give each significant word a capital letter. Do not use an irregular case to indicate how an abbreviation was defined, e.g. do not write “eXtensible Editor”.\"\n        description:\n          type: string\n          description: \"A short description of the intended use of the tool, and its capabilities.\"\n        creators:\n          type: array\n          description: \"Persons or organizations responsible for creating, maintaining, or approving the tool (the emphasis here is on establishing provenance/responsibility rather than a strict understanding of creation). If a maintaining organization has an entry in the MSC, it should be given under `relatedEntities` with type ‘maintainer’ rather than here.\"\n          items:\n            type: object\n            properties:\n              fullName:\n                type: string\n                description: \"The full name of the person or organization as it is usually given. If absent, a concatenation of the `givenName` and `familyName` will be used for display.\"\n              givenName:\n                type: string\n                description: \"The given name(s) of the person.\"\n              familyName:\n                type: string\n                description: \"The family name of the person.\"\n        types:\n          type: array\n          description: \"Terms describing how a user interacts with the tool.\"\n          items:\n            type: string\n            description: \"Must be one of ‘terminal (⟨platform⟩)’, ‘graphical (⟨platform⟩)’, ‘web service’, or ‘web application’, where ⟨platform⟩ is ‘Windows’, ‘Mac OS X’, ‘Linux’, ‘BSD’, ‘cross-platform’ or similar.\"\n        locations:\n          type: array\n          description: \"Locations where further information about the tool may be accessed.\"\n          items:\n            type: object\n            properties:\n              url:\n                type: string\n                description: \"URL of the Web resource.\"\n              type:\n                type: string\n                description: \"A keyword describing the type of resource.\"\n                enum:\n                  - application\n                  - document\n                  - service\n                  - website\n        relatedEntities:\n          type: array\n          description: \"Other entities in the MSC database.\"\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                description: \"Full MSC ID of the entity.\"\n                pattern: '^msc:(m|g|t|c|e)\\d+$'\n              role:\n                type: string\n                description: \"The manner of the relationship between the entity and the tool.\"\n                enum:\n                - \"supported scheme\"\n                - \"maintainer\"\n                - \"funder\"\n    DeleteResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: \"Whether the record was deleted successfully.\"\n        id:\n          type: string\n          description: \"Full MSC ID of deleted record.\"\n          pattern: '^msc:(m|g|t|c|e)\\d+$'\n    ItemResponse:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: \"Numeric portion of the MSC ID.\"\n        slug:\n          type: string\n          description: \"A less opaque identifying string for the record, derived from the title of a metadata scheme, the name of an organization, etc.\"\n    QueryResponse:\n      type: object\n      properties:\n        ids:\n          type: array\n          items:\n            type: string\n            description: \"Full MSC ID.\"\n            pattern: '^msc:(m|g|t|c|e)\\d+$'\n    SubmissionResponseSuccess:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: \"Whether record passed validation.\"\n          enum:\n          - true\n        conformance:\n          type: string\n          description: \"Conformance level of the record.\"\n          enum:\n            - complete\n            - useful\n            - valid\n        id:\n          type: string\n          description: \"Full MSC ID of newly created record.\"\n          pattern: '^msc:(m|g|t|c|e)\\d+$'\n    SubmissionResponseFailure:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: \"Whether record passed validation.\"\n          enum:\n          - false\n        conformance:\n          type: string\n          description: \"Conformance level of the record.\"\n          enum:\n            - invalid\n        errors:\n          type: object\n          description: \"Errors returned by form validation, listed under the places where they occurred.\"\n          example: { \"locations\": [ { \"type\": [ \"Not a valid choice\" ] } ] }\n  responses:\n    UnauthorizedError:\n      description: Unauthorized access\n      headers:\n        WWW_Authenticate:\n          schema:\n            type: string\n  securitySchemes:\n    api_user:\n      type: http\n      description: \"If using an API token, use this as the username and any arbitrary string as the password.\"\n      scheme: basic\n",
			"canonicalURL": "/github.com/rd-alliance/metadata-catalog-dev@243e2ae66d218246b2f379d8f25af6d8f342caef/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rd-alliance/metadata-catalog-dev/blob/243e2ae66d218246b2f379d8f25af6d8f342caef/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}