{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hashicorp/consul-terraform-sync"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 17097,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: CTS API\n  description: API Documentation for Consul-Terraform-Sync, for more information see [Consul NIA API](https://www.consul.io/docs/nia/api)\n  contact:\n    name: api-tooling-core\n  license:\n    name: MPL-2.0 License\n    url: https://github.com/hashicorp/consul-terraform-sync/blob/main/LICENSE\nservers:\n  - url: '{protocol}://{host}:{port}'\n    description: The Consul-Terraform-Sync Server\n    variables:\n      protocol:\n        enum:\n          - 'http'\n          - 'https'\n        default: 'http'\n      host:\n        default: 'localhost'\n      port:\n        default: '8558'\npaths:\n  /v1/health:\n    get:\n      summary: Gets health status\n      operationId: getHealth\n      tags:\n        - health\n      description: Checks the health of CTS\n      responses:\n        '200':\n          description: CTS is healthy\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheckResponse'\n        default:\n          description: CTS is unhealthy\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheckResponse'\n\n  /v1/tasks:\n    post:\n      summary: Creates a new task\n      operationId: createTask\n      tags:\n        - tasks\n      description: |\n        Creates a new task\n      parameters:\n        - name: run\n          in: query\n          description: |\n            Different modes for running. Supports run now which runs the task immediately\n            and run inspect which creates a dry run task that is inspected and discarded\n            at the end of the inspection.\n          required: false\n          schema:\n            type: string\n            enum: [now, inspect]\n      requestBody:\n        description: Task to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskRequest'\n      responses:\n        '200':\n          description: Task response with inspection, task not created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResponse'\n        '201':\n          description: Task response, task is created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      summary: Gets all tasks\n      operationId: getAllTasks\n      description: Retrieves information for all tasks\n      tags:\n        - tasks\n      responses:\n        '200':\n          description: Tasks retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TasksResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /v1/tasks/{name}:\n    delete:\n      summary: Marks a task for deletion\n      operationId: deleteTaskByName\n      description: |\n        Marks a single task for deletion based on the name provided. The task will be\n        deleted once it is not running.\n      tags:\n        - tasks\n      parameters:\n        - name: name\n          in: path\n          description: Name of task to delete\n          required: true\n          schema:\n            type: string\n            example: \"taskA\"\n      responses:\n        '202':\n          description: Task marked for deletion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskDeleteResponse'\n              example:\n                request_id: \"bb63cd70-8f45-4f42-b27b-bc2a6f4931e6\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      summary: Gets a task by name\n      operationId: getTaskByName\n      description: Retrieves information for a single task based on the name provided\n      tags:\n        - tasks\n      parameters:\n        - name: name\n          in: path\n          description: Name of task to retrieve\n          required: true\n          schema:\n            type: string\n            example: \"taskA\"\n      responses:\n        '200':\n          description: Task retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskResponse'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\ncomponents:\n  schemas:\n    TaskRequest:\n      type: object\n      additionalProperties: false\n      properties:\n        task:\n          $ref: '#/components/schemas/Task'\n      required:\n        - task\n\n    TasksResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n        request_id:\n          $ref: '#/components/schemas/RequestID'\n      required:\n        - request_id\n\n    TaskResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        task:\n          $ref: '#/components/schemas/Task'\n        request_id:\n          $ref: '#/components/schemas/RequestID'\n        run:\n          $ref: '#/components/schemas/Run'\n        error:\n          $ref: '#/components/schemas/Error'\n      required:\n        - request_id\n\n    TaskDeleteResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        request_id:\n          $ref: '#/components/schemas/RequestID'\n        error:\n          $ref: '#/components/schemas/Error'\n      required:\n        - request_id\n\n    ErrorResponse:\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n        request_id:\n          $ref: '#/components/schemas/RequestID'\n      required:\n        - error\n        - request_id\n\n    Task:\n      type: object\n      additionalProperties: false\n      properties:\n        description:\n          description: The human readable text to describe the task.\n          type: string\n          example: \"an example task\"\n        enabled:\n          description: Whether the task is enabled or disabled from executing.\n          type: boolean\n          example: true\n          default: true\n        name:\n          description: The unique name of the task.\n          type: string\n          example: \"taskA\"\n        providers:\n          description: The list of provider names that the task's module uses.\n          type: array\n          items:\n            type: string\n          example: []\n        module:\n          description: The location of the Terraform module.\n          type: string\n          example: \"org/example/module\"\n        variables:\n          $ref: '#/components/schemas/VariableMap'\n        version:\n          description: The version of the configured module that the task uses. Defaults to the latest version if not set.\n          type: string\n          example: \"1.0.0\"\n        buffer_period:\n          $ref: '#/components/schemas/BufferPeriod'\n        condition:\n          $ref: '#/components/schemas/Condition'\n        module_input:\n          $ref: '#/components/schemas/ModuleInput'\n        terraform_version:\n           type: string\n           description: Deprecated, use task.terraform_cloud_workspace.terraform_version instead. Enterprise only. The version of Terraform to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver. Defaults to the latest compatible version if not set.\n           example: \"1.0.0\"\n        terraform_cloud_workspace:\n          $ref: '#/components/schemas/TerraformCloudWorkspace'\n\n      required:\n        - name\n        - module\n        - condition\n      example:\n        condition:\n          services:\n            names: [\"web\", \"api\"]\n        description: \"A basic task\"\n        enabled: true\n        name: taskC\n        providers: []\n        module: org/example/module\n        variables:\n          var1: example.field\n        version: 1.0.0\n\n    BufferPeriod:\n      type: object\n      additionalProperties: false\n      description: The buffer period for triggering task execution.\n      properties:\n        enabled:\n          description: Whether the buffer period is enabled or disabled. Defaults to the global buffer period configured for CTS.\n          type: boolean\n          example: true\n        max:\n          description: The maximum period of time to wait after changes are detected before triggering the task. Defaults to the global buffer period configured for CTS.\n          type: string\n          example: \"5s\"\n        min:\n          description: \tThe minimum period of time to wait after changes are detected before triggering the task. Defaults to the global buffer period configured for CTS.\n          type: string\n          example: \"20s\"\n\n    Condition:\n      type: object\n      additionalProperties: false\n      description: The condition on which to trigger the task to execute. If the task has the deprecated services field configured as a module input, it is represented here as condition.services.\n      properties:\n        catalog_services:\n          $ref: '#/components/schemas/CatalogServicesCondition'\n        services:\n          $ref: '#/components/schemas/ServicesCondition'\n        consul_kv:\n          $ref: '#/components/schemas/ConsulKVCondition'\n        schedule:\n          $ref: '#/components/schemas/ScheduleCondition'\n\n    ModuleInput:\n      type: object\n      additionalProperties: false\n      description: The additional module input(s) that the tasks provides to the Terraform module on execution. If the task has the deprecated services field configured as a module input, it is represented here as module_input.services.\n      properties:\n        services:\n          $ref: '#/components/schemas/ServicesModuleInput'\n        consul_kv:\n          $ref: '#/components/schemas/ConsulKVModuleInput'\n\n    VariableMap:\n      description: The map of variables that are provided to the task's module.\n      type: object\n      additionalProperties:\n        type: string\n\n    ServicesCondition:\n      type: object\n      additionalProperties: false\n      properties:\n        regexp:\n          type: string\n          example: \"web.*\"\n        names:\n          type: array\n          items:\n            type: string\n          example: [\"web\", \"api\"]\n        filter:\n          type: string\n          example: '\\\"test\\\" in Service.Tags'\n        datacenter:\n          type: string\n          example: \"dc1\"\n        namespace:\n          type: string\n          example: \"default\"\n        cts_user_defined_meta:\n          type: object\n          additionalProperties:\n            type: string\n        use_as_module_input:\n          type: boolean\n          default: true\n          example: false\n    CatalogServicesCondition:\n      type: object\n      additionalProperties: false\n      properties:\n        datacenter:\n          type: string\n          example: \"dc1\"\n        regexp:\n          type: string\n          example: \"web.*\"\n        namespace:\n          type: string\n          example: \"default\"\n        node_meta:\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            key: value\n        use_as_module_input:\n          type: boolean\n          default: true\n          example: false\n      required:\n        - regexp\n    ConsulKVCondition:\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          type: string\n          example: \"my-key\"\n        recurse:\n          type: boolean\n          default: false\n          example: false\n        datacenter:\n          type: string\n          example: \"dc1\"\n        namespace:\n          type: string\n          example: \"default\"\n        use_as_module_input:\n          type: boolean\n          default: true\n          example: false\n      required:\n        - path\n    ScheduleCondition:\n      type: object\n      additionalProperties: false\n      properties:\n        cron:\n          type: string\n          example: \"* * * * Mon\"\n      required:\n        - cron\n\n    ServicesModuleInput:\n      type: object\n      additionalProperties: false\n      properties:\n        regexp:\n          type: string\n          example: \"web.*\"\n        names:\n          type: array\n          items:\n            type: string\n          example: [\"web\", \"api\"]\n        filter:\n          type: string\n          example: '\\\"test\\\" in Service.Tags'\n        datacenter:\n          type: string\n          example: \"dc1\"\n        namespace:\n          type: string\n          example: \"default\"\n        cts_user_defined_meta:\n          type: object\n          additionalProperties:\n            type: string\n    ConsulKVModuleInput:\n      type: object\n      additionalProperties: false\n      properties:\n        path:\n          type: string\n          example: \"my-key\"\n        recurse:\n          type: boolean\n          default: false\n          example: false\n        datacenter:\n          type: string\n          example: \"dc1\"\n        namespace:\n          type: string\n          example: \"default\"\n      required:\n        - path\n\n    TerraformCloudWorkspace:\n      type: object\n      additionalProperties: false\n      description: Enterprise only. Configuration values to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver.\n      properties:\n        execution_mode:\n          type: string\n          example: \"agent\"\n          description: Enterprise only. Execution mode to set for the Terraform Cloud workspace associated with the task. Can only be \"remote\" or \"agent\". Defaults to \"remote\".\n        agent_pool_id:\n          type: string\n          example: \"apool-123\"\n          description: Enterprise only. Agent pool ID to set for the Terraform Cloud workspace associated with the task when the execution mode is \"agent\". Either agent_pool_id or agent_pool_name is required if execution mode is \"agent\". If both are set, then agent_pool_id takes precedence.\n        agent_pool_name:\n          type: string\n          example: \"test_agent_pool\"\n          description: Enterprise only. Name of agent pool to set for the Terraform Cloud workspace associated with the task when the execution mode is \"agent\". Either agent_pool_id or agent_pool_name is required if execution mode is \"agent\". If both are set, then agent_pool_id takes precedence.\n        terraform_version:\n           type: string\n           description: Enterprise only. The version of Terraform to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver. Defaults to the latest compatible version if not set.\n           example: \"1.0.0\"\n\n    Run:\n      type: object\n      additionalProperties: false\n      properties:\n        plan:\n          type: string\n          example: \"module.test-task.local_file.greeting_services: Refreshing state... [id=2d5049b47d16d9c4d15cc59950fdd3de24b79716]\\nmodule.test-task.local_file.greeting: Refreshing state... [id=69342c5c39e5ae5f0077aecc32c0f81811fb8193]\\n\\nTerraform used the selected providers to generate the following execution\\nplan. Resource actions are indicated with the following symbols:\\n-/+ destroy and then create replacement\\n\\nTerraform will perform the following actions:\\n\\n  # module.test-task.local_file.greeting_services must be replaced\\n-/+ resource \\\"local_file\\\" \\\"greeting_services\\\" {\\n      ~ content              = \u003c\u003c-EOT # forces replacement\\n          - Hello, api!\\n            Hello, web!\\n            Hello, web!\\n        EOT\\n      ~ id                   = \\\"2d5049b47d16d9c4d15cc59950fdd3de24b79716\\\" -\u003e (known after apply)\\n        # (3 unchanged attributes hidden)\\n    }\\n\\nPlan: 1 to add, 0 to change, 1 to destroy.\\n\"\n        changes_present:\n          type: boolean\n          description: Whether or not infrastructure changes were detected during task inspection.\n        tfc_run_url:\n          type: string\n          description: Enterprise only. URL of Terraform Cloud run that corresponds to the task run.\n          example: https://app.terraform.io/app/my-org/workspaces/my-ws/runs/run-abcDeFgHijk12345\n\n    RequestID:\n      type: string\n      format: uuid\n      example: \"bb63cd70-8f45-4f42-b27b-bc2a6f4931e6\"\n\n    Error:\n      type: object\n      additionalProperties: false\n      properties:\n        message:\n          type: string\n          example: \"this is an error message\"\n      required:\n        - message\n\n    HealthCheckResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        error:\n          $ref: '#/components/schemas/Error'\n      required:\n        - request_id\n",
			"canonicalURL": "/github.com/hashicorp/consul-terraform-sync@204a4a12c53e6daf1061d14d24fadaf8ebe4b649/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hashicorp/consul-terraform-sync/blob/204a4a12c53e6daf1061d14d24fadaf8ebe4b649/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}