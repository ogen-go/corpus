{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "graphhopper.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/graphhopper.com-1.0-swagger.yaml",
			"byteSize": 17148,
			"content": "openapi: 3.0.0\ninfo:\n  description: Our Route Optimization API solves the so called vehicle routing problem\n    fast. It calculates an optimal tour for a set of vehicles, services and\n    constraints\n  title: Route Optimization\n  version: \"1.0\"\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: https://twitter.com/graphhopper/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://graphhopper.com/api/1/vrp/swagger.json\n      version: \"2.0\"\n  x-providerName: graphhopper.com\nsecurity:\n  - api_key: []\npaths:\n  /optimize:\n    post:\n      description: \u003e\n        This endpoint for solving vehicle routing problems, i.e. traveling\n        salesman or vehicle routing problems, and returns the solution.\n      operationId: postVrp\n      parameters:\n        - description: your API key\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Request\"\n        description: Request object that contains the problem to be solved\n        required: true\n      responses:\n        \"200\":\n          description: A jobId you can use to retrieve your solution from server - see\n            solution endpoint.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JobId\"\n        \"400\":\n          description: Error occurred when reading client request. Request is invalid.\n        \"500\":\n          description: Error occurred on server side.\n      summary: Solves vehicle routing problems\n      tags:\n        - vrp\n  \"/solution/{jobId}\":\n    get:\n      description: \u003e\n        This endpoint returns the solution of a large problems. You can fetch it\n        with the job_id, you have been sent.\n      operationId: getSolution\n      parameters:\n        - description: your API key\n          in: query\n          name: key\n          required: true\n          schema:\n            type: string\n        - description: Request solution with jobId\n          in: path\n          name: jobId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A response containing the solution\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Response\"\n        \"400\":\n          description: Error occurred on client side such as invalid input.\n        \"500\":\n          description: Error occurred on server side.\n      summary: Return the solution associated to the jobId\n      tags:\n        - solution\nservers:\n  - url: https://graphhopper.com/api/1/vrp\ncomponents:\n  securitySchemes:\n    api_key:\n      in: query\n      name: key\n      type: apiKey\n  schemas:\n    Activity:\n      properties:\n        arr_time:\n          description: arrival time at this activity in ms\n          format: int64\n          type: integer\n        distance:\n          description: cumulated distance from start to this activity in m\n          format: int64\n          type: integer\n        driving_time:\n          description: driving time of driver in ms\n          format: int64\n          type: integer\n        end_time:\n          description: end time of and thus departure time at this activity\n          format: int64\n          type: integer\n        id:\n          description: id referring to the underlying service or shipment, i.e. the\n            shipment or service this activity belongs to\n          type: string\n        load_after:\n          description: Array with size/capacity dimensions after this activity\n          items:\n            description: dimension value\n            format: int32\n            type: integer\n          type: array\n        load_before:\n          description: Array with size/capacity dimensions before this activity\n          items:\n            description: dimension value\n            format: int32\n            type: integer\n          type: array\n        location_id:\n          description: id that refers to address\n          type: string\n        type:\n          description: type of activity\n          enum:\n            - start\n            - end\n            - service\n            - pickupShipment\n            - deliverShipment\n            - pickup\n            - delivery\n          type: string\n        waiting_time:\n          description: waiting time at this activity in ms\n          format: int64\n          type: integer\n      type: object\n    Address:\n      properties:\n        lat:\n          description: latitude\n          format: double\n          type: number\n        location_id:\n          description: Unique identifier of location\n          type: string\n        lon:\n          description: longitude\n          format: double\n          type: number\n      type: object\n    Algorithm:\n      properties:\n        objective:\n          enum:\n            - transport_time\n            - completion_time\n          type: string\n        problem_type:\n          enum:\n            - min\n            - min-max\n          type: string\n      type: object\n    Break:\n      properties:\n        duration:\n          description: duration of break\n          format: int64\n          type: integer\n        earliest:\n          description: earliest start of break\n          format: int64\n          type: integer\n        initial_driving_time:\n          description: initial driving time, i.e. the time your driver has already spent\n            for driving\n          format: int64\n          type: integer\n        latest:\n          description: latest start of break\n          format: int64\n          type: integer\n        max_driving_time:\n          description: max driving time without break\n          format: int64\n          type: integer\n        possible_split:\n          description: array of splits\n          items:\n            format: int64\n            type: integer\n          type: array\n      type: object\n    CostMatrix:\n      properties:\n        profile:\n          description: vehicle profile or empty if catch all fallback\n          type: string\n        type:\n          description: type of cost matrix, currently default or google are supported\n          enum:\n            - default\n            - google\n          type: string\n        url:\n          description: URL of matrix service\n          type: string\n      type: object\n    JobId:\n      properties:\n        job_id:\n          description: unique id for your job/request with which you can fetch your solution\n          type: string\n      type: object\n    Objective:\n      properties:\n        type:\n          description: \"type of objective function, i.e. min or min-max \"\n          enum:\n            - min\n            - min-max\n          type: string\n        value:\n          description: objective function value\n          enum:\n            - completion_time\n            - transport_time\n            - vehicles\n          type: string\n      type: object\n    Relation:\n      properties:\n        ids:\n          description: An array of ids that should be related\n          items:\n            description: id of services or special ids of shipments\n            type: string\n          type: array\n        type:\n          description: identifier of relation\n          type: string\n        vehicle_id:\n          description: vehicle id\n          type: string\n      type: object\n    Request:\n      properties:\n        algorithm:\n          $ref: \"#/components/schemas/Algorithm\"\n        cost_matrices:\n          description: An array of cost matrices\n          items:\n            $ref: \"#/components/schemas/CostMatrix\"\n          type: array\n        objectives:\n          description: An array of objectives\n          items:\n            $ref: \"#/components/schemas/Objective\"\n          type: array\n        relations:\n          description: An array of relations\n          items:\n            $ref: \"#/components/schemas/Relation\"\n          type: array\n        services:\n          description: An array of services\n          items:\n            $ref: \"#/components/schemas/Service\"\n          type: array\n        shipments:\n          description: An array of shipments\n          items:\n            $ref: \"#/components/schemas/Shipment\"\n          type: array\n        vehicle_types:\n          description: An array of vehicle types\n          items:\n            $ref: \"#/components/schemas/VehicleType\"\n          type: array\n        vehicles:\n          description: An array of vehicles that can be employed\n          items:\n            $ref: \"#/components/schemas/Vehicle\"\n          type: array\n      type: object\n    Response:\n      properties:\n        copyrights:\n          items:\n            description: attribution\n            type: string\n          type: array\n        job_id:\n          description: unique identify of job - which you get when posting your request to\n            the large problem solver\n          type: string\n        processing_time:\n          description: processing time in ms. if job is still waiting in queue,\n            processing_time is 0\n          format: int64\n          type: integer\n        solution:\n          $ref: \"#/components/schemas/Solution\"\n        status:\n          description: indicates the current status of the job\n          enum:\n            - waiting_in_queue\n            - processing\n            - finished\n          type: string\n        waiting_in_queue:\n          description: waiting time in ms\n          format: int64\n          type: integer\n      type: object\n    Route:\n      properties:\n        activities:\n          description: array of activities\n          items:\n            $ref: \"#/components/schemas/Activity\"\n          type: array\n        completion_time:\n          description: completion time of route in ms\n          format: int64\n          type: integer\n        distance:\n          description: distance of route in meter\n          format: int64\n          type: integer\n        transport_time:\n          description: transport time of route in ms\n          format: int64\n          type: integer\n        vehicle_id:\n          description: id of vehicle that operates route\n          type: string\n        waiting_time:\n          description: waiting time of route in ms\n          format: int64\n          type: integer\n      type: object\n    Service:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        allowed_vehicles:\n          description: array of allowed vehicle ids\n          items:\n            type: string\n          type: array\n        duration:\n          description: duration of service, i.e. time in ms the corresponding activity takes\n          format: int64\n          type: integer\n        id:\n          description: Unique identifier of service\n          type: string\n        name:\n          description: name of service\n          type: string\n        priority:\n          description: priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is\n            2.\n          format: int32\n          type: integer\n        required_skills:\n          description: array of required skills\n          items:\n            type: string\n          type: array\n        size:\n          description: array of capacity dimensions\n          items:\n            format: int32\n            type: integer\n          type: array\n        time_windows:\n          description: array of time windows. currently, only a single time window is\n            allowed\n          items:\n            $ref: \"#/components/schemas/TimeWindow\"\n          type: array\n        type:\n          description: type of service\n          enum:\n            - service\n            - pickup\n            - delivery\n          type: string\n      type: object\n    Shipment:\n      properties:\n        allowed_vehicles:\n          description: array of allowed vehicle ids\n          items:\n            type: string\n          type: array\n        delivery:\n          $ref: \"#/components/schemas/Stop\"\n        id:\n          description: Unique identifier of service\n          type: string\n        name:\n          description: name of shipment\n          type: string\n        pickup:\n          $ref: \"#/components/schemas/Stop\"\n        priority:\n          description: priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is\n            2.\n          format: int32\n          type: integer\n        required_skills:\n          description: array of required skills\n          items:\n            type: string\n          type: array\n        size:\n          description: array of capacity dimensions\n          items:\n            format: int32\n            type: integer\n          type: array\n      type: object\n    Solution:\n      properties:\n        costs:\n          description: overall costs of solution\n          format: int32\n          type: integer\n        distance:\n          description: overall travel distance in meters\n          format: int32\n          type: integer\n        max_operation_time:\n          description: operation time of the longest route in ms\n          format: int64\n          type: integer\n        no_unassigned:\n          description: number of jobs that could not be assigned to final solution\n          format: int32\n          type: integer\n        no_vehicles:\n          description: number of employed vehicles\n          format: int32\n          type: integer\n        routes:\n          description: An array of routes\n          items:\n            $ref: \"#/components/schemas/Route\"\n          type: array\n        time:\n          description: overall transport time in ms\n          format: int64\n          type: integer\n        transport_time:\n          description: overall transport time in ms\n          format: int64\n          type: integer\n        unassigned:\n          properties:\n            services:\n              description: An array of ids of unassigned services\n              items:\n                description: id of unassigned service\n                type: string\n              type: array\n            shipments:\n              description: An array of ids of unassigned shipments\n              items:\n                description: id of unassigned shipments\n                type: string\n              type: array\n          type: object\n        waiting_time:\n          description: total waiting time in ms\n          format: int64\n          type: integer\n      type: object\n    Stop:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        duration:\n          description: duration of stop, i.e. time in ms the corresponding activity takes\n          format: int64\n          type: integer\n        time_windows:\n          description: array of time windows. currently, only a single time window is\n            allowed\n          items:\n            $ref: \"#/components/schemas/TimeWindow\"\n          type: array\n      type: object\n    TimeWindow:\n      properties:\n        earliest:\n          description: earliest start time of corresponding activity\n          format: int64\n          type: integer\n        latest:\n          description: latest start time of corresponding activity\n          format: int64\n          type: integer\n      type: object\n    Vehicle:\n      properties:\n        break:\n          $ref: \"#/components/schemas/Break\"\n        earliest_start:\n          description: earliest start of vehicle at its start location\n          format: int64\n          type: integer\n        end_address:\n          $ref: \"#/components/schemas/Address\"\n        latest_end:\n          description: latest end of vehicle at its end location\n          format: int64\n          type: integer\n        return_to_depot:\n          description: Indicates whether vehicle should return to start address or not. If\n            not, it can end at any service activity.\n          type: boolean\n        skills:\n          description: array of skills\n          items:\n            type: string\n          type: array\n        start_address:\n          $ref: \"#/components/schemas/Address\"\n        type_id:\n          description: Unique identifier referring to the available vehicle types\n          type: string\n        vehicle_id:\n          description: Unique identifier of vehicle\n          type: string\n      type: object\n    VehicleType:\n      properties:\n        capacity:\n          description: array of capacity dimensions\n          items:\n            format: int32\n            type: integer\n          type: array\n        profile:\n          description: Profile of vehicle type\n          enum:\n            - car\n            - bike\n            - foot\n            - mtb\n            - motorcycle\n            - racingbike\n            - truck\n            - small_truck\n            - bus\n          example: car\n          type: string\n        service_time_factor:\n          description: service time factor of vehicle type\n          format: double\n          type: number\n        speed_factor:\n          description: speed_factor of vehicle type\n          format: double\n          type: number\n        type_id:\n          description: Unique identifier for the vehicle type\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/graphhopper.com-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/graphhopper.com-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}