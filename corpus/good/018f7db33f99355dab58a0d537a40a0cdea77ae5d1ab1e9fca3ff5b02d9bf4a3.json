{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/KNowledgeOnWebScale/walder"
		},
		"file": {
			"name": "config-sorting-duplicates.yaml",
			"size": 0,
			"path": "example/config-sorting-duplicates.yaml",
			"byteSize": 6024,
			"content": "openapi: 3.0.2\ninfo:\n  title: 'Example site'\n  version: 0.1.0\nx-walder-resources:\n  root: ./\n  views: views\n  pipe-modules: pipeModules\n  public: public\nx-walder-datasources:\n  - http://fragments.dbpedia.org/2016-04/en\npaths:\n  /music/{musician}/sorted:\n    get:\n      # Working example: Marcella Detroit\n      summary: Returns a list of songs of the given musician, sorted in descending order by song label.\n      parameters:\n        - in: path\n          name: musician\n          required: true\n          schema:\n            type: string\n          description: The target musician\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            writer(label_en: $musician)  @single\n            artist  @single(scope: all) {\n              label\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n        options:\n          sort:\n            object: $[*]\n            selectors:\n              - value: label\n                order: desc\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: songs-with-artist.handlebars\n\n  /music/{musician}/no_duplicates:\n    get:\n      # Working example: Marcella Detroit\n      summary: Returns a list of songs of the given musician, where duplicate songe names are removed.\n      parameters:\n        - in: path\n          name: musician\n          required: true\n          schema:\n            type: string\n          description: The target musician\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            writer(label_en: $musician)  @single\n            artist  @single(scope: all) {\n              label\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n        options:\n          remove-duplicates:\n            object: $[*]\n            value: label\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: songs.handlebars\n\n  /music/{musician}/everything_together:\n    get:\n      # Working example: Marcella Detroit\n      summary: Returns a list of songs of the given musician, sorted in descending order by label of the song and duplicates songs are removed.\n      parameters:\n        - in: path\n          name: musician\n          required: true\n          schema:\n            type: string\n          description: The target musician\n      x-walder-query:\n        graphql-query: \u003e\n          {\n            label @single\n            writer(label_en: $musician)  @single\n            artist  @single(scope: all) {\n              label\n            }\n          }\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\"\n            }\n          }\n        options:\n          sort:\n            object: $[*]\n            selectors:\n              - value: label\n                order: desc\n          remove-duplicates:\n              object: $[*]\n              value: label\n      responses:\n        200:\n          description: list of songs\n          x-walder-input-text/html: songs.handlebars\n\n  /artist/{artist}:\n    get:\n      # Working example: David Bowie\n      summary: Returns a list of songs and movies for a given artist. Where duplicate songs are removed and the movies are ordered by id in descending manner.\n      parameters:\n        - in: path\n          name: artist\n          required: true\n          schema:\n            type: string\n          description: The target artist\n      x-walder-query:\n        graphql-query:\n          songs:\n            query: \u003e\n              {\n                label @single\n                writer(label_en: $artist)  @single\n                artist  @single(scope: all) {\n                  label\n                }\n              }\n            options:\n              remove-duplicates:\n                object: $[*]\n                value: label\n          films:\n            query: \u003e\n              {\n                id @single\n                ... on Film {\n                  starring(label_en: $artist) @single\n                }\n              }\n            options:\n              sort:\n                object: $[*]\n                selectors:\n                  - value: id\n                    order: desc\n        json-ld-context: \u003e\n          {\n            \"@context\": {\n              \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n              \"label_en\": { \"@id\": \"http://www.w3.org/2000/01/rdf-schema#label\", \"@language\": \"en\" },\n              \"writer\": \"http://dbpedia.org/ontology/writer\",\n              \"artist\": \"http://dbpedia.org/ontology/musicalArtist\",\n              \"Film\": \"http://dbpedia.org/ontology/Film\",\n              \"starring\": \"http://dbpedia.org/ontology/starring\"\n            }\n          }\n      responses:\n        200:\n          description: list of songs and movies\n          x-walder-input-text/html: songs_movies.handlebars\n\nx-walder-errors:\n  404:\n    description: page not found error\n    x-walder-input-text/html: error404.html\n  500:\n    description: internal server error\n    x-walder-input-text/html: error500.html\n",
			"canonicalURL": "/github.com/KNowledgeOnWebScale/walder@dd3aaa9022006d379daac13ea20f49d77ad7f835/-/blob/example/config-sorting-duplicates.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/KNowledgeOnWebScale/walder/blob/dd3aaa9022006d379daac13ea20f49d77ad7f835/example/config-sorting-duplicates.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}