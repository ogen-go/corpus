{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/w3c-ccg/vc-api"
		},
		"file": {
			"name": "vc-http-api.yml",
			"size": 0,
			"path": "versions/v0.0.0/vc-http-api.yml",
			"byteSize": 23819,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"0.0.0\"\n  title: VC HTTP API\n  description: This is an Experimental Open API Specification for the [VC Data Model](https://www.w3.org/TR/vc-data-model/).\n  license:\n    name: W3C Software and Document License\n    url: http://www.w3.org/Consortium/Legal/copyright-software.\n  contact:\n    name: GitHub Source Code\n    url: https://github.com/transmute-industries/vc-api\ntags:\n  - name: Issuer\n    description: APIs for Issuers.\n  - name: Verifier\n    description: APIs for Verifiers.\npaths:\n  /credentials/issueCredential:\n    post:\n      tags:\n        - Issuer\n      summary: Issues a credential and returns it in the response body.\n      operationId: issueCredential\n      description: Issues a credential and returns it in the response body. Support of this part of the API is REQUIRED for implementations.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IssueCredentialRequest\"\n        description: Parameters for issuing the credential.\n      responses:\n        \"201\":\n          description: Credential successfully issued!\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The issued credential. This SHOULD include a reference or ID that can be used later for other parts of the API, e.g. changing and retrieving the status of the credential, or refreshing the credential.\n        \"400\":\n          description: invalid input!\n        \"500\":\n          description: error!\n  /credentials/composeAndIssueCredential:\n    post:\n      tags:\n        - Issuer\n      summary: Composes and issues a credential and returns it in the response body.\n      operationId: composeAndIssueCredential\n      description: Composes and issues a credential and returns it in the response body. Support of this part of the API is OPTIONAL for implementations.\n      parameters:\n        - in: query\n          required: false\n          name: templateReference\n          schema:\n            type: string\n          description: Optional internal reference to a credential template. If this is present, it may be used to automatically pre-populate certain fields in the request body.\n          example: 67466513-67a0-4812-8f26-995dd78c5aa6\n        - in: query\n          required: false\n          name: subjectReference\n          schema:\n            type: string\n          description: Optional internal reference to the subject for which to issue a credential. If this is present, it may be used to pre-populate certain fields in the request body (e.g. \"claims\" and/or \"subject\").\n          example: 73b32334-81f3-4f4c-911e-710c7aadd4d8\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ComposeAndIssueCredentialRequest\"\n        description: Parameters for issuing the credential.\n      responses:\n        \"201\":\n          description: credential successfully issued!\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The issued credential. This SHOULD include a reference or ID that can be used later for other parts of the API, e.g. changing and retrieving the status of the credential, or refreshing the credential.\n        \"400\":\n          description: invalid input!\n        \"500\":\n          description: error!\n  /credentials/{credentialReference}:\n    get:\n      tags:\n        - Issuer\n      summary: Retrieves a credential that has already been issued, and returns it in the response body.\n      operationId: retrieveCredential\n      description: Retrieves a credential that has already been issued, and returns it in the response body. The retrieved credential MUST be identical to the original credential when it was first issued. This can not be used for refreshing an expired credential. Support of this part of the API is OPTIONAL for implementations.\n      parameters:\n        - in: path\n          required: true\n          name: credentialReference\n          schema:\n            type: string\n          description: Reference to a credential that has been issued.\n      responses:\n        \"200\":\n          description: credential successfully retrieved!\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The retrieved credential.\n        \"400\":\n          description: invalid input!\n        \"404\":\n          description: credential not found!\n        \"500\":\n          description: error!\n        \"501\":\n          description: not supported by this implementation!\n  /credentials/{credentialReference}/status:\n    post:\n      tags:\n        - Issuer\n      summary: Changes the credential status.\n      operationId: changeCredentialStatus\n      description: Changes the credential status. Support of this part of the API is OPTIONAL for implementations.\n      parameters:\n        - in: path\n          required: true\n          name: credentialReference\n          schema:\n            type: string\n          description: Reference to a credential that has been issued.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChangeStatusRequest\"\n        description: Parameters for changing the credential status.\n      responses:\n        \"200\":\n          description: credential status successfully changed!\n        \"400\":\n          description: invalid input!\n        \"404\":\n          description: credential not found!\n        \"500\":\n          description: error!\n        \"501\":\n          description: not supported by this implementation!\n    get:\n      tags:\n        - Issuer\n      summary: Retrieves the credential status and returns it in the response body.\n      operationId: retrieveCredentialStatus\n      description: Retrieves the credential status and returns it in the response body. Support of this part of the API is OPTIONAL for implementations. WARNING - this type of \"phone home\" functionality is problematic from a privacy perspective, therefore this is likely to be removed in a future version.\n      parameters:\n        - in: path\n          required: true\n          name: credentialReference\n          schema:\n            type: string\n          description: Reference to a credential that has been issued.\n      responses:\n        \"200\":\n          description: credential status successfully retrieved!\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The credential status.\n        \"400\":\n          description: invalid input!\n        \"404\":\n          description: credential not found!\n        \"500\":\n          description: error!\n        \"501\":\n          description: not supported by this implementation!\n  /credentials/{credentialReference}/refresh:\n    post:\n      tags:\n        - Issuer\n      summary: Refreshes a credential and returns it in the response body.\n      operationId: refreshCredential\n      description: Refreshes a credential and returns it in the response body. Support of this part of the API is OPTIONAL for all implementations. WARNING - it may not make sense to model this functionality as a public API, instead the processes for \"refreshing\" may be more complex and use case specific, therefore this is likely to be removed in a future version.\n      parameters:\n        - in: path\n          required: true\n          name: credentialReference\n          schema:\n            type: string\n          description: Reference to a credential that has been issued.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefreshRequest\"\n        description: Parameters for refreshing the credential.\n      responses:\n        \"200\":\n          description: credential successfully refreshed!\n          content:\n            application/json:\n              schema:\n                type: object\n                description: The refreshed credential.\n        \"400\":\n          description: invalid input!\n        \"404\":\n          description: credential not found!\n        \"500\":\n          description: error!\n        \"501\":\n          description: not supported by this implementation!\n  /verifier/credentials:\n    post:\n      tags:\n        - Verifier\n      summary: Verify a given credential.\n      operationId: verifyCredential\n      description: Performs a series of verification checks on a provided Verifiable Credential and returns the overall status of the checks as well as the status of each individual check. Support of this part of the API is REQUIRED for implementations.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: The credential to be verified and a set of options to use when verifying the credential.\n              type: object\n              properties:\n                verifiableCredential:\n                  type: object\n                  additionalProperties: false\n                  description: The verifiable credential to check.\n                  example: {\n  \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://www.w3.org/2018/credentials/examples/v1\"\n  ],\n  \"id\": \"http://example.edu/credentials/3732\",\n  \"type\": [\n    \"VerifiableCredential\",\n    \"UniversityDegreeCredential\"\n  ],\n  \"issuer\": \"did:example:c6f1c276e12ec21ebfeb1f712eb\",\n  \"issuanceDate\": \"2020-03-11\",\n  \"credentialSubject\": {\n    \"id\": \"did:example:ebfeb1f712ebc6f1c276e12ec21\",\n    \"degree\": {\n      \"type\": \"BachelorDegree\",\n      \"name\": \"Bachelor of Science and Arts\"\n    }\n  },\n  \"proof\": [{\n    \"type\": \"Ed25519Signature2018\",\n    \"created\": \"2020-03-11T23:09:06.803Z\",\n    \"jws\": \"eyJhbGciOiJFZERTQSIsImI2..hS5SPmWTFocjcDg\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:example:c6f1c276e12ec21ebfeb1f712eb#jf893k\"\n  }]\n}\n                options:\n                  type: object\n                  additionalProperties: false\n                  description: Options for specifying how the credential will be checked.\n                  properties:\n                    checks:\n                      type: array\n                      items:\n                        type: string\n                      description: An array of verification checks to be performed on the credential. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time. A default list is also expected to encapsulate all available checks. This option might be changed to a 'ignore' option where it lists the checks the developer would like to skip.\n                      example: [\"proof\"]\n      responses:\n        '200':\n          description: The verification was successful.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A description of the checks that were performed.\n                properties:\n                  checks:\n                    type: array\n                    items:\n                      type: string\n                    description: An array of verification checks that were performed. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time.\n                    example: [\"proof\"]\n        '400':\n          description: The verification failed.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A description of the checks that were performed and any associated errors.\n                properties:\n                  checks:\n                    type: array\n                    items:\n                      type: object\n                    description: An array of verification checks that were performed and any associated errors and other information that may be helpful when debugging the failure. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time.\n                    example: [{\n                      \"check\": \"proof\",\n                      \"error\": \"The verificationMethod (public key) associated with the digital signature could not be retrieved due to a network error.\",\n                      \"verificationMethod\": \"did:example:c6f1c276e12ec21ebfeb1f712eb#jf893k\",\n                    }]\n  /verifier/presentations:\n    post:\n      tags:\n        - Verifier\n      summary: Verify a given presentation.\n      operationId: verifyPresentation\n      description: Performs a series of verification checks on a provided Verifiable Presentation and returns the overall status of the checks as well as the status of each individual check. Support of this part of the API is OPTIONAL for implementations.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: The presentation to be verified and a set of options to use when verifying the presentation.\n              type: object\n              properties:\n                verifiablePresentation:\n                  type: object\n                  additionalProperties: false\n                  description: The Verifiable Presentation to check.\n                  example: {\n  \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://www.w3.org/2018/credentials/examples/v1\"\n  ],\n  \"id\": \"urn:uuid:2011a95e-ed4a-420f-a2f8-252701e71853\",\n  \"type\": [\"VerifiablePresentation\"],\n  \"verifiableCredential\": [{\n    \"id\": \"http://example.edu/credentials/3732\",\n    \"type\": [\n      \"VerifiableCredential\",\n      \"UniversityDegreeCredential\"\n    ],\n    \"issuer\": \"did:example:c6f1c276e12ec21ebfeb1f712eb\",\n    \"issuanceDate\": \"2020-03-11\",\n    \"credentialSubject\": {\n      \"id\": \"did:example:ebfeb1f712ebc6f1c276e12ec21\",\n      \"degree\": {\n        \"type\": \"BachelorDegree\",\n        \"name\": \"Bachelor of Science and Arts\"\n      }\n    },\n    \"proof\": [{\n      \"type\": \"Ed25519Signature2018\",\n      \"created\": \"2020-03-11T23:09:06.803Z\",\n      \"jws\": \"eyJhbGciOiJFZERTQSIsImI2..hS5SPmWTFocjcDg\",\n      \"proofPurpose\": \"assertionMethod\",\n      \"verificationMethod\": \"did:example:c6f1c276e12ec21ebfeb1f712eb#jf893k\"\n    }]\n  }],\n  \"proof\": [{\n    \"type\": \"Ed25519Signature2018\",\n    \"created\": \"2020-03-11T23:09:06.984Z\",\n    \"domain\": \"example.com\",\n    \"challenge\": \"e8944a04-6ded-48e4-ae85-99133f7323fb\",\n    \"jws\": \"ey8fdjJ732kKdjw..5SPmWSjcDgTFoch\",\n    \"proofPurpose\": \"assertionMethod\",\n    \"verificationMethod\": \"did:example:c21ebfeb1f712ebc6f1c276e12e#je83Ks\"\n  }]\n}\n                options:\n                  type: object\n                  additionalProperties: false\n                  description: Options for specifying how the presentation will be checked.\n                  properties:\n                    checks:\n                      type: array\n                      items:\n                        type: string\n                      description: An array of verification checks to be performed on the presentation. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time. A default list is also expected to encapsulate all available checks. This option might be changed to a 'ignore' option where it lists the checks the developer would like to skip.\n                      example: [\"proof\"]\n      responses:\n        '200':\n          description: The verification was successful.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A description of the checks that were performed.\n                properties:\n                  checks:\n                    type: array\n                    items:\n                      type: string\n                    description: An array of verification checks that were performed. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time.\n                    example: [\"proof\"]\n        '400':\n          description: The verification failed.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: A description of the checks that were performed and any associated errors.\n                properties:\n                  checks:\n                    type: array\n                    items:\n                      type: object\n                    description: An array of verification checks that were performed and any associated errors and other information that may be helpful when debugging the failure. WARNING - Implementers are cautioned that the list of checks is currently incomplete and other checks such as issuance, expiration, nonce, domain, and acceptable issuers are expected to be added in time.\n                    example: [{\n                      \"check\": \"proof\",\n                      \"id\": \"http://example.edu/credentials/3732\",\n                      \"error\": \"The verificationMethod (public key) associated with the digital signature could not be retrieved due to a network error.\",\n                      \"verificationMethod\": \"did:example:c6f1c276e12ec21ebfeb1f712eb#jf893k\",\n                    }]\ncomponents:\n  schemas:\n    IssueCredentialRequest:\n      type: object\n      properties:\n        credential:\n          type: object\n          description: A JSON-LD Verifiable Credential without a proof.\n          example:\n            {\n              \"@context\":\n                [\n                  \"https://www.w3.org/2018/credentials/v1\",\n                  \"https://www.w3.org/2018/credentials/examples/v1\",\n                ],\n              \"id\": \"http://example.gov/credentials/3732\",\n              \"type\": [\"VerifiableCredential\", \"UniversityDegreeCredential\"],\n              \"issuer\": \"https://example.edu\",\n              \"issuanceDate\": \"2020-03-11T23:09:06.803Z\",\n              \"credentialSubject\":\n                {\n                  \"id\": \"did:example:ebfeb1f712ebc6f1c276e12ec21\",\n                  \"degree\":\n                    {\n                      \"type\": \"BachelorDegree\",\n                      \"name\": \"Bachelor of Science and Arts\",\n                    },\n                },\n            }\n        options:\n          type: object\n          additionalProperties: false\n          description: Options for specifying how the credential will be issued.\n          properties:\n            assertionMethod:\n              type: string\n              description: The URI of a key that will be used to issue the credential. If ommited a default assertionMethod will be used.\n              example: \"did:web:example.com#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"\n    ComposeAndIssueCredentialRequest:\n      type: object\n      properties:\n        issuer:\n          type: string\n          description: Optional identifier for the issuer of the credential. If this is missing, it may be pre-configured or implied by other values in the request.\n          example: did:example:76e12ec712ebc6f1c221ebfeb1f\n        subject:\n          type: string\n          description: Optional identifier for the subject of the credential. If this is missing, it may be pre-configured or implied by other values in the request, or there may not be an identifier for the subject of the credential.\n          example: did:example:ebfeb1f712ebc6f1c276e12ec21\n        types:\n          type: array\n          items:\n            type: string\n          description: Optional value for the type(s) of a credential. If this is missing, it may be pre-configured or implied by other values in the request.\n          example: UniversityDegreeCredential\n        issuanceDate:\n          type: string\n          format: date-time\n          description: Optional value for the issuance date and time of the credential, to be used only when this value should not be automatically set to the current date and time.\n          example: \"2010-01-01T19:23:24Z\"\n        expirationDate:\n          type: string\n          format: date-time\n          description: Optional value for the expiration date and time of the credential. If this is missing, it may be pre-configured or implied by other values in the request, or the credential may not have an expiration date and time.\n          example: \"2011-01-01T19:23:24Z\"\n        claims:\n          type: object\n          additionalProperties: true\n          description: Optional object containing claims and their values.\n          example: { \"name\": \"Jayden Doe\" }\n        evidence:\n          type: object\n          additionalProperties: true\n          description: Optional object containing evidence of the credential.\n          example: {}\n        termsOfUse:\n          type: object\n          additionalProperties: true\n          description: Optional object containing terms of use of the credential.\n          example: {}\n        credentialFormat:\n          type: string\n          description: Optional value to specify the credential format. Well-known values are \"jsonld\", \"jwt\", \"blockcerts\". Other values MAY be supported. If this is missing, it may be pre-configured, and a default credential format will be used.\n          example: jsonld\n        proofFormat:\n          type: string\n          description: Optional value to specify the proof format. Well-known values are \"ld-proof\", \"jws\", \"blockcerts\". Other values MAY be supported. If this is missing, it may be pre-configured or implied by other values in the request (e.g. \"credentialFormat\"), and a default proof format will be used.\n          example: jws\n        credentialFormatOptions:\n          type: object\n          additionalProperties: true\n          description: Optional object containing additional options specific to the chosen credential format. E.g. for the \"jsonld\" credential format, this could contain JSON-LD context(s) to be included in the credential.\n          example:\n            { \"@context\": \"https://www.w3.org/2018/credentials/examples/v1\" }\n        proofFormatOptions:\n          type: object\n          additionalProperties: true\n          description: Optional object containing additional options specific to the chosen proof format. E.g. for the \"jws\" proof format, this could specify a key identifier to be used for the proof.\n          example: { \"kid\": \"did:example:abfe13f712120431c276e12ecab#keys-1\" }\n    ChangeStatusRequest:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: string\n          description: New status of the credential. Well-known values are \"revoked\", \"suspended\", \"active\". Other values MAY be supported.\n          example: revoked\n        reason:\n          type: string\n          description: Optional reason statement for the new status of the credential.\n          example: Disciplinary action\n        options:\n          type: object\n          additionalProperties: true\n          description: Optional object containing additional options for the new status of the credential.\n          example: {}\n    RefreshRequest:\n      type: object\n      properties:\n        options:\n          type: object\n          additionalProperties: true\n          description: Optional object containing additional options for refreshing the credential.\n          example: {}\n",
			"canonicalURL": "/github.com/w3c-ccg/vc-api@7db3c72135d16e87303dd20f562ca558dc510dd6/-/blob/versions/v0.0.0/vc-http-api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/w3c-ccg/vc-api/blob/7db3c72135d16e87303dd20f562ca558dc510dd6/versions/v0.0.0/vc-http-api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}