{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SatoshiPortal/cyphernode"
		},
		"file": {
			"name": "cyphernode-internal.yaml",
			"size": 0,
			"path": "doc/openapi/v0/cyphernode-internal.yaml",
			"byteSize": 4477,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"Cyphernode internal API v0\"\n  version: \"0.1.0\"\n  title: \"Cyphernode internal API\"\nexternalDocs:\n  description: \"Find out more about Swagger\"\n  url: \"http://swagger.io\"\nservers:\n  - url: /\n    description: authoring\n  - url: http://localhost:8888/\n    description: local cyphernode\nsecurity:\n  - BearerAuth: []\ntags:\n  - name: \"cyphernode\"\n    description: \"Everything bitcoin\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"http://cyphernode.io\"\n  - name: \"openapi generator\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"https://github.com/OpenAPITools/openapi-generator\"\npaths:\n  /executecallbacks:\n    get:\n      summary: \"Try missed callbacks\"\n      description: \"Looks in DB for watched addresses, ask the watching Bitcoin node if those addresses got payments, if so it executes the callbacks that would be usually executed when 'conf' is called by the node.  This is useful if the watching node went down or there was a network glitch when a transaction on a watched address got confirmed.\"\n      operationId: \"executeMissedCallbacks\"\n      responses:\n        '200':\n          description: \"successful operation\"\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /conf/{txid}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"txid\"\n          description: \"Transaction ID\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeHashString'\n      summary: \"Notify confirm\"\n      description: \"Confirms a transaction on an imported address.  The Watching Bitcoin node will notify Cyphernode (thanks to walletnotify in bitcoin.conf) by calling this endpoint with txid when a tx is new or updated on an address.  If address is still being watched (flag in DB), the corresponding callbacks will be called.\"\n      operationId: \"notifyConf\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"string\"\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ots_backoffice:\n    get:\n      summary: \"Check for upgraded OTS stamping\"\n      description: \"Looks in the DB for non-upgraded OTS stamps, asks the OTS client to check if they are upgraded and executes the callbacks for the newly upgraded ones.  Updates DB accordingly.\"\n      operationId: \"otsBackoffice\"\n      responses:\n        '200':\n          description: \"successful operation\"\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /newblock/{blockHash}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"blockHash\"\n          description: \"Blockhash\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeHashString'\n      summary: \"Notify confirm\"\n      description: \"Notifies cyphernode when a new block is added to the blockchain.  Cyphernode will look at the callbacks to be made after x number of confirmations and execute them.\"\n      operationId: \"newblockConf\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"string\"\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\ncomponents:\n  schemas:\n    TypeHashString:\n      description: \"64 character hex string\"\n      type: \"string\"\n      pattern: \"^[a-fA-F0-9]{64}$\"\n    ApiResponseTemporarilyUnavailable:\n      type: \"object\"\n      properties:\n        reason:\n          type: \"string\"\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/SatoshiPortal/cyphernode@e0ae154b7154d02bb488dbca0f62fd2bea057fcb/-/blob/doc/openapi/v0/cyphernode-internal.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SatoshiPortal/cyphernode/blob/e0ae154b7154d02bb488dbca0f62fd2bea057fcb/doc/openapi/v0/cyphernode-internal.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}