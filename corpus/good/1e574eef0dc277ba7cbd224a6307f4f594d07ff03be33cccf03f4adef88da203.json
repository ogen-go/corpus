{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerAgreement.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerAgreement.yaml",
			"byteSize": 24430,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Agreement\n  description: This service domain maintains the master customer agreement/legal contract. Note that a customer can be a complex corporate entity with many subsidiaries operating in different geopolitical areas. The customer agreement is linked to as many Sales Product Agreements as needed for all in-force products\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerAgreement/10.0.0\npaths:\n  /CustomerAgreement/Evaluate:\n    post:\n      tags:\n      - CR - CustomerAgreement\n      summary: EvCR Establish a customer master agreement (evaluate applicable rules)\n      description: EvCR Establish a customer master agreement (evaluate applicable rules)\n      operationId: Evaluate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/EvaluateCustomerAgreementRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateCustomerAgreementResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerAgreement\n      summary: ReCR Retrieve details about a customer master agreement\n      description: ReCR Retrieve details about a customer master agreement\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/LegalTerms/Evaluate:\n    post:\n      tags:\n      - BQ - LegalTerms\n      summary: EvBQ Establish the legal terms for a customer master agreement\n      description: EvBQ Establish the legal terms for a customer master agreement\n      operationId: EvaluateLegalTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      requestBody:\n        $ref: '#/components/requestBodies/EvaluateLegalTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateLegalTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/LegalTerms/{legaltermsId}/Update:\n    put:\n      tags:\n      - BQ - LegalTerms\n      summary: UpBQ Update the legal terms for a customer master agreement\n      description: UpBQ Update the legal terms for a customer master agreement\n      operationId: UpdateLegalTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/LegalTermsID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateLegalTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLegalTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/LegalTerms/{legaltermsId}/Retrieve:\n    get:\n      tags:\n      - BQ - LegalTerms\n      summary: ReBQ Retrieve details about the legal terms of an agreement\n      description: ReBQ Retrieve details about the legal terms of an agreement\n      operationId: RetrieveLegalTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/LegalTermsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveLegalTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/RegulatoryTerms/Evaluate:\n    post:\n      tags:\n      - BQ - RegulatoryTerms\n      summary: EvBQ Establish the regulatory terms for a customer master agreement\n      description: EvBQ Establish the regulatory terms for a customer master agreement\n      operationId: EvaluateRegulatoryTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      requestBody:\n        $ref: '#/components/requestBodies/EvaluateRegulatoryTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateRegulatoryTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/RegulatoryTerms/{regulatorytermsId}/Update:\n    put:\n      tags:\n      - BQ - RegulatoryTerms\n      summary: UpBQ Update the regulatory terms for a customer master agreement\n      description: UpBQ Update the regulatory terms for a customer master agreement\n      operationId: UpdateRegulatoryTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/RegulatoryTermsID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRegulatoryTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRegulatoryTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/RegulatoryTerms/{regulatorytermsId}/Retrieve:\n    get:\n      tags:\n      - BQ - RegulatoryTerms\n      summary: ReBQ Retrieve details about the regulatory terms of an agreement\n      description: ReBQ Retrieve details about the regulatory terms of an agreement\n      operationId: RetrieveRegulatoryTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/RegulatoryTermsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/PolicyTerms/Evaluate:\n    post:\n      tags:\n      - BQ - PolicyTerms\n      summary: EvBQ Establish the corporate policy terms for a customer master agreement\n      description: EvBQ Establish the corporate policy terms for a customer master agreement\n      operationId: EvaluatePolicyTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      requestBody:\n        $ref: '#/components/requestBodies/EvaluatePolicyTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluatePolicyTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/PolicyTerms/{policytermsId}/Update:\n    put:\n      tags:\n      - BQ - PolicyTerms\n      summary: UpBQ Update the corporate policy terms for a customer master agreement\n      description: UpBQ Update the corporate policy terms for a customer master agreement\n      operationId: UpdatePolicyTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/PolicyTermsID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdatePolicyTermsRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatePolicyTermsResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerAgreement/{customeragreementId}/PolicyTerms/{policytermsId}/Retrieve:\n    get:\n      tags:\n      - BQ - PolicyTerms\n      summary: ReBQ Retrieve details about the corporate policy terms of an agreement\n      description: ReBQ Retrieve details about the corporate policy terms of an agreement\n      operationId: RetrievePolicyTerms\n      parameters:\n      - $ref: '#/components/parameters/CustomerAgreementID'\n      - $ref: '#/components/parameters/PolicyTermsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerAgreement'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerAgreement:\n      type: object\n      properties:\n        CustomerReference:\n          type: object\n        LegalEntityReference:\n          type: object\n        AgreementType:\n          type: string\n        AgreementJurisdiction:\n          type: string\n        AgreementValidFromOrToDate:\n          type: string\n        AgreementSignatoriesOrResponsibleParties:\n          type: string\n        DocumentDirectoryEntryInstanceReference:\n          type: object\n        SalesProductAgreementReference:\n          type: object\n        PartyLife-cycleManagementReference:\n          type: object\n    RegulatoryTerms:\n      type: object\n      properties:\n        RegulatoryAuthority:\n          type: string\n        ApplicableRegulationReference:\n          type: object\n        ApplicableRegulationInterpretation:\n          type: string\n    PolicyTerms:\n      type: object\n      properties:\n        BankPolicy-RuleType:\n          type: string\n        ApplicableBankPolicy-RuleReference:\n          type: object\n        ApplicableBankPolicy-RuleInterpretation:\n          type: string\n    LegalTerms:\n      type: object\n      properties:\n        Jurisdiction:\n          type: string\n        ApplicableLawReference:\n          type: object\n        ApplicableLawInterpretation:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n    EvaluateCustomerAgreementRequest:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            LegalEntityReference:\n              type: object\n            AgreementType:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n            SalesProductAgreementReference:\n              type: object\n            PartyLife-cycleManagementReference:\n              type: object\n    EvaluateCustomerAgreementResponse:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            AgreementJurisdiction:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n    EvaluateLegalTermsRequest:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            LegalEntityReference:\n              type: object\n            AgreementType:\n              type: string\n            AgreementJurisdiction:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n            SalesProductAgreementReference:\n              type: object\n            PartyLife-cycleManagementReference:\n              type: object\n        LegalTerms:\n          type: object\n          properties:\n            ApplicableLawReference:\n              type: object\n    EvaluateLegalTermsResponse:\n      type: object\n      properties:\n        LegalTerms:\n          type: object\n          properties:\n            ApplicableLawInterpretation:\n              type: string\n    UpdateLegalTermsRequest:\n      type: object\n      properties:\n        LegalTerms:\n          type: object\n          properties:\n            Jurisdiction:\n              type: string\n            ApplicableLawReference:\n              type: object\n    UpdateLegalTermsResponse:\n      type: object\n      properties:\n        LegalTerms:\n          type: object\n          properties:\n            Jurisdiction:\n              type: string\n            ApplicableLawReference:\n              type: object\n    RetrieveLegalTermsResponse:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            LegalEntityReference:\n              type: object\n            AgreementType:\n              type: string\n            AgreementJurisdiction:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n            SalesProductAgreementReference:\n              type: object\n            PartyLife-cycleManagementReference:\n              type: object\n        LegalTerms:\n          type: object\n          properties:\n            ApplicableLawReference:\n              type: object\n            ApplicableLawInterpretation:\n              type: string\n    EvaluateRegulatoryTermsRequest:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            LegalEntityReference:\n              type: object\n            AgreementType:\n              type: string\n            AgreementJurisdiction:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n            SalesProductAgreementReference:\n              type: object\n            PartyLife-cycleManagementReference:\n              type: object\n        RegulatoryTerms:\n          type: object\n          properties:\n            RegulatoryAuthority:\n              type: string\n            ApplicableRegulationReference:\n              type: object\n    EvaluateRegulatoryTermsResponse:\n      type: object\n      properties:\n        RegulatoryTerms:\n          type: object\n          properties:\n            ApplicableRegulationInterpretation:\n              type: string\n    UpdateRegulatoryTermsRequest:\n      type: object\n      properties:\n        RegulatoryTerms:\n          type: object\n          properties:\n            RegulatoryAuthority:\n              type: string\n            ApplicableRegulationReference:\n              type: object\n    UpdateRegulatoryTermsResponse:\n      type: object\n      properties:\n        RegulatoryTerms:\n          type: object\n          properties:\n            RegulatoryAuthority:\n              type: string\n            ApplicableRegulationReference:\n              type: object\n    EvaluatePolicyTermsRequest:\n      type: object\n      properties:\n        CustomerAgreement:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            LegalEntityReference:\n              type: object\n            AgreementType:\n              type: string\n            AgreementJurisdiction:\n              type: string\n            AgreementValidFromOrToDate:\n              type: string\n            AgreementSignatoriesOrResponsibleParties:\n              type: string\n            DocumentDirectoryEntryInstanceReference:\n              type: object\n            SalesProductAgreementReference:\n              type: object\n            PartyLife-cycleManagementReference:\n              type: object\n        PolicyTerms:\n          type: object\n          properties:\n            BankPolicy-RuleType:\n              type: string\n            ApplicableBankPolicy-RuleReference:\n              type: object\n    EvaluatePolicyTermsResponse:\n      type: object\n      properties:\n        PolicyTerms:\n          type: object\n          properties:\n            ApplicableBankPolicy-RuleInterpretation:\n              type: string\n    UpdatePolicyTermsRequest:\n      type: object\n      properties:\n        PolicyTerms:\n          type: object\n          properties:\n            BankPolicy-RuleType:\n              type: string\n            ApplicableBankPolicy-RuleReference:\n              type: object\n    UpdatePolicyTermsResponse:\n      type: object\n      properties:\n        PolicyTerms:\n          type: object\n          properties:\n            BankPolicy-RuleType:\n              type: string\n            ApplicableBankPolicy-RuleReference:\n              type: object\n  parameters:\n    CustomerAgreementID:\n      name: customeragreementId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    RegulatoryTermsID:\n      name: regulatorytermsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    PolicyTermsID:\n      name: policytermsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    LegalTermsID:\n      name: legaltermsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    EvaluateCustomerAgreementRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EvaluateCustomerAgreementRequest'\n    EvaluateLegalTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EvaluateLegalTermsRequest'\n    UpdateLegalTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateLegalTermsRequest'\n    EvaluateRegulatoryTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EvaluateRegulatoryTermsRequest'\n    UpdateRegulatoryTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateRegulatoryTermsRequest'\n    EvaluatePolicyTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EvaluatePolicyTermsRequest'\n    UpdatePolicyTermsRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdatePolicyTermsRequest'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerAgreement.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerAgreement.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}