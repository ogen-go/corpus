{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kulti/task-list"
		},
		"file": {
			"name": "task.yaml",
			"size": 0,
			"path": "api/task.yaml",
			"byteSize": 6729,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Task List\nservers:\n  - url: http://127.0.0.1/api/v1\npaths:\n  /sprint:\n    post:\n      operationId: createTaskList\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/SprintOpts\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/SprintTemplate\"\n\n  /sprint/{sprintId}:\n    get:\n      operationId: getTaskList\n      parameters:\n        - name: sprintId\n          in: path\n          required: true\n          description: sprint id; use \"current\" to get current sprint tasks\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"all tasks in list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskList\"\n\n  /sprint/{sprintId}/add:\n    post:\n      operationId: createTask\n      parameters:\n        - name: sprintId\n          in: path\n          required: true\n          description: sprint id; use \"current\" to add task to current sprint\n          schema:\n            type: string\n      requestBody:\n        description: task to add\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/Task\"\n      responses:\n        \"200\":\n          description: \"created task\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/RespTask\"\n\n  /task/{taskId}/delete:\n    post:\n      operationId: deleteTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n\n  /task/{taskId}/todo:\n    post:\n      operationId: todoTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n\n  /task/{taskId}/done:\n    post:\n      operationId: doneTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description:\n            Bad reqest can be returned in cases when done is not possible for task.\n            E.g. cannot done task that already canceled.\n\n  /task/{taskId}/cancel:\n    post:\n      operationId: cancelTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description:\n            Bad reqest can be returned in cases when cancel is not possible for task.\n            E.g. cannot cancel task that already done.\n\n  /task/{taskId}/towork:\n    post:\n      operationId: toworkTask\n      description: Restore canceled task back to work.\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad reqest can be returned if try to restore to work not canceled task.\n\n  /task/{taskId}/postpone:\n    post:\n      operationId: postponeTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description:\n            Bad reqest can be returned in cases when pospone is not possible for task.\n            E.g. cannot postpone partially done task.\n\n  /task/{taskId}/update:\n    post:\n      operationId: updateTask\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n      requestBody:\n        description: task updates\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/UpdateOptions\"\n\n  /new_sprint_template:\n    get:\n      operationId: getSprintTemplate\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/SprintTemplate\"\n    post:\n      operationId: setSprintTemplate\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/SprintTemplate\"\n      responses:\n        \"200\":\n          description: OK\n\ncomponents:\n  schemas:\n    SprintOpts:\n      type: object\n      required:\n        - begin\n        - end\n      properties:\n        begin:\n          type: string\n          format: date\n        end:\n          type: string\n          format: date\n\n    Task:\n      type: object\n      required:\n        - text\n        - points\n      properties:\n        text:\n          type: string\n        points:\n          $ref: \"#/components/schemas/Points\"\n\n    RespTask:\n      type: object\n      required:\n        - id\n        - text\n        - points\n        - burnt\n        - state\n      properties:\n        id:\n          type: string\n        text:\n          type: string\n        points:\n          $ref: \"#/components/schemas/Points\"\n        burnt:\n          $ref: \"#/components/schemas/Points\"\n        state:\n          type: string\n          enum: [\"\", todo, done, canceled]\n\n    TaskList:\n      type: object\n      required:\n        - title\n        - tasks\n      properties:\n        title:\n          type: string\n        tasks:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RespTask\"\n\n    UpdateOptions:\n      type: object\n      required:\n        - text\n        - burnt\n        - points\n      properties:\n        text:\n          type: string\n        burnt:\n          $ref: \"#/components/schemas/Points\"\n        points:\n          $ref: \"#/components/schemas/Points\"\n\n    SprintTemplate:\n      type: object\n      required:\n        - tasks\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TaskTemplate\"\n\n    TaskTemplate:\n      type: object\n      required:\n        - id\n        - text\n        - points\n      properties:\n        id:\n          type: string\n        text:\n          type: string\n        points:\n          $ref: \"#/components/schemas/Points\"\n\n    Points:\n      type: integer\n      maximum: 32767\n",
			"canonicalURL": "/github.com/kulti/task-list@40d1ad727fbf182ea13a1f53ec4a2611d1557855/-/blob/api/task.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kulti/task-list/blob/40d1ad727fbf182ea13a1f53ec4a2611d1557855/api/task.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}