{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "Policy.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/Policy.yaml",
			"byteSize": 41971,
			"content": "components:\n  schemas:\n    AppAndInstanceConditionEvaluatorAppOrInstance:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        type:\n          enum:\n          - APP_TYPE\n          - APP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    AppAndInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    AppInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    BeforeScheduledActionPolicyRuleCondition:\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        lifecycleAction:\n          $ref: '#/components/schemas/ScheduledUserLifecycleAction'\n      type: object\n      x-okta-tags:\n      - Policy\n    ClientPolicyCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    ContextPolicyRuleCondition:\n      properties:\n        expression:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    DevicePolicyRuleCondition:\n      properties:\n        migrated:\n          type: boolean\n        platform:\n          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'\n        rooted:\n          type: boolean\n        trustLevel:\n          enum:\n          - ANY\n          - TRUSTED\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    DevicePolicyRuleConditionPlatform:\n      properties:\n        supportedMDMFrameworks:\n          items:\n            enum:\n            - AFW\n            - SAFE\n            - NATIVE\n            type: string\n          type: array\n        types:\n          items:\n            enum:\n            - IOS\n            - ANDROID\n            - OSX\n            - WINDOWS\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Duration:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    GrantTypePolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    IdentityProviderPolicy:\n      properties:\n        accountLink:\n          $ref: '#/components/schemas/PolicyAccountLink'\n        maxClockSkew:\n          type: integer\n        provisioning:\n          $ref: '#/components/schemas/Provisioning'\n        subject:\n          $ref: '#/components/schemas/PolicySubject'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    IdentityProviderPolicyRuleCondition:\n      properties:\n        idpIds:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ANY\n          - OKTA\n          - SPECIFIC_IDP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    InactivityPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    LifecycleExpirationPolicyRuleCondition:\n      properties:\n        lifecycleStatus:\n          type: string\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    MDMEnrollmentPolicyRuleCondition:\n      properties:\n        blockNonSafeAndroid:\n          type: boolean\n        enrollment:\n          enum:\n          - OMM\n          - ANY_OR_NONE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    OAuth2ScopesMediationPolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Application\n    OAuthAuthorizationPolicy:\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/OktaSignOnPolicyConditions'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyConditions:\n      properties:\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyRule:\n      properties:\n        actions:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'\n        conditions:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'\n        name:\n          type: string\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRule'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyRuleActions:\n      properties:\n        signon:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleActions'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyRuleConditions:\n      properties:\n        authContext:\n          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyRuleSignonActions:\n      properties:\n        access:\n          enum:\n          - ALLOW\n          - DENY\n          type: string\n        factorLifetime:\n          type: integer\n        factorPromptMode:\n          enum:\n          - ALWAYS\n          - DEVICE\n          - SESSION\n          type: string\n        rememberDeviceByDefault:\n          default: false\n          type: boolean\n        requireFactor:\n          default: false\n          type: boolean\n        session:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'\n      type: object\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyRuleSignonSessionActions:\n      properties:\n        maxSessionIdleMinutes:\n          type: integer\n        maxSessionLifetimeMinutes:\n          type: integer\n        usePersistentCookie:\n          default: false\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordDictionary:\n      properties:\n        common:\n          $ref: '#/components/schemas/PasswordDictionaryCommon'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordDictionaryCommon:\n      properties:\n        exclude:\n          default: false\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordExpirationPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/PasswordPolicyConditions'\n        settings:\n          $ref: '#/components/schemas/PasswordPolicySettings'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyAuthenticationProviderCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ACTIVE_DIRECTORY\n          - ANY\n          - LDAP\n          - OKTA\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyConditions:\n      properties:\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettings:\n      properties:\n        options:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettingsOptions:\n      properties:\n        skipUnlock:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettings:\n      properties:\n        age:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'\n        lockout:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsAge:\n      properties:\n        expireWarnDays:\n          type: integer\n        historyCount:\n          type: integer\n        maxAgeDays:\n          type: integer\n        minAgeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsComplexity:\n      properties:\n        dictionary:\n          $ref: '#/components/schemas/PasswordDictionary'\n        excludeAttributes:\n          items:\n            type: string\n          type: array\n        excludeUsername:\n          default: true\n          type: boolean\n        minLength:\n          type: integer\n        minLowerCase:\n          type: integer\n        minNumber:\n          type: integer\n        minSymbol:\n          type: integer\n        minUpperCase:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsLockout:\n      properties:\n        autoUnlockMinutes:\n          type: integer\n        maxAttempts:\n          type: integer\n        showLockoutFailures:\n          type: boolean\n        userLockoutNotificationChannels:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmail:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailProperties:\n      properties:\n        recoveryToken:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailRecoveryToken:\n      properties:\n        tokenLifetimeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactorSettings:\n      properties:\n        status:\n          default: INACTIVE\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactors:\n      properties:\n        okta_call:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        okta_email:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'\n        okta_sms:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        recovery_question:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestion:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionComplexity:\n      properties:\n        minLength:\n          readOnly: true\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionProperties:\n      properties:\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoverySettings:\n      properties:\n        factors:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRule:\n      properties:\n        actions:\n          $ref: '#/components/schemas/PasswordPolicyRuleActions'\n        conditions:\n          $ref: '#/components/schemas/PasswordPolicyRuleConditions'\n        name:\n          type: string\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRule'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRuleAction:\n      properties:\n        access:\n          enum:\n          - ALLOW\n          - DENY\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRuleActions:\n      properties:\n        passwordChange:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServicePasswordReset:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServiceUnlock:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleActions'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRuleConditions:\n      properties:\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordPolicySettings:\n      properties:\n        delegation:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'\n        password:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'\n        recovery:\n          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatform:\n      properties:\n        os:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'\n        type:\n          enum:\n          - DESKTOP\n          - MOBILE\n          - OTHER\n          - ANY\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystem:\n      properties:\n        expression:\n          type: string\n        type:\n          enum:\n          - ANDROID\n          - IOS\n          - WINDOWS\n          - OSX\n          - OTHER\n          - ANY\n          type: string\n        version:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystemVersion:\n      properties:\n        matchType:\n          enum:\n          - EXPRESSION\n          - SEMVER\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Policy:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        conditions:\n          $ref: '#/components/schemas/PolicyRuleConditions'\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        system:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/PolicyType'\n      type: object\n      x-okta-crud:\n      - alias: read\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicy\n      - alias: update\n        arguments:\n        - dest: policyId\n          src: id\n        - dest: policy\n          self: true\n        operationId: updatePolicy\n      - alias: delete\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deletePolicy\n      x-okta-operations:\n      - alias: activate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: activatePolicy\n      - alias: deactivate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deactivatePolicy\n      - alias: listPolicyRules\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: listPolicyRules\n      - alias: createRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: createPolicyRule\n      - alias: getPolicyRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicyRule\n      x-okta-tags:\n      - Policy\n      x-openapi-v3-discriminator:\n        mapping:\n          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'\n          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/OAuthAuthorizationPolicy'\n          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'\n          PASSWORD: '#/components/schemas/PasswordPolicy'\n        propertyName: type\n    PolicyAccountLink:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - DISABLED\n          type: string\n        filter:\n          $ref: '#/components/schemas/PolicyAccountLinkFilter'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilter:\n      properties:\n        groups:\n          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilterGroups:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyNetworkCondition:\n      properties:\n        connection:\n          enum:\n          - ANYWHERE\n          - ZONE\n          type: string\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyPeopleCondition:\n      properties:\n        groups:\n          $ref: '#/components/schemas/GroupCondition'\n        users:\n          $ref: '#/components/schemas/UserCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRule:\n      properties:\n        actions:\n          $ref: '#/components/schemas/PolicyRuleActions'\n        conditions:\n          $ref: '#/components/schemas/PolicyRuleConditions'\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          default: ACTIVE\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        system:\n          default: false\n          type: boolean\n        type:\n          enum:\n          - SIGN_ON\n          - PASSWORD\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: update\n        arguments:\n        - dest: ruleId\n          src: id\n        - dest: policyRule\n          self: true\n        - dest: policyId\n          parentSrc: id\n        operationId: updatePolicyRule\n      - alias: delete\n        arguments:\n        - dest: ruleId\n          src: id\n        - dest: policyId\n          parentSrc: policyId\n        operationId: deletePolicyRule\n      x-okta-operations:\n      - alias: activate\n        arguments:\n        - dest: ruleId\n          src: id\n        - dest: policyId\n          parentSrc: policyId\n        operationId: activatePolicyRule\n      - alias: deactivate\n        arguments:\n        - dest: ruleId\n          src: id\n        - dest: policyId\n          parentSrc: policyId\n        operationId: deactivatePolicyRule\n      x-okta-tags:\n      - Policy\n      x-openapi-v3-discriminator:\n        mapping:\n          PASSWORD: '#/components/schemas/PasswordPolicyRule'\n          SIGN_ON: '#/components/schemas/OktaSignOnPolicyRule'\n        propertyName: type\n    PolicyRuleActions:\n      properties:\n        enroll:\n          $ref: '#/components/schemas/PolicyRuleActionsEnroll'\n        passwordChange:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServicePasswordReset:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        selfServiceUnlock:\n          $ref: '#/components/schemas/PasswordPolicyRuleAction'\n        signon:\n          $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleActionsEnroll:\n      properties:\n        self:\n          $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleActionsEnrollSelf:\n      enum:\n      - CHALLENGE\n      - LOGIN\n      - NEVER\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyRuleAuthContextCondition:\n      properties:\n        authType:\n          enum:\n          - ANY\n          - RADIUS\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleConditions:\n      properties:\n        app:\n          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'\n        apps:\n          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'\n        authContext:\n          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        beforeScheduledAction:\n          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'\n        clients:\n          $ref: '#/components/schemas/ClientPolicyCondition'\n        context:\n          $ref: '#/components/schemas/ContextPolicyRuleCondition'\n        device:\n          $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        grantTypes:\n          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'\n        groups:\n          $ref: '#/components/schemas/GroupPolicyRuleCondition'\n        identityProvider:\n          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'\n        mdmEnrollment:\n          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n        platform:\n          $ref: '#/components/schemas/PlatformPolicyRuleCondition'\n        risk:\n          $ref: '#/components/schemas/RiskPolicyRuleCondition'\n        riskScore:\n          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'\n        scopes:\n          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'\n        userIdentifier:\n          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'\n        userStatus:\n          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'\n        users:\n          $ref: '#/components/schemas/UserPolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubject:\n      properties:\n        filter:\n          type: string\n        format:\n          items:\n            type: string\n          type: array\n        matchAttribute:\n          type: string\n        matchType:\n          $ref: '#/components/schemas/PolicySubjectMatchType'\n        userNameTemplate:\n          $ref: '#/components/schemas/PolicyUserNameTemplate'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubjectMatchType:\n      enum:\n      - USERNAME\n      - EMAIL\n      - USERNAME_OR_EMAIL\n      - CUSTOM_ATTRIBUTE\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyType:\n      enum:\n      - OAUTH_AUTHORIZATION_POLICY\n      - OKTA_SIGN_ON\n      - PASSWORD\n      - IDP_DISCOVERY\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyUserNameTemplate:\n      properties:\n        template:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    Provisioning:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - CALLOUT\n          - DISABLED\n          type: string\n        conditions:\n          $ref: '#/components/schemas/ProvisioningConditions'\n        groups:\n          $ref: '#/components/schemas/ProvisioningGroups'\n        profileMaster:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningConditions:\n      properties:\n        deprovisioned:\n          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'\n        suspended:\n          $ref: '#/components/schemas/ProvisioningSuspendedCondition'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningDeprovisionedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - REACTIVATE\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningGroups:\n      properties:\n        action:\n          enum:\n          - NONE\n          - APPEND\n          - SYNC\n          - ASSIGN\n          type: string\n        assignments:\n          items:\n            type: string\n          type: array\n        filter:\n          items:\n            type: string\n          type: array\n        sourceAttributeName:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningSuspendedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - UNSUSPEND\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    RiskPolicyRuleCondition:\n      properties:\n        behaviors:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n      type: object\n      x-okta-tags:\n      - Policy\n    RiskScorePolicyRuleCondition:\n      properties:\n        level:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    ScheduledUserLifecycleAction:\n      properties:\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentifierConditionEvaluatorPattern:\n      properties:\n        matchType:\n          enum:\n          - SUFFIX\n          - EXPRESSION\n          - STARTS_WITH\n          - EQUALS\n          - CONTAINS\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentifierPolicyRuleCondition:\n      properties:\n        attribute:\n          type: string\n        patterns:\n          items:\n            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'\n          type: array\n        type:\n          enum:\n          - IDENTIFIER\n          - ATTRIBUTE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentityProviderLinkRequest:\n      properties:\n        externalId:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserLifecycleAttributePolicyRuleCondition:\n      properties:\n        attributeName:\n          type: string\n        matchingValue:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        inactivity:\n          $ref: '#/components/schemas/InactivityPolicyRuleCondition'\n        include:\n          items:\n            type: string\n          type: array\n        lifecycleExpiration:\n          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'\n        passwordExpiration:\n          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'\n        userLifecycleAttribute:\n          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    UserStatusPolicyRuleCondition:\n      properties:\n        value:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    policies:\n      id: okta.policy.policies\n      methods:\n        activate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}~1lifecycle~1activate/POST'\n          response:\n            openAPIDocKey: '200'\n        deactivate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}~1lifecycle~1deactivate/POST'\n          response:\n            openAPIDocKey: '204'\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}/DELETE'\n          response:\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: policies\n      title: policies\n    rules:\n      id: okta.policy.rules\n      methods:\n        activate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}~1lifecycle~1activate/POST'\n          response:\n            openAPIDocKey: '200'\n        deactivate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}~1lifecycle~1deactivate/POST'\n          response:\n            openAPIDocKey: '204'\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        put:\n          operation:\n            $ref: '#/paths/~1api~1v1~1policies~1{policyId}~1rules~1{ruleId}/PUT'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: rules\n      title: rules\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/policies:\n    get:\n      description: Gets all policies with the specified type.\n      operationId: listPolicies\n      parameters:\n      - in: query\n        name: type\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: status\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Policy'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    post:\n      description: Creates a policy.\n      operationId: createPolicy\n      parameters:\n      - in: query\n        name: activate\n        schema:\n          default: true\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Policy'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n      x-codegen-request-body-name: policy\n  /api/v1/policies/{policyId}:\n    delete:\n      description: Removes a policy.\n      operationId: deletePolicy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    get:\n      description: Gets a policy.\n      operationId: getPolicy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    put:\n      description: Updates a policy.\n      operationId: updatePolicy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Policy'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n      x-codegen-request-body-name: policy\n  /api/v1/policies/{policyId}/lifecycle/activate:\n    post:\n      description: Activates a policy.\n      operationId: activatePolicy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - Policy\n  /api/v1/policies/{policyId}/lifecycle/deactivate:\n    post:\n      description: Deactivates a policy.\n      operationId: deactivatePolicy\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - Policy\n  /api/v1/policies/{policyId}/rules:\n    get:\n      description: Enumerates all policy rules.\n      operationId: listPolicyRules\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PolicyRule'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    post:\n      description: Creates a policy rule.\n      operationId: createPolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyRule'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n      x-codegen-request-body-name: policyRule\n  /api/v1/policies/{policyId}/rules/{ruleId}:\n    delete:\n      description: Removes a policy rule.\n      operationId: deletePolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    get:\n      description: Gets a policy rule.\n      operationId: getPolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n    put:\n      description: Updates a policy rule.\n      operationId: updatePolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PolicyRule'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PolicyRule'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n      x-codegen-request-body-name: policyRule\n  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:\n    post:\n      description: Activates a policy rule.\n      operationId: activatePolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - Policy\n  /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:\n    post:\n      description: Deactivates a policy rule.\n      operationId: deactivatePolicyRule\n      parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: ruleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - Policy\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/okta/v0.1.0/services/Policy.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/okta/v0.1.0/services/Policy.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}