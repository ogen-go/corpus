{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "http_api_multiple_authorizers.json",
			"size": 0,
			"path": "tests/translator/output/aws-cn/http_api_multiple_authorizers.json",
			"byteSize": 8575,
			"content": "{\n  \"Resources\": {\n    \"HttpApiFunction\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"sam-demo-bucket\",\n          \"S3Key\": \"todo_list.zip\"\n        },\n        \"Handler\": \"index.restapi\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\"HttpApiFunctionRole\", \"Arn\"]\n        },\n        \"Runtime\": \"python3.7\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      }\n    },\n    \"HttpApiFunctionRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Action\": [\"sts:AssumeRole\"],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\"lambda.amazonaws.com\"]\n              }\n            }\n          ]\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      }\n    },\n    \"HttpApiFunctionSimpleCasePermission\": {\n      \"Type\": \"AWS::Lambda::Permission\",\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"HttpApiFunction\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      }\n    },\n    \"MyAuthFn\": {\n      \"Type\": \"AWS::Lambda::Function\",\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"bucket\",\n          \"S3Key\": \"key\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\"MyAuthFnRole\", \"Arn\"]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      }\n    },\n    \"MyAuthFnRole\": {\n      \"Type\": \"AWS::IAM::Role\",\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Action\": [\"sts:AssumeRole\"],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\"lambda.amazonaws.com\"]\n              }\n            }\n          ]\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      }\n    },\n    \"MyApi\": {\n      \"Type\": \"AWS::ApiGatewayV2::Api\",\n      \"Properties\": {\n        \"Body\": {\n          \"openapi\": \"3.0.1\",\n          \"info\": {\n            \"version\": \"1.0\",\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            }\n          },\n          \"paths\": {\n            \"/hello\": {\n              \"get\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations\"\n                  }\n                },\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"LambdaAuth\": []\n                  }\n                ]\n              },\n              \"put\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations\"\n                  }\n                },\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"MyOauth2Authorizer\": [\"scope\"]\n                  }\n                ]\n              },\n              \"post\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations\"\n                  }\n                },\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"LambdaAuth\": []\n                  }\n                ]\n              }\n            },\n            \"/hello-aws-iam-auth\": {\n              \"get\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations\"\n                  }\n                },\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"AWS_IAM\": []\n                  }\n                ]\n              }\n            },\n            \"$default\": {\n              \"x-amazon-apigateway-any-method\": {\n                \"x-amazon-apigateway-integration\": {\n                  \"type\": \"aws_proxy\",\n                  \"httpMethod\": \"POST\",\n                  \"payloadFormatVersion\": \"2.0\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpApiFunction.Arn}/invocations\"\n                  }\n                },\n                \"isDefaultRoute\": true,\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"LambdaAuth\": []\n                  }\n                ]\n              }\n            }\n          },\n          \"components\": {\n            \"securitySchemes\": {\n              \"AWS_IAM\": {\n                \"type\": \"apiKey\",\n                \"name\": \"Authorization\",\n                \"in\": \"header\",\n                \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n              },\n              \"LambdaAuth\": {\n                \"type\": \"apiKey\",\n                \"name\": \"Unused\",\n                \"in\": \"header\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"type\": \"request\",\n                  \"authorizerUri\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations\",\n                      {\n                        \"__FunctionArn__\": {\n                          \"Fn::GetAtt\": [\"MyAuthFn\", \"Arn\"]\n                        }\n                      }\n                    ]\n                  },\n                  \"authorizerPayloadFormatVersion\": 1.0\n                }\n              },\n              \"MyOauth2Authorizer\": {\n                \"type\": \"oauth2\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"jwtConfiguration\": {\n                    \"audience\": [\"audience1\", \"audience2\"],\n                    \"issuer\": \"https://www.example.com/v1/connect/oidc\"\n                  },\n                  \"identitySource\": \"$request.header.Authorization\",\n                  \"type\": \"jwt\"\n                }\n              }\n            }\n          },\n          \"tags\": [\n            {\n              \"name\": \"Tag1\",\n              \"x-amazon-apigateway-tag-value\": \"value1\"\n            },\n            {\n              \"name\": \"Tag2\",\n              \"x-amazon-apigateway-tag-value\": \"value2\"\n            },\n            {\n              \"name\": \"httpapi:createdBy\",\n              \"x-amazon-apigateway-tag-value\": \"SAM\"\n            }\n          ]\n        }\n      }\n    },\n    \"MyApiApiGatewayDefaultStage\": {\n      \"Type\": \"AWS::ApiGatewayV2::Stage\",\n      \"Properties\": {\n        \"ApiId\": {\n          \"Ref\": \"MyApi\"\n        },\n        \"StageName\": \"$default\",\n        \"Tags\": {\n          \"Tag1\": \"value1\",\n          \"Tag2\": \"value2\",\n          \"httpapi:createdBy\": \"SAM\"\n        },\n        \"AutoDeploy\": true\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@30f206a677fb8080750de88c255ad09b24071873/-/blob/tests/translator/output/aws-cn/http_api_multiple_authorizers.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/30f206a677fb8080750de88c255ad09b24071873/tests/translator/output/aws-cn/http_api_multiple_authorizers.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}