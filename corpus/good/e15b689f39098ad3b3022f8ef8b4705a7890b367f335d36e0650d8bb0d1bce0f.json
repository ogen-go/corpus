{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/littlebunch/fdc-api"
		},
		"file": {
			"name": "apiDoc.json",
			"size": 0,
			"path": "api/dist/apiDoc.json",
			"byteSize": 35805,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"REST API for the Branded Food Products nutrient data released on the USDA [Food Data Central](https://fdc.nal.usda.gov/download-datasets.html) site.\",\n    \"version\": \"1.1.0\",\n    \"title\": \"Branded Food Products API\",\n    \"contact\": {\n      \"name\": \"Gary Moore\",\n      \"email\": \"gary@littlebunch.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://go.littlebunch.com\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"admin\",\n      \"description\": \"Operations avaiable for administrators\"\n    },\n    {\n      \"name\": \"developers\",\n      \"description\": \"Operations available to regular developers\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/login\": {\n      \"post\": {\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"login by username and password\",\n        \"description\": \"valid credentials will return a bearer token which can then be sent on authorization requests to protected operations.\",\n        \"operationId\": \"Login\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/login\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/loginresult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"401\": {\n            \"description\": \"incorrect user name or password\"\n          }\n        }\n      }\n    },\n    \"/v1/user/{username}\": {\n      \"delete\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"delete user record for username\",\n        \"operationId\": \"DeleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"username of user to delete\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"myuser\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"delete successful\"\n          },\n          \"401\": {\n            \"description\": \"token is expired\"\n          }\n        }\n      },\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"list user record for username\",\n        \"operationId\": \"ListUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"username of user to delete\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"myuser\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"returns user record\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"token is expired\"\n          }\n        }\n      }\n    },\n    \"/v1/user\": {\n      \"put\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"Add or edit user record for username\",\n        \"operationId\": \"AddUser\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/user\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"add/edit successful\"\n          },\n          \"400\": {\n            \"description\": \"missing required data\"\n          },\n          \"401\": {\n            \"description\": \"token is expired\"\n          }\n        }\n      }\n    },\n    \"/v1/users\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"bearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"admin\"\n        ],\n        \"summary\": \"list all admin users\",\n        \"operationId\": \"ListUsers\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"list of users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/user\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"token is expired\"\n          }\n        }\n      }\n    },\n    \"/v1/dictionary/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"fetch documents from a dictionary.  A dictionary can be one of nutrients (NUT), food groups (FGGPC) or derivations (DERV)\",\n        \"operationId\": \"Dictionary\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"dictionary to retrieve.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FGFNDDS\",\n                \"FGGPC\",\n                \"FGSR\",\n                \"NUT\",\n                \"DERV\"\n              ]\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"page is used to determine a start point (offset) into the search results list, i.e. offset=page*max.  Paging is zero based so page=0 and max=50 results in offset 0, page=3 and max=50 results in an offset into the list of 150, etc.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"max\",\n            \"in\": \"query\",\n            \"description\": \"maximum number of records to return.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"maximum\": 300,\n              \"minimum\": 1,\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/foodGroup\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/derivation\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/nutrient\"\n                    }\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/docs/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"fetches openapi spec in json or yaml format as specified by the {type} parameter\",\n        \"operationId\": \"Docs\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"json\",\n                \"yaml\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"openApi spec rendered as json or yaml\"\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no output found\"\n          }\n        }\n      }\n    },\n    \"/v1/food/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"fetches one food item by fdcId or UPC\",\n        \"description\": \"Retrieves a single food item by FDC id or GTIN/UPC.\",\n        \"operationId\": \"FoodById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Food Data Central ID of the food to retrieve\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BrowseFoodResult\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/foods\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"get a list of foods by FDC id or GTIN/UPC code.\",\n        \"description\": \"By passing in a list of FDC ids or GTIN/UPC codes, you can retrieve a list of foods.\",\n        \"operationId\": \"foodsByIds\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"repeating variable of up to 24 FDC id' or GTIN/UPC codes\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 24,\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"browse results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BrowseFoodResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/foods/browse\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"browse foods data\",\n        \"description\": \"By passing in the appropriate options, you can browse for available foods\",\n        \"operationId\": \"foodsBrowse\",\n        \"parameters\": [\n          {\n            \"name\": \"fg\",\n            \"in\": \"query\",\n            \"description\": \"filter on food group description or food group id.  A list of valid food group descriptions and ids can be obtained from the /v1/dictionary/FGGPC endpoint.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Plant Based Water\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"page is used to determine a start point (offset) into the search results list, i.e. offset=page*max.  Paging is zero based so page=0 and max=50 results in offset 0, page=3 and max=50 results in an offset into the list of 150, etc.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 0,\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"max\",\n            \"in\": \"query\",\n            \"description\": \"maximum number of records to return.\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"maximum\": 150,\n              \"minimum\": 1,\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"return the results list ordered by foodDescription, company, or fdcId.  Default is fdcId\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"foodDescription\",\n                \"company\",\n                \"fdcId\"\n              ]\n            },\n            \"required\": false\n          },\n          {\n            \"name\": \"order\",\n            \"in\": \"query\",\n            \"description\": \"return the ordered list ordered asc(ending) or desc(ending).  Default is asc\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"asc\",\n                \"desc\"\n              ]\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"browse results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BrowseFoodResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/foods/search\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"operationId\": \"FoodsSearch\",\n        \"summary\": \"Performs keyword searches against selected fields.\",\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"query string\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"starting page number of results set\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"example\": 1\n          },\n          {\n            \"name\": \"max\",\n            \"in\": \"query\",\n            \"description\": \"Number of items to return in a results set\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"minimum\": 1,\n              \"maximum\": 150\n            },\n            \"example\": 50\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of food items matching the query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"operationId\": \"FoodsSearchPost\",\n        \"summary\": \"Performs searches using the SearchRequest type.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SearchRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of food items matching the query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultItem\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/nutrients/food/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"returns nutrient data elements for a food item\",\n        \"description\": \"Returns either the list of nutrient data items  or a single nutrient data item for a food item identified by it' or GTIN/UPC codes fdc id.\",\n        \"operationId\": \"NutrientsFood\",\n        \"parameters\": [\n          {\n            \"name\": \"n\",\n            \"in\": \"query\",\n            \"description\": \"return only the nutrient data identifed by the nutrient numbers in n\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"integer\"\n            },\n            \"description\": \"FDC ID of the food for which nutrient data is being requested\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"a single NutrientData element or a list of elements\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BrowseNutrientDataResult\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/nutrients/foods\": {\n      \"get\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"summary\": \"get a list of nutrients for a list food ID's or GTIN/UPC codes\",\n        \"operationId\": \"NutrientsFoods\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"repeating variable of up to 24 FDC id' or GTIN/UPC codes\",\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"maxItems\": 24,\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"n\",\n            \"in\": \"query\",\n            \"description\": \"limit nutrients returned to a specified nutrient number\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"required\": false\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"browse results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BrowseNutrientDataResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    },\n    \"/v1/nutrients/report\": {\n      \"post\": {\n        \"tags\": [\n          \"developers\"\n        ],\n        \"operationId\": \"NutrientReport\",\n        \"summary\": \"Return a list of foods based on values within a specified range of values for a  nutrient.  Values may be based on per 100 unit or portion and may be ordered descending or ascending.  A report may optionally be filtered by FoodGroup description\",\n        \"requestBody\": {\n          \"required\": true,\n          \"description\": \"report to perform\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NutrientReportRequest\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"browse results matching criteria\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BrowseNutrientReport\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\"\n          },\n          \"404\": {\n            \"description\": \"no results found\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"BrowseNutrientReport\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"request\": {\n            \"$ref\": \"#/components/schemas/NutrientReportRequest\"\n          },\n          \"foods\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NutrientReportItem\"\n            }\n          }\n        }\n      },\n      \"NutrientReportRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"nutrientno\"\n        ],\n        \"properties\": {\n          \"nutrientno\": {\n            \"description\": \"Nutrient number for which data is being requested\",\n            \"type\": \"integer\",\n            \"example\": 208\n          },\n          \"foodGroup\": {\n            \"description\": \"Filter foods on food group description\",\n            \"type\": \"string\",\n            \"example\": \"Cereal\"\n          },\n          \"valueGTE\": {\n            \"description\": \"Search for nutrient value greater than or equal to\",\n            \"example\": 10,\n            \"type\": \"integer\",\n            \"format\": \"float32\"\n          },\n          \"valueLTE\": {\n            \"description\": \"Search for nutrient value less than or equal to\",\n            \"example\": 100,\n            \"type\": \"integer\",\n            \"format\": \"float32\"\n          },\n          \"sort\": {\n            \"description\": \"sort the report using valuePer100UnitServing or valuePortion.  Default is \\\"100value\\\" for valuePer100UnitServing\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"portion\",\n              \"100value\"\n            ],\n            \"example\": \"portion\"\n          },\n          \"order\": {\n            \"description\": \"order the report using valuePer100UnitServing or valuePortion in ascending (asc) or descending order (desc).  The default is desc.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"asc\",\n              \"desc\"\n            ],\n            \"example\": \"desc\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"The number of items in the list returned by a browse or search request\",\n            \"example\": 50,\n            \"minimum\": 1,\n            \"maximum\": 150\n          }\n        }\n      },\n      \"SearchRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"q\"\n        ],\n        \"properties\": {\n          \"q\": {\n            \"description\": \"Search terms\",\n            \"type\": \"string\",\n            \"example\": \"corn flakes\"\n          },\n          \"foodgroup\": {\n            \"description\": \"restrict results to a specific food group\",\n            \"type\": \"string\",\n            \"example\": \"Cereal\"\n          },\n          \"format\": {\n            \"description\": \"One of 'full', 'servings', 'meta' or 'nutrients'.  Default is 'meta'\",\n            \"type\": \"string\",\n            \"example\": \"full\"\n          },\n          \"searchfield\": {\n            \"description\": \"Limit search to a particular field\",\n            \"example\": \"foodDescription\",\n            \"type\": \"string\"\n          },\n          \"page\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"The number of items in the list returned by a browse or search request\",\n            \"example\": 50,\n            \"minimum\": 1,\n            \"maximum\": 150\n          },\n          \"searchtype\": {\n            \"description\": \"One of PHRASE, WILDCARD or REGEX\",\n            \"example\": \"PHRASE\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"BrowseFoodResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Number of records found by a browse or search request\",\n            \"example\": 10\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"description\": \"Starting point (offset) into the list returned by a browse or search request\",\n            \"format\": \"int32\",\n            \"example\": 0\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of items in the list returned by a browse or search request\",\n            \"format\": \"int32\",\n            \"example\": 50,\n            \"minimum\": 1,\n            \"maximum\": 150\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BFPDFoodItem\"\n            }\n          }\n        }\n      },\n      \"SearchResultItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"count\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"Number of records found by a search request\",\n            \"example\": 10\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"description\": \"Starting point (offset) into the list returned by the search request\",\n            \"format\": \"int32\",\n            \"example\": 0\n          },\n          \"max\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of items in the list returned by a search request\",\n            \"format\": \"int32\",\n            \"example\": 50,\n            \"minimum\": 1,\n            \"maximum\": 150\n          },\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/searchitem\"\n            }\n          }\n        }\n      },\n      \"BrowseNutrientDataResult\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fdcId\": {\n            \"type\": \"string\",\n            \"description\": \"FdcID of the food\",\n            \"example\": \"412617\"\n          },\n          \"upc\": {\n            \"type\": \"string\",\n            \"description\": \"UPC for the food\",\n            \"example\": \"061500127178\"\n          },\n          \"foodDescription\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the food\",\n            \"example\": \"!AJUA!, CAFFEINE FREE SODA, MANDARIN ORANGE\"\n          },\n          \"company\": {\n            \"type\": \"string\",\n            \"description\": \"food manufacturer\",\n            \"example\": \"!AJUA!\"\n          },\n          \"category\": {\n            \"type\": \"string\",\n            \"description\": \"food group to which food belongs\",\n            \"example\": \"Soda\"\n          },\n          \"portion\": {\n            \"type\": \"string\",\n            \"description\": \"Portion description\",\n            \"example\": \"8 oz\"\n          },\n          \"nutrients\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/nutrientData\"\n            }\n          }\n        }\n      },\n      \"NutrientReportItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fdcId\": {\n            \"type\": \"string\",\n            \"example\": \"562423\"\n          },\n          \"foodDescription\": {\n            \"type\": \"string\",\n            \"example\": \"BEEF RAVIOLI\"\n          },\n          \"upc\": {\n            \"type\": \"string\",\n            \"example\": \"070038591559\"\n          },\n          \"valuePer100UnitServing\": {\n            \"type\": \"integer\",\n            \"format\": \"float32\",\n            \"example\": 206\n          },\n          \"unit\": {\n            \"type\": \"string\",\n            \"example\": \"KCAL\"\n          },\n          \"portion\": {\n            \"type\": \"string\",\n            \"example\": \"10 PIECES (136 g)\"\n          },\n          \"portionValue\": {\n            \"type\": \"string\",\n            \"example\": 280\n          }\n        }\n      },\n      \"BFPDFoodItem\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"fdcId\",\n          \"foodDescription\"\n        ],\n        \"properties\": {\n          \"fdcId\": {\n            \"description\": \"Food Data Central id assigned to the time.\",\n            \"type\": \"string\",\n            \"example\": \"45001529\"\n          },\n          \"foodDescription\": {\n            \"description\": \"Manufacturer' or GTIN/UPC codes name of the food item\",\n            \"type\": \"string\",\n            \"example\": \"HOT \u0026 SPICY BARBECUE SAUCE\"\n          },\n          \"lastChangeDateTime\": {\n            \"description\": \"ISO 8601 date representation of when data was last changed\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2016-08-29T09:12:33.001Z\"\n          },\n          \"publicationDateTime\": {\n            \"description\": \"ISO 8601 date representation of when data was published\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2016-08-29T09:12:33.001Z\"\n          },\n          \"company\": {\n            \"description\": \"Food item' or GTIN/UPC codes manufacturer\",\n            \"type\": \"string\",\n            \"example\": \"FRESH \u0026 EASY\"\n          },\n          \"dataSource\": {\n            \"description\": \"Source of the reported data, either LI or GDSN\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"LI\",\n              \"GDSN\"\n            ],\n            \"example\": \"LI\"\n          },\n          \"upc\": {\n            \"description\": \"universal product code (upc), if dataSource is LI or gloabal trade item number (GTIN), if dataSource is GDSN\",\n            \"type\": \"string\",\n            \"example\": \"011150548885\"\n          },\n          \"foodGroup\": {\n            \"$ref\": \"#/components/schemas/foodGroup\"\n          },\n          \"ingredients\": {\n            \"description\": \"ingredients list\",\n            \"type\": \"string\",\n            \"example\": \"SUGAR, DISTILLED VINEGAR, WATER, TOMATO PASTE, MODIFIED CORN STARCH.\"\n          },\n          \"servingSizes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/servingSizes\"\n            }\n          }\n        }\n      },\n      \"servingSizes\": {\n        \"properties\": {\n          \"nutrientBasis\": {\n            \"type\": \"string\",\n            \"example\": \"g\"\n          },\n          \"servingUnit\": {\n            \"type\": \"string\",\n            \"example\": \"Tbsp\"\n          },\n          \"servingState\": {\n            \"type\": \"string\",\n            \"example\": \"PREPARED\"\n          },\n          \"weight\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 32\n          },\n          \"value\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 10.1\n          }\n        }\n      },\n      \"nutrientData\": {\n        \"required\": [\n          \"nutrientNumber\",\n          \"unit\"\n        ],\n        \"properties\": {\n          \"nutrientNumber\": {\n            \"type\": \"integer\",\n            \"format\": \"uint\",\n            \"example\": 301\n          },\n          \"nutrientName\": {\n            \"type\": \"string\",\n            \"example\": \"Calcium, CA\"\n          },\n          \"unit\": {\n            \"type\": \"string\",\n            \"example\": \"MG\"\n          },\n          \"derivation\": {\n            \"$ref\": \"#/components/schemas/derivation\"\n          },\n          \"valuePer100UnitServing\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 0\n          },\n          \"valuePerPortion\": {\n            \"description\": \"100g equivalent for stated portion\",\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"example\": 0\n          }\n        }\n      },\n      \"derivation\": {\n        \"description\": \"describes how a nutrient value was derived.\",\n        \"required\": [\n          \"id\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"example\": \"LCCD\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"example\": \"Calculated from a daily value percentage per serving size measure\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"uint\"\n          }\n        }\n      },\n      \"foodGroup\": {\n        \"description\": \"category to which a food has been assigned\",\n        \"required\": [\n          \"id\",\n          \"description\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"FGSR\",\n              \"FGGPC\",\n              \"FGFNDDS\"\n            ]\n          }\n        }\n      },\n      \"nutrient\": {\n        \"description\": \"a food nutrient\",\n        \"required\": [\n          \"id\",\n          \"nutrientno\",\n          \"name\",\n          \"unit\"\n        ],\n        \"properties\": {\n          \"nutrientno\": {\n            \"type\": \"integer\",\n            \"example\": 202\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"Nitrogen\"\n          },\n          \"unit\": {\n            \"type\": \"string\",\n            \"example\": \"G\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"searchitem\": {\n        \"description\": \"a food item from the search indexes\",\n        \"properties\": {\n          \"fdcId\": {\n            \"type\": \"string\",\n            \"example\": \"456281\"\n          },\n          \"upc\": {\n            \"type\": \"string\",\n            \"example\": \"076050280389\"\n          },\n          \"foodDescription\": {\n            \"type\": \"string\",\n            \"example\": \"KALAMATA OLIVES\"\n          },\n          \"dataSource\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"GDSN\",\n              \"LI\"\n            ],\n            \"example\": \"LI\"\n          },\n          \"company\": {\n            \"type\": \"string\",\n            \"example\": \"Food Match, Inc.\"\n          },\n          \"ingredients\": {\n            \"type\": \"string\",\n            \"example\": \"KALAMATA OLIVES, WATER, RED WINE VINEGAR, SEA SALT, GRAPE MUST\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"example\": \"FOOD\"\n          }\n        }\n      },\n      \"login\": {\n        \"description\": \"login credentials\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"loginresult\": {\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"description\": \"http response code\",\n            \"example\": 200\n          },\n          \"expire\": {\n            \"type\": \"string\",\n            \"example\": \"2020-05-31T10:43:24-04:00\"\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"example\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTA5MzYyMDQsIm9yaWdfaWF0IjoxNTkwOTMyNjA0LCJyb2xlIjoiQURNSU4ifQ.cZjm02Nk06IMUIcKNwQb_NzimBz9cEztmEa4k-itnmI\"\n          }\n        }\n      },\n      \"user\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"username identifying a user\",\n            \"example\": \"myuser\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"email address for the user\",\n            \"example\": \"myuser@example.com\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/littlebunch/fdc-api@c042da3be7c7d289e780bccdb91211c965465f57/-/blob/api/dist/apiDoc.json",
			"externalURLs": [
				{
					"url": "https://github.com/littlebunch/fdc-api/blob/c042da3be7c7d289e780bccdb91211c965465f57/api/dist/apiDoc.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}