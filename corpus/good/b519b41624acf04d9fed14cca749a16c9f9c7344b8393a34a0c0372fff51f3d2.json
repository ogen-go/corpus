{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cdimascio/kotlin-spring-mvc-template"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/main/resources/static/api_explorer/api.yaml",
			"byteSize": 4616,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Users example API\n  license:\n    name: MIT\nservers:\n- url: /\npaths:\n  /users:\n    get:\n      summary: Get users\n      tags:\n      - users\n      responses:\n        '200':\n          description: The list of users\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n    post:\n      summary: Create an user\n      operationId: createUsers\n      tags:\n      - users\n      requestBody:\n        description: File and metdata\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreate'\n      responses:\n        '201':\n          description: The new user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /users/{user_id}:\n    get:\n      summary: Get the user\n      operationId: getUser\n      tags:\n      - users\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: The user id\n        schema:\n          type: string\n        example: 0\n      responses:\n        '200':\n          description: The user with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        '404':\n          description: not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Update a user\n      operationId: updateUser\n      tags:\n      - users\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: The user id\n        schema:\n          type: string\n        example: 0\n      requestBody:\n        description: File and metdata\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: The user with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        '404':\n          description: not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n    delete:\n      summary: Delete a user\n      operationId: deleteUser\n      tags:\n      - users\n      parameters:\n      - name: user_id\n        in: path\n        required: true\n        description: The user id\n        schema:\n          type: string\n        example: 0\n      responses:\n        '200':\n          description: The user with the specified id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        '404':\n          description: not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n\ncomponents:\n  schemas:\n    UserCreate:\n      required:\n      - name\n      properties:\n        name:\n          type: string\n      example: { name: \"carmine\" }\n    User:\n      required:\n      - id\n      - name\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      example: { id: 0, name: \"carmine\" }\n    Error:\n      required:\n      - trace\n      - errors\n      properties:\n        trace:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              code:\n                type: object\n              message:\n                type: string\n\n",
			"canonicalURL": "/github.com/cdimascio/kotlin-spring-mvc-template@f99b10ba0686abc82ddcd13993f804644f29af2c/-/blob/src/main/resources/static/api_explorer/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cdimascio/kotlin-spring-mvc-template/blob/f99b10ba0686abc82ddcd13993f804644f29af2c/src/main/resources/static/api_explorer/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}