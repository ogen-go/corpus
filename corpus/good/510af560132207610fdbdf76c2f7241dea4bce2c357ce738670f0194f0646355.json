{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OAI/Talks-and-Workshops"
		},
		"file": {
			"name": "5.4 Boolean Assertions.yaml",
			"size": 0,
			"path": "OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6 - Schema Objects/exercises/5.4 Boolean Assertions.yaml",
			"byteSize": 5879,
			"content": "# OpenAPI v3 Training Exercise\n\nopenapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: TaxBlaster API\n  description: |\n    # Exercise: Boolean Assertions\n    \n    Remember, JSON Schema is primarily a _validation language_. \n    Each schema is a set of constraints, and a value may conform\n    to more than one schema. Boolean assertions validate \n    conformance to one or more schemas:\n    * `allOf` asserts that the instance must validate\n      independently against _each one_ of a list of subschemas. \n      \n    * `anyOf` asserts that the instance must validate against\n      _at least one_ of a list of subschemas. \n\n    * `oneOf` asserts that the instance must validate against\n      _exactly one_ of a list of subschemas. \n\n    * `not` asserts that the instance does not conform to a\n      given subschema.\n      \n    Try making the following changes:\n      \n    1. Modify the `taxDue` property of `Taxpayer` so it accepts\n       _either_ a `number` or a `MissingValue`. \n       \n    2. Create a new schema component called `AmendedTaxFiling`\n       that is _both_ a `TaxFiling` and an `Amendment`. \n\npaths:\n\n  /tax_payment/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: Payment ID\n      required: true\n      schema:\n        type: string\n    get:\n      description: Retrieve a single tax payment.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n\n  /taxpayers:\n    get:\n      description: Retrieve the entire list of taxpayers.\n      parameters:\n      - name: minTaxDue\n        in: query\n        schema:\n          type: number\n        description: \u003e\n          Return only taxpayers with taxDue \u003e= the specified value.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Taxpayers\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /taxpayers/{id}:\n    parameters:\n    - description: ID of the individual taxpayer.\n      name: id\n      in: path\n      schema:\n        type: string\n      required: true\n    get:\n      description: Retrieve an individual taxpayer.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Taxpayer\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n\n  /tax_filings:\n    get:\n      description: Retrieve all available tax filings\n      parameters:\n      - name: status\n        in: query\n        description: \u003e \n          Return only tax filings with the specified tax filing status.\n        required: true\n        schema:\n          type: string\n          enum:\n          - Draft\n          - Submitted\n          - Accepted\n          - Audit_Pending        \n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxFilings\"\n        default:\n          description: \u003e\n            Unexpected error in processing the request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  \n  /tax_filings/{id}:\n    parameters:\n    - name: id\n      in: path\n      description: ID of the Tax Filing\n      required: true\n      schema:\n        type: string\n    get:\n      description: Retrieve an individual tax filing\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxFiling\"\n\ncomponents:\n  schemas:\n\n    TaxFiling:\n      type: object\n      required:\n        - filingID  \n      properties:\n        filingID:\n          type: string\n        taxpayerID:\n          type: string\n        jurisdiction:\n          type: string\n        fileDate:\n          type: string\n          format: date\n        isJointFiling:\n          type: boolean\n        filingStatus:\n          $ref: \"#/components/schemas/TaxFilingStatus\"\n    \n    Amendment:\n      description: a formal change to an existing document\n      type: object\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n        amendedBy:\n          type: string\n        originalDocumentURL:\n          type: string\n        changeSummary:\n          type: string \n        \n    TaxFilingStatus:\n      type: string\n      enum:\n      - Draft\n      - Submitted\n      - Accepted\n      - Audit_Pending\n          \n    TaxFilings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TaxFiling\"\n  \n    Taxpayer:\n      type: object\n      required:\n      - taxpayerID\n      properties:\n        taxpayerID:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        maritalStatus:\n          type: boolean\n        taxDue:\n          type: number\n  \n    MissingValue:\n      description:\n        An explanatory value given where the expected\n        value is missing. \n      type: string\n      enum:\n      - \"Not Available\"\n      - \"Not Applicable\"\n      - \"Not Meaningful\"\n      \n    Taxpayers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Taxpayer\"\n        \n    ErrorResponse:\n      description: An error string returned from a bad response.\n      type: object\n      properties:\n        errorMessage:\n          type: string\n        stackTrace:\n          type: string\n",
			"canonicalURL": "/github.com/OAI/Talks-and-Workshops@ed292cacb93ad43e574d8fee6247b9d524b43b34/-/blob/OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6%20-%20Schema%20Objects/exercises/5.4%20Boolean%20Assertions.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OAI/Talks-and-Workshops/blob/ed292cacb93ad43e574d8fee6247b9d524b43b34/OSSNA-OpenAPI-Workshop-2018/OASv3/workspace1/6 - Schema Objects/exercises/5.4 Boolean Assertions.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}