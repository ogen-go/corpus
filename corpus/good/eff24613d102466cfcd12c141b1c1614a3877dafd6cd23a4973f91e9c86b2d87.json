{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JetBrains/KotlinFinder"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "mpp-library/domain/src/openapi.yml",
			"byteSize": 4235,
			"content": "openapi: 3.0.0\ninfo:\n  title: JetFinder server\n  version: v1\nservers:\n  - url: http://kotlin-demo.kotlinconf.com:8080\n    description: demo\npaths:\n  /finder/status:\n    get:\n      tags:\n        - game\n      summary: 'get status'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n  /finder/config:\n    get:\n      tags:\n        - game\n      summary: 'get config'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n  /finder/proximity:\n    get:\n      tags:\n        - game\n      summary: 'send proximity nearby devices to get target info'\n      parameters:\n        - name: proximity\n          in: query\n          schema:\n            type: string\n          description: Device list\n          required: false\n          example: \"beacon0:-10,beacon1:-20,beacon2:-55\"\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProximityResponse'\n  /finder/register:\n    get:\n      tags:\n        - game\n      summary: 'send proximity nearby devices to get target info'\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n          description: Participant name\n          required: true\n          example: \"USERNAME\"\n      responses:\n        '200':\n          description: ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterResponse'\ncomponents:\n  schemas:\n    StatusResponse:\n      type: object\n      properties:\n        startTime:\n          type: string\n          format: date-time\n          example: \"2019-10-22 15:21:23\"\n        status:\n          type: integer\n          example: 1\n        result:\n          $ref: '#/components/schemas/ResultField'\n      required:\n        - startTime\n        - status\n        - result\n    ConfigResponse:\n      type: object\n      properties:\n        index:\n          type: integer\n          example: 1\n        winnerCount:\n          type: integer\n          example: 7\n        activeBeacons:\n          type: integer\n          example: 2\n        facts:\n          type: array\n          items:\n            type: string\n            example: \"Did you know that ***?\"\n        hints:\n          type: array\n          items:\n            $ref: '#/components/schemas/HintItem'\n        result:\n          $ref: '#/components/schemas/ResultField'\n      required:\n        - index\n        - result\n        - activeBeacons\n        - winnerCount\n    ProximityResponse:\n      type: object\n      properties:\n        discovered:\n          description: \"array with code of discovered spots\"\n          type: array\n          items:\n            type: integer\n            example: 1\n        near:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProximityItem'\n        result:\n          $ref: '#/components/schemas/ResultField'\n    HintItem:\n      type: object\n      properties:\n        code:\n          type: integer\n          example: 1\n        hint:\n          type: string\n          example: \"Me!\"\n      required:\n        - code\n        - question\n        - hint\n    ProximityItem:\n      type: object\n      properties:\n        code:\n          type: integer\n          example: 2\n        strength:\n          type: integer\n          example: 70\n      required:\n        - code\n        - strength\n    ResultField:\n      type: string\n      enum:\n        - OK\n        - ERROR\n      example: \"OK\"\n    RegisterResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: \"Message to winner\"\n        winner:\n          type: integer\n          example: 1\n        place:\n          type: integer\n          example: 3\n        winnerCount:\n          type: integer\n          example: 19\n        result:\n          $ref: '#/components/schemas/ResultField'\n      required:\n        - message\n        - winner\n        - place\n        - winnerCount\n        - result",
			"canonicalURL": "/github.com/JetBrains/KotlinFinder@915eb539cf04248b1314a14a596b8affb68352c1/-/blob/mpp-library/domain/src/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/JetBrains/KotlinFinder/blob/915eb539cf04248b1314a14a596b8affb68352c1/mpp-library/domain/src/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}