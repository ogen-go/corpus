{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wundergraph/wundergraph"
		},
		"file": {
			"name": "with_path_parameters.yaml",
			"size": 0,
			"path": "packages/sdk/src/v2openapi/testdata/with_path_parameters.yaml",
			"byteSize": 10409,
			"content": "openapi: 3.1.0\ninfo:\n  title: Example API\n  version: 1.31.0\nservers:\n  - url: https://example.com/api\npaths:\n  /passwordless/start:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                applicationId:\n                  type: string\n                loginId:\n                  type: string\n                state:\n                  type: object\n                  additionalProperties: true\n              required:\n                - applicationId\n                - loginId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: string\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: NoAuthProvided\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '404':\n          description: UserNotFound\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '500':\n          description: InternalError\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n  /passwordless/login:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                ipAddress:\n                  type: string\n                metaData:\n                  type: object\n                  properties:\n                    device:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        type:\n                          type: string\n                          enum:\n                            [\n                              BROWSER,\n                              DESKTOP,\n                              LAPTOP,\n                              MOBILE,\n                              OTHER,\n                              SERVER,\n                              TABLET,\n                              TV,\n                              UNKNOWN,\n                            ]\n              required:\n                - code\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refreshToken:\n                    type: string\n                  state:\n                    type: object\n                    additionalProperties: true\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      username:\n                        type: string\n                      usernameStatus:\n                        type: string\n                        enum: [ACTIVE, PENDING, REJECTED]\n                      verified:\n                        type: boolean\n                      firstName:\n                        type: string\n                      lastName:\n                        type: string\n                      email:\n                        type: string\n                      mobilePhone:\n                        type: string\n                      timezone:\n                        type: string\n        '202':\n          description: NotRegisteredForApp\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '203':\n          description: PasswordChangeRequested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  changePasswordReason:\n                    type: string\n        '212':\n          description: EmailNotVerified\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '213':\n          description: RegistrationNotVerified\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '242':\n          description: TwoFactorEnabled\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  methods:\n                    type: array\n                    items:\n                      type: object\n                      additionalProperties: true\n                  twoFactorId:\n                    type: string\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '500':\n          description: InternalError\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n  /jwt/refresh:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                refreshToken:\n                  type: string\n                token:\n                  type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  refreshToken:\n                    type: string\n                  token:\n                    type: string\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: NoAuthProvided\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '404':\n          description: TokenNotFound\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '500':\n          description: InternalError\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '503':\n          description: InternalError\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n  /logout:\n    post:\n      parameters:\n        - in: query\n          name: refreshToken\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: OK\n        500:\n          description: InternalError\n  /user/{userId}:\n    post:\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                applicationId:\n                  type: string\n                user:\n                  type: object\n                  properties:\n                    firstName:\n                      type: string\n                    lastName:\n                      type: string\n                    email:\n                      type: string\n                    birthDate:\n                      type: string\n                    mobilePhone:\n                      type: string\n                    imageUrl:\n                      type: string\n              required:\n                - applicationId\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                  user:\n                    type: object\n                    properties:\n                      firstName:\n                        type: string\n                      lastName:\n                        type: string\n                      email:\n                        type: string\n                      birthDate:\n                        type: string\n                      mobilePhone:\n                        type: string\n                      imageUrl:\n                        type: string\n                      id:\n                        type: string\n                      username:\n                        type: string\n        '400':\n          description: BadRequest\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '401':\n          description: NoAuthProvided\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n        '500':\n          description: InternalError\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n",
			"canonicalURL": "/github.com/wundergraph/wundergraph@e25beecd1dd92d96feee56dbbe31ea1dab1ee91a/-/blob/packages/sdk/src/v2openapi/testdata/with_path_parameters.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wundergraph/wundergraph/blob/e25beecd1dd92d96feee56dbbe31ea1dab1ee91a/packages/sdk/src/v2openapi/testdata/with_path_parameters.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}