{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/suquant/wgrest"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": ".docs/api/openapi.yaml",
			"byteSize": 24958,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@forestvpn.com\n    name: ForestVPN\n    url: https://forestvpn.com/\n  description: |\n    Manage WireGuard VPN tunnels by RESTful manner.\n\n    Supported features:\n\n      * Manage device: create, update, and delete wireguard interface\n      * Manage device's ip addresses: attache or detach ip addresses to the netowrk interface\n      * Manage device's peers: create, update, and delete peers\n      * Peer's QR code, for use in WireGuard \u0026 ForestVPN client\n\n    ForestVPN client may be used as alternative client with enabled P2P technology over WireGuard tunnelling.\n    Read more on https://forestvpn.com/\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  termsOfService: https://forestvpn.com/terms/\n  title: WireGuard RESTful API\n  version: \"1.0\"\nexternalDocs:\n  description: Documentation of wgrest\n  url: https://forestvpn.com/docs/wgrest/\nservers:\n- url: '{scheme}://{host}/v1'\n  variables:\n    host:\n      default: example.com\n    scheme:\n      default: https\n      enum:\n      - https\n      - http\nsecurity:\n- bearerAuth: []\npaths:\n  /devices/:\n    get:\n      operationId: ListDevices\n      parameters:\n      - description: Number of WireGuard devices per page. Default is 100\n        explode: true\n        in: query\n        name: per_page\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: Page number. Default is 0\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: number\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Device'\n                type: array\n          description: ok\n          headers:\n            Link:\n              explode: false\n              schema:\n                description: https://docs.github.com/en/rest/guides/traversing-with-pagination\n                type: string\n              style: simple\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Devices list\n      tags:\n      - device\n    post:\n      operationId: CreateDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCreateOrUpdateRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Ok\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Device exists\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Create new device\n      tags:\n      - device\n  /devices/{name}/:\n    delete:\n      operationId: DeleteDevice\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: No content\n        \"404\":\n          description: Not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete Device\n      tags:\n      - device\n    get:\n      operationId: GetDevice\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: ok\n        \"404\":\n          description: not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Get device info\n      tags:\n      - device\n    patch:\n      operationId: UpdateDevice\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceCreateOrUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Ok\n        \"404\":\n          description: Not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Update device\n      tags:\n      - device\n  /devices/{name}/options/:\n    get:\n      operationId: GetDeviceOptions\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceOptions'\n          description: ok\n        \"404\":\n          description: not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Get device options\n      tags:\n      - device\n    patch:\n      operationId: UpdateDeviceOptions\n      parameters:\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceOptionsUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceOptions'\n          description: Ok\n        \"404\":\n          description: Not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: unexpected error\n      summary: Update device's options\n      tags:\n      - device\n  /devices/{name}/peers/:\n    get:\n      operationId: ListDevicePeers\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Number of WireGuard device's peers per page. Default is 100\n        explode: true\n        in: query\n        name: per_page\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: Page number. Default is 0\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: Search query\n        explode: true\n        in: query\n        name: q\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Sort field\n        explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          enum:\n          - pub_key\n          - receive_bytes\n          - -receive_bytes\n          - transmit_bytes\n          - -transmit_bytes\n          - total_bytes\n          - -total_bytes\n          - last_handshake_time\n          - -last_handshake_time\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Peer'\n                type: array\n          description: Ok\n          headers:\n            Link:\n              explode: false\n              schema:\n                description: https://docs.github.com/en/rest/guides/traversing-with-pagination\n                type: string\n              style: simple\n        \"404\":\n          description: Device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Peers list\n      tags:\n      - device\n    post:\n      operationId: CreateDevicePeer\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PeerCreateOrUpdateRequest'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Peer'\n          description: Created\n        \"404\":\n          description: Device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Create new device peer\n      tags:\n      - device\n  /devices/{name}/peers/{urlSafePubKey}/:\n    delete:\n      operationId: DeleteDevicePeer\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Peer's url safe public key\n        explode: false\n        in: path\n        name: urlSafePubKey\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Peer'\n          description: Ok\n        \"404\":\n          description: Peer or device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Delete device's peer\n      tags:\n      - device\n    get:\n      operationId: GetDevicePeer\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Peer's url safe public key\n        explode: false\n        in: path\n        name: urlSafePubKey\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Peer'\n          description: Ok\n        \"404\":\n          description: Peer or device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Get device peer info\n      tags:\n      - device\n    patch:\n      operationId: UpdateDevicePeer\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Peer's url safe public key\n        explode: false\n        in: path\n        name: urlSafePubKey\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PeerCreateOrUpdateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Peer'\n          description: Ok\n        \"404\":\n          description: Peer or device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Update device's peer\n      tags:\n      - device\n  /devices/{name}/peers/{urlSafePubKey}/quick.conf:\n    get:\n      operationId: GetDevicePeerQuickConfig\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Peer's url safe public key\n        explode: false\n        in: path\n        name: urlSafePubKey\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                format: binary\n                type: string\n          description: Ok\n        \"404\":\n          description: Peer or device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Get device peer quick config\n      tags:\n      - device\n  /devices/{name}/peers/{urlSafePubKey}/quick.conf.png:\n    get:\n      operationId: GetDevicePeerQuickConfigQRCodePNG\n      parameters:\n      - description: Device's name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Peer's url safe public key\n        explode: false\n        in: path\n        name: urlSafePubKey\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: QR code's width \u0026 height. Default is 256px.\n        explode: true\n        in: query\n        name: width\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            image/jpeg:\n              schema:\n                format: binary\n                type: string\n          description: Ok\n        \"404\":\n          description: Peer or device not found\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error\n      summary: Get device peer quick config QR code\n      tags:\n      - device\ncomponents:\n  schemas:\n    Error:\n      properties:\n        code:\n          description: Error code\n          example: device_does_not_exist\n          type: string\n        message:\n          description: Error's short description\n          example: Device \"wg0\" does'n exist\n          type: string\n        detail:\n          description: Error's detail description\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    DeviceOptionsUpdateRequest:\n      description: Device options\n      example:\n        allowed_ips:\n        - 0.0.0.0/0\n        - ::0/0\n        host: 1.2.3.4\n        dns_servers:\n        - 8.8.8.8\n        - 2001:4860:4860::8888\n      properties:\n        allowed_ips:\n          description: Device's allowed ips, it might be any of IPv4 or IPv6 addresses\n            in CIDR notation. It might be owervrite in peer and device config.\n          example:\n          - 0.0.0.0/0\n          - ::0/0\n          items:\n            type: string\n          nullable: true\n          type: array\n        dns_servers:\n          description: Interface's DNS servers.\n          example:\n          - 8.8.8.8\n          - 2001:4860:4860::8888\n          items:\n            type: string\n          nullable: true\n          type: array\n        host:\n          description: Device host, it might be domain name or IPv4/IPv6 address.\n            It is used for external/internal connection\n          example: 1.2.3.4\n          nullable: true\n          type: string\n      type: object\n    DeviceOptions:\n      description: Device options\n      example:\n        allowed_ips:\n        - 0.0.0.0/0\n        - ::0/0\n        host: 1.2.3.4\n        dns_servers:\n        - 8.8.8.8\n        - 2001:4860:4860::8888\n      properties:\n        allowed_ips:\n          description: Device's allowed ips, it might be any of IPv4 or IPv6 addresses\n            in CIDR notation. It might be owervrite in peer and device config.\n          example:\n          - 0.0.0.0/0\n          - ::0/0\n          items:\n            type: string\n          type: array\n        dns_servers:\n          description: Interface's DNS servers.\n          example:\n          - 8.8.8.8\n          - 2001:4860:4860::8888\n          items:\n            type: string\n          type: array\n        host:\n          description: Device host, it might be domain name or IPv4/IPv6 address.\n            It is used for external/internal connection\n          example: 1.2.3.4\n          type: string\n      required:\n      - allowed_ips\n      - dns_servers\n      - host\n      type: object\n    DeviceCreateOrUpdateRequest:\n      description: Device params that might be used due to creation or updation process\n      example:\n        firewall_mark: 10\n        listen_port: 51820\n        name: wg0\n        private_key: wBHGU3RiK/IFWXAF2jbHjGSDAKEO2ddcsZFEWcQ+qGc=\n        networks:\n        - 10.71.25.1/24\n        - fd42:21:21::1/64\n      properties:\n        name:\n          description: WireGuard device name. Usually it is network interface name\n          example: wg0\n          nullable: true\n          type: string\n        listen_port:\n          description: WireGuard device listen port.\n          example: 51820\n          format: int32\n          nullable: true\n          type: integer\n        private_key:\n          description: WireGuard device private key encoded by base64.\n          example: wBHGU3RiK/IFWXAF2jbHjGSDAKEO2ddcsZFEWcQ+qGc=\n          nullable: true\n          type: string\n        firewall_mark:\n          description: WireGuard device firewall mark.\n          example: 10\n          format: int32\n          nullable: true\n          type: integer\n        networks:\n          description: IPv4 or IPv6 addresses in CIDR notation\n          example:\n          - 10.71.25.1/24\n          - fd42:21:21::1/64\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    Device:\n      description: Information about wireguard device.\n      example:\n        public_key: QFjZjxa2sgwnmGT4NqyRoeNk31AlHjVxHNEH/qY/2no=\n        firewall_mark: 10\n        listen_port: 51820\n        total_receive_bytes: 59984733\n        name: wg0\n        networks:\n        - 10.71.25.1/24\n        - fd42:21:21::1/64\n        peers_count: 10\n        total_transmit_bytes: 45331987\n      properties:\n        name:\n          description: WireGuard device name. Usually it is network interface name\n          example: wg0\n          type: string\n        listen_port:\n          description: WireGuard device listen port.\n          example: 51820\n          format: int32\n          type: integer\n        public_key:\n          description: WireGuard device public key encoded by base64.\n          example: QFjZjxa2sgwnmGT4NqyRoeNk31AlHjVxHNEH/qY/2no=\n          type: string\n        firewall_mark:\n          description: WireGuard device firewall mark.\n          example: 10\n          format: int32\n          type: integer\n        networks:\n          description: IPv4 or IPv6 addresses in CIDR notation\n          example:\n          - 10.71.25.1/24\n          - fd42:21:21::1/64\n          items:\n            type: string\n          type: array\n        peers_count:\n          description: WireGuard device's peers count\n          example: 10\n          format: int32\n          type: integer\n        total_receive_bytes:\n          description: WireGuard device's peers total receive bytes\n          example: 59984733\n          format: int64\n          type: integer\n        total_transmit_bytes:\n          description: WireGuard device's peers total transmit bytes\n          example: 45331987\n          format: int64\n          type: integer\n      required:\n      - firewall_mark\n      - listen_port\n      - name\n      - networks\n      - peers_count\n      - private_key\n      - public_key\n      - total_receive_bytes\n      - total_transmit_bytes\n      type: object\n    PeerCreateOrUpdateRequest:\n      description: Peer params that might be used due to creation or updation process\n      example:\n        public_key: qnPJFozrAnrTjap5VjO30bUeLvhkZEEZx48w2RqMpRA=\n        endpoint: 1.2.3.4:2345\n        allowed_ips:\n        - 10.71.25.51/32\n        - fd42:21:21::51/128\n        persistent_keepalive_interval: 25s\n        private_key: gD89VQVXPAEpXuIyHOujw1wF4njIBtaSLvqAatBAuWY=\n        preshared_key: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n      properties:\n        private_key:\n          description: Base64 encoded private key. If present it will be stored in\n            persistent storage.\n          example: gD89VQVXPAEpXuIyHOujw1wF4njIBtaSLvqAatBAuWY=\n          nullable: true\n          type: string\n        public_key:\n          description: Base64 encoded public key\n          example: qnPJFozrAnrTjap5VjO30bUeLvhkZEEZx48w2RqMpRA=\n          nullable: true\n          type: string\n        preshared_key:\n          description: Base64 encoded preshared key\n          example: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n          nullable: true\n          type: string\n        allowed_ips:\n          description: Peer's allowed ips, it might be any of IPv4 or IPv6 addresses\n            in CIDR notation\n          example:\n          - 10.71.25.51/32\n          - fd42:21:21::51/128\n          items:\n            type: string\n          nullable: true\n          type: array\n        persistent_keepalive_interval:\n          description: Peer's persistend keepalive interval. Valid time units are\n            \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".\n          example: 25s\n          type: string\n        endpoint:\n          description: Peer's endpoint in host:port format\n          example: 1.2.3.4:2345\n          type: string\n      type: object\n    Peer:\n      description: Information about wireguard peer.\n      example:\n        public_key: 0DGpyohLU+T1qAemWVWsNd1nwy3ZBAG7U4JJ/ZA+fWA=\n        endpoint: 1.2.3.4:2345\n        allowed_ips:\n        - 10.71.25.51/32\n        - fd42:21:21::51/128\n        last_handshake_time: 2000-01-23T04:56:07.000+00:00\n        url_safe_public_key: 0DGpyohLU-T1qAemWVWsNd1nwy3ZBAG7U4JJ_ZA-fWA\n        persistent_keepalive_interval: 25s\n        receive_bytes: 587732\n        transmit_bytes: 432445\n        preshared_key: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n      properties:\n        public_key:\n          description: Base64 encoded public key\n          example: 0DGpyohLU+T1qAemWVWsNd1nwy3ZBAG7U4JJ/ZA+fWA=\n          type: string\n        url_safe_public_key:\n          description: URL safe base64 encoded public key. It is usefull to use in\n            peers api endpoint.\n          example: 0DGpyohLU-T1qAemWVWsNd1nwy3ZBAG7U4JJ_ZA-fWA\n          type: string\n        preshared_key:\n          description: Base64 encoded preshared key\n          example: c2m+JtxpcRP6pztdDFRHnOx75SI+QyBDba1+BEbQaiA=\n          type: string\n        allowed_ips:\n          description: Peer's allowed ips, it might be any of IPv4 or IPv6 addresses\n            in CIDR notation\n          example:\n          - 10.71.25.51/32\n          - fd42:21:21::51/128\n          items:\n            type: string\n          type: array\n        last_handshake_time:\n          description: Peer's last handshake time formated in RFC3339\n          format: date-time\n          type: string\n        persistent_keepalive_interval:\n          description: Peer's persistend keepalive interval in\n          example: 25s\n          type: string\n        endpoint:\n          description: Peer's endpoint in host:port format\n          example: 1.2.3.4:2345\n          type: string\n        receive_bytes:\n          description: Peer's receive bytes\n          example: 587732\n          format: int64\n          type: integer\n        transmit_bytes:\n          description: Peer's transmit bytes\n          example: 432445\n          format: int64\n          type: integer\n      required:\n      - allowed_ips\n      - endpoint\n      - last_handshake_time\n      - persistent_keepalive_interval\n      - public_key\n      - receive_bytes\n      - transmit_bytes\n      - url_safe_public_key\n      type: object\n  securitySchemes:\n    bearerAuth:\n      description: Authorization token\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/suquant/wgrest@d126dc1d3e84caad0dd9268216748ac410c01e78/-/blob/.docs/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/suquant/wgrest/blob/d126dc1d3e84caad0dd9268216748ac410c01e78/.docs/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}