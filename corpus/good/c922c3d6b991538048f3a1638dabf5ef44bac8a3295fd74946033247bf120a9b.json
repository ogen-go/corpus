{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "taxrates.io-3.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/taxrates.io-3.0-swagger.yaml",
			"byteSize": 19554,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: apiteam@taxrates.io\n  description: Taxrates.io API - the successfully streamlined tax rates monitoring process.\n    We recommend using \u003ca href='https://www.getpostman.com/'\n    target=_new\u003ePostman\u003c/a\u003e when discovering our API. Happy using!\n  license:\n    name: Private licence - only for using by authorized Members of taxrates.io\n    url: http://taxrates.io/license/\n  termsOfService: http://taxrates.io/terms/\n  title: Taxrates.io\n  version: \"3.0\"\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/919999226955927553/lLFntE3W_400x400.jpg\n  x-origin:\n    - format: swagger\n      url: https://api.taxrates.io/taxrates_io_API.yaml\n      version: \"2.0\"\n  x-providerName: taxrates.io\npaths:\n  /v1/tax/byaddress:\n    post:\n      description: \u003e\n        This endpoint returns tax rates for the country based on the address\n        provided \u003cpre\u003e\u003ccode class=\"js\"\u003evar taxrates_endpoint = 'tax/address';\n          var taxrates_params = '?domain=api.taxrates.io';\n          var taxrates_url = '/api/v1/';\n          var taxrates_body = '{\n            \"street\":\"MyStreetName\",\n            \"street_number\":\"107\",\n            \"apartment_number\":\"d34\",\n            \"city\":\"Dublin\",\n            \"zip\":\"84534\"\n            \"state\":\"\",\n            \"country\":\"Ireland\"\n          }';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint+taxrates_params,\n              type: 'post',\n              method: 'post',\n              dataType: \"json\",\n              data: taxrates_body,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    jQuery.each(data.Rates, function(k, v) {\n                        if(v.hasOwnProperty(\"taxes\")){\n                            jQuery.each(v.taxes, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Country;\n                                    rates[i][1] = w.Type;\n                                    rates[i][2] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard',\n            'reduced', 'second reduced', 'third reduced' and 'super reduced'.\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Address\"\n        description: Address\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Rates\"\n        \"404\":\n          description: Country not found. Please check you address and make sure it is\n            valid.\n        \"500\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - Apikey: []\n      summary: Get tax rates by address\n      tags:\n        - Tax service\n  /v1/tax/countrycode:\n    get:\n      description: \u003e\n        This endpoint returns all available tax rates for selected country\n        \u003cpre\u003e\u003ccode class=\"js\"\u003evar taxrates_endpoint = 'tax/countrycode';\n          var taxrates_params = {'domain':'api.taxrates.io', 'country_code':'IE'};\n          var taxrates_url = '/api/v1/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    jQuery.each(data.Rates, function(k, v) {\n                        if(v.hasOwnProperty(\"taxes\")){\n                            jQuery.each(v.taxes, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Country;\n                                    rates[i][1] = w.Type;\n                                    rates[i][2] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: Country code alpha 2\n          in: query\n          name: country_code\n          required: true\n          schema:\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard',\n            'reduced', 'second reduced', 'third reduced' and 'super reduced'.\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: You must provide a zip code if one of your selected countries is\n            United States and you've had selected a state on your Taxrates.io\n            member's dashboard.\n          in: query\n          name: zip\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Rates\"\n        \"404\":\n          description: Country not found. Have you provided correct alpha-2 country code?\n        \"500\":\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - Apikey: []\n      summary: Returns tax rate for selected country\n      tags:\n        - Tax service\n  /v1/tax/ip:\n    get:\n      description: \u003e\n        This endpoint will return tax rates for country discovered based on\n        Customer's IP address \u003cpre\u003e\u003ccode class=\"js\"\u003evar taxrates_endpoint =\n        'tax/ip';\n          var taxrates_params = {'domain':'api.taxrates.io', 'ip':'208.80.152.201'};\n          var taxrates_url = '/api/v1/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    jQuery.each(data.Rates, function(k, v) {\n                        if(v.hasOwnProperty(\"taxes\")){\n                            jQuery.each(v.taxes, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Country;\n                                    rates[i][1] = w.Type;\n                                    rates[i][2] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: Customer's IP address\n          in: query\n          name: ip\n          required: true\n          schema:\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard',\n            'reduced', 'second reduced', 'third reduced' and 'super reduced'.\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: You must provide a zip code if one of your selected countries is\n            United States and you've had selected a state on your Taxrates.io\n            member's dashboard.\n          in: query\n          name: zip\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An array of tax rates for VAT, GST \u0026 TAX\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Rates\"\n                type: array\n        \"404\":\n          description: Geolocation can not be processed/No matching country found\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - Apikey: []\n      summary: Tax rates by geolocation based on Customer IP address\n      tags:\n        - Tax service\n  /v3/tax/rates:\n    get:\n      description: \u003e\n        This method returns all tax rates configured on Member's account using\n        cursor. Use X-Cursor-Next header to recursively read all rates. Max\n        limit is 500 records per request. \u003cpre\u003e\u003ccode class=\"js\"\u003e\n          var taxrates_endpoint = 'tax/rates';\n          var taxrates_params = {'domain':'api.taxrates.io'};\n          var taxrates_url = '/api/v3/';\n          if ( localStorage.getItem(\"Taxrates_API_Client_Secret\") ){\n          jQuery.support.cors = true;\n          jQuery.ajax({\n              url: taxrates_url+taxrates_endpoint,\n              type: 'get',\n              method: 'get',\n              dataType: \"json\",\n              data: taxrates_params,\n              beforeSend: function (request) {\n                      request.withCredentials = true;\n                      request.setRequestHeader(\"Authorization\", \"Apikey \" + localStorage.getItem(\"Taxrates_API_Client_Secret\"));\n              },\n              headers: {\n                \"accept\": \"application/json\"\n              },\n              contentType: 'application/json; charset=utf-8',\n              success: function (data) {\n                //Maintain errors inside success because the API may return 200 in general, but different code inside\n                  if(data.ErrorCode=='404' || data.ErrorCode=='500'){\n                    //Maintain errors here\n                    console.log(data.ErrorMessage);\n                    return false;\n                  }else{\n                    var rates = [];\n                    var i=0;\n                    var taxrates_range = '';\n                    jQuery.each(data, function(k, v) {\n                        if(v.hasOwnProperty(\"rates\")){\n                            jQuery.each(v.rates, function(m, w) {\n                                rates[i] = [];\n                                //Only showing standard rate type\n                                if( w.Type == \"standard\" ){\n                                    rates[i][0] = w.Type;\n                                    rates[i][1] = w.data_value;\n                                    i++;\n                                }\n                            });\n                        }\n                    //Now you have all your rates inside rates variable.\n                    }).fail(function(xhr) {\n                            //Maintain your errors here\n                            return false;\n                    });\n                    return true;\n          }else{\n            //Not logged into taxrates.io\n            //Maintain your errors here\n            return false;\n          }\u003c/code\u003e\u003c/pre\u003e\n      parameters:\n        - description: \"Domain name: api.taxrates.io\"\n          in: query\n          name: domain\n          required: true\n          schema:\n            type: string\n        - description: \"You can filter your taxes by one of following types: 'standard',\n            'reduced', 'second reduced', 'third reduced' and 'super reduced'.\"\n          in: query\n          name: filter\n          required: false\n          schema:\n            type: string\n        - description: Cursor shows from which record you want to get information. Default\n            value is 0, next value can be retrieved from X-Cursor-Next header.\n          in: query\n          name: cursor\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An array of locations with tax rates\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Location\"\n                type: array\n        \"404\":\n          description: No configured tax rates found. Have you added any country to your\n            account?\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      security:\n        - Apikey: []\n      summary: Get all tax rates\n      tags:\n        - Tax service\nservers:\n  - url: https://api.taxrates.io/api\ncomponents:\n  securitySchemes:\n    Apikey:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    Address:\n      properties:\n        apartment_number:\n          description: Apartment number if any\n          type: string\n        city:\n          description: City name\n          type: string\n        country:\n          description: Country name\n          type: string\n        postal_code:\n          description: City zip code\n          type: string\n        state:\n          description: Province or state\n          type: string\n        street:\n          description: Street\n          type: string\n        street_number:\n          description: Street number\n          type: string\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        fields:\n          type: string\n        message:\n          type: string\n      type: object\n    Location:\n      properties:\n        id:\n          type: integer\n        name:\n          description: Country name\n          type: string\n        rates:\n          items:\n            $ref: \"#/components/schemas/TaxRate\"\n          type: array\n        state:\n          description: State/province name if exists\n          type: string\n        zip:\n          description: Zipcode\n          type: string\n      type: object\n    Rates:\n      properties:\n        country_name:\n          description: The country name\n          type: string\n        taxes:\n          items:\n            $ref: \"#/components/schemas/Tax\"\n          type: array\n      type: object\n    Tax:\n      properties:\n        Country:\n          description: The country name\n          type: string\n        Type:\n          description: The tax type\n          type: string\n        data_name:\n          description: The tax name and description (VAT, GST, PIT, CIT etc)\n          type: string\n        data_value:\n          description: The tax value in percents\n          type: string\n      type: object\n    TaxRate:\n      properties:\n        data_name:\n          description: The tax name and description (VAT, GST, PIT, CIT etc)\n          type: string\n        data_value:\n          description: The tax value in percents\n          type: string\n        type:\n          description: The tax type\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/taxrates.io-3.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/taxrates.io-3.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}