{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "FinancialAccounting.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/FinancialAccounting.yaml",
			"byteSize": 11000,
			"content": "openapi: 3.0.1\ninfo:\n  title: Financial Accounting\n  description: The Financial Accounting Service Domain takes in financial facts and based on these, creates accounting instructions that will update the general ledger and sub ledger accounts\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/FinancialAccounting/10.0.0\npaths:\n  /FinancialAccounting/Initiate:\n    post:\n      tags:\n      - CR - FinancialBookingLog\n      summary: InCR Initiate a financial accounting log (account)\n      description: InCR Initiate a financial accounting log (account)\n      operationId: Initiate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/InitiateFinancialBookingLogRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiateFinancialBookingLogResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /FinancialAccounting/{financialaccountingId}/Update:\n    put:\n      tags:\n      - CR - FinancialBookingLog\n      summary: UpCR Update details for an active financial account\n      description: UpCR Update details for an active financial account\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/FinancialAccountingID'\n      requestBody:\n        $ref: '#/components/requestBodies/FinancialBookingLog'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FinancialBookingLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /FinancialAccounting/{financialaccountingId}/Retrieve:\n    get:\n      tags:\n      - CR - FinancialBookingLog\n      summary: ReCR Retrieve information about the log\n      description: ReCR Retrieve information about the log\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/FinancialAccountingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FinancialBookingLog'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /FinancialAccounting/{financialaccountingId}/LedgerPosting/{ledgerpostingId}/Update:\n    put:\n      tags:\n      - BQ - LedgerPosting\n      summary: UpBQ Update details of a posting (repair)\n      description: UpBQ Update details of a posting (repair)\n      operationId: UpdateLedgerPosting\n      parameters:\n      - $ref: '#/components/parameters/FinancialAccountingID'\n      - $ref: '#/components/parameters/LedgerPostingID'\n      requestBody:\n        $ref: '#/components/requestBodies/LedgerPosting'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LedgerPosting'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /FinancialAccounting/{financialaccountingId}/LedgerPosting/{ledgerpostingId}/Capture:\n    put:\n      tags:\n      - BQ - LedgerPosting\n      summary: CaBQ Post to the financial account\n      description: CaBQ Post to the financial account\n      operationId: CaptureLedgerPosting\n      parameters:\n      - $ref: '#/components/parameters/FinancialAccountingID'\n      - $ref: '#/components/parameters/LedgerPostingID'\n      requestBody:\n        $ref: '#/components/requestBodies/CaptureLedgerPostingRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CaptureLedgerPostingResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /FinancialAccounting/{financialaccountingId}/LedgerPosting/{ledgerpostingId}/Retrieve:\n    get:\n      tags:\n      - BQ - LedgerPosting\n      summary: ReBQ Retrieve details of postings from the account\n      description: ReBQ Retrieve details of postings from the account\n      operationId: RetrieveLedgerPosting\n      parameters:\n      - $ref: '#/components/parameters/FinancialAccountingID'\n      - $ref: '#/components/parameters/LedgerPostingID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LedgerPosting'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    FinancialBookingLog:\n      type: object\n      properties:\n        FinancialAccountType:\n          type: string\n        ProductandServiceReference:\n          type: object\n        BusinessUnitReference:\n          type: object\n        ChartofAccountOrBookingRules:\n          type: string\n        BaseCurrency:\n          type: string\n        Status:\n          type: string\n    LedgerPosting:\n      type: object\n      properties:\n        PostingDirection:\n          type: string\n        PostingAmount(credit/debitpair):\n          type: number\n        PostingValueDate:\n          type: string\n        PostingResult:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n    InitiateFinancialBookingLogRequest:\n      type: object\n      properties:\n        FinancialBookingLog:\n          type: object\n          properties:\n            FinancialAccountType:\n              type: string\n            ProductandServiceReference:\n              type: object\n            BusinessUnitReference:\n              type: object\n            ChartofAccountOrBookingRules:\n              type: string\n            BaseCurrency:\n              type: string\n    InitiateFinancialBookingLogResponse:\n      type: object\n      properties:\n        FinancialBookingLog:\n          type: object\n          properties:\n            Status:\n              type: string\n    CaptureLedgerPostingRequest:\n      type: object\n      properties:\n        LedgerPosting:\n          type: object\n          properties:\n            PostingDirection:\n              type: string\n            PostingAmount(creditOrdebitpair):\n              type: number\n            PostingValueDate:\n              type: string\n    CaptureLedgerPostingResponse:\n      type: object\n      properties:\n        LedgerPosting:\n          type: object\n          properties:\n            PostingResult:\n              type: string\n  parameters:\n    FinancialAccountingID:\n      name: financialaccountingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    LedgerPostingID:\n      name: ledgerpostingId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    InitiateFinancialBookingLogRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InitiateFinancialBookingLogRequest'\n    FinancialBookingLog:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FinancialBookingLog'\n    LedgerPosting:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LedgerPosting'\n    CaptureLedgerPostingRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CaptureLedgerPostingRequest'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/FinancialAccounting.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/FinancialAccounting.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}