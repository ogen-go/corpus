{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hackforla/HomeUniteUs"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi_server/openapi/openapi.yaml",
			"byteSize": 17163,
			"content": "openapi: 3.0.0\ninfo:\n  license:\n    name: MIT\n  title: Home Unite Us\n  version: 1.0.0\nservers:\n  - url: http://homeunite.us/api\npaths:\n  /guests:\n    delete:\n      description: Delete a guest\n      operationId: delete_guest\n      parameters:\n        - description: guest id to delete\n          explode: false\n          in: path\n          name: guestId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"400\":\n          description: Invalid guest valu\n      summary: Deletes a guest\n      tags:\n        - guest\n      x-openapi-router-controller: openapi_server.controllers.guest_controller\n    get:\n      description: See the full list of guests\n      operationId: list_guests\n      parameters:\n        - description: How many items to return at one time (max 100)\n          explode: true\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guests\"\n          description: successful operation\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: List all guests\n      tags:\n        - guest\n      x-openapi-router-controller: openapi_server.controllers.guest_controller\n    post:\n      operationId: create_guest\n      responses:\n        \"201\":\n          description: Null response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: Create a guest\n      tags:\n        - guest\n      x-openapi-router-controller: openapi_server.controllers.guest_controller\n    put:\n      description: Update a guest\n      operationId: update_guest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Guest\"\n        description: Update guest\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guest\"\n          description: Successful operation\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Guest not found\n        \"405\":\n          description: Validation exception\n      summary: Update a guest\n      tags:\n        - guest\n      x-openapi-router-controller: openapi_server.controllers.guest_controller\n  /guests/{guestId}:\n    get:\n      operationId: show_guest_by_id\n      parameters:\n        - description: The id of the guest to retrieve\n          explode: false\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Guest\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: Info for a specific guest\n      tags:\n        - guests\n      x-openapi-router-controller: openapi_server.controllers.guests_controller\n  /guests/{guestId}/uploadImage:\n    post:\n      operationId: upload_guest_image\n      parameters:\n        - description: ID of guest to update\n          explode: false\n          in: path\n          name: guestId\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Additional Metadata\n          explode: true\n          in: query\n          name: additionalMetadata\n          required: false\n          schema:\n            type: string\n          style: form\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: uploads an image\n      tags:\n        - guest\n      x-openapi-router-controller: openapi_server.controllers.guest_controller\n  /hosts:\n    delete:\n      description: Delete a host\n      operationId: delete_host\n      parameters:\n        - description: host id to delete\n          explode: false\n          in: path\n          name: hostId\n          required: true\n          schema:\n            format: int64\n            type: integer\n          style: simple\n      responses:\n        \"400\":\n          description: Invalid host valu\n      summary: Deletes a host\n      tags:\n        - host\n      x-openapi-router-controller: openapi_server.controllers.host_controller\n    get:\n      description: See the full list of hosts\n      operationId: list_hosts\n      parameters:\n        - description: How many items to return at one time (max 100)\n          explode: true\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Hosts\"\n          description: successful operation\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: List all hosts\n      tags:\n        - host\n      x-openapi-router-controller: openapi_server.controllers.host_controller\n    post:\n      operationId: create_host\n      responses:\n        \"201\":\n          description: Null response\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: Create a host\n      tags:\n        - host\n      x-openapi-router-controller: openapi_server.controllers.host_controller\n    put:\n      description: Update a host\n      operationId: update_host\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Host\"\n        description: Update host\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Host\"\n          description: Successful operation\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Host not found\n        \"405\":\n          description: Validation exception\n      summary: Update a host\n      tags:\n        - host\n      x-openapi-router-controller: openapi_server.controllers.host_controller\n  /hosts/{hostId}:\n    get:\n      operationId: show_host_by_id\n      parameters:\n        - description: The id of the host to retrieve\n          explode: false\n          in: path\n          name: hostId\n          required: true\n          schema:\n            type: string\n          style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Host\"\n          description: Expected response to a valid request\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: unexpected error\n      summary: Info for a specific host\n      tags:\n        - hosts\n      x-openapi-router-controller: openapi_server.controllers.hosts_controller\n  /hosts/{hostId}/uploadImage:\n    post:\n      operationId: upload_host_image\n      parameters:\n        - description: ID of host to update\n          explode: false\n          in: path\n          name: hostId\n          required: true\n          schema:\n            type: string\n          style: simple\n        - description: Additional Metadata\n          explode: true\n          in: query\n          name: additionalMetadata\n          required: false\n          schema:\n            type: string\n          style: form\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      summary: uploads an image\n      tags:\n        - host\n      x-openapi-router-controller: openapi_server.controllers.host_controller\n  /auth/signup:\n    post:\n      description: Signup a user\n      operationId: signup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - password\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/signin:\n    post:\n      description: Sign in a user\n      operationId: signin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - password\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/confirm:\n    post:\n      description: Confirm users email\n      operationId: confirm\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                code:\n                  type: string\n              required:\n                - email\n                - code\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/signout:\n    post:\n      description: Sign out user from current session\n      operationId: signout\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/token:\n    post:\n      description: Sign in user from OAuth Provider\n      operationId: token\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/session:\n    get:\n      description: Get current session and user information\n      operationId: current_session\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/refresh:\n    get:\n      description: Check for refresh token and current session\n      operationId: refresh\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/forgot_password:\n    post:\n      description: Sends message with a code used when creating a new password\n      operationId: forgot_password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n              required:\n                - email\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/confirm_forgot_password:\n    post:\n      description: Exchanges code for a new password\n      operationId: confirm_forgot_password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                code:\n                  type: string\n                password:\n                  type: string\n              required:\n                - email\n                - code\n                - password\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n  /auth/user:\n    get:\n      description: Gets current user\n      operationId: user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n      security:\n        - jwt: [\"secret\"]\n  /auth/private:\n    get:\n      description: A private route that returns a message\n      operationId: private\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiResponse\"\n          description: successful operation\n      tags:\n        - auth\n      x-openapi-router-controller: openapi_server.controllers.auth_controller\n      security:\n        - jwt: [\"secret\"]\ncomponents:\n  schemas:\n    Host:\n      example:\n        photoUrls:\n          - photoUrls\n          - photoUrls\n        name: name\n        id: 0\n        tag: tag\n      properties:\n        id:\n          format: int64\n          title: id\n          type: integer\n        name:\n          title: name\n          type: string\n        tag:\n          title: tag\n          type: string\n        photoUrls:\n          items:\n            type: string\n          title: photoUrls\n          type: array\n      required:\n        - id\n        - name\n      title: Host\n      type: object\n    Guest:\n      example:\n        photoUrls:\n          - photoUrls\n          - photoUrls\n        name: name\n        id: 0\n        tag: tag\n      properties:\n        id:\n          format: int64\n          title: id\n          type: integer\n        name:\n          title: name\n          type: string\n        tag:\n          title: tag\n          type: string\n        photoUrls:\n          items:\n            type: string\n          title: photoUrls\n          type: array\n      required:\n        - id\n        - name\n      title: Guest\n      type: object\n    Hosts:\n      items:\n        $ref: \"#/components/schemas/Host\"\n      type: array\n    Guests:\n      items:\n        $ref: \"#/components/schemas/Guest\"\n      type: array\n    ApiResponse:\n      example:\n        code: 0\n        type: type\n        message: message\n      properties:\n        code:\n          format: int32\n          title: code\n          type: integer\n        type:\n          title: type\n          type: string\n        message:\n          title: message\n          type: string\n      title: ApiResponse\n      type: object\n  securitySchemes:\n    jwt:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      x-bearerInfoFunc: openapi_server.controllers.security_controller.requires_auth\n",
			"canonicalURL": "/github.com/hackforla/HomeUniteUs@b93a796bea99d3dadde15e2aaba25573e5ff1e99/-/blob/api/openapi_server/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hackforla/HomeUniteUs/blob/b93a796bea99d3dadde15e2aaba25573e5ff1e99/api/openapi_server/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}