{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LedgerHQ/speculos"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "speculos/api/static/swagger/swagger.json",
			"byteSize": 10961,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Speculos API\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://127.0.0.1:5000\"\n    }\n  ],\n  \"paths\": {\n    \"/apdu\": {\n      \"post\": {\n        \"summary\": \"Transmit APDU and return device response\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Apdu\"\n              },\n              \"example\": {\n                \"data\": \"e0c0000004\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Device response to the APDU command\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Apdu\"\n                },\n                \"example\": {\n                  \"data\": \"105e441f9000\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/automation\": {\n      \"post\": {\n        \"summary\": \"Updates the automation rules\",\n        \"externalDocs\": {\n          \"description\": \"More information about the automation feature and the rules format can be found in the speculos documentation.\",\n          \"url\": \"https://github.com/LedgerHQ/speculos/blob/master/docs/user/automation.md\"\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              },\n              \"examples\": {\n                \"full-syntax\": {\n                  \"summary\": \"Regexp, conditions and actions\",\n                  \"value\": {\n                    \"version\": 1,\n                    \"rules\": [\n                      {\n                        \"text\": \"Application\",\n                        \"x\": 35,\n                        \"y\": 3,\n                        \"conditions\": [\n                          [\n                            \"seen\",\n                            false\n                          ]\n                        ],\n                        \"actions\": [\n                          [\n                            \"button\",\n                            2,\n                            true\n                          ],\n                          [\n                            \"button\",\n                            2,\n                            false\n                          ],\n                          [\n                            \"setbool\",\n                            \"seen\",\n                            true\n                          ]\n                        ]\n                      },\n                      {\n                        \"regexp\": \"\\\\d+\",\n                        \"actions\": [\n                          [\n                            \"exit\"\n                          ]\n                        ]\n                      },\n                      {\n                        \"actions\": [\n                          [\n                            \"setbool\",\n                            \"default_match\",\n                            true\n                          ]\n                        ]\n                      }\n                    ]\n                  }\n                },\n                \"press-buttons\": {\n                  \"summary\": \"Press both button when the text \\\"Approve\\\" is displayed\",\n                  \"value\": {\n                    \"version\": 1,\n                    \"rules\": [\n                      {\n                        \"text\": \"Approve\",\n                        \"actions\": [\n                          [\n                            \"button\",\n                            1,\n                            true\n                          ],\n                          [\n                            \"button\",\n                            2,\n                            true\n                          ],\n                          [\n                            \"button\",\n                            1,\n                            false\n                          ],\n                          [\n                            \"button\",\n                            2,\n                            false\n                          ]\n                        ]\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/button/{button}\": {\n      \"post\": {\n        \"summary\": \"Press or release a button (Nano S and Nano X)\",\n        \"parameters\": [\n          {\n            \"name\": \"button\",\n            \"in\": \"path\",\n            \"description\": \"Button to press\",\n            \"required\": true,\n            \"style\": \"simple\",\n            \"explode\": false,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ButtonName\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Button\"\n              },\n              \"examples\": {\n                \"button-press-and-release\": {\n                  \"summary\": \"Press and release the specified button\",\n                  \"value\": {\n                    \"action\": \"press-and-release\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"invalid parameter\"\n          }\n        }\n      }\n    },\n    \"/events\": {\n      \"get\": {\n        \"summary\": \"Get the events produced by the app\",\n        \"parameters\": [\n          {\n            \"name\": \"stream\",\n            \"in\": \"query\",\n            \"description\": \"Stream the events instead of returning a list\",\n            \"required\": false,\n            \"style\": \"form\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of events separated by line-returns\",\n            \"content\": {\n              \"text/event-stream\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"example\": \"{\\\"text\\\": \\\"Application\\\", \\\"x\\\": 35, \\\"y\\\": 3}\\\\n{\\\"text\\\": \\\"is ready\\\", \\\"x\\\": 44, \\\"y\\\": 17}\\\\n{\\\"text\\\": \\\"Settings\\\", \\\"x\\\": 41, \\\"y\\\": 19}\\\\n\"\n              },\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EventList\"\n                },\n                \"example\": {\n                  \"events\": [\n                    {\n                      \"text\": \"Application\",\n                      \"x\": 35,\n                      \"y\": 3\n                    },\n                    {\n                      \"text\": \"is ready\",\n                      \"x\": 44,\n                      \"y\": 17\n                    },\n                    {\n                      \"text\": \"Settings\",\n                      \"x\": 41,\n                      \"y\": 19\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Reset the list of events\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/finger\": {\n      \"post\": {\n        \"summary\": \"Touch the screen (Blue)\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Finger\"\n              },\n              \"examples\": {\n                \"finger-press-and-release\": {\n                  \"summary\": \"Press and release\",\n                  \"value\": {\n                    \"action\": \"press-and-release\",\n                    \"x\": 10,\n                    \"y\": 25\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"invalid parameter\"\n          }\n        }\n      }\n    },\n    \"/screenshot\": {\n      \"get\": {\n        \"summary\": \"Get a screenshot\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Image in format PNG\",\n            \"content\": {\n              \"image/png\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Apdu\": {\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"pattern\": \"^([0-9a-fA-F]{2})+$\",\n            \"type\": \"string\",\n            \"description\": \"APDU data, in hexadecimal.\"\n          }\n        }\n      },\n      \"Button\": {\n        \"required\": [\n          \"action\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"Press, release or press and release the specified button(s).\",\n            \"enum\": [\n              \"press\",\n              \"release\",\n              \"press-and-release\"\n            ]\n          },\n          \"delay\": {\n            \"$ref\": \"#/components/schemas/Delay\"\n          }\n        }\n      },\n      \"ButtonName\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"left\",\n          \"right\",\n          \"both\"\n        ]\n      },\n      \"Delay\": {\n        \"type\": \"number\",\n        \"description\": \"Delay in seconds between press and release, ignored if action isn't `press-and-released`.\",\n        \"format\": \"float\",\n        \"default\": 0.1\n      },\n      \"EventList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"events\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          }\n        }\n      },\n      \"Finger\": {\n        \"required\": [\n          \"action\",\n          \"x\",\n          \"y\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"Press, release or press and release.\",\n            \"enum\": [\n              \"press\",\n              \"release\",\n              \"press-and-release\"\n            ]\n          },\n          \"x\": {\n            \"type\": \"integer\",\n            \"description\": \"Vertical position\"\n          },\n          \"y\": {\n            \"type\": \"integer\",\n            \"description\": \"Horizontal position\"\n          },\n          \"delay\": {\n            \"$ref\": \"#/components/schemas/Delay\"\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/LedgerHQ/speculos@8657b297798561a09d057b472f0e5d5fd9a58993/-/blob/speculos/api/static/swagger/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/LedgerHQ/speculos/blob/8657b297798561a09d057b472f0e5d5fd9a58993/speculos/api/static/swagger/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}