{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CustomerProductAndServiceEligibility.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CustomerProductAndServiceEligibility.yaml",
			"byteSize": 16525,
			"content": "openapi: 3.0.1\ninfo:\n  title: Customer Product And Service Eligibility\n  description: This Service Domain maintains a list of products and services for which a customer is eligible.\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CustomerProductAndServiceEligibility/10.0.0\npaths:\n  /CustomerProductAndServiceEligibility/Evaluate:\n    post:\n      tags:\n      - CR - CustomerEligibilityAssessment\n      summary: EvCR Evaluate a customer's eligibility for a product/service\n      description: EvCR Evaluate a customer's eligibility for a product/service\n      operationId: Evaluate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/EvaluateCustomerEligibilityAssessmentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Update:\n    put:\n      tags:\n      - CR - CustomerEligibilityAssessment\n      summary: UpCR Update the product/service eligibility record (e.g. for newly sold products)\n      description: UpCR Update the product/service eligibility record (e.g. for newly sold products)\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateCustomerEligibilityAssessmentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Execute:\n    put:\n      tags:\n      - CR - CustomerEligibilityAssessment\n      summary: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)\n      description: ExCR Execute an automated action against an active evaluation (e.g. provide additional data)\n      operationId: Execute\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      requestBody:\n        $ref: '#/components/requestBodies/ExecuteCustomerEligibilityAssessmentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Request:\n    put:\n      tags:\n      - CR - CustomerEligibilityAssessment\n      summary: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)\n      description: RqCR Request manual intervention in an evaluation (e.g. engage a specialist or negotiator)\n      operationId: Request\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      requestBody:\n        $ref: '#/components/requestBodies/RequestCustomerEligibilityAssessmentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/Retrieve:\n    get:\n      tags:\n      - CR - CustomerEligibilityAssessment\n      summary: ReCR Retrieve details about an eligibility request\n      description: ReCR Retrieve details about an eligibility request\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEligibilityAssessment'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/EligibilityCheck/{eligibilitycheckId}/Retrieve:\n    get:\n      tags:\n      - BQ - EligibilityCheck\n      summary: ReBQ Retrieve details about an eligibility assessment\n      description: ReBQ Retrieve details about an eligibility assessment\n      operationId: RetrieveEligibilityCheck\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      - $ref: '#/components/parameters/EligibilityCheckID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEligibilityAssessment'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/NextBest/{nextbestId}/Update:\n    put:\n      tags:\n      - BQ - NextBest\n      summary: UpBQ Update details about a next best eligibility test\n      description: UpBQ Update details about a next best eligibility test\n      operationId: UpdateNextBest\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      - $ref: '#/components/parameters/NextBestID'\n      requestBody:\n        $ref: '#/components/requestBodies/NextBest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NextBest'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CustomerProductAndServiceEligibility/{customerproductandserviceeligibilityId}/NextBest/{nextbestId}/Retrieve:\n    get:\n      tags:\n      - BQ - NextBest\n      summary: ReBQ Retrieve details about a next best test\n      description: ReBQ Retrieve details about a next best test\n      operationId: RetrieveNextBest\n      parameters:\n      - $ref: '#/components/parameters/CustomerProductAndServiceEligibilityID'\n      - $ref: '#/components/parameters/NextBestID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomerEligibilityAssessment'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CustomerEligibilityAssessment:\n      type: object\n      properties:\n        CustomerReference:\n          type: object\n        CustomerProductandServiceProfile:\n          type: string\n        ProductandServiceType:\n          type: string\n        CustomerProductandServiceTypeEligibility:\n          type: string\n        CustomerProductandServiceTypeUsage:\n          type: string\n        Date:\n          type: string\n    EligibilityCheck:\n      type: object\n      properties:\n        CustomerProductandServiceEligibilityAssessmentResult:\n          type: string\n    NextBest:\n      type: object\n      properties:\n        RequestedProductandServiceProperties:\n          type: string\n        ProductServiceType:\n          type: string\n        CustomerProductandServiceNextBestAssessmentResult:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n    EvaluateCustomerEligibilityAssessmentRequest:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            CustomerProductandServiceProfile:\n              type: string\n            ProductandServiceType:\n              type: string\n            Date:\n              type: string\n    EvaluateCustomerEligibilityAssessmentResponse:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerProductandServiceTypeEligibility:\n              type: string\n            CustomerProductandServiceTypeUsage:\n              type: string\n            Date:\n              type: string\n    UpdateCustomerEligibilityAssessmentRequest:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            CustomerProductandServiceProfile:\n              type: string\n            ProductandServiceType:\n              type: string\n            Date:\n              type: string\n    UpdateCustomerEligibilityAssessmentResponse:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            CustomerProductandServiceProfile:\n              type: string\n            ProductandServiceType:\n              type: string\n            Date:\n              type: string\n    ExecuteCustomerEligibilityAssessmentRequest:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            CustomerProductandServiceProfile:\n              type: string\n            ProductandServiceType:\n              type: string\n            Date:\n              type: string\n    ExecuteCustomerEligibilityAssessmentResponse:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerProductandServiceTypeEligibility:\n              type: string\n            CustomerProductandServiceTypeUsage:\n              type: string\n            Date:\n              type: string\n    RequestCustomerEligibilityAssessmentRequest:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerReference:\n              type: object\n            CustomerProductandServiceProfile:\n              type: string\n            ProductandServiceType:\n              type: string\n            Date:\n              type: string\n    RequestCustomerEligibilityAssessmentResponse:\n      type: object\n      properties:\n        CustomerEligibilityAssessment:\n          type: object\n          properties:\n            CustomerProductandServiceTypeEligibility:\n              type: string\n            CustomerProductandServiceTypeUsage:\n              type: string\n            Date:\n              type: string\n  parameters:\n    CustomerProductAndServiceEligibilityID:\n      name: customerproductandserviceeligibilityId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    EligibilityCheckID:\n      name: eligibilitycheckId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    NextBestID:\n      name: nextbestId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    EvaluateCustomerEligibilityAssessmentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EvaluateCustomerEligibilityAssessmentRequest'\n    UpdateCustomerEligibilityAssessmentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateCustomerEligibilityAssessmentRequest'\n    ExecuteCustomerEligibilityAssessmentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ExecuteCustomerEligibilityAssessmentRequest'\n    RequestCustomerEligibilityAssessmentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RequestCustomerEligibilityAssessmentRequest'\n    NextBest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NextBest'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CustomerProductAndServiceEligibility.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CustomerProductAndServiceEligibility.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}