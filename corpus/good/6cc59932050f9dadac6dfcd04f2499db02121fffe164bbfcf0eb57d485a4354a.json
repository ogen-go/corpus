{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HDFGroup/hdf-rest-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 90111,
			"content": "$schema: “https://spec.openapis.org/oas/3.1/dialect/base”\r\nopenapi: \"3.1.0\"\r\ninfo:\r\n  title: HDF Scalable Data Service REST API\r\n  description: RESTful application programming interface documentation for HDF Scalable Data Service (HSDS).\r\n  contact:\r\n    name: The HDF Group\r\n    url: https://www.hdfgroup.org\r\n    email: info@hdfgroup.org\r\n  # termsOfService: TODO url\r\n  # license\r\n  #   name: TODO\r\n  #   url: TODO\r\n  version: \"2.0\"\r\n\r\nexternalDocs:\r\n  description: HSDS REST API documentation\r\n  url: \"http://h5serv.readthedocs.io/en/latest/index.html\"\r\n\r\ntags:\r\n  - name: Domain\r\n    description: Operations involving the file Domain.\r\n  - name: Group\r\n    description: Operations involving Groups.\r\n  - name: Link\r\n    description: Operations involving Links.\r\n  - name: Dataset\r\n    description: Operations involving Datasets.\r\n  - name: Datatype\r\n    description: Operations involving Datatypes.\r\n  - name: Attribute\r\n    description: Operations involving Attributes.\r\n  - name: ACLS\r\n    description: Operations involving Attributes.\r\n\r\nservers:\r\n  - url: http://hsdshdflab.hdfgroup.org\r\n    description: HSDS default server\r\n\r\ncomponents:\r\n  schemas:\r\n    ACL:\r\n      description: Access Control List for a single user.\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: object\r\n          properties:\r\n            create:\r\n              type: boolean\r\n            update:\r\n              type: boolean\r\n            delete:\r\n              type: boolean\r\n            updateACL:\r\n              type: boolean\r\n            read:\r\n              type: boolean\r\n            readACL:\r\n              type: boolean\r\n    ACLS:\r\n      type: object\r\n      description: Access Control Lists for users.\r\n      properties:\r\n        forWhom:\r\n          $ref: \"#/components/schemas/ACL\"\r\n      examples:\r\n        - test_user1:\r\n            create: true\r\n            update: true\r\n            delete: true\r\n            updateACL: true\r\n            read: true\r\n            readACL: true\r\n          default:\r\n            create: false\r\n            update: false\r\n            delete: false\r\n            updateACL: false\r\n            read: true\r\n            readACL: false\r\n\r\n  parameters:\r\n    authorization:\r\n      in: header\r\n      name: Authorization\r\n      schema:\r\n        type: string\r\n        description: \u003e\r\n          Credentials for the request.\r\n\r\n          'Basic' authorization, `\"Basic \" + base64(\u003cusername\u003e:\u003cpassword\u003e)`\r\n    linkname:\r\n      in: path\r\n      name: linkname\r\n      required: true\r\n      schema:\r\n        type: string\r\n        description: \u003e\r\n          URL-encoded name of the Link.\r\n          Label/name/title of the Link, e.g., `dset1` or `group3`.\r\n          `linkname` cannot contain slashes.\r\n    query_domain:\r\n      in: query\r\n      name: domain\r\n      schema:\r\n        type: string\r\n        description: Domain on service to access, e.g., `/home/user/someproject/somefile`.\r\n    path_group_uuid:\r\n      in: path\r\n      name: id\r\n      required: true\r\n      description: UUID of the Group, e.g. `g-37aa76f6-2c86-11e8-9391-0242ac110009`.\r\n      schema:\r\n        type: string\r\n    path_dataset_uuid:\r\n      in: path\r\n      description: UUID of the Dataset.\r\n      name: id\r\n      required: true\r\n      schema:\r\n        type: string\r\n    path_datatype_uuid:\r\n      name: id\r\n      in: path\r\n      required: true\r\n      description: UUID of the committed datatype.\r\n      schema:\r\n        type: string\r\n\r\n  securitySchemes:\r\n    basicAuth:\r\n      type: http\r\n      scheme: basic\r\n\r\npaths:\r\n  /:\r\n    put:\r\n      tags:\r\n        - Domain\r\n      summary: Create a new Domain on the service.\r\n      description: \u003e\r\n        Domains represent dataspaces analogous to hdf5 files.\r\n\r\n        Folders are 'placeholder' domains which lack a root Group. Their\r\n        main use is to manage top-level directories (outside of user space)\r\n        and to fill out a user's directory paths if required.\r\n        E.g., `/home/user/project/missingdir/data.h5`\r\n\r\n        Note: Initially, the only object in a Domain is the root group. Use\r\n        other `put` and `post` operations to create new objects in the\r\n        domain.\r\n\r\n        Note: Domains (and Folders) may only be created as direct children\r\n        of existing Domains. e.g., `/home/user/project/missingdir` _must_\r\n        exist prior to the creation of Domain\r\n        `/home/user/project/missingdir/data.h5`.\r\n\r\n        Note: The operation will fail if the domain already exists\r\n        (Error 409).\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: folder\r\n          in: query\r\n          schema:\r\n            type: number\r\n          description: If present and `1`, creates a Folder instead of a Domain.\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"201\":\r\n          description: Created.\r\n          headers:\r\n            Content-Length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n            Content-Type:\r\n              description: MIME type of response.\r\n              schema:\r\n                type: string\r\n                enum:\r\n                  - application/json\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  acls:\r\n                    $ref: \"#/components/schemas/ACLS\"\r\n                  created:\r\n                    description: When domain was created.\r\n                    type: number\r\n                    examples:\r\n                      - 1521482043.5271084\r\n                  lastModified:\r\n                    description: When object was last modified.\r\n                    type: number\r\n                    examples:\r\n                      - 1521482043.5271084\r\n                  owner:\r\n                    description: Name of owner.\r\n                    type: string\r\n                    examples:\r\n                      - \"test_user1\"\r\n                  root:\r\n                    description: ID of root group.\r\n                    type: string\r\n                    examples:\r\n                      - \"g-82da0346-2b9e-11e8-9391-0242ac110009\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Domain\r\n      summary: Get information about the requested domain.\r\n      description: \u003e\r\n        If the domain is of class 'folder', `root` is absent from returned\r\n        JSON object.\r\n\r\n        If no domain query parameter is provided, returns:\r\n        `{\"domains\": [], \"href\": []}`\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: Operation successful.\r\n          headers:\r\n            content-length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n            Content-Type:\r\n              description: MIME type of response -- always 'application/json'\r\n              schema:\r\n                type: string\r\n                enum:\r\n                  - application/json\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  root:\r\n                    description: \u003e\r\n                      UUID of root Group.\r\n                      If Domain is of class 'folder', this entry is not present.\r\n                    type: string\r\n                    examples:\r\n                      - \"g-82da0346-2b9e-11e8-9391-0242ac110009\"\r\n                  owner:\r\n                    type: string\r\n                    examples:\r\n                      - \"test_user1\"\r\n                  class:\r\n                    description: \u003e\r\n                      Category of Domain.\r\n                      If 'folder' no root group is included in response.\r\n                    type: string\r\n                    enum:\r\n                      - domain\r\n                      - folder\r\n                    examples:\r\n                      - domain\r\n                  created:\r\n                    type: number\r\n                    examples:\r\n                      - 1521476710.039304\r\n                  lastModified:\r\n                    type: number\r\n                    examples:\r\n                      - 1521476710.039304\r\n                  hrefs:\r\n                    description: \u003e\r\n                      Array of url references and their relation to this Domain.\r\n                      Should include entries for:\r\n                      `acls`,\r\n                      `database` (if not class is not `folder`),\r\n                      `groupbase` (if not class is not `folder`),\r\n                      `parent`,\r\n                      `root` (if not class is not `folder`),\r\n                      `self`,\r\n                      `typebase` (if not class is not `folder`).\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          description: URL to reference.\r\n                          type: string\r\n                        rel:\r\n                          description: Relation to this Domain.\r\n                          type: string\r\n                    examples:\r\n                      - rel: acls\r\n                        href: \"http://myfile.test_user1.home/acls\"\r\n                      - rel: database\r\n                        href: \"http://myfile.test_user1.home/datasets\"\r\n                      - rel: groupbase\r\n                        href: \"http://myfile.test_user1.home/groups\"\r\n                      - rel: parent\r\n                        href: \"http://myfile.test_user1.home/?domain=/home/test_user1\"\r\n                      - rel: root\r\n                        href: \"http://myfile.test_user1.home/groups/g-17d88042-2b92-11e8-9391-0242ac110009\"\r\n                      - rel: self\r\n                        href: \"http://myfile.test_user1.home/\"\r\n                      - rel: typebase\r\n                        href: \"http://myfile.test_user1.home/datatypes/\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    delete:\r\n      tags:\r\n        - Domain\r\n      summary: Delete the specified Domain or Folder.\r\n      description: \u003e\r\n        Delete the domain and all associated groups, datasets, attributes,\r\n        etc.\r\n\r\n        Note: if there are Domains which are children of this Domain\r\n        (e.g., deleting `somedir` from `/home/user/project/somedir/data.h5`),\r\n        those children directories will _not_ be deleted.\r\n        (TODO: abandoned children is incorrect behavior?)\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: Operation successful.\r\n          headers:\r\n            content-length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n            Content-Type:\r\n              description: MIME type of response -- always 'application/json'\r\n              schema:\r\n                type: string\r\n                enum:\r\n                  - application/json\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: The Domain or Folder which was deleted.\r\n                properties:\r\n                  domain:\r\n                    type: string\r\n                    description: domain path\r\n                    examples:\r\n                      - \"/home/test_user/some_path/some_file\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/'\r\n\r\n  /groups:\r\n    post:\r\n      tags:\r\n        - Domain\r\n        - Group\r\n      summary: Create a new Group.\r\n      description: \u003e\r\n        Create a new Group in the given Domain.\r\n\r\n        By default, the new Group it not attached to any other object in the\r\n        Domain; it is left to the user or application to appropriately attach\r\n        the new Group, i.e., Link to.\r\n\r\n        A link description may be supplied in the request body as\r\n        structured JSON, which will immediately link the new Group. If\r\n        supplying link info, the header `Content-Type: application/json`\r\n        should also be supplied as a matter of course. Note that this\r\n        link will be a hard link -- it refers directly to the object.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                link:\r\n                  description: \u003e\r\n                    Optional JSON object to immediately create a hard Link to\r\n                    the newly-created object. If present, both `id` and `name`\r\n                    must be supplied and `id` must be the UUID of an existing\r\n                    Group -- UUID of any non-Group object will result in an\r\n                    error.\r\n\r\n                    Note that the id reference is _reverse_ the usual for Link\r\n                    creation: the `id` value refers to the targeting object,\r\n                    not the target object of the link.\r\n                  type: object\r\n                  required:\r\n                    - id\r\n                    - name\r\n                  properties:\r\n                    id:\r\n                      description: \"UUID of Group to link from.\"\r\n                      type: string\r\n                      examples:\r\n                        - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                    name:\r\n                      description: Title of Link.\r\n                      type: string\r\n                      examples:\r\n                        - \"g2\"\r\n      responses:\r\n        \"201\":\r\n          description: New Group created.\r\n          headers:\r\n            content-length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  id:\r\n                    description: UUID of new Group.\r\n                    type: string\r\n                    examples:\r\n                      - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                  root:\r\n                    description: UUID of root Group in Domain.\r\n                    type: string\r\n                    examples:\r\n                      - \"g-37aa76f6-2c86-11e8-9391-0242ac110009\"\r\n                  lastModified:\r\n                    type: number\r\n                    examples:\r\n                      - 1521581745.9365487\r\n                  created:\r\n                    type: number\r\n                    examples:\r\n                      - 1521581745.9365487\r\n                  attributeCount:\r\n                    type: number\r\n                    examples:\r\n                      - 0\r\n                  linkCount:\r\n                    type: number\r\n                    examples:\r\n                      - 0\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Domain\r\n        - Group\r\n      summary: Get UUIDs for all non-root Groups in Domain.\r\n      description: \u003e\r\n        Listed Group(s) must be reachable via hard Link from root Group,\r\n        either directly or indirectly. If Groups exist which are unlinked or\r\n        not reachable by tree originating at root, they will not be included\r\n        in the list.\r\n\r\n        If there is any hard Link in the tree to a Group which has been\r\n        deleted, the request will fail with error 410 (GONE).\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          headers:\r\n            content-length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n            Content-Type:\r\n              description: MIME type of response -- always 'application/json'\r\n              schema:\r\n                type: string\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  groups:\r\n                    type: array\r\n                    items:\r\n                      description: UUID of each Group.\r\n                      type: string\r\n                    examples:\r\n                      - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                      - \"g-37aa76f6-2c86-11e8-9391-0242ac110009\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      description: \u003e\r\n                        References to other objects.\r\n\r\n                        Must contain references for only:\r\n                        `attributes`,\r\n                        `home`,\r\n                        `links`,\r\n                        `root`,\r\n                        `self`.\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          description: URL reference.\r\n                          type: string\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n                    examples:\r\n                      - rel: \"attributes\"\r\n                        href: \"http://localhost:5101/groups/g-ee2f6a2c-3847-11e8-a123-0242ac110009/attributes?domain=/home/test_user1/file\"\r\n                      - rel: \"home\"\r\n                        href: \"http://localhost:5101/?domain=/home/test_user1/file\"\r\n                      - rel: \"links\"\r\n                        href: \"http://localhost:5101/groups/g-ee2f6a2c-3847-11e8-a123-0242ac110009/links?domain=/home/test_user1/file\"\r\n                      - rel: \"root\"\r\n                        href: \"http://localhost:5101/groups/g-ed14d712-3847-11e8-a123-0242ac110009?domain=/home/test_user1/file\"\r\n                      - rel: \"self\"\r\n                        href: \"http://localhost:5101/groups/g-ee2f6a2c-3847-11e8-a123-0242ac110009?domain=/home/test_user1/file\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/groups/'\r\n\r\n  /groups/{id}:\r\n    get:\r\n      tags:\r\n        - Group\r\n      summary: Get information about a Group.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n        - name: getalias\r\n          in: query\r\n          schema:\r\n            type: integer\r\n            enum:\r\n              - 0\r\n              - 1\r\n            description: \u003e\r\n              Optional body content, gets the alias (path name(s) from root) of\r\n              the group as part of the response. Only includes paths as reached\r\n              via _hard_ Links.\r\n\r\n              If present, must be either `0` (no alias list) or `1` (alias list).\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          headers:\r\n            content-length:\r\n              description: Length of response in bytes.\r\n              schema:\r\n                type: string\r\n            Etag:\r\n              description: Hash-code status of resource.\r\n              schema:\r\n                type: string\r\n            Content-Type:\r\n              description: MIME type of response -- always 'application/json'\r\n              schema:\r\n                type: string\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  id:\r\n                    description: UUID of this Group.\r\n                    type: string\r\n                    examples:\r\n                      - g-37aa76f6-2c86-11e8-9391-0242ac110009\r\n                  root:\r\n                    description: UUID of root Group.\r\n                    type: string\r\n                    examples:\r\n                      - g-37aa76f6-2c86-11e8-9391-0242ac110009\r\n                  alias:\r\n                    description: \u003e\r\n                      List of aliases for the Group, as reached by _hard_ Links.\r\n                      If Group is unlinked, its alias list will be empty (`[]`).\r\n\r\n                      Only present if `alias=1` is present as query parameter.\r\n                    type: array\r\n                    items:\r\n                      type: string\r\n                    examples:\r\n                      - [\"/g1/g1.1\"]\r\n                  created:\r\n                    type: number\r\n                    examples:\r\n                      - 1521581560.6883142\r\n                  lastModified:\r\n                    type: number\r\n                    examples:\r\n                      - 1521644498.984212\r\n                  domain:\r\n                    type: string\r\n                    examples:\r\n                      - \"/home/test_user1/file\"\r\n                  attributeCount:\r\n                    type: number\r\n                    examples:\r\n                      - 4\r\n                  linkCount:\r\n                    type: number\r\n                    examples:\r\n                      - 2\r\n                  hrefs:\r\n                    description: List of references to other objects.\r\n                    type: array\r\n                    items:\r\n                      description: \u003e\r\n                        References to other objects.\r\n\r\n                        Must contain references for only:\r\n                        `attributes`,\r\n                        `home`,\r\n                        `links`,\r\n                        `root`,\r\n                        `self`.\r\n                      type: object\r\n                      properties:\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n                          examples:\r\n                            - \"self\"\r\n                        href:\r\n                          description: URL to reference.\r\n                          type: string\r\n                          examples:\r\n                            - \"http://myfile.test_user1.home/\"\r\n                    examples:\r\n                      - rel: \"attributes\"\r\n                        href: \"http://localhost:5101/groups/g-37aa76f6-2c86-11e8-9391-0242ac110009/attributes?domain=/home/test_user1/file\"\r\n                      - rel: \"home\"\r\n                        href: \"http://localhost:5101/?domain=/home/test_user1/file\"\r\n                      - rel: \"links\"\r\n                        href: \"http://localhost:5101/groups/g-37aa76f6-2c86-11e8-9391-0242ac110009/links?domain=/home/test_user1/file\"\r\n                      - rel: \"root\"\r\n                        href: \"http://localhost:5101/groups/g-37aa76f6-2c86-11e8-9391-0242ac110009?domain=/home/test_user1/file\"\r\n                      - rel: \"self\"\r\n                        href: \"http://localhost:5101/groups/g-37aa76f6-2c86-11e8-9391-0242ac110009?domain=/home/test_user1/file\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    delete:\r\n      tags:\r\n        - Group\r\n      summary: Delete a Group.\r\n      description: \u003e\r\n        TODO: Will delete attributes of the Group.\r\n\r\n        Will _not_ delete: (TODO: extensive tests to verify)\r\n\r\n        + Objects (Groups, Types, Datasets) this object linked to\r\n\r\n        + Links to this Group\r\n\r\n        If a group is deleted while still hard-Linked, it will result in all\r\n        `GET /groups` requests to fail with error 410 (GONE) until all Links to\r\n        the deleted Group are also deleted.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: Group removed.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/groups/{id}'\r\n\r\n  /groups/{id}/links:\r\n    get:\r\n      tags:\r\n        - Link\r\n      summary: List all Links in a Group.\r\n      description: \u003e\r\n        Items in the \"list\" array are sorted alphanumerically by title.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: Limit\r\n          in: query\r\n          schema:\r\n            type: number\r\n          description: \u003e\r\n            Cap the number of Links returned in list.\r\n\r\n            Must be an integer `N \u003e= 0`.\r\n\r\n            May be greater than or equal to the number of Links; has no\r\n            effect in that case.\r\n\r\n            May be used in conjunction with query parameter `Marker`.\r\n        - name: Marker\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: \u003e\r\n            Title of a Link; the first Link name to list.\r\n\r\n            If no Link exists with that title, causes an error.\r\n\r\n            May be used with query parameter `Limit`.\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  links:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        id:\r\n                          description: UUID of Link target.\r\n                          type: string\r\n                          examples:\r\n                            - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                        created:\r\n                          type: number\r\n                          examples:\r\n                            - 1521644498.984212\r\n                        class:\r\n                          description: \u003e\r\n                            Indicate whether this Link is hard, soft, or\r\n                            external.\r\n                          type: string\r\n                          enum:\r\n                            - \"H5L_TYPE_HARD\"\r\n                            - \"H5L_TYPE_SOFT\"\r\n                            - \"H5L_TYPE_EXTERNAL\"\r\n                          examples:\r\n                            - \"H5L_TYPE_HARD\"\r\n                            - \"H5L_TYPE_SOFT\"\r\n                            - \"H5L_TYPE_EXTERNAL\"\r\n                        title:\r\n                          description: \u003e\r\n                            Name/label/title of the Link, as provided upon\r\n                            creation.\r\n                          type: string\r\n                          examples:\r\n                            - \"g1\"\r\n                        target:\r\n                          description: URL of Link target.\r\n                          type: string\r\n                          examples:\r\n                            - \"http://localhost:5101/groups/g-a613ed48-2c86-11e8-9391-0242ac110009?domain=/home/test_user1/file\"\r\n                        href:\r\n                          description: URL to origin of Link.\r\n                          type: string\r\n                          examples:\r\n                            - \"http://localhost:5101/groups/g-37aa76f6-2c86-11e8-9391-0242ac110009/links/g1?domain=/home/test_user1/file\"\r\n                        collection:\r\n                          description: \u003e\r\n                            What kind of object is the target. (TODO)\r\n                          type: string\r\n                          enum:\r\n                            - \"groups\"\r\n                            - \"datasets\"\r\n                          #  - 'datatypes' TODO\r\n                          #  - 'attributes' TODO\r\n                          examples:\r\n                            - \"groups\"\r\n                            - \"datasets\"\r\n                  hrefs:\r\n                    type: array\r\n                    description: \u003e\r\n                      List of references to other entities.\r\n\r\n                      Should contain references for:\r\n                      `home`,\r\n                      `owner`,\r\n                      `self`.\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n                        href:\r\n                          description: URL to reference.\r\n                          type: string\r\n                    examples:\r\n                      - rel: home\r\n                        href': http://localhost:5101/?domain=/home/test_user1/file\r\n                      - rel: owner\r\n                        href': http://localhost:5101/groups/g-cbb6b840-3849-11e8-a123-0242ac110009?domain=/home/test_user1/file\r\n                      - rel: self\r\n                        href': http://localhost:5101/groups/g-cbb6b840-3849-11e8-a123-0242ac110009/links?domain=/home/test_user1/file\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/groups/{id}/links':\r\n\r\n  /groups/{id}/links/{linkname}:\r\n    put:\r\n      tags:\r\n        - Link\r\n      summary: Create a new Link in a Group.\r\n      description: \u003e\r\n        Link will be 'hard', 'soft', or 'external' depending on request\r\n        elements.\r\n\r\n        If `id` is provided, it will override other properties and attempt to\r\n        create a hard Link to the object with that UUID.\r\n\r\n        If `h5path` is provided, will create a symbolic link to object (if\r\n        any) at the given path -- either a soft Link within this domain if no\r\n        domain is specified, or an external Link.\r\n\r\n        If `h5domain` is provided, will create an external Link, pointing to\r\n        the object (if any) at `h5path` in domain `h5domain`.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/linkname\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      requestBody:\r\n        description: \u003e\r\n          JSON object describing the Link to create.\r\n\r\n          Requires at least one of `id` and `h5path`; if both supplied,\r\n          `id` takes priority. `h5domain` applies only if `h5path` is\r\n          present, providing the Domain for an external Link.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                id:\r\n                  description: \u003e\r\n                    UUID of object to link to. Creates a hard Link.\r\n\r\n                    Target UUID _must_ be the UUID of an object which exists\r\n                    within the Domain. Deleted, missing, or malformed UUIDs\r\n                    will result in an error.\r\n\r\n                    Overrides other fields.\r\n                  type: string\r\n                  examples:\r\n                    - \"g-37aa76f6-2c86-11e8-9391-0242ac110009\"\r\n                h5path:\r\n                  description: \u003e\r\n                    Path to an object relative to a Domain's root.\r\n                    TODO: Resolves by following hard Links to groups that match\r\n                    the path elements until a non-group terminal is reached.\r\n                    (alias of Link?)\r\n\r\n                    Creating a Link to a target that does not exist is allowed,\r\n                    but must be done with caution -- results in a dangling Link.\r\n\r\n                    If used, will create a soft or external Link.\r\n                  type: string\r\n                  examples:\r\n                    - \"/dset1\"\r\n                h5domain:\r\n                  description: \u003e\r\n                    URL of external domain.\r\n\r\n                    Results in an external Link.\r\n\r\n                    Requires `h5path` be present.\r\n                  type: string\r\n                  examples:\r\n                    - \"external_target.test.hdfgroup.org\"\r\n      responses:\r\n        \"201\":\r\n          description: New Link created.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: 'Always returns `{\"hrefs\": []}`.'\r\n                examples:\r\n                  - hrefs: []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Link\r\n      summary: Get Link info.\r\n      description: Get information about a given Link.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/linkname\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  lastModified:\r\n                    type: number\r\n                  created:\r\n                    type: number\r\n                  link:\r\n                    type: object\r\n                    properties:\r\n                      id:\r\n                        type: string\r\n                        examples:\r\n                          - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                      title:\r\n                        type: string\r\n                        examples:\r\n                          - \"g1\"\r\n                      collection:\r\n                        type: string\r\n                        examples:\r\n                          - \"group\"\r\n                      class:\r\n                        type: string\r\n                        examples:\r\n                          - \"H5L_TYPE_HARD\"\r\n                  hrefs:\r\n                    type: array\r\n                    description: \u003e\r\n                      List of references to other entities.\r\n\r\n                      Should contain references for:\r\n                      `home`,\r\n                      `owner`,\r\n                      `self`,\r\n                      `target`,\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          description: URL to reference.\r\n                          type: string\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n                    examples:\r\n                      - rel: \"home\"\r\n                        href: \"http://localhost:5101/?domain=/home/test_user1/file\"\r\n                      - rel: \"owner\"\r\n                        href: \"http://localhost:5101/groups/g-8822ef7a-384b-11e8-a123-0242ac110009?domain=/home/test_user1/file\"\r\n                      - rel: \"self\"\r\n                        href: \"http://localhost:5101/groups/g-8822ef7a-384b-11e8-a123-0242ac110009/links/g1?domain=/home/test_user1/file\"\r\n                      - rel: \"target\"\r\n                        href: \"http://localhost:5101/groups/g-a613ed48-2c86-11e8-9391-0242ac110009?domain=/home/test_user1/file\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    delete:\r\n      tags:\r\n        - Link\r\n      summary: Delete Link.\r\n      description: Will _not_ delete the target object.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/linkname\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      responses:\r\n        \"200\":\r\n          description: Link deleted.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: 'Always returns `{\"hrefs\": []}`.'\r\n                examples:\r\n                  - href: []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/groups/{id}/links/{linkname}'\r\n\r\n  /datasets:\r\n    post:\r\n      tags:\r\n        - Domain\r\n        - Dataset\r\n      summary: Create a Dataset.\r\n      description: \u003e\r\n        Create a new Dataset object in the Domain.\r\n\r\n        New object is not linked to or by any other object upon creation;\r\n        will not appear in `datasets` listing until linked to tree\r\n        originating at the Domain's root Group.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      requestBody:\r\n        description: \u003e\r\n          JSON object describing the Dataset's properties.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                \"type\":\r\n                  description: \u003e\r\n                    Predefined data Type, UUID of a commtted type, or JSON\r\n                    object description of a Type.\r\n\r\n                    Must be present.\r\n\r\n                    Predefined types are:\r\n                    `H5T_STD_U8BE`, (integer types of various sizes and\r\n                    `H5T_STD_U8LE`,  endainness)\r\n                    `H5T_STD_I8BE`,\r\n                    `H5T_STD_I8LE`,\r\n                    `H5T_STD_U16BE`,\r\n                    `H5T_STD_U16LE`,\r\n                    `H5T_STD_I16BE`,\r\n                    `H5T_STD_I16LE`,\r\n                    `H5T_STD_U32BE`,\r\n                    `H5T_STD_U32LE`,\r\n                    `H5T_STD_I32BE`,\r\n                    `H5T_STD_I32LE`,\r\n                    `H5T_STD_U64BE`,\r\n                    `H5T_STD_U64LE`,\r\n                    `H5T_STD_I64BE`,\r\n                    `H5T_STD_I64LE`,\r\n                    `H5T_IEEE_F32BE`, (floating-point types)\r\n                    `H5T_IEEE_F32LE`,\r\n                    `H5T_IEEE_F64BE`,\r\n                    `H5T_IEEE_F64LE`\r\n\r\n                    TODO: Type description objects.\r\n                    For now, see:\r\n                    http://h5serv.readthedocs.io/en/latest/Types/index.html\r\n                  type: string # TODO: ambiguous string or object\r\n                  examples:\r\n                    - \"H5T_STD_U32LE\"\r\n                shape:\r\n                  description: \u003e\r\n                    Either an integer array giving the initial dimensions of\r\n                    the dataset or `\"H5S_NULL\"`. If an array, each integer\r\n                    value must be non-negative; if `maxdims` is supplied, the\r\n                    integer must also be less than the `maxdims` value for that\r\n                    dimension.\r\n\r\n                    If shape is `H5S_NULL`, a dataset will be created which\r\n                    can have a type and attributes, but unable to hold any\r\n                    data.\r\n\r\n                    If `shape` is omitted or empty (`[]`), will create a scalar\r\n                    dataset -- dataset comprised of a single entity.\r\n                  type: string\r\n                  examples:\r\n                    - [128, 64]\r\n                maxdims:\r\n                  description: \u003e\r\n                    Integer array diving the maximum allowed extent for each\r\n                    dimension.\r\n\r\n                    If a dimension's maxdim is `0`, the maximum extent is\r\n                    unlimited.\r\n                  type: array\r\n                  items:\r\n                    type: number\r\n                  examples:\r\n                    - [0, 512]\r\n                creationProperties:\r\n                  description: TODO\r\n                  type: object\r\n                link:\r\n                  description: \u003e\r\n                    Optional JSON object to immediately create a hard Link to\r\n                    the newly-created object. If present, both `id` and `name`\r\n                    must be supplied and `id` must be the UUID of an existing\r\n                    Group -- UUID of any non-Group object will result in an\r\n                    error.\r\n\r\n                    Note that the id reference is _reverse_ the usual for Link\r\n                    creation: the `id` value refers to the targeting object,\r\n                    not the target object of the link.\r\n                  type: object\r\n                  required:\r\n                    - id\r\n                    - name\r\n                  properties:\r\n                    id:\r\n                      description: \"UUID of Group to link from.\"\r\n                      type: string\r\n                      examples:\r\n                        - \"g-a613ed48-2c86-11e8-9391-0242ac110009\"\r\n                    name:\r\n                      description: Title of Link.\r\n                      type: string\r\n                      examples:\r\n                        - \"dset2\"\r\n      responses:\r\n        \"201\":\r\n          description: Dataset created.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  id:\r\n                    description: UUID of this Dataset.\r\n                    type: string\r\n                  root:\r\n                    description: UUID of root Group in Domain.\r\n                    type: string\r\n                  created:\r\n                    type: number\r\n                  lastModified:\r\n                    type: number\r\n                  attributeCount:\r\n                    type: number\r\n                  \"type\":\r\n                    description: (See `GET /datasets/{id}`)\r\n                    type: object\r\n                  shape:\r\n                    description: (See `GET /datasets/{id}`)\r\n                    type: object\r\n\r\n    get:\r\n      tags:\r\n        - Domain\r\n        - Dataset\r\n      summary: List Datasets.\r\n      description: Only includes Datasets that are part of the tree linked to the root  Group in the Domain.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  datasets:\r\n                    type: array\r\n                    items:\r\n                      description: UUID of each Dataset.\r\n                      type: string\r\n                      examples:\r\n                        - \"d-21ae0bbe-2dea-11e8-9391-0242ac110009\"\r\n                  hrefs:\r\n                    type: array\r\n                    description: \u003e\r\n                      List of references to other objects.\r\n\r\n                      Should contain references for:\r\n                      `attributes`,\r\n                      `data`,\r\n                      `home`,\r\n                      `root`,\r\n                      `self`\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          description: URL reference.\r\n                          type: string\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n                    examples:\r\n                      - rel: \"attributes\"\r\n                        href: \"http://localhost:5101/datasets/d-d257f938-3854-11e8-a123-0242ac110009/attributes?domain=/home/test_user_1/file\"\r\n                      - rel': \"data\"\r\n                        href: \"http://localhost:5101/datasets/d-d257f938-3854-11e8-a123-0242ac110009/value?domain=/home/test_user_1/file\"\r\n                      - rel: \"home\"\r\n                        href: \"http://localhost:5101/?domain=/home/test_user_1/file\"\r\n                      - rel: \"root\"\r\n                        href: \"http://localhost:5101/groups/g-d20a1cc2-3854-11e8-a123-0242ac110009?domain=/home/test_user_1/file\"\r\n                      - rel: \"self\"\r\n                        href: \"http://localhost:5101/datasets/d-d257f938-3854-11e8-a123-0242ac110009?domain=/home/test_user_1/file\"\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/datasets'\r\n\r\n  /datasets/{id}:\r\n    get:\r\n      tags:\r\n        - Dataset\r\n      summary: Get information about a Dataset.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  id:\r\n                    description: UUID of this Dataset.\r\n                    type: string\r\n                    examples:\r\n                      - \"d-21ae0bbe-2dea-11e8-9391-0242ac110009\"\r\n                  root:\r\n                    description: UUID of root Group in Domain.\r\n                    type: string\r\n                    examples:\r\n                      - \"g-d313d498-2de4-11e8-9391-0242ac110009\"\r\n                  domain:\r\n                    type: string\r\n                    examples:\r\n                      - \"/home/test_user1/file\"\r\n                  created:\r\n                    type: number\r\n                    examples:\r\n                      - 1521734424.3\r\n                  lastModified:\r\n                    type: number\r\n                    examples:\r\n                      - 1521734424.3\r\n                  attributeCount:\r\n                    type: number\r\n                    examples:\r\n                      - 0\r\n                  \"type\":\r\n                    description: TODO\r\n                    type: object\r\n                    properties:\r\n                      class:\r\n                        type: string\r\n                        description: \u003e\r\n                          TODO\r\n                        enum:\r\n                          - H5T_COMPOUND\r\n                          - H5T_FLOAT\r\n                          - H5T_INTEGER\r\n                      base:\r\n                        type: string\r\n                        description: \u003e\r\n                          TODO\r\n\r\n                          Only present if class is not `H5T_COMPUND`.\r\n                      fields:\r\n                        description: \u003e\r\n                          List of fields in a compound dataset.\r\n\r\n                          Only present if `class` is `H5T_COMPOUND`.\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            name:\r\n                              type: string\r\n                              description: \u003e\r\n                                Descriptive or identifying name.\r\n                                Must be unique in the fields list.\r\n                            type:\r\n                              type: string\r\n                              description: \u003e\r\n                                Enum of pre-defined type, UUID of committed type,\r\n                                or type definition. (TODO: see `POST Dataset`?)\r\n                    examples:\r\n                      - base: H5T_STD_U32LE\r\n                        class: H5T_INTEGER\r\n                  shape:\r\n                    description: TODO\r\n                    type: object\r\n                    properties:\r\n                      class:\r\n                        type: string\r\n                        description: \u003e\r\n                          String enum indicating expected structure.\r\n\r\n                          + H5S_NULL -- Dataset has no data and no shape.\r\n\r\n                          + H5S_SCALAR -- Single entity as the Datast.\r\n\r\n                          + H5S_SIMPLE -- Dataset has hyperrectangular shape of\r\n                            one or more dimensions.\r\n                        enum:\r\n                          - H5S_NULL\r\n                          - H5S_SCALAR\r\n                          - H5S_SIMPLE\r\n                      dims:\r\n                        type: array\r\n                        description: \u003e\r\n                          Extent of each dimension in Dataset.\r\n\r\n                          Only present if `class` is `H5S_SIMPLE`.\r\n                        items:\r\n                          type: number\r\n                      maxdims:\r\n                        type: array\r\n                        description: \u003e\r\n                          Maximum possible extent for each dimension.\r\n\r\n                          Value of `0` in array indicates that the dimension has\r\n                          unlimited maximum extent.\r\n\r\n                          Only present if `class` is `H5S_SIMPLE`, and\r\n                          `maxdims` was included upon Dataset creation.\r\n                        items:\r\n                          type: number\r\n                    examples:\r\n                      - class: H5S_SIMPLE\r\n                        dims: [4, 4, 4]\r\n                        maxdims: [4, 4, 4]\r\n                  layout:\r\n                    description: TODO\r\n                    type: object\r\n                    examples:\r\n                      - dims: [4, 4, 4]\r\n                        class: H5D_CHUNKED\r\n                  creationProperties:\r\n                    description: \u003e\r\n                      Dataset creation properties as provided upon creation.\r\n                    type: object\r\n                  hrefs:\r\n                    description: \u003e\r\n                      List of references to other objects.\r\n\r\n                      Must include references to only:\r\n                      `attributes`,\r\n                      `data` (shape class `H5S_NULL` must _not_ include `data`),\r\n                      `root`,\r\n                      `self`.\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          description: URL to reference.\r\n                          type: string\r\n                        rel:\r\n                          description: Relation to this object.\r\n                          type: string\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    delete:\r\n      tags:\r\n        - Dataset\r\n      summary: Delete a Dataset.\r\n      description: \u003e\r\n        Links to this Dataset are not deleted.\r\n\r\n        TODO: Attributes and commited types are not deleted.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: \u003e\r\n            Dataset deleted. Always returns empty object `{}`.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /datasets/{id}\r\n\r\n  /datasets/{id}/shape:\r\n    put:\r\n      tags:\r\n        - Dataset\r\n      summary: Modify a Dataset's dimensions.\r\n      description: \u003e\r\n        Only datasets with `maxdims` may be resized.\r\n\r\n        Dataset may not shrink (TODO).\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      requestBody:\r\n        required: true\r\n        description: \u003e\r\n          Array of nonzero integers.\r\n\r\n          Length must equal Dataset's rank -- one value per dimension.\r\n\r\n          New extent must be greater than or equal to the current extent\r\n          and less than or equal to maximum extent (from `maxdims`).\r\n          For dimension index `i`, if `maxdims[i] == 0` then its maximum\r\n          extent is unbounded.\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - shape\r\n              properties:\r\n                shape:\r\n                  type: array\r\n                  items:\r\n                    type: number\r\n      responses:\r\n        \"201\":\r\n          description: \u003e\r\n            Shape dimensions updated.\r\n\r\n            Always returns `{\"hrefs\": []}` upon success.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: string # never relevant\r\n                examples:\r\n                  - hrefs: []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Dataset\r\n      summary: Get information about a Dataset's shape.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: \u003e\r\n                  (See `GET /datasets/{id}`)\r\n                properties:\r\n                  created:\r\n                    type: number\r\n                  lastModified:\r\n                    type: number\r\n                  shape:\r\n                    type: object\r\n                  hrefs:\r\n                    type: array\r\n                    description: \u003e\r\n                      Must include references to only:\r\n                      `owner`,\r\n                      `root`,\r\n                      `self`.\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n        default:\r\n          description: Operation unsuccessful.\r\n  #end /datasets/{id}/shape\r\n\r\n  /datasets/{id}/type:\r\n    get:\r\n      tags:\r\n        - Dataset\r\n      summary: Get information about a Dataset's type.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: \u003e\r\n                  (See `GET /datasets/{id}`)\r\n                properties:\r\n                  type:\r\n                    type: object\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          enum:\r\n                            - owner\r\n                            - root\r\n                            - self\r\n                          description: relation to this object\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  #end /datasets/{id}/type\r\n\r\n  /datasets/{id}/value:\r\n    put:\r\n      tags:\r\n        - Dataset\r\n      summary: Write values to Dataset.\r\n      description: Overwrites any existing data in update region.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      requestBody:\r\n        required: true\r\n        description: \u003e\r\n          JSON object describing what to write.\r\n\r\n          At least one of `points` OR `start, stop, step` must be provided.\r\n\r\n          `value` must be provided if not using `points`, else _either_\r\n          `value` or `value_bas64` must be provided.\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                start:\r\n                  description: \u003e\r\n                    Start coordinate of update.\r\n\r\n                    Each coordinate value must be non-negative and less than\r\n                    the extent of the dimension.\r\n\r\n                    Default start value is 0 for each dimension.\r\n                  type: array\r\n                  items:\r\n                    type: number\r\n                stop:\r\n                  description: \u003e\r\n                    End coordinate of update.\r\n\r\n                    Each coordinate value must be greater than `start` and less\r\n                    than the dimension's extent.\r\n                  type: array\r\n                  items:\r\n                    type: number\r\n                step:\r\n                  description: \u003e\r\n                    Coordinate increment step for each dimension.\r\n                  type: array\r\n                  items:\r\n                    type: number\r\n                points:\r\n                  description: \u003e\r\n                    List of coordinate points to update.\r\n\r\n                    Overrides `start`, `stop`, and `step`.\r\n\r\n                    If dataset is of rank 1 (single-dimension), each item\r\n                    should be an integer index not less than zero and less than\r\n                    the extent of the dataset.\r\n\r\n                    If dataset is multi-dimensional, each item should be a list\r\n                    of non-negative integers, each array being a valid\r\n                    coordinate in the dataset.\r\n\r\n                    Number of elements in list should equal that of `value`.\r\n\r\n                    TODO: scalar dataset?\r\n                  type: array\r\n                  items:\r\n                    type: string\r\n                  examples:\r\n                    - [[4, 3, 1], [6, 1, 2], [12, 0, 0]]\r\n                value:\r\n                  description: \u003e\r\n                    JSON array containing values to write.\r\n\r\n                    (TODO: 'anything in array' may give Swagger some grief.)\r\n                  type: array\r\n                  items:\r\n                    type: string # TODO: not really...\r\n                  examples:\r\n                    - [323, 16, 44]\r\n                value_base64:\r\n                  description: \u003e\r\n                    Base64-encoded binary data.\r\n\r\n                    Use instead of `value` for more efficient large data\r\n                    transfers.\r\n\r\n                    Only supported for fixed-length datatypes.\r\n                  type: string\r\n              required:\r\n                - value\r\n      responses:\r\n        \"200\":\r\n          description: Update/write successful.\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Dataset\r\n      summary: Get values from Dataset.\r\n      description: Either get the entire Dataset or a selection.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: select\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: \u003e\r\n            URL-encoded string representing a selection array.\r\n\r\n            _Example_: `[3:9,0:5:2]`\r\n            gets values from two-dimensional dataset:\r\n            [[3,0], [4,0], ..., [8,0], [3,2], [4,2], ..., [8,4]]\r\n            (18 data points total: `6*3`)\r\n\r\n            In EBNF plaintext:\r\n\r\n            `SELECT` := `'[' SLICE { ',' SLICE } ']'`\r\n\r\n            `SLICE` := `START ':' STOP [ ':' STEP ]`\r\n\r\n            `START` := non-negative integer less than the dimension's\r\n            extent.\r\n\r\n            `STOP` := non-negaive integer greater than `START` and less than\r\n            or equal to the dimension's extent. Is the first index _not_\r\n            included in the selection hyperslab.\r\n\r\n            `STEP` := non-negative integer greater than zero; is the\r\n            increment of index in dimension between each value. If omitted,\r\n            defaults to `1` (contiguous indices).\r\n        - name: query\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: \u003e\r\n            URL-encoded string of conditional expression to filter selection.\r\n\r\n            E.g., the condition `(temp \u003e 32.0) \u0026 (dir == 'N')` would return\r\n            elements of the dataset where the `temp` field was greater than\r\n            `32.0` _and_ the `dir` field was equal to `N`.\r\n            TODO: query syntax description\r\n\r\n            _Must_ be URL-encoded.\r\n\r\n            Can be used in conjunction with `select` parameter to filter\r\n            a hyberslab selection. Can be used in conjunction with `Limit`\r\n            parameter to restrict number of values returned.\r\n\r\n            Only applicable to one-dimensional compound datasets.\r\n            TODO: verify\r\n        - name: Limit\r\n          in: query\r\n          schema:\r\n            type: number\r\n          description: \u003e\r\n            Integer greater than zero.\r\n\r\n            If present, specifies maximum number of values to return.\r\n\r\n            Applies only to the `query` parameter.\r\n\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      ## WISHLIST: Remove parameters from URI and fold in 'POST DATASET' with\r\n      ##           a single request body format:\r\n      ##type: object:\r\n      ##properties:\r\n      ##  points:\r\n      ##    description: \u003e\r\n      ##        Specific data points to return from the Dataset.\r\n      ##\r\n      ##        Overrides any other selection element.\r\n      ##    type: array # array of points/coordinates in dataset\r\n      ##    items:\r\n      ##      type: array # index in each dimension for point.\r\n      ##                  # length must equal dataset rank.\r\n      ##      items:\r\n      ##        type: number # 0 \u003c= N \u003c dimension extent\r\n      ##  select:\r\n      ##    description: \u003e\r\n      ##        Coordinate ranges or strides defining a hyberslab subset of Dataset.\r\n      ##\r\n      ##        Array length must equal rank of Dataset.\r\n      ##        Empty range object, `{}`, stands in for entire dimension.\r\n      ##    type: array\r\n      ##    items:\r\n      ##      type: object\r\n      ##      properties:\r\n      ##        start:\r\n      ##          description: \u003e\r\n      ##              Integer greater than or equal to `0` and less than extent.\r\n      ##\r\n      ##              Default `0`.\r\n      ##          type: number\r\n      ##        stop:\r\n      ##          description: \u003e\r\n      ##              Integer greater than `start` and less than or equal to extent.\r\n      ##\r\n      ##              First index _not_ included in selection hyperslab.\r\n      ##\r\n      ##              Default dimension extent. (`-1`?)\r\n      ##          type: number\r\n      ##        step:\r\n      ##          description: Positive, non-zero integer. Default `1`.\r\n      ##          type: number\r\n      ##    examples: # array of 'objects'\r\n      ##      - [{},\r\n      ##       {\"start\": 3, \"stop\": 19, \"step\": 4},\r\n      ##       {\"stop\": 10, \"step: 3},\r\n      ##       {\"start\": 126}]\r\n      ##    # would get [[0,1,..,n], [3,7,11,15], [0,3,6,9], [126,127,..,n]]\r\n      ##  query:\r\n      ##    description: \u003e\r\n      ##        Filter response values (even from hyperslab selection).\r\n      ##    type: object\r\n      ##    properties:\r\n      ##      condition:\r\n      ##        description: \u003e\r\n      ##            String describing contitions required to include the value in\r\n      ##            response. E.g., `\"(temp \u003e 32.0) \u0026 (dir == 'N')\"` would return\r\n      ##            elements of the dataset where the `temp` field was greater than\r\n      ##            `32.0` and the `dir` field was equal to `N`.\r\n      ##        type: string\r\n      ##      limit:\r\n      ##        description: Integer greater than 0, maximum number of values to get.\r\n      ##        type: number\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/octet-stream:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    description: \u003e\r\n                      List of indices (TODO: coordinates?) corresponding with\r\n                      each value returned. i.e., `index[i]` is the coordinate of\r\n                      `value[i]`.\r\n\r\n                      Only present if `query` parameter is part of the request\r\n                      URI.\r\n                    type: array\r\n                    items:\r\n                      type: string # TODO: integer or array of integers WISHLIST: arrays\r\n                    examples:\r\n                      - [0, 1, 2, 3, 4, 5, 6, 7]\r\n                  value:\r\n                    type: array\r\n                    items: {}\r\n                    examples:\r\n                      - [\r\n                          [1, 3, 5, 7],\r\n                          [2, 6, 10, 14],\r\n                          [3, 9, 15, 21],\r\n                          [4, 12, 20, 28],\r\n                          [5, 15, 25, 35],\r\n                          [6, 18, 30, 42],\r\n                          [7, 21, 35, 49],\r\n                          [8, 24, 40, 56],\r\n                        ]\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    post:\r\n      tags:\r\n        - Dataset\r\n      summary: Get specific data points from Dataset.\r\n      # TODO: WISHLIST: fold into GET DATASET; 'POST' is counterintuitive.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      requestBody:\r\n        description: JSON array of coordinates in the Dataset.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                points:\r\n                  type: array\r\n                  items:\r\n                    type: array # TODO: verify array of arrays; esp. in single-coordinate case... [[5,3]], vs [5,3]\r\n                    items:\r\n                      type: number\r\n                  examples:\r\n                    - [[0, 0], [0, 1], [1, 0], [1, 1]]\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  value:\r\n                    type: array\r\n                    items: {}\r\n                    examples:\r\n                      - [0, 1, 1, 2]\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  #end /datasets/{id}/value\r\n\r\n  /datatypes:\r\n    \"post\":\r\n      tags:\r\n        - Domain\r\n        - Datatype\r\n      summary: Commit a Datatype to the Domain.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      requestBody:\r\n        description: \u003e\r\n          Definition of Datatype to commit.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                name:\r\n                  type: string\r\n                type:\r\n                  description: \u003e\r\n                    _Can be a string enum of a predefined type_, e.g.,\r\n                    `H5T_STD_U32LE` or `H5T_IEEE_F64LE`.\r\n                  type: object\r\n                  properties:\r\n                    class:\r\n                      type: string\r\n                      description: \u003e\r\n                        Must be \"H5T_COMPOUND\"?\r\n                      examples:\r\n                        - H5T_COMPOUND\r\n                    fields:\r\n                      type: array\r\n                      items:\r\n                        type: object\r\n                        properties:\r\n                          name:\r\n                            description: \u003e\r\n                              Identifier of the field.\r\n                            type: string\r\n                          \"type\":\r\n                            description: \u003e\r\n                              Type of the field.\r\n\r\n                              TODO: pre-defined enum string vs type object?\r\n                            type: string\r\n                      examples:\r\n                        - [\r\n                            { name: temp, type: \"H5T_STD_I32LE\" },\r\n                            { name: pressure, type: \"H5T_IEEE_F32LE\" },\r\n                          ]\r\n      responses:\r\n        \"201\":\r\n          description: CREATED\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  attributeCount:\r\n                    type: number\r\n                  id:\r\n                    type: string\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  #    get: # TODO: not present in tests or elsewhere\r\n  #      tags:\r\n  #        - Domain\r\n  #        - Datatype\r\n  #      summary: Get a list of Datatypes committed on Domain.\r\n\r\n  # end /datatypes\r\n\r\n  /datatypes/{id}:\r\n    get:\r\n      tags:\r\n        - Datatype\r\n      summary: Get information about a committed Datatype\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/path_datatype_uuid\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  attributeCount:\r\n                    type: number\r\n                  created:\r\n                    type: number\r\n                  id:\r\n                    type: string\r\n                  lastModified:\r\n                    type: number\r\n                  root:\r\n                    type: string\r\n                  type:\r\n                    type: object # TODO\r\n                  hrefs:\r\n                    type: array\r\n                    description: TODO\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    delete:\r\n      tags:\r\n        - Datatype\r\n      summary: Delete a committed Datatype.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/path_datatype_uuid\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: 'Always returns `{\"hrefs\": []}` (TODO confirm)'\r\n                properties:\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /datatypes/{id}\r\n\r\n  /{collection}/{obj_uuid}/attributes:\r\n    get:\r\n      tags:\r\n        - Attribute\r\n        - Group\r\n        - Dataset\r\n        - Datatype\r\n      summary: List all Attributes attached to the HDF5 object `obj_uuid`.\r\n      description: Attributes sorted alphanumerically by name.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/authorization\"\r\n        - name: collection\r\n          in: path\r\n          description: \"The collection of the HDF5 object (one of: `groups`, `datasets`, or `datatypes`).\"\r\n          schema:\r\n            type: string\r\n            enum:\r\n              - groups\r\n              - datasets\r\n              - datatypes\r\n          required: true\r\n        - name: obj_uuid\r\n          in: path\r\n          description: UUID of object.\r\n          schema:\r\n            type: string\r\n            format: uuid\r\n          required: true\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: Limit\r\n          in: query\r\n          description: \u003e\r\n            Cap the number of Attributes listed.\r\n\r\n            Can be used with `Marker`.\r\n          schema:\r\n            type: number\r\n        - name: Marker\r\n          in: query\r\n          description: \u003e\r\n            Start Attribute listing _after_ the given name.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: \u003e\r\n                  TODO\r\n                properties:\r\n                  attributes:\r\n                    type: array\r\n                    items:\r\n                      type: object # TODO: is this complete?\r\n                      properties:\r\n                        created:\r\n                          type: number\r\n                        href:\r\n                          type: string # TODO: investigate\r\n                        name:\r\n                          type: string\r\n                        shape:\r\n                          type: object # TODO: specify?\r\n                        type:\r\n                          type: object # TODO: specify?\r\n                        value:\r\n                          type: string # TODO: whatever the user put there\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /{collection}/{id}/attributes\r\n\r\n  /{collection}/{obj_uuid}/attributes/{attr}:\r\n    put:\r\n      tags:\r\n        - Attribute\r\n        - Group\r\n        - Dataset\r\n        - Datatype\r\n      summary: Create an attribute with name `attr` and assign it to HDF5 object `obj_uudi`.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/authorization\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: collection\r\n          required: true\r\n          in: path\r\n          description: The collection of the HDF5 object (`groups`, `datasets`, or `datatypes`).\r\n          schema:\r\n            type: string\r\n            enum:\r\n              - groups\r\n              - datasets\r\n              - datatypes\r\n        - name: obj_uuid\r\n          in: path\r\n          description: HDF5 object's UUID.\r\n          schema:\r\n            type: string\r\n          required: true\r\n        - name: attr\r\n          in: path\r\n          description: Name of attribute.\r\n          schema:\r\n            type: string\r\n          required: true\r\n      requestBody:\r\n        description: Information to create a new attribute of the HDF5 object `obj_uuid`.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object # TODO: Put a real definition.\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n        #            properties: # TODO: not specified in tests or elsewhere.\r\n        #              hrefs:\r\n        #                type: array\r\n        #                items:\r\n        #                  type: object\r\n        #                  properties:\r\n        #                    href:\r\n        #                      type: string\r\n        #                      description: URL of resource\r\n        #                    rel:\r\n        #                      type: string\r\n        #                      description: relation to this object\r\n        #                examples:\r\n        #4                - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    get:\r\n      tags:\r\n        - Attribute\r\n        - Group\r\n        - Dataset\r\n        - Datatype\r\n      summary: Get information about an Attribute.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/authorization\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - name: collection\r\n          in: path\r\n          description: Collection of object (Group, Dataset, or Datatype).\r\n          schema:\r\n            type: string\r\n            enum:\r\n              - groups\r\n              - datasets\r\n              - datatypes\r\n          required: true\r\n        - name: obj_uuid\r\n          in: path\r\n          description: UUID of object.\r\n          schema:\r\n            type: string\r\n            format: uuid\r\n          required: true\r\n        - name: attr\r\n          in: path\r\n          description: Name of attribute.\r\n          schema:\r\n            type: string\r\n            pattern: ^[^/]+$\r\n          required: true\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: \u003e\r\n                  TODO\r\n                properties:\r\n                  created:\r\n                    type: number\r\n                  lastModified:\r\n                    type: number\r\n                  name:\r\n                    type: string\r\n                  shape:\r\n                    type: object\r\n                  value:\r\n                    type: string # TODO whatever the user put there?\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /{collection}/{id}/attributes/{name}\r\n\r\n  /acls:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Domain\r\n      summary: Get access lists on Domain.\r\n      #      description: Attributes sorted alphanumerially by name. # TODO\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acls:\r\n                    $ref: \"#/components/schemas/ACLS\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /acls\r\n\r\n  /acls/{user}:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Domain\r\n      summary: Get users's access to a Domain.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n        - name: user\r\n          required: true\r\n          in: path\r\n          description: User identifier/name.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acl:\r\n                    $ref: \"#/components/schemas/ACL\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n    put:\r\n      tags:\r\n        - ACLS\r\n        - Domain\r\n      summary: Set user's access to the Domain.\r\n      requestBody:\r\n        required: true\r\n        description: \u003e\r\n          JSON object with one or more keys from the set: 'create', 'read',\r\n          'update', 'delete', 'readACL', 'updateACL'.  Each key should have\r\n          a boolean value.  Based on keys provided, the user's ACL will be \r\n          updated for those keys.  If no ACL exist for the given user, it\r\n          will be created.\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                create:\r\n                  type: boolean\r\n                update:\r\n                  type: boolean\r\n                delete:\r\n                  type: boolean\r\n                updateACL:\r\n                  type: boolean\r\n                read:\r\n                  type: boolean\r\n                readACL:\r\n                  type: boolean\r\n      parameters:\r\n        - name: user\r\n          in: path\r\n          description: Identifier/name of a user.\r\n          schema:\r\n            type: string\r\n          required: true\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acl:\r\n                    $ref: \"#/components/schemas/ACL\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                examples:\r\n                  - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /acls/{user}\r\n\r\n  /groups/{id}/acls:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Group\r\n      summary: List access lists on Group.\r\n      #      description: Attributes sorted alphanumerially by name.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acls:\r\n                    $ref: \"#/components/schemas/ACLS\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /groups/{id}/acls\r\n\r\n  /groups/{id}/acls/{user}:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Group\r\n      summary: Get users's access to a Group.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_group_uuid\"\r\n        - name: user\r\n          in: path\r\n          description: Identifier/name of a user.\r\n          schema:\r\n            type: string\r\n          required: true\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acl:\r\n                    $ref: \"#/components/schemas/ACL\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end '/groups/{id}/acls/{user}':\r\n\r\n  /datasets/{id}/acls:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Dataset\r\n      summary: Get access lists on Dataset.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_dataset_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acls:\r\n                    $ref: \"#/components/schemas/ACLS\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: relation to this object\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /datasets/{id}/acls\r\n\r\n  /datatypes/{id}/acls:\r\n    get:\r\n      tags:\r\n        - ACLS\r\n        - Datatype\r\n      summary: List access lists on Datatype.\r\n      #      description: Attributes sorted alphanumerially by name.\r\n      parameters:\r\n        - $ref: \"#/components/parameters/path_datatype_uuid\"\r\n        - $ref: \"#/components/parameters/query_domain\"\r\n        - $ref: \"#/components/parameters/authorization\"\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                description: TODO\r\n                properties:\r\n                  acls:\r\n                    $ref: \"#/components/schemas/ACLS\"\r\n                  hrefs:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        href:\r\n                          type: string\r\n                          description: URL of resource\r\n                        rel:\r\n                          type: string\r\n                          description: Relation to `href`.\r\n                    examples:\r\n                      - []\r\n        default:\r\n          description: Operation unsuccessful.\r\n\r\n  # end /datatypes/{id}/acls\r\n#end paths\r\n",
			"canonicalURL": "/github.com/HDFGroup/hdf-rest-api@e6f1a685c34ce4db68cdbdbcacacd053176a0136/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/HDFGroup/hdf-rest-api/blob/e6f1a685c34ce4db68cdbdbcacacd053176a0136/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}