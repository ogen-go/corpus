{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/splunk/splunk-cloud-sdk-python"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "splunk_sdk/streams/v3beta1/openapi.yaml",
			"byteSize": 158792,
			"content": "components:\n  schemas:\n    ActivatePipelineRequest:\n      description: \"\"\n      properties:\n        activateLatestVersion:\n          description: Set to true to activate the latest version of the pipeline.\n            Set to false to use the previously activated version of the pipeline.\n            Defaults to true.\n          type: boolean\n        allowNonRestoredState:\n          description: Set to true to allow the pipeline to ignore any unused progress\n            states. In some cases, when a data pipeline is changed, the progress state\n            will be stored for functions that no longer exist, so this must be set\n            to activate a pipeline in this state. Defaults to false.\n          type: boolean\n        skipRestoreState:\n          description: Set to true to start reading from the latest input rather than\n            from where the pipeline's previous run left off, which can cause data\n            loss. Defaults to false.\n          type: boolean\n      type: object\n    ArgumentModel:\n      description: \"\"\n      properties:\n        name:\n          type: string\n        optional:\n          type: boolean\n        type:\n          type: string\n      type: object\n    ConnectionMigrateResponse:\n      description: \"\"\n      properties:\n        oldConnectionId:\n          type: string\n        sinkConnectionId:\n          type: string\n        sourceConnectionId:\n          type: string\n        tenantId:\n          type: string\n      type: object\n    ConnectionPatchRequest:\n      description: \"\"\n      properties:\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      type: object\n    ConnectionPutRequest:\n      description: \"\"\n      properties:\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    ConnectionRequest:\n      description: \"\"\n      properties:\n        connectorId:\n          description: The ID of the parent connector.\n          example: \"\"\n          type: string\n        data:\n          description: The key-value pairs of configurations for this connection.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n        description:\n          description: The description of the connection.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the connection.\n          example: \"\"\n          type: string\n      required:\n      - connectorId\n      - data\n      - description\n      - name\n      type: object\n    ConnectionResponse:\n      description: \"\"\n      properties:\n        activePipelinesUsing:\n          items:\n            $ref: '#/components/schemas/MapOfstringAndobject'\n          type: array\n        activeSourcesUsing:\n          items:\n            $ref: '#/components/schemas/Source'\n          type: array\n        connectorId:\n          type: string\n        connectorName:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        versions:\n          items:\n            $ref: '#/components/schemas/ConnectionVersionResponse'\n          type: array\n      type: object\n    ConnectionSaveResponse:\n      description: \"\"\n      properties:\n        connectorId:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          properties: {}\n          type: object\n        description:\n          type: string\n        id:\n          type: string\n        messages:\n          items:\n            type: string\n          type: array\n        name:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    ConnectionVersionResponse:\n      description: \"\"\n      properties:\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          properties: {}\n          type: object\n        description:\n          type: string\n        name:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    ConnectorResponse:\n      description: \"\"\n      properties:\n        attributes:\n          properties: {}\n          type: object\n        config:\n          properties: {}\n          type: object\n        connectorType:\n          type: string\n        description:\n          type: string\n        functions:\n          items:\n            $ref: '#/components/schemas/MapOfstringAndobject'\n          type: array\n        hidden:\n          type: boolean\n        id:\n          type: string\n        metadata:\n          properties: {}\n          type: object\n        name:\n          type: string\n        panelUrl:\n          type: string\n        tag:\n          type: string\n      type: object\n    CreateSourceRequest:\n      description: \"\"\n      properties:\n        configs:\n          description: The key-value pairs for configuration for this source.\n          example: \"\"\n          properties: {}\n          type: object\n        connectionId:\n          description: The ID of the connection that is assigned to this source.\n          example: \"\"\n          type: string\n        connectorId:\n          description: The ID of the connector this source uses.\n          example: \"\"\n          type: string\n        dataStreamName:\n          description: The name of the data stream that this source sends data to.\n          example: \"\"\n          type: string\n        description:\n          description: The description of the source.\n          example: \"\"\n          type: string\n        enabled:\n          description: If the source should be enabled immediately after creation.\n          type: boolean\n        eventAttributes:\n          description: The key-value pairs to be added to every event emitted by this\n            source. Maximum 4 attributes are allowed.\n          example: \"\"\n          properties: {}\n          type: object\n        name:\n          description: The name of the source.\n          example: \"\"\n          type: string\n        parallelism:\n          description: The number of instances to run.\n          example: 1\n          format: int32\n          type: integer\n        schedule:\n          description: A CRON schedule expression for the discovery scheduler.\n          example: '*/10 * * * * *'\n          type: string\n      required:\n      - configs\n      - connectionId\n      - connectorId\n      - enabled\n      - name\n      type: object\n    DataStreamCreateRequest:\n      description: \"\"\n      properties:\n        description:\n          description: The description of the data stream. Defaults to null.\n          example: \"\"\n          type: string\n        name:\n          description: The name of the data stream.\n          example: \"\"\n          type: string\n        partitions:\n          description: Partitions, up to the partition count of the firehose\n          format: int32\n          type: integer\n      required:\n      - name\n      type: object\n    DataStreamResourceUser:\n      description: \"\"\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n      type: object\n    DataStreamResponse:\n      description: \"\"\n      properties:\n        activeReaders:\n          items:\n            $ref: '#/components/schemas/DataStreamResourceUser'\n          type: array\n        activeWriters:\n          items:\n            $ref: '#/components/schemas/DataStreamResourceUser'\n          type: array\n        description:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        partitions:\n          format: int32\n          type: integer\n      type: object\n    DataStreamUpdateRequest:\n      description: \"\"\n      properties:\n        description:\n          description: The description of the data stream. Defaults to null.\n          example: \"\"\n          type: string\n        partitions:\n          description: Partitions, up to the partition count of the firehose\n          format: int32\n          type: integer\n      type: object\n    DeactivatePipelineRequest:\n      description: \"\"\n      properties:\n        skipSavepoint:\n          description: Set to true to skip saving the state of a deactivated pipeline.\n            When the pipeline is later activated, it will start with the newest data\n            and skip any data that arrived after this deactivation, which can cause\n            data loss. Defaults to false.\n          type: boolean\n      type: object\n    DecompileRequest:\n      description: \"\"\n      properties:\n        upl:\n          $ref: '#/components/schemas/Pipeline'\n      required:\n      - upl\n      type: object\n    DecompileResponse:\n      description: \"\"\n      properties:\n        spl:\n          type: string\n      type: object\n    EnableDisableSourcesRequest:\n      description: \"\"\n      properties:\n        sourceIds:\n          description: A list of source IDs.\n          example: \"\"\n          items:\n            type: string\n          type: array\n      required:\n      - sourceIds\n      type: object\n    EntitlementRequest:\n      description: \"\"\n      properties:\n        name:\n          description: The name of the entitlement\n          example: \"\"\n          type: string\n        value:\n          description: The key-value pairs values\n          example: \"\"\n          properties: {}\n          type: object\n      required:\n      - name\n      - value\n      type: object\n    EntitlementResponse:\n      description: \"\"\n      properties:\n        appClientId:\n          type: string\n        name:\n          type: string\n        status:\n          type: string\n        value:\n          properties: {}\n          type: object\n      type: object\n    ErrorResponse:\n      description: \"\"\n      properties:\n        code:\n          type: string\n        details:\n          items:\n            $ref: '#/components/schemas/MapOfstringAndstring'\n          type: array\n        message:\n          type: string\n        moreInfo:\n          type: string\n      type: object\n    FilesMetaDataResponse:\n      description: \"\"\n      properties:\n        files:\n          items:\n            $ref: '#/components/schemas/UploadFileResponse'\n          type: array\n      type: object\n    FunctionModel:\n      description: \"\"\n      properties:\n        arguments:\n          items:\n            $ref: '#/components/schemas/ArgumentModel'\n          type: array\n        attributes:\n          properties: {}\n          type: object\n        op:\n          type: string\n        outputs:\n          items:\n            $ref: '#/components/schemas/ArgumentModel'\n          type: array\n        resolvedId:\n          type: string\n      type: object\n    GetInputSchemaRequest:\n      description: \"\"\n      properties:\n        nodeUuid:\n          description: The function ID.\n          example: \"\"\n          type: string\n        targetPortName:\n          description: The name of the input port.\n          example: \"\"\n          type: string\n        uplJson:\n          $ref: '#/components/schemas/Pipeline'\n      required:\n      - nodeUuid\n      - targetPortName\n      - uplJson\n      type: object\n    GetOutputSchemaRequest:\n      description: \"\"\n      properties:\n        nodeUuid:\n          description: The function ID. If omitted, returns the output schema for\n            all functions.\n          example: \"\"\n          type: string\n        sourcePortName:\n          description: The name of the output port. Deprecated.\n          example: \"\"\n          type: string\n        uplJson:\n          $ref: '#/components/schemas/Pipeline'\n      required:\n      - uplJson\n      type: object\n    LookupTableResponse:\n      description: \"\"\n      properties:\n        data:\n          items:\n            properties: {}\n            type: object\n          type: array\n        types:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    MapOfstringAndboolean:\n      additionalProperties:\n        type: boolean\n      description: \"\"\n      type: object\n    MapOfstringAndobject:\n      description: \"\"\n      type: object\n    MapOfstringAndstring:\n      additionalProperties:\n        type: string\n      description: \"\"\n      type: object\n    MetricsResponse:\n      description: \"\"\n      properties:\n        nodes:\n          additionalProperties:\n            $ref: '#/components/schemas/NodeMetrics'\n          type: object\n      type: object\n    NodeMetrics:\n      description: \"\"\n      properties:\n        metrics:\n          properties: {}\n          type: object\n      type: object\n    PaginatedResponseOfConnectionResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ConnectionResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfConnectorResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ConnectorResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfDataStreamResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/DataStreamResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfPipelineJobStatus:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/PipelineJobStatus'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfPipelineResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/PipelineResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfSourceResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/SourceResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfTaInfoResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/TaInfoResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    PaginatedResponseOfTemplateResponse:\n      description: \"\"\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/TemplateResponse'\n          type: array\n        total:\n          format: int64\n          type: integer\n      type: object\n    Pipeline:\n      description: \"\"\n      properties:\n        attributes:\n          description: Optional metadata specified by client. Not to be interpreted\n            by the platform\n          example: \"\"\n          properties: {}\n          type: object\n        edges:\n          description: A list of links between the output of one pipeline function\n            and the input of another pipeline function.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/PipelineEdge'\n          type: array\n        migrationInfo:\n          $ref: '#/components/schemas/PipelineMigrationInfo'\n        nodes:\n          description: The functions in your entire pipeline, including each function's\n            operations, attributes, and properties.\n          example: \"\"\n          items:\n            $ref: '#/components/schemas/PipelineNode'\n          type: array\n      required:\n      - edges\n      - nodes\n      type: object\n    PipelineEdge:\n      description: \"\"\n      properties:\n        sourceNode:\n          type: string\n        sourcePort:\n          type: string\n        targetNode:\n          type: string\n        targetPort:\n          type: string\n      type: object\n    PipelineJobStatus:\n      description: \"\"\n      properties:\n        jobId:\n          type: string\n        jobStatus:\n          type: string\n        pipelineId:\n          type: string\n        taskStatus:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    PipelineMigrationInfo:\n      description: \"\"\n      properties:\n        canMigrate:\n          type: boolean\n        createApiVersion:\n          format: int32\n          type: integer\n        targetApiVersion:\n          format: int32\n          type: integer\n      type: object\n    PipelineNode:\n      description: \"\"\n      properties:\n        annotations:\n          description: For internal use only.\n          example: \"\"\n          properties: {}\n          type: object\n        arguments:\n          description: Function arguments keyed by argument name.\n          example: \"\"\n          properties: {}\n          type: object\n        attributes:\n          description: For internal use only. This field is ignored.\n          example: \"\"\n          properties: {}\n          type: object\n        id:\n          description: A unique identifier for the function.\n          example: \"\"\n          type: string\n        op:\n          description: The operation name.\n          example: \"\"\n          type: string\n        resolvedId:\n          description: The identifier describing the operation name and required argument\n            types. This field is ignored.\n          example: \"\"\n          type: string\n        statementName:\n          description: If present, creates a named statement when decompiling to SPL2.\n            For example, \"$events = | from splunk_firehose();\".\n          example: \"\"\n          type: string\n      required:\n      - id\n      - op\n      type: object\n    PipelinePatchRequest:\n      description: \"\"\n      properties:\n        bypassValidation:\n          description: Set to true to bypass initial pipeline validation upon creation.\n            The pipeline still needs to be validated before activation. Defaults to\n            false.\n          type: boolean\n        createUserId:\n          description: The user that created the pipeline. Deprecated.\n          example: \"\"\n          type: string\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          description: The description of the pipeline. Defaults to null.\n          example: \"\"\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Optional labels in associated with the pipeline. A label is\n            represented by a key and a value.\n          example: \"\"\n          type: object\n        name:\n          description: The name of the pipeline.\n          example: \"\"\n          type: string\n      type: object\n    PipelineReactivateResponse:\n      description: \"\"\n      properties:\n        currentlyActiveVersion:\n          format: int64\n          type: integer\n        pipelineId:\n          type: string\n        pipelineReactivationStatus:\n          enum:\n          - activated\n          - currentVersionInvalid\n          - failedToDeactivateCurrentVersion\n          - notActivated\n          - rolledBack\n          - rolledBackError\n          type: string\n        statusDescription:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    PipelineReactivateResponseAsync:\n      description: \"\"\n      properties:\n        pipelineId:\n          type: string\n        reactivationRequestId:\n          type: string\n        requestedAction:\n          enum:\n          - ACTIVATE\n          - DEACTIVATE\n          - REACTIVATE\n          type: string\n      type: object\n    PipelineReactivationStatus:\n      description: \"\"\n      properties:\n        createDate:\n          format: int64\n          type: integer\n        currentUberJar:\n          type: string\n        exitStatus:\n          enum:\n          - SUCCESS\n          - FAILED\n          - PENDING\n          type: string\n        flinkJobStatus:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        pipelineDeploymentStatus:\n          enum:\n          - CREATED\n          - ACTIVATED\n          - FAILED\n          - RESTARTING\n          - FINISHED\n          - ACTIVATING\n          - DEACTIVATING\n          type: string\n        pipelineId:\n          type: string\n        requestedAction:\n          enum:\n          - ACTIVATE\n          - DEACTIVATE\n          - REACTIVATE\n          type: string\n        requestedUberJar:\n          type: string\n      type: object\n    PipelineRequest:\n      description: \"\"\n      properties:\n        bypassValidation:\n          description: Set to true to bypass initial pipeline validation upon creation.\n            The pipeline still needs to be validated before activation. Defaults to\n            false.\n          type: boolean\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          description: The description of the pipeline. Defaults to null.\n          example: \"\"\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: Optional labels in associated with the pipeline. A label is\n            represented by a key and a value.\n          example: \"\"\n          type: object\n        name:\n          description: The name of the pipeline.\n          example: \"\"\n          type: string\n      required:\n      - data\n      - name\n      type: object\n    PipelineResponse:\n      description: \"\"\n      properties:\n        activatedDate:\n          format: int64\n          type: integer\n        activatedUserId:\n          type: string\n        activatedVersion:\n          format: int64\n          type: integer\n        complexity:\n          format: float\n          type: number\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        currentVersion:\n          format: int64\n          type: integer\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          type: string\n        id:\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          type: object\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        status:\n          enum:\n          - CREATED\n          - ACTIVATED\n          - FAILED\n          - RESTARTING\n          - FINISHED\n          - ACTIVATING\n          - DEACTIVATING\n          type: string\n        statusMessage:\n          type: string\n        streamingConfigurationId:\n          format: int64\n          type: integer\n        tenantId:\n          type: string\n        uberJarSha256:\n          description: Null prior to initial activation. After deactivation, this\n            field will be set to the SHA at the time of the last activation.\n          example: \"\"\n          type: string\n        validationMessages:\n          items:\n            type: string\n          type: array\n        version:\n          format: int64\n          type: integer\n      type: object\n    PreviewData:\n      description: \"\"\n      properties:\n        currentNumberOfRecords:\n          format: int32\n          type: integer\n        nodes:\n          additionalProperties:\n            $ref: '#/components/schemas/PreviewNode'\n          type: object\n        previewId:\n          type: string\n        recordsPerPipeline:\n          format: int32\n          type: integer\n        ruleMetrics:\n          items:\n            $ref: '#/components/schemas/RuleMetrics'\n          type: array\n        tenantId:\n          type: string\n      type: object\n    PreviewNode:\n      description: \"\"\n      properties:\n        nodeName:\n          type: string\n        records:\n          items:\n            properties: {}\n            type: object\n          type: array\n      type: object\n    PreviewSessionStartRequest:\n      description: \"\"\n      properties:\n        recordsLimit:\n          description: The maximum number of events per function. Defaults to 100.\n          format: int32\n          type: integer\n        recordsPerPipeline:\n          description: The maximum number of events per pipeline. Defaults to 10000.\n          format: int32\n          type: integer\n        sessionLifetimeMs:\n          description: The maximum lifetime of a session, in milliseconds. Defaults\n            to 300,000.\n          format: int64\n          type: integer\n        upl:\n          $ref: '#/components/schemas/Pipeline'\n      required:\n      - upl\n      type: object\n    PreviewStartResponse:\n      description: \"\"\n      properties:\n        previewId:\n          format: int64\n          type: integer\n      type: object\n    PreviewState:\n      description: \"\"\n      properties:\n        activatedDate:\n          format: int64\n          type: integer\n        createdDate:\n          format: int64\n          type: integer\n        currentNumberOfRecords:\n          format: int32\n          type: integer\n        jobId:\n          type: string\n        previewId:\n          format: int64\n          type: integer\n        recordsPerPipeline:\n          format: int32\n          type: integer\n      type: object\n    ReactivatePipelineRequest:\n      description: \"\"\n      properties:\n        activateLatestVersion:\n          description: Set to true to activate the latest version of the pipeline.\n            Set to false to use the previously activated version of the pipeline.\n            Defaults to true.\n          type: boolean\n        allowNonRestoredState:\n          description: Set to true to allow the pipeline to ignore any unused progress\n            states. In some cases, when a data pipeline is changed, the progress state\n            will be stored for functions that no longer exist, so this must be set\n            to reactivate a pipeline in this state. Defaults to false.\n          type: boolean\n        skipRestoreState:\n          description: Set to true to start reading from the latest input rather than\n            from where the pipeline's previous run left off, which can cause data\n            loss. Defaults to false.\n          type: boolean\n      type: object\n    RegistryModel:\n      description: \"\"\n      properties:\n        categories:\n          items:\n            type: string\n          type: array\n        functions:\n          items:\n            $ref: '#/components/schemas/FunctionModel'\n          type: array\n      type: object\n    Response:\n      description: \"\"\n      properties:\n        activated:\n          description: Only set for /activate endpoint\n          example: \"\"\n          type: string\n        deactivated:\n          description: Only set for /deactivate endpoint\n          example: \"\"\n          type: string\n      type: object\n    RuleMetrics:\n      description: Represents the metrics for a particular rule.\n      properties:\n        matchCount:\n          format: int64\n          type: integer\n        matchPercentage:\n          format: int64\n          type: integer\n        name:\n          type: string\n      type: object\n    Source:\n      description: \"\"\n      properties:\n        arguments:\n          properties: {}\n          type: object\n        connectionId:\n          type: string\n        connectionVersion:\n          format: int64\n          type: integer\n        connectorId:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        dataStreamId:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        eventAttributes:\n          properties: {}\n          type: object\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        parallelism:\n          format: int32\n          type: integer\n        schedule:\n          type: string\n        tenantId:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    SourceResponse:\n      description: \"\"\n      properties:\n        configs:\n          properties: {}\n          type: object\n        connectionId:\n          type: string\n        connectionVersion:\n          format: int64\n          type: integer\n        connectorId:\n          type: string\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        dataStreamName:\n          type: string\n        description:\n          type: string\n        eventAttributes:\n          properties: {}\n          type: object\n        id:\n          type: string\n        lastUpdateDate:\n          format: int64\n          type: integer\n        lastUpdateUserId:\n          type: string\n        name:\n          type: string\n        parallelism:\n          format: int32\n          type: integer\n        schedule:\n          type: string\n        status:\n          enum:\n          - DISABLED\n          - ENABLED\n          - FAILED\n          - FETCH_ERROR\n          - RESTARTING\n          - RUNNING\n          - CREATED\n          type: string\n        usingLatestConnectionVersion:\n          type: boolean\n        version:\n          format: int64\n          type: integer\n      type: object\n    SplCompileRequest:\n      description: \"\"\n      properties:\n        spl:\n          description: The SPL2 representation of a pipeline or function parameters.\n          example: \"\"\n          type: string\n        validate:\n          description: A boolean flag to indicate whether the pipeline should be validated.\n          type: boolean\n      required:\n      - spl\n      type: object\n    TaInfoConfig:\n      description: \"\"\n      properties:\n        conf:\n          enum:\n          - props\n          - transform\n          - appmanifest\n          type: string\n        file:\n          type: string\n        folderPath:\n          type: string\n      type: object\n    TaInfoConfigResponse:\n      description: \"\"\n      properties:\n        lastUpdateDate:\n          format: int64\n          type: integer\n        name:\n          type: string\n        taInfoConfigs:\n          items:\n            $ref: '#/components/schemas/TaInfoConfig'\n          type: array\n        version:\n          type: string\n      type: object\n    TaInfoResponse:\n      description: \"\"\n      properties:\n        lastUpdateDate:\n          format: int64\n          type: integer\n        name:\n          type: string\n        version:\n          type: string\n      type: object\n    TemplatePatchRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      type: object\n    TemplatePutRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    TemplateRequest:\n      description: \"\"\n      properties:\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          description: Template description\n          example: \"\"\n          type: string\n        name:\n          description: Template name\n          example: \"\"\n          type: string\n      required:\n      - data\n      - description\n      - name\n      type: object\n    TemplateResponse:\n      description: \"\"\n      properties:\n        createDate:\n          format: int64\n          type: integer\n        createUserId:\n          type: string\n        data:\n          $ref: '#/components/schemas/Pipeline'\n        description:\n          type: string\n        learnMoreLocation:\n          type: string\n        name:\n          type: string\n        ownerTenantId:\n          type: string\n        templateId:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    UIFlagResponse:\n      description: \"\"\n      properties:\n        uiFlags:\n          additionalProperties:\n            additionalProperties:\n              type: boolean\n            type: object\n          type: object\n      type: object\n    UpdateSourceRequest:\n      description: \"\"\n      properties:\n        configs:\n          description: The key-value pairs for configuration for this source.\n          example: \"\"\n          properties: {}\n          type: object\n        connectionId:\n          description: The ID of the connection that is assigned to this source.\n          example: \"\"\n          type: string\n        dataStreamName:\n          description: The name of the data stream that this source sends data to.\n          example: \"\"\n          type: string\n        description:\n          description: The description of the source.\n          example: \"\"\n          type: string\n        eventAttributes:\n          description: The key-value pairs to be added to every event emitted by this\n            source. Maximum 4 attributes are allowed. If no update is intended on\n            the event attributes set this attribute to null. If an empty map is provided\n            it will remove the preexisting event attributes.\n          example: \"\"\n          properties: {}\n          type: object\n        name:\n          description: The name of the source.\n          example: \"\"\n          type: string\n        parallelism:\n          description: The number of instances to run.\n          example: 1\n          format: int32\n          type: integer\n        schedule:\n          description: A CRON schedule expression for the discovery scheduler.\n          example: '*/10 * * * * *'\n          type: string\n      type: object\n    UpgradePipelineRequest:\n      description: \"\"\n      properties:\n        allowNonRestoredState:\n          description: Set to true to allow the pipeline to ignore any unused progress\n            states. In some cases, when a data pipeline is changed, the progress state\n            will be stored for functions that no longer exist, so this must be set\n            to reactivate a pipeline in this state. Defaults to false.\n          type: boolean\n        cancelWithSavePoint:\n          description: Set to true to deactivate a pipeline with a savepoint. Defaults\n            to false.\n          type: boolean\n        skipRestoreState:\n          description: Set to true to start reading from the latest input rather than\n            from where the pipeline's previous run left off, which can cause data\n            loss. Defaults to false.\n          type: boolean\n        validateSavePoint:\n          description: Set to true to validate a savepoint before stopping the pipeline.\n          type: boolean\n      type: object\n    UplType:\n      description: \"\"\n      properties:\n        fieldName:\n          type: string\n        parameters:\n          items:\n            $ref: '#/components/schemas/UplType'\n          type: array\n        type:\n          type: string\n      type: object\n    UploadFileResponse:\n      description: \"\"\n      properties:\n        createdDate:\n          format: int64\n          type: integer\n        createdUserId:\n          type: string\n        filename:\n          type: string\n        id:\n          type: string\n        sha256:\n          type: string\n        tenantId:\n          type: string\n      type: object\n    ValidateConnectionRequest:\n      description: \"\"\n      properties:\n        connectorId:\n          description: The ID of the parent connector.\n          example: \"\"\n          type: string\n        data:\n          description: The key-value pairs of connection configurations to be validated.\n            Connectors may have some configurations that are required, which all connections\n            must provide values for. For configuration values of type BYTES, the provided\n            values must be Base64 encoded.\n          example: \"\"\n          properties: {}\n          type: object\n      required:\n      - connectorId\n      - data\n      type: object\n    ValidateRequest:\n      description: \"\"\n      properties:\n        upl:\n          $ref: '#/components/schemas/Pipeline'\n      required:\n      - upl\n      type: object\n    ValidateResponse:\n      description: \"\"\n      properties:\n        nodeId:\n          type: string\n        spl:\n          type: string\n        success:\n          type: boolean\n        validationMessages:\n          items:\n            type: string\n          type: array\n      type: object\n    ValidateSourceRequest:\n      description: \"\"\n      properties:\n        configs:\n          description: The key-value pairs for configuration for the source.\n          example: \"\"\n          properties: {}\n          type: object\n        connectorId:\n          description: The ID of the connector for the source.\n          example: \"\"\n          type: string\n      required:\n      - connectorId\n      type: object\ninfo:\n  description: Use the Streams service to perform create, read, update, and delete\n    (CRUD) operations on your data pipeline. The Streams service also has metrics\n    and preview session endpoints and gives you full control over your data pipeline.\n  title: Data Stream Processing REST API\n  version: v3beta1.1\nopenapi: 3.0.1\npaths:\n  /{tenantId}/streams/v3beta1/connections:\n    get:\n      deprecated: false\n      operationId: listConnections\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - explode: true\n        in: query\n        name: connectorId\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - in: query\n        name: functionId\n        schema:\n          type: string\n      - in: query\n        name: functionOp\n        schema:\n          type: string\n      - in: query\n        name: createUserId\n        schema:\n          type: string\n      - in: query\n        name: name\n        schema:\n          type: string\n      - in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - in: query\n        name: sortField\n        schema:\n          type: string\n      - description: Specify either ascending ('asc') or descending ('desc') sort\n          order for a given field (sortField), which must be set for sortDir to apply.\n          Defaults to 'asc'.\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - in: query\n        name: showSecretNames\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfConnectionResponse'\n          description: Returns a list of connections.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns a list of connections (latest versions only) by tenant ID.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.read\n    post:\n      deprecated: false\n      operationId: createConnection\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Skip validation\n        in: query\n        name: skipValidation\n        schema:\n          default: false\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: The connection was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Create a new DSP connection.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.create\n  /{tenantId}/streams/v3beta1/connections/{connectionId}:\n    delete:\n      deprecated: false\n      operationId: deleteConnection\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Connection ID\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: The connection was deleted successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Delete all versions of a connection by its id.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.delete\n    patch:\n      deprecated: false\n      operationId: updateConnection\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Connection ID\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionPatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: The connection was modified successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Patches an existing DSP connection.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.update\n    put:\n      deprecated: false\n      operationId: putConnection\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Connection ID\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionPutRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectionSaveResponse'\n          description: The connection was updated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Updates an existing DSP connection.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.update\n  /{tenantId}/streams/v3beta1/connections/validate:\n    post:\n      deprecated: false\n      operationId: validateConnection\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateConnectionRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"204\":\n          content: {}\n          description: The connection configuration is valid.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Invalid connection configuration.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Validates the configuration of a DSP connection.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.create\n  /{tenantId}/streams/v3beta1/connectors:\n    get:\n      deprecated: false\n      operationId: listConnectors\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfConnectorResponse'\n          description: Returns a list of connectors.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns a list of the available connectors.\n      tags:\n      - connectors\n      x-authz-scope: streams.connections.read\n  /{tenantId}/streams/v3beta1/files:\n    get:\n      deprecated: true\n      operationId: getFilesMetadata\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilesMetaDataResponse'\n          description: Returns files metadata.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns files metadata.\n      tags:\n      - files\n      x-authz-scope: streams.files.read\n    post:\n      deprecated: true\n      operationId: uploadFile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Upload file\n                  format: binary\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadFileResponse'\n          description: Upload a file.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Upload new file.\n      tags:\n      - files\n      x-authz-scope: streams.files.create\n  /{tenantId}/streams/v3beta1/files/{fileId}:\n    delete:\n      deprecated: true\n      operationId: deleteFile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: File ID\n        in: path\n        name: fileId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: File deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Delete file.\n      tags:\n      - files\n      x-authz-scope: streams.files.delete\n    get:\n      deprecated: true\n      operationId: getFileMetadata\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: File ID\n        in: path\n        name: fileId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadFileResponse'\n          description: Returns files metadata.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Get file metadata.\n      tags:\n      - files\n      x-authz-scope: streams.files.read\n  /{tenantId}/streams/v3beta1/lookups/{connectionId}:\n    get:\n      deprecated: false\n      operationId: getLookupTable\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Connection ID\n        in: path\n        name: connectionId\n        required: true\n        schema:\n          type: string\n      - description: size\n        in: query\n        name: size\n        required: true\n        schema:\n          format: int32\n          type: integer\n      - description: offset\n        in: query\n        name: offset\n        required: true\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupTableResponse'\n          description: Returns lookup table results.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns lookup table results.\n      tags:\n      - lookup\n      x-authz-scope: streams.lookups.read\n  /{tenantId}/streams/v3beta1/lookups/files:\n    get:\n      deprecated: false\n      operationId: getLookupFilesMetadata\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilesMetaDataResponse'\n          description: Returns lookups/files metadata.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns lookup files metadata.\n      tags:\n      - lookups/files\n      x-authz-scope: streams.files.read\n    post:\n      deprecated: false\n      operationId: uploadLookupFile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  description: Upload file\n                  format: binary\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadFileResponse'\n          description: Upload a lookup file.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Upload new lookup file.\n      tags:\n      - lookups/files\n      x-authz-scope: streams.files.create\n  /{tenantId}/streams/v3beta1/lookups/files/{fileId}:\n    delete:\n      deprecated: false\n      operationId: deleteLookupFile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: File ID\n        in: path\n        name: fileId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: File deleted successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Delete lookup file.\n      tags:\n      - lookups/files\n      x-authz-scope: streams.files.delete\n    get:\n      deprecated: false\n      operationId: getLookupFileMetadata\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: File ID\n        in: path\n        name: fileId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadFileResponse'\n          description: Returns lookup file metadata.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Get lookup file metadata.\n      tags:\n      - lookups/files\n      x-authz-scope: streams.files.read\n  /{tenantId}/streams/v3beta1/pipelines:\n    get:\n      deprecated: false\n      operationId: listPipelines\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - description: activated\n        in: query\n        name: activated\n        schema:\n          type: boolean\n      - description: createUserId\n        in: query\n        name: createUserId\n        schema:\n          type: string\n      - description: name\n        in: query\n        name: name\n        schema:\n          type: string\n      - description: includeData\n        in: query\n        name: includeData\n        schema:\n          default: false\n          type: boolean\n      - description: includeStatus\n        in: query\n        name: includeStatus\n        schema:\n          default: true\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfPipelineResponse'\n          description: Returns a list of pipelines.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns all pipelines.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n    post:\n      deprecated: false\n      operationId: createPipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: The pipeline was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Creates a pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.create\n  /{tenantId}/streams/v3beta1/pipelines/{id}:\n    delete:\n      deprecated: false\n      operationId: deletePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: The pipeline was deleted successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Removes a pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.delete\n    get:\n      deprecated: false\n      operationId: getPipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: version\n        in: query\n        name: version\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: Returns the pipeline with the specified id.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns an individual pipeline by version.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n    patch:\n      deprecated: false\n      operationId: patchPipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelinePatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: The pipeline was modified successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Patches an existing pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.update\n    put:\n      deprecated: false\n      operationId: updatePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponse'\n          description: The pipeline was updated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Updates an existing pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v3beta1/pipelines/{id}/activate:\n    post:\n      deprecated: false\n      operationId: activatePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivatePipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: The pipeline was activated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Activates an existing pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v3beta1/pipelines/{id}/deactivate:\n    post:\n      deprecated: false\n      operationId: deactivatePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeactivatePipelineRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n          description: The pipeline was deactivated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Deactivates an existing pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.deactivate\n  /{tenantId}/streams/v3beta1/pipelines/{id}/metrics/latest:\n    get:\n      deprecated: false\n      operationId: getPipelineLatestMetrics\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n          description: Returns the latest metrics for a specified pipeline.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the latest metrics for a single pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v3beta1/pipelines/{id}/reactivate:\n    post:\n      deprecated: false\n      operationId: reactivatePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReactivatePipelineRequest'\n        description: Request JSON\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineReactivateResponse'\n          description: The pipeline was reactivated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Reactivate a pipeline\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v3beta1/pipelines/{id}/upgrade:\n    post:\n      deprecated: false\n      operationId: upgradePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpgradePipelineRequest'\n        description: Request JSON\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineReactivateResponseAsync'\n          description: OK\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineReactivateResponseAsync'\n          description: Upgrade request received.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bad request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Unknown pipeline.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Pending upgrade request already exists.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Internal Server Error.\n      summary: Upgrades a pipeline async\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v3beta1/pipelines/{id}/upgrade/{upgradeId}:\n    get:\n      deprecated: false\n      operationId: reactivationStatus\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Pipeline ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: Pipeline Upgrade ID\n        in: path\n        name: upgradeId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineReactivationStatus'\n          description: Upgrade status returned.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Bad request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: Unknown upgrade id.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Get pipeline reactivation status\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.activate\n  /{tenantId}/streams/v3beta1/pipelines/compile:\n    post:\n      deprecated: false\n      operationId: compile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SplCompileRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pipeline'\n          description: Returns the compiled pipeline.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Compiles SPL2 and returns streams JSON.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v3beta1/pipelines/decompile:\n    post:\n      deprecated: false\n      operationId: decompile\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DecompileRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DecompileResponse'\n          description: Returns the compiled pipeline.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Decompiles UPL and returns SPL.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v3beta1/pipelines/input-schema:\n    post:\n      deprecated: false\n      operationId: getInputSchema\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetInputSchemaRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UplType'\n          description: Returns the input schema for a specified function.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the input schema for a function in a pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v3beta1/pipelines/output-schema:\n    post:\n      deprecated: false\n      operationId: getOutputSchema\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetOutputSchemaRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: '#/components/schemas/UplType'\n                type: object\n          description: Returns the output schema for a specified function.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the output schema for a specified function in a pipeline.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v3beta1/pipelines/registry:\n    get:\n      deprecated: false\n      operationId: getRegistry\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: local\n        in: query\n        name: local\n        schema:\n          default: true\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryModel'\n          description: Returns a list of functions.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns all functions in JSON format.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v3beta1/pipelines/status:\n    get:\n      deprecated: false\n      operationId: getPipelinesStatus\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - description: activated\n        in: query\n        name: activated\n        schema:\n          type: boolean\n      - description: createUserId\n        in: query\n        name: createUserId\n        schema:\n          type: string\n      - description: name\n        in: query\n        name: name\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfPipelineJobStatus'\n          description: Returns the current status of the pipeline.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the status of pipelines from the underlying streaming system.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.read\n  /{tenantId}/streams/v3beta1/pipelines/validate:\n    post:\n      deprecated: false\n      operationId: validatePipeline\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateResponse'\n          description: The pipeline is valid.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Verifies whether the Streams JSON is valid.\n      tags:\n      - pipelines\n      x-authz-scope: streams.pipelines.update\n  /{tenantId}/streams/v3beta1/preview-data/{previewSessionId}:\n    get:\n      deprecated: false\n      operationId: getPreviewData\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Preview Session ID\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewData'\n          description: Returns a stream of data for preview.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the preview data for a session.\n      tags:\n      - preview\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v3beta1/preview-session:\n    post:\n      deprecated: false\n      operationId: startPreview\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PreviewSessionStartRequest'\n        description: Parameters to start a new Preview session\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PreviewStartResponse'\n          description: The preview sessions was started successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Creates a preview session for a pipeline.\n      tags:\n      - preview\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v3beta1/preview-session/{previewSessionId}:\n    delete:\n      deprecated: false\n      operationId: stopPreview\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Preview Session ID\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"204\":\n          content: {}\n          description: The preview session was stopped successfully.\n        \"400\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Stops a preview session.\n      tags:\n      - preview\n      x-authz-scope: streams.pipelines.preview\n    get:\n      deprecated: false\n      operationId: getPreviewSession\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Preview Session ID\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/PreviewState'\n          description: Returns the state of a preview session.\n        \"400\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns information from a preview session.\n      tags:\n      - preview\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v3beta1/preview-session/{previewSessionId}/metrics/latest:\n    get:\n      deprecated: false\n      operationId: getPreviewSessionLatestMetrics\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Preview Session ID\n        in: path\n        name: previewSessionId\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsResponse'\n          description: Returns the latest preview session metrics.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns the latest metrics for a preview session.\n      tags:\n      - preview\n      x-authz-scope: streams.pipelines.preview\n  /{tenantId}/streams/v3beta1/sources/{id}:\n    delete:\n      deprecated: false\n      operationId: deleteSource\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Source ID\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: The source was deleted successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The source did not exist or was deleted by a preceding request.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Delete a source.\n      tags:\n      - sources\n      x-authz-scope: streams.sources.delete\n  /{tenantId}/streams/v3beta1/templates:\n    get:\n      deprecated: false\n      operationId: listTemplates\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: offset\n        in: query\n        name: offset\n        schema:\n          format: int32\n          type: integer\n      - description: pageSize\n        in: query\n        name: pageSize\n        schema:\n          format: int32\n          type: integer\n      - description: sortField\n        in: query\n        name: sortField\n        schema:\n          type: string\n      - description: sortDir\n        in: query\n        name: sortDir\n        schema:\n          type: string\n      - description: createUserId\n        in: query\n        name: createUserId\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResponseOfTemplateResponse'\n          description: Returns a list of templates.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns a list of all templates.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.read\n    post:\n      deprecated: false\n      operationId: createTemplate\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplateRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: The template was created successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Creates a template for a tenant.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.create\n  /{tenantId}/streams/v3beta1/templates/{templateId}:\n    delete:\n      deprecated: false\n      operationId: deleteTemplate\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Template ID\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: The template was deleted successfully.\n        \"400\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Removes a template with a specific ID.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.delete\n    get:\n      deprecated: false\n      operationId: getTemplate\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Template ID\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      - description: Template version\n        in: query\n        name: version\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: Returns the template for a specified id.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Returns an individual template by version.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.read\n    patch:\n      deprecated: false\n      operationId: updateTemplate\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Template ID\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatePatchRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: OK\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: The template was modified successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Patches an existing template.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.update\n    put:\n      deprecated: false\n      operationId: putTemplate\n      parameters:\n      - description: Tenant ID\n        in: path\n        name: tenantId\n        required: true\n        schema:\n          type: string\n      - description: Template ID\n        in: path\n        name: templateId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TemplatePutRequest'\n        description: Request JSON\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n          description: The template was updated successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The request isn't well-formed or is incorrect.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The user isn?t authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The operation isn?t authorized.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The resource wasn?t found.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: There is a conflict with the existing state of your resource.\n        \"415\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The media type isn't supported.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The provided fields aren't valid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: An internal service error has occurred.\n      summary: Updates an existing template.\n      tags:\n      - templates\n      x-authz-scope: streams.templates.update\nservers:\n- url: /\ntags:\n- description: V3Beta1 UIFlags API Endpoints\n  name: uiflags\n- description: V3Beta1 Release Info API Endpoints\n  name: info\n- description: Files API Endpoints Deprecated Use Lookup Files API Endpoints\n  name: files\n- description: Entitlements API Endpoints\n  name: entitlements\n- description: Services Endpoint\n  name: admin\n- description: V3Beta1 Connectors and Connections Endpoints\n  name: connectors\n- description: V3Beta1 TA Config API Endpoints\n  name: taconfig\n- description: Lookup Files API Endpoints\n  name: lookups/files\n- description: V3Beta1 Template API Endpoints\n  name: templates\n- description: Lookups API Endpoints\n  name: lookup\n- description: V3Beta1 Pipeline API Endpoints\n  name: pipelines\n- description: V3Beta1 Sources Endpoints\n  name: sources\n- description: V3Beta1 Data Streams Endpoints\n  name: datastreams\n- description: V3Beta1 Preview API Endpoints\n  name: preview\n\n# Retrieved from scp-openapi commit 820564ba8a17697d087ff171b14cbad60a716ee3 path: streams/v3beta1/openapi.yaml",
			"canonicalURL": "/github.com/splunk/splunk-cloud-sdk-python@d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/-/blob/splunk_sdk/streams/v3beta1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/splunk/splunk-cloud-sdk-python/blob/d8b72e17c2fcefd7e82716dfb61f9eb60799a74f/splunk_sdk/streams/v3beta1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}