{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microcks/microcks"
		},
		"file": {
			"name": "APIPastry-openapi.yaml",
			"size": 0,
			"path": "samples/APIPastry-openapi.yaml",
			"byteSize": 6063,
			"content": "---\nopenapi: 3.0.2\ninfo:\n  title: API Pastry - 2.0\n  version: 2.0.0\n  description: API definition of API Pastry sample app\n  contact:\n    name: Laurent Broudoux\n    url: http://github.com/lbroudoux\n    email: laurent.broudoux@gmail.com\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\npaths:\n  /pastry:\n    summary: Global operations on pastries\n    get:\n      tags:\n      - pastry\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pastry'\n              examples:\n                pastries_json:\n                  value:\n                  - name: Baba Rhum\n                    description: Delicieux Baba au Rhum pas calorique du tout\n                    size: L\n                    price: 3.2\n                    status: available\n                  - name: Divorces\n                    description: Delicieux Divorces pas calorique du tout\n                    size: M\n                    price: 2.8\n                    status: available\n                  - name: Tartelette Fraise\n                    description: Delicieuse Tartelette aux Fraises fraiches\n                    size: S\n                    price: 2\n                    status: available\n          description: Get list of pastries\n      operationId: GetPastries\n      summary: Get list of pastries\n  /pastry/{name}:\n    summary: Specific operation on pastry\n    get:\n      parameters:\n      - examples:\n          Eclair Cafe:\n            value: Eclair Cafe\n          Eclair Cafe Xml:\n            value: Eclair Cafe\n          Millefeuille:\n            value: Millefeuille\n        name: name\n        description: pastry name\n        schema:\n          type: string\n        in: path\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pastry'\n              examples:\n                Eclair Cafe:\n                  value:\n                    name: Eclair Cafe\n                    description: Delicieux Eclair au Cafe pas calorique du tout\n                    size: M\n                    price: 2.5\n                    status: available\n                Millefeuille:\n                  value:\n                    name: Millefeuille\n                    description: Delicieux Millefeuille pas calorique du tout\n                    size: L\n                    price: 4.4\n                    status: available\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Pastry'\n              examples:\n                Eclair Cafe Xml:\n                  value: |-\n                    \u003cpastry\u003e\n                        \u003cname\u003eEclair Cafe\u003c/name\u003e\n                        \u003cdescription\u003eDelicieux Eclair au Cafe pas calorique du tout\u003c/description\u003e\n                        \u003csize\u003eM\u003c/size\u003e\n                        \u003cprice\u003e2.5\u003c/price\u003e\n                        \u003cstatus\u003eavailable\u003c/status\u003e\n                    \u003c/pastry\u003e\n          description: Pastry with specified name\n      operationId: GetPastryByName\n      summary: Get Pastry by name\n      description: Get Pastry by name\n    patch:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pastry'\n            examples:\n              Eclair Cafe:\n                value:\n                  price: 2.6\n          text/xml:\n            schema:\n              $ref: '#/components/schemas/Pastry'\n            examples:\n              Eclair Cafe Xml:\n                value: \"\u003cpastry\u003e\\n\\t\u003cprice\u003e2.6\u003c/price\u003e\\n\u003c/pastry\u003e\"\n        required: true\n      parameters:\n      - examples:\n          Eclair Cafe:\n            value: Eclair Cafe\n          Eclair Cafe Xml:\n            value: Eclair Cafe\n        name: name\n        description: pastry name\n        schema:\n          type: string\n        in: path\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pastry'\n              examples:\n                Eclair Cafe:\n                  value:\n                    name: Eclair Cafe\n                    description: Delicieux Eclair au Cafe pas calorique du tout\n                    size: M\n                    price: 2.6\n                    status: available\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/Pastry'\n              examples:\n                Eclair Cafe Xml:\n                  value: |-\n                    \u003cpastry\u003e\n                        \u003cname\u003eEclair Cafe\u003c/name\u003e\n                        \u003cdescription\u003eDelicieux Eclair au Cafe pas calorique du tout\u003c/description\u003e\n                        \u003csize\u003eM\u003c/size\u003e\n                        \u003cprice\u003e2.6\u003c/price\u003e\n                        \u003cstatus\u003eavailable\u003c/status\u003e\n                    \u003c/pastry\u003e\n          description: Changed pastry\n      operationId: PatchPastry\n      summary: Patch existing pastry\n    parameters:\n    - name: name\n      description: pastry name\n      schema:\n        type: string\n      in: path\n      required: true\ncomponents:\n  schemas:\n    Pastry:\n      title: Root Type for Pastry\n      description: The root of the Pastry type's schema.\n      type: object\n      properties:\n        name:\n          description: Name of this pastry\n          type: string\n        description:\n          description: A short description of this pastry\n          type: string\n        size:\n          description: Size of pastry (S, M, L)\n          type: string\n        price:\n          format: double\n          description: Price (in USD) of this pastry\n          type: number\n        status:\n          description: Status in stock (available, out_of_stock)\n          type: string\n      example:\n        name: My Pastry\n        description: A short description os my pastry\n        size: M\n        price: 4.5\n        status: available\ntags:\n- name: pastry\n  description: Pastry resource\n",
			"canonicalURL": "/github.com/microcks/microcks@073200620b3f9b1525985cb0492dd8995738119b/-/blob/samples/APIPastry-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/microcks/microcks/blob/073200620b3f9b1525985cb0492dd8995738119b/samples/APIPastry-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}