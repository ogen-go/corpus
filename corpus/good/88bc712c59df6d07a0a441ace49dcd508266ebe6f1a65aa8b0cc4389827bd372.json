{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/treeverse/lakeFS"
		},
		"file": {
			"name": "authorization.yml",
			"size": 0,
			"path": "api/authorization.yml",
			"byteSize": 26148,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  title: lakeFS authorization API\n  description: authorization API used to manages users, groups, credentials and policies\n  version: 0.1.0\n\nservers:\n  - url: \"/api/v1\"\n    description: lakeFS authentication endpoint\n\nsecurity:\n  - jwt_token: []\n\ncomponents:\n  securitySchemes:\n    jwt_token:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  parameters:\n    PaginationPrefix:\n      in: query\n      name: prefix\n      description: return items prefixed with this value\n      schema:\n        type: string\n\n    PaginationAfter:\n      in: query\n      name: after\n      description: return items after this value\n      schema:\n        type: string\n\n    PaginationAmount:\n      in: query\n      name: amount\n      description: how many items to return\n      schema:\n        type: integer\n        minimum: -1\n        maximum: 1000\n        default: 100\n\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: Resource Not Found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ValidationError:\n      description: Validation Error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  schemas:\n    Pagination:\n      type: object\n      required:\n        - has_more\n        - max_per_page\n        - results\n        - next_offset\n      properties:\n        has_more:\n          type: boolean\n          description: Next page is available\n        next_offset:\n          type: string\n          description: Token used to retrieve the next page\n        results:\n          type: integer\n          minimum: 0\n          description: Number of values found in the results\n        max_per_page:\n          type: integer\n          minimum: 0\n          description: Maximal number of entries per page\n\n    Error:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          description: short message explaining the error\n          type: string\n\n    User:\n      type: object\n      required:\n        - id\n        - name\n        - creation_date\n        - encryptedPassword\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        creation_date:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n        friendly_name:\n          type: string\n        email:\n          type: string\n        source:\n          type: string\n        encryptedPassword:\n          type: string\n          format: byte\n        external_id:\n          type: string\n    UserPassword:\n      type: object\n      required:\n        - encryptedPassword\n      properties:\n        encryptedPassword:\n          type: string\n          format: byte\n\n    UserCreation:\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n        friendlyName:\n          type: string\n        source:\n          type: string\n        encryptedPassword:\n          type: string\n          format: byte\n        external_id:\n          type: string\n      required:\n        - username\n\n\n    Credentials:\n      type: object\n      required:\n        - creation_date\n        - access_key_id\n      properties:\n        access_key_id:\n          type: string\n        creation_date:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n\n    CredentialsList:\n      type: object\n      required:\n        - pagination\n        - results\n      properties:\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Credentials\"\n\n    CredentialsWithSecret:\n      type: object\n      required:\n        - access_key_id\n        - creation_date\n        - secret_access_key\n        - user_id\n      properties:\n        access_key_id:\n          type: string\n        secret_access_key:\n          type: string\n        creation_date:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n        user_id:\n          type: integer\n          format: int64\n\n    Group:\n      type: object\n      required:\n        - creation_date\n        - name\n      properties:\n        name:\n          type: string\n        creation_date:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n\n    GroupList:\n      type: object\n      required:\n        - results\n        - pagination\n      properties:\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Group\"\n\n    UserList:\n      type: object\n      required:\n        - pagination\n        - results\n      properties:\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/User\"\n\n    GroupCreation:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n\n    Statement:\n      type: object\n      required:\n        - effect\n        - resource\n        - action\n      properties:\n        effect:\n          type: string\n          enum: [ allow, deny ]\n        resource:\n          type: string\n        action:\n          type: array\n          items:\n            type: string\n          minItems: 1\n\n    Policy:\n      type: object\n      required:\n        - name\n        - statement\n      properties:\n        name:\n          type: string\n        creation_date:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n        statement:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Statement\"\n          minItems: 1\n\n    PolicyList:\n      type: object\n      required:\n        - pagination\n        - results\n      properties:\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Policy\"\n\n    ClaimTokenId:\n      type: object\n      required:\n        - token_id\n        - expires_at\n      properties:\n        token_id:\n          type: string\n        expires_at:\n          type: integer\n          format: int64\n          description: Unix Epoch in seconds\n\npaths:\n  /auth/users:\n    get:\n      tags:\n        - auth\n      operationId: listUsers\n      summary: list users\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n        - in: query\n          name: id\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: email\n          schema:\n            type: string\n\n      responses:\n        200:\n          description: user list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    post:\n      tags:\n        - auth\n      operationId: createUser\n      summary: create user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserCreation\"\n      responses:\n        201:\n          description: user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        400:\n          description: validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      operationId: getUser\n      summary: get user\n      responses:\n        200:\n          description: user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    delete:\n      tags:\n        - auth\n      operationId: deleteUser\n      summary: delete user\n      responses:\n        204:\n          description: user deleted successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/password:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - auth\n      operationId: updatePassword\n      summary: update users password\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserPassword\"\n      responses:\n        200:\n          description: password updated succesfully\n        400:\n          $ref: \"#/components/responses/ValidationError\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups:\n    get:\n      tags:\n        - auth\n      operationId: listGroups\n      summary: list groups\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      responses:\n        200:\n          description: group list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    post:\n      tags:\n        - auth\n      operationId: createGroup\n      summary: create group\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GroupCreation\"\n      responses:\n        201:\n          description: group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups/{groupId}:\n    parameters:\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      operationId: getGroup\n      summary: get group\n      responses:\n        200:\n          description: group\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    delete:\n      tags:\n        - auth\n      operationId: deleteGroup\n      summary: delete group\n      responses:\n        204:\n          description: group deleted successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/policies:\n    get:\n      tags:\n        - auth\n      operationId: listPolicies\n      summary: list policies\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      responses:\n        200:\n          description: policy list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    post:\n      tags:\n        - auth\n      operationId: createPolicy\n      summary: create policy\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n      responses:\n        201:\n          description: policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        400:\n          $ref: \"#/components/responses/ValidationError\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/policies/{policyId}:\n    parameters:\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      operationId: getPolicy\n      summary: get policy\n      responses:\n        200:\n          description: policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    put:\n      tags:\n        - auth\n      operationId: updatePolicy\n      summary: update policy\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Policy\"\n      responses:\n        200:\n          description: policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Policy\"\n        400:\n          $ref: \"#/components/responses/ValidationError\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    delete:\n      tags:\n        - auth\n      operationId: deletePolicy\n      summary: delete policy\n      responses:\n        204:\n          description: policy deleted successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups/{groupId}/members:\n    parameters:\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      operationId: listGroupMembers\n      summary: list group members\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      responses:\n        200:\n          description: group memeber list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups/{groupId}/members/{userId}:\n    parameters:\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - auth\n      operationId: addGroupMembership\n      summary: add group membership\n      responses:\n        201:\n          description: membership added successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n    delete:\n      tags:\n        - auth\n      operationId: deleteGroupMembership\n      summary: delete group membership\n      responses:\n        204:\n          description: membership deleted successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/credentials:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      operationId: listUserCredentials\n      summary: list user credentials\n      responses:\n        200:\n          description: credential list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CredentialsList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n    post:\n      parameters:\n        - in: query\n          name: access_key\n          schema:\n            type: string\n        - in: query\n          name: secret_key\n          schema:\n            type: string\n      tags:\n        - auth\n      operationId: createCredentials\n      summary: create credentials\n      responses:\n        201:\n          description: credentials\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CredentialsWithSecret\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/credentials/{accessKeyId}:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: accessKeyId\n        required: true\n        schema:\n          type: string\n    delete:\n      tags:\n        - auth\n      operationId: deleteCredentials\n      summary: delete credentials\n      responses:\n        204:\n          description: credentials deleted successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n    get:\n      tags:\n        - auth\n      operationId: getCredentialsForUser\n      summary: get credentials\n      responses:\n        200:\n          description: credentials\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credentials\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/credentials/{accessKeyId}:\n    parameters:\n      - in: path\n        name: accessKeyId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      operationId: getCredentials\n      summary: get credentials\n      responses:\n        200:\n          description: credentials\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CredentialsWithSecret\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/groups:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      operationId: listUserGroups\n      summary: list user groups\n      responses:\n        200:\n          description: group list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/policies:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n        - in: query\n          name: effective\n          schema:\n            type: boolean\n            default: false\n          description: will return all distinct policies attached to the user or any of its groups\n      operationId: listUserPolicies\n      summary: list user policies\n      responses:\n        200:\n          description: policy list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/users/{userId}/policies/{policyId}:\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - auth\n      operationId: attachPolicyToUser\n      summary: attach policy to user\n      responses:\n        201:\n          description: policy attached successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n    delete:\n      tags:\n        - auth\n      operationId: detachPolicyFromUser\n      summary: detach policy from user\n      responses:\n        204:\n          description: policy detached successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups/{groupId}/policies:\n    parameters:\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - auth\n      parameters:\n        - $ref: \"#/components/parameters/PaginationPrefix\"\n        - $ref: \"#/components/parameters/PaginationAfter\"\n        - $ref: \"#/components/parameters/PaginationAmount\"\n      operationId: listGroupPolicies\n      summary: list group policies\n      responses:\n        200:\n          description: policy list\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyList\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/groups/{groupId}/policies/{policyId}:\n    parameters:\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: policyId\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - auth\n      operationId: attachPolicyToGroup\n      summary: attach policy to group\n      responses:\n        201:\n          description: policy attached successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n    delete:\n      tags:\n        - auth\n      operationId: detachPolicyFromGroup\n      summary: detach policy from group\n      responses:\n        204:\n          description: policy detached successfully\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /auth/tokenid/claim:\n    post:\n      tags:\n        - auth\n      operationId: claimTokenId\n      summary: claim a token ID, returns validation error if already claimed\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ClaimTokenId\"\n      responses:\n        201:\n          description: token id claimed\n        400:\n          description: validation error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/ServerError\"\n\n  /healthcheck:\n    get:\n      operationId: healthCheck\n      security: [ ]\n      tags:\n        - healthCheck\n      description: check that the API server is up and running\n      responses:\n        204:\n          description: NoContent\n",
			"canonicalURL": "/github.com/treeverse/lakeFS@fddcc835593baac5bbc10e4bec1722d7e7784513/-/blob/api/authorization.yml",
			"externalURLs": [
				{
					"url": "https://github.com/treeverse/lakeFS/blob/fddcc835593baac5bbc10e4bec1722d7e7784513/api/authorization.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}