{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MEF-GIT/MEF-LSO-Sonata-SDK"
		},
		"file": {
			"name": "productOfferingQualificationManagement.api.yaml",
			"size": 0,
			"path": "generated/staticBinding/ip/productOfferingQualificationManagement.api.yaml",
			"byteSize": 115681,
			"content": "openapi: 3.0.1\ninfo:\n  description: \"**This file forms part of MEF 87**\\n \\nThis API implements Business\\\n    \\ Requirements described in MEF 79\\n\\nThe Product Offering Qualification (POQ)\\\n    \\ Management API allows a Buyer to\\ncheck whether the Seller can deliver a product\\\n    \\ or set of products from\\namong their product offerings at the geographic address\\\n    \\ or a service site\\nspecified by the Buyer; or modify a previously purchased\\\n    \\ product.\\n\\nThe following use cases are managed:\\n- Create Product Offering\\\n    \\ Qualification\\n- Retrieve POQ List\\n- Retrieve POQ by Identifier\\n- Register\\\n    \\ for POQ Notifications (note: Send POQ Notification is supported by productOfferingQualificationNotification.api.yaml)\\n\\\n    \\nCopyright 2021 MEF Forum and its contributors\\n\\nThis file includes content\\\n    \\ based on the TM Forum Product Offering\\nQualification API (TMF679 v4.0.0) available\\\n    \\ at\\nhttps://github.com/tmforum-apis/TMF679_ProductOfferingQualification, which\\n\\\n    is licensed by the TM Forum under the Apache License version 2.0. Such\\ncontent\\\n    \\ has been modified by the MEF Forum and its contributors.\\n\"\n  title: Product Offering Qualification Management\n  version: 7.0.1\nservers:\n- url: \"https://{serverBase}/mefApi/sonata/productOfferingQualification/v7/\"\n  variables:\n    serverBase:\n      default: mef.net\n      description: The base of Seller's URL.\ntags:\n- description: Operations for managing the Product Offering Qualification request.\n  name: productOfferingQualification\n- description: Operations for managing the subscription for events notification.\n  name: events subscription\npaths:\n  /hub:\n    post:\n      description: \"A request initiated by the Buyer to instruct the Seller to send\\\n        \\ notifications of POQ create, POQ and/or POQ Item state changes if the Buyer\\\n        \\ has registered for these notifications. The state change notifications are\\\n        \\ sent only in the Deferred response scenario as in the Immediate response\\\n        \\ scenario once the response to POQ Request is provided (create notification),\\\n        \\ there  will be no further state changes.  Reference: MEF 79 (section 8.4.2).\"\n      operationId: registerListener\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity  represents more than one Seller.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/EventSubscriptionInput'\n        description: Data containing the callback endpoint to which to deliver the\n          information.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/EventSubscription'\n          description: Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Allows a Buyer to register to receive POQ state change notifications\n      tags:\n      - events subscription\n      x-codegen-request-body-name: data\n  /hub/{id}:\n    delete:\n      description: \"This operation is used to delete an event subscription. \\nReference:\\\n        \\ MEF 79 (Sn 8.3)\\n\"\n      operationId: unregisterListener\n      parameters:\n      - description: Identifier of the EventSubscription\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"204\":\n          description: No Content. (https://tools.ietf.org/html/rfc7231#section-6.3.5)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n        \"501\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error501'\n          description: Method not implemented. Used in case Seller is not supporting\n            Notification mechanism\n      summary: Unregister a listener\n      tags:\n      - events subscription\n  /productOfferingQualification:\n    get:\n      description: \"The Buyer requests a list of POQs from the Seller based on a set\\\n        \\ of POQ filter criteria (as described in MEF79). For each POQ returned, the\\\n        \\ Seller also provides a POQ Identifier that uniquely identifies this POQ\\\n        \\ within the Seller's system. The order of the elements returned to the Buyer\\\n        \\ is defined by the Seller (e.g. natural order) and does not change between\\\n        \\ the pages. If criteria for attribute X are provided, all returned items\\\n        \\ must match it.\"\n      operationId: listProductOfferingQualification\n      parameters:\n      - description: State of the POQ to be retrieved. See `MEFPOQTaskStateType` definition\n          for details\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          enum:\n          - acknowledged\n          - terminatedWithError\n          - inProgress\n          - done.unableToProvide\n          - done.ready\n          type: string\n        style: form\n      - description: ID given by the consumer and only understandable by him (to facilitate\n          his searches afterward)\n        explode: true\n        in: query\n        name: externalId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identifier of Buyer project associated with POQ\n        explode: true\n        in: query\n        name: projectId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: POQ expected response date is on or after this date\n        explode: true\n        in: query\n        name: requestedPOQCompletionDate.gt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: POQ expected response date is on or before this date\n        explode: true\n        in: query\n        name: requestedPOQCompletionDate.lt\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: The unique identifier of the organization that is acting as the\n          Buyer\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The unique identifier of the organization that is acting as the\n          Seller\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Requested index for the start of POQ to be provided in response\n          requested by the client. Note that the index starts with \"0\".\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - description: Requested number of POQ to be provided in response requested\n          by client\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ProductOfferingQualification_Find'\n                type: array\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n          headers:\n            X-Pagination-Throttled:\n              description: |\n                Used to indicate that result page was throttled to maximum possible size  and there are additional results that can be fetched\n              explode: false\n              schema:\n                type: boolean\n              style: simple\n            X-Total-Count:\n              description: |\n                The total number of matching POQ. E.g. if there are 50 matching items in total, but the request has offset=10 and limit=10, then the X-Total-Count is 50.\n              explode: false\n              schema:\n                type: integer\n              style: simple\n            X-Result-Count:\n              description: The number of POQ included in the response\n              explode: false\n              schema:\n                type: integer\n              style: simple\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieve a list of ProductOfferingQualifications based on a set of\n        criteria\n      tags:\n      - productOfferingQualification\n    post:\n      description: \"A request initiated by the Buyer to determine whether the Seller\\\n        \\ is able to deliver a product or set of products from among their product\\\n        \\ offerings, at the Buyer's location(s); or modify a previously purchased\\\n        \\ product. The Seller also provides estimated time intervals to complete these\\\n        \\ deliveries. Reference: MEF 79 (Sn 8.4).\"\n      operationId: createProductOfferingQualification\n      parameters:\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json;charset=utf-8:\n            schema:\n              $ref: '#/components/schemas/ProductOfferingQualification_Create'\n        description: POQ content provided by the Buyer. See definition's description\n          for details.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description: Created. (https://tools.ietf.org/html/rfc7231#section-6.3.2)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"422\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Error422'\n                type: array\n          description: Unprocessable entity due to business validation problems\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Send a request to perform product offering qualification\n      tags:\n      - productOfferingQualification\n      x-codegen-request-body-name: productOfferingQualification\n  /productOfferingQualification/{id}:\n    get:\n      description: The Buyer requests the full details of a single Product Offering\n        Qualification based on a POQ identifier returned from  the POQ create (`createProductOfferingQualification`)\n        or POQ find (`listProductOfferingQualification`)\n      operationId: retrieveProductOfferingQualification\n      parameters:\n      - description: POQ identifier (matches `ProductOfferingQualification.id`)\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          The unique identifier of the organization that is acting as the a Buyer. MUST be specified in the request only when the requester represents more than one Buyer.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: buyerId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          The unique identifier of the organization that is acting as the Seller. MUST be specified in the request only when the responding entity represents more than one Seller.\n          Reference: MEF 79 (Sn 8.8)\n        explode: true\n        in: query\n        name: sellerId\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ProductOfferingQualification'\n          description: OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)\n        \"400\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error400'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error401'\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error403'\n          description: Forbidden\n        \"404\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error404'\n          description: Not Found\n        \"500\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/Error500'\n          description: Internal Server Error\n      summary: Retrieves a ProductOfferingQualification by ID\n      tags:\n      - productOfferingQualification\ncomponents:\n  schemas:\n    Addressing:\n      properties:\n        state:\n          $ref: '#/components/schemas/State'\n      type: object\n    AlternateProductOfferingProposal:\n      description: |\n        If in the request the Buyer has requested to have alternate product proposals, then this class represents a single proposal. All properties are assigned by the Seller.\n        Reference: MEF 79 (Sn 8.4.3.2)\n      properties:\n        installationInterval:\n          $ref: '#/components/schemas/Duration'\n        id:\n          description: |\n            Identifier of the Product Offering Qualification alternate proposal. Assigned by the Seller.\n          type: string\n        alternateProduct:\n          $ref: '#/components/schemas/MEFAlternateProduct'\n      required:\n      - alternateProduct\n      - id\n      - installationInterval\n      type: object\n    Bandwidth:\n      properties:\n        bwRate:\n          $ref: '#/components/schemas/BwRate'\n        value:\n          type: integer\n      type: object\n    BasicIaIpvc:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - description: The Basic Internet Access IPVC is a MEF 69.1 defined version\n          of MEF 61.1 IPVC. Reference MEF 69.1 Section 9.1 Internet Access IPVC Requirements.\n        properties:\n          maximumNumberOfIpv4Routes:\n            description: Maximum number of IPv4 routes supported by the service as\n              a whole. Absence of this attribute corresponds to a value of \"Unlimited\".\n              Reference MEF 61.1 Section 10.5 IPVC Maximum Number of IPv4 Routes Service\n              Attribute.\n            items:\n              type: integer\n            maxItems: 1\n            minItems: 0\n            type: array\n          cloud:\n            $ref: '#/components/schemas/IpvcCloud'\n          pathMtuDiscovery:\n            $ref: '#/components/schemas/EnabledDisabled'\n          ipvcIdentifier:\n            description: Unique identifier for the IPVC for management purposes. Reference\n              MEF 61.1 Section 13.1 UNI Access Link Identifier Service Attribute.\n            type: string\n          reservedPrefixes:\n            $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n          classOfServiceName:\n            description: The list of CoS Names supported by the IPVC. Reference MEF\n              61.1 Section 10.8 IPVC List of Class of Service Names Service Attribute.\n            type: string\n          basicIaIpvcEndPoint:\n            description: Pointer to BasicIaIvcEndPoint.\n            items:\n              $ref: '#/components/schemas/basicIaIpvcEndPoint'\n            minItems: 1\n            type: array\n          maximumNumberOfIpv6Routes:\n            description: Maximum number of IPv6 routes supported by the service as\n              a whole. Absence of this attribute corresponds to a value of \"Unlimited\".\n              Reference MEF 61.1 Section 10.6 IPVC Maximum Number of IPv6 Routes Service\n              Attribute.\n            items:\n              type: integer\n            maxItems: 1\n            minItems: 0\n            type: array\n          maximumTransferUnit:\n            description: Indicates the maximum size (in octets) of an IP packet that\n              can traverse the IPVC without fragmentation.  Reference MEF 61.1 Section\n              10.10 IPVC MTU Service Attribute.\n            type: integer\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all\n    BasicIaIpvcEndPoint:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - description: The Basic Internet Access IPVC End Point is a MEF 69.1 defined\n          version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2 Internet\n          Access IPVC End Point Requirements.\n        properties:\n          maximumNumberOfIpv4Routes:\n            description: Maximum number of IPv4 routes supported by this IPVC End\n              Point. Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4\n              Routes Service Attribute. Absence of this attribute corresponds to a\n              value of �Unlimited�.\n            items:\n              type: integer\n            maxItems: 1\n            minItems: 0\n            type: array\n          identifier:\n            description: A unique identifier for the IPVC End Point for management\n              purposes. Reference MEF 61.1 Section 11.1 IPVC EP Identifier Service\n              Attribute.\n            type: string\n          basicIaIpvc:\n            $ref: '#/components/schemas/basicIaIpvcRef'\n          basicIaUni:\n            $ref: '#/components/schemas/basicIaUniRef'\n          egressClassOfServiceMap:\n            $ref: '#/components/schemas/EgressClassOfServiceMap'\n          maximumNumberOfIpv6Routes:\n            description: Maximum number of IPv6 routes supported by this IPVC End\n              Point. Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6\n              Routes Service Attribute. Absence of this attribute corresponds to a\n              value of �Unlimited�.\n            items:\n              type: integer\n            maxItems: 1\n            minItems: 0\n            type: array\n          ingressClassOfServiceMap:\n            $ref: '#/components/schemas/IngressClassOfServiceMap'\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:basicIaIpvcEndPoint:v0.1.0:all\n    BasicIaUni:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - description: The Basic Internet Access UNI is a MEF 69.1 defined version of\n          MEF 61.1 UNI. Reference MEF 69.x Section 8.3 Internet Access UNI Requirements.\n        properties:\n          identifier:\n            description: Unique identifier for the Basic Internet Access UNI for management\n              purposes. Reference MEF 61.1 Section 13.1 UNI Access Link Identifier\n              Service Attribute.\n            type: string\n          basicIaUniAccessLink:\n            $ref: '#/components/schemas/basicIaUniAccessLink'\n          basicIaIpvcEndPoint:\n            items:\n              $ref: '#/components/schemas/basicIaIpvcEndPointRef'\n            minItems: 0\n            type: array\n          egressBandwidthProfileEnvelope:\n            $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n          listOfControlProtocols:\n            $ref: '#/components/schemas/ControlProtocols'\n          routingProtocols:\n            $ref: '#/components/schemas/RoutingProtocols'\n          managementType:\n            $ref: '#/components/schemas/UniManagementType'\n          ingressBandwidthProfileEnvelope:\n            $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n        required:\n        - identifier\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:basicIaUni:v0.1.0:all\n    BasicIaUniAccessLink:\n      allOf:\n      - $ref: '#/components/schemas/MEFProductConfiguration'\n      - description: The Basic Internet Access UNI Access Link is a MEF 69.1 defined\n          version of MEF 61.1 UNI Access Link. Reference MEF 69.1 Section 9.4 Internet\n          Access UNI Access Link Requirements.\n        properties:\n          identifier:\n            description: Unique identifier for the UNI Access Link for management\n              purposes. Reference MEF 61.1 Section 13.1 UNI Access Link Identifier\n              Service Attribute.\n            type: string\n          l2Technology:\n            $ref: '#/components/schemas/L2Technology'\n          ipv4ConnectionAddressing:\n            $ref: '#/components/schemas/UniIpv4ConnectionAddressing'\n          ipv6ConnectionAddressing:\n            $ref: '#/components/schemas/UniIpv6ConnectionAddressing'\n          prefixDelegation:\n            $ref: '#/components/schemas/EnabledDisabled'\n          basicIaUni:\n            $ref: '#/components/schemas/basicIaUni'\n          mtu:\n            description: \"Maximum size, in octets of an IP Packet that can traverse\\\n              \\ the UNI Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link\\\n              \\ IP MTU Service Attribute.\"\n            type: integer\n        required:\n        - identifier\n        type: object\n      x-discriminator-value: urn:mef:lso:spec:cantata-sonata:basicIaUniAccessLink:v0.1.0:all\n    Bgp:\n      description: \"When an entry in the UNI Routing Protocol is for BGP, BGP as specified\\\n        \\ in RFC 4271 is used across the UNI to exchange information. Reference MEF\\\n        \\ 61.1 Section 12.7.3 BGP.\"\n      properties:\n        subscriberAsNumber:\n          description: BGP Subscriber Autonomous System number.\n          type: integer\n        peerAsNumber:\n          description: BGP Peer Automous System number.\n          type: integer\n        connectionAddressFamily:\n          $ref: '#/components/schemas/ConnectionAddressFamily'\n        ipPrefixes:\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        damping:\n          description: \"Route flap damping. When the Damping parameter is NONE, the\\\n            \\ attribute is not set. When not NONE a single set of parameters described\\\n            \\ in Section 4.3 of RFC 2430 MUST be agreed.\"\n          items:\n            $ref: '#/components/schemas/Damping'\n          maxItems: 1\n          minItems: 0\n          type: array\n        administrativeDistance:\n          type: integer\n        asOverride:\n          $ref: '#/components/schemas/EnabledDisabled'\n        peeringAddresses:\n          $ref: '#/components/schemas/PeeringAddresses'\n        holdTime:\n          type: integer\n        authentication:\n          $ref: '#/components/schemas/BgpAuthentication'\n      type: object\n    BgpAuthentication:\n      properties:\n        state:\n          $ref: '#/components/schemas/BgpAuthenticationState'\n      type: object\n    BgpAuthenticationState:\n      enum:\n      - NONE\n      - MD5_PASSWORD\n      type: string\n    BurstBehavior:\n      enum:\n      - OPTIMIZE_DELAY\n      - OPTIMIZE_THROUGHPUT\n      type: string\n    BwRate:\n      properties:\n        state:\n          $ref: '#/components/schemas/BwRateState'\n      type: object\n    BwRateState:\n      enum:\n      - KBPS\n      - MBPS\n      - GBPS\n      type: string\n    ClassOfServiceMapEntry:\n      description: \"Values for the Cloud Ingress Class of Service Map. Reference MEF\\\n        \\ 61.1 Table 11 - Values for the Cloud Ingress Class of Service Map, 11.0\\\n        \\ IPVC EP Ingress Class of Service Map Service Attribute.\"\n      properties:\n        ethernetPcp:\n          description: Ethernet PCP value\n          items:\n            maximum: 7\n            minimum: 0\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        ipds:\n          description: DSCP value\n          items:\n            maximum: 63\n            minimum: 0\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        sourceIpAddress:\n          description: Source IP Address\n          items:\n            $ref: '#/components/schemas/Ipv4Prefix'\n          maxItems: 1\n          minItems: 0\n          type: array\n        sourceL4Port:\n          description: Source Layer 4 Port\n          items:\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        destinationL4Port:\n          description: Destination Layer 4 Port\n          items:\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        l4protocol:\n          description: Layer 4 Protocol\n          items:\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        cosName:\n          description: Class of Service name\n          type: string\n        destinationIpAddress:\n          description: Destination IP Address\n          items:\n            $ref: '#/components/schemas/Ipv4Prefix'\n          maxItems: 1\n          minItems: 0\n          type: array\n      type: object\n    ConnectionAddressFamily:\n      description: Specifies whether the session is established over IPv4 or IPv6\n        or whether two separate session are established using IPv4 and IPv6.\n      properties:\n        state:\n          $ref: '#/components/schemas/ConnectionAddressFamilyState'\n      type: object\n    ConnectionAddressFamilyState:\n      enum:\n      - IPV4\n      - IPv6\n      - BOTH\n      type: string\n    ControlProtocols:\n      description: \"Data type representing Control Protocols. Each entry consists\\\n        \\ of a 3-tuple containing the protocol name, addressing information (either\\\n        \\ SP/Operator Addresses or Any) and one or more references. Reference MEF\\\n        \\ 61.1 Section 12.6 UNI List of Control Protocols Service Attribute\"\n      properties:\n        reference:\n          items:\n            type: string\n          minItems: 1\n          type: array\n        addressing:\n          items:\n            $ref: '#/components/schemas/Addressing'\n          maxItems: 1\n          minItems: 0\n          type: array\n        protocolName:\n          type: string\n      type: object\n    Damping:\n      description: \"Damping parameters as defined in RFC 2439 BGP Route Flap Damping,\\\n        \\ Section 4.2\"\n      properties:\n        decayHalfLifeWhileReachable:\n          description: This value is the time duration in seconds during which the\n            accumulated stability figure of merit will be reduced by half if the route\n            if considered reachable (whether suppressed or not).\n          type: integer\n        reuseListMemoryReuseListMax:\n          description: This is the time (in seconds) value corresponding to the last\n            reuse list. This may be the maximum value of T-hold for all parameter\n            sets of may be configured.\n          type: integer\n        maxHoldDownTime:\n          description: This value is the maximum time a route can be suppressed no\n            matter how unstable it has been prior to this period of stability. In\n            seconds.\n          type: integer\n        timeGranularity:\n          description: This is the time granularity in seconds used to perform all\n            decay computations.\n          type: integer\n        reuseListTimeGranularity:\n          description: This is the time (in seconds) interval between evaluations\n            of the reuse lists.  Each reuse lists corresponds to an additional time\n            increment.\n          type: integer\n        decayHalfLifeWhileUnReachable:\n          description: \"This value is the time duration in seconds during which the\\\n            \\ accumulated stability figure of merit will be reduced by half if the\\\n            \\ route if considered unreachable.  If not specified or set to zero, no\\\n            \\ decay will occur while a route remains unreachable.\"\n          type: integer\n        decayMemoryLimit:\n          description: \"This is the maximum time (in seconds) that any memory of previous\\\n            \\ instability will be retained given that the route's state remains unchanged,\\\n            \\ whether reachable or unreachable.  This parameter is generally used\\\n            \\ to determine array sizes.\"\n          type: integer\n        reuseThreshold:\n          description: This value is expressed as a number of route withdrawals.  It\n            is the value below which a suppressed route will now be used again.\n          type: integer\n        cutoffThreshold:\n          description: This value is expressed as a number of route withdrawals.  It\n            is the value above which a route advertisement will be suppressed.\n          type: integer\n        numberOfReuseLists:\n          description: This is the number of reuse lists.  It may be determined from\n            reuse-list-max or set explicitly.\n          type: integer\n      type: object\n    DscpMapping:\n      description: IP DSCP mapping of CoS name to DSCP value\n      properties:\n        ipds:\n          description: DSCP value\n          maximum: 63\n          minimum: 0\n          type: integer\n        cosName:\n          description: Class of Service name\n          type: string\n      type: object\n    Duration:\n      description: \"A Duration in a given unit of time e.g. 3 hours, or 5 days.\"\n      properties:\n        amount:\n          description: \"Duration (number of seconds, minutes, hours, etc.)\"\n          type: integer\n        units:\n          $ref: '#/components/schemas/TimeUnit'\n      required:\n      - amount\n      - units\n      type: object\n    EgressClassOfServiceMap:\n      description: \"Pair of values (D,P). D specifies how to set the DS field in Egress\\\n        \\ IP Data Packets based on CoS Name.It is either None,  or a mapping from\\\n        \\ CoS Names to DSCP values. P specifies how to set the PCP fielin VLAN Tagged\\\n        \\ Ethernet Frames containing Egress IP Data Packets based on CoS Name. It\\\n        \\ is eitherNone, or a mapping from CoS Names to PCP values. Reference MEF\\\n        \\ 61.1 Section 11.10 IPVC EP  Egress Class of Service Map Service Attribute.\"\n      properties:\n        dscpMapping:\n          items:\n            $ref: '#/components/schemas/DscpMapping'\n          minItems: 0\n          type: array\n        pcpMapping:\n          items:\n            $ref: '#/components/schemas/PcpMapping'\n          minItems: 0\n          type: array\n        defaultCosName:\n          type: string\n      type: object\n    EnabledDisabled:\n      description: Enumeration to indicate Enabled/Disabled state of an attribute\n      enum:\n      - ENABLED\n      - DISABLED\n      type: string\n    EndPointIdentifierAndCosName:\n      description: Data type representing IPVC End Point Identifier and CoS name use\n        for Bandwidth Profiles.\n      properties:\n        ipvcEndPointIdentifier:\n          type: string\n        cosName:\n          type: string\n      type: object\n    Error:\n      description: |\n        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.\n      properties:\n        reason:\n          description: Text that explains the reason for the error. This can be shown\n            to a client user.\n          maxLength: 255\n          type: string\n        message:\n          description: Text that provides mode details and corrective actions related\n            to the error. This can be shown to a client user.\n          type: string\n        referenceError:\n          description: URL pointing to documentation describing the error\n          format: uri\n          type: string\n      required:\n      - reason\n      type: object\n    Error400:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error400Code'\n        required:\n        - code\n        type: object\n      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)\n    Error400Code:\n      description: |-\n        One of the following error codes:\n        - missingQueryParameter: The URI is missing a required query-string parameter\n        - missingQueryValue: The URI is missing a required query-string parameter value\n        - invalidQuery: The query section of the URI is invalid.\n        - invalidBody: The request has an invalid body\n      enum:\n      - missingQueryParameter\n      - missingQueryValue\n      - invalidQuery\n      - invalidBody\n      type: string\n    Error401:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error401Code'\n        required:\n        - code\n        type: object\n      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)\n    Error401Code:\n      description: |-\n        One of the following error codes:\n        - missingCredentials: No credentials provided.\n        - invalidCredentials: Provided credentials are invalid or expired\n      enum:\n      - missingCredentials\n      - invalidCredentials\n      type: string\n    Error403:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error403Code'\n        required:\n        - code\n        type: object\n      description: Forbidden. This code indicates that the server understood the request\n        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)\n    Error403Code:\n      description: |-\n        This code indicates that the server understood\n        the request but refuses to authorize it because\n        of one of the following error codes:\n        - accessDenied: Access denied\n        - forbiddenRequester: Forbidden requester\n        - tooManyUsers: Too many users\n      enum:\n      - accessDenied\n      - forbiddenRequester\n      - tooManyUsers\n      type: string\n    Error404:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - notFound: A current representation for the target resource not found\n            enum:\n            - notFound\n            type: string\n        required:\n        - code\n        type: object\n      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)\n    Error422:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            $ref: '#/components/schemas/Error422Code'\n          propertyPath:\n            description: |\n              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n            type: string\n        required:\n        - code\n        type: object\n      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)\n    Error422Code:\n      description: |\n        One of the following error codes:\n          - missingProperty: The property the Seller has expected is not present in the payload\n          - invalidValue: The property has an incorrect value\n          - invalidFormat: The property value does not comply with the expected value format\n          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system\n          - unexpectedProperty: Additional property, not expected by the Seller has been provided\n          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.\n          - otherIssue: Other problem was identified (detailed information provided in a reason)\n      enum:\n      - missingProperty\n      - invalidValue\n      - invalidFormat\n      - referenceNotFound\n      - unexpectedProperty\n      - tooManyRecords\n      - otherIssue\n      type: string\n    Error500:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code:\n              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.\n            enum:\n            - internalError\n            type: string\n        required:\n        - code\n        type: object\n      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)\n    Error501:\n      allOf:\n      - $ref: '#/components/schemas/Error'\n      - properties:\n          code:\n            description: |-\n              The following error code::\n              - notImplemented: Method not supported by the server\n            enum:\n            - notImplemented\n            type: string\n        required:\n        - code\n        type: object\n      description: Not Implemented. (https://tools.ietf.org/html/rfc7231#section-6.6.2)\n    EventSubscription:\n      description: |\n        This resource is used to manage notification subscription.\n        Reference: MEF 79 (Sn 8.3)\n      properties:\n        query:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n          type: string\n        callback:\n          description: The value provided by the Buyer in `EventSubscriptionInput`\n            during notification registration\n          type: string\n        id:\n          description: An identifier of this Event Subscription assigned by the Seller\n            when a resource is created.\n          type: string\n      required:\n      - callback\n      - id\n      type: object\n    EventSubscriptionInput:\n      description: This class is used to register for Notifications.\n      properties:\n        query:\n          description: \"This attribute is used to define to which type of events to\\\n            \\ register to. Example: \\\"query\\\":\\\"eventType = poqCreateEvent\\\". To subscribe\\\n            \\ for more than one event type, put the values separated by comma: `eventType=poqCreateEvent,poqStateChangeEvent`.\\\n            \\ The possible values are enumerated by the 'POQEventType' in productOfferingQualificationNotification.api.yaml.\\\n            \\ An empty query is treated as specifying no filters - ending in  subscription\\\n            \\ for all event types.\"\n          type: string\n        callback:\n          description: \"This callback value must be set to *host* property from Buyer\\\n            \\ ProductOfferingQualification Notification API (productOfferingQualificationNotification.api.yaml).\\\n            \\ This property is appended with the base path and notification resource\\\n            \\ path specified in that API to construct an URL to which notification\\\n            \\ is sent. E.g. for \\\"callback\\\": \\\"https://buyer.co/listenerEndpoint\\\"\\\n            , the create event notification will be sent to: `https://buyer.co/listenerEndpoint/mefApi/sonata/productOfferingQualificationNotification/v7/listener/poqCreateEvent`\"\n          type: string\n      required:\n      - callback\n      type: object\n    FieldTypes:\n      properties:\n        state:\n          $ref: '#/components/schemas/FieldTypesState'\n      type: object\n    FieldTypesState:\n      enum:\n      - SOURCE_IP_ADDRESS\n      - DESTINATION_IP_ADDRESS\n      - L4_PROTOCOL\n      - SOURCE_L4_PORT\n      - DESTINATION_L4_PORT\n      - ETHERNET_PCP\n      - IP_DS\n      type: string\n    FieldedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          streetType:\n            description: \"The type of street (e.g., alley, avenue, boulevard, brae,\\\n              \\ crescent, drive, highway, lane, terrace, parade, place, tarn, way,\\\n              \\ wharf)\"\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in a US urban property address\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          streetNr:\n            description: \"Number identifying a specific property on a public street.\\\n              \\ It may be combined with streetNrLast for ranged addresses. MEF 79\\\n              \\ defines it as required for the Seller response, however in certain\\\n              \\ countries it is not used, so it's optional in API.\"\n            type: string\n          locality:\n            description: The locality that the address is in\n            type: string\n          postcode:\n            description: \"A descriptor for a postal delivery area, used to speed and\\\n              \\ simplify the delivery of mail (also known as zip code) MEF 79 defines\\\n              \\ it as required however as in certain countries it is not used we make\\\n              \\ it optional in API.\"\n            type: string\n          streetNrLast:\n            description: Last number in a range of street numbers allocated to a property\n            type: string\n          streetNrSuffix:\n            description: The first street number suffix\n            type: string\n          streetName:\n            description: Name of the street or other street type\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          streetNrLastSuffix:\n            description: Last street number suffix for a ranged address\n            type: string\n          geographicSubAddress:\n            $ref: '#/components/schemas/GeographicSubAddress'\n          streetSuffix:\n            description: A modifier denoting a relative direction\n            type: string\n        required:\n        - city\n        - country\n        - streetName\n        type: object\n      description: \"A type of Address that has a discrete field and value for each\\\n        \\ type of boundary or identifier down to the lowest level of detail. For example\\\n        \\ \\\"street number\\\" is one field, \\\"street name\\\" is another field, etc. Reference:\\\n        \\ MEF 79 (Sn 8.9.2)\"\n    FormattedAddress:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          country:\n            description: Country that the address is in\n            type: string\n          postcodeExtension:\n            description: An extension of a postal code. E.g. the part following the\n              dash in a US urban property address\n            type: string\n          stateOrProvince:\n            description: The State or Province that the address is in\n            type: string\n          city:\n            description: The city that the address is in\n            type: string\n          addrLine2:\n            description: The second address line in a formatted address\n            type: string\n          addrLine1:\n            description: The first address line in a formatted address\n            type: string\n          locality:\n            description: \"An area of defined or undefined boundaries within a local\\\n              \\ authority or other legislatively defined area, usually rural or semi-rural\\\n              \\ in nature\"\n            type: string\n          postcode:\n            description: A descriptor for a postal delivery area used to speed and\n              simplify the delivery of mail (also known as ZIP code)\n            type: string\n        required:\n        - addrLine1\n        - city\n        - country\n        type: object\n      description: \"A type of Address that has discrete fields for each type of boundary\\\n        \\ or identifier with the exception of the street and more specific location\\\n        \\ details, which are combined into a maximum of two strings based on local\\\n        \\ postal addressing conventions. Reference: MEF 79 (Sn 8.9.3)\"\n    ForwardingInformation:\n      description: \"Forwarding information, consisting of either a nexthop IP address\\\n        \\ in the Subscriber Network (if the access medium is multipoint capable, e.g.,\\\n        \\ Ethernet), or a specific UNI Access Link (if the access medium is strictly\\\n        \\ point-to-point, e.g., HDLC,  PPP over DSL).\"\n      properties:\n        nextHopIpAddress:\n          description: Next hop IP address.\n          items:\n            type: string\n          maxItems: 1\n          minItems: 0\n          type: array\n        uniAccessLink:\n          description: UNI Access Link unique identifier.\n          items:\n            maxLength: 53\n            type: string\n          maxItems: 1\n          minItems: 0\n          type: array\n      type: object\n    GeographicAddressLabel:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          externalReferenceId:\n            description: The unique reference to an Address as provided by the Administrative\n              Authority.\n            type: string\n          externalReferenceType:\n            description: The organization or standard from the organization that administers\n              this Geographic Address Label ensuring it is unique within the Administrative\n              Authority. The value(s) to be used are to be agreed upon during the\n              onboarding. For North American providers this would normally be CLLI\n              (Common Language Location Identifier) code.\n            type: string\n        required:\n        - externalReferenceId\n        - externalReferenceType\n        type: object\n      description: \"A unique identifier controlled by a generally accepted independent\\\n        \\ administrative authority that specifies a fixed geographical location. \\n\\\n        Reference: MEF 79 (Sn 8.9.4)\"\n    GeographicAddressRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced Address. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Address. This identifier\n              is assigned during a successful address validation request (Geographic\n              Address Management API)\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Address resource available through Address Validation API.\n    GeographicSiteRef:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          href:\n            description: |\n              Hyperlink to the referenced Site. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n            type: string\n          id:\n            description: Identifier of the referenced Geographic Site.\n            type: string\n        required:\n        - id\n        type: object\n      description: |\n        A reference to a Geographic Site resource available through Service Site API\n    GeographicSubAddress:\n      description: \"Additional fields used to specify an address, as detailed as possible.\"\n      properties:\n        buildingName:\n          description: |\n            Allows for identification of places that require building name  as part of addressing information\n          type: string\n        subUnit:\n          description: \"Representation of a MEFSubUnit It is used for describing subunit\\\n            \\ within a subAddress e.g. BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT,\\\n            \\ WHARF.\"\n          items:\n            $ref: '#/components/schemas/MEFSubUnit'\n          type: array\n        levelType:\n          description: Describes level types within a building\n          type: string\n        levelNumber:\n          description: \"Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT\\\n            \\ 2\"\n          type: string\n        privateStreetNumber:\n          description: Private streets numbers internal to a private street\n          type: string\n        privateStreetName:\n          description: Private streets internal to a property (e.g. a university)\n            may have internal names that are not recorded by the land title office\n          type: string\n      type: object\n    IngressClassOfServiceMap:\n      properties:\n        defaultCosName:\n          description: Default Class of Service Name. Reference MEF 61.1 Section 10.13.2\n            Cloud Ingress Class of Service Map and Section 11.9 IPVC EP Ingress Class\n            of Service Map Service Attribute.\n          type: string\n        fieldTypes:\n          items:\n            $ref: '#/components/schemas/FieldTypes'\n          minItems: 1\n          type: array\n        ingressClassOfServiceMap:\n          description: \"Values for the Cloud Ingress Class of Service Map. Reference\\\n            \\ MEF 61.1 Table 11 - Values for the Cloud Ingress Class of Service Map,\\\n            \\ 11.0 IPVC EP Ingress Class of Service Map Service Attribute.\"\n          items:\n            $ref: '#/components/schemas/ClassOfServiceMapEntry'\n          minItems: 0\n          type: array\n      type: object\n    IpBwpEnvelope:\n      description: \"A BWP Envelope is a list of Bandwidth Profile Flows, plus additional\\\n        \\ parameters for the BWP as a whole. A BWP Envelope is a set of one or more\\\n        \\ BWP Flows that are associated such that the amount of traffic for one flow\\\n        \\ can affect the amount that is permitted for another flow. Reference MEF\\\n        \\ 61.1 Section 17.3 Bandwidth Profile Envelopes.\"\n      properties:\n        tE:\n          description: The Envelope IR Time in milliseconds. This is the time period\n            over which average Information Rates are calculated and thus it limits\n            the size of a burst. Reference MEF 61.1 Section 17.3 Bandwidth Profile\n            Envelopes.\n          type: integer\n        maxIrE:\n          $ref: '#/components/schemas/Bandwidth'\n      type: object\n    IpBwpFlow:\n      description: A Bandwidth Profile Flow is a stream of IP Packets meeting certain\n        criteria. The criteria than can be used depends on which BWP Envelope the\n        BWP Flow is a part of. Reference MEF 61.1 Section 17.2 Bandwidth Profile Flows.\n      properties:\n        maxir:\n          $ref: '#/components/schemas/Bandwidth'\n        flowIdentifier:\n          type: integer\n        burstBehavior:\n          $ref: '#/components/schemas/BurstBehavior'\n        cir:\n          $ref: '#/components/schemas/Bandwidth'\n      type: object\n    IpUniEgressBwpAccessLink:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: All Ingress IP Data Packets at the UNI that are received over\n          one of a give set of UNI Access Links. Reference MEF 61.1 Section 12.5 UNI\n          Egress BWP Envelope.\n        properties:\n          uniAccessLinkIdentifier:\n            description: UNI Access Link Identifier.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniEgressBwpEnvelope:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: \"A single Bandwidth Profile Envelope consisting of parameters\\\n          \\ and Bandwidth Profile  Flow specifications. If specified, the BWP Envelope\\\n          \\ is used for an egress Bandwidth Profile. The BWP Flows can be defined\\\n          \\ per UNI, per IPVC EP, per UNI Access Link, per CosName, etc. Reference\\\n          \\ MEF 61.1 Section 12.5 UNI Egress Bandwidth Profile Envelope Service Attribute.\"\n        properties:\n          ipUniEgressBwpUni:\n            description: All Egress IP Data Packets at the UNI. Reference MEF 61.1\n              Section 12.5 UNI Egress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniEgressBwpUni'\n            maxItems: 1\n            minItems: 0\n            type: array\n          ipUniEgressBwpIpvcEpCos:\n            description: \"All Egress IP Data Packets at the UNI that are mapped to\\\n              \\ any of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\\\n              \\ Section 12.5 UNI Egress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCos'\n            minItems: 0\n            type: array\n          ipUniEgressBwpAccessLink:\n            description: \"All Egress IP Data Packets at the UNI that are mapped to\\\n              \\ any of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\\\n              \\ Section 12.5 UNI Egress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniEgressBwpAccessLink'\n            minItems: 0\n            type: array\n          ipUniEgressBwpIpvcEpCosAccessLink:\n            description: \"All Egress IP Data Packets at the UNI that are received\\\n              \\ over one of a given set of UNI Access Links, and that are mapped to\\\n              \\ the any of a given set of (IPVC EP, Cos Name) pairs. Reference MEF\\\n              \\ 61.1 Section 12.5 UNI Egress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniEgressBwpIpvcEpCosAccessLink'\n            minItems: 0\n            type: array\n          ipUniEgressBwpIpvcEp:\n            description: All Egress IP Data Packets at the UNI that are mapped to\n              any of a given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI\n              Egress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniEgressBwpIpvcEp'\n            minItems: 0\n            type: array\n          ipUniEgressBwpIpvcEpAccessLink:\n            description: All Egress IP Data Packets at the UNI that are received over\n              one of a give set of UNI Access Links. Reference MEF 61.1 Section 12.5\n              UNI Egress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniEgressIpvcBwpIpvcEpAccessLink'\n            minItems: 0\n            type: array\n        type: object\n    IpUniEgressBwpIpvcEp:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpFlow'\n      - description: All Ingress IP Data Packets at the UNI that are mapped to any\n          of a given set of IPVC EPs. Reference MEF 61.1 Section 12.5 UNI Egress BWP\n          Envelope.\n        properties:\n          ipvcEndPointIdentifier:\n            description: IPVC End Point Identifier for an IPVC End Point located at\n              the UNI.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniEgressBwpIpvcEpCos:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: \"All Ingress IP Data Packets at the UNI that are mapped to any\\\n          \\ of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section\\\n          \\ 12.5 UNI Egress BWP Envelope.\"\n        properties:\n          ipvcEpIdCosName:\n            description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table\n              28.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniEgressBwpIpvcEpCosAccessLink:\n      description: \"All Ingress IP Data Packets at the UNI that are received over\\\n        \\ one of a given set of UNI Access Links,and that are mapped to the any of\\\n        \\ a given set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4\\\n        \\ UNI Ingress BWP Envelope.\"\n      properties:\n        ipvcEpidCosName:\n          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table\n            28.\n          items:\n            $ref: '#/components/schemas/EndPointIdentifierAndCosName'\n          minItems: 1\n          type: array\n        uniAccessLinkIdentifier:\n          description: UNI Access Link Identifier.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      type: object\n    IpUniEgressBwpUni:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpFlow'\n      description: All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section\n        12.5 UNI Egress BWP Envelope.\n    IpUniEgressIpvcBwpIpvcEpAccessLink:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: All Ingress IP Data Packets at the UNI that are received over\n          one of a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n          Ingress BWP Envelope.\n        properties:\n          ipvcEndPointIdentifier:\n            description: IPVC End Point Identifier\n            items:\n              type: string\n            minItems: 1\n            type: array\n          uniAccessLinkIdentifier:\n            description: UNI Access Link Identifier.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniIngressBwpAccessLink:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: All Ingress IP Data Packets at the UNI that are received over\n          one of a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n          Ingress BWP Envelope.\n        properties:\n          uniAccessLinkIdentifier:\n            description: UNI Access Link Identifier.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniIngressBwpEnvelope:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: \"A single Bandwidth Profile Envelope consisting of parameters\\\n          \\ and Bandwidth Profile  Flow specifications. If specified, the BWP Envelope\\\n          \\ is used for an ingress Bandwidth Profile. The BWP Flows can be defined\\\n          \\ per UNI, per IPVC EP, per UNI Access Link, per CosName, etc. Reference\\\n          \\ MEF 61.1 Section 12.4 UNI Ingress Bandwidth Profile Envelope Service Attribute.\"\n        properties:\n          ipUniIngressBwpUni:\n            description: All Ingress IP Data Packets at the UNI. Reference MEF 61.1\n              Section 12.4 UNI Ingress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniIngressBwpUni'\n            maxItems: 1\n            minItems: 0\n            type: array\n          ipUniIngressBwpIpvcEpCosAccessLink:\n            description: \"All Ingress IP Data Packets at the UNI that are received\\\n              \\ over one of a given set of UNI Access Links, and that are mapped to\\\n              \\ the any of a given set of (IPVC EP, Cos Name) pairs. Reference MEF\\\n              \\ 61.1 Section 12.4 UNI Ingress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCosAccessLink'\n            minItems: 0\n            type: array\n          ipUniIngressBwpIpvcEp:\n            description: All Ingress IP Data Packets at the UNI that are mapped to\n              any of a given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI\n              Ingress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniIngressBwpIpvcEp'\n            minItems: 0\n            type: array\n          ipUniIngressBwpIpvcEpCos:\n            description: \"All Ingress IP Data Packets at the UNI that are mapped to\\\n              \\ any of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\\\n              \\ Section 12.4 UNI Ingress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniIngressBwpIpvcEpCos'\n            minItems: 0\n            type: array\n          ipUniIngressBwpAccessLink:\n            description: \"All Ingress IP Data Packets at the UNI that are mapped to\\\n              \\ any of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1\\\n              \\ Section 12.4 UNI Ingress BWP Envelope.\"\n            items:\n              $ref: '#/components/schemas/IpUniIngressBwpAccessLink'\n            minItems: 0\n            type: array\n          ipUniIngressBwpIpvcEpAccessLink:\n            description: All Ingress IP Data Packets at the UNI that are received\n              over one of a give set of UNI Access Links. Reference MEF 61.1 Section\n              12.4 UNI Ingress BWP Envelope.\n            items:\n              $ref: '#/components/schemas/IpUniIngressIpvcBwpIpvcEpAccessLink'\n            minItems: 0\n            type: array\n        type: object\n    IpUniIngressBwpIpvcEp:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpFlow'\n      - description: All Ingress IP Data Packets at the UNI that are mapped to any\n          of a given set of IPVC EPs. Reference MEF 61.1 Section 12.4 UNI Ingress\n          BWP Envelope.\n        properties:\n          ipvcEndPointIdentifier:\n            description: IPVC End Point Identifier for an IPVC End Point located at\n              the UNI.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniIngressBwpIpvcEpCos:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: \"All Ingress IP Data Packets at the UNI that are mapped to any\\\n          \\ of a given set of (IPVC, EP, CoS Name) pairs. Reference MEF 61.1 Section\\\n          \\ 12.4 UNI Ingress BWP Envelope.\"\n        properties:\n          ipvcEpIdCosName:\n            description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table\n              28.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    IpUniIngressBwpIpvcEpCosAccessLink:\n      description: \"All Ingress IP Data Packets at the UNI that are received over\\\n        \\ one of a given set of UNI Access Links,and that are mapped to the any of\\\n        \\ a given set of (IPVC EP, Cos Name) pairs. Reference MEF 61.1 Section 12.4\\\n        \\ UNI Ingress BWP Envelope.\"\n      properties:\n        ipvcEpidCosName:\n          description: IPVC End Point and CoS Identifier. Reference MEF 61.1 Table\n            28.\n          items:\n            $ref: '#/components/schemas/EndPointIdentifierAndCosName'\n          minItems: 1\n          type: array\n        uniAccessLinkIdentifier:\n          description: UNI Access Link Identifier.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      type: object\n    IpUniIngressBwpUni:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpFlow'\n      description: All Ingress IP Data Packets at the UNI. Reference MEF 61.1 Section\n        12.4 UNI Ingress BWP Envelope.\n    IpUniIngressIpvcBwpIpvcEpAccessLink:\n      allOf:\n      - $ref: '#/components/schemas/IpBwpEnvelope'\n      - description: All Ingress IP Data Packets at the UNI that are received over\n          one of a give set of UNI Access Links. Reference MEF 61.1 Section 12.4 UNI\n          Ingress BWP Envelope.\n        properties:\n          ipvcEndPointIdentifier:\n            description: IPVC End Point Identifier\n            items:\n              type: string\n            minItems: 1\n            type: array\n          uniAccessLinkIdentifier:\n            description: UNI Access Link Identifier.\n            items:\n              type: string\n            minItems: 1\n            type: array\n        type: object\n    Ipv4Ipv6Prefixes:\n      properties:\n        listOfIpv4ReservedPrefixes:\n          description: List of IPv4 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv4Prefix'\n          minItems: 0\n          type: array\n        listOfIpv6ReservedPrefixes:\n          description: List of IPv6 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv6Prefix'\n          minItems: 0\n          type: array\n      type: object\n    Ipv4Prefix:\n      properties:\n        prefixLength:\n          type: integer\n        ipv4Address:\n          type: string\n      type: object\n    Ipv4Subnet:\n      description: Ipv4Subnet is a data type representing an IPv4 subnet logical partition\n        of an IP network. Included is list of Service Provider IPv4 addresses.\n      properties:\n        serviceProviderIpv4Addresses:\n          description: List of Service Provider IPv4 addresses.\n          items:\n            type: string\n          minItems: 1\n          type: array\n        ipv4Prefix:\n          $ref: '#/components/schemas/Ipv4Prefix'\n      type: object\n    Ipv6AddressType:\n      description: \"IPv6 Connection Address mechanism. Possible values are None, DHCP,\\\n        \\ SLAAC, Static or LL-only.\"\n      enum:\n      - DHCP\n      - SLAAC\n      - STATIC\n      - LL_ONLY\n      type: string\n    Ipv6Prefix:\n      properties:\n        prefixLength:\n          type: integer\n        ipv6Address:\n          type: string\n      type: object\n    Ipv6Subnet:\n      description: IPv6Subnet is a data type representing an IPv6 subnet logical partition\n        of an IP network. Included is list of Service Provider IPv6 addresses.\n      properties:\n        serviceProviderIpv6Addresses:\n          description: List of IPv6 Service Provider addresses.\n          items:\n            type: string\n          minItems: 1\n          type: array\n        ipv6Prefix:\n          $ref: '#/components/schemas/Ipv6Prefix'\n      type: object\n    IpvcCloud:\n      properties:\n        listOfIpv4ReservedPrefixes:\n          description: List of IPv4 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv4Prefix'\n          minItems: 0\n          type: array\n        listOfIpv6ReservedPrefixes:\n          description: List of IPv6 prefixes.\n          items:\n            $ref: '#/components/schemas/Ipv6Prefix'\n          minItems: 0\n          type: array\n      type: object\n    L2Technology:\n      properties:\n        state:\n          $ref: '#/components/schemas/L2TechnologyState'\n      type: object\n    L2TechnologyState:\n      enum:\n      - POINT_TO_POINT_ETHERNET_LINK\n      - MULTIPOINT_ETHERNET_OVER_WIFI\n      - VLAN_OVER_ETHERNET_LAG\n      - PHYSICAL_ETHERNET_OVER_VRRP\n      - PPP\n      - POINT_TO_POINT_ETHERNET_ACCESS\n      type: string\n    MEFAlternateProduct:\n      description: An alternative Product Offering that the Seller is proposing to\n        the Buyer. If 1) the Buyer has set `provideAlternate=true`;  2) the Seller\n        has determined that the POQ Confidence Level for this item is `yellow` or\n        `red`; and  3) The Seller has alternate Products (e.g. similar but lower bandwidth)\n        that may be adequate.\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n      required:\n      - productConfiguration\n      - productOffering\n      type: object\n    MEFGeographicPoint:\n      allOf:\n      - $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n      - properties:\n          spatialRef:\n            description: The spatial reference system used to determine the coordinates\n              (e.g. \"WGS84\"). The system used and the value of this field are to be\n              agreed during the onboarding process.\n            type: string\n          x:\n            description: The latitude expressed in the format specified by the `spacialRef`\n            type: string\n          \"y\":\n            description: The longitude expressed in the format specified by the `spacialRef`\n            type: string\n          z:\n            description: The elevation expressed in the format specified by the `spacialRef`\n            type: string\n        required:\n        - spatialRef\n        - x\n        - \"y\"\n        type: object\n      description: |\n        A MEFGeographicPoint defines a geographic point through coordinates. Reference: MEF 79 (Sn 8.9.5)\n    MEFPOQItemStateChange:\n      description: \"Holds the reached state, reasons, and associated date the POQ\\\n        \\ state changed, populated by the Seller.\"\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n      required:\n      - changeDate\n      - state\n      type: object\n    MEFPOQItemTaskStateType:\n      description: |\n        POQ item states - The specific states are managed by the Seller based on\n        its processing and/or based on the Buyer's action. The following mapping\n        has been used between `MEFPOQItemTaskStateType` and MEF 79 (Sn 9.2):\n\n        | MEFPOQItemTaskStateType | MEF79                             | Description                                                                                                                  |\n        | ----------------------- | --------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n        | acknowledged            | N/A                               | A request has been received by the Seller and has passed basic validation.                                                   |\n        | done.ready              | READY                             | POQ Item response is complete. This state does not imply that Seller is able to deliver requested item                       |\n        | done.abandoned          | ABANDONED                         | Applied to a POQ Item in case the final state is not reached and any other POQ Item moved to the final state other than done |\n        | terminatedWithError     | INSUFFICIENT_INFORMATION_PROVIDED | The information provided by the Buyer is insufficient for the Seller to provide POQ Item response                            |\n        | inProgress              | IN_PROGRESS                       | The Seller is working on a POQ item response and the answer is not ready yet                                                 |\n      enum:\n      - acknowledged\n      - terminatedWithError\n      - inProgress\n      - done.abandoned\n      - done.ready\n      type: string\n    MEFPOQStateChange:\n      description: \"Holds the reached state, reasons, and associated date the POQ\\\n        \\ state changed, populated by the Seller.\"\n      properties:\n        changeReason:\n          description: Additional comment related to state change\n          type: string\n        changeDate:\n          description: The date on when the state was reached\n          format: date-time\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n      required:\n      - changeDate\n      - state\n      type: object\n    MEFPOQTaskStateType:\n      description: |\n        These values represent the valid states through which the product\n        offering qualification can transition.\n\n        The following mapping has been used between `MEFPOQTaskStateType` and\n        MEF 79 (Sn 9.1):\n\n        | MEFPOQTaskStateType  | MEF 79                            | Description                                                                                                                         |\n        | -------------------- | --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------|\n        | acknowledged         | N/A                               | A request has been received by the Seller, has passed basic validation and the id was assigned.                                     |\n        | done.ready           | READY                             | Reached when all items are in `done` state                                                                                          |\n        | done.unableToProvide | UNABLE_TO_PROVIDE                 | This state is set when the Seller is unable to provide a Product Offering Qualification in the timeframe required by the Buyer.     |\n        | terminatedWithError  | INSUFFICIENT_INFORMATION_PROVIDED | This state is achieved when a well-formed POQ request has been received, but there is insufficient information to complete the POQ. |\n        | inProgress           | IN_PROGRESS                       | There is at least one POQ Item in `inProgress` state                                                                                |\n      enum:\n      - acknowledged\n      - terminatedWithError\n      - inProgress\n      - done.unableToProvide\n      - done.ready\n      type: string\n    MEFProductConfiguration:\n      description: MEFProductConfiguration is used as an extension point for MEF specific\n        product/service payload. The `@type` attribute is used as a discriminator\n      discriminator:\n        mapping:\n          urn:mef:lso:spec:cantata-sonata:basicIaIpvcEndPoint:v0.1.0:all: '#/components/schemas/BasicIaIpvcEndPoint'\n          urn:mef:lso:spec:cantata-sonata:basicIaUniAccessLink:v0.1.0:all: '#/components/schemas/BasicIaUniAccessLink'\n          urn:mef:lso:spec:cantata-sonata:basicIaUni:v0.1.0:all: '#/components/schemas/BasicIaUni'\n          urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all: '#/components/schemas/BasicIaIpvc'\n        propertyName: '@type'\n      properties:\n        '@type':\n          description: The name of the type that uniquely identifies the type of the\n            product that is the subject of the POQ Request. In case of MEF product\n            this is the URN provided in the Product Specification.\n          enum:\n          - urn:mef:lso:spec:cantata-sonata:basicIaIpvcEndPoint:v0.1.0:all\n          - urn:mef:lso:spec:cantata-sonata:basicIaUniAccessLink:v0.1.0:all\n          - urn:mef:lso:spec:cantata-sonata:basicIaUni:v0.1.0:all\n          - urn:mef:lso:spec:cantata-sonata:basicIaIpvc:v0.1.0:all\n          type: string\n      required:\n      - '@type'\n      type: object\n    MEFProductRefOrValue:\n      description: Used by the Buyer to point to existing and/or describe the desired\n        shape of the product. In case of `add` action - only `productConfiguration`\n        MUST be specified. For `modify` action - both `id` and `productConfiguration`\n        MUST be provided to point which product instance to update and to what state.\n        In `delete` only the `id` must be provided.\n      properties:\n        productSpecification:\n          $ref: '#/components/schemas/ProductSpecificationRef'\n        productOffering:\n          $ref: '#/components/schemas/ProductOfferingRef'\n        productConfiguration:\n          $ref: '#/components/schemas/MEFProductConfiguration'\n        productRelationship:\n          description: A list of references to existing products that are related\n            to the Product that would be delivered to fulfill the POQ Item.\n          items:\n            $ref: '#/components/schemas/ProductRelationshipWithGrouping'\n          type: array\n        href:\n          description: |\n            Hyperlink to the referenced Product. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: |\n            The unique identifier of an in-service Product that is the qualification's subject. This field MUST be populated if an item `action` is either `modify` or `delete`. This field MUST NOT be populated if an item `action` is `add`.\n          type: string\n        place:\n          description: A list of locations that are related to the Product. For example\n            an installation location\n          items:\n            $ref: '#/components/schemas/RelatedPlaceRefOrValue'\n          type: array\n      type: object\n    MEFServiceabilityColor:\n      description: |\n        A color that indicates confidence to service the request. When the item\n        state is `done.ready` the Seller **MUST** provide a value. It **MUST\n        NOT** be populated for other states.\n\n\n        Mapping between `ServiceabilityColor` and POQ Confidence Level:\n\n\n        | ServiceabilityColor      | MEF 79       | MEF 79 semantics                                                              |\n        |------------------------- | ------------ | ----------------------------------------------------------------------------- |\n        | green                    | GREEN        |  The Seller has high confidence that this Product can be delivered            |\n        | yellow                   | YELLOW       |  The Seller believes they can deliver the Product but is not highly confident |\n        | red                      | RED          |  The Seller cannot deliver the Product as specified                           |\n\n        Reference: MEF 79 (Sn 8.4.3.1)\n      enum:\n      - green\n      - yellow\n      - red\n      type: string\n    MEFSubUnit:\n      description: Allows for sub unit identification\n      properties:\n        subUnitNumber:\n          description: \"The discriminator used for the subunit, often just a simple\\\n            \\ number but may also be a range.\"\n          type: string\n        subUnitType:\n          description: \"The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER,\\\n            \\ UNIT, WHARF.\"\n          type: string\n      required:\n      - subUnitNumber\n      - subUnitType\n      type: object\n    Ospf:\n      description: \"When an entry in the UNI Routing Protocols is for OSPF, OSPF as\\\n        \\ specified in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used across\\\n        \\ each UNI Access Link to exchange routing information. Reference MEF 61.1\\\n        \\ Section 12.7.2 OSPF.\"\n      properties:\n        deadInterval:\n          description: \"Dead interval (0-429496295, in seconds)\"\n          type: integer\n        areaId:\n          type: string\n        retransmissionInterval:\n          description: \"Retransmit interval (integer greater than 0, in seconds)\"\n          type: integer\n        areaType:\n          $ref: '#/components/schemas/OspfAreaType'\n        helloInterval:\n          description: \"Hello interval (0-65535, in seconds)\"\n          type: integer\n        authenticationType:\n          $ref: '#/components/schemas/OspfAuthenticationType'\n        ipPrefixes:\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        administrativeDistance:\n          description: Administrative distance (integer greater than 0)\n          type: integer\n      type: object\n    OspfAreaType:\n      description: OSPF Area Type enumeration.\n      properties:\n        state:\n          $ref: '#/components/schemas/OspfAreaTypeState'\n      type: object\n    OspfAreaTypeState:\n      enum:\n      - NORMAL\n      - STUB\n      - NSSA\n      type: string\n    OspfAuthenticationType:\n      description: OSPF Authentication Type enumeration.\n      properties:\n        state:\n          $ref: '#/components/schemas/OspfAuthenticationTypeState'\n      type: object\n    OspfAuthenticationTypeState:\n      enum:\n      - NONE\n      - PASSWORD\n      - MESSAGE_DIGEST\n      type: string\n    PcpMapping:\n      description: Ethernet PCP mapping of CoS name to PCP value\n      properties:\n        ethernetPcp:\n          description: PCP value\n          maximum: 7\n          minimum: 0\n          type: integer\n        cosName:\n          description: Class of Service name\n          type: string\n      type: object\n    PeeringAddresses:\n      description: \"Peering Addresses. Connection Addresses, or Loopbacks plus a list\\\n        \\ of pairs of IP addresses. Reference MEF 61.1 Section 12.7.3 BGP.\"\n      properties:\n        connectionAddress:\n          $ref: '#/components/schemas/EnabledDisabled'\n        serviceProviderLoopback:\n          description: Service Provider IP Loopback address.\n          type: string\n        loopbacks:\n          $ref: '#/components/schemas/EnabledDisabled'\n        subscriberLoopback:\n          description: Subscriber IP Loopback address.\n          type: string\n      type: object\n    ProductActionType:\n      description: |\n        Action to be performed on the Product Item. The action types are\n        described in MEF 79 (Sn 8.4.1.1).\n\n        The following mapping has been used between `ProductActionType` and MEF\n        79:\n\n        | ProductActionType | MEF 79     |\n        |------------------ | ---------- |\n        | add               | INSTALL    |\n        | modify            | CHANGE     |\n        | delete            | DISCONNECT |\n      enum:\n      - add\n      - modify\n      - delete\n      type: string\n    ProductOfferingQualification:\n      allOf:\n      - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n      - properties:\n          productOfferingQualificationItem:\n            description: One or more of Product Offering Qualification Items. It MUST\n              contain exactly one entry for each item in the POQ request.\n            items:\n              $ref: '#/components/schemas/ProductOfferingQualificationItem'\n            minItems: 1\n            type: array\n          effectiveQualificationDate:\n            description: \"Date and time (set by the Seller) when the POQ state was\\\n              \\ set to one of the completion states (done.ready, done.unable_to_provide,\\\n              \\ terminated_with_error). The Seller MUST NOT provide this attribute\\\n              \\ until mentioned states are achieved.\"\n            format: date-time\n            type: string\n          expectedPOQCompletionDate:\n            description: The date the Seller expects to provide qualification result.\n              Set by the Seller in case of providing a deferred response when the\n              POQ is in an acknowledged or inProgress state.\n            format: date-time\n            type: string\n          stateChange:\n            description: |\n              A log of all state transitions for the POQ. It must be in sync with the most recent POQ Request state.\n            items:\n              $ref: '#/components/schemas/MEFPOQStateChange'\n            type: array\n          href:\n            description: |\n              Hyperlink to this POQ. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n            type: string\n          id:\n            description: The Serviceability Request's unique identifier assigned by\n              the Seller.\n            type: string\n          state:\n            $ref: '#/components/schemas/MEFPOQTaskStateType'\n        required:\n        - id\n        - productOfferingQualificationItem\n        - state\n        type: object\n      description: |\n        Represents a response to the Buyer POQ inquiry. This type defines a set of attributes that are assigned by the Seller while processing the request. A POQ response is a combination of attributes defined here with common attributes that are sent in the request. This type is used in response to an immediate request and POQ retrieval by an identifier. Reference MEF 79 (Sn 8.7 and 8.4.3).\n    ProductOfferingQualificationItem:\n      allOf:\n      - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n      - properties:\n          terminationError:\n            description: |\n              A list of text-based reasons the Seller MUST provide when the request cannot be processed. When item state is `terminatedWithError` the Seller **MUST** provide at least one termination error.\n            items:\n              $ref: '#/components/schemas/TerminationError'\n            type: array\n          serviceabilityConfidence:\n            $ref: '#/components/schemas/MEFServiceabilityColor'\n          serviceabilityConfidenceReason:\n            description: A free text description of the reason a particular color\n              is being provided.\n            type: string\n          alternateProductOfferingProposal:\n            description: |\n              A list of one or more alternative Product Offerings that the Seller is proposing to the Buyer. If 1) the Buyer has set `provideAlternate=true`;  2) the Seller has determined that the POQ Confidence Level for this item is `yellow` or `red`; and  3) The Seller has alternate Products (e.g. similar but lower bandwidth) that may be adequate.\n              **MUST NOT** be specified if 'state' is 'terminatedWithError' or 'done.abandoned'.\n            items:\n              $ref: '#/components/schemas/AlternateProductOfferingProposal'\n            type: array\n          installationInterval:\n            $ref: '#/components/schemas/Duration'\n          guaranteedUntilDate:\n            description: |\n              Date until the Seller guarantees the qualification result. **MUST NOT** be specified if 'state' is 'terminatedWithError' or 'done.abandoned'.\n            format: date-time\n            type: string\n          stateChange:\n            description: |\n              A log of all state transitions for the POQ Item. It must be in sync with the most recent POQ Item's state.\n            items:\n              $ref: '#/components/schemas/MEFPOQItemStateChange'\n            type: array\n          state:\n            $ref: '#/components/schemas/MEFPOQItemTaskStateType'\n        required:\n        - state\n        type: object\n      description: |-\n        An individual article included in a POQ that describes a Product of a particular type (Product Offering) being delivered to a specific geographical location.  The objective is to determine if it is feasible for the Seller to deliver this item as described and for the Seller to inform the Buyer of the estimated time interval to complete this delivery.\n        Reference: MEF 79 (Sn 8.4.3.1)\n    ProductOfferingQualificationItem_Common:\n      description: |\n        Common attributes shared between a POQ request and response.  These attributes are provided by the Buyer and must not be modified by the Seller.\n      properties:\n        product:\n          $ref: '#/components/schemas/MEFProductRefOrValue'\n        qualificationItemRelationship:\n          description: |\n            A list of references to related POQ items in this POQ\n          items:\n            $ref: '#/components/schemas/QualificationItemRelationship'\n          type: array\n        relatedContactInformation:\n          description: |-\n            Contact information of an individual or organization playing a role for this POQ Item\n            (e.g. for MEF 79: POQ Item Location Contact, role=locationContact)\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          type: array\n        action:\n          $ref: '#/components/schemas/ProductActionType'\n        id:\n          description: |\n            Id of this POQ item which is unique within the POQ. Assigned by the Buyer.\n          type: string\n      required:\n      - action\n      - id\n      - product\n      type: object\n    ProductOfferingQualificationItem_Create:\n      allOf:\n      - $ref: '#/components/schemas/ProductOfferingQualificationItem_Common'\n      - type: object\n      description: |-\n        This structure serves as a request for a product offering qualification item.\n        A product qualification item is an individual article included in a POQ that describes a Product of a particular type (Product Offering) being delivered to the geographic address  or a service site specified by the Buyer.\n        The objective is to determine if it is feasible for the Seller to deliver this item as described and for the Seller to inform the Buyer of the estimated time interval to complete this delivery.\n        The modelling pattern introduces the `Common` supertype to aggregate attributes that are common to both `ProductOfferingQualificationItem` and `ProductOfferingQualificationItem_Create`. It happens that it is the Create type has a subset of attributes of the response type and does not introduce any new, thus the `Create` type has an empty definition.\n        Reference: MEF 79 (Sn 8.4.1.1)\n    ProductOfferingQualification_Common:\n      description: |\n        Defines a set of POQ attributes that might be used by the Buyer and cannot be modified by the Seller. The `relatedContactInformation` entries provided by the Buyer cannot be changed by the Seller, however the Seller might append related contact information to that list.`\n      properties:\n        instantSyncQualification:\n          default: false\n          description: \"If this flag is set to Yes, Buyer requests to have an instant\\\n            \\ qualification to be provided in operation POST response\"\n          type: boolean\n        relatedContactInformation:\n          description: |-\n            Party playing a role for this qualification. MEF 79 mandates\n            providing 'Buyer Contact Information' in the request\n            ('role=buyerContactInformation') and 'Seller Contact Information'\n            in the response ('role=sellerContactInformation')\n          items:\n            $ref: '#/components/schemas/RelatedContactInformation'\n          minItems: 1\n          type: array\n        externalId:\n          description: ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        provideAlternative:\n          default: false\n          description: Allows the Buyer to indicate if he is willing to get an alternate\n            proposal if requested product not available.\n          type: boolean\n        projectId:\n          description: This value MAY be assigned by the Buyer to identify a project\n            the serviceability request is associated with.\n          type: string\n        requestedPOQCompletionDate:\n          description: The latest date a the POQ completion is expected. This attribute\n            is required when `instantSyncQualification=false`\n          format: date-time\n          type: string\n      required:\n      - relatedContactInformation\n      type: object\n    ProductOfferingQualification_Create:\n      allOf:\n      - $ref: '#/components/schemas/ProductOfferingQualification_Common'\n      - properties:\n          productOfferingQualificationItem:\n            description: A non-empty list of POQ items\n            items:\n              $ref: '#/components/schemas/ProductOfferingQualificationItem_Create'\n            minItems: 1\n            type: array\n        required:\n        - productOfferingQualificationItem\n        type: object\n      description: |\n        Represents a request formulated by the Buyer that is composed of product offering qualification items.\n        Reference: MEF 79 (Sn 8.4)\n    ProductOfferingQualification_Find:\n      description: \"This class represent a single list item for the response of `listProductOfferingQualification`\\\n        \\ operation. \\nReference: MEF 79 (Sn 8.6)\\n\"\n      properties:\n        externalId:\n          description: ID given by the consumer and only understandable by him (to\n            facilitate his searches afterwards)\n          type: string\n        id:\n          description: The POQ Request's unique identifier.\n          type: string\n        state:\n          $ref: '#/components/schemas/MEFPOQTaskStateType'\n        projectId:\n          description: \"The project ID specified by the Buyer in the POQ Request,\\\n            \\ if any.\"\n          type: string\n        requestedPOQCompletionDate:\n          description: |\n            The latest date the POQ completion is expected by the Buyer, if specified by the Buyer.\n          format: date\n          type: string\n      required:\n      - id\n      - state\n      type: object\n    ProductOfferingRef:\n      description: \"A reference to a Product Offering offered by the Seller to the\\\n        \\ Buyer.  A Product Offering contains the commercial and technical details\\\n        \\ of a Product sold by a particular Seller. A Product Offering defines all\\\n        \\ of the commercial terms and, through association with a particular Product\\\n        \\ Specification, defines all the technical attributes and behaviors of the\\\n        \\ Product. A Product Offering may constrain the allowable set of configurable\\\n        \\ technical attributes and/or behaviors specified in the associated Product\\\n        \\ Specification. Defined in MEF 79 Section 8.4.1.1\"\n      properties:\n        href:\n          description: |\n            Hyperlink to a Product Offering in Sellers catalog. In case Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses   Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: id of a Product Offering. It is assigned by the Seller. The\n            Buyer and the Seller exchange information about offerings' ids during\n            the onboarding process.\n          type: string\n      required:\n      - id\n      type: object\n    ProductRelationshipWithGrouping:\n      description: A relationship to existing Product. The requirements for usage\n        for given Product are described in the Product Specification. The \"WithGrouping\"\n        flavour of the Product Relationship allows for providing a list of related\n        product identifiers within a single Product Relationship. This can be later\n        used while processing the request as defined in the Product Specification.\n        The `groupingKey` attribute is used to achieve this behavior in the API by\n        marking the list of `ProductRelationshipWithGroupings` within a `product`\n        with a common key.\n      properties:\n        relationshipType:\n          description: \"Specifies the type (nature) of the relationship to the related\\\n            \\ Product. The nature of required relationships varies for Products of\\\n            \\ different types. For example, a UNI or ENNI Product may not have any\\\n            \\ relationships, but an Access E-Line may have two mandatory relationships\\\n            \\ (related to the UNI on one end and the ENNI on the other). More complex\\\n            \\ Products such as multipoint IP or Firewall Products may have more complex\\\n            \\ relationships. As a result, the allowed and mandatory `relationshipType`\\\n            \\ values are defined in the Product Specification.\"\n          type: string\n        href:\n          description: |\n            Hyperlink to the product in Seller's inventory that is referenced Hyperlink MAY be set by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: unique identifier of a Product that is referenced\n          type: string\n        groupingKey:\n          description: |\n            MEF 79.0.1. Introduces a list of related ids for the ProductRelationship. For sake of TMF compliance, a `groupingKey` is introduced to retain id as a simple attribute. Ids from relationships having the same `groupingKey` and `relationshipType` MUST be treated as a list of identifiers.\n            Reference: MEF 79.0.1 (Sn 7)\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    ProductSpecificationRef:\n      description: A reference to a structured set of well-defined technical attributes\n        and/or behaviors that are used to construct a Product Offering for sale to\n        a market.\n      properties:\n        href:\n          description: |\n            Hyperlink to a Product Specification in Sellers catalog. In case Seller is not providing a catalog API this field is not used. The catalog is provided by the Seller to the Buyer during onboarding. Hyperlink MAY be used by the Seller in responses. Hyperlink MUST be ignored by the Seller in case it is provided by the Buyer in a request.\n          type: string\n        id:\n          description: Unique identifier of the product specification\n          type: string\n      required:\n      - id\n      type: object\n    QualificationItemRelationship:\n      description: |-\n        The relationship between product offering qualification items that can be used to validate business rules between POQ items.\n        Reference: MEF 79.0.1 (Sn 6)\n      properties:\n        relationshipType:\n          description: |\n            One of the relationship types defined in the Product Specification. For example: \"relies on\".\n          type: string\n        id:\n          description: An identifier of the targeted POQ item within the same POQ\n            request\n          type: string\n      required:\n      - id\n      - relationshipType\n      type: object\n    RelatedContactInformation:\n      description: \"Contact data for a person or organization that is involved in\\\n        \\ the product offering qualification. In a given context it is always specified\\\n        \\ by the Seller (e.g. Seller Contact Information) or by the Buyer. \\nReference:\\\n        \\ MEF 79 (Sn 8.11)\"\n      properties:\n        number:\n          description: Phone number\n          type: string\n        emailAddress:\n          description: Email address\n          type: string\n        role:\n          description: A role of the particular contact in the request\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/FieldedAddress'\n        organization:\n          description: The organization or company that the contact belongs to\n          type: string\n        name:\n          description: Name of the contact\n          type: string\n        numberExtension:\n          description: Phone number extension\n          type: string\n      required:\n      - emailAddress\n      - name\n      - number\n      - role\n      type: object\n    RelatedPlaceRefOrValue:\n      description: Place defines the places (locations) where the products being subject\n        of this qualification are to be provided.\n      discriminator:\n        mapping:\n          FieldedAddress: '#/components/schemas/FieldedAddress'\n          FormattedAddress: '#/components/schemas/FormattedAddress'\n          GeographicAddressLabel: '#/components/schemas/GeographicAddressLabel'\n          MEFGeographicPoint: '#/components/schemas/MEFGeographicPoint'\n          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'\n          GeographicSiteRef: '#/components/schemas/GeographicSiteRef'\n        propertyName: '@type'\n      properties:\n        role:\n          description: Role of this place. The values that can be specified here are\n            described by Product Specification (e.g. \"INSTALL_LOCATION\").\n          type: string\n        '@type':\n          description: |\n            This field is used as discriminator. The value is the name of one of the types that inherit from it using 'allOf', i.e. one of FieldedAddress, FormattedAddress, GeographicAddressLabel, MEFGeographicPoint, GeographicAddressRef, GeographicSiteRef. Moreover, it might discriminate for an additional related place as defined in '@schemaLocation'.\n          enum:\n          - FieldedAddress\n          - FormattedAddress\n          - GeographicAddressLabel\n          - MEFGeographicPoint\n          - GeographicAddressRef\n          - GeographicSiteRef\n          type: string\n        '@schemaLocation':\n          description: A URL to a JSON-Schema file that defines additional attributes\n            and relationships. May be used to define additional related place types.\n            Usage of this attribute must be agreed between Buyer and Seller.\n          format: uri\n          type: string\n      required:\n      - '@type'\n      - role\n      type: object\n    RoutingProtocols:\n      description: \"Data type to support routing protocols and associated parameters\\\n        \\ that are used to exchange IP routes across the UNI. The value is a list\\\n        \\ of protocols (possibly empty), where each entry consists of the protocol\\\n        \\ name (one of Static, OSPF or BGP) the type of routes that will be exchanged\\\n        \\ (one of IPv4 or IPv6 or Both) and set of additional parameters as specified.\\\n        \\  Reference MEF 61.1 Section 12.7 UNI Routing Protocols Service Attributes.\"\n      properties:\n        static:\n          description: Reference to Static routing\n          items:\n            $ref: '#/components/schemas/Static'\n          minItems: 0\n          type: array\n        bgp:\n          description: Reference to BGP routing\n          items:\n            $ref: '#/components/schemas/Bgp'\n          minItems: 1\n          type: array\n        ospf:\n          description: Reference to OSPF routing.\n          items:\n            $ref: '#/components/schemas/Ospf'\n          minItems: 1\n          type: array\n      type: object\n    State:\n      enum:\n      - SP_OPERATOR_ADDRESSES\n      - ANY\n      type: string\n    Static:\n      description: \"When an entry in the UNI Routing Protocols list is for Static,\\\n        \\ the IP Prefixes used in the Subscriber Network that are reachable via this\\\n        \\ UNI are specified as additional parameters in the entry. These are known\\\n        \\ as Static IP Prefixes. Reference MEF 61.1 Section 12.7.1 Static.\"\n      properties:\n        staticIpEntry:\n          description: Static IP address entry.\n          items:\n            $ref: '#/components/schemas/StaticEntry'\n          minItems: 1\n          type: array\n      type: object\n    StaticEntry:\n      description: \"StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding\\\n        \\ information and administrative distance.\"\n      properties:\n        staticPrefix:\n          $ref: '#/components/schemas/Ipv4Ipv6Prefixes'\n        administrativeDistance:\n          description: \"Administrative distance, an integer \u003e 0.\"\n          type: integer\n        forwardingInformation:\n          $ref: '#/components/schemas/ForwardingInformation'\n      type: object\n    TerminationError:\n      description: This indicates an error that caused an Item to be terminated. The\n        code and propertyPath should be used like in Error422.\n      properties:\n        code:\n          $ref: '#/components/schemas/Error422Code'\n        propertyPath:\n          description: |\n            A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.\n            Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).\n          type: string\n        value:\n          description: Text to describe the reason of the termination.\n          type: string\n      type: object\n    TimeUnit:\n      description: |\n        Represents a unit of time.\n        Reference: MEF 79 (Sn 8.4.3.1/8.4.3.2)\n      enum:\n      - calendarMonths\n      - calendarDays\n      - calendarHours\n      - calendarMinutes\n      - businessDays\n      - businessHours\n      - businessMinutes\n      type: string\n    UniAccessLinkIpv4AddressType:\n      description: \"IPv4 Connection Address mechanism. Possible values are None, Static\\\n        \\ or DHCP.\"\n      enum:\n      - DHCP\n      - STATIC\n      - UNNUMBERED\n      type: string\n    UniIpv4ConnectionAddressing:\n      description: UniIpv4ConnectionAddressing is a data type representing how IPv4\n        addresses are allocated to the devices on the UNI Access Link.  Reference\n        MEF 61 Section 13.4 UNI Access Link IPv4 Connection Addressing Service Attribute.\n      properties:\n        uniAccessLinkIpv4AddressType:\n          description: \"IPv4 Connection Address mechanism. Possible values are None,\\\n            \\ Static or DHCP.\"\n          $ref: '#/components/schemas/UniAccessLinkIpv4AddressType'\n        ipv4SecondarySubnetList:\n          description: Secondary IPv4 Subnet List. Includes IPv4 Prefix and Service\n            Provider IPv4 Addresses.\n          items:\n            $ref: '#/components/schemas/Ipv4Subnet'\n          minItems: 0\n          type: array\n        ipv4PrimarySubnet:\n          description: Primary IPv4 Subnet. Includes IPv4 Prefix and Service Provider\n            IPv4 Addresses.\n          items:\n            $ref: '#/components/schemas/Ipv4Subnet'\n          maxItems: 1\n          minItems: 0\n          type: array\n      type: object\n    UniIpv6ConnectionAddressing:\n      description: UniIpv6ConnectionAddressing is a data type representing how IPv6\n        addresses are allocated to the devices on the UNI Access Link.  Reference\n        MEF 61 Section 13.5 UNI Access Link IPv6 Connection Addressing Service Attribute.\n      properties:\n        ipv6AddressType:\n          description: \"IPv6 Connection Address mechanism. Possible values are None,\\\n            \\ DHCP, SLAAC, Static or LL-only.\"\n          $ref: '#/components/schemas/Ipv6AddressType'\n        ipv6SubnetList:\n          items:\n            $ref: '#/components/schemas/Ipv6Subnet'\n          minItems: 0\n          type: array\n      type: object\n    UniManagementType:\n      description: Enumeration representing the UNI Management Type options. Reference\n        MEF 61.1 Section 12.2 UNI Management Type Service Attribute.\n      properties:\n        state:\n          $ref: '#/components/schemas/UniManagementTypeState'\n      type: object\n    UniManagementTypeState:\n      enum:\n      - SUBSCRIBER_MANAGEMENT\n      - PROVIDER_MANAGEMENT\n      type: string\n    basicIaIpvcEndPoint:\n      description: The Basic Internet Access IPVC End Point is a MEF 69.1 defined\n        version of MEF 61.1 IPVC End Point. Reference MEF 69.1 Section 9.2 Internet\n        Access IPVC End Point Requirements.\n      properties:\n        maximumNumberOfIpv4Routes:\n          description: Maximum number of IPv4 routes supported by this IPVC End Point.\n            Reference MEF 61.1 Section 11.7 IPVC EP Maximum Number of IPv4 Routes\n            Service Attribute. Absence of this attribute corresponds to a value of\n            �Unlimited�.\n          items:\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        identifier:\n          description: A unique identifier for the IPVC End Point for management purposes.\n            Reference MEF 61.1 Section 11.1 IPVC EP Identifier Service Attribute.\n          type: string\n        basicIaIpvc:\n          $ref: '#/components/schemas/basicIaIpvcRef'\n        basicIaUni:\n          $ref: '#/components/schemas/basicIaUniRef'\n        egressClassOfServiceMap:\n          $ref: '#/components/schemas/EgressClassOfServiceMap'\n        maximumNumberOfIpv6Routes:\n          description: Maximum number of IPv6 routes supported by this IPVC End Point.\n            Reference MEF 61.1 Section 11.8 IPVC EP Maximum Number of IPv6 Routes\n            Service Attribute. Absence of this attribute corresponds to a value of\n            �Unlimited�.\n          items:\n            type: integer\n          maxItems: 1\n          minItems: 0\n          type: array\n        ingressClassOfServiceMap:\n          $ref: '#/components/schemas/IngressClassOfServiceMap'\n      title: MEF LSO Cantata-Sonata Basic Internet Access IPVC End Point\n      type: object\n    basicIaIpvcEndPointRef:\n      description: \"First reference Basic IA IPVC, then specific EVC End Point\"\n      properties:\n        evcRef:\n          $ref: '#/components/schemas/basicIaIpvcRef'\n        id:\n          description: Points to Basic IA IpvcEndPoint\n          format: uuid\n          type: string\n      type: object\n    basicIaIpvcRef:\n      properties:\n        href:\n          format: uri\n          type: string\n        id:\n          format: uuid\n          type: string\n      type: object\n    basicIaUni:\n      description: The Basic Internet Access UNI is a MEF 69.1 defined version of\n        MEF 61.1 UNI. Reference MEF 69.x Section 8.3 Internet Access UNI Requirements.\n      properties:\n        identifier:\n          description: Unique identifier for the Basic Internet Access UNI for management\n            purposes. Reference MEF 61.1 Section 13.1 UNI Access Link Identifier Service\n            Attribute.\n          type: string\n        basicIaUniAccessLink:\n          $ref: '#/components/schemas/basicIaUniAccessLink'\n        basicIaIpvcEndPoint:\n          items:\n            $ref: '#/components/schemas/basicIaIpvcEndPointRef'\n          minItems: 0\n          type: array\n        egressBandwidthProfileEnvelope:\n          $ref: '#/components/schemas/IpUniEgressBwpEnvelope'\n        listOfControlProtocols:\n          $ref: '#/components/schemas/ControlProtocols'\n        routingProtocols:\n          $ref: '#/components/schemas/RoutingProtocols'\n        managementType:\n          $ref: '#/components/schemas/UniManagementType'\n        ingressBandwidthProfileEnvelope:\n          $ref: '#/components/schemas/IpUniIngressBwpEnvelope'\n      required:\n      - identifier\n      title: MEF LSO Cantata-Sonata Basic Internet Access UNI\n      type: object\n    basicIaUniAccessLink:\n      description: The Basic Internet Access UNI Access Link is a MEF 69.1 defined\n        version of MEF 61.1 UNI Access Link. Reference MEF 69.1 Section 9.4 Internet\n        Access UNI Access Link Requirements.\n      properties:\n        identifier:\n          description: Unique identifier for the UNI Access Link for management purposes.\n            Reference MEF 61.1 Section 13.1 UNI Access Link Identifier Service Attribute.\n          type: string\n        l2Technology:\n          $ref: '#/components/schemas/L2Technology'\n        ipv4ConnectionAddressing:\n          $ref: '#/components/schemas/UniIpv4ConnectionAddressing'\n        ipv6ConnectionAddressing:\n          $ref: '#/components/schemas/UniIpv6ConnectionAddressing'\n        prefixDelegation:\n          $ref: '#/components/schemas/EnabledDisabled'\n        basicIaUni:\n          $ref: '#/components/schemas/basicIaUni'\n        mtu:\n          description: \"Maximum size, in octets of an IP Packet that can traverse\\\n            \\ the UNI Access Link. Reference MEF 61.1 Section 13.9 UNI Access Link\\\n            \\ IP MTU Service Attribute.\"\n          type: integer\n      required:\n      - identifier\n      title: MEF LSO Cantata-Sonata Basic Internet Access UNI Access Link Service\n        Specifications\n      type: object\n    basicIaUniRef:\n      properties:\n        href:\n          format: uri\n          type: string\n        id:\n          format: uuid\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/MEF-GIT/MEF-LSO-Sonata-SDK@c99d5bce21fc77e2ecfba6f8d6b2111361380b86/-/blob/generated/staticBinding/ip/productOfferingQualificationManagement.api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MEF-GIT/MEF-LSO-Sonata-SDK/blob/c99d5bce21fc77e2ecfba6f8d6b2111361380b86/generated/staticBinding/ip/productOfferingQualificationManagement.api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}