{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/formidablae/Trendr_App"
		},
		"file": {
			"name": "Trends_API-dev-oas30-apigateway.yaml",
			"size": 0,
			"path": "AWS_API_Gateway/Trends_API-dev-oas30-apigateway.yaml",
			"byteSize": 5120,
			"content": "openapi: \"3.0.1\"\ninfo:\n  title: \"Trends_API\"\n  description: \"API di accesso ai Trending Topics\"\n  version: \"2020-08-14T19:55:41Z\"\nservers:\n- url: \"https://72ujq4ik6k.execute-api.us-east-1.amazonaws.com/{basePath}\"\n  variables:\n    basePath:\n      default: \"/dev\"\npaths:\n  /trends:\n    get:\n      parameters:\n      - name: \"woeid\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"date\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"page\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      - name: \"docperpage\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:393838307445:function:getTrendsByDateAndLocation/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\n    \\\"date\\\":  \\\"$input.params('date')\\\",\\n    \\\"\\\n            woeid\\\": $input.params('woeid'),\\n    \\\"docperpage\\\": $input.params('docperpage'),\\n\\\n            \\    \\\"page\\\": $input.params('page')\\n}\"\n        passthroughBehavior: \"when_no_templates\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"never\"\n        type: \"mock\"\n  /locations:\n    get:\n      parameters:\n      - name: \"date\"\n        in: \"query\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:393838307445:function:getAvailableLocationsByDate/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\n    \\\"date\\\":  \\\"$input.params('date')\\\"\\n}\"\n        passthroughBehavior: \"when_no_templates\"\n        httpMethod: \"POST\"\n        contentHandling: \"CONVERT_TO_TEXT\"\n        type: \"aws\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\ncomponents:\n  schemas:\n    Empty:\n      title: \"Empty Schema\"\n      type: \"object\"\n",
			"canonicalURL": "/github.com/formidablae/Trendr_App@5e950ec92fcbe5a072036848ba171db31414b365/-/blob/AWS_API_Gateway/Trends_API-dev-oas30-apigateway.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/formidablae/Trendr_App/blob/5e950ec92fcbe5a072036848ba171db31414b365/AWS_API_Gateway/Trends_API-dev-oas30-apigateway.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}