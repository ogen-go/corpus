{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "core.ac.uk-2.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/core.ac.uk-2.0-swagger.yaml",
			"byteSize": 56821,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: oacore\n  description: \u003e-\n    \u003cp style=\"text-align: justify;\"\u003eYou can use the CORE API to access the \n        resources harvested and enriched by CORE. If you encounter any problems with the API, please \u003ca href=\"/contact\"\u003ereport them to us\u003c/a\u003e.\u003c/p\u003e\n\n    \u003ch2\u003eOverview\u003c/h2\u003e\n\n    \u003cp style=\"text-align: justify;\"\u003eThe API is organised by resource type. The resources are \u003cb\u003earticles\u003c/b\u003e, \n        \u003cb\u003ejournals\u003c/b\u003e and \u003cb\u003erepositories\u003c/b\u003e and are represented using JSON data format. Furthermore, \n        each resource has a list of methods. The API also provides two global methods for accessing all resources at once.\u003c/p\u003e\n\n    \u003ch2\u003eResponse format\u003c/h2\u003e\n\n    \u003cp style=\"text-align: justify;\"\u003eResponse for each query contains two fields: \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e.\n        In case of an error status, the data field is empty. The data field contains a single object\n        in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or  \n        contains a list of objects, for example for search queries. In case of batch requests, the response\n        is an array of objects, each of which contains its own \u003cb\u003estatus\u003c/b\u003e and \u003cb\u003edata\u003c/b\u003e fields.\n        For search queries the response contains an additional field \u003cb\u003etotalHits\u003c/b\u003e, which is the \n        total number of items which match the search criteria.\u003c/p\u003e\n\n    \u003ch2\u003eSearch query syntax\u003c/h2\u003e\n\n\n    \u003cp style=\"text-align: justify\"\u003eComplex search queries can be used in all of the API search methods.\n        The query can be a simple string or it can be built using terms and operators described in Elasticsearch\n        \u003ca href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\u003edocumentation\u003c/a\u003e.\n        The usable field names are \u003cstrong\u003etitle\u003c/strong\u003e, \u003cstrong\u003edescription\u003c/strong\u003e, \u003cstrong\u003efullText\u003c/strong\u003e, \n        \u003cstrong\u003eauthors\u003c/strong\u003e, \u003cstrong\u003epublisher\u003c/strong\u003e, \u003cstrong\u003erepositories.id\u003c/strong\u003e, \u003cstrong\u003erepositories.name\u003c/strong\u003e, \n        \u003cstrong\u003edoi\u003c/strong\u003e, \u003cstrong\u003eoai\u003c/strong\u003e, \u003cstrong\u003eidentifiers\u003c/strong\u003e (which is a list of article identifiers including OAI, URL, etc.), \u003cstrong\u003elanguage.name\u003c/strong\u003e \n        and \u003cstrong\u003eyear\u003c/strong\u003e. Some example queries:\n    \u003c/p\u003e\n\n\n    \u003cul style=\"margin-left: 30px;\"\u003e\n        \u003cli\u003e\u003cp\u003etitle:psychology and language.name:English\u003c/p\u003e\u003c/li\u003e\n        \u003cli\u003e\u003cp\u003erepositories.id:86 AND year:2014\u003c/p\u003e\u003c/li\u003e\n        \u003cli\u003e\u003cp\u003eidentifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"\u003c/p\u003e\u003c/li\u003e\n        \u003cli\u003e\u003cp\u003edoi:\"10.1186/1471-2458-6-309\"\u003c/p\u003e\u003c/li\u003e\n    \u003c/ul\u003e\n\n\n    \u003ch3\u003eRetrieving the latest Articles\u003c/h3\u003e\n\n    \u003cp style=\"text-align: justify\"\u003e\n        You can retrieve the harvested items since specific dates using the following queries:\n    \u003c/p\u003e\n\n\n    \u003cul style=\"margin-left: 30px;\"\u003e\n        \u003cli\u003e\u003cp\u003erepositoryDocument.metadataUpdated:\u003e2017-02-10\u003c/p\u003e\u003c/li\u003e\n        \u003cli\u003e\u003cp\u003erepositoryDocument.metadataUpdated:\u003e2017-03-01 AND repositoryDocument.metadataUpdated:\u003c2017-03-31\u003c/p\u003e\u003c/li\u003e    \n    \u003c/ul\u003e\n\n\n    \u003ch2\u003eSort order\u003c/h2\u003e\n\n\n    \u003cp style=\"text-align: justify;\"\u003eFor search queries, the results are ordered by relevance score. For batch \n        requests, the results are retrieved in the order of the requests.\u003c/p\u003e\n\n    \u003ch2\u003eParameters\u003c/h2\u003e\n\n    \u003cp style=\"text-align: justify;\"\u003eThe API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods \n        the API key can be provided either as a query parameter or in the request header. If the API key \n        is not provided, the API will return HTTP 401 error. You can register for an API key \u003ca href=\"/services#api\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\n    \u003ch2\u003eAPI methods\u003c/h2\u003e\n  title: CORE API v2\n  version: \"2.0\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    url: https://twitter.com/oacore/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: swagger\n      url: http://core.ac.uk/api-v2/doc\n      version: \"1.2\"\n  x-providerName: core.ac.uk\nsecurity:\n  - apiKey: []\ntags:\n  - description: Global operations\n    name: all\n  - description: Operations for retrieving articles\n    name: articles\n  - description: Operations for retrieving journals\n    name: journals\n  - description: Operations for retrieving repositories\n    name: repositories\npaths:\n  /articles/dedup:\n    post:\n      description: Method accepts values for several parameters and retrieves a JSON array\n        of articles which have near duplicate content matching the input\n        parameters' values. The response array contains ids of the near\n        duplicate articles along with their relevance scores.\n      operationId: nearDuplicateArticles\n      parameters:\n        - description: The DOI for which the duplicates will be identified\n          in: query\n          name: doi\n          required: false\n          schema:\n            type: string\n        - description: Title to match when looking for duplicate articles. Only useful when\n            either value for @year or @description is supplied.\n          in: query\n          name: title\n          required: false\n          schema:\n            type: string\n        - description: \"Year the article was published. Only useful when value for @title\n            is supplied. \"\n          in: query\n          name: year\n          required: false\n          schema:\n            type: string\n        - description: Abstract for an article based on which its duplicates will be found.\n            Only useful when value for @title is supplied.\n          in: query\n          name: description\n          required: false\n          schema:\n            type: string\n        - description: Full text for an article based on which its duplicates will be found.\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: string\n        - description: Article identifier for which the duplicates will be identified. Only\n            useful when either values for @doi or (@title and @year) or (@title\n            and @abstract) or @fulltext are supplied.\n          in: query\n          name: identifier\n          required: false\n          schema:\n            type: string\n        - description: \"Limit the duplicates search to particular repository id. \"\n          in: query\n          name: repositoryId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArticleDedupResponse\"\n        \"400\":\n          description: Insufficient/Unsuitable input parameters.\n        \"401\":\n          description: Invalid or no API key provided\n        \"503\":\n          description: Could not run the deduplication service at this time; please try\n            again later.\n      summary: Get all near duplicate articles\n      tags:\n        - articles\n  /articles/get:\n    post:\n      description: Method accepts a JSON array of CORE IDs and retrieves a list of\n        articles. The response array is ordered based on the order of the IDs in\n        the request array.\n      operationId: getArticleByCoreIdBatch\n      parameters:\n        - description: Whether to retrieve the full article metadata or only the IDs. The\n            default value is true\n          in: query\n          name: metadata\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Whether to retrieve fulltexts of the articles. The default value is\n            false\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve citations found in the articles. The default\n            value is false\n          in: query\n          name: citations\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve lists of similar articles. The default value is\n            false. Because the similar articles are calculated on demand,\n            setting this parameter to true might slightly slow down the response\n            time\n          in: query\n          name: similar\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve CORE IDs of different versions of the articles.\n            The default value is false\n          in: query\n          name: duplicate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve lists of URLs of the article fulltexts. The\n            default value is false\n          in: query\n          name: urls\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns the records raw XML metadata from the original repository.\n            The default value is false\n          in: query\n          name: faithfulMetadata\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                type: integer\n              type: array\n        description: JSON array with CORE IDs of articles that need to be fetched\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ArticleResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Batch operation for retrieving articles by CORE ID\n      tags:\n        - articles\n  \"/articles/get/{coreId}\":\n    get:\n      description: Method will retrieve an article based on given CORE ID.\n      operationId: getArticleByCoreId\n      parameters:\n        - description: CORE ID of the article that needs to be fetched.\n          in: path\n          name: coreId\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Whether to retrieve the full article metadata or only the ID. The\n            default value is true.\n          in: query\n          name: metadata\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Whether to retrieve full text of the article. The default value is\n            false\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve citations found in the article. The default\n            value is false\n          in: query\n          name: citations\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of similar articles. The default value is\n            false. Because the similar articles are calculated on demand,\n            setting this parameter to true might slightly slow down the response\n            time\n          in: query\n          name: similar\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of CORE IDs of different versions of the\n            article. The default value is false\n          in: query\n          name: duplicate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of URLs from which the article can be\n            downloaded. This can include links to PDFs as well as HTML pages.\n            The default value is false\n          in: query\n          name: urls\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns the records raw XML metadata from the original repository.\n            The default value is false\n          in: query\n          name: faithfulMetadata\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArticleResponse\"\n        \"400\":\n          description: Invalid identifier supplied\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Get article by CORE ID\n      tags:\n        - articles\n  \"/articles/get/{coreId}/download/pdf\":\n    get:\n      description: Method will retrieve an article based on given CORE ID.\n      operationId: getArticlePdfByCoreId\n      parameters:\n        - description: ID of article history that needs to be fetched\n          in: path\n          name: coreId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n        \"401\":\n          description: Invalid or no API key provided\n        \"404\":\n          description: No Article pdf found\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Get fulltext PDF by CORE ID\n      tags:\n        - articles\n  \"/articles/get/{coreId}/history\":\n    get:\n      description: Method accepts a single CORE ID and returns a list of all historical\n        versions of the article, which are stored in CORE database. The results\n        are ordered from the newest one to the oldest one.\n      operationId: getArticleHistoryByCoreId\n      parameters:\n        - description: CORE ID of the article which history should be fetched\n          in: path\n          name: coreId\n          required: true\n          schema:\n            type: string\n        - description: Which page of the history results should be retrieved. Can be any\n            number betwen 1 and 100, default is 1 (first page).\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 100\n            default: 1\n        - description: The number of results to return per page. Can be any number between\n            10 and 100, default is 10.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 10\n            maximum: 100\n            default: 10\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArticleHistoryResponse\"\n        \"400\":\n          description: Parameter invalid or out of bounds\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Get article history by CORE ID\n      tags:\n        - articles\n  /articles/search:\n    post:\n      description: Method accepts a JSON array of search queries and parameters. It then\n        searches through all articles and returns a JSON array of search results\n        for each of the queries. Method searches through all article fields\n        (title, authors, subjects, identifiers, etc.).\n      operationId: searchArticlesBatch\n      parameters:\n        - description: Whether to retrieve the full article metadata or only the ID. The\n            default value is true.\n          in: query\n          name: metadata\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Whether to retrieve full text of the article. The default value is\n            false\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve citations found in the article. The default\n            value is false\n          in: query\n          name: citations\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of similar articles. The default value is\n            false. Because the similar articles are calculated on demand,\n            setting this parameter to true might slightly slow down the response\n            time\n          in: query\n          name: similar\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of CORE IDs of different versions of the\n            article. The default value is false\n          in: query\n          name: duplicate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of URLs from which the article can be\n            downloaded. This can include links to PDFs as well as HTML pages.\n            The default value is false\n          in: query\n          name: urls\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve the raw XML metadata of the article. The default\n            value is false\n          in: query\n          name: faithfulMetadata\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/SearchRequestArray\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ArticleSearchResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Batch operation for search through articles\n      tags:\n        - articles\n  \"/articles/search/{query}\":\n    get:\n      description: Searches through all articles and returns a JSON array with search\n        results. Method searches through all article fields.\n      operationId: searchArticles\n      parameters:\n        - description: The search query\n          in: path\n          name: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - description: Which page of the search results should be retrieved. Can be any\n            number betwen 1 and 100, default is 1 (first page).\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 100\n            default: 1\n        - description: The number of results to return per page. Can be any number between\n            10 and 100, default is 10.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 10\n            maximum: 100\n            default: 10\n        - description: Whether to retrieve the full article metadata or only the ID. The\n            default value is true.\n          in: query\n          name: metadata\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Whether to retrieve full text of the article. The default value is\n            false\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve citations found in the article. The default\n            value is false\n          in: query\n          name: citations\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of similar articles. The default value is\n            false. Because the similar articles are calculated on demand,\n            setting this parameter to true might slightly slow down the response\n            time\n          in: query\n          name: similar\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of CORE IDs of different versions of the\n            article. The default value is false\n          in: query\n          name: duplicate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve a list of URLs from which the article can be\n            downloaded. This can include links to PDFs as well as HTML pages.\n            The default value is false\n          in: query\n          name: urls\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns the records raw XML metadata from the original repository.\n            The default value is false\n          in: query\n          name: faithfulMetadata\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArticleSearchResponse\"\n        \"400\":\n          description: Parameter invalid or out of bounds\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Search through all documents\n      tags:\n        - articles\n  /articles/similar:\n    post:\n      description: Method accepts a text and retrieves a JSON array of articles which are\n        similar to the given text. The response array is ordered based on\n        similarity score, starting from the most similar.\n      operationId: similarArticles\n      parameters:\n        - description: How many similar articles to retrieve at most. Can be any number\n            betwen 1 and 100, default is 10\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n            default: 10\n        - description: Whether to retrieve the full article metadata or only the IDs of the\n            similar articles. The default value is true\n          in: query\n          name: metadata\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Whether to retrieve fulltexts of the similar articles. The default\n            value is false\n          in: query\n          name: fulltext\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve citations found in the articles. The default\n            value is false\n          in: query\n          name: citations\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve lists of similar articles. The default value is\n            false. Because the similar articles are calculated on demand,\n            setting this parameter to true might slightly slow down the response\n            time\n          in: query\n          name: similar\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve CORE IDs of different versions of the articles.\n            The default value is false\n          in: query\n          name: duplicate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve lists of URLs of the article fulltexts. The\n            default value is false\n          in: query\n          name: urls\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Whether to retrieve the raw XML metadata of the articles. The\n            default value is false\n          in: query\n          name: faithfulMetadata\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SimilarRequest\"\n        description: The text that requires similar articles to be calculated on\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArticleSimilarResponse\"\n        \"400\":\n          description: Missing text in request body or parameter out of bounds or invalid\n            parameter\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Get articles by similarity to a text\n      tags:\n        - articles\n  /journals/get:\n    post:\n      description: Method accepts a JSON array of ISSNs and retrieves a list of journals.\n      operationId: getJournalByIssnBatch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                type: string\n              type: array\n        description: JSON array with ISSNs of journals that need to be fetched\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/JournalResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n      summary: Batch operation for retrieving journals by ISSN\n      tags:\n        - journals\n  \"/journals/get/{issn}\":\n    get:\n      description: Returns a journal with given ISSN identifier.\n      operationId: getJournalByIssn\n      parameters:\n        - description: ISSN identifier of journal that needs to be fetched.\n          in: path\n          name: issn\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JournalResponse\"\n        \"400\":\n          description: Invalid ISSN identifier supplied\n        \"401\":\n          description: Invalid or no API key provided\n      summary: Find journal by ISSN\n      tags:\n        - journals\n  /journals/search:\n    post:\n      description: Method accepts a JSON array of search queries and parameters. It then\n        searches through all journals and returns a JSON array of search results\n        for each of the queries. Method searches through all journal fields\n        (title, identifiers, subjects, language, rights and publisher).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/SearchRequest\"\n              type: array\n        description: JSON array with search queries and parameters. One request can contain\n          up to 100 queries.\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/JournalResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n      summary: Batch operation for search through journals\n      tags:\n        - journals\n  \"/journals/search/{query}\":\n    get:\n      description: Searches through all journals and returns a JSON array of search\n        results. Method searches through all journal fields (title, identifiers,\n        subjects, language, rights and publisher).\n      parameters:\n        - description: Search query\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: Which page of the search results should be retrieved. Can be any\n            number betwen 1 and 100, default is 1 (first page).\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 100\n            default: 1\n        - description: The number of results to return per page. Can be any number between\n            10 and 100, default is 10.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 10\n            maximum: 100\n            default: 10\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/JournalSearchResponse\"\n        \"400\":\n          description: Parameter invalid or out of bounds\n        \"401\":\n          description: Invalid or no API key provided\n      summary: Search through journals\n      tags:\n        - journals\n  /repositories/get:\n    post:\n      description: Method accepts a JSON array of CORE repository IDs and retrieves a list\n        of repositories. The response array is ordered based on the order of the\n        IDs in the request array. The maximum number of IDs in request is 100.\n      operationId: getRepositoryByIdBatch\n      parameters:\n        - description: Whether to retrieve statistics about the repository. The default\n            value is false\n          in: query\n          name: stats\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistory\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistoryCumulative\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                type: integer\n              type: array\n        description: JSON array with CORE repository IDs of repositories that need to be\n          fetched\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/RepositoryResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Batch operation for retrieving repositories by CORE repository ID\n      tags:\n        - repositories\n  \"/repositories/get/{repositoryId}\":\n    get:\n      description: Method will retrieve a repository based on given CORE repository ID.\n      operationId: getRepositoryById\n      parameters:\n        - description: CORE repository ID of the article that needs to be fetched.\n          in: path\n          name: repositoryId\n          required: true\n          schema:\n            type: integer\n        - description: Whether to retrieve statistics about the repository. The default\n            value is false\n          in: query\n          name: stats\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistory\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistoryCumulative\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositoryResponse\"\n        \"400\":\n          description: Invalid identifier supplied\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Get repository by CORE repository ID\n      tags:\n        - repositories\n  /repositories/search:\n    post:\n      description: Method accepts a JSON array of search queries and parameters. It then\n        searches through all repositories and returns a JSON array of search\n        results for each of the queries. Method searches through all repository\n        fields.\n      parameters:\n        - description: Whether to retrieve statistics about the repository. The default\n            value is false\n          in: query\n          name: stats\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistory\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistoryCumulative\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/SearchRequestArray\"\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositorySearchResponse\"\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Batch operation for searching through repositories\n      tags:\n        - repositories\n  \"/repositories/search/{query}\":\n    get:\n      description: Searches through all repositories and returns a JSON array with search\n        results. Method searches through all repository fields.\n      parameters:\n        - description: The search query\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: Which page of the search results should be retrieved. Can be any\n            number betwen 1 and 100, default is 1 (first page).\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 100\n            default: 1\n        - description: The number of results to return per page. Can be any number between\n            10 and 100, default is 10.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 10\n            maximum: 100\n            default: 10\n        - description: Whether to retrieve statistics about the repository. The default\n            value is false\n          in: query\n          name: stats\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistory\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Returns deposit history over time\n          in: query\n          name: depositHistoryCumulative\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RepositorySearchResponse\"\n        \"400\":\n          description: Parameter invalid or out of bounds\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Search through all repositories\n      tags:\n        - repositories\n  /search:\n    post:\n      description: Method accepts a JSON array of search queries. It searches through all\n        resources and returns a JSON array with search results for each of the\n        queries. Method searches through all resources and all fields. The\n        results are ordered by relevance score and contain type of the relevant\n        resource and its ID. Furthermore, the responses are oredered based on\n        the order of the request items. The metadata of each resource need to be\n        obtained through an appropriate method.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/SearchRequest\"\n              type: array\n        description: JSON array with search queries and pagination parameters. One request\n          can contain up to 100 queries\n        required: true\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SearchAllResponse\"\n                type: array\n        \"400\":\n          description: Missing or malformed JSON in request body\n        \"401\":\n          description: Invalid or no API key provided\n        \"403\":\n          description: Too many queries in request body\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Batch operation for search through all resources\n      tags:\n        - all\n  \"/search/{query}\":\n    get:\n      description: Searches through all resources and returns a JSON array with search\n        results. Method searches through all resources and all fields. The\n        results are ordered by relevance score and contain type of the relevant\n        resource and its ID. The metadata of each resource need to be obtained\n        through an appropriate method.\n      parameters:\n        - description: The search query\n          in: path\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: Which page of the search results should be retrieved. Can be any\n            number betwen 1 and 100, default is 1 (first page).\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 100\n            default: 1\n        - description: The number of results to return per page. Can be any number between\n            10 and 100, default is 10.\n          in: query\n          name: pageSize\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 10\n            maximum: 100\n            default: 10\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchAllResponse\"\n        \"400\":\n          description: Parameter invalid or out of bounds\n        \"401\":\n          description: Invalid or no API key provided\n        \"429\":\n          description: Too many requests in given amount of time\n      summary: Search through all resources\n      tags:\n        - all\nservers:\n  - url: http://core.ac.uk/api-v2\ncomponents:\n  requestBodies:\n    SearchRequestArray:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/SearchRequest\"\n            type: array\n      description: JSON array with search queries and parameters. One request can contain\n        up to 100 queries\n      required: true\n  securitySchemes:\n    apiKey:\n      description: Your Api Key. Also accepts apiKey as a header\n      in: query\n      name: apiKey\n      type: apiKey\n  schemas:\n    Article:\n      properties:\n        authors:\n          description: List of article authors\n          items:\n            type: string\n          type: array\n        citations:\n          description: Citations found in the article\n          items:\n            $ref: \"#/components/schemas/Citation\"\n          type: array\n        contributors:\n          description: List of article contributors\n          items:\n            type: string\n          type: array\n        datePublished:\n          description: Date article published\n          type: string\n        description:\n          description: The abstract\n          type: string\n        doi:\n          description: The DOI of the article\n          type: string\n        downloadUrl:\n          description: The download PDF URL which is displayed on our /display/[ArticleID]\n            page\n          type: string\n        fulltext:\n          description: Article full text\n          type: string\n        fulltextIdentifier:\n          description: The URL to the fulltext\n          type: string\n        fulltextUrls:\n          description: URLs of the fulltext version of this article\n          items:\n            type: string\n          type: array\n        id:\n          description: Article ID\n          type: integer\n        identifiers:\n          description: List of document identifiers\n          items:\n            type: string\n          type: array\n        journals:\n          description: List of journals this article belongs to\n          items:\n            $ref: \"#/components/schemas/ArticleJournal\"\n          type: array\n        language:\n          $ref: \"#/components/schemas/Language\"\n        oai:\n          description: The OAI of the article\n          type: string\n        publisher:\n          description: Publisher of the article\n          type: string\n        rawRecordXml:\n          $ref: \"#/components/schemas/RawRecordXml\"\n        relations:\n          description: URLs of relating articles, etc.\n          items:\n            type: string\n          type: array\n        repositories:\n          description: List of repositories this article belongs to\n          items:\n            $ref: \"#/components/schemas/Repository\"\n          type: array\n        repositoryDocument:\n          $ref: \"#/components/schemas/RepositoryDocument\"\n        similarities:\n          description: Similar articles\n          items:\n            $ref: \"#/components/schemas/Similar\"\n          type: array\n        subjects:\n          description: Article subjects\n          items:\n            type: string\n          type: array\n        title:\n          description: Article title\n          type: string\n        topics:\n          description: Article topics\n          items:\n            type: string\n          type: array\n        types:\n          description: Types, e.g. conference paper, journal paper, etc.\n          items:\n            type: string\n          type: array\n        year:\n          description: Year the article was published\n          type: integer\n      required:\n        - id\n    ArticleDedupResponse: {}\n    ArticleHistoryResponse:\n      properties:\n        data:\n          description: List of article versions\n          items:\n            $ref: \"#/components/schemas/RawRecordXml\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n      required:\n        - status\n    ArticleJournal:\n      properties:\n        identifiers:\n          description: List of journal identifiers\n          items:\n            type: string\n          type: array\n        title:\n          description: Title of the journal\n          type: string\n    ArticleResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Article\"\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n      required:\n        - data\n        - status\n    ArticleSearchResponse:\n      properties:\n        data:\n          description: Search results\n          items:\n            $ref: \"#/components/schemas/Article\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n        totalHits:\n          description: Total number of articles matching the search criteria\n          type: integer\n      required:\n        - data\n        - status\n        - totalHits\n    ArticleSimilarResponse:\n      properties:\n        data:\n          description: Similar articles\n          items:\n            $ref: \"#/components/schemas/Article\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n      required:\n        - data\n        - status\n    Citation:\n      properties:\n        authors:\n          description: Authors of the article\n          type: string\n        date:\n          description: Date the cited article was published\n          type: string\n        doi:\n          description: Digital Object Identifier\n          type: string\n        raw:\n          description: Citation as raw string\n          type: string\n        title:\n          description: Title of the cited article\n          type: string\n    Journal:\n      properties:\n        identifiers:\n          description: List of journal identifiers (e.g. URL, OAI or ISSN). The type is\n            prepended to the identifier string (e.g. 'issn:2296-0597')\n          items:\n            type: string\n          type: array\n        language:\n          description: Language of the journal\n          type: string\n        publisher:\n          description: Publisher of the journal\n          type: string\n        rights:\n          description: Copyright license of the journal\n          type: string\n        subjects:\n          description: List of journal subjects\n          items:\n            type: string\n          type: array\n        title:\n          description: Journal title\n          type: string\n      required:\n        - identifiers\n    JournalResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Journal\"\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - NOT_FOUND\n            - TOO_MANY_QUERIES\n            - MISSING_PARAMETER\n            - INVALID_PARAMETER\n          type: string\n      required:\n        - status\n    JournalSearchResponse:\n      properties:\n        data:\n          description: Search results\n          items:\n            $ref: \"#/components/schemas/Journal\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - NOT_FOUND\n            - TOO_MANY_QUERIES\n            - MISSING_PARAMETER\n            - INVALID_PARAMETER\n          type: string\n        totalHits:\n          description: Total number of journals matching the search criteria\n          type: integer\n      required:\n        - status\n        - totalHits\n    Language:\n      properties:\n        deletedStatus:\n          description: \"The deleted status of the document: 0 for allowed, 1 for deleted, 2\n            for disabled\"\n          type: integer\n        depositedDate:\n          description: The date the item was deposited in the Data Provider\n            (repository/Journal)\n          format: date\n          type: string\n        indexed:\n          description: \"The index status of the document: 0 for not indexed, 1 for indexed\"\n          type: integer\n        metadataUpdated:\n          description: The last date metadata of this article were updated\n          format: date\n          type: string\n        pdfOrigin:\n          description: The remote URL where we aquired the PDF\n          type: string\n        pdfSize:\n          description: The size of pdf in bytes\n          type: integer\n        pdfStatus:\n          description: \"The pdf status flag of article: 0 no pdf, 1 pdf exists\"\n          type: integer\n        tdmOnly:\n          description: \"The tdmOnly flag of the article: 0 normal, 1 tdm only\"\n          type: boolean\n        textStatus:\n          description: \"The text status flag of article: 0 does not exist, 1 exists\"\n          type: integer\n        timestamp:\n          description: The date of article as given by the repository\n          format: date\n          type: string\n    RawRecordXml:\n      properties:\n        datetime:\n          description: Timestamp when CORE harvested the metadata\n          format: date-format\n          type: string\n        metadata:\n          description: The raw XML metadata\n          type: string\n    Repository:\n      properties:\n        dataProviderSourceStats:\n          description: Statistics based on the Data Provider/repository rather than data\n            processed and filtered by CORE. This array is in beta and may change\n            in the future\n          items: {}\n          type: array\n        history:\n          description: The number of deposits in the repository per date. This field is in\n            beta and may change in the future\n          items: {}\n          type: array\n        historyCumulative:\n          description: The number of deposits in the repository per date over time\n            (cumulative). This field is in beta and may change in the future\n          items: {}\n          type: array\n        id:\n          description: CORE repository ID\n          type: integer\n        lastSeen:\n          description: The time the repository was last harvested by CORE. This field is in\n            beta and may change in the future\n          format: date-time\n          type: string\n        name:\n          description: Repository name\n          type: string\n        openDoarId:\n          description: ID of the repository in Open DOAR\n          type: integer\n        repositoryLocation:\n          $ref: \"#/components/schemas/RepositoryLocation\"\n        repositoryStats:\n          $ref: \"#/components/schemas/RepositoryStats\"\n        uri:\n          description: Repository URI\n          type: string\n        urlHomepage:\n          description: Repository homepage\n          type: string\n        urlOaipmh:\n          description: Repository OAI-PMH endpoint\n          type: string\n    RepositoryDocument: {}\n    RepositoryLocation:\n      properties:\n        country:\n          description: Country name\n          type: string\n        countryCode:\n          description: Two letter country code\n          type: string\n        id:\n          description: CORE repository ID\n          type: integer\n        latitude:\n          type: integer\n        longitude:\n          type: integer\n        repositoryName:\n          description: Repository name\n          type: string\n    RepositoryResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Repository\"\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n      required:\n        - status\n    RepositorySearchResponse:\n      properties:\n        data:\n          description: Search results\n          items:\n            $ref: \"#/components/schemas/Repository\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n        totalHits:\n          description: Total number of repositories matching the search criteria\n          type: integer\n      required:\n        - status\n        - totalHits\n    RepositoryStats:\n      properties:\n        countFulltext:\n          description: Repository fulltext count\n          type: integer\n        countMetadata:\n          description: Repository metadata count\n          type: integer\n        dateLastProcessed:\n          description: Last repository processing date\n          type: string\n    Resource:\n      properties:\n        id:\n          description: Identifier of the resource\n          type: string\n        type:\n          description: Type of the resource\n          enum:\n            - journal\n            - article\n            - repository\n          type: string\n      required:\n        - id\n        - type\n    SearchAllResponse:\n      properties:\n        data:\n          description: List of relevant resources\n          items:\n            $ref: \"#/components/schemas/Resource\"\n          type: array\n        status:\n          description: Operation status\n          enum:\n            - OK\n            - Not found\n            - Too many queries\n            - Missing parameter\n            - Invalid parameter\n            - Parameter out of bounds\n          type: string\n        totalHits:\n          description: Total number of items matching the search criteria\n          type: integer\n      required:\n        - data\n        - status\n        - totalHits\n    SearchRequest:\n      properties:\n        page:\n          default: 1\n          description: Which page of the search results should be retrieved. Can be any\n            number from 1 to 100, default is 1 (first page)\n          maximum: 100\n          minimum: 1\n          type: integer\n        pageSize:\n          default: 10\n          description: The number of results to return per page. Can be any number from 10\n            to 100, default is 10\n          maximum: 100\n          minimum: 10\n          type: integer\n        query:\n          description: Search query\n          type: string\n      required:\n        - query\n    Similar:\n      properties:\n        id:\n          description: CORE ID of the similar article\n          type: integer\n        score:\n          description: Similarity score\n          format: double\n          type: number\n        title:\n          description: Title of the similar article\n          type: string\n      required:\n        - id\n        - score\n    SimilarRequest:\n      properties:\n        text:\n          description: Find Similar articles based on this string\n          type: string\n      required:\n        - text\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/core.ac.uk-2.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/core.ac.uk-2.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}