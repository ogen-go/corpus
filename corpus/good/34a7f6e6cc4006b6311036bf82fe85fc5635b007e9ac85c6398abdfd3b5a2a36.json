{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apache/incubator-datalab"
		},
		"file": {
			"name": "endpoint-api.json",
			"size": 0,
			"path": "services/self-service/src/main/resources/webapp/src/assets/endpoint-api.json",
			"byteSize": 23761,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"servers\": [\n  {\n    \"description\": \"SwaggerHub API Auto Mocking\",\n    \"url\": \"https://virtserver.swaggerhub.com/bhliva/DLabEndpointAPI/0.0.1\"\n  }\n  ],\n  \"info\": {\n    \"description\": \"DataLab cloud endpoint API\",\n    \"version\": \"0.0.1\",\n    \"title\": \"DataLab cloud endpoint API\",\n    \"contact\": {\n      \"email\": \"bohdan_hliva@epam.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"tags\": [\n  {\n    \"name\": \"notebooks\",\n    \"description\": \"API connected with notebook actions\"\n  },\n  {\n    \"name\": \"templates\",\n    \"description\": \"API that describes available templates\"\n  },\n  {\n    \"name\": \"projects\",\n    \"description\": \"API for managing projects\"\n  }\n  ],\n  \"paths\": {\n    \"/notebook\": {\n      \"post\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Creates new notebook\",\n        \"operationId\": \"createNotebook\",\n        \"requestBody\": {\n          \"description\": \"Notebook object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateNotebookDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Request for notebook creation was accepted\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking notebook status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{project}/{name}/status\": {\n      \"get\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Get notebook status\",\n        \"operationId\": \"getStatus\",\n        \"parameters\": [\n        {\n          \"name\": \"project\",\n          \"in\": \"path\",\n          \"description\": \"Project associated with the notebook\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Notebook name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Actual notebook status\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{project}/{name}/start\": {\n      \"put\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Start stopped notebook instance\",\n        \"operationId\": \"startNotebook\",\n        \"parameters\": [\n        {\n          \"name\": \"project\",\n          \"in\": \"path\",\n          \"description\": \"Project associated with the notebook\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Notebook name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Request for starting notebook was accepted\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking notebook status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"There is no instance stopped instance with provided name\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{project}/{name}/stop\": {\n      \"put\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Stop stopped notebook instance\",\n        \"operationId\": \"stopNotebook\",\n        \"parameters\": [\n        {\n          \"name\": \"project\",\n          \"in\": \"path\",\n          \"description\": \"Project associated with the notebook\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Notebook name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Request for stopping notebook was accepted\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking notebook status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"bad input parameter\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"There is no instance started instance with provided name\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{project}/{name}\": {\n      \"delete\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Terminates notebook\",\n        \"operationId\": \"removeNotebook\",\n        \"parameters\": [\n        {\n          \"name\": \"project\",\n          \"in\": \"path\",\n          \"description\": \"Project associated with the notebook\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Notebook name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Request for notebook deletion was accepted\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking notebook status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Notebook with passed name not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{project}/{name}/lib\": {\n      \"parameters\": [\n      {\n        \"name\": \"project\",\n        \"in\": \"path\",\n        \"description\": \"Project associated with the notebook\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      {\n        \"name\": \"name\",\n        \"in\": \"path\",\n        \"description\": \"Notebook name\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      }\n      ],\n      \"get\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Get installed libraries for notebook\",\n        \"operationId\": \"getIntalledLibs\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of installed libraries\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibList\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"summary\": \"Install new libs on notebook\",\n        \"operationId\": \"installLibs\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LibList\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Lib installation in progress\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for getting status of library installation\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/notebook/{type}/lib\": {\n      \"get\": {\n        \"summary\": \"Get available libraries\",\n        \"operationId\": \"getAvailableLibs\",\n        \"tags\": [\n          \"notebooks\"\n        ],\n        \"parameters\": [\n        {\n          \"name\": \"type\",\n          \"in\": \"path\",\n          \"description\": \"Project associated with the notebook\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"jupyter\",\n              \"rstudio\",\n              \"tensor\",\n              \"zeppelin\",\n              \"jupyter_tensor\",\n              \"rstudio_tensor\",\n              \"deep_learning\"\n            ]\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return information about available libaries\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LibList\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/template/{type}\": {\n      \"get\": {\n        \"tags\": [\n          \"templates\"\n        ],\n        \"summary\": \"Get available templates\",\n        \"operationId\": \"getTemplates\",\n        \"parameters\": [\n        {\n          \"name\": \"type\",\n          \"in\": \"path\",\n          \"description\": \"Template type\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"exploratory\",\n              \"computational\"\n            ]\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return information about available templates\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TemplateList\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/project\": {\n      \"post\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Creates new project\",\n        \"operationId\": \"createProject\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateProjectDTO\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Project creation in progress\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI of status project resource\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/project/{name}/status\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get project status\",\n        \"operationId\": \"getProjectStatus\",\n        \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Project name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Actual project status\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/project/{name}\": {\n      \"delete\": {\n        \"summary\": \"Remove existing project\",\n        \"operationId\": \"removeProject\",\n        \"tags\": [\n          \"projects\"\n        ],\n        \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Project name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Project remove in progress\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking resource status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Project with passed name not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/project/{name}/start\": {\n      \"put\": {\n        \"summary\": \"Start existing project\",\n        \"operationId\": \"startProject\",\n        \"tags\": [\n          \"projects\"\n        ],\n        \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Project name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Start existing project\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking resource status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Project with passed name not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/project/{name}/stop\": {\n      \"put\": {\n        \"summary\": \"Stop existing project\",\n        \"operationId\": \"stopProject\",\n        \"tags\": [\n          \"projects\"\n        ],\n        \"parameters\": [\n        {\n          \"name\": \"name\",\n          \"in\": \"path\",\n          \"description\": \"Project name\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Stop existing project\",\n            \"headers\": {\n              \"Location\": {\n                \"description\": \"URI for checking resource status\",\n                \"required\": true,\n                \"style\": \"simple\",\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Project with passed name not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Status\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"status\"\n        ],\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"running\",\n              \"creating\",\n              \"configuring\",\n              \"failed\",\n              \"starting\",\n              \"stopping\",\n              \"stopped\",\n              \"installing\"\n            ]\n          },\n          \"error_message\": {\n            \"type\": \"string\",\n            \"description\": \"in case of error should be filled\"\n          }\n        }\n      },\n      \"LibList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Library\"\n        }\n      },\n      \"LibraryGroup\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Group name\"\n          },\n          \"desription\": {\n            \"type\": \"string\",\n            \"description\": \"Group description\"\n          }\n        }\n      },\n      \"Library\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreateProjectDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"$ref\": \"#/components/schemas/ProjectDTO\"\n          },\n          \"cloudProperties\": {\n            \"$ref\": \"#/components/schemas/CloudConfig\"\n          }\n        }\n      },\n      \"ProjectDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"useSharedImages\": {\n            \"type\": \"boolean\"\n          },\n          \"key\": {\n            \"type\": \"string\",\n            \"description\": \"Project public key\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TemplateList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/TemplateDTO\"\n        }\n      },\n      \"TemplateDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"vendor\": {\n            \"type\": \"string\"\n          },\n          \"shapes\": {\n            \"$ref\": \"#/components/schemas/ShapeList\"\n          }\n        }\n      },\n      \"ShapeList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/ShapeDTO\"\n        }\n      },\n      \"ShapeDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"ram\": {\n            \"type\": \"string\"\n          },\n          \"cpu\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"purpose\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"For testing\",\n              \"Compute optimized\",\n              \"GPU optimized\",\n              \"Memory optimized\"\n            ]\n          }\n        }\n      },\n      \"CloudConfig\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"os\"\n        ],\n        \"properties\": {\n          \"os\": {\n            \"type\": \"string\",\n            \"description\": \"Operation system\"\n          },\n          \"sbn\": {\n            \"type\": \"string\",\n            \"example\": \"dlab-sbn\",\n            \"description\": \"service base name\"\n          },\n          \"subnetId\": {\n            \"type\": \"string\",\n            \"description\": \"subnet id/name\"\n          },\n          \"vpcId\": {\n            \"type\": \"string\",\n            \"description\": \"vpc id/name\"\n          },\n          \"region\": {\n            \"type\": \"string\"\n          },\n          \"zone\": {\n            \"type\": \"string\"\n          },\n          \"securityGroupIds\": {\n            \"type\": \"string\"\n          },\n          \"confTagResourceId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreateNotebookDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"notebook\": {\n            \"$ref\": \"#/components/schemas/Notebook\"\n          },\n          \"cloudConfig\": {\n            \"$ref\": \"#/components/schemas/CloudConfig\"\n          }\n        }\n      },\n      \"Notebook\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"type\",\n          \"notebook_name\",\n          \"git_creds\",\n          \"spark_config\",\n          \"project\"\n        ],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"jupyter\",\n              \"rstudio\",\n              \"tensor\",\n              \"zeppelin\",\n              \"jupyter_tensor\",\n              \"rstudio_tensor\",\n              \"deep_learning\"\n            ]\n          },\n          \"notebook_name\": {\n            \"type\": \"string\",\n            \"example\": \"Jup\"\n          },\n          \"spark_config\": {\n            \"$ref\": \"#/components/schemas/ClusterConfig\"\n          },\n          \"git_creds\": {\n            \"$ref\": \"#/components/schemas/GitCredentials\"\n          },\n          \"project\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          }\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"value\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GitCredentials\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/GitCredential\"\n        }\n      },\n      \"GitCredential\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"hostname\",\n          \"email\",\n          \"login\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"hostname\": {\n            \"type\": \"string\",\n            \"format\": \"url\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"login\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ClusterConfig\": {\n        \"required\": [\n          \"Properties\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"Classification\": {\n            \"type\": \"string\",\n            \"example\": \"test\"\n          },\n          \"Properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            }\n          },\n          \"Configurations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ClusterConfig\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/apache/incubator-datalab@d1b261b680389918e714a296da6a3817ed448227/-/blob/services/self-service/src/main/resources/webapp/src/assets/endpoint-api.json",
			"externalURLs": [
				{
					"url": "https://github.com/apache/incubator-datalab/blob/d1b261b680389918e714a296da6a3817ed448227/services/self-service/src/main/resources/webapp/src/assets/endpoint-api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}