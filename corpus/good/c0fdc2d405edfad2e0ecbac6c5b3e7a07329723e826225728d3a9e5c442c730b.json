{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AdobeDocs/experience-manager-cloud-service.en"
		},
		"file": {
			"name": "batch-api.yaml",
			"size": 0,
			"path": "help/forms/assets/batch-api.yaml",
			"byteSize": 20000,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e\n    AEM Forms as a Cloud Service - Communications APIs.\n\n\n    # Introduction\n\n    Communications APIs help you combine XFA-based XDP or PDF templates and\n    Acrobat Forms (AcroForm) with XML data to generate print documents in\n    various formats. It enables you to create applications that let you:\n\n\n    - Generate documents by populating template files with XML data. For\n    example, receipts, bills, and statements.\n\n    - Generate forms in various formats, including non-interactive PDF print\n    streams.\n\n    - Generate print PDFs from XFA form PDFs.\n\n    - Generate PDF, PostScript, PCL, and ZPL documents in bulk by merging\n    multiple sets of data with source templates.\n\n\n    These APIs help generate documents in bulk / asynchronous mode configuring\n    various parameters for the conversion and then starting the batch process.\n\n\n    You can find out more about document generation at\n\n\n    [AEM Forms as a Cloud Service - Communications\n    Overview](https://www.adobe.com/go/learn_aemformscs_communications_en)\n\n\n    # Before you start\n\n    Make user account of your developer or techincal account member of\n    forms-user group. If you do not have a technical account, make a call to AEM\n    as a Cloud Service. When you use service credential a techincal account is\n    created on the first call.\n\n\n    # Set up Communicaions APIs\n\n    Contact formscsbeta@adobe.com to enable Communications APIs for your\n    organization. Send name of your organization, program details, and email\n    address of your AEM as a Cloud Service administrator. Also, set up a [local\n    development\n    environment](https://experienceleague.adobe.com/docs/experience-manager-forms-cloud-service/forms/setup-environment/setup-local-development-environment.html)\n    to test and develop the functionality using Communication APIs locally.\n  title: AEM Forms as a Cloud Service - Communications\n  version: 1.0.0-oas3\nservers:\n  - url: \u003e-\n      https://author-p8857-e10452-cmstg.adobeaemcloud.com/adobe/forms/batch/output\ntags:\n  - name: Communications Services\n    description: Communications Services Capabilities\n  - name: Batch Configuration\n    description: Configuration of a Batch Job\n  - name: Batch Execution\n    description: Execution Instances of a Batch Job\nexternalDocs:\n  description: Find out more\n  url: https://www.adobe.com/go/learn_aemformscs_communications_en\npaths:\n  /config:\n    post:\n      tags:\n        - Batch Configuration\n      summary: Create a batch configuration\n      operationId: CreateBatchConfig\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchConfig'\n      responses:\n        '201':\n          description: Batch configuration has been created.\n          headers:\n            Location:\n              $ref: '#/components/headers/Location'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '409':\n          $ref: '#/components/responses/RecordExists'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /config/{configName}:\n    get:\n      tags:\n        - Batch Configuration\n      summary: Get a batch config by config name\n      operationId: GetBatchConfigbyName\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n      responses:\n        '200':\n          $ref: '#/components/responses/BatchConfig'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n    put:\n      tags:\n        - Batch Configuration\n      summary: Update a batch config by config name\n      operationId: UpdateBatchConfigbyName\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchConfig'\n      responses:\n        '200':\n          $ref: '#/components/responses/BatchConfig'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n    delete:\n      tags:\n        - Batch Configuration\n      summary: Delete a batch config by config name\n      operationId: DeleteBatchConfigbyName\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n      responses:\n        '200':\n          description: Deleted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchConfig'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /configs:\n    get:\n      tags:\n        - Batch Configuration\n      summary: Get all batch configurations\n      operationId: GetAllBatchConfigs\n      responses:\n        '200':\n          $ref: '#/components/responses/BatchConfigs'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /config/{configName}/execution:\n    post:\n      tags:\n        - Batch Execution\n      summary: Start the batch execution\n      operationId: StartBatchRun\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartBatchRequest'\n      responses:\n        '202':\n          description: Accepted the batch execution request\n          headers:\n            Location:\n              description: Link of the batch execution instance\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /config/{configName}/execution/{executionId}:\n    get:\n      summary: Get batch execution details for a specific batch execution\n      operationId: GetBatchRunInstanceState\n      tags:\n        - Batch Execution\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n        - $ref: '#/components/parameters/ExecutionId'\n      responses:\n        '200':\n          $ref: '#/components/responses/BatchState'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /config/{configName}/execution/{executionId}/cancel:\n    put:\n      summary: Stop execution for this batch execution instance\n      tags:\n        - Batch Execution\n      operationId: CancelBatchRunInstance\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n        - $ref: '#/components/parameters/ExecutionId'\n      responses:\n        '202':\n          description: Request for batch execution cancellation accepted.\n          headers:\n            Location:\n              description: Link of the batch execution instance\n              schema:\n                type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\n  /config/{configName}/executions:\n    get:\n      tags:\n        - Batch Execution\n      summary: Get state of all batch instances being executed\n      operationId: GetAllRunningInstancesForBatch\n      parameters:\n        - $ref: '#/components/parameters/ConfigName'\n      responses:\n        '200':\n          $ref: '#/components/responses/BatchStates'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '408':\n          $ref: '#/components/responses/RequestTimeout'\n        '500':\n          $ref: '#/components/responses/InternalServer'\ncomponents:\n  schemas:\n    BatchConfig:\n      type: object\n      required:\n        - configName\n        - dataSourceConfigUri\n        - outputTypes\n        - template\n      properties:\n        configName:\n          $ref: '#/components/schemas/ConfigName'\n        dataSourceConfigUri:\n          type: string\n          description: This is the location of data source configuration containing details of cloud config (authentication info for cloud account), source (location for data files), and destinatin (location for output files generated and failure information details).\n        dataSource:\n          type: object\n          description: This inline data source object gets returned as part of BatchState\n          properties:\n            cloudConfigPath:\n               type: string\n          additionalProperties:\n            type: string\n        outputTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/OutputType'\n          description: \u003e-\n            It contains details of the output formats requested for generation. PDF, representing PDF format;\n            and PRINT representing all non-PDF formats e.g. PCL, PostScript etc.\n        template:\n          type: string\n          description: \u003e-\n            The template defines appearance and behavior of the PDF document.\n            The API supports templates of format - XDP and PDF document. You can\n            specify a reference path of your AEM Repository.\n        xci:\n          type: string\n          description: \u003e-\n            The service uses an XCI configuration file to configure various\n            properties of the PDF document. The XCI parameter has an effect only\n            when the template is of type XDP or an XDP-based PDF document.\n        contentRoot:\n          type: string\n          description: Root location within an AEM repository to resolve template from.\n        pdfOutputOptions:\n          $ref: '#/components/schemas/PDFOutputOptions'\n          description: It contains detailled configuration parameters which allow control over PDF file generation.\n        printedOutputOptionsList:\n          type: array\n          items:\n            $ref: '#/components/schemas/PrintedOutputOptions'\n          description: It contains detailled configuration parameters which allow control over PRINT file generation.\n    BatchState:\n      type: object\n      properties:\n        configName:\n          $ref: '#/components/schemas/ConfigName'\n        executionId:\n          $ref: '#/components/schemas/ExecutionId'\n        config:\n          $ref: '#/components/schemas/BatchConfig'\n          description: This contains details of the configuration used to run this execution instance of the batch.\n        status:\n          $ref: '#/components/schemas/BatchStatus'\n        outputStatuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/OutputStatus'\n        recordsCount:\n          type: integer\n          format: int64\n          description: This contains total records count for the batch.\n        startTime:\n          type: integer\n          format: int64\n          description: This contains details on when the batch execution was started, seconds since epoch (1970-01-01T00:00:00Z).\n        endTime:\n          type: integer\n          format: int64\n          description: This contains details on when the batch execution ended, seconds since epoch (1970-01-01T00:00:00Z).\n        errorInfo:\n          $ref: '#/components/schemas/ErrorInfo'\n    BatchStatus:\n      type: string\n      enum:\n        - PROCESSING\n        - SUCCESS\n        - FAILED\n    OutputStatus:\n      type: object\n      required:\n        - outputType\n        - renderType\n        - inProgressCount\n        - successCount\n        - failureCount\n      properties:\n        outputType:\n          $ref: '#/components/schemas/OutputType'\n        renderType:\n          $ref: '#/components/schemas/RenderType'\n        inProgressCount:\n          type: integer\n          format: int64\n        successCount:\n          type: integer\n          format: int64\n        failureCount:\n          type: integer\n          format: int64\n    ErrorInfo:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n    ErrorResponse:\n      type: object\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: integer\n          format: int32\n        detail:\n          type: string\n        instance:\n          type: string\n    DataSource:\n      type: object\n      required:\n        - container\n        - keyPath\n      properties:\n        container:\n          type: string\n        keyPath:\n          type: string\n    OutputType:\n      type: string\n      description: Add more info here\n      enum:\n        - PDF\n        - PRINT\n    RenderType:\n      type: string\n      enum:\n        - PostScript\n        - PCL\n        - ZPL\n        - DPL\n        - IPL\n        - TPCL\n    ConfigName:\n      type: string\n    ExecutionId:\n      type: string\n    StartBatchRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/BatchConfig'\n    PrintConfig:\n      type: object\n      description: print configuration.\n      properties:\n        xdcUri:\n          type: string\n          enum:\n            - hppcl5e.xdc\n            - hppcl5c.xdc\n            - ps_plain.xdc\n            - ps_plain_level3.xdc\n            - zpl300.xdc\n            - zpl600.xdc\n            - ipl300.xdc\n            - ipl400.xdc\n            - tpcl600.xdc\n            - dpl300.xdc\n            - dpl406.xdc\n            - dpl600.xdc\n        renderType:\n          $ref: '#/components/schemas/RenderType'\n    PrintedOutputOptions:\n      type: object\n      description: Various options for the API\n      properties:\n        locale:\n          type: string\n          description: Specify locale/language for the output document.\n          default: en\n        copies:\n          type: integer\n          description: Sets the number of copies to print. The default number is 1.\n          default: 1\n        paginationOverride:\n          type: string\n          description: Set the option to print on one side or both the sides of a page.\n          enum:\n            - simplex\n            - duplexShortEdge\n            - duplexLongEdge\n        printConfig:\n          $ref: '#/components/schemas/PrintConfig'\n      required:\n        - printConfig\n    PDFOutputOptions:\n      type: object\n      description: Various options for the API\n      properties:\n        locale:\n          type: string\n          description: Locale in which pdf should be rendered.\n          default: en\n        isTagged:\n          type: boolean\n          description: Specify if the PDF document can be tagged.\n          default: false\n        embedFonts:\n          type: boolean\n          description: Enable the option to embed fonts to the PDF document.\n          default: false\n        linearizedPDF:\n          type: boolean\n          default: false\n          description: Enable the option to optimize the PDF for web viewing.\n        retainFormState:\n          type: boolean\n          default: false\n          description: \u003e-\n            Set true to retain PDF Form state while flattening PDF. This\n            parameter has effect only when source template is an XFA-based PDF\n            Form and no input data is provided.\n        retainUnsignedSignatureFields:\n          type: boolean\n          default: false\n          description: \u003e-\n            Set true to retain interactive unsigned signature fields in\n            generated Flat PDF. It allows you to use PDF for gathering\n            signatures.\n        acrobatVersion:\n          type: string\n          description: \u003e-\n            Set the minimum version of Acrobat Reader required to open the PDF\n            document.\n          enum:\n            - Acrobat_10\n            - Acrobat_10_1\n            - Acrobat_11\n  responses:\n    BatchConfig:\n      description: Batch configuration\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BatchConfig'\n    BatchConfigs:\n      description: Batch configuration\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BatchConfig'\n    BatchState:\n      description: Batch state\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BatchState'\n    BatchStates:\n      description: Batch states\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BatchState'\n    BadRequest:\n      description: Bad Request. The request was invalid or cannot be served.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    RecordExists:\n      description: Record already exists\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    InternalServer:\n      description: \u003e-\n        Internal Server Error. The server has encountered an error and is unable\n        to process your request at this time.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    RequestTimeout:\n      description: Request timed out. An operation has timed out on the client.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Unauthorized:\n      description: Unauthorized. Authentication credentials are missing or incorrect.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n  parameters:\n    ConfigName:\n      name: configName\n      in: path\n      description: config name\n      required: true\n      schema:\n        $ref: '#/components/schemas/ConfigName'\n    ExecutionId:\n      name: executionId\n      in: path\n      description: execution identifier\n      required: true\n      schema:\n        $ref: '#/components/schemas/ExecutionId'\n  headers:\n    Location:\n      description: Link of the resource created\n      schema:\n        type: string",
			"canonicalURL": "/github.com/AdobeDocs/experience-manager-cloud-service.en@f72fcd0db48785d855d060c6b2cd609f316295b8/-/blob/help/forms/assets/batch-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/AdobeDocs/experience-manager-cloud-service.en/blob/f72fcd0db48785d855d060c6b2cd609f316295b8/help/forms/assets/batch-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}