{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-apimanagement-apimcertificates-2017-03-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-apimanagement-apimcertificates-2017-03-01-swagger.yaml",
			"byteSize": 17600,
			"content": "openapi: 3.0.0\ninfo:\n  description: Use these REST APIs for performing operations on Certificate entity in your\n    Azure API Management deployment. Certificates can be used to setup mutual\n    authentication with your Backend in API Management. For more information\n    refer to [How to secure backend using Mutual Auth\n    Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).\n  title: ApiManagementClient\n  version: 2017-03-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimcertificates.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: apimanagement-apimcertificates\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - apim_key: []\npaths:\n  /certificates:\n    get:\n      description: Lists a collection of all certificates in the specified service instance.\n      operationId: Certificate_List\n      parameters:\n        - description: \u003e-\n            | Field          | Supported operators    | Supported\n            functions                         |\n\n            |----------------|------------------------|---------------------------------------------|\n\n            | id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | subject        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n\n            | expirationDate | ge, le, eq, ne, gt, lt | N/A                                         |\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - description: Number of records to return.\n          in: query\n          name: $top\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - description: Number of records to skip.\n          in: query\n          name: $skip\n          required: false\n          x-ms-parameter-location: method\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementListCertificates:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: Returns a collection of Certificate entity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateCollection\"\n              examples:\n                ApiManagementListCertificates:\n                  $ref: \"#/components/examples/ApiManagementListCertificates\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Certificates\n      x-ms-odata: \"#/components/schemas/CertificateContract\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/certificates/{certificateId}\":\n    delete:\n      description: Deletes specific certificate.\n      operationId: Certificate_Delete\n      parameters:\n        - $ref: \"#/components/parameters/CertificateIdParameter\"\n        - description: The entity state (Etag) version of the certificate to delete. A\n            value of \"*\" can be used for If-Match to unconditionally apply the\n            operation.\n          in: header\n          name: If-Match\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteCertificates:\n              value: \"*\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementDeleteCertificates:\n              value: 2017-03-01\n      responses:\n        \"204\":\n          description: The certificate was successfully deleted.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Certificates\n    get:\n      description: Gets the details of the certificate specified by its identifier.\n      operationId: Certificate_Get\n      parameters:\n        - $ref: \"#/components/parameters/CertificateIdParameter\"\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementGetCertificates:\n              value: 2017-03-01\n      responses:\n        \"200\":\n          description: The response body contains the specified Certificate entity.\n          headers:\n            ETag:\n              description: Current entity state version. Should be treated as opaque and\n                used to make conditional HTTP requests.\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateContract\"\n              examples:\n                ApiManagementGetCertificates:\n                  $ref: \"#/components/examples/ApiManagementGetCertificates\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Certificates\n    put:\n      description: Creates or updates the certificate being used for authentication with\n        the backend.\n      externalDocs:\n        description: How to secure back-end services using client certificate\n          authentication in Azure API Management\n        url: https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/\n      operationId: Certificate_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/CertificateIdParameter\"\n        - description: The entity state (Etag) version of the certificate to update. A\n            value of \"*\" can be used for If-Match to unconditionally apply the\n            operation..\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n        - description: Version of the API to be used with the client request.\n          in: query\n          name: api-version\n          required: true\n          schema:\n            type: string\n          examples:\n            ApiManagementPutCertificates:\n              value: 2017-03-01\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateCreateOrUpdateParameters\"\n        description: Create or Update parameters.\n        required: true\n      responses:\n        \"200\":\n          description: The certificate details were successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateContract\"\n              examples:\n                ApiManagementPutCertificates:\n                  $ref: \"#/components/examples/ApiManagementPutCertificates\"\n        \"201\":\n          description: The new certificate was successfully added.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateContract\"\n              examples:\n                ApiManagementPutCertificates:\n                  $ref: \"#/components/examples/ApiManagementPutCertificates\"\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                description: Error Body contract.\n                properties:\n                  code:\n                    description: Service-defined error code. This code serves as a\n                      sub-status for the HTTP error code specified in the\n                      response.\n                    type: string\n                  details:\n                    description: The list of invalid fields send in request, in case of\n                      validation error.\n                    items:\n                      description: Error Field contract.\n                      properties:\n                        code:\n                          description: Property level error code.\n                          type: string\n                        message:\n                          description: Human-readable representation of property-level\n                            error.\n                          type: string\n                        target:\n                          description: Property name.\n                          type: string\n                    type: array\n                  message:\n                    description: Human-readable representation of the error.\n                    type: string\n      tags:\n        - Certificates\nservers:\n  - url: https://azure.local\n  - url: \"{apimBaseUrl}\"\n    variables:\n      apimBaseUrl:\n        description: The management endpoint of the API Management service, for example\n          https://myapimservice.management.azure-api.net.\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  examples:\n    ApiManagementListCertificates:\n      value:\n        count: 5\n        value:\n          - expirationDate: 2019-01-12T00:00:00Z\n            id: /certificates/5a58bad2a40f7ef2e05bcce2\n            subject: CN=localhost\n            thumbprint: C2728598048BE9C8BD559A159BD70525A4EA0367\n          - expirationDate: 2019-01-12T00:00:00Z\n            id: /certificates/5a58bb7ea40f7ef2e05be3d4\n            subject: CN=localhost\n            thumbprint: FB085F34A60C2AD8EED59C58B961BD5FBEFC38BE\n          - expirationDate: 2019-01-12T00:00:00Z\n            id: /certificates/5a58bc74a40f7e1048929958\n            subject: CN=localhost\n            thumbprint: 61EF1C104C1949E219995A2F0628F3D66D595F32\n          - expirationDate: 2019-01-12T00:00:00Z\n            id: /certificates/5a58bcd2a40f7e1048929a35\n            subject: CN=localhost\n            thumbprint: E359B9813314091B0EDED4AD804A9163D0FF3B84\n          - expirationDate: 2019-01-12T00:00:00Z\n            id: /certificates/5a58bcd2a40f7e1048929a36\n            subject: CN=localhost\n            thumbprint: 0997AAAF7DB834B9F5726F20FED2F3D3D086DA07\n    ApiManagementGetCertificates:\n      value:\n        expirationDate: 2019-01-12T00:00:00Z\n        id: /certificates/5a58be29a40f7e104892af64\n        subject: CN=localhost\n        thumbprint: F71A638FEC037AA826A30755DF2732DB5A4CB776\n    ApiManagementPutCertificates:\n      value:\n        expirationDate: 2019-01-12T08:00:00Z\n        id: /certificates/5a58bad2a40f7ef2e05bcce2\n        subject: CN=localhost\n        thumbprint: C2728598048BE9C8BD559A159BD70525A4EA0367\n  parameters:\n    CertificateIdParameter:\n      description: Identifier of the certificate entity. Must be unique in the current API\n        Management service instance.\n      in: path\n      name: certificateId\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        minLength: 1\n        maxLength: 256\n        pattern: ^[^*#\u0026+:\u003c\u003e?]+$\n      examples:\n        ApiManagementDeleteCertificates:\n          value: 5a58bb04a40f7ef2e05bd3a6\n        ApiManagementGetCertificates:\n          value: 5a58be29a40f7e104892af64\n        ApiManagementPutCertificates:\n          value: 5a58bad2a40f7ef2e05bcce2\n  securitySchemes:\n    apim_key:\n      in: header\n      name: Authorization\n      type: apiKey\n  schemas:\n    CertificateCollection:\n      description: Paged Certificates list representation.\n      properties:\n        count:\n          description: Total number of entities\n          type: integer\n        nextLink:\n          description: Next page link if any.\n          type: string\n        value:\n          description: Page values.\n          items:\n            $ref: \"#/components/schemas/CertificateContract\"\n          type: array\n    CertificateContract:\n      allOf:\n        - $ref: \"#/components/schemas/CertificateContractProperties\"\n      description: Certificate details.\n      properties:\n        id:\n          description: Identifier of the Certificate entity.\n          type: string\n    CertificateContractProperties:\n      description: Properties of the Certificate contract.\n      properties:\n        expirationDate:\n          description: \u003e\n            Expiration date of the certificate. The date conforms to the\n            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO\n            8601 standard.\n          format: date-time\n          type: string\n        subject:\n          description: Subject attribute of the certificate.\n          type: string\n        thumbprint:\n          description: Thumbprint of the certificate.\n          type: string\n      required:\n        - subject\n        - thumbprint\n        - expirationDate\n    CertificateCreateOrUpdateParameters:\n      description: Parameters supplied to the CreateOrUpdate certificate operation.\n      properties:\n        data:\n          description: Base 64 encoded certificate using the application/x-pkcs12\n            representation.\n          type: string\n        password:\n          description: Password for the Certificate\n          type: string\n      required:\n        - data\n        - password\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-apimanagement-apimcertificates-2017-03-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-apimanagement-apimcertificates-2017-03-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}