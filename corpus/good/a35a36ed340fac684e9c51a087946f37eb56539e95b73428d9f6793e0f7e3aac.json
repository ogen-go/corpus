{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/3commas-io/3commas-official-api-docs"
		},
		"file": {
			"name": "3commas_openapidoc.yml",
			"size": 0,
			"path": "3commas_openapidoc.yml",
			"byteSize": 155734,
			"content": "openapi: 3.0.1\ninfo:\n  title: 3commas.io\n  description: Public API\n  contact:\n    url: https://github.com/3commas-io/3commas-official-api-docs\n  version: 1.0.0\nservers:\n  - url: https://api.3commas.io/public/api\ntags:\n  - name: bots\n    description: Operations about bots\n  - name: deals\n    description: Operations about deals\n  - name: users\n    description: Operations about users\n  - name: accounts\n    description: Operations about accounts\n  - name: marketplace\n    description: Operations about marketplaces\n  - name: grid_bots\n    description: Operations about grid_bots\n  - name: loose_accounts\n    description: Operations about loose_accounts\n  - name: ping\n    description: Operations about pings\n  - name: time\n    description: Operations about times\n  - name: smart_trades_v2\n    description: Operations about smart_trades_v2s\npaths:\n  /ver1/bots/account_trade_info_smart_sell:\n    get:\n      description: account_trade_info_smart_sell\n      tags:\n        - bots\n      operationId: getVer1BotsAccountTradeInfoSmartSell\n      parameters:\n        - name: account_id\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: get AccountTradeInfoSmartSell(s)\n          content: {}\n  /ver1/bots/account_trade_info:\n    get:\n      description: account_trade_info\n      tags:\n        - bots\n      operationId: getVer1BotsAccountTradeInfo\n      parameters:\n        - name: account_id\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: get AccountTradeInfo(s)\n          content: {}\n  /ver1/bots/strategy_list:\n    get:\n      tags:\n        - bots\n      description: 'Available strategy list for bot (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1BotsStrategyList\n      parameters:\n        - name: account_id\n          in: query\n          description: id from GET /ver1/accounts\n          schema:\n            type: integer\n            format: int32\n        - name: type\n          in: query\n          schema:\n            type: string\n            enum:\n              - simple\n              - composite\n        - name: strategy\n          in: query\n          schema:\n            type: string\n            enum:\n              - long\n              - short\n      responses:\n        '200':\n          description: 'Available strategy list for bot (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/bots/pairs_black_list:\n    get:\n      tags:\n        - bots\n      description: 'Black List for bot pairs (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1BotsPairsBlackList\n      responses:\n        '200':\n          description: 'Black List for bot pairs (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/bots/update_pairs_black_list:\n    post:\n      tags:\n        - bots\n      description:\n        'Create or Update pairs BlackList for bots (Permission: BOTS_WRITE,\n        Security: SIGNED)'\n      operationId: postVer1BotsUpdatePairsBlackList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - pairs\n              properties:\n                pairs:\n                  type: array\n                  items:\n                    type: string\n        required: true\n      responses:\n        '201':\n          description:\n            'Create or Update pairs BlackList for bots (Permission: BOTS_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /ver1/bots/create_bot:\n    post:\n      tags:\n        - bots\n      description: 'Create bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsCreateBot\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - account_id\n                - active_safety_orders_count\n                - base_order_volume\n                - martingale_step_coefficient\n                - martingale_volume_coefficient\n                - max_safety_orders\n                - name\n                - pairs\n                - safety_order_step_percentage\n                - safety_order_volume\n                - strategy_list\n                - take_profit\n                - take_profit_type\n              properties:\n                name:\n                  type: string\n                account_id:\n                  type: integer\n                  description: id from GET /ver1/accounts\n                  format: int32\n                pairs:\n                  type: array\n                  description:\n                    Pass single pair to create SingleBot or any other number\n                    of pairs to create MultiBot\n                  items:\n                    type: string\n                max_active_deals:\n                  type: integer\n                  format: int32\n                  default: 1\n                base_order_volume:\n                  type: number\n                  description: Base order size\n                  format: double\n                base_order_volume_type:\n                  $ref: '#/components/schemas/OrderVolumeEnum'\n                take_profit:\n                  type: number\n                  description: Target profit(percentage)\n                  format: double\n                safety_order_volume:\n                  type: number\n                  description: Safety trade size\n                  format: double\n                safety_order_volume_type:\n                  $ref: '#/components/schemas/OrderVolumeEnum'\n                martingale_volume_coefficient:\n                  type: number\n                  format: double\n                  default: 1.0\n                martingale_step_coefficient:\n                  type: number\n                  format: double\n                  default: 1.0\n                max_safety_orders:\n                  type: integer\n                  description: Max safety trades count\n                  format: int32\n                active_safety_orders_count:\n                  type: integer\n                  description: Max active safety trades count\n                  format: int32\n                stop_loss_percentage:\n                  type: number\n                  format: double\n                cooldown:\n                  type: number\n                  format: double\n                trailing_enabled:\n                  type: boolean\n                  description: Enable trailing take profit. Binance only.\n                trailing_deviation:\n                  type: number\n                  description: required if trailing_enabled\n                  format: double\n                btc_price_limit:\n                  type: number\n                  format: double\n                strategy:\n                  type: string\n                  default: long\n                  enum:\n                    - short\n                    - long\n                safety_order_step_percentage:\n                  type: number\n                  description: Price deviation to open safety trades(percentage)\n                  format: double\n                take_profit_type:\n                  type: string\n                  description: 'Percentage: base – from base order, total – from total volume'\n                  default: base\n                  enum:\n                    - base\n                    - total\n                strategy_list:\n                  type: array\n                  description:\n                    \"For manual signals: [{\\\"strategy\\\":\\\"manual\\\"}] or\\\n                    \\ []\u003cbr\u003e\\n                                                   \\\n                    \\     For non-stop(1 pair only): [{\\\"strategy\\\":\\\"nonstop\\\"}]\u003cbr\u003e\\n\\\n                    \\                                                        QFL:\\\n                    \\ {\\\"options\\\": {\\\"type\\\": \\\"original\\\"}, {\\\"percent\\\": 3}, \\\"\\\n                    strategy\\\": \\\"qfl\\\"}] \u003cbr\u003e\\n                                 \\\n                    \\                       TradingView: [{\\\"options\\\": {\\\"time\\\"\\\n                    : \\\"5m\\\", \\\"type\\\": \\\"buy_or_strong_buy\\\"}, \\\"strategy\\\": \\\"trading_view\\\"\\\n                    } \"\n                leverage_type:\n                  $ref: '#/components/schemas/LeverageTypeBitmex'\n                leverage_custom_value:\n                  type: number\n                  description: required if leverage_type is isolated\n                  format: double\n                min_price:\n                  type: number\n                  description: minimum price to open deal\n                  format: double\n                max_price:\n                  type: number\n                  description: maximum price to open deal\n                  format: double\n                stop_loss_timeout_enabled:\n                  type: boolean\n                stop_loss_timeout_in_seconds:\n                  type: integer\n                  description: StopLoss timeout in seconds if StopLoss timeout enabled\n                  format: int32\n                min_volume_btc_24h:\n                  type: number\n                  format: double\n                tsl_enabled:\n                  type: boolean\n                  description: Enable trailing stop loss. Bitmex only.\n                deal_start_delay_seconds:\n                  type: integer\n                  description: Deal start delay in seconds\n                  format: int32\n                profit_currency:\n                  $ref: '#/components/schemas/ProfitCurrencyEnum'\n                start_order_type:\n                  $ref: '#/components/schemas/OrderType'\n                stop_loss_type:\n                  $ref: '#/components/schemas/StopLossType'\n                disable_after_deals_count:\n                  type: integer\n                  description: Bot will be disabled after opening this number of deals\n                  format: int32\n                allowed_deals_on_same_pair:\n                  type: integer\n                  description: Allow specific number of deals on the same pair. Multibot only.\n                  format: int32\n                close_deals_timeout:\n                  type: integer\n                  description: Close bot deals after given number of seconds. Must be greater than 60.\n                  format: int32\n        required: true\n      responses:\n        '201':\n          description: 'Create bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots:\n    get:\n      tags:\n        - bots\n      description: 'User bots (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1Bots\n      parameters:\n        - name: limit\n          in: query\n          description: 'Limit records. Max: 100'\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: offset\n          in: query\n          description: Offset records\n          schema:\n            type: integer\n            format: int32\n        - name: from\n          in: query\n          description: Param for a filter by created date\n          schema:\n            type: string\n        - name: account_id\n          in: query\n          description:\n            Account to show bots on. Return all if not specified. Gather\n            this from GET /ver1/accounts\n          schema:\n            type: integer\n            format: int32\n        - name: scope\n          in: query\n          schema:\n            type: string\n            enum:\n              - enabled\n              - disabled\n        - name: strategy\n          in: query\n          schema:\n            type: string\n            enum:\n              - long\n              - short\n        - name: sort_by\n          in: query\n          schema:\n            type: string\n            default: created_at\n            enum:\n              - profit\n              - created_at\n              - updated_at\n        - name: sort_direction\n          in: query\n          schema:\n            type: string\n            default: desc\n            enum:\n              - asc\n              - desc\n        - name: quote\n          in: query\n          description: Quote currency\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'User bots (Permission: BOTS_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BotEntity'\n  /ver1/bots/stats:\n    get:\n      tags:\n        - bots\n      description: 'Get bot stats (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1BotsStats\n      parameters:\n        - name: account_id\n          in: query\n          description:\n            Account to show on. Null - show for all. Gather this from GET\n            /ver1/accounts\n          schema:\n            type: integer\n            format: int32\n        - name: bot_id\n          in: query\n          description: Bots to show on. Null - show for all\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Get bot stats (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/copy_and_create:\n    post:\n      tags:\n        - bots\n      description:\n        'POST /bots/:id/copy_and_create. Permission: BOTS_WRITE, Security:\n        SIGNED'\n      operationId: postVer1BotsBotIdCopyAndCreate\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n                - secret\n              properties:\n                name:\n                  type: string\n                secret:\n                  type: string\n                amount:\n                  type: number\n                  description: Max amount for bot usage (Based on current rate)\n                  format: double\n        required: true\n      responses:\n        '201':\n          description:\n            'POST /bots/:id/copy_and_create. Permission: BOTS_WRITE, Security:\n            SIGNED'\n          content: {}\n  /ver1/bots/{bot_id}/update:\n    patch:\n      tags:\n        - bots\n      description: 'Edit bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: patchVer1BotsBotIdUpdate\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - active_safety_orders_count\n                - base_order_volume\n                - martingale_step_coefficient\n                - martingale_volume_coefficient\n                - max_safety_orders\n                - name\n                - pairs\n                - safety_order_step_percentage\n                - safety_order_volume\n                - strategy_list\n                - take_profit\n                - take_profit_type\n              properties:\n                name:\n                  type: string\n                pairs:\n                  type: array\n                  items:\n                    type: string\n                max_active_deals:\n                  type: integer\n                  format: int32\n                  default: 1\n                base_order_volume:\n                  type: number\n                  description: Base order size\n                  format: double\n                base_order_volume_type:\n                  $ref: '#/components/schemas/OrderVolumeEnum'\n                take_profit:\n                  type: number\n                  description: Target profit(percentage)\n                  format: double\n                safety_order_volume:\n                  type: number\n                  description: Safety trade size\n                  format: double\n                safety_order_volume_type:\n                  $ref: '#/components/schemas/OrderVolumeEnum'\n                martingale_volume_coefficient:\n                  type: number\n                  format: double\n                  default: 1.0\n                martingale_step_coefficient:\n                  type: number\n                  format: double\n                  default: 1.0\n                max_safety_orders:\n                  type: integer\n                  description: Max safety trades count\n                  format: int32\n                active_safety_orders_count:\n                  type: integer\n                  description: Max active safety trades count\n                  format: int32\n                stop_loss_percentage:\n                  type: number\n                  format: double\n                cooldown:\n                  type: number\n                  format: double\n                trailing_enabled:\n                  type: boolean\n                  description: Enable trailing take profit. Binance only.\n                trailing_deviation:\n                  type: number\n                  description: required if trailing_enabled\n                  format: double\n                btc_price_limit:\n                  type: number\n                  format: double\n                safety_order_step_percentage:\n                  type: number\n                  description: Price deviation to open safety trades(percentage)\n                  format: double\n                take_profit_type:\n                  type: string\n                  description:\n                    'Percentage: base – from base order, total – from total\n                    volume'\n                  default: total\n                  enum:\n                    - total\n                    - base\n                strategy_list:\n                  type: array\n                  description:\n                    \"For manual signals: [{\\\"strategy\\\":\\\"manual\\\"}] or\\\n                    \\ []\u003cbr\u003e\\n                                                   \\\n                    \\     For non-stop(1 pair only): [{\\\"strategy\\\":\\\"nonstop\\\"}]\u003cbr\u003e\\n\\\n                    \\                                                        QFL:\\\n                    \\ {\\\"options\\\": {\\\"type\\\": \\\"original\\\"}, {\\\"percent\\\": 3}, \\\"\\\n                    strategy\\\": \\\"qfl\\\"}] \u003cbr\u003e\\n                                 \\\n                    \\                       TradingView: [{\\\"options\\\": {\\\"time\\\"\\\n                    : \\\"5m\\\", \\\"type\\\": \\\"buy_or_strong_buy\\\", \\\"strategy\\\": \\\"trading_view\\\"\\\n                    } \"\n                leverage_type:\n                  $ref: '#/components/schemas/LeverageTypeBitmex'\n                leverage_custom_value:\n                  type: number\n                  description: required if leverage_type is isolated\n                  format: double\n                min_price:\n                  type: number\n                  description: minimum price to open deal\n                  format: double\n                max_price:\n                  type: number\n                  description: maximum price to open deal\n                  format: double\n                stop_loss_timeout_enabled:\n                  type: boolean\n                stop_loss_timeout_in_seconds:\n                  type: integer\n                  description: StopLoss timeout in seconds if StopLoss timeout enabled\n                  format: int32\n                min_volume_btc_24h:\n                  type: number\n                  format: double\n                tsl_enabled:\n                  type: boolean\n                  description: Enable trailing stop loss. Bitmex only.\n                deal_start_delay_seconds:\n                  type: integer\n                  description: Deal start delay in seconds\n                  format: int32\n                profit_currency:\n                  $ref: '#/components/schemas/ProfitCurrencyEnum'\n                start_order_type:\n                  $ref: '#/components/schemas/OrderType'\n                stop_loss_type:\n                  $ref: '#/components/schemas/StopLossType'\n                disable_after_deals_count:\n                  type: integer\n                  description: Bot will be disabled after opening this number of deals\n                  format: int32\n                allowed_deals_on_same_pair:\n                  type: integer\n                  description:\n                    Allow specific number of deals on the same pair. Multibot\n                    only.\n                  format: int32\n                close_deals_timeout:\n                  type: integer\n                  description:\n                    Close bot deals after given number of seconds. Must\n                    be greater than 60.\n                  format: int32\n        required: true\n      responses:\n        '200':\n          description: 'Edit bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/disable:\n    post:\n      tags:\n        - bots\n      description: 'Disable bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdDisable\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Disable bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/enable:\n    post:\n      tags:\n        - bots\n      description: 'Enable bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdEnable\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Enable bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/start_new_deal:\n    post:\n      tags:\n        - bots\n      description: 'Start new deal asap (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdStartNewDeal\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                pair:\n                  type: string\n                  description: Can be omited for simple bot\n                skip_signal_checks:\n                  type: boolean\n                  description:\n                    If false or not specified then all paramaters like\n                    signals or volume filters will be checked. If true - those checks\n                    will be skipped\n                skip_open_deals_checks:\n                  type: boolean\n                  description:\n                    If true then you will be allowed to open more then\n                    one deal per pair in composite bot\n      responses:\n        '201':\n          description: 'Start new deal asap (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/delete:\n    post:\n      tags:\n        - bots\n      description: 'Delete bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdDelete\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Delete bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/panic_sell_all_deals:\n    post:\n      tags:\n        - bots\n      description: 'Panic sell all bot deals (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdPanicSellAllDeals\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Panic sell all bot deals (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/cancel_all_deals:\n    post:\n      tags:\n        - bots\n      description: 'Cancel all bot deals (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1BotsBotIdCancelAllDeals\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Cancel all bot deals (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/deals_stats:\n    get:\n      tags:\n        - bots\n      description: 'Bot deals stats (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1BotsBotIdDealsStats\n      parameters:\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Bot deals stats (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/bots/{bot_id}/show:\n    get:\n      tags:\n        - bots\n      description: 'Bot info (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1BotsBotIdShow\n      parameters:\n        - name: include_events\n          in: query\n          schema:\n            type: boolean\n        - name: bot_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Bot info (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/deals:\n    get:\n      tags:\n        - deals\n      description: 'User deals (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1Deals\n      parameters:\n        - name: limit\n          in: query\n          description: 'Limit records. Max: 1_000'\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: offset\n          in: query\n          description: Offset records\n          schema:\n            type: integer\n            format: int32\n        - name: from\n          in: query\n          description: Param for a filter by created date\n          schema:\n            type: string\n        - name: account_id\n          in: query\n          description:\n            Account to show bots on. Return all if not specified. Gather\n            this from GET /ver1/accounts\n          schema:\n            type: integer\n            format: int32\n        - name: bot_id\n          in: query\n          description: Bot show deals on. Return all if not specified\n          schema:\n            type: integer\n            format: int32\n        - name: scope\n          in: query\n          description:\n            active - active deals, finished - finished deals, completed -\n            successfully completed, cancelled - cancelled deals, failed - failed deals,\n            any other value or null (default) - all deals\n          schema:\n            type: string\n        - name: order\n          in: query\n          schema:\n            type: string\n            default: created_at\n            enum:\n              - created_at\n              - updated_at\n              - closed_at\n              - profit\n              - profit_percentage\n        - name: order_direction\n          in: query\n          schema:\n            type: string\n            default: desc\n            enum:\n              - asc\n              - desc\n        - name: base\n          in: query\n          description: Base currency\n          schema:\n            type: string\n        - name: quote\n          in: query\n          description: Quote currency\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'User deals (Permission: BOTS_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DealEntity'\n  /ver1/deals/{deal_id}/convert_to_smart_trade:\n    post:\n      tags:\n        - deals\n      description: 'Convert to smart trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdConvertToSmartTrade\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                stop_bot:\n                  type: boolean\n      responses:\n        '201':\n          description: 'Convert to smart trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/update_max_safety_orders:\n    post:\n      tags:\n        - deals\n      description: 'Update max safety orders (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdUpdateMaxSafetyOrders\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - max_safety_orders\n              properties:\n                max_safety_orders:\n                  type: integer\n                  description: New maximum safety orders value\n                  format: int32\n        required: true\n      responses:\n        '201':\n          description: 'Update max safety orders (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/panic_sell:\n    post:\n      tags:\n        - deals\n      description: 'Panic sell deal (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdPanicSell\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Panic sell deal (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/cancel:\n    post:\n      tags:\n        - deals\n      description: 'Cancel deal (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdCancel\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Cancel deal (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/update_deal:\n    patch:\n      tags:\n        - deals\n      description: 'Update deal (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: patchVer1DealsDealIdUpdateDeal\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                take_profit:\n                  type: number\n                  description: New take profit value\n                  format: double\n                profit_currency:\n                  $ref: '#/components/schemas/ProfitCurrencyEnum'\n                take_profit_type:\n                  type: string\n                  description: base – from base order, total – from total volume\n                trailing_enabled:\n                  type: boolean\n                trailing_deviation:\n                  type: number\n                  description: New trailing deviation value\n                  format: double\n                stop_loss_percentage:\n                  type: number\n                  description: New stop loss percentage value\n                  format: double\n                max_safety_orders:\n                  type: integer\n                  description: New max safety orders value\n                  format: int32\n                active_safety_orders_count:\n                  type: integer\n                  description: New active safety orders count value\n                  format: int32\n                stop_loss_timeout_enabled:\n                  type: boolean\n                stop_loss_timeout_in_seconds:\n                  type: integer\n                  description: StopLoss timeout in seconds if StopLoss timeout enabled\n                  format: int32\n                tsl_enabled:\n                  type: boolean\n                  description: Trailing stop loss enabled\n                stop_loss_type:\n                  $ref: '#/components/schemas/StopLossType'\n                close_timeout:\n                  type: integer\n                  description:\n                    Close deal after given number of seconds. Must be greater\n                    than 60.\n                  format: int32\n      responses:\n        '200':\n          description: 'Update deal (Permission: BOTS_WRITE, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/DealEntity'\n  /ver1/deals/{deal_id}/update_tp:\n    post:\n      tags:\n        - deals\n      description:\n        'DEPRECATED, Update take profit condition. Deal status should be\n        bought (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdUpdateTp\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - new_take_profit_percentage\n              properties:\n                new_take_profit_percentage:\n                  type: number\n                  description: New take profit value\n                  format: double\n        required: true\n      responses:\n        '201':\n          description:\n            'DEPRECATED, Update take profit condition. Deal status should\n            be bought (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/show:\n    get:\n      tags:\n        - deals\n      description: 'Info about specific deal (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1DealsDealIdShow\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Info about specific deal (Permission: BOTS_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/DealEntity'\n  /ver1/deals/{deal_id}/cancel_order:\n    post:\n      tags:\n        - deals\n      description: 'Cancel manual safety orders (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdCancelOrder\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - order_id\n              properties:\n                order_id:\n                  type: string\n                  description: manual safety order id\n        required: true\n      responses:\n        '201':\n          description: 'Cancel manual safety orders (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/market_orders:\n    get:\n      tags:\n        - deals\n      description: 'Deal safety orders (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1DealsDealIdMarketOrders\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Deal safety orders (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/add_funds:\n    post:\n      tags:\n        - deals\n      description: 'Adding manual safety order (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1DealsDealIdAddFunds\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - is_market\n                - quantity\n                - rate\n              properties:\n                quantity:\n                  type: number\n                  description: safety order quantity\n                  format: double\n                is_market:\n                  type: boolean\n                  description: true - use MARKET order, false - use LIMIT order\n                response_type:\n                  type: string\n                  default: empty\n                  enum:\n                    - empty\n                    - deal\n                    - market_order\n                rate:\n                  type: number\n                  description: safety order rate. Required if LIMIT order used\n                  format: double\n        required: true\n      responses:\n        '201':\n          description: 'Adding manual safety order (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/deals/{deal_id}/data_for_adding_funds:\n    get:\n      tags:\n        - deals\n      description:\n        'Info required to add funds correctly: available amounts, exchange\n        limitations etc  (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1DealsDealIdDataForAddingFunds\n      parameters:\n        - name: deal_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description:\n            'Info required to add funds correctly: available amounts, exchange\n            limitations etc  (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/users/current_mode:\n    get:\n      tags:\n        - users\n      description:\n        'Current User Mode (Paper or Real) (Permission: ACCOUNTS_READ,\n        Security: SIGNED)'\n      operationId: getVer1UsersCurrentMode\n      responses:\n        '200':\n          description:\n            'Current User Mode (Paper or Real) (Permission: ACCOUNTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/users/change_mode:\n    post:\n      tags:\n        - users\n      description:\n        'Change User Mode (Paper or Real) (Permission: ACCOUNTS_WRITE,\n        Security: SIGNED)'\n      operationId: postVer1UsersChangeMode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - mode\n              properties:\n                mode:\n                  type: string\n                  enum:\n                    - paper\n                    - real\n        required: true\n      responses:\n        '201':\n          description:\n            'Change User Mode (Paper or Real) (Permission: ACCOUNTS_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/transfer:\n    post:\n      tags:\n        - accounts\n      description: 'Transfer coins between accounts (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - amount\n                - currency\n                - from_account_id\n                - to_account_id\n              properties:\n                currency:\n                  type: string\n                  description: 'Currency code(example: USDT)'\n                amount:\n                  type: number\n                  format: double\n                to_account_id:\n                  type: integer\n                  description: Recipient account ID (possible values in /transfer_data)\n                  format: int32\n                from_account_id:\n                  type: integer\n                  description: Sender account ID (possible values in /transfer_data)\n                  format: int32\n        required: true\n      responses:\n        '201':\n          description:\n            'Transfer coins between accounts (Permission: ACCOUNTS_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/transfer_history:\n    get:\n      tags:\n        - accounts\n      description: 'Transfers history (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1AccountsTransferHistory\n      parameters:\n        - name: account_id\n          in: query\n          description: Sender or Recipient account ID (possible values in /transfer_data)\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: currency\n          in: query\n          description: 'Currency code(example: USDT)'\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          description: Page number\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - name: per_page\n          in: query\n          description: Elements per page\n          schema:\n            type: integer\n            format: int32\n            default: 10\n      responses:\n        '200':\n          description: 'Transfers history (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/transfer_data:\n    get:\n      tags:\n        - accounts\n      description:\n        'Data for transfer between accounts (Permission: ACCOUNTS_READ,\n        Security: SIGNED)'\n      operationId: getVer1AccountsTransferData\n      responses:\n        '200':\n          description:\n            'Data for transfer between accounts (Permission: ACCOUNTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/new:\n    post:\n      tags:\n        - accounts\n      description: 'Add exchange account  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsNew\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n                - type\n              properties:\n                type:\n                  type: string\n                  description: check market_code in market_list method\n                name:\n                  type: string\n                  description: Account name (any string)\n                api_key:\n                  type: string\n                  description: Requires unless type = binance_dex\n                secret:\n                  type: string\n                  description: Requires unless type = binance_dex\n                address:\n                  type: string\n                  description: Requires if type = ethereumwallet\n                customer_id:\n                  type: string\n                  description: For Bitstamp\n                passphrase:\n                  type: string\n                  description: For Coinbase Pro (GDAX)\n                subaccount_name:\n                  type: string\n                  description: For FTX\n                how_connect:\n                  type: string\n                  enum:\n                    - mnemonic_phrase\n                    - keystore\n                keystore:\n                  description:\n                    keystore file content. Requires if type = binance_dex\n                    and how_connect = keystore\n                wallet_password:\n                  type: string\n                  description: Requires if type = binance_dex and how_connect = keystore\n                mnemonic_phrase:\n                  type: string\n                  description: Requires if type = binance_dex and how_connect = mnemonic_phrase\n        required: true\n      responses:\n        '201':\n          description: 'Add exchange account  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/AccountEntity'\n  /ver1/accounts/update:\n    post:\n      tags:\n        - accounts\n      description: Edit exchange account\n      operationId: postVer1AccountsUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - account_id\n              properties:\n                account_id:\n                  type: integer\n                  format: int32\n                name:\n                  type: string\n                  description: Account name (any string)\n                api_key:\n                  type: string\n                secret:\n                  type: string\n                customer_id:\n                  type: string\n                  description: For Bitstamp\n                passphrase:\n                  type: string\n                  description: For Coinbase Pro (GDAX)\n                subaccount_name:\n                  type: string\n                  description: For FTX\n                address:\n                  type: string\n                  description: For accounts with type = ethereumwallet\n                how_connect:\n                  type: string\n                  enum:\n                    - mnemonic_phrase\n                    - keystore\n                keystore: {}\n                wallet_password:\n                  type: string\n                mnemonic_phrase:\n                  type: string\n        required: true\n      responses:\n        '201':\n          description: Edit exchange account\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/AccountEntity'\n  /ver1/accounts:\n    get:\n      tags:\n        - accounts\n      description:\n        'User connected exchanges(and EthereumWallet) list (Permission:\n        ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1Accounts\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: per_page\n          in: query\n          description: Page size, from 1 to 100\n          schema:\n            maximum: 100\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description:\n            'User connected exchanges(and EthereumWallet) list (Permission:\n            ACCOUNTS_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AccountEntity'\n  /ver1/accounts/market_list:\n    get:\n      tags:\n        - accounts\n      description: 'Supported markets list (Permission: NONE, Security: NONE)'\n      operationId: getVer1AccountsMarketList\n      responses:\n        '200':\n          description: 'Supported markets list (Permission: NONE, Security: NONE)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MarketListItem'\n  /ver1/accounts/market_pairs:\n    get:\n      tags:\n        - accounts\n      description: 'All market pairs (Permission: NONE, Security: NONE)'\n      operationId: getVer1AccountsMarketPairs\n      parameters:\n        - name: pretty_display_type\n          in: query\n          description: deprecated. mandatory use market_code instead\n          schema:\n            type: string\n        - name: market_code\n          in: query\n          description: market_code from account model\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'All market pairs (Permission: NONE, Security: NONE)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/QuoteBaseString'\n                example: [BTC_ETH, BTC_LTC, BTC_BNB, BTC_NEO, ETH_QTUM, ETH_EOS, ETH_SNT, ETH_BNT, BTC_GAS, ETH_BNB, USDT_BTC, USDT_ETH, BTC_WTC, BTC_LRC, ETH_LRC]\n  /ver1/accounts/currency_rates_with_leverage_data:\n    get:\n      tags:\n        - accounts\n      description:\n        'Currency rates and limits with leverage data (Permission: NONE,\n        Security: NONE)'\n      operationId: getVer1AccountsCurrencyRatesWithLeverageData\n      parameters:\n        - name: market_code\n          in: query\n          description: market_code from account model\n          required: true\n          schema:\n            type: string\n        - name: pair\n          in: query\n          description: Pair\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description:\n            'Currency rates and limits with leverage data (Permission:\n            NONE, Security: NONE)'\n          content: {}\n  /ver1/accounts/currency_rates:\n    get:\n      tags:\n        - accounts\n      description: 'Currency rates and limits (Permission: NONE, Security: NONE)'\n      operationId: getVer1AccountsCurrencyRates\n      parameters:\n        - name: limit_type\n          in: query\n          description: Type of limits - bot or smart_trade\n          schema:\n            type: string\n        - name: pretty_display_type\n          in: query\n          description: deprecated. use market_code instead\n          schema:\n            type: string\n        - name: market_code\n          in: query\n          description:\n            market_code from account model. If you are retrieving data for\n            pairs, you must also include market_code\n          schema:\n            type: string\n        - name: pair\n          in: query\n          description: Pair\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Currency rates and limits (Permission: NONE, Security: NONE)'\n          content: {}\n  /ver1/accounts/{account_id}/deposit_data:\n    get:\n      tags:\n        - accounts\n      description: 'User Deposit Data (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1AccountsAccountIdDepositData\n      parameters:\n        - name: currency\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: network\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'User Deposit Data (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/networks_info:\n    get:\n      tags:\n        - accounts\n      description: 'Deposit/withdraw networks info (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1AccountsAccountIdNetworksInfo\n      parameters:\n        - name: purpose\n          in: query\n          description: Filter currencies with deposit/withdraw enabled\n          schema:\n            type: string\n            enum:\n              - deposit\n              - withdraw\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description:\n            'Deposit/withdraw networks info (Permission: ACCOUNTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/convert_dust_to_bnb:\n    post:\n      tags:\n        - accounts\n      description: 'Convert dust coins to BNB (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdConvertDustToBnb\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                codes:\n                  type: array\n                  description: Array of currency codes\n                  items:\n                    type: string\n      responses:\n        '201':\n          description: 'Convert dust coins to BNB (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/active_trading_entities:\n    get:\n      tags:\n        - accounts\n      description: 'Active trade entities (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1AccountsAccountIdActiveTradingEntities\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Active trade entities (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      active_bots_count:\n                        type: integer\n                      active_deals_count:\n                        type: integer\n                      active_smart_trades_count:\n                        type: integer\n                      active_grid_bots_count:\n                        type: integer\n                example:\n                  data:\n                    active_bots_count: 1\n                    active_deals_count: 199\n                    active_smart_trades_count: 172\n                    active_orders_count: 8\n                    active_grid_bots_count: 0\n  /ver1/accounts/{account_id}/sell_all_to_usd:\n    post:\n      tags:\n        - accounts\n      description: 'Sell all to USD  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdSellAllToUsd\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Sell all to USD  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/sell_all_to_btc:\n    post:\n      tags:\n        - accounts\n      description: 'Sell all to BTC  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdSellAllToBtc\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Sell all to BTC  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/balance_chart_data:\n    get:\n      tags:\n        - accounts\n      description: 'balance history data (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1AccountsAccountIdBalanceChartData\n      parameters:\n        - name: date_from\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: date_to\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'balance history data (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/load_balances:\n    post:\n      tags:\n        - accounts\n      description:\n        'Load balances for specified exchange  (Permission: ACCOUNTS_READ,\n        Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdLoadBalances\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description:\n            'Load balances for specified exchange  (Permission: ACCOUNTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/rename:\n    post:\n      tags:\n        - accounts\n      description: 'Rename exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdRename\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n        required: true\n      responses:\n        '201':\n          description: 'Rename exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/pie_chart_data:\n    post:\n      tags:\n        - accounts\n      description:\n        'Information about all user balances on specified exchange in pretty\n        for pie chart format (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdPieChartData\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description:\n            'Information about all user balances on specified exchange\n            in pretty for pie chart format (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/account_table_data:\n    post:\n      tags:\n        - accounts\n      description:\n        'Information about all user balances on specified exchange  (Permission:\n        ACCOUNTS_READ, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdAccountTableData\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description:\n            'Information about all user balances on specified exchange  (Permission:\n            ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/remove:\n    post:\n      tags:\n        - accounts\n      description: 'Remove exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1AccountsAccountIdRemove\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Remove exchange connection  (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}/leverage_data:\n    get:\n      tags:\n        - accounts\n      description:\n        'Information about account leverage (Permission: ACCOUNTS_READ,\n        Security: SIGNED)'\n      operationId: getVer1AccountsAccountIdLeverageData\n      parameters:\n        - name: pair\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description:\n            'Information about account leverage (Permission: ACCOUNTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/accounts/{account_id}:\n    get:\n      tags:\n        - accounts\n      description: |-\n        Single Account Info (Permission: ACCOUNTS_READ, Security: SIGNED)\n        You can send 'summary' instead of {account_id} to get summary account info\n      operationId: getVer1AccountsAccountId\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: |-\n            Single Account Info (Permission: ACCOUNTS_READ, Security: SIGNED)\n            You can send 'summary' instead of {account_id} to get summary account info\n          content: {}\n  /ver1/marketplace/presets:\n    get:\n      tags:\n        - marketplace\n      description: 'Marketplace presets (Permission: NONE, Security: SIGNED)'\n      operationId: getVer1MarketplacePresets\n      parameters:\n        - name: profit_per_day_from\n          in: query\n          schema:\n            type: number\n            format: double\n        - name: profit_per_day_to\n          in: query\n          schema:\n            type: number\n            format: double\n        - name: profit_per_month_from\n          in: query\n          schema:\n            type: number\n            format: double\n        - name: profit_per_month_to\n          in: query\n          schema:\n            type: number\n            format: double\n        - name: with_all_market_pairs\n          in: query\n          schema:\n            type: boolean\n        - name: days_running_from\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: days_running_to\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: bot_type\n          in: query\n          schema:\n            type: string\n        - name: bot_strategy\n          in: query\n          schema:\n            type: string\n        - name: cmc\n          in: query\n          schema:\n            type: string\n        - name: sort_by\n          in: query\n          schema:\n            type: string\n        - name: sort_direction\n          in: query\n          schema:\n            type: string\n            enum:\n              - asc\n              - desc\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - name: per_page\n          in: query\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                account_types:\n                  type: array\n                  items:\n                    type: string\n                markets:\n                  type: array\n                  items:\n                    type: string\n                pairs:\n                  type: array\n                  items:\n                    type: string\n                deal_start_conditions:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: 'Marketplace presets (Permission: NONE, Security: SIGNED)'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndexEntity'\n  /ver1/marketplace/items:\n    get:\n      tags:\n        - marketplace\n      description: 'All marketplace items (Permission: NONE, Security: NONE)'\n      operationId: getVer1MarketplaceItems\n      parameters:\n        - name: limit\n          in: query\n          description: 'Limit records. Max: 1_000'\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: offset\n          in: query\n          description: Offset records\n          schema:\n            type: integer\n            format: int32\n        - name: scope\n          in: query\n          description:\n            paid - show only paid signal providers. free - show only free\n            signal providers\n          schema:\n            type: string\n            default: all\n            enum:\n              - all\n              - paid\n              - free\n        - name: order\n          in: query\n          schema:\n            type: string\n            default: newest\n            enum:\n              - subscribers\n              - name\n              - newest\n        - name: locale\n          in: query\n          schema:\n            type: string\n            default: en\n            enum:\n              - en\n              - ru\n              - zh\n              - zh-CN\n              - es\n              - pt\n              - ko\n              - fr\n              - cs\n              - tr\n              - de\n      responses:\n        '200':\n          description: 'All marketplace items (Permission: NONE, Security: NONE)'\n          content: {}\n  /ver1/marketplace/{item_id}/signals:\n    get:\n      tags:\n        - marketplace\n      description: 'Marketplace Item Signals (Permission: NONE, Security: NONE)'\n      operationId: getVer1MarketplaceItemIdSignals\n      parameters:\n        - name: limit\n          in: query\n          description: 'Limit records. Max: 1_000'\n          schema:\n            type: integer\n            format: int32\n            default: 50\n        - name: offset\n          in: query\n          description: Offset records\n          schema:\n            type: integer\n            format: int32\n        - name: order\n          in: query\n          schema:\n            type: string\n            default: date\n            enum:\n              - pair\n              - exchange\n              - signal_type\n              - date\n        - name: order_direction\n          in: query\n          schema:\n            type: string\n            default: desc\n            enum:\n              - asc\n              - desc\n        - name: locale\n          in: query\n          schema:\n            type: string\n            default: en\n            enum:\n              - en\n              - ru\n              - zh\n              - zh-CN\n              - es\n              - pt\n              - ko\n              - fr\n              - cs\n              - tr\n              - de\n        - name: item_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Marketplace Item Signals (Permission: NONE, Security: NONE)'\n          content: {}\n  /ver1/grid_bots/ai:\n    post:\n      tags:\n        - grid_bots\n      description: 'Create AI Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1GridBotsAi\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - account_id\n                - pair\n                - total_quantity\n              properties:\n                name:\n                  type: string\n                  description: Grid Bot's name\n                  default: GridBot\n                account_id:\n                  type: integer\n                  description: id from GET /ver1/accounts\n                  format: int32\n                pair:\n                  type: string\n                total_quantity:\n                  type: number\n                  format: double\n                leverage_type:\n                  type: string\n                  description: Leverage type for futures accounts\n                  default: not_specified\n                  enum:\n                    - custom\n                    - cross\n                    - not_specified\n                    - isolated\n                leverage_custom_value:\n                  type: number\n                  description: Required if leverage_type = 'isolated'\n                  format: double\n        required: true\n      responses:\n        '201':\n          description: 'Create AI Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GridBotEntity'\n  /ver1/grid_bots/manual:\n    post:\n      tags:\n        - grid_bots\n      description: 'Create Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1GridBotsManual\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - account_id\n                - grids_quantity\n                - lower_price\n                - pair\n                - quantity_per_grid\n                - upper_price\n              properties:\n                name:\n                  type: string\n                  description: Grid Bot's name\n                  default: GridBot\n                account_id:\n                  type: integer\n                  description: id from GET /ver1/accounts\n                  format: int32\n                pair:\n                  type: string\n                upper_price:\n                  type: number\n                  format: double\n                lower_price:\n                  type: number\n                  format: double\n                quantity_per_grid:\n                  type: number\n                  format: double\n                grids_quantity:\n                  type: number\n                  format: double\n                upper_stop_loss_price:\n                  type: number\n                  format: double\n                upper_stop_loss_enabled:\n                  type: boolean\n                upper_stop_loss_action:\n                  type: string\n                  default: stop_bot\n                  enum:\n                    - stop_bot\n                    - stop_bot_and_buy\n                    - stop_bot_and_sell\n                    - stop_bot_and_close_position\n                lower_stop_loss_price:\n                  type: number\n                  format: double\n                lower_stop_loss_enabled:\n                  type: boolean\n                lower_stop_loss_action:\n                  type: string\n                  default: stop_bot\n                  enum:\n                    - stop_bot\n                    - stop_bot_and_buy\n                    - stop_bot_and_sell\n                    - stop_bot_and_close_position\n                leverage_type:\n                  type: string\n                  description: Leverage type for futures accounts\n                  default: not_specified\n                  enum:\n                    - custom\n                    - cross\n                    - not_specified\n                    - isolated\n                leverage_custom_value:\n                  type: number\n                  description: Required if leverage_type = 'isolated'\n                  format: double\n                is_enabled:\n                  type: boolean\n                  description: Turn on or off grid_bot after creation\n                  default: true\n        required: true\n      responses:\n        '201':\n          description: 'Create Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/ai_settings:\n    get:\n      tags:\n        - grid_bots\n      description: 'Get AI settings (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBotsAiSettings\n      parameters:\n        - name: pair\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: market_code\n          in: query\n          description: Market code from /accounts/market_list\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Get AI settings (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots:\n    get:\n      tags:\n        - grid_bots\n      description: 'Grid bots list (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBots\n      parameters:\n        - name: state\n          in: query\n          description: Filter by bot state\n          schema:\n            type: string\n            enum:\n              - enabled\n              - disabled\n        - name: sort_by\n          in: query\n          description: Sort column\n          schema:\n            type: string\n            enum:\n              - current_profit\n              - profit\n              - bot_id\n              - pair\n              - created_at\n              - updated_at\n        - name: sort_direction\n          in: query\n          description: Sort direction\n          schema:\n            type: string\n            enum:\n              - desc\n              - asc\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: from\n          in: query\n          description: Param for a filter by created date\n          schema:\n            type: string\n        - name: base\n          in: query\n          description: Base currency\n          schema:\n            type: string\n        - name: quote\n          in: query\n          description: Quote currency\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                account_ids:\n                  type: array\n                  description: Filter by account id\n                  items:\n                    type: integer\n                    format: int32\n                account_types:\n                  type: array\n                  description: Filter by account type\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: 'Grid bots list (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/market_orders:\n    get:\n      tags:\n        - grid_bots\n      description: 'Grid Bot Market Orders (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBotsIdMarketOrders\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Grid Bot Market Orders (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/profits:\n    get:\n      tags:\n        - grid_bots\n      description: 'Grid Bot Profits (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBotsIdProfits\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Grid Bot Profits (Permission: BOTS_READ, Security: SIGNED)'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GridBotProfitsEntity'\n  /ver1/grid_bots/{id}/ai:\n    patch:\n      tags:\n        - grid_bots\n      description: 'Edit Grid Bot (AI) (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: patchVer1GridBotsIdAi\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - pair\n                - total_quantity\n              properties:\n                name:\n                  type: string\n                  description: Grid Bot's name\n                  default: GridBot\n                pair:\n                  type: string\n                total_quantity:\n                  type: number\n                  format: double\n                leverage_type:\n                  type: string\n                  description: Leverage type for futures accounts\n                  default: not_specified\n                  enum:\n                    - custom\n                    - cross\n                    - not_specified\n                    - isolated\n                leverage_custom_value:\n                  type: number\n                  description: Required if leverage_type = 'isolated'\n                  format: double\n        required: true\n      responses:\n        '200':\n          description: 'Edit Grid Bot (AI) (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/manual:\n    patch:\n      tags:\n        - grid_bots\n      description: 'Edit Grid Bot (Manual) (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: patchVer1GridBotsIdManual\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - grids_quantity\n                - lower_price\n                - pair\n                - quantity_per_grid\n                - upper_price\n              properties:\n                name:\n                  type: string\n                  description: Grid Bot's name\n                  default: GridBot\n                pair:\n                  type: string\n                upper_price:\n                  type: number\n                  format: double\n                lower_price:\n                  type: number\n                  format: double\n                quantity_per_grid:\n                  type: number\n                  format: double\n                grids_quantity:\n                  type: number\n                  format: double\n                upper_stop_loss_price:\n                  type: number\n                  format: double\n                upper_stop_loss_enabled:\n                  type: boolean\n                upper_stop_loss_action:\n                  type: string\n                  enum:\n                    - stop_bot\n                    - stop_bot_and_buy\n                    - stop_bot_and_sell\n                    - stop_bot_and_close_position\n                lower_stop_loss_price:\n                  type: number\n                  format: double\n                lower_stop_loss_enabled:\n                  type: boolean\n                lower_stop_loss_action:\n                  type: string\n                  enum:\n                    - stop_bot\n                    - stop_bot_and_buy\n                    - stop_bot_and_sell\n                    - stop_bot_and_close_position\n                leverage_type:\n                  type: string\n                  description: Leverage type for futures accounts\n                  default: not_specified\n                  enum:\n                    - custom\n                    - cross\n                    - not_specified\n                    - isolated\n                leverage_custom_value:\n                  type: number\n                  description: Required if leverage_type = 'isolated'\n                  format: double\n        required: true\n      responses:\n        '200':\n          description: 'Edit Grid Bot (Manual) (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}:\n    get:\n      tags:\n        - grid_bots\n      description: 'Show Grid Bot (Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBotsId\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Show Grid Bot (Permission: BOTS_READ, Security: SIGNED)'\n          content: {}\n    delete:\n      tags:\n        - grid_bots\n      description: 'Delete Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: deleteVer1GridBotsId\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '204':\n          description: 'Delete Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/disable:\n    post:\n      tags:\n        - grid_bots\n      description: 'Disable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1GridBotsIdDisable\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Disable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/enable:\n    post:\n      tags:\n        - grid_bots\n      description: 'Enable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n      operationId: postVer1GridBotsIdEnable\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Enable Grid Bot (Permission: BOTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/grid_bots/{id}/required_balances:\n    get:\n      tags:\n        - grid_bots\n      description: 'Get required balances to start bot(Permission: BOTS_READ, Security: SIGNED)'\n      operationId: getVer1GridBotsIdRequiredBalances\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description:\n            'Get required balances to start bot(Permission: BOTS_READ,\n            Security: SIGNED)'\n          content: {}\n  /ver1/loose_accounts:\n    post:\n      tags:\n        - loose_accounts\n      description: 'Create Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: postVer1LooseAccounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - name\n                - tokens[amount]\n                - tokens[code]\n              properties:\n                name:\n                  type: string\n                tokens[code]:\n                  type: array\n                  items:\n                    type: string\n                tokens[amount]:\n                  type: array\n                  items:\n                    type: number\n                    format: double\n        required: true\n      responses:\n        '201':\n          description: 'Create Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/loose_accounts/available_currencies:\n    get:\n      tags:\n        - loose_accounts\n      description: 'Available currencies (Permission: ACCOUNTS_READ, Security: SIGNED)'\n      operationId: getVer1LooseAccountsAvailableCurrencies\n      parameters:\n        - name: contains\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Available currencies (Permission: ACCOUNTS_READ, Security: SIGNED)'\n          content: {}\n  /ver1/loose_accounts/{account_id}:\n    put:\n      tags:\n        - loose_accounts\n      description: 'Update Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n      operationId: putVer1LooseAccountsAccountId\n      parameters:\n        - name: account_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - tokens[amount]\n                - tokens[code]\n              properties:\n                name:\n                  type: string\n                tokens[code]:\n                  type: array\n                  items:\n                    type: string\n                tokens[amount]:\n                  type: array\n                  items:\n                    type: number\n                    format: double\n        required: true\n      responses:\n        '200':\n          description: 'Update Loose Account (Permission: ACCOUNTS_WRITE, Security: SIGNED)'\n          content: {}\n  /ver1/ping:\n    get:\n      tags:\n        - ping\n      description:\n        'Test connectivity to the Rest API (Permission: NONE, Security:\n        NONE)'\n      operationId: getVer1Ping\n      responses:\n        '200':\n          description:\n            'Test connectivity to the Rest API (Permission: NONE, Security:\n            NONE)'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PongEntity'\n  /ver1/time:\n    get:\n      tags:\n        - time\n      description:\n        'Test connectivity to the Rest API and get the current server time\n        (Permission: NONE, Security: NONE)'\n      operationId: getVer1Time\n      responses:\n        '200':\n          description:\n            'Test connectivity to the Rest API and get the current server\n            time (Permission: NONE, Security: NONE)'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeEntity'\n  /v2/smart_trades:\n    get:\n      tags:\n        - smart_trades_v2\n      description: 'Get smart trade history (Permission: SMART_TRADE_READ, Security: SIGNED)'\n      operationId: getV2SmartTrades\n      parameters:\n        - name: account_id\n          in: query\n          schema:\n            type: integer\n            format: int32\n        - name: pair\n          in: query\n          schema:\n            type: string\n        - name: type\n          in: query\n          schema:\n            type: string\n            enum:\n              - simple_buy\n              - simple_sell\n              - smart_sell\n              - smart_trade\n              - smart_cover\n              - smart_buy\n        - name: page\n          in: query\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - name: per_page\n          in: query\n          schema:\n            maximum: 100\n            minimum: 1\n            type: integer\n            format: int32\n            default: 10\n        - name: status\n          in: query\n          schema:\n            type: string\n            enum:\n              - all\n              - active\n              - finished\n              - successfully_finished\n              - cancelled\n              - failed\n        - name: order_by\n          in: query\n          schema:\n            type: string\n            default: status\n            enum:\n              - created_at\n              - updated_at\n              - closed_at\n              - status\n              - profit\n              - profit_percentage\n        - name: order_direction\n          in: query\n          schema:\n            type: string\n            default: desc\n            enum:\n              - asc\n              - desc\n        - name: from\n          in: query\n          description: Param for a filter by created date\n          schema:\n            type: string\n        - name: base\n          in: query\n          description: Base currency\n          schema:\n            type: string\n        - name: quote\n          in: query\n          description: Quote currency\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Get smart trade history (Permission: SMART_TRADE_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SmartTradeV2Entity'\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Create smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTrades\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - account_id\n                - leverage[enabled]\n                - pair\n                - position[conditional][order_type]\n                - position[conditional][price][value]\n                - position[conditional][trailing][enabled]\n                - position[conditional][trailing][percent]\n                - position[order_type]\n                - position[price][value]\n                - position[type]\n                - position[units][value]\n                - stop_loss[conditional][price][type]\n                - stop_loss[conditional][trailing][enabled]\n                - stop_loss[enabled]\n                - stop_loss[order_type]\n                - stop_loss[price][value]\n                - stop_loss[timeout][enabled]\n                - stop_loss[timeout][value]\n                - take_profit[enabled]\n                - take_profit[steps][][order_type]\n                - take_profit[steps][][price][type]\n                - take_profit[steps][][trailing][enabled]\n                - take_profit[steps][][trailing][percent]\n                - take_profit[steps][][volume]\n              properties:\n                account_id:\n                  type: integer\n                  description: id from GET /ver1/accounts\n                  format: int32\n                pair:\n                  type: string\n                instant:\n                  type: boolean\n                  description: true for Simple Buy and Simple Sell\n                skip_enter_step:\n                  type: boolean\n                  description: true only for Smart Sell\n                note:\n                  type: string\n                leverage[enabled]:\n                  type: boolean\n                leverage[type]:\n                  type: string\n                  enum:\n                    - custom\n                    - cross\n                    - isolated\n                leverage[value]:\n                  type: integer\n                  description: Cross leverage value\n                  format: int32\n                position[type]:\n                  type: string\n                  enum:\n                    - buy\n                    - sell\n                position[order_type]:\n                  type: string\n                  enum:\n                    - market\n                    - limit\n                    - conditional\n                position[units][value]:\n                  type: number\n                  description: Amount of units to buy\n                  format: double\n                position[price][value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n                position[conditional][price][value]:\n                  type: number\n                  description: Conditional trigger price\n                  format: double\n                position[conditional][price][type]:\n                  type: string\n                  description: By default ask for long, bid for short\n                  enum:\n                    - bid\n                    - ask\n                    - last\n                position[conditional][order_type]:\n                  $ref: '#/components/schemas/OrderType'\n                position[conditional][trailing][enabled]:\n                  type: boolean\n                position[conditional][trailing][percent]:\n                  type: number\n                  description: Should be 100% in the sum of all steps\n                  format: float\n                take_profit[enabled]:\n                  type: boolean\n                take_profit[steps][][order_type]:\n                  type: array\n                  description: market, limit\n                  items:\n                    $ref: '#/components/schemas/OrderType'\n                take_profit[steps][][volume]:\n                  type: array\n                  items:\n                    type: number\n                    format: float\n                take_profit[steps][][price][type]:\n                  type: array\n                  description: bid, ask, last\n                  items:\n                    type: string\n                take_profit[steps][][price][value]:\n                  type: array\n                  description:\n                    only if position has no trailing or position trailing\n                    is finished\n                  items:\n                    type: string\n                take_profit[steps][][price][percent]:\n                  type: array\n                  description:\n                    only if position has trailing and position trailing\n                    is not finished\n                  items:\n                    type: string\n                take_profit[steps][][trailing][enabled]:\n                  type: array\n                  items:\n                    type: string\n                take_profit[steps][][trailing][percent]:\n                  type: array\n                  items:\n                    type: string\n                stop_loss[enabled]:\n                  type: boolean\n                stop_loss[breakeven]:\n                  type: boolean\n                stop_loss[order_type]:\n                  $ref: '#/components/schemas/OrderType'\n                stop_loss[price][value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n                stop_loss[conditional][price][type]:\n                  type: string\n                  enum:\n                    - bid\n                    - ask\n                    - last\n                stop_loss[conditional][price][value]:\n                  type: number\n                  description:\n                    if position has no trailing or position trailing is\n                    finished\n                  format: double\n                stop_loss[conditional][price][percent]:\n                  type: number\n                  description:\n                    only if position has trailing and position trailing\n                    is not finished\n                  format: float\n                stop_loss[conditional][trailing][enabled]:\n                  type: boolean\n                stop_loss[timeout][enabled]:\n                  type: boolean\n                stop_loss[timeout][value]:\n                  type: integer\n                  format: int32\n        required: true\n      responses:\n        '201':\n          description: 'Create smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}:\n    get:\n      tags:\n        - smart_trades_v2\n      description: 'Get smart trade v2 by id (Permission: SMART_TRADE_READ, Security: SIGNED)'\n      operationId: getV2SmartTradesId\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Get smart trade v2 by id (Permission: SMART_TRADE_READ, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SmartTradeV2Entity'\n    delete:\n      tags:\n        - smart_trades_v2\n      description: 'Cancel smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: deleteV2SmartTradesId\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '204':\n          description: 'Cancel smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n    patch:\n      tags:\n        - smart_trades_v2\n      description: 'Update smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: patchV2SmartTradesId\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - leverage[enabled]\n                - position[conditional][order_type]\n                - position[conditional][price][value]\n                - position[conditional][trailing][enabled]\n                - position[conditional][trailing][percent]\n                - position[price][value]\n                - position[units][value]\n                - stop_loss[conditional][price][type]\n                - stop_loss[conditional][trailing][enabled]\n                - stop_loss[enabled]\n                - stop_loss[order_type]\n                - stop_loss[price][value]\n                - stop_loss[timeout][enabled]\n                - stop_loss[timeout][value]\n                - take_profit[enabled]\n                - take_profit[steps][][order_type]\n                - take_profit[steps][][price][type]\n                - take_profit[steps][][trailing][enabled]\n                - take_profit[steps][][trailing][percent]\n                - take_profit[steps][][volume]\n              properties:\n                leverage[enabled]:\n                  type: boolean\n                leverage[type]:\n                  type: string\n                  enum:\n                    - custom\n                    - cross\n                    - isolated\n                leverage[value]:\n                  type: integer\n                  description: Cross leverage value\n                  format: int32\n                position[units][value]:\n                  type: number\n                  description: Amount of units to buy\n                  format: double\n                position[price][value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n                position[conditional][price][value]:\n                  type: number\n                  description: Conditional trigger price\n                  format: double\n                position[conditional][price][type]:\n                  type: string\n                  description: By default ask for long, bid for short\n                  enum:\n                    - bid\n                    - ask\n                    - last\n                position[conditional][order_type]:\n                  $ref: '#/components/schemas/OrderType'\n                position[conditional][trailing][enabled]:\n                  type: boolean\n                position[conditional][trailing][percent]:\n                  type: number\n                  format: float\n                take_profit[enabled]:\n                  type: boolean\n                take_profit[steps][][order_type]:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/OrderType'\n                take_profit[steps][][volume]:\n                  type: array\n                  items:\n                    type: number\n                    format: float\n                take_profit[steps][][price][type]:\n                  type: array\n                  items:\n                    type: string\n                take_profit[steps][][price][value]:\n                  type: array\n                  items:\n                    type: string\n                take_profit[steps][][price][percent]:\n                  type: array\n                  items:\n                    type: string\n                take_profit[steps][][trailing][enabled]:\n                  type: array\n                  items:\n                    type: string\n                take_profit[steps][][trailing][percent]:\n                  type: array\n                  items:\n                    type: string\n                stop_loss[enabled]:\n                  type: boolean\n                stop_loss[breakeven]:\n                  type: boolean\n                stop_loss[order_type]:\n                  $ref: '#/components/schemas/OrderType'\n                stop_loss[price][value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n                stop_loss[conditional][price][type]:\n                  type: string\n                  enum:\n                    - bid\n                    - ask\n                    - last\n                stop_loss[conditional][price][value]:\n                  type: number\n                  description: Trigger price\n                  format: double\n                stop_loss[conditional][price][percent]:\n                  type: number\n                  format: float\n                stop_loss[conditional][trailing][enabled]:\n                  type: boolean\n                stop_loss[timeout][enabled]:\n                  type: boolean\n                stop_loss[timeout][value]:\n                  type: integer\n                  format: int32\n        required: true\n      responses:\n        '200':\n          description: 'Update smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/SmartTradeV2Entity'\n  /v2/smart_trades/{id}/reduce_funds:\n    post:\n      tags:\n        - smart_trades_v2\n      description:\n        'Reduce funds for smart trade v2 (Permission: SMART_TRADE_WRITE,\n        Security: SIGNED)'\n      operationId: postV2SmartTradesIdReduceFunds\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - order_type\n                - price[value]\n                - units[value]\n              properties:\n                order_type:\n                  $ref: '#/components/schemas/OrderType'\n                units[value]:\n                  type: number\n                  description: Amount of units to buy\n                  format: double\n                price[value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n        required: true\n      responses:\n        '201':\n          description:\n            'Reduce funds for smart trade v2 (Permission: SMART_TRADE_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}/add_funds:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Average for smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesIdAddFunds\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - order_type\n                - price[value]\n                - units[value]\n              properties:\n                order_type:\n                  $ref: '#/components/schemas/OrderType'\n                units[value]:\n                  type: number\n                  description: Amount of units to buy\n                  format: double\n                price[value]:\n                  type: number\n                  description: Price for limit order\n                  format: double\n        required: true\n      responses:\n        '201':\n          description:\n            'Average for smart trade v2 (Permission: SMART_TRADE_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}/close_by_market:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Close by market smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesIdCloseByMarket\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Close by market smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}/force_start:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Force start smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesIdForceStart\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description:\n            'Force start smart trade v2 (Permission: SMART_TRADE_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}/force_process:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Process smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesIdForceProcess\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Process smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{id}/set_note:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Set note to smart trade v2 (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesIdSetNote\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - note\n              properties:\n                note:\n                  type: string\n        required: true\n      responses:\n        '201':\n          description:\n            'Set note to smart trade v2 (Permission: SMART_TRADE_WRITE,\n            Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{smart_trade_id}/trades:\n    get:\n      tags:\n        - smart_trades_v2\n      description: 'Get smart trade v2 trades (Permission: SMART_TRADE_READ, Security: SIGNED)'\n      operationId: getV2SmartTradesSmartTradeIdTrades\n      parameters:\n        - name: smart_trade_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: 'Get smart trade v2 trades (Permission: SMART_TRADE_READ, Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{smart_trade_id}/trades/{id}/close_by_market:\n    post:\n      tags:\n        - smart_trades_v2\n      description: 'Panic close trade by market (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: postV2SmartTradesSmartTradeIdTradesIdCloseByMarket\n      parameters:\n        - name: smart_trade_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '201':\n          description: 'Panic close trade by market (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\n  /v2/smart_trades/{smart_trade_id}/trades/{id}:\n    delete:\n      tags:\n        - smart_trades_v2\n      description: 'Cancel trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n      operationId: deleteV2SmartTradesSmartTradeIdTradesId\n      parameters:\n        - name: smart_trade_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '204':\n          description: 'Cancel trade (Permission: SMART_TRADE_WRITE, Security: SIGNED)'\n          content: {}\ncomponents:\n  schemas:\n    QuoteBaseString:\n      type: string\n      pattern: '^[A-Z]{3,}_[A-Z]{3,}$'\n      description: 'Format: QUOTE_BASE'\n      example: BUSD_FTT\n    SymbolString:\n      type: string\n      pattern: '^[A-Z]{3,}$'\n      example: USDT\n    StringFloatNegative:\n      type: string\n      pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n      example: '-0.002'\n    StringFloatPositive:\n      type: string\n      pattern: '^\\d+(.\\d+|)$'\n      example: '0.05'\n    Percentage:\n      type: string\n      description: Percentage\n      pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n      example: '1.25'\n\n    DealStatusEnum:\n      type: string\n      description: 'Values: created, base_order_placed, bought, cancelled, completed, failed, panic_sell_pending, panic_sell_order_placed, panic_sold, cancel_pending, stop_loss_pending, stop_loss_finished, stop_loss_order_placed, switched, switched_take_profit, ttp_activated, ttp_order_placed, liquidated, bought_safety_pending, bought_take_profit_pending, settled'\n      enum:\n        - created\n        - base_order_placed\n        - bought\n        - cancelled\n        - completed\n        - failed\n        - panic_sell_pending\n        - panic_sell_order_placed\n        - panic_sold\n        - cancel_pending\n        - stop_loss_pending\n        - stop_loss_finished\n        - stop_loss_order_placed\n        - switched\n        - switched_take_profit\n        - ttp_activated\n        - ttp_order_placed\n        - liquidated\n        - bought_safety_pending\n        - bought_take_profit_pending\n        - settled\n      example: failed\n    OrderVolumeEnum:\n      type: string\n      description: 'Values: quote_currency, base_currency, percent, xbt'\n      example: quote_currency\n      enum:\n        - quote_currency\n        - base_currency\n        - percent\n        - xbt\n    ProfitCurrencyEnum:\n      type: string\n      description: 'Values: quote_currency, base_currency'\n      example: quote_currency\n      enum:\n        - quote_currency\n        - base_currency\n    TakeProfitType:\n      type: string\n      description: 'Values: base, total'\n      example: base\n      enum:\n        - base\n        - total\n    BotType:\n      type: string\n      description: 'Values: [\"Bot::MultiBot\", \"Bot::SingleBot\", \"Bot::SwitchBot\"]'\n      example: Bot::MultiBot\n      enum:\n        - Bot::MultiBot\n        - Bot::SingleBot\n        - Bot::SwitchBot\n    StrategyType:\n      type: string\n      description: short or long\n      example: long\n      enum:\n        - short\n        - long\n    StopLossType:\n      type: string\n      description: 'Values: stop_loss, stop_loss_and_disable_bot'\n      example: stop_loss\n      enum:\n        - stop_loss\n        - stop_loss_and_disable_bot\n    LeverageType:\n      type: string\n      description: 'Values: cross, not_specified, isolated'\n      example: not_specified\n      enum:\n        - cross\n        - not_specified\n        - isolated\n    LeverageTypeBitmex:\n      type: string\n      description: Used for Bitmex bots only\n      default: not_specified\n      enum:\n        - custom\n        - cross\n        - not_specified\n        - isolated\n    OrderType:\n      type: string\n      enum:\n        - market\n        - limit\n\n    IndexEntity:\n      type: object\n      properties:\n        bots:\n          type: array\n          items:\n            $ref: '#/components/schemas/MarketplaceBotEntity'\n        total:\n          type: integer\n          format: int32\n        page:\n          type: integer\n          format: int32\n      description: 'Marketplace presets (Permission: NONE, Security: SIGNED)'\n    MarketplaceBotEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        type:\n          type: string\n        name:\n          type: string\n        strategy:\n          type: string\n        secret:\n          type: string\n        marketplace_item:\n          $ref: '#/components/schemas/MarketplaceItem'\n        profit:\n          $ref: '#/components/schemas/Profit'\n        currencies:\n          type: array\n          items:\n            type: string\n        copies:\n          type: integer\n          description: Bot's copies count\n          format: int32\n        is_favorite:\n          type: boolean\n    MarketplaceItem:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        name:\n          type: string\n        icon_url:\n          type: string\n    Profit:\n      type: object\n      properties:\n        period:\n          type: string\n        amount:\n          type: number\n          format: double\n        chart_data:\n          type: array\n          items:\n            type: number\n            format: double\n    GridBotProfitsEntity:\n      type: object\n      properties:\n        grid_line_id:\n          type: integer\n          format: int32\n        profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.01'\n        usd_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '100.01'\n        created_at:\n          type: string\n          format: date-time\n          example: 2018-08-08T08:08:08.123Z\n      description: 'Grid Bot Profits (Permission: BOTS_READ, Security: SIGNED)'\n    PongEntity:\n      type: object\n      properties:\n        pong:\n          type: string\n          example: pong\n      description: 'Test connectivity to the Rest API (Permission: NONE, Security: NONE)'\n    TimeEntity:\n      type: object\n      properties:\n        server_time:\n          type: integer\n          description: UNIX timestamp\n          format: int32\n          example: 1592769067\n      description: 'Test connectivity to the Rest API and get the current server time (Permission: NONE, Security: NONE)'\n    BotEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 5\n        account_id:\n          type: integer\n          format: int32\n          example: 10\n        is_enabled:\n          type: boolean\n          example: true\n        max_safety_orders:\n          type: integer\n          format: int32\n          example: 5\n        active_safety_orders_count:\n          type: integer\n          format: int32\n          example: 2\n        pairs:\n          type: array\n          items:\n            $ref: '#/components/schemas/QuoteBaseString'\n          example:\n            - BTC_LTC\n            - BTC_ETH\n            - BTC_ADA\n        strategy_list:\n          type: string\n          example: \"[{'options'=\u003e{'time'=\u003e'5m', 'type'=\u003e'buy_or_strong_buy'},\n            'strategy'=\u003e'trading_view'}, ...]\"\n        max_active_deals:\n          type: integer\n          format: int32\n          example: 2\n        active_deals_count:\n          type: integer\n          format: int32\n          example: 2\n        deletable?:\n          type: boolean\n          example: true\n        created_at:\n          type: string\n          format: date-time\n          example: 2021-12-18T15:24:07.153Z\n        updated_at:\n          type: string\n          format: date-time\n          example: 2021-12-31T11:17:34.777Z\n        trailing_enabled:\n          type: boolean\n          example: true\n        tsl_enabled:\n          type: boolean\n          example: true\n        deal_start_delay_seconds:\n          type: integer\n          description: Deal start delay in seconds\n          format: int32\n          example: 60\n        stop_loss_timeout_enabled:\n          type: boolean\n          example: true\n        stop_loss_timeout_in_seconds:\n          type: integer\n          format: int32\n          example: 2\n        disable_after_deals_count:\n          type: integer\n          format: int32\n          example: 2\n        deals_counter:\n          type: integer\n          format: int32\n          example: 2\n        allowed_deals_on_same_pair:\n          type: integer\n          format: int32\n          example: 2\n        easy_form_supported:\n          type: boolean\n          example: true\n        close_deals_timeout:\n          type: integer\n          description: Close bot deals after given number of seconds\n          format: int32\n          example: 70\n        url_secret:\n          type: string\n          example: abc1234567\n        name:\n          type: string\n          example: Test Bot\n        take_profit:\n          $ref: '#/components/schemas/Percentage'\n        base_order_volume:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '1.1'\n        safety_order_volume:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0015'\n        safety_order_step_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '1.1'\n        take_profit_type:\n          $ref: '#/components/schemas/TakeProfitType'\n        type:\n          $ref: '#/components/schemas/BotType'\n        martingale_volume_coefficient:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '1.3'\n        martingale_step_coefficient:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.9'\n        stop_loss_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '5.5'\n        cooldown:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '200'\n        btc_price_limit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '30.15'\n        strategy:\n          $ref: '#/components/schemas/StrategyType'\n        min_volume_btc_24h:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '500.5'\n        profit_currency:\n          $ref: '#/components/schemas/ProfitCurrencyEnum'\n        min_price:\n          type: string\n          example: \"'0.0245'\"\n        max_price:\n          type: string\n          example: \"'0.0123'\"\n        stop_loss_type:\n          $ref: '#/components/schemas/StopLossType'\n        safety_order_volume_type:\n          $ref: '#/components/schemas/OrderVolumeEnum'\n        base_order_volume_type:\n          $ref: '#/components/schemas/OrderVolumeEnum'\n        account_name:\n          type: string\n          example: My account\n        trailing_deviation:\n          type: string\n          example: '0.14'\n        finished_deals_profit_usd:\n          type: string\n          example: '12.14'\n        finished_deals_count:\n          type: string\n          example: '252.1'\n        leverage_type:\n          $ref: '#/components/schemas/LeverageType'\n        leverage_custom_value:\n          type: string\n          example: \"'1'\"\n        start_order_type:\n          type: string\n          description: 'Values: limit, market'\n          example: \"'limit'\"\n        active_deals_usd_profit:\n          type: string\n          description: Sum of active deals profits\n          example: '200.21'\n    AccountEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 12\n        auto_balance_period:\n          type: integer\n          format: int32\n          example: 12\n        auto_balance_portfolio_id:\n          type: integer\n          format: int32\n          example: 452\n          nullable: true\n        auto_balance_portfolio:\n          $ref: '#/components/schemas/PortfolioEntity'\n        auto_balance_currency_change_limit:\n          type: integer\n          format: int32\n          example: 5\n          nullable: true\n        autobalance_enabled:\n          type: boolean\n          example: true\n        hedge_mode_available:\n          type: boolean\n        hedge_mode_enabled:\n          type: boolean\n        is_locked:\n          type: boolean\n          example: true\n        smart_trading_supported:\n          type: boolean\n          example: true\n        smart_selling_supported:\n          type: boolean\n          description: DEPRECATED. use smart_trading_supported instead\n          example: true\n        available_for_trading:\n          type: object\n          properties: {}\n          example: {}\n        stats_supported:\n          type: boolean\n          example: true\n        trading_supported:\n          type: boolean\n          example: true\n        market_buy_supported:\n          type: boolean\n          example: true\n        market_sell_supported:\n          type: boolean\n          example: true\n        conditional_buy_supported:\n          type: boolean\n          example: true\n        bots_allowed:\n          type: boolean\n          example: false\n        bots_ttp_allowed:\n          type: boolean\n          example: false\n        bots_tsl_allowed:\n          type: boolean\n          example: false\n        gordon_bots_available:\n          type: boolean\n          example: false\n        multi_bots_allowed:\n          type: boolean\n          example: false\n        created_at:\n          type: string\n          format: date-time\n          example: 2018-08-08T08:08:08.968Z\n        updated_at:\n          type: string\n          format: date-time\n          example: 2018-08-22T02:25:08.968Z\n        last_auto_balance:\n          type: string\n          format: date-time\n          example: 2018-08-21T08:28:08.968Z\n          nullable: true\n        fast_convert_available:\n          type: boolean\n          description: Sell all to USD/BTC possibility\n          example: true\n        grid_bots_allowed:\n          type: boolean\n          example: true\n        api_key_invalid:\n          type: boolean\n          example: true\n        deposit_enabled:\n          type: boolean\n          example: false\n        supported_market_types:\n          type: array\n          items:\n            type: string\n        api_key:\n          type: string\n          example: ''\n        name:\n          type: string\n          example: Binance 2\n        auto_balance_method:\n          type: integer\n          description: 'Values: time, currency_change'\n          format: int32\n          nullable: true\n        auto_balance_error:\n          type: string\n          example: Failed to autobalance\n          nullable: true\n        customer_id:\n          type: string\n          nullable: true\n        subaccount_name:\n          type: string\n          nullable: true\n        lock_reason:\n          type: string\n          example: API key is invalid\n          nullable: true\n        btc_amount:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.01134219'\n        usd_amount:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '70.93146245'\n        day_profit_btc:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '-0.00006'\n        day_profit_usd:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '-0.02147'\n        day_profit_btc_percentage:\n          type: string\n          example: \"'-0.26'\"\n        day_profit_usd_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '-1.23'\n        btc_profit:\n          type: string\n          description: Month period\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0001625'\n        usd_profit:\n          type: string\n          description: Month period\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '5.05764787'\n        usd_profit_percentage:\n          type: string\n          description: Month period\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '6.25'\n        btc_profit_percentage:\n          type: string\n          description: Month period\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '2.36'\n        total_btc_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0012456'\n        total_usd_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '6.123181'\n        pretty_display_type:\n          type: string\n          example: BittrexAccount\n        exchange_name:\n          type: string\n          example: Binance Futures\n        market_code:\n          type: string\n          example: binance\n        address:\n          type: string\n          example: \"'0xe00000dded00bbb08725d77777777ff070aa7aa7'\"\n      example:\n        id: 1\n        auto_balance_period: 12\n        auto_balance_portfolio_id: null\n        auto_balance_currency_change_limit: null\n        autobalance_enabled: false\n        hedge_mode_available: false\n        hedge_mode_enabled: false\n        is_locked: false\n        smart_trading_supported: true\n        smart_selling_supported: true\n        available_for_trading: {}\n        stats_supported: true\n        trading_supported: true\n        market_buy_supported: true\n        market_sell_supported: true\n        conditional_buy_supported: true\n        bots_allowed: true\n        bots_ttp_allowed: true\n        bots_tsl_allowed: false\n        gordon_bots_available: true\n        multi_bots_allowed: true\n        created_at: 2021-12-18T14:39:08.303Z\n        updated_at: 2021-12-18T14:46:27.327Z\n        last_auto_balance: null\n        fast_convert_available: true\n        grid_bots_allowed: true\n        api_key_invalid: false\n        nomics_id: binance\n        market_icon: 'https://3commas.io/img/exchanges/binance.png'\n        deposit_enabled: true\n        supported_market_types:\n          - spot\n        api_key: 0GYA23ZyT7TDJ4kgjfK1TDA7fDct81JdldahrkbhcSFfULhojRBk0wg9CBh3Mt38\n        name: 'Binance'\n        auto_balance_method: null\n        auto_balance_error: null\n        customer_id: null\n        subaccount_name: null\n        lock_reason: null\n        btc_amount: '0.126177921984049949290816202950805646'\n        usd_amount: '1000.5201913628338043707141694048908008946'\n        day_profit_btc: '0.002467964064086325616965572997081701801048'\n        day_profit_usd: '148.7481983332456641686071171483773371998'\n        day_profit_btc_percentage: '0.58'\n        day_profit_usd_percentage: '0.91'\n        btc_profit: '0.369380801984049949290816202950805646'\n        usd_profit: '16507.0371552076338043707141694048908008946'\n        usd_profit_percentage: '508.15'\n        btc_profit_percentage: '650.35'\n        total_btc_profit: '0.37034792198405'\n        total_usd_profit: '16720.842578987584'\n        pretty_display_type: Binance\n        exchange_name: Binance\n        market_code: binance\n    PortfolioEntity:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          example: 2021-08-21T08:28:08.968Z\n        portfolio_entries:\n          $ref: '#/components/schemas/PortfolioEntryEntity'\n    PortfolioEntryEntity:\n      type: object\n      properties:\n        target_percentage:\n          type: string\n        currency_code:\n          type: string\n    GridBotEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 5\n        account_id:\n          type: integer\n          format: int32\n          example: 10\n        account_name:\n          type: string\n          example: My account\n        is_enabled:\n          type: boolean\n          example: true\n        grids_quantity:\n          type: string\n          example: '20'\n        created_at:\n          type: string\n          format: date-time\n          example: 2018-08-08T08:24:07.153Z\n        updated_at:\n          type: string\n          format: date-time\n          example: 2018-08-09T08:08:08.153Z\n        strategy_type:\n          type: string\n          example: \"'manual'\"\n        upper_stop_loss_enabled:\n          type: boolean\n          example: true\n        lower_stop_loss_enabled:\n          type: boolean\n          example: true\n        lower_price:\n          type: string\n          example: '8000'\n        lower_stop_loss_price:\n          type: string\n          example: '7500'\n        lower_stop_loss_action:\n          type: string\n          example: 'stop_bot'\n        upper_price:\n          type: string\n          example: '10000'\n        upper_stop_loss_price:\n          type: string\n          example: '12000'\n        upper_stop_loss_action:\n          type: string\n          example: 'stop_bot'\n        quantity_per_grid:\n          type: string\n          example: '100'\n        leverage_type:\n          $ref: '#/components/schemas/LeverageType'\n        leverage_custom_value:\n          type: string\n          example: '20.1'\n        name:\n          type: string\n          example: 'GridBot1'\n        pair:\n          type: string\n          example: 'BTC_ETH'\n        start_price:\n          type: string\n          example: '9000'\n        grid_price_step:\n          type: string\n          example: '100'\n        current_profit:\n          type: string\n          example: '100'\n        current_profit_usd:\n          type: string\n          example: '1000'\n        total_profits_count:\n          type: string\n          example: '10'\n        bought_volume:\n          type: string\n          example: '1000'\n        sold_volume:\n          type: string\n          example: '1000'\n        profit_percentage:\n          type: string\n          example: '0.1'\n        current_price:\n          type: string\n          example: '100.1'\n        investment_base_currency:\n          type: string\n          example: '100'\n        investment_quote_currency:\n          type: string\n          example: '100'\n        grid_lines:\n          $ref: '#/components/schemas/GridLineEntity'\n    GridLineEntity:\n      type: object\n      properties:\n        price:\n          type: string\n          example: '8000'\n        side:\n          type: string\n          example: \"'SELL'\"\n        order_placed:\n          type: boolean\n          example: true\n    DealEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        type:\n          type: string\n          example: Deal::ShortDeal\n          enum:\n            - Deal::ShortDeal\n            - Deal\n        bot_id:\n          type: integer\n          example: 111\n        max_safety_orders:\n          type: integer\n          example: 2\n        deal_has_error:\n          type: boolean\n          example: true\n        from_currency_id:\n          type: integer\n          description: DEPRECATED\n          example: 5\n        to_currency_id:\n          type: integer\n          description: DEPRECATED\n          example: 10\n        account_id:\n          type: integer\n          example: 121\n        active_safety_orders_count:\n          type: integer\n          example: 1\n        created_at:\n          type: string\n          format: date-time\n          example: 2021-08-21T08:28:08.968Z\n        updated_at:\n          type: string\n          format: date-time\n          example: 2021-08-22T08:28:08.968Z\n        closed_at:\n          type: string\n          format: date-time\n          example: 2021-08-23T08:28:08.968Z\n        finished?:\n          type: boolean\n        current_active_safety_orders_count:\n          type: integer\n          example: 1\n        current_active_safety_orders:\n          type: integer\n          description: DEPRECATED\n          example: 1\n        completed_safety_orders_count:\n          type: integer\n          description: completed safeties (not including manual)\n          example: 2\n        completed_manual_safety_orders_count:\n          type: integer\n          description: completed manual safeties\n          example: 2\n        cancellable?:\n          type: boolean\n        panic_sellable?:\n          type: boolean\n        trailing_enabled:\n          type: boolean\n          example: true\n        tsl_enabled:\n          type: boolean\n          example: true\n        stop_loss_timeout_enabled:\n          type: boolean\n          example: true\n        stop_loss_timeout_in_seconds:\n          type: integer\n          example: 2\n        active_manual_safety_orders:\n          type: integer\n          example: 2\n        pair:\n          $ref: '#/components/schemas/QuoteBaseString'\n        status:\n          $ref: '#/components/schemas/DealStatusEnum'\n        localized_status:\n          type: string\n          example: Created\n        take_profit:\n          $ref: '#/components/schemas/Percentage'\n        base_order_volume:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.001'\n        safety_order_volume:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0015'\n        safety_order_step_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '1.11'\n        leverage_type:\n          $ref: '#/components/schemas/LeverageTypeBitmex'\n        leverage_custom_value:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '20.1'\n        bought_amount:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '1.5'\n        bought_volume:\n          type: string\n          example: \"'150'\"\n        bought_average_price:\n          type: string\n          example: \"'100'\"\n        base_order_average_price:\n          type: string\n          example: \"'100'\"\n        sold_amount:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '1.5'\n        sold_volume:\n          $ref: '#/components/schemas/StringFloatPositive'\n        sold_average_price:\n          $ref: '#/components/schemas/StringFloatNegative'\n        take_profit_type:\n          $ref: '#/components/schemas/TakeProfitType'\n        final_profit:\n          $ref: '#/components/schemas/StringFloatNegative'\n        martingale_coefficient:\n          type: string\n          description: Percentage\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '1.2'\n        martingale_volume_coefficient:\n          $ref: '#/components/schemas/Percentage'\n        martingale_step_coefficient:\n          $ref: '#/components/schemas/Percentage'\n        stop_loss_percentage:\n          $ref: '#/components/schemas/StringFloatNegative'\n        error_message:\n          type: string\n          example: \"'Error placing base order'\"\n        profit_currency:\n          $ref: '#/components/schemas/ProfitCurrencyEnum'\n        stop_loss_type:\n          $ref: '#/components/schemas/StopLossType'\n        safety_order_volume_type:\n          $ref: '#/components/schemas/OrderVolumeEnum'\n        base_order_volume_type:\n          $ref: '#/components/schemas/OrderVolumeEnum'\n        from_currency:\n          $ref: '#/components/schemas/SymbolString'\n        to_currency:\n          $ref: '#/components/schemas/SymbolString'\n        current_price:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '39.02'\n        take_profit_price:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '105'\n        stop_loss_price:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '95.3'\n        final_profit_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '4.2'\n        actual_profit_percentage:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '3.4'\n        bot_name:\n          type: string\n          example: My bot\n        account_name:\n          type: string\n          example: My Account\n        usd_final_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '3.3523452'\n        actual_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0023'\n        actual_usd_profit:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.0023'\n        failed_message:\n          type: string\n          example: Failed\n        reserved_base_coin:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '1.3423523'\n        reserved_second_coin:\n          type: string\n          pattern: '^\\d+(.\\d+|)$'\n          example: '0.1412454'\n        trailing_deviation:\n          type: string\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.14'\n        trailing_max_price:\n          type: string\n          description: Highest price met in case of long deal, lowest price otherwise\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.1412454'\n        tsl_max_price:\n          type: string\n          description: Highest price met in TSL in case of long deal, lowest price otherwise\n          pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n          example: '0.1412454'\n        strategy:\n          $ref: '#/components/schemas/StrategyType'\n        reserved_quote_funds:\n          type: number\n          description: Sum of reserved in active deals funds in QUOTE\n          example: 0\n        reserved_base_funds:\n          type: number\n          description: Sum of reserved in active deals funds in BASE\n          example: 0\n    SmartTradeV2Entity:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        version:\n          type: integer\n          example: 2\n        account:\n          type: object\n          properties:\n            id:\n              type: integer\n            type:\n              type: string\n            name:\n              type: string\n            market:\n              type: string\n            link:\n              type: string\n        pair:\n          type: string\n        instant:\n          type: boolean\n        status:\n          type: object\n          properties:\n            type:\n              type: string\n            title:\n              type: string\n        leverage:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            type:\n              type: string\n            value:\n              type: integer\n        position:\n          type: object\n          properties:\n            type:\n              type: string\n            editable:\n              type: boolean\n            units:\n              type: object\n              properties:\n                value:\n                  type: string\n                  pattern: '^\\d+(.\\d+|)$'\n                  example: '1231.11'\n                editable:\n                  type: boolean\n            price:\n              type: object\n              properties:\n                value:\n                  type: string\n                  pattern: '^\\d+(.\\d+|)$'\n                  example: '1223.32'\n                value_without_commission:\n                  type: string\n                  pattern: '^\\d+(.\\d+|)$'\n                  example: '500.2'\n                editable:\n                  type: boolean\n            total:\n              type: object\n              properties:\n                value:\n                  type: string\n                  pattern: '^\\d+(.\\d+|)$'\n                  example: '100.2'\n            order_type:\n              $ref: '#/components/schemas/OrderType'\n            status:\n              type: object\n              properties:\n                type:\n                  type: string\n                title:\n                  type: string\n        take_profit:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            steps:\n              type: array\n              items:\n                $ref: '#/components/schemas/TakeProfitStep'\n        stop_loss:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        reduce_funds:\n          type: object\n          properties:\n            steps:\n              type: array\n              items:\n                $ref: '#/components/schemas/ReduceFundsStep'\n        market_close:\n          type: object\n          properties:\n            id:\n              type: integer\n            type:\n              type: string\n            status:\n              type: object\n              properties:\n                type:\n                  type: string\n                title:\n                  type: string\n                basic_type:\n                  type: string\n            units:\n              type: object\n              properties:\n                value:\n                  type: string\n            price:\n              type: object\n              properties:\n                value:\n                  type: string\n                value_without_commission:\n                  type: string\n            total:\n              type: object\n              properties:\n                value:\n                  type: string\n            filled:\n              type: object\n              properties:\n                units:\n                  type: string\n                total:\n                  type: string\n                price:\n                  type: string\n                value:\n                  type: string\n        note:\n          type: string\n        note_raw:\n          type: string\n        skip_enter_step:\n          type: boolean\n        data:\n          type: object\n          properties:\n            editable:\n              type: boolean\n            current_price:\n              type: object\n              properties:\n                quote_volume:\n                  type: string\n                last:\n                  type: string\n            target_price_type:\n              type: string\n            base_order_finished:\n              type: boolean\n            missing_funds_to_close:\n              type: number\n            liquidation_price:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '1000.22'\n              nullable: true\n            average_enter_price:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '60.2'\n              nullable: true\n            average_close_price:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '60.2'\n              nullable: true\n            average_enter_price_without_commission:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '100.3'\n              nullable: true\n            average_close_price_without_commission:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '40.2'\n              nullable: true\n            panic_sell_available:\n              type: boolean\n            add_funds_available:\n              type: boolean\n            force_start_available:\n              type: boolean\n            force_process_available:\n              type: boolean\n            cancel_available:\n              type: boolean\n            finished:\n              type: boolean\n            base_position_step_finished:\n              type: boolean\n            created_at:\n              type: string\n              format: date-time\n              example: 2018-08-08T08:08:08.123Z\n            updated_at:\n              type: string\n              format: date-time\n              example: 2018-08-08T08:08:08.123Z\n            closed_at:\n              type: string\n              format: date-time\n              example: 2018-08-08T08:08:08.123Z\n              nullable: true\n            type:\n              type: string\n              example: smart_sell\n        profit:\n          type: object\n          properties:\n            volume:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '14.0'\n            usd:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '12.22'\n            percent:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '12.0'\n            roe:\n              type: number\n              nullable: true\n        margin:\n          type: object\n          properties:\n            amount:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '100.2'\n              nullable: true\n            total:\n              type: string\n              pattern: '^(\\-\\d+|\\d+)(.\\d+|)$'\n              example: '700.2'\n              nullable: true\n        is_position_not_filled:\n          type: boolean\n      \n      example:\n          id: 1\n          version: 2\n          account: \n            id: 2\n            type: binance\n            name: Binance\n            market: Binance\n            link: /accounts/2\n          pair: BUSD_XLM\n          instant: false\n          status: \n            type: waiting_targets\n            basic_type: waiting_targets\n            title: Waiting Targets\n          leverage: \n            enabled: false\n          position: \n            type: buy\n            editable: true\n            units: \n              value: '151.0'\n              editable: false\n            price: \n              value: '0.3001'\n              value_without_commission: null\n              editable: true\n            total: \n              value: '45.3151'\n            order_type: 'market'\n            status: \n              type: 'smart_sell'\n              basic_type: 'smart_sell'\n              title: Own funds\n          take_profit: \n            enabled: true\n            steps: \n              - \n                id: 1\n                order_type: market\n                editable: true\n                units: \n                  value: '151.0'\n                price: \n                  value: '0.302'\n                  type: 'bid'\n                  percent: null\n                volume: '100.0'\n                total: '45.602'\n                trailing: \n                  enabled: true\n                  percent: '-0.15'\n                status: \n                  type: 'to_process'\n                  basic_type: 'to_process'\n                  title: 'Pending'\n                data: \n                  cancelable: true\n                  panic_sell_available: true\n                position: 1\n          stop_loss: \n            enabled: false\n          reduce_funds: \n            steps: []\n          market_close: {}\n          note: \"Created from deal 1\"\n          note_raw: \"Created from deal 1\"\n          skip_enter_step: true\n          data: \n            editable: true\n            current_price: \n              bid: '0.2665'\n              ask: '0.2668'\n              day_change_percent: '-0.633'\n              quote_volume: '2255481.0083'\n              last: '0.2668'\n            target_price_type: 'price'\n            base_order_finished: true\n            missing_funds_to_close: 0\n            liquidation_price: null\n            average_enter_price: null\n            average_close_price: null\n            average_enter_price_without_commission: null\n            average_close_price_without_commission: null\n            panic_sell_available: true\n            add_funds_available: true\n            reduce_funds_available: true\n            force_start_available: false\n            force_process_available: true\n            cancel_available: true\n            finished: false\n            base_position_step_finished: true\n            created_at: 2021-12-30T07:45:43.620Z\n            updated_at: 2021-12-30T07:45:43.620Z\n            type: smart_sell\n          profit: \n            volume: '-5.1138415'\n            usd: '-5.11389667145974138736465583759227098'\n            percent: '-11.29'\n            roe: null\n          margin: \n            amount: null\n            total: null\n          is_position_not_filled: false\n\n\n    TakeProfitStep:\n      type: object\n      properties:\n        id:\n          type: integer\n        version:\n          type: integer\n        account:\n          type: object\n          properties:\n            id:\n              type: integer\n            type:\n              type: string\n            name:\n              type: string\n            market:\n              type: string\n            link:\n              type: string\n        pair:\n          type: string\n        instant:\n          type: boolean\n        status:\n          type: object\n          properties:\n            type:\n              type: string\n            title:\n              type: string\n        leverage:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            type:\n              type: string\n            value:\n              type: integer\n        position:\n          type: object\n          properties:\n            type:\n              type: string\n            editable:\n              type: boolean\n            units:\n              type: object\n              properties:\n                value:\n                  type: string\n                  example: '1231.11'\n                editable:\n                  type: boolean\n            price:\n              type: object\n              properties:\n                value:\n                  type: number\n                  example: 1223.32\n                value_without_commission:\n                  type: number\n                  example: 500.2\n                editable:\n                  type: boolean\n            total:\n              type: object\n              properties:\n                value:\n                  type: number\n                  example: 100.2\n            order_type:\n              type: string\n            status:\n              type: object\n              properties:\n                type:\n                  type: string\n                title:\n                  type: string\n        take_profit:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            steps:\n              type: array\n              items:\n                $ref: '#/components/schemas/TakeProfitStep'\n        stop_loss:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        note:\n          type: string\n        skip_enter_step:\n          type: boolean\n        data:\n          type: object\n          properties:\n            editable:\n              type: boolean\n            current_price:\n              type: object\n              properties:\n                quote_volume:\n                  type: string\n                last:\n                  type: string\n            target_price_type:\n              type: string\n            base_order_finished:\n              type: boolean\n            missing_funds_to_close:\n              type: number\n            liquidation_price:\n              type: number\n              example: 1000.22\n            average_enter_price:\n              type: number\n              example: 60.2\n            average_close_price:\n              type: number\n              example: 60.2\n            average_enter_price_without_commission:\n              type: number\n              example: 100.3\n            average_close_price_without_commission:\n              type: number\n              example: 40.2\n            panic_sell_available:\n              type: boolean\n            add_funds_available:\n              type: boolean\n            force_start_available:\n              type: boolean\n            force_process_available:\n              type: boolean\n            cancel_available:\n              type: boolean\n            finished:\n              type: boolean\n            base_position_step_finished:\n              type: boolean\n            created_at:\n              type: string\n              example: 2018-08-08 08:08:08\n            updated_at:\n              type: string\n              example: 2018-08-08 08:08:08\n            closed_at:\n              type: string\n              example: 2018-08-08 08:08:08\n            type:\n              type: string\n              example: smart_sell\n        profit:\n          type: object\n          properties:\n            volume:\n              type: number\n              example: 14.0\n            usd:\n              type: number\n              example: 12.22\n            percent:\n              type: number\n              example: 12.0\n            roe:\n              type: number\n        margin:\n          type: object\n          properties:\n            amount:\n              type: number\n              example: 100.2\n            total:\n              type: number\n              example: 700.2\n        is_position_not_filled:\n          type: boolean\n    BotDealsStatsEntity:\n      type: object\n      properties:\n        completed:\n          type: integer\n          example: 0\n        panic_sold:\n          type: integer\n          example: 0\n        active:\n          type: integer\n          example: 0\n        completed_deals_usd_profit:\n          type: string\n          example: '5000.0'\n        from_currency_is_dollars:\n          type: boolean\n          example: false\n        completed_deals_btc_profit:\n          type: string\n          example: '0.5'\n        funds_locked_in_active_deals:\n          type: string\n          example: '0.0'\n        btc_funds_locked_in_active_deals:\n          type: string\n          example: '0.0'\n        active_deals_usd_profit:\n          type: string\n          example: '0.0'\n        active_deals_btc_profit:\n          type: string\n          example: '0.0'\n    LooseAccountEntity:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: New Loose Account\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$'\n          example: 2021-07-08 08:08:08\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$'\n          example: 2021-08-09 09:09:09\n        type:\n          type: string\n          example: Accounts::LooseAccount\n        is_deleted:\n          type: boolean\n          example: false\n        is_locked:\n          type: boolean\n          example: false\n    ReduceFundsStep:\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n        status:\n          type: object\n          properties:\n            type:\n              type: string\n            title:\n              type: string\n            basic_type:\n              type: string\n        units:\n          type: object\n          properties:\n            value:\n              type: string\n        price:\n          type: object\n          properties:\n            value:\n              type: string\n            value_without_commission:\n              type: string\n        total:\n          type: object\n          properties:\n            value:\n              type: string\n        filled:\n          type: object\n          properties:\n            units:\n              type: string\n            total:\n              type: string\n            price:\n              type: string\n            value:\n              type: string\n        data:\n          type: object\n          properties:\n            cancelable:\n              type: boolean\n            panic_sell_available:\n              type: boolean\n\n    FormFieldType:\n      type: object\n      properties:\n        field:\n          type: string\n        localized_name:\n          type: string\n      required: ['field', 'localized_name']\n      example:\n        field: 'api_key'\n        localized_name: 'API Key:'\n    MarketListItem:\n      type: object\n      properties:\n        market_name:\n          type: string\n          example: 'Binance'\n        market_url:\n          type: string\n          example: 'https://www.binance.com/en/futures/ref/108190303'\n        market_icon:\n          type: string\n          example: 'https://3commas.io/img/exchanges/binance.png'\n        help_link:\n          type: string\n          example: 'https://help.3commas.io/en/articles/3109051'\n        nomics_id:\n          type: string\n          example: 'binance'\n        market_code:\n          type: string\n          example: 'binance'\n        form_fields:\n          type: object\n          properties:\n            required:\n              type: array\n              items:\n                $ref: '#/components/schemas/FormFieldType'\n            optional:\n              type: array\n              items:\n                $ref: '#/components/schemas/FormFieldType'\n        connection_type:\n          type: string\n          example: 'fields'\n",
			"canonicalURL": "/github.com/3commas-io/3commas-official-api-docs@8c9cbf73b12e1672dcdf5692a3a03ff549b1de01/-/blob/3commas_openapidoc.yml",
			"externalURLs": [
				{
					"url": "https://github.com/3commas-io/3commas-official-api-docs/blob/8c9cbf73b12e1672dcdf5692a3a03ff549b1de01/3commas_openapidoc.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}