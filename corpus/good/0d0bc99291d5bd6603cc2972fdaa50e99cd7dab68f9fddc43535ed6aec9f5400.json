{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-azuredata-2017-03-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-azuredata-2017-03-01-preview-swagger.yaml",
			"byteSize": 56250,
			"content": "openapi: 3.0.0\ninfo:\n  description: The AzureData management API provides a RESTful set of web APIs to manage\n    Azure Data Resources. For example, register, delete and retrieve a SQL\n    Server, SQL Server registration.\n  title: AzureDataManagementClient\n  version: 2017-03-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azuredata/resource-manager/Microsoft.AzureData/preview/2017-03-01-preview/azuredata.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: azuredata\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  /providers/Microsoft.AzureData/operations:\n    get:\n      description: Lists all of the available SQL Server Registration API operations.\n      operationId: Operations_List\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved operations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OperationListResult\"\n              examples:\n                Lists all of the available SQL Server Registration API operations.:\n                  $ref: \"#/components/examples/Lists_all_of_the_available_SQL_Serve\\\n                    r_Registration_API_operations.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - Operations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/sqlServerRegistrations\":\n    get:\n      description: Gets all SQL Server registrations in a subscription.\n      operationId: SqlServerRegistrations_List\n      parameters:\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved all SQL Server registrations in the\n            subscription.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistrationListResult\"\n              examples:\n                Gets all SQL Server registrations in a subscription.:\n                  $ref: \"#/components/examples/Gets_all_SQL_Server_registrations_in\\\n                    _a_subscription.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n      tags:\n        - SqlServerRegistrations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations\":\n    get:\n      description: Gets all SQL Server registrations in a resource group.\n      operationId: SqlServerRegistrations_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved all SQL Server registrations in the resource\n            group.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistrationListResult\"\n              examples:\n                Gets all SQL Server registrations in a resource group.:\n                  $ref: \"#/components/examples/Gets_all_SQL_Server_registrations_in\\\n                    _a_resource_group.\"\n        default:\n          description: \"*** Error Responses: ***\"\n      tags:\n        - SqlServerRegistrations\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}\":\n    delete:\n      description: Deletes a SQL Server registration.\n      operationId: SqlServerRegistrations_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Deletes a SQL Server registration.:\n              value: testsqlregistration\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully deleted the SQL Server registration.\n        \"204\":\n          description: The specified SQL Server registration does not exist.\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.\n\n             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.\n\n             * 400 InvalidSqlSku - Provided SQL sku is invalid.\n\n             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.\n\n             * 400 InvalidAccountNameFormat - Account name format is invalid.\n\n             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.\n\n             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.\n\n             * 400 InvalidStorageAccountUrl - Invalid storage account url.\n\n             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.\n\n             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.\n\n             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.\n\n             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServerRegistrations\n    get:\n      description: Gets a SQL Server registration.\n      operationId: SqlServerRegistrations_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets a SQL Server registration.:\n              value: testsqlregistration\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved the SQL Server registration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistration\"\n              examples:\n                Gets a SQL Server registration.:\n                  $ref: \"#/components/examples/Gets_a_SQL_Server_registration.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServerRegistrations\n    patch:\n      description: Updates SQL Server Registration tags.\n      operationId: SqlServerRegistrations_Update\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Updates a SQL Server Registration tags.:\n              value: testsqlregistration\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SqlServerRegistrationUpdate\"\n        description: The SQL Server Registration.\n        required: true\n      responses:\n        \"200\":\n          description: Successfully updated the SQL Server Registration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistration\"\n              examples:\n                Updates a SQL Server Registration tags.:\n                  $ref: \"#/components/examples/Updates_a_SQL_Server_Registration_ta\\\n                    gs.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServerRegistrations\n    put:\n      description: Creates or updates a SQL Server registration.\n      operationId: SqlServerRegistrations_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Creates or updates a SQL Server registration.:\n              value: testsqlregistration\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SqlServerRegistration\"\n        description: The SQL Server registration to be created or updated.\n        required: true\n      responses:\n        \"200\":\n          description: Successfully updated the SQL Server registration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistration\"\n              examples:\n                Creates or updates a SQL Server registration.:\n                  $ref: \"#/components/examples/Creates_or_updates_a_SQL_Server_regi\\\n                    stration.\"\n        \"201\":\n          description: Successfully created the SQL Server registration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerRegistration\"\n              examples:\n                Creates or updates a SQL Server registration.:\n                  $ref: \"#/components/examples/Creates_or_updates_a_SQL_Server_regi\\\n                    stration.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.\n\n             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.\n\n             * 400 InvalidSqlSku - Provided SQL sku is invalid.\n\n             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.\n\n             * 400 InvalidAccountNameFormat - Account name format is invalid.\n\n             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.\n\n             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.\n\n             * 400 InvalidStorageAccountUrl - Invalid storage account url.\n\n             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.\n\n             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.\n\n             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.\n\n             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServerRegistrations\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers\":\n    get:\n      description: Gets all SQL Servers in a SQL Server Registration.\n      operationId: SqlServers_ListByResourceGroup\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets all SQL Servers in a SQL Server Registration.:\n              value: testsqlregistration\n        - description: The child resources to include in the response.\n          in: query\n          name: $expand\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved all SQL Servers in the SQL Server\n            Registration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServerListResult\"\n              examples:\n                Gets all SQL Servers in a SQL Server Registration.:\n                  $ref: \"#/components/examples/Gets_all_SQL_Servers_in_a_SQL_Server\\\n                    _Registration.\"\n        default:\n          description: \"*** Error Responses: ***\"\n      tags:\n        - SqlServers\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers/{sqlServerName}\":\n    delete:\n      description: Deletes a SQL Server.\n      operationId: SqlServers_Delete\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Deletes a SQL Server.:\n              value: testsqlregistration\n        - description: Name of the SQL Server.\n          in: path\n          name: sqlServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            Deletes a SQL Server.:\n              value: testsqlserver\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully deleted the SQL Server.\n        \"204\":\n          description: The specified SQL Server does not exist.\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.\n\n             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.\n\n             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.\n\n             * 400 VmLocationMismatch - VM location does not match that of SQL Server.\n\n             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.\n\n             * 400 VmInsufficientPermission - Insufficient permission to Vm.\n\n             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.\n\n             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.\n\n             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.\n\n             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.\n\n             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images\n\n             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.\n\n             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.\n\n             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.\n\n             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.\n\n             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported\n\n             * 400 VmNotRunning - The VM is not in running state.\n\n             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.\n\n             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.\n\n             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.\n\n             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.\n\n             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.\n\n             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.\n\n             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.\n\n             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.\n\n             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.\n\n             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.\n\n             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.\n\n             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.\n\n             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.\n\n             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServers\n    get:\n      description: Gets a SQL Server.\n      operationId: SqlServers_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets a SQL Server.:\n              value: testsqlregistration\n        - description: Name of the SQL Server.\n          in: path\n          name: sqlServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            Gets a SQL Server.:\n              value: testsqlserver\n        - description: The child resources to include in the response.\n          in: query\n          name: $expand\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved the SQL Server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServer\"\n              examples:\n                Gets a SQL Server.:\n                  $ref: \"#/components/examples/Gets_a_SQL_Server.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServers\n    put:\n      description: Creates or updates a SQL Server.\n      operationId: SqlServers_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: Name of the SQL Server registration.\n          in: path\n          name: sqlServerRegistrationName\n          required: true\n          schema:\n            type: string\n          examples:\n            Creates or updates a SQL Server in a Registration group.:\n              value: testsqlregistration\n        - description: Name of the SQL Server.\n          in: path\n          name: sqlServerName\n          required: true\n          schema:\n            type: string\n          examples:\n            Creates or updates a SQL Server in a Registration group.:\n              value: testsqlserver\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SqlServer\"\n        description: The SQL Server to be created or updated.\n        required: true\n      responses:\n        \"200\":\n          description: Successfully updated the SQL Server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServer\"\n              examples:\n                Creates or updates a SQL Server in a Registration group.:\n                  $ref: \"#/components/examples/Creates_or_updates_a_SQL_Server_in_a\\\n                    _Registration_group.\"\n        \"201\":\n          description: Successfully created the SQL Server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SqlServer\"\n              examples:\n                Creates or updates a SQL Server in a Registration group.:\n                  $ref: \"#/components/examples/Creates_or_updates_a_SQL_Server_in_a\\\n                    _Registration_group.\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.\n\n             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.\n\n             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.\n\n             * 400 VmLocationMismatch - VM location does not match that of SQL Server.\n\n             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.\n\n             * 400 VmInsufficientPermission - Insufficient permission to Vm.\n\n             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.\n\n             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.\n\n             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.\n\n             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.\n\n             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images\n\n             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.\n\n             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.\n\n             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.\n\n             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.\n\n             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported\n\n             * 400 VmNotRunning - The VM is not in running state.\n\n             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.\n\n             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.\n\n             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.\n\n             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.\n\n             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.\n\n             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.\n\n             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.\n\n             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.\n\n             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.\n\n             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.\n\n             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.\n\n             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.\n\n             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.\n\n             * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n             * 400 RPGenericUser - User Failure when calling other Resource Provider.\n\n             * 400 InvalidArgument - Invalid argument '{0}'.\n\n             * 400 ArgumentNotInRange - Argument '{0}' not in range.\n\n             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward\n\n             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.\n\n             * 403 AccessDenied - Access denied.\n\n             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.\n\n             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.\n\n             * 404 ResourceNotFound - The requested resource was not found.\n\n             * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n             * 404 ResourceDoesNotExist - Resource does not exist.\n\n             * 404 OperationIdNotFound - Operation id could not be found.\n\n             * 404 OperationTypeNotFound - Operation Type not found.\n\n             * 409 ResourceAlreadyExists - Resource already exists.\n\n             * 409 SqlExtensionNotInstalled - SQL extension not installed.\n\n             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.\n\n             * 409 OperationInProgress - Operation in progress on resource already.\n\n             * 409 OperationCanceled - Operation Cancelled.\n\n             * 500 RPGenericSystem - System Failure when calling other Resource Provider.\n\n             * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n             * 500 OperationTimeout - Operation timed out.\n      tags:\n        - SqlServers\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    Lists_all_of_the_available_SQL_Server_Registration_API_operations.:\n      value:\n        value:\n          - display:\n              description: Retrives details of SQL Server Registration\n              operation: Get SQL Server Registration details\n              resource: SQL Server Registration\n            name: Microsoft.AzureData/sqlServerRegistrations/read\n          - display:\n              description: Create a new or change properties of existing SQL Server\n                Registration\n              operation: Create a new or update existing SQL Server Registration\n              resource: SQL Server Registration\n            name: Microsoft.AzureData/sqlServerRegistrations/write\n          - display:\n              description: Delete existing SQL Server Registration\n              operation: Delete existing SQL Server Registration\n              resource: SQL Server Registration\n            name: Microsoft.AzureData/sqlServerRegistrations/delete\n          - display:\n              resource: Available REST operations\n            name: Microsoft.AzureData/operations/read\n          - display:\n              description: Retrieves details of SQL Server\n              operation: Get SQL Server Instance details\n            name: Microsoft.AzureData/sqlServers/read\n          - display:\n              description: Create a new or change properties of existing SQL Server\n              operation: Create new or update existing SQL Server\n            name: Microsoft.AzureData/sqlServers/write\n          - display:\n              description: Delete exisiting SQL Server\n              operation: Delete exisiting SQL Server\n            name: Microsoft.AzureData/sqlServers/delete\n    Gets_all_SQL_Server_registrations_in_a_subscription.:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration1\n            location: northeurope\n            name: testsqlregistration1\n            properties: {}\n            tags:\n              mytag: myval\n            type: Microsoft.AzureData/SqlServerRegistrations\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration2\n            location: northeurope\n            name: testsqlregistration2\n            properties: {}\n            tags:\n              mytag: myval\n            type: Microsoft.AzureData/SqlServerRegistrations\n    Gets_all_SQL_Server_registrations_in_a_resource_group.:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration1\n            location: northeurope\n            name: testsqlregistration1\n            properties: {}\n            tags:\n              mytag: myval\n            type: Microsoft.AzureData/SqlServerRegistrations\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration2\n            location: northeurope\n            name: testsqlregistration2\n            properties: {}\n            tags:\n              mytag: myval\n            type: Microsoft.AzureData/SqlServerRegistrations\n    Gets_a_SQL_Server_registration.:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n        location: northeurope\n        name: testsqlregistration\n        properties: {}\n        tags:\n          mytag: myval\n        type: Microsoft.AzureData/SqlServerRegistrations\n    Updates_a_SQL_Server_Registration_tags.:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n        location: northeurope\n        name: testsqlregistration\n        properties: {}\n        tags:\n          mytag: myval\n        type: Microsoft.AzureData/SqlServerRegistrations\n    Creates_or_updates_a_SQL_Server_registration.:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n        location: northeurope\n        name: testsqlregistration\n        properties: {}\n        tags:\n          mytag: myval\n        type: Microsoft.AzureData/SqlServerRegistrations\n    Gets_all_SQL_Servers_in_a_SQL_Server_Registration.:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver1\n            name: testsqlserver1\n            properties:\n              cores: 8\n              edition: Latin\n              propertyBag: \"\"\n              registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n              version: \"2008\"\n            type: Microsoft.AzureData/SqlServerRegistrations/SqlServers\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver2\n            name: testsqlserver2\n            properties:\n              cores: 16\n              edition: Latin\n              propertyBag: \"\"\n              registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n              version: \"2008\"\n            type: Microsoft.AzureData/SqlServerRegistrations/SqlServers\n    Gets_a_SQL_Server.:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver\n        name: testsqlserver\n        properties:\n          cores: 8\n          edition: Latin\n          propertyBag: \"\"\n          registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n          version: \"2008\"\n        type: Microsoft.AzureData/SqlServerRegistrations/SqlServers\n    Creates_or_updates_a_SQL_Server_in_a_Registration_group.:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver\n        name: testsqlserver\n        properties:\n          cores: 8\n          edition: Latin\n          propertyBag: \"\"\n          registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration\n          version: \"2008\"\n        type: Microsoft.AzureData/SqlServerRegistrations/SqlServers\n  parameters:\n    ApiVersionParameter:\n      description: API version to use for the request.\n      in: query\n      name: api-version\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        Lists all of the available SQL Server Registration API operations.:\n          value: 2017-03-01-preview\n        Gets all SQL Server registrations in a subscription.:\n          value: 2017-03-01-preview\n        Gets all SQL Server registrations in a resource group.:\n          value: 2017-03-01-preview\n        Deletes a SQL Server registration.:\n          value: 2017-03-01-preview\n        Gets a SQL Server registration.:\n          value: 2017-03-01-preview\n        Updates a SQL Server Registration tags.:\n          value: 2017-03-01-preview\n        Creates or updates a SQL Server registration.:\n          value: 2017-03-01-preview\n        Gets all SQL Servers in a SQL Server Registration.:\n          value: 2017-03-01-preview\n        Deletes a SQL Server.:\n          value: 2017-03-01-preview\n        Gets a SQL Server.:\n          value: 2017-03-01-preview\n        Creates or updates a SQL Server in a Registration group.:\n          value: 2017-03-01-preview\n    ResourceGroupParameter:\n      description: Name of the resource group that contains the resource. You can obtain\n        this value from the Azure Resource Manager API or the portal.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Gets all SQL Server registrations in a resource group.:\n          value: testrg\n        Deletes a SQL Server registration.:\n          value: testrg\n        Gets a SQL Server registration.:\n          value: testrg\n        Updates a SQL Server Registration tags.:\n          value: testrg\n        Creates or updates a SQL Server registration.:\n          value: testrg\n        Gets all SQL Servers in a SQL Server Registration.:\n          value: testrg\n        Deletes a SQL Server.:\n          value: testrg\n        Gets a SQL Server.:\n          value: testrg\n        Creates or updates a SQL Server in a Registration group.:\n          value: testrg\n    SqlServerNameParameter:\n      description: Name of the Sql Server.\n      in: path\n      name: SqlServerName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SqlServerRegistrationNameParameter:\n      description: Name of the Sql Server registration.\n      in: path\n      name: SqlServerRegistrationNameParameter\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: Subscription ID that identifies an Azure subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        Gets all SQL Server registrations in a subscription.:\n          value: 00000000-1111-2222-3333-444444444444\n        Gets all SQL Server registrations in a resource group.:\n          value: 00000000-1111-2222-3333-444444444444\n        Deletes a SQL Server registration.:\n          value: 00000000-1111-2222-3333-444444444444\n        Gets a SQL Server registration.:\n          value: 00000000-1111-2222-3333-444444444444\n        Updates a SQL Server Registration tags.:\n          value: 00000000-1111-2222-3333-444444444444\n        Creates or updates a SQL Server registration.:\n          value: 00000000-1111-2222-3333-444444444444\n        Gets all SQL Servers in a SQL Server Registration.:\n          value: 00000000-1111-2222-3333-444444444444\n        Deletes a SQL Server.:\n          value: 00000000-1111-2222-3333-444444444444\n        Gets a SQL Server.:\n          value: 00000000-1111-2222-3333-444444444444\n        Creates or updates a SQL Server in a Registration group.:\n          value: 00000000-1111-2222-3333-444444444444\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    Operation:\n      description: SQL REST API operation definition.\n      properties:\n        display:\n          $ref: \"#/components/schemas/OperationDisplay\"\n        name:\n          description: The name of the operation being performed on this particular object.\n          readOnly: true\n          type: string\n        origin:\n          description: The intended executor of the operation.\n          enum:\n            - user\n            - system\n          readOnly: true\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: OperationOrigin\n        properties:\n          additionalProperties:\n            type: object\n          description: Additional descriptions for the operation.\n          readOnly: true\n          type: object\n          x-ms-client-flatten: false\n      type: object\n    OperationDisplay:\n      description: Display metadata associated with the operation.\n      properties:\n        description:\n          description: The localized friendly description for the operation.\n          readOnly: true\n          type: string\n        operation:\n          description: The localized friendly name for the operation.\n          readOnly: true\n          type: string\n        provider:\n          description: The localized friendly form of the resource provider name.\n          readOnly: true\n          type: string\n        resource:\n          description: The localized friendly form of the resource type related to this\n            action/operation.\n          readOnly: true\n          type: string\n      type: object\n    OperationListResult:\n      description: Result of the request to list SQL operations.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/Operation\"\n          readOnly: true\n          type: array\n      type: object\n    ProxyResource:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: ARM proxy resource.\n      properties: {}\n      type: object\n    Resource:\n      description: ARM resource.\n      properties:\n        id:\n          description: Resource ID.\n          readOnly: true\n          type: string\n        name:\n          description: Resource name.\n          readOnly: true\n          type: string\n        type:\n          description: Resource type.\n          readOnly: true\n          type: string\n      type: object\n      x-ms-azure-resource: true\n    SqlServer:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: A SQL server.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SqlServerProperties\"\n      type: object\n    SqlServerListResult:\n      description: A list of SQL servers.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/SqlServer\"\n          readOnly: true\n          type: array\n      type: object\n    SqlServerProperties:\n      description: The SQL server properties.\n      properties:\n        cores:\n          description: Cores of the Sql Server.\n          format: int32\n          type: integer\n          x-ms-mutability:\n            - update\n        edition:\n          description: Sql Server Edition.\n          type: string\n        propertyBag:\n          description: Sql Server Json Property Bag.\n          type: string\n        registrationID:\n          description: ID for Parent Sql Server Registration.\n          type: string\n        version:\n          description: Version of the Sql Server.\n          type: string\n      type: object\n    SqlServerRegistration:\n      allOf:\n        - $ref: \"#/components/schemas/TrackedResource\"\n      description: A SQL server registration.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SqlServerRegistrationProperties\"\n      required:\n        - location\n      type: object\n    SqlServerRegistrationListResult:\n      description: Server.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/SqlServerRegistration\"\n          readOnly: true\n          type: array\n      type: object\n    SqlServerRegistrationProperties:\n      description: The SQL server Registration properties.\n      properties:\n        propertyBag:\n          description: Optional Properties as JSON string\n          type: string\n        resourceGroup:\n          description: Resource Group Name\n          type: string\n        subscriptionId:\n          description: Subscription Id\n          format: uuid\n          type: string\n      type: object\n    SqlServerRegistrationUpdate:\n      description: An update to a SQL Server Registration.\n      properties:\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags.\n          type: object\n      type: object\n    TrackedResource:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: ARM tracked top level resource.\n      properties:\n        location:\n          description: Resource location.\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n        tags:\n          additionalProperties:\n            type: string\n          description: Resource tags.\n          type: object\n      required:\n        - location\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-azuredata-2017-03-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-azuredata-2017-03-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}