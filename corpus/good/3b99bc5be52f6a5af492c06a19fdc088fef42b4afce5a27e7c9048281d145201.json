{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FGRibreau/scaleway-api-client"
		},
		"file": {
			"name": "scaleway.lb.v1.Api.yml",
			"size": 0,
			"path": "openapi/scaleway.lb.v1.Api.yml",
			"byteSize": 117540,
			"content": "openapi: 3.0.0\ninfo:\n  title: Load balancer API\n  description: |\n    # Introduction\n\n    Load Balancer is a highly available, fully-managed type of instances which allows to scale your applications and ensure their availability. It provides a special public IP address which is always reachable: even if we experience a hardware failure, we will reroute this address to a backup instance, which is pre-configured in advance. You can use this address for your frontends, and the incoming sessions will be balanced between your backend servers.\n\n    You can add as many servers to your backends as your needs require. This allows to scale your applications on demand, e. g. increase the capacity of a web-site for high-usage periods and decrease it when your customers are on vacation.\n\n    Load Balancer can monitor the availability of your backend servers, detect that one of them is not available anymore, and rebalance the load between the rest of the servers thus making your applications always available to users.\n\n    ## Technical Limitations\n\n    - Your Load Balancer external highly available IP address can only be IPv4. You can, however, use IPv6 between Load Balancer and backend servers.\n\n    # Main Load Balancer Components\n\n    \u003cdiv style=\"text-align:center; margin:20px;\"\u003e\u003cimg src=\"https://loadbalancer-doc.s3.nl-ams.scw.cloud/load_balancer_components.png\" alt=\"Scaleway Load Balancer Diagram\" width=\"70%\"/\u003e\u003c/div\u003e\n\n    ## Frontends\n\n    Each Load Balancer is configured with one or several frontends. Each frontend listens to a configured port and has one or many backends, associated with it, to witch it forwards the flows.\n\n    ## High Availability\n\n    ### Master and Backup Load Balancers\n\n    Each Load Balancer is implemented with two instances: master and backup, which provide active/passive hight availability. These instances are synchronously preconfigured, so if the master fails, the backup is always ready to handle the traffic. There is no stateful connection synchronization between master and backup, so all long-living sessions must be reestablished in case of a switchover.\n\n    Master and backup are running on different hardware clusters to insure that they don't share physical resources and minimize the risk of a simultaneous failure.\n\n    ### Highly Available IP address\n\n    IP address, which the frontend listens to, is a little bit more than just a simple IP address. It is a special highly available address, which is, by default, routed to the master Load Balancer instance. Should the master instances experience a failure, this address is automatically rerouted to the backup one. This action is taken automatically by the Load Balancer control subsystems, so it is transparent to the user.\n\n    Highly available IP is automatically created by default, when a Load Balancer is created. It can also be conserved when an LB is deleted and reused later. See [CreateLb](http://lb.preview.scaleway.com/#operation/CreateLb \"CreateLb API call documentation\") and [DeleteLb](http://lb.preview.scaleway.com/#operation/DeleteLb \"DeleteLb API call documentation\") API calls documentation for more details on how to do this.\n\n    Only one highly available IP per Load Balancer is currently supported. By this time it can only be IPv4, IPv6 support will come later.\n\n    ## Backends\n\n    Backend is a list of servers between which the flows of a given frontend are balanced. In addition to that backend has multiple parameters like session timeouts, protocol type, associated health-checks etc.\n\n    ## Health Checks\n\n    Backend servers can fail. One of the main features of the Load Balancer is to monitor their availability and, in case of a failure, redirect new flows between the active servers in the pool. Health check objects are used to detect backend servers failures. Each health check is an availability test specification, which defines how you determine that a backend server is \"Up\" or \"Down\". It can be a given number of missing ICMP echo replies or an unsuccessful HTTP request of a given URL.\n\n    For the full list of supported health check types see [UpdateHealthCheck](#operation/UpdateHealthCheck)\n\n    # Quick Start Guide\n\n    Below you will find a step by step guide on how to create and delete your Load Balancer, add frontends and backends, and configure health checks.\n\n    ## Step 0: Prerequisites\n\n    In order to use Scaleway API you need to have `curl` installed. It is also a good idea to have `jq`, which will help you to read and parse JSON output. Make sure you have these two tools before you begin. Otherwise use your package manager to install them.\n\n    To call Scaleway API, you need an API key. If you don't have one yet, [you can create it with the Scaleway console](https://www.scaleway.com/en/docs/generate-api-keys/).\n\n    \u003c!-- TODO: Add a link to documentation website and remove this CURL. --\u003e\n\n    Using this token, get your project ID:\n\n    ```bash\n    export ACCESS_KEY=\"\u003cAccess key of your API key\u003e\"\n    export SECRET_KEY=\"\u003cSecret key of your API key\u003e\"\n    export REGION=\"\u003cchoose your location (nl-ams/fr-par)\u003e\"\n\n    curl -s -H \"X-Auth-Token: $SECRET_KEY\" https://account.scaleway.com/tokens/$ACCESS_KEY | jq -r '.token.project_id'\n\n    export PROJECT_ID=\"\u003cyour project ID\u003e\"\n    ```\n\n    You can also find your project ID in [the Scaleway web console](https://console.scaleway.com/project/settings).\n\n    ## Step 1: Create Load Balancer\n\n    Customize the name, description, tags and set your project ID\n\n    ```bash\n\n    curl -X POST \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs\" -H \"accept: application/json\" -H \"X-Auth-Token: $TOKEN\" -H \"Content-Type: application/json\" \\\n    -d \"{\\\"description\\\":\\\"YOUR DESCRIPTION\\\",\\\"name\\\":\\\"TEST\\\",\\\"project_id\\\":\\\"$PROJECT_ID\\\",\\\"tags\\\":[\\\"test\\\", \\\"step by step\\\"]}\"\n    ```\n\n    Copy the `id` field of the response to use at the next steps. For the sake of simplicity we will save the ID to a variable, which we will use in the following examples:\n\n    ```bash\n    export LB_ID=\"\u003cyour load balancer id\u003e\"\n    ```\n\n    To destroy a Load Balancer use the following call:\n\n    ```bash\n    curl -s -H \"X-Auth-Token: $TOKEN\" -X DELETE \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID\" -H \"Content-Type: application/json\" -d \"{\\\"release_ip\\\": false}\"\n    ```\n\n    ## Step 2: Retrieve Load Balancer Details\n\n    It normally takes less than a second to provision a load balancer, but you always can check the status with the following call.\n\n    ```\n    curl -s \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID\" -H \"accept: application/json\" -H \"X-Auth-Token: $TOKEN\" -H \"Content-Type: application/json\" | jq .\n    ```\n\n    In the reply, you will find:\n\n    - `instances`: details of your load balancer cluster status. If both instances have the `ready` status, it means that the cluster if fully operational and highly available. If one of the instances fail, your traffic will be switched to the other.\n    - `ip_address`: This is the public highly available IP address. Use this address as the front-end of your highly availably services.\n\n    ## Step 3: Create Backend\n\n    In order to create a backend you need to customize the following parameters:\n\n    - `forward_port` \u0026mdash; load balancer with forward user sessions to this port. For example, you can use port 8080 on a backend, while your front-end port is 80.\n    - `forward_port_algorithm` \u0026mdash; string value, specifying of of the following options:\n      - `\"roundrobin\"` \u0026mdash; new sessions are balanced equally between the backend servers;\n      - `\"leastconn\"` \u0026mdash; will take into account the number of active sessions, established to each of the servers, and will forward new ones to the server, which has the least.\n    - `server_ip` : A list of IPv4 or IPv6 address of your Scaleway or Online.net servers to.\n\n    Other backend parameters are documented here:\n    [CreateBackend](#operation/CreateBackend)\n\n    ```bash\n\n    curl -s -X POST \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID/backends\" -H \"accept: application/json\" -H \"X-Auth-Token: $TOKEN\" -H \"Content-Type: application/json\" \\\n    -d \"{\\\"forward_port\\\":80,\\\"forward_port_algorithm\\\":\\\"roundrobin\\\",\\\"forward_protocol\\\":\\\"tcp\\\",\\\"health_check\\\":{\\\"check_delay\\\":2000,\\\"check_max_retries\\\":3,\\\"check_timeout\\\":1000,\\\"port\\\":80,\\\"tcp_config\\\":{}},\\\"name\\\":\\\"main backend\\\",\\\"send_proxy_v2\\\":false,\\\"server_ip\\\":[\\\"\u003cREPLACE-BY-IP-OF-YOUR-SERVER1\u003e\\\", \\\"\u003cREPLACE-BY-IP-OF-YOUR-SERVER2\u003e\\\"]} | jq .\"\n    ```\n\n    Save the `id` field of the reply.\n\n    ```bash\n    export $BACKEND_ID=\"\u003cID of your backend\u003e\"\n    ```\n\n    If you want to delete a backend, this is how it can be done.\n\n    ```bash\n    curl -H \"X-Auth-Token: $TOKEN\" -X DELETE \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID/backends/$BACKEND_ID\"\n    ```\n\n    ## Step 4: Create Frontend\n\n    Creating a frontend is straight-forward. You need to know the IDs of a load balancer and an existing frontend, then specify the `inbound_port`, on which the frontend will listen for incoming connections. You can also customize the protocol and client timeout. For more details on these options see the [CreateFrontend call documentation.](#operation/CreateFrontend)\n\n    Main fields:\n\n    - `backend_id` \u0026mdash; link your frontend to the backend where the traffic will be redirect\n    - `inbound_port` \u0026mdash; accept connections from this port\n\n    ```bash\n    curl -X POST \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID/frontends\" -H \"accept: application/json\" -H \"X-Auth-Token: $TOKEN\" -H \"Content-Type: application/json\" \\\n    -d \"{\\\"backend_id\\\":\\\"$BACKEND_ID\\\",\\\"inbound_port\\\":80,\\\"inbound_protocol\\\":\\\"tcp\\\",\\\"name\\\":\\\"main frontend\\\",\\\"timeout_client\\\":5000}\"\n    ```\n\n    Save the `id` field of the reply.\n\n    ```bash\n    export $FRONTEND_ID=\"\u003cID of your frontend\u003e\"\n    ```\n\n    You can delete a frontend using the following API call\n\n    ```bash\n    curl -H \"X-Auth-Token: $TOKEN\" -X DELETE \"https://api.scaleway.com/lb/v1/regions/$REGION/lbs/$LB_ID/frontends/$FRONTEND_ID\"\n    ```\n\n    # Region\n\n    Choose in which location you want deploy your load balancer\n\n    | Name      | API ID   |\n    | --------- | -------- |\n    | Paris     | `fr-par` |\n    | Amsterdam | `nl-ams` |\n  version: v1\nservers:\n- url: https://api.scaleway.com\ntags:\n- name: load balancer\n  description: Main load balancer object.\n- name: Frontends\n  description: Load balancer frontend objects.\n- name: Backends\n  description: Load balancer backend objects.\n- name: Ips\n  description: Highly available IP address object.\n- name: Stats\n  description: Load balancer statistics.\n- name: Acls\n  description: Load balancer ACL\n- name: Certificate\n  description: Generate (import soon) an SSL certificate for your domain names and\n    update or create a frontend to use it.\n- name: Alert subscribers\n- name: BETA - Private Network\ncomponents:\n  schemas:\n    google.protobuf.Int32Value:\n      type: number\n      nullable: true\n    google.protobuf.StringValue:\n      type: string\n      nullable: true\n    scaleway.lb.v1.Acl:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of your ACL ressource\n        name:\n          type: string\n          description: Name of you ACL ressource\n        match:\n          type: object\n          description: The ACL match rule. At least `ip_subnet` or `http_filter` and\n            `http_filter_value` are required\n          properties:\n            ip_subnet:\n              type: array\n              description: A list of IPs or CIDR v4/v6 addresses of the client of\n                the session to match\n              items:\n                $ref: '#/components/schemas/google.protobuf.StringValue'\n            http_filter:\n              type: string\n              description: |\n                The HTTP filter to match. This filter is supported only if your backend supports HTTP forwarding.\n                It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).\n              enum:\n              - acl_http_filter_none\n              - path_begin\n              - path_end\n              - regex\n              default: acl_http_filter_none\n            http_filter_value:\n              type: array\n              description: A list of possible values to match for the given HTTP filter\n              items:\n                $ref: '#/components/schemas/google.protobuf.StringValue'\n            invert:\n              type: boolean\n              description: If set to `true`, the ACL matching condition will be of\n                type \"UNLESS\"\n          x-properties-order:\n          - ip_subnet\n          - http_filter\n          - http_filter_value\n          - invert\n        action:\n          type: object\n          description: Action to undertake when an ACL filter matches\n          properties:\n            type:\n              type: string\n              description: The action type\n              enum:\n              - allow\n              - deny\n              default: allow\n          x-properties-order:\n          - type\n        frontend:\n          type: object\n          description: See the Frontend object description\n          properties:\n            id:\n              type: string\n            name:\n              type: string\n            inbound_port:\n              type: number\n            backend:\n              $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n            lb:\n              $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n            timeout_client:\n              type: number\n              description: (in milliseconds)\n            certificate:\n              deprecated: true\n              $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n            certificate_ids:\n              type: array\n              items:\n                type: string\n          x-properties-order:\n          - id\n          - name\n          - inbound_port\n          - backend\n          - lb\n          - timeout_client\n          - certificate\n          - certificate_ids\n        index:\n          type: number\n          description: Order between your Acls (ascending order, 0 is first acl executed)\n      x-properties-order:\n      - id\n      - name\n      - match\n      - action\n      - frontend\n      - index\n    scaleway.lb.v1.Backend:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        forward_protocol:\n          $ref: '#/components/schemas/scaleway.lb.v1.Protocol'\n        forward_port:\n          type: number\n        forward_port_algorithm:\n          $ref: '#/components/schemas/scaleway.lb.v1.ForwardPortAlgorithm'\n        sticky_sessions:\n          $ref: '#/components/schemas/scaleway.lb.v1.StickySessionsType'\n        sticky_sessions_cookie_name:\n          type: string\n        health_check:\n          $ref: '#/components/schemas/scaleway.lb.v1.HealthCheck'\n        pool:\n          type: array\n          items:\n            type: string\n        lb:\n          $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n        send_proxy_v2:\n          type: boolean\n          deprecated: true\n        timeout_server:\n          type: number\n          description: (in milliseconds)\n        timeout_connect:\n          type: number\n          description: (in milliseconds)\n        timeout_tunnel:\n          type: number\n          description: (in milliseconds)\n        on_marked_down_action:\n          $ref: '#/components/schemas/scaleway.lb.v1.OnMarkedDownAction'\n        proxy_protocol:\n          $ref: '#/components/schemas/scaleway.lb.v1.ProxyProtocol'\n      x-properties-order:\n      - id\n      - name\n      - forward_protocol\n      - forward_port\n      - forward_port_algorithm\n      - sticky_sessions\n      - sticky_sessions_cookie_name\n      - health_check\n      - pool\n      - lb\n      - send_proxy_v2\n      - timeout_server\n      - timeout_connect\n      - timeout_tunnel\n      - on_marked_down_action\n      - proxy_protocol\n    scaleway.lb.v1.BackendServerStats:\n      type: object\n      properties:\n        instance_id:\n          type: string\n          description: ID of your loadbalancer cluster server\n        backend_id:\n          type: string\n          description: ID of your Backend\n        ip:\n          type: string\n          description: IPv4 or IPv6 address of the server backend\n        server_state:\n          type: string\n          description: Server operational state (stopped/starting/running/stopping)\n          enum:\n          - stopped\n          - starting\n          - running\n          - stopping\n          default: stopped\n        server_state_changed_at:\n          type: string\n          description: Time since last operational change\n          format: date-time\n        last_health_check_status:\n          type: string\n          description: Last health check status (unknown/neutral/failed/passed/condpass)\n          enum:\n          - unknown\n          - neutral\n          - failed\n          - passed\n          - condpass\n          default: unknown\n      x-properties-order:\n      - instance_id\n      - backend_id\n      - ip\n      - server_state\n      - server_state_changed_at\n      - last_health_check_status\n    scaleway.lb.v1.Certificate:\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of certificate (Let's encrypt or custom)\n          enum:\n          - letsencryt\n          - custom\n          default: letsencryt\n        id:\n          type: string\n          description: Certificate ID\n        common_name:\n          type: string\n          description: Main domain name of certificate\n        subject_alternative_name:\n          type: array\n          description: Alternative domain names\n          items:\n            type: string\n        fingerprint:\n          type: string\n          description: Identifier (SHA-1) of the certificate\n        not_valid_before:\n          type: string\n          description: Validity bounds\n          format: date-time\n        not_valid_after:\n          type: string\n          description: Validity bounds\n          format: date-time\n        status:\n          type: string\n          description: Status of certificate\n          enum:\n          - pending\n          - ready\n          - error\n          default: pending\n        lb:\n          type: object\n          description: Load balancer object\n          properties:\n            id:\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            status:\n              $ref: '#/components/schemas/scaleway.lb.v1.Lb.Status'\n            instances:\n              type: array\n              items:\n                $ref: '#/components/schemas/scaleway.lb.v1.Instance'\n            organization_id:\n              type: string\n            ip:\n              type: array\n              items:\n                $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n            tags:\n              type: array\n              items:\n                type: string\n            frontend_count:\n              type: number\n            backend_count:\n              type: number\n            type:\n              type: string\n            subscriber:\n              $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n            ssl_compatibility_level:\n              $ref: '#/components/schemas/scaleway.lb.v1.SSLCompatibilityLevel'\n            project_id:\n              type: string\n            region:\n              type: string\n          x-properties-order:\n          - id\n          - name\n          - description\n          - status\n          - instances\n          - organization_id\n          - ip\n          - tags\n          - frontend_count\n          - backend_count\n          - type\n          - subscriber\n          - ssl_compatibility_level\n          - project_id\n          - region\n        name:\n          type: string\n          description: Certificate name\n      x-properties-order:\n      - type\n      - id\n      - common_name\n      - subject_alternative_name\n      - fingerprint\n      - not_valid_before\n      - not_valid_after\n      - status\n      - lb\n      - name\n    scaleway.lb.v1.ForwardPortAlgorithm:\n      type: string\n      enum:\n      - roundrobin\n      - leastconn\n      - first\n      default: roundrobin\n    scaleway.lb.v1.Frontend:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        inbound_port:\n          type: number\n        backend:\n          $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n        lb:\n          $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n        timeout_client:\n          type: number\n          description: (in milliseconds)\n        certificate:\n          deprecated: true\n          $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n        certificate_ids:\n          type: array\n          items:\n            type: string\n      x-properties-order:\n      - id\n      - name\n      - inbound_port\n      - backend\n      - lb\n      - timeout_client\n      - certificate\n      - certificate_ids\n    scaleway.lb.v1.HealthCheck:\n      type: object\n      properties:\n        mysql_config:\n          type: object\n          description: The check requires MySQL \u003e=3.22, for older versions, use TCP\n            check\n          properties:\n            user:\n              type: string\n          x-properties-order:\n          - user\n          x-one-of: config\n        ldap_config:\n          type: object\n          description: The response is analyzed to find an LDAPv3 response message\n          x-one-of: config\n        redis_config:\n          type: object\n          description: The response is analyzed to find the +PONG response message\n          x-one-of: config\n        check_max_retries:\n          type: number\n        tcp_config:\n          type: object\n          x-one-of: config\n        pgsql_config:\n          type: object\n          properties:\n            user:\n              type: string\n          x-properties-order:\n          - user\n          x-one-of: config\n        http_config:\n          type: object\n          properties:\n            uri:\n              type: string\n            method:\n              type: string\n            code:\n              $ref: '#/components/schemas/google.protobuf.Int32Value'\n          x-properties-order:\n          - uri\n          - method\n          - code\n          x-one-of: config\n        https_config:\n          type: object\n          properties:\n            uri:\n              type: string\n            method:\n              type: string\n            code:\n              $ref: '#/components/schemas/google.protobuf.Int32Value'\n          x-properties-order:\n          - uri\n          - method\n          - code\n          x-one-of: config\n        port:\n          type: number\n        check_timeout:\n          type: number\n          description: (in milliseconds)\n        check_delay:\n          type: number\n          description: (in milliseconds)\n      x-properties-order:\n      - mysql_config\n      - ldap_config\n      - redis_config\n      - check_max_retries\n      - tcp_config\n      - pgsql_config\n      - http_config\n      - https_config\n      - port\n      - check_timeout\n      - check_delay\n    scaleway.lb.v1.Instance:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          $ref: '#/components/schemas/scaleway.lb.v1.Instance.Status'\n        ip_address:\n          type: string\n        region:\n          type: string\n      x-properties-order:\n      - id\n      - status\n      - ip_address\n      - region\n    scaleway.lb.v1.Instance.Status:\n      type: string\n      enum:\n      - unknown\n      - ready\n      - pending\n      - stopped\n      - error\n      - locked\n      - migrating\n      default: unknown\n    scaleway.lb.v1.Ip:\n      type: object\n      properties:\n        id:\n          type: string\n        ip_address:\n          type: string\n        organization_id:\n          type: string\n        lb_id:\n          $ref: '#/components/schemas/google.protobuf.StringValue'\n        reverse:\n          type: string\n        project_id:\n          type: string\n        region:\n          type: string\n      x-properties-order:\n      - id\n      - ip_address\n      - organization_id\n      - lb_id\n      - reverse\n      - project_id\n      - region\n    scaleway.lb.v1.Lb:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        status:\n          $ref: '#/components/schemas/scaleway.lb.v1.Lb.Status'\n        instances:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Instance'\n        organization_id:\n          type: string\n        ip:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n        tags:\n          type: array\n          items:\n            type: string\n        frontend_count:\n          type: number\n        backend_count:\n          type: number\n        type:\n          type: string\n        subscriber:\n          $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n        ssl_compatibility_level:\n          $ref: '#/components/schemas/scaleway.lb.v1.SSLCompatibilityLevel'\n        project_id:\n          type: string\n        region:\n          type: string\n      x-properties-order:\n      - id\n      - name\n      - description\n      - status\n      - instances\n      - organization_id\n      - ip\n      - tags\n      - frontend_count\n      - backend_count\n      - type\n      - subscriber\n      - ssl_compatibility_level\n      - project_id\n      - region\n    scaleway.lb.v1.Lb.Status:\n      type: string\n      enum:\n      - unknown\n      - ready\n      - pending\n      - stopped\n      - error\n      - locked\n      - migrating\n      default: unknown\n    scaleway.lb.v1.LbStats:\n      type: object\n      properties:\n        backend_servers_stats:\n          type: array\n          description: List stats object of your loadbalancer\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.BackendServerStats'\n      x-properties-order:\n      - backend_servers_stats\n    scaleway.lb.v1.LbType:\n      type: object\n      properties:\n        name:\n          type: string\n        stock_status:\n          $ref: '#/components/schemas/scaleway.lb.v1.LbType.Stock'\n        description:\n          type: string\n        region:\n          type: string\n      x-properties-order:\n      - name\n      - stock_status\n      - description\n      - region\n    scaleway.lb.v1.LbType.Stock:\n      type: string\n      enum:\n      - unknown\n      - low_stock\n      - out_of_stock\n      - available\n      default: unknown\n    scaleway.lb.v1.ListAclResponse:\n      type: object\n      properties:\n        acls:\n          type: array\n          description: List of Acl object (see Acl object description)\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Acl'\n        total_count:\n          type: number\n          description: The total number of items\n      x-properties-order:\n      - acls\n      - total_count\n    scaleway.lb.v1.ListBackendStatsResponse:\n      type: object\n      properties:\n        backend_servers_stats:\n          type: array\n          description: List backend stats object of your loadbalancer\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.BackendServerStats'\n        total_count:\n          type: number\n          description: The total number of items\n      x-properties-order:\n      - backend_servers_stats\n      - total_count\n    scaleway.lb.v1.ListBackendsResponse:\n      type: object\n      properties:\n        backends:\n          type: array\n          description: List Backend objects of a load balancer\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n        total_count:\n          type: number\n          description: Total count, wihtout pagination\n      x-properties-order:\n      - backends\n      - total_count\n    scaleway.lb.v1.ListCertificatesResponse:\n      type: object\n      properties:\n        certificates:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n        total_count:\n          type: number\n      x-properties-order:\n      - certificates\n      - total_count\n    scaleway.lb.v1.ListFrontendsResponse:\n      type: object\n      properties:\n        frontends:\n          type: array\n          description: List frontends object of your loadbalancer\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Frontend'\n        total_count:\n          type: number\n          description: Total count, wihtout pagination\n      x-properties-order:\n      - frontends\n      - total_count\n    scaleway.lb.v1.ListIpsResponse:\n      type: object\n      properties:\n        ips:\n          type: array\n          description: List IP address object\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n        total_count:\n          type: number\n          description: Total count, wihtout pagination\n      x-properties-order:\n      - ips\n      - total_count\n    scaleway.lb.v1.ListLbPrivateNetworksResponse:\n      type: object\n      properties:\n        private_network:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.PrivateNetwork'\n        total_count:\n          type: number\n      x-properties-order:\n      - private_network\n      - total_count\n    scaleway.lb.v1.ListLbTypesResponse:\n      type: object\n      properties:\n        lb_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.LbType'\n        total_count:\n          type: number\n      x-properties-order:\n      - lb_types\n      - total_count\n    scaleway.lb.v1.ListLbsRequest.OrderBy:\n      type: string\n      enum:\n      - created_at_asc\n      - created_at_desc\n      - name_asc\n      - name_desc\n      default: created_at_asc\n    scaleway.lb.v1.ListLbsResponse:\n      type: object\n      properties:\n        lbs:\n          type: array\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n        total_count:\n          type: number\n      x-properties-order:\n      - lbs\n      - total_count\n    scaleway.lb.v1.ListPrivateNetworksRequest.OrderBy:\n      type: string\n      enum:\n      - created_at_asc\n      - created_at_desc\n      default: created_at_asc\n    scaleway.lb.v1.ListSubscriberResponse:\n      type: object\n      properties:\n        subscribers:\n          type: array\n          description: List of Subscribers object\n          items:\n            $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n        total_count:\n          type: number\n          description: The total number of items\n      x-properties-order:\n      - subscribers\n      - total_count\n    scaleway.lb.v1.OnMarkedDownAction:\n      type: string\n      enum:\n      - on_marked_down_action_none\n      - shutdown_sessions\n      default: on_marked_down_action_none\n    scaleway.lb.v1.PrivateNetwork:\n      type: object\n      properties:\n        lb:\n          type: object\n          description: LoadBalancer object\n          properties:\n            id:\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            status:\n              $ref: '#/components/schemas/scaleway.lb.v1.Lb.Status'\n            instances:\n              type: array\n              items:\n                $ref: '#/components/schemas/scaleway.lb.v1.Instance'\n            organization_id:\n              type: string\n            ip:\n              type: array\n              items:\n                $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n            tags:\n              type: array\n              items:\n                type: string\n            frontend_count:\n              type: number\n            backend_count:\n              type: number\n            type:\n              type: string\n            subscriber:\n              $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n            ssl_compatibility_level:\n              $ref: '#/components/schemas/scaleway.lb.v1.SSLCompatibilityLevel'\n            project_id:\n              type: string\n            region:\n              type: string\n          x-properties-order:\n          - id\n          - name\n          - description\n          - status\n          - instances\n          - organization_id\n          - ip\n          - tags\n          - frontend_count\n          - backend_count\n          - type\n          - subscriber\n          - ssl_compatibility_level\n          - project_id\n          - region\n        ip_address:\n          type: array\n          description: Local ip address of load balancer instance\n          items:\n            type: string\n        private_network_id:\n          type: string\n          description: Instance private network id\n        status:\n          type: string\n          description: Status (running, to create...) of private network connection\n          enum:\n          - unknown\n          - ready\n          - pending\n          - error\n          default: unknown\n      x-properties-order:\n      - lb\n      - ip_address\n      - private_network_id\n      - status\n    scaleway.lb.v1.Protocol:\n      type: string\n      enum:\n      - tcp\n      - http\n      default: tcp\n    scaleway.lb.v1.ProxyProtocol:\n      type: string\n      enum:\n      - proxy_protocol_unknown\n      - proxy_protocol_none\n      - proxy_protocol_v1\n      - proxy_protocol_v2\n      - proxy_protocol_v2_ssl\n      - proxy_protocol_v2_ssl_cn\n      default: proxy_protocol_unknown\n    scaleway.lb.v1.SSLCompatibilityLevel:\n      type: string\n      enum:\n      - ssl_compatibility_level_unknown\n      - ssl_compatibility_level_intermediate\n      - ssl_compatibility_level_modern\n      - ssl_compatibility_level_old\n      default: ssl_compatibility_level_unknown\n    scaleway.lb.v1.StickySessionsType:\n      type: string\n      enum:\n      - none\n      - cookie\n      - table\n      default: none\n    scaleway.lb.v1.Subscriber:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Subscriber ID\n        name:\n          type: string\n          description: Subscriber name\n        email_config:\n          type: object\n          description: Email address of subscriber\n          properties:\n            email:\n              type: string\n              description: Email who receive alert\n          required:\n          - email\n          x-properties-order:\n          - email\n          x-one-of: config\n        webhook_config:\n          type: object\n          description: WebHook URI of subscriber\n          properties:\n            uri:\n              type: string\n              description: URI who receive POST request\n          required:\n          - uri\n          x-properties-order:\n          - uri\n          x-one-of: config\n      x-properties-order:\n      - id\n      - name\n      - email_config\n      - webhook_config\n  securitySchemes:\n    scaleway:\n      in: header\n      name: X-Auth-Token\n      type: apiKey\npaths:\n  /lb/v1/regions/{region}/acls/{acl_id}:\n    get:\n      tags:\n      - Acls\n      operationId: GetAcl\n      summary: Get an ACL\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: acl_id\n        description: ID of your ACL ressource\n        required: true\n        schema:\n          type: string\n          description: ID of your ACL ressource\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Acl'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Acls\n      operationId: UpdateAcl\n      summary: Update an ACL\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: acl_id\n        description: ID of your ACL ressource\n        required: true\n        schema:\n          type: string\n          description: ID of your ACL ressource\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Acl'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Name of your ACL ressource\n                action:\n                  type: object\n                  description: Action to undertake when an ACL filter matches\n                  properties:\n                    type:\n                      type: string\n                      description: The action type\n                      enum:\n                      - allow\n                      - deny\n                      default: allow\n                  x-properties-order:\n                  - type\n                match:\n                  type: object\n                  description: The ACL match rule. At least `ip_subnet` or `http_filter`\n                    and `http_filter_value` are required\n                  properties:\n                    ip_subnet:\n                      type: array\n                      description: A list of IPs or CIDR v4/v6 addresses of the client\n                        of the session to match\n                      items:\n                        $ref: '#/components/schemas/google.protobuf.StringValue'\n                    http_filter:\n                      type: string\n                      description: |\n                        The HTTP filter to match. This filter is supported only if your backend supports HTTP forwarding.\n                        It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).\n                      enum:\n                      - acl_http_filter_none\n                      - path_begin\n                      - path_end\n                      - regex\n                      default: acl_http_filter_none\n                    http_filter_value:\n                      type: array\n                      description: A list of possible values to match for the given\n                        HTTP filter\n                      items:\n                        $ref: '#/components/schemas/google.protobuf.StringValue'\n                    invert:\n                      type: boolean\n                      description: If set to `true`, the ACL matching condition will\n                        be of type \"UNLESS\"\n                  x-properties-order:\n                  - ip_subnet\n                  - http_filter\n                  - http_filter_value\n                  - invert\n                index:\n                  type: number\n                  description: Order between your Acls (ascending order, 0 is first\n                    acl executed)\n              required:\n              - name\n              - action\n              - match\n              - index\n              x-properties-order:\n              - name\n              - action\n              - match\n              - index\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Acls\n      operationId: DeleteAcl\n      summary: Delete an ACL\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: acl_id\n        description: ID of your ACL ressource\n        required: true\n        schema:\n          type: string\n          description: ID of your ACL ressource\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/backends/{backend_id}:\n    get:\n      tags:\n      - Backends\n      operationId: GetBackend\n      summary: Get a backend in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: Backend ID\n        required: true\n        schema:\n          type: string\n          description: Backend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Backends\n      operationId: UpdateBackend\n      summary: Update a backend in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                forward_protocol:\n                  $ref: '#/components/schemas/scaleway.lb.v1.Protocol'\n                forward_port:\n                  type: number\n                forward_port_algorithm:\n                  $ref: '#/components/schemas/scaleway.lb.v1.ForwardPortAlgorithm'\n                sticky_sessions:\n                  $ref: '#/components/schemas/scaleway.lb.v1.StickySessionsType'\n                sticky_sessions_cookie_name:\n                  type: string\n                send_proxy_v2:\n                  type: boolean\n                  deprecated: true\n                timeout_server:\n                  type: number\n                  description: (in milliseconds)\n                timeout_connect:\n                  type: number\n                  description: (in milliseconds)\n                timeout_tunnel:\n                  type: number\n                  description: (in milliseconds)\n                on_marked_down_action:\n                  $ref: '#/components/schemas/scaleway.lb.v1.OnMarkedDownAction'\n                proxy_protocol:\n                  $ref: '#/components/schemas/scaleway.lb.v1.ProxyProtocol'\n              x-properties-order:\n              - name\n              - forward_protocol\n              - forward_port\n              - forward_port_algorithm\n              - sticky_sessions\n              - sticky_sessions_cookie_name\n              - send_proxy_v2\n              - timeout_server\n              - timeout_connect\n              - timeout_tunnel\n              - on_marked_down_action\n              - proxy_protocol\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Backends\n      operationId: DeleteBackend\n      summary: Delete a backend in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: ID of the backend to delete\n        required: true\n        schema:\n          type: string\n          description: ID of the backend to delete\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/backends/{backend_id}/healthcheck:\n    put:\n      tags:\n      - Backends\n      operationId: UpdateHealthCheck\n      summary: Update an healthcheck for a given backend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: Backend ID\n        required: true\n        schema:\n          type: string\n          description: Backend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.HealthCheck'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                port:\n                  type: number\n                  description: Specify the port used to health check\n                check_delay:\n                  type: number\n                  description: Time between two consecutive health checks (in milliseconds)\n                check_timeout:\n                  type: number\n                  description: Additional check timeout, after the connection has\n                    been already established (in milliseconds)\n                check_max_retries:\n                  type: number\n                  description: Number of consecutive unsuccessful health checks, after\n                    wich the server will be considered dead\n                mysql_config:\n                  type: object\n                  description: The check requires MySQL \u003e=3.22, for older version,\n                    please use TCP check\n                  properties:\n                    user:\n                      type: string\n                  x-properties-order:\n                  - user\n                  x-one-of: Config\n                ldap_config:\n                  type: object\n                  description: The response is analyzed to find an LDAPv3 response\n                    message\n                  x-one-of: Config\n                redis_config:\n                  type: object\n                  description: The response is analyzed to find the +PONG response\n                    message\n                  x-one-of: Config\n                pgsql_config:\n                  type: object\n                  properties:\n                    user:\n                      type: string\n                  x-properties-order:\n                  - user\n                  x-one-of: Config\n                tcp_config:\n                  type: object\n                  x-one-of: Config\n                http_config:\n                  type: object\n                  properties:\n                    uri:\n                      type: string\n                    method:\n                      type: string\n                    code:\n                      $ref: '#/components/schemas/google.protobuf.Int32Value'\n                  x-properties-order:\n                  - uri\n                  - method\n                  - code\n                  x-one-of: Config\n                https_config:\n                  type: object\n                  properties:\n                    uri:\n                      type: string\n                    method:\n                      type: string\n                    code:\n                      $ref: '#/components/schemas/google.protobuf.Int32Value'\n                  x-properties-order:\n                  - uri\n                  - method\n                  - code\n                  x-one-of: Config\n              required:\n              - port\n              - check_delay\n              - check_timeout\n              - check_max_retries\n              x-properties-order:\n              - port\n              - check_delay\n              - check_timeout\n              - check_max_retries\n              - mysql_config\n              - ldap_config\n              - redis_config\n              - pgsql_config\n              - tcp_config\n              - http_config\n              - https_config\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/backends/{backend_id}/servers:\n    post:\n      tags:\n      - Backends\n      operationId: AddBackendServers\n      summary: Add a set of servers in a given backend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: Backend ID\n        required: true\n        schema:\n          type: string\n          description: Backend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                server_ip:\n                  type: array\n                  description: Set all IPs to add on your backend\n                  items:\n                    type: string\n              required:\n              - server_ip\n              x-properties-order:\n              - server_ip\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Backends\n      operationId: SetBackendServers\n      summary: Define all servers in a given backend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: Backend ID\n        required: true\n        schema:\n          type: string\n          description: Backend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                server_ip:\n                  type: array\n                  description: Set all IPs to add on your backend and remove all other\n                  items:\n                    type: string\n              required:\n              - server_ip\n              x-properties-order:\n              - server_ip\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Backends\n      operationId: RemoveBackendServers\n      summary: Remove a set of servers for a given backend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: backend_id\n        description: Backend ID\n        required: true\n        schema:\n          type: string\n          description: Backend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                server_ip:\n                  type: array\n                  description: Set all IPs to remove of your backend\n                  items:\n                    type: string\n              required:\n              - server_ip\n              x-properties-order:\n              - server_ip\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/certificates/{certificate_id}:\n    get:\n      tags:\n      - Certificate\n      operationId: GetCertificate\n      summary: Get a TLS certificate\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: certificate_id\n        description: Certificate ID\n        required: true\n        schema:\n          type: string\n          description: Certificate ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Certificate\n      operationId: UpdateCertificate\n      summary: Update a TLS certificate\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: certificate_id\n        description: Certificate ID\n        required: true\n        schema:\n          type: string\n          description: Certificate ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Certificate name\n              required:\n              - name\n              x-properties-order:\n              - name\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Certificate\n      operationId: DeleteCertificate\n      summary: Delete a TLS certificate\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: certificate_id\n        description: Certificate ID\n        required: true\n        schema:\n          type: string\n          description: Certificate ID\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/frontends/{frontend_id}:\n    get:\n      tags:\n      - Frontends\n      operationId: GetFrontend\n      summary: Get a frontend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: frontend_id\n        description: Frontend ID\n        required: true\n        schema:\n          type: string\n          description: Frontend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Frontend'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Frontends\n      operationId: UpdateFrontend\n      summary: Update a frontend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: frontend_id\n        description: Frontend ID\n        required: true\n        schema:\n          type: string\n          description: Frontend ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Frontend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Resource name\n                inbound_port:\n                  type: number\n                  description: TCP port to listen on the front side\n                backend_id:\n                  type: string\n                  description: Backend ID\n                timeout_client:\n                  type: number\n                  description: Client session maximum inactivity time (in milliseconds)\n                certificate_id:\n                  type: string\n                  description: Certificate ID, deprecated in favor of `certificate_ids`\n                    array!\n                  deprecated: true\n                  nullable: true\n                certificate_ids:\n                  type: array\n                  description: List of certificate IDs to bind on the frontend\n                  nullable: true\n                  items:\n                    type: string\n              required:\n              - name\n              - inbound_port\n              - backend_id\n              x-properties-order:\n              - name\n              - inbound_port\n              - backend_id\n              - timeout_client\n              - certificate_id\n              - certificate_ids\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Frontends\n      operationId: DeleteFrontend\n      summary: Delete a frontend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: frontend_id\n        description: Frontend ID to delete\n        required: true\n        schema:\n          type: string\n          description: Frontend ID to delete\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/frontends/{frontend_id}/acls:\n    get:\n      tags:\n      - Acls\n      operationId: ListAcls\n      summary: List ACL for a given frontend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: frontend_id\n        description: ID of your frontend\n        required: true\n        schema:\n          type: string\n          description: ID of your frontend\n      - in: query\n        name: order_by\n        description: You can order the response by created_at asc/desc or name asc/desc\n        schema:\n          type: string\n          description: You can order the response by created_at asc/desc or name asc/desc\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - name_asc\n          - name_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      - in: query\n        name: name\n        description: Filter acl per name\n        schema:\n          type: string\n          description: Filter acl per name\n          nullable: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListAclResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Acls\n      operationId: CreateAcl\n      summary: Create an ACL for a given frontend\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: frontend_id\n        description: ID of your frontend\n        required: true\n        schema:\n          type: string\n          description: ID of your frontend\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Acl'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Name of your ACL ressource\n                action:\n                  type: object\n                  description: Action to undertake when an ACL filter matches\n                  properties:\n                    type:\n                      type: string\n                      description: The action type\n                      enum:\n                      - allow\n                      - deny\n                      default: allow\n                  x-properties-order:\n                  - type\n                match:\n                  type: object\n                  description: |\n                    The ACL match rule. You can have one of those three cases:\n\n                      - `ip_subnet` is defined\n                      - `http_filter` and `http_filter_value` are defined\n                      - `ip_subnet`, `http_filter` and `http_filter_value` are defined\n                  properties:\n                    ip_subnet:\n                      type: array\n                      description: A list of IPs or CIDR v4/v6 addresses of the client\n                        of the session to match\n                      items:\n                        $ref: '#/components/schemas/google.protobuf.StringValue'\n                    http_filter:\n                      type: string\n                      description: |\n                        The HTTP filter to match. This filter is supported only if your backend supports HTTP forwarding.\n                        It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).\n                      enum:\n                      - acl_http_filter_none\n                      - path_begin\n                      - path_end\n                      - regex\n                      default: acl_http_filter_none\n                    http_filter_value:\n                      type: array\n                      description: A list of possible values to match for the given\n                        HTTP filter\n                      items:\n                        $ref: '#/components/schemas/google.protobuf.StringValue'\n                    invert:\n                      type: boolean\n                      description: If set to `true`, the ACL matching condition will\n                        be of type \"UNLESS\"\n                  x-properties-order:\n                  - ip_subnet\n                  - http_filter\n                  - http_filter_value\n                  - invert\n                index:\n                  type: number\n                  description: Order between your Acls (ascending order, 0 is first\n                    acl executed)\n              required:\n              - name\n              - action\n              - match\n              - index\n              x-properties-order:\n              - name\n              - action\n              - match\n              - index\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/ips:\n    get:\n      tags:\n      - Ips\n      operationId: ListIPs\n      summary: List IPs\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      - in: query\n        name: ip_address\n        description: Use this to search by IP address\n        schema:\n          type: string\n          description: Use this to search by IP address\n          nullable: true\n      - in: query\n        name: organization_id\n        description: Filter IPs by organization id\n        schema:\n          type: string\n          description: Filter IPs by organization id\n          nullable: true\n      - in: query\n        name: project_id\n        description: Filter IPs by project ID\n        schema:\n          type: string\n          description: Filter IPs by project ID\n          nullable: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListIpsResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Ips\n      operationId: CreateIp\n      summary: Create an IP\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                organization_id:\n                  type: string\n                  description: Owner of resources\n                  deprecated: true\n                  x-one-of: ProjectIdentifier\n                project_id:\n                  type: string\n                  description: Assign the resource to a project ID\n                  x-one-of: ProjectIdentifier\n                reverse:\n                  type: string\n                  description: Reverse domain name\n                  nullable: true\n              x-properties-order:\n              - organization_id\n              - project_id\n              - reverse\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/ips/{ip_id}:\n    get:\n      tags:\n      - Ips\n      operationId: GetIp\n      summary: Get an IP\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: ip_id\n        description: IP address ID\n        required: true\n        schema:\n          type: string\n          description: IP address ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n      security:\n      - scaleway: []\n    patch:\n      tags:\n      - Ips\n      operationId: UpdateIp\n      summary: Update an IP\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: ip_id\n        description: IP address ID\n        required: true\n        schema:\n          type: string\n          description: IP address ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Ip'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                reverse:\n                  type: string\n                  description: Reverse DNS\n                  nullable: true\n              x-properties-order:\n              - reverse\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - Ips\n      operationId: ReleaseIp\n      summary: Delete an IP\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: ip_id\n        description: IP address ID\n        required: true\n        schema:\n          type: string\n          description: IP address ID\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lb-types:\n    get:\n      tags:\n      - load balancer\n      operationId: ListLbTypes\n      summary: List all load balancer offer type\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListLbTypesResponse'\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lb/{lb_id}/subscribe:\n    post:\n      tags:\n      - Alert subscribers\n      operationId: SubscribeToLb\n      summary: Subscribe a subscriber to a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                subscriber_id:\n                  type: string\n                  description: Subscriber ID\n              required:\n              - subscriber_id\n              x-properties-order:\n              - subscriber_id\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lb/{lb_id}/unsubscribe:\n    delete:\n      tags:\n      - Alert subscribers\n      operationId: UnsubscribeFromLb\n      summary: Unsubscribe a subscriber from a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lb/subscription/{subscriber_id}:\n    delete:\n      tags:\n      - Alert subscribers\n      operationId: DeleteSubscriber\n      summary: Delete a subscriber\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: subscriber_id\n        description: Subscriber ID\n        required: true\n        schema:\n          type: string\n          description: Subscriber ID\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs:\n    get:\n      tags:\n      - load balancer\n      operationId: ListLbs\n      summary: List load balancers\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: query\n        name: name\n        description: Use this to search by name\n        schema:\n          type: string\n          description: Use this to search by name\n          nullable: true\n      - in: query\n        name: order_by\n        schema:\n          $ref: '#/components/schemas/scaleway.lb.v1.ListLbsRequest.OrderBy'\n      - in: query\n        name: page_size\n        description: Page size\n        schema:\n          type: number\n          description: Page size\n          default: 20\n      - in: query\n        name: page\n        description: Page number\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: organization_id\n        description: Filter LBs by organization ID\n        schema:\n          type: string\n          description: Filter LBs by organization ID\n          nullable: true\n      - in: query\n        name: project_id\n        description: Filter LBs by project ID\n        schema:\n          type: string\n          description: Filter LBs by project ID\n          nullable: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListLbsResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - load balancer\n      operationId: CreateLb\n      summary: Create a load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                organization_id:\n                  type: string\n                  description: Owner of resources\n                  deprecated: true\n                  x-one-of: ProjectIdentifier\n                project_id:\n                  type: string\n                  description: Assign the resource to a project ID\n                  x-one-of: ProjectIdentifier\n                name:\n                  type: string\n                  description: Resource names\n                description:\n                  type: string\n                  description: Resource description\n                ip_id:\n                  type: string\n                  description: Just like for compute instances, when you destroy a\n                    load balancer, you can keep its highly available IP address and\n                    reuse it for another load balancer later\n                  nullable: true\n                tags:\n                  type: array\n                  description: List of keyword\n                  items:\n                    type: string\n                type:\n                  type: string\n                  description: Load balancer offer type\n                ssl_compatibility_level:\n                  type: string\n                  description: |\n                    Enforces minimal SSL version (in SSL/TLS offloading context).\n                    - `intermediate` General-purpose servers with a variety of clients, recommended for almost all systems (Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9).\n                    - `modern` Services with clients that support TLS 1.3 and don't need backward compatibility (Firefox 63, Android 10.0, Chrome 70, Edge 75, Java 11, OpenSSL 1.1.1, Opera 57, and Safari 12.1).\n                    - `old` Compatible with a number of very old clients, and should be used only as a last resort (Firefox 1, Android 2.3, Chrome 1, Edge 12, IE8 on Windows XP, Java 6, OpenSSL 0.9.8, Opera 5, and Safari 1).\n                  enum:\n                  - ssl_compatibility_level_unknown\n                  - ssl_compatibility_level_intermediate\n                  - ssl_compatibility_level_modern\n                  - ssl_compatibility_level_old\n                  default: ssl_compatibility_level_unknown\n              required:\n              - name\n              x-properties-order:\n              - organization_id\n              - project_id\n              - name\n              - description\n              - ip_id\n              - tags\n              - type\n              - ssl_compatibility_level\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}:\n    get:\n      tags:\n      - load balancer\n      operationId: GetLb\n      summary: Get a load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - load balancer\n      operationId: UpdateLb\n      summary: Update a load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Resource name\n                description:\n                  type: string\n                  description: Resource description\n                tags:\n                  type: array\n                  description: List of keywords\n                  items:\n                    type: string\n                ssl_compatibility_level:\n                  type: string\n                  description: |\n                    Enforces minimal SSL version (in SSL/TLS offloading context).\n                    - `intermediate` General-purpose servers with a variety of clients, recommended for almost all systems (Supports Firefox 27, Android 4.4.2, Chrome 31, Edge, IE 11 on Windows 7, Java 8u31, OpenSSL 1.0.1, Opera 20, and Safari 9).\n                    - `modern` Services with clients that support TLS 1.3 and don't need backward compatibility (Firefox 63, Android 10.0, Chrome 70, Edge 75, Java 11, OpenSSL 1.1.1, Opera 57, and Safari 12.1).\n                    - `old` Compatible with a number of very old clients, and should be used only as a last resort (Firefox 1, Android 2.3, Chrome 1, Edge 12, IE8 on Windows XP, Java 6, OpenSSL 0.9.8, Opera 5, and Safari 1).\n                  enum:\n                  - ssl_compatibility_level_unknown\n                  - ssl_compatibility_level_intermediate\n                  - ssl_compatibility_level_modern\n                  - ssl_compatibility_level_old\n                  default: ssl_compatibility_level_unknown\n              required:\n              - name\n              - description\n              x-properties-order:\n              - name\n              - description\n              - tags\n              - ssl_compatibility_level\n      security:\n      - scaleway: []\n    delete:\n      tags:\n      - load balancer\n      operationId: DeleteLb\n      summary: Delete a load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: query\n        name: release_ip\n        description: Set true if you don't want to keep this IP address\n        schema:\n          type: boolean\n          description: Set true if you don't want to keep this IP address\n      responses:\n        \"204\":\n          description: \"\"\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/backend-stats:\n    get:\n      operationId: ListBackendStats\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: query\n        name: page\n        description: Page number\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListBackendStatsResponse'\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/backends:\n    get:\n      tags:\n      - Backends\n      operationId: ListBackends\n      summary: List backends in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: query\n        name: name\n        description: Use this to search by name\n        schema:\n          type: string\n          description: Use this to search by name\n          nullable: true\n      - in: query\n        name: order_by\n        description: Choose order of response\n        schema:\n          type: string\n          description: Choose order of response\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - name_asc\n          - name_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to returns\n        schema:\n          type: number\n          description: The number of items to returns\n          default: 20\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListBackendsResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Backends\n      operationId: CreateBackend\n      summary: Create a backend in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Backend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Resource name\n                forward_protocol:\n                  type: string\n                  description: Backend protocol. TCP or HTTP\n                  enum:\n                  - tcp\n                  - http\n                  default: tcp\n                forward_port:\n                  type: number\n                  description: User sessions will be forwarded to this port of backend\n                    servers\n                forward_port_algorithm:\n                  type: string\n                  description: Load balancing algorithm\n                  enum:\n                  - roundrobin\n                  - leastconn\n                  - first\n                  default: roundrobin\n                sticky_sessions:\n                  type: string\n                  description: Enables cookie-based session persistence\n                  enum:\n                  - none\n                  - cookie\n                  - table\n                  default: none\n                sticky_sessions_cookie_name:\n                  type: string\n                  description: Cookie name for for sticky sessions\n                health_check:\n                  type: object\n                  description: See the Healthcheck object description\n                  properties:\n                    mysql_config:\n                      type: object\n                      description: The check requires MySQL \u003e=3.22, for older versions,\n                        use TCP check\n                      properties:\n                        user:\n                          type: string\n                      x-properties-order:\n                      - user\n                      x-one-of: config\n                    ldap_config:\n                      type: object\n                      description: The response is analyzed to find an LDAPv3 response\n                        message\n                      x-one-of: config\n                    redis_config:\n                      type: object\n                      description: The response is analyzed to find the +PONG response\n                        message\n                      x-one-of: config\n                    check_max_retries:\n                      type: number\n                    tcp_config:\n                      type: object\n                      x-one-of: config\n                    pgsql_config:\n                      type: object\n                      properties:\n                        user:\n                          type: string\n                      x-properties-order:\n                      - user\n                      x-one-of: config\n                    http_config:\n                      type: object\n                      properties:\n                        uri:\n                          type: string\n                        method:\n                          type: string\n                        code:\n                          $ref: '#/components/schemas/google.protobuf.Int32Value'\n                      x-properties-order:\n                      - uri\n                      - method\n                      - code\n                      x-one-of: config\n                    https_config:\n                      type: object\n                      properties:\n                        uri:\n                          type: string\n                        method:\n                          type: string\n                        code:\n                          $ref: '#/components/schemas/google.protobuf.Int32Value'\n                      x-properties-order:\n                      - uri\n                      - method\n                      - code\n                      x-one-of: config\n                    port:\n                      type: number\n                    check_timeout:\n                      type: number\n                      description: (in milliseconds)\n                    check_delay:\n                      type: number\n                      description: (in milliseconds)\n                  x-properties-order:\n                  - mysql_config\n                  - ldap_config\n                  - redis_config\n                  - check_max_retries\n                  - tcp_config\n                  - pgsql_config\n                  - http_config\n                  - https_config\n                  - port\n                  - check_timeout\n                  - check_delay\n                server_ip:\n                  type: array\n                  description: Backend server IP addresses list (IPv4 or IPv6)\n                  items:\n                    type: string\n                send_proxy_v2:\n                  type: boolean\n                  description: Deprecated in favor of proxy_protocol field !\n                  deprecated: true\n                timeout_server:\n                  type: number\n                  description: Maximum server connection inactivity time (in milliseconds)\n                timeout_connect:\n                  type: number\n                  description: Maximum initical server connection establishment time\n                    (in milliseconds)\n                timeout_tunnel:\n                  type: number\n                  description: Maximum tunnel inactivity time (in milliseconds)\n                on_marked_down_action:\n                  type: string\n                  description: Modify what occurs when a backend server is marked\n                    down\n                  enum:\n                  - on_marked_down_action_none\n                  - shutdown_sessions\n                  default: on_marked_down_action_none\n                proxy_protocol:\n                  type: string\n                  description: |\n                    The PROXY protocol informs the other end about the incoming connection, so that it can know the client's address or the public address it accessed to, whatever the upper layer protocol.\n\n                    * `proxy_protocol_none` Disable proxy protocol.\n                    * `proxy_protocol_v1` Version one (text format).\n                    * `proxy_protocol_v2` Version two (binary format).\n                    * `proxy_protocol_v2_ssl` Version two with SSL connection.\n                    * `proxy_protocol_v2_ssl_cn` Version two with SSL connection and common name information.\n                  enum:\n                  - proxy_protocol_unknown\n                  - proxy_protocol_none\n                  - proxy_protocol_v1\n                  - proxy_protocol_v2\n                  - proxy_protocol_v2_ssl\n                  - proxy_protocol_v2_ssl_cn\n                  default: proxy_protocol_unknown\n              required:\n              - name\n              - forward_protocol\n              - forward_port\n              - forward_port_algorithm\n              - sticky_sessions\n              - health_check\n              - server_ip\n              x-properties-order:\n              - name\n              - forward_protocol\n              - forward_port\n              - forward_port_algorithm\n              - sticky_sessions\n              - sticky_sessions_cookie_name\n              - health_check\n              - server_ip\n              - send_proxy_v2\n              - timeout_server\n              - timeout_connect\n              - timeout_tunnel\n              - on_marked_down_action\n              - proxy_protocol\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/certificates:\n    get:\n      tags:\n      - Certificate\n      operationId: ListCertificates\n      summary: List all TLS certificates on a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: query\n        name: order_by\n        description: You can order the response by created_at asc/desc or name asc/desc\n        schema:\n          type: string\n          description: You can order the response by created_at asc/desc or name asc/desc\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - name_asc\n          - name_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: Page number\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      - in: query\n        name: name\n        description: Use this to search by name\n        schema:\n          type: string\n          description: Use this to search by name\n          nullable: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListCertificatesResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Certificate\n      operationId: CreateCertificate\n      summary: Create a TLS certificate\n      description: Generate a new TLS certificate using Let's Encrypt or import your\n        certificate.\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Certificate'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Certificate name\n                letsencrypt:\n                  type: object\n                  description: Let's Encrypt type\n                  properties:\n                    common_name:\n                      type: string\n                      description: Main domain name of certificate (make sure this\n                        domain exists and resolves to your load balancer HA IP)\n                    subject_alternative_name:\n                      type: array\n                      description: Alternative domain names (make sure all domain\n                        names exists and resolves to your load balancer HA IP)\n                      items:\n                        type: string\n                  required:\n                  - common_name\n                  x-properties-order:\n                  - common_name\n                  - subject_alternative_name\n                  x-one-of: type\n                custom_certificate:\n                  type: object\n                  description: Custom import certificate\n                  properties:\n                    certificate_chain:\n                      type: string\n                      description: The full PEM-formatted include an entire certificate\n                        chain including public key, private key, and optionally certificate\n                        authorities.\n                  required:\n                  - certificate_chain\n                  x-properties-order:\n                  - certificate_chain\n                  x-one-of: type\n              required:\n              - name\n              - letsencrypt\n              - custom_certificate\n              x-properties-order:\n              - name\n              - letsencrypt\n              - custom_certificate\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/frontends:\n    get:\n      tags:\n      - Frontends\n      operationId: ListFrontends\n      summary: List frontends in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: query\n        name: name\n        description: Use this to search by name\n        schema:\n          type: string\n          description: Use this to search by name\n          nullable: true\n      - in: query\n        name: order_by\n        description: Response order\n        schema:\n          type: string\n          description: Response order\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - name_asc\n          - name_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to returns\n        schema:\n          type: number\n          description: The number of items to returns\n          default: 20\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListFrontendsResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Frontends\n      operationId: CreateFrontend\n      summary: Create a frontend in a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Frontend'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Resource name\n                inbound_port:\n                  type: number\n                  description: TCP port to listen on the front side\n                backend_id:\n                  type: string\n                  description: Backend ID\n                timeout_client:\n                  type: number\n                  description: Set the maximum inactivity time on the client side\n                    (in milliseconds)\n                certificate_id:\n                  type: string\n                  description: Certificate ID, deprecated in favor of certificate_ids\n                    array !\n                  deprecated: true\n                  nullable: true\n                certificate_ids:\n                  type: array\n                  description: List of certificate IDs to bind on the frontend\n                  nullable: true\n                  items:\n                    type: string\n              required:\n              - name\n              - inbound_port\n              - backend_id\n              x-properties-order:\n              - name\n              - inbound_port\n              - backend_id\n              - timeout_client\n              - certificate_id\n              - certificate_ids\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/migrate:\n    post:\n      tags:\n      - load balancer\n      operationId: MigrateLb\n      summary: Migrate a load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Lb'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                type:\n                  type: string\n                  description: Load balancer type (check /lb-types to list all type)\n              required:\n              - type\n              x-properties-order:\n              - type\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/private-networks:\n    get:\n      tags:\n      - BETA - Private Network\n      operationId: ListLbPrivateNetworks\n      summary: BETA - List attached private network of load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: order_by\n        schema:\n          $ref: '#/components/schemas/scaleway.lb.v1.ListPrivateNetworksRequest.OrderBy'\n      - in: query\n        name: page_size\n        description: Page size\n        schema:\n          type: number\n          description: Page size\n          default: 20\n      - in: query\n        name: page\n        description: Page number\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListLbPrivateNetworksResponse'\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/private-networks/{private_network_id}/attach:\n    post:\n      tags:\n      - BETA - Private Network\n      operationId: AttachPrivateNetwork\n      summary: BETA - Add load balancer on instance private network\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      - in: path\n        name: private_network_id\n        description: Set your instance private network id\n        required: true\n        schema:\n          type: string\n          description: Set your instance private network id\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.PrivateNetwork'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ip_address:\n                  type: array\n                  description: Define two local ip address of your choice for each\n                    load balancer instance\n                  items:\n                    type: string\n              required:\n              - ip_address\n              x-properties-order:\n              - ip_address\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/private-networks/{private_network_id}/detach:\n    post:\n      tags:\n      - BETA - Private Network\n      operationId: DetachPrivateNetwork\n      summary: BETA - Remove load balancer of private network\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: private_network_id\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: lb_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: \"\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/lbs/{lb_id}/stats:\n    get:\n      tags:\n      - Stats\n      operationId: GetLbStats\n      summary: Get usage statistics of a given load balancer\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: lb_id\n        description: Load balancer ID\n        required: true\n        schema:\n          type: string\n          description: Load balancer ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.LbStats'\n      security:\n      - scaleway: []\n      deprecated: true\n  /lb/v1/regions/{region}/subscribers:\n    get:\n      tags:\n      - Alert subscribers\n      operationId: ListSubscriber\n      summary: List all subscriber\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: query\n        name: order_by\n        description: You can order the response by created_at asc/desc or name asc/desc\n        schema:\n          type: string\n          description: You can order the response by created_at asc/desc or name asc/desc\n          enum:\n          - created_at_asc\n          - created_at_desc\n          - name_asc\n          - name_desc\n          default: created_at_asc\n      - in: query\n        name: page\n        description: Page number\n        required: true\n        schema:\n          type: number\n          description: Page number\n          default: 1\n      - in: query\n        name: page_size\n        description: The number of items to return\n        schema:\n          type: number\n          description: The number of items to return\n          default: 20\n      - in: query\n        name: name\n        description: Use this to search by name\n        required: true\n        schema:\n          type: string\n          description: Use this to search by name\n          nullable: true\n      - in: query\n        name: organization_id\n        description: Filter Subscribers by organization ID\n        schema:\n          type: string\n          description: Filter Subscribers by organization ID\n          nullable: true\n      - in: query\n        name: project_id\n        description: Filter Subscribers by project ID\n        schema:\n          type: string\n          description: Filter Subscribers by project ID\n          nullable: true\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.ListSubscriberResponse'\n      security:\n      - scaleway: []\n    post:\n      tags:\n      - Alert subscribers\n      operationId: CreateSubscriber\n      summary: Create a subscriber, webhook or email\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Subscriber name\n                email_config:\n                  type: object\n                  description: Email address configuration\n                  properties:\n                    email:\n                      type: string\n                      description: Email who receive alert\n                  required:\n                  - email\n                  x-properties-order:\n                  - email\n                  x-one-of: config\n                webhook_config:\n                  type: object\n                  description: WebHook URI configuration\n                  properties:\n                    uri:\n                      type: string\n                      description: URI who receive POST request\n                  required:\n                  - uri\n                  x-properties-order:\n                  - uri\n                  x-one-of: config\n                organization_id:\n                  type: string\n                  description: Owner of resources\n                  deprecated: true\n                  x-one-of: ProjectIdentifier\n                project_id:\n                  type: string\n                  description: Assign the resource to a project ID\n                  x-one-of: ProjectIdentifier\n              required:\n              - name\n              - project_id\n              x-properties-order:\n              - name\n              - email_config\n              - webhook_config\n              - organization_id\n              - project_id\n      security:\n      - scaleway: []\n  /lb/v1/regions/{region}/subscribers/{subscriber_id}:\n    get:\n      tags:\n      - Alert subscribers\n      operationId: GetSubscriber\n      summary: Get a subscriber\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: subscriber_id\n        description: Subscriber ID\n        required: true\n        schema:\n          type: string\n          description: Subscriber ID\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n      security:\n      - scaleway: []\n    put:\n      tags:\n      - Alert subscribers\n      operationId: UpdateSubscriber\n      summary: Update a subscriber\n      parameters:\n      - in: path\n        name: region\n        description: The region you want to target\n        required: true\n        schema:\n          type: string\n          description: The region you want to target\n          enum:\n          - fr-par\n          - nl-ams\n      - in: path\n        name: subscriber_id\n        description: Assign the resource to a project IDs\n        required: true\n        schema:\n          type: string\n          description: Assign the resource to a project IDs\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scaleway.lb.v1.Subscriber'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Subscriber name\n                email_config:\n                  type: object\n                  description: Email address configuration\n                  properties:\n                    email:\n                      type: string\n                      description: Email who receive alert\n                  required:\n                  - email\n                  x-properties-order:\n                  - email\n                  x-one-of: config\n                webhook_config:\n                  type: object\n                  description: WebHook URI configuration\n                  properties:\n                    uri:\n                      type: string\n                      description: URI who receive POST request\n                  required:\n                  - uri\n                  x-properties-order:\n                  - uri\n                  x-one-of: config\n              required:\n              - name\n              x-properties-order:\n              - name\n              - email_config\n              - webhook_config\n      security:\n      - scaleway: []\n",
			"canonicalURL": "/github.com/FGRibreau/scaleway-api-client@d59b9b59cc7a7b9a29a50481008d67382fe78871/-/blob/openapi/scaleway.lb.v1.Api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/FGRibreau/scaleway-api-client/blob/d59b9b59cc7a7b9a29a50481008d67382fe78871/openapi/scaleway.lb.v1.Api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}