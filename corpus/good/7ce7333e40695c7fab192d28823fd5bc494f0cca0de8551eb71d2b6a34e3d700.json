{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opentext/storyteller"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api/openapi.yaml",
			"byteSize": 6583,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"This is a StoryTeller service API. You can find out more about StoryTeller at [https://opentext.github.io/storyteller/](https://opentext.github.io/storyteller/).\"\n  version: 0.1.0\n  title: StoryTeller API\n  contact:\n    email: \"pfilipsk@opentext.com\"\nservers:\n  - url: https://cem-dev-karim.eastus.cloudapp.azure.com/storyteller/api\ntags:\n- name: \"service\"\n  description: \"Service API\"\n- name: \"storage\"\n  description: \"Storage API\"\n- name: \"processor\"\n  description: \"Processor API\"\npaths:\n  /ping:\n    get:\n      tags:\n      - \"service\"\n      summary: Test whether the service is alive\n      operationId: \"pingService\"\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/PingResponse\"\n  /files:\n    post:\n      tags:\n      - \"storage\"\n      summary: \"Upload a file to the current session\"\n      operationId: \"uploadFile\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                filename:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/FileContent\"\n      responses:\n        '200':\n          description: \"Upload successful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadResponse\"\n  /files/{hashId}/contents:\n    get:\n      tags:\n      - \"storage\"\n      summary: \"Gets contents of a file\"\n      operationId: \"serveFile\"\n      parameters:\n        - name: hashId\n          in: \"path\"\n          description: \"Hash of the file content to be fetched\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/FileHash\"\n      responses:\n        '200':\n          description: \"File content in binary form\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileContent\"\n        '400':\n          description: \"File not found\"\n  /tdt:\n    post:\n      tags:\n      - \"processor\"\n      summary: \"Transform given data based on given template and TDT rules\"\n      operationId: \"processTDT\"\n      requestBody:\n        description: \"Request of the TDT transform operation\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/TdtRequest\"\n      responses:\n        '200':\n          description: \"Response of the TDT transform operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TdtResponse\"\n  /stl:\n    post:\n      tags:\n      - \"processor\"\n      summary: \"Create a document based on given layout and data\"\n      operationId: \"processSTL\"\n      requestBody:\n        description: \"Request of the STL format operation\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/StlRequest\"\n      responses:\n        '200':\n          description: \"Response of the STL format operation\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StlResponse\"\ncomponents:\n  schemas:\n    Status:\n      description: \"Status of the operation\"\n      type: \"string\"\n      example: \"success\"\n      enum:\n        - \"success\"\n        - \"failure\"\n    FileContent:\n      description: \"Binary file content\"\n      type: string\n      format: binary\n    FileHash:\n      description: \"SHA1 hash of the file content\"\n      type: \"string\"\n      pattern: \"^[A-Fa-f0-9]{40}$\"\n      example: 7831f13d519651eba0b3a7fb236cc94fd9a156a1\n    FileType:\n      description: \"Content/Mime Type of the file\"\n      type: \"string\"\n      example: application/xml\n    FileName:\n      description: \"Name of the file\"\n      type: \"string\"\n      example: document.xml\n    FileSize:\n      description: \"Byte size of the file content\"\n      type: \"integer\"\n      example: 1234\n    File:\n      description: \"Representation of a server-side file\"\n      type: \"object\"\n      properties:\n        id:\n          $ref:  \"#/components/schemas/FileHash\"\n        name:\n          $ref:  \"#/components/schemas/FileName\"\n        size:\n          $ref:  \"#/components/schemas/FileSize\"\n        type:\n          $ref:  \"#/components/schemas/FileType\"\n    Files:\n      type: \"array\"\n      items:\n        $ref:  \"#/components/schemas/File\"\n    PingResponse:\n      description: \"Response of the ping operation\"\n      properties:\n        status:\n          $ref:  \"#/components/schemas/Status\"\n    UploadResponse:\n      description: \"Response of the upload operation\"\n      properties:\n        status:\n          $ref:  \"#/components/schemas/Status\"\n        result:\n          $ref:  \"#/components/schemas/Files\"\n    TdtOptions:\n      description: \"Options for TDT transform operation\"\n      properties:\n        mode:\n          type: \"integer\"\n        params:\n          type: \"object\"\n    TdtRequest:\n      description: \"Request of the TDT transform operation\"\n      properties:\n        rules:\n          $ref:  \"#/components/schemas/FileHash\"\n        source:\n          $ref:  \"#/components/schemas/FileHash\"\n        template:\n          $ref:  \"#/components/schemas/FileHash\"\n        options:\n          $ref:  \"#/components/schemas/TdtOptions\"\n    TdtResponse:\n      description: \"Response of the TDT transform operation\"\n      properties:\n        status:\n          $ref:  \"#/components/schemas/Status\"\n        input:\n          $ref:  \"#/components/schemas/StlRequest\"\n        result:\n          $ref:  \"#/components/schemas/Files\"\n    StlOptions:\n      description: \"Options for STL format operation\"\n      properties:\n        data:\n          description: \"Data settings\"\n          type: \"object\"\n        layout:\n          type: \"object\"\n        driver:\n          type: \"object\"\n        frame:\n          type: \"object\"\n        properties:\n          type: \"object\"\n        validate:\n          type: \"boolean\"\n    StlRequest:\n      description: \"Request of the STL format operation\"\n      properties:\n        design:\n          $ref:  \"#/components/schemas/FileHash\"\n        options:\n          $ref:  \"#/components/schemas/StlOptions\"\n    StlResponse:\n      description: \"Response of the STL format operation\"\n      properties:\n        status:\n          $ref:  \"#/components/schemas/Status\"\n        input:\n          $ref:  \"#/components/schemas/StlRequest\"\n        result:\n          $ref:  \"#/components/schemas/Files\"\n\n",
			"canonicalURL": "/github.com/opentext/storyteller@6dec26592c0d09d4787e26096b68f4c065c75ade/-/blob/docs/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/opentext/storyteller/blob/6dec26592c0d09d4787e26096b68f4c065c75ade/docs/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}