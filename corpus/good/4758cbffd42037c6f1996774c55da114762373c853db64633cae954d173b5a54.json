{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-keyvault-2015-06-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-keyvault-2015-06-01-swagger.yaml",
			"byteSize": 80557,
			"content": "openapi: 3.0.0\ninfo:\n  description: Performs cryptographic key operations and vault operations against the Key\n    Vault service.\n  title: KeyVaultClient\n  version: 2015-06-01\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/keyvault/data-plane/Microsoft.KeyVault/stable/2015-06-01/keyvault.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: keyvault\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  /certificates:\n    get:\n      description: List certificates in the specified vault\n      operationId: GetCertificates\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificates in the vault\n            along with a link to the next page of certificates\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /certificates/contacts:\n    delete:\n      description: Deletes the certificate contacts for the specified vault.\n      operationId: DeleteCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The contacts for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    get:\n      description: Gets the certificate contacts for the specified vault.\n      operationId: GetCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The contacts for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    put:\n      description: Sets the certificate contacts for the specified vault.\n      operationId: SetCertificateContacts\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Contacts\"\n        description: The contacts for the vault certificates.\n        required: true\n      responses:\n        \"200\":\n          description: The contacts for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  /certificates/issuers:\n    get:\n      description: List certificate issuers for the specified vault.\n      operationId: GetCertificateIssuers\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificates issuers in the\n            vault along with a link to the next page of certificate issuers\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateIssuerListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/certificates/issuers/{issuer-name}\":\n    delete:\n      description: Deletes the specified certificate issuer.\n      operationId: DeleteCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The issuer for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    get:\n      description: Gets the specified certificate issuer.\n      operationId: GetCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The issuer for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    patch:\n      description: Updates the specified certificate issuer.\n      operationId: UpdateCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateIssuerUpdateParameters\"\n        description: Certificate issuer update parameter.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The issuer for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    put:\n      description: Sets the specified certificate issuer.\n      operationId: SetCertificateIssuer\n      parameters:\n        - description: The name of the issuer.\n          in: path\n          name: issuer-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateIssuerSetParameters\"\n        description: Certificate issuer set parameter.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The issuer for the vault certificates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}\":\n    delete:\n      description: Deletes a certificate from the specified vault.\n      operationId: DeleteCertificate\n      parameters:\n        - description: The name of the certificate in the given vault\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted certificate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/create\":\n    post:\n      description: Creates a new certificate version. If this is the first version, the\n        certificate resource is created.\n      operationId: CreateCertificate\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateCreateParameters\"\n        description: The parameters to create certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"202\":\n          description: Created certificate bundle to the vault\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/import\":\n    post:\n      description: Imports a certificate into the specified vault\n      operationId: ImportCertificate\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateImportParameters\"\n        description: The parameters to import certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Imported certificate bundle to the vault\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/pending\":\n    delete:\n      description: Deletes the certificate operation.\n      operationId: DeleteCertificateOperation\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A message containing the certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    get:\n      description: Gets the certificate operation response.\n      operationId: GetCertificateOperation\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    patch:\n      description: Updates a certificate operation.\n      operationId: UpdateCertificateOperation\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateOperationUpdateParameter\"\n        description: The certificate operation response.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A message containing the certificate operation response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateOperation\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/pending/merge\":\n    post:\n      description: Merges a certificate or a certificate chain with a key pair existing on\n        the server.\n      operationId: MergeCertificate\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateMergeParameters\"\n        description: The parameters to merge certificate.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"201\":\n          description: Merged certificate bundle to the vault\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/policy\":\n    get:\n      description: Gets the policy for a certificate.\n      operationId: GetCertificatePolicy\n      parameters:\n        - description: The name of the certificate in the given vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The certificate policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificatePolicy\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    patch:\n      description: Updates the policy for a certificate. Set appropriate members in the\n        certificatePolicy that must be updated. Leave others as null.\n      operationId: UpdateCertificatePolicy\n      parameters:\n        - description: The name of the certificate in the given vault.\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificatePolicy\"\n        description: The policy for the certificate.\n        required: true\n      responses:\n        \"200\":\n          description: The certificate policy\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificatePolicy\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  \"/certificates/{certificate-name}/versions\":\n    get:\n      description: List the versions of a certificate.\n      operationId: GetCertificateVersions\n      parameters:\n        - description: The name of the certificate\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of certificates in the vault\n            along with a link to the next page of keys\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/certificates/{certificate-name}/{certificate-version}\":\n    get:\n      description: Gets a Certificate.\n      operationId: GetCertificate\n      parameters:\n        - description: The name of the certificate in the given vault\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the certificate\n          in: path\n          name: certificate-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved certificate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n    patch:\n      description: Updates the attributes associated with the specified certificate\n      operationId: UpdateCertificate\n      parameters:\n        - description: The name of the certificate in the given vault\n          in: path\n          name: certificate-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the certificate\n          in: path\n          name: certificate-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CertificateUpdateParameters\"\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated certificate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CertificateBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Certificates\n  /keys:\n    get:\n      description: List keys in the specified vault\n      operationId: GetKeys\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of keys in the vault along with\n            a link to the next page of keys\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n      x-ms-pageable:\n        nextLinkName: nextLink\n  /keys/restore:\n    post:\n      description: Restores the backup key in to a vault\n      operationId: RestoreKey\n      parameters:\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyRestoreParameters\"\n        description: The parameters to restore key\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Restored key bundle in the vault\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}\":\n    delete:\n      description: Deletes the specified key\n      operationId: DeleteKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The public part of the deleted key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n    put:\n      description: Imports a key into the specified vault\n      operationId: ImportKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyImportParameters\"\n        description: The parameters to import key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: Imported key bundle to the vault\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/backup\":\n    post:\n      description: Requests that a backup of the specified key be downloaded to the client.\n      operationId: BackupKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The backup blob containing the backed up key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BackupKeyResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/create\":\n    post:\n      description: Creates a new, named, key in the specified vault.\n      operationId: CreateKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyCreateParameters\"\n        description: The parameters to create key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A key bundle containing the result of the create request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/versions\":\n    get:\n      description: List the versions of the specified key\n      operationId: GetKeyVersions\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of keys along with a link to\n            the next page of keys\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/keys/{key-name}/{key-version}\":\n    get:\n      description: Retrieves the public portion of a key plus its attributes\n      operationId: GetKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A Key bundle of the key and its attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n    patch:\n      description: Updates the Key Attributes associated with the specified key\n      operationId: UpdateKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyUpdateParameters\"\n        description: The parameters to update key.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/decrypt\":\n    post:\n      description: Decrypts a single block of encrypted data\n      operationId: decrypt\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/KeyOperationsParameters\"\n      responses:\n        \"200\":\n          description: The decryption result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/encrypt\":\n    post:\n      description: Encrypts an arbitrary sequence of bytes using an encryption key that is\n        stored in Azure Key Vault.\n      operationId: encrypt\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/KeyOperationsParameters\"\n      responses:\n        \"200\":\n          description: The encryption result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/sign\":\n    post:\n      description: Creates a signature from a digest using the specified key in the vault\n      operationId: sign\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeySignParameters\"\n        description: The parameters for key operations.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The signature value\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/unwrapkey\":\n    post:\n      description: Unwraps a symmetric key using the specified key in the vault that has\n        initially been used for wrapping the key.\n      operationId: unwrapKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/KeyOperationsParameters\"\n      responses:\n        \"200\":\n          description: The unwrapped symmetric key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/verify\":\n    post:\n      description: Verifies a signature using the specified key\n      operationId: verify\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KeyVerifyParameters\"\n        description: The parameters for key operations.\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The verification result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVerifyResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  \"/keys/{key-name}/{key-version}/wrapkey\":\n    post:\n      description: Wraps a symmetric key using the specified key\n      operationId: wrapKey\n      parameters:\n        - description: The name of the key\n          in: path\n          name: key-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the key\n          in: path\n          name: key-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        $ref: \"#/components/requestBodies/KeyOperationsParameters\"\n      responses:\n        \"200\":\n          description: The wrapped symmetric key\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyOperationResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Keys\n  /secrets:\n    get:\n      description: List secrets in the specified vault\n      operationId: GetSecrets\n      parameters:\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of secrets in the vault along\n            with a link to the next page of secrets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/secrets/{secret-name}\":\n    delete:\n      description: Deletes a secret from the specified vault.\n      operationId: DeleteSecret\n      parameters:\n        - description: The name of the secret in the given vault\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The deleted secret\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\n    put:\n      description: Sets a secret in the specified vault.\n      operationId: SetSecret\n      parameters:\n        - description: The name of the secret in the given vault\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n            pattern: ^[0-9a-zA-Z-]+$\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecretSetParameters\"\n        description: The parameters for secret set\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: A secret bundle containing the result of the secret set request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\n  \"/secrets/{secret-name}/versions\":\n    get:\n      description: List the versions of the specified secret\n      operationId: GetSecretVersions\n      parameters:\n        - description: The name of the secret in the given vault\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of results to return in a page. If not specified the\n            service will return up to 25 results.\n          in: query\n          name: maxresults\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 25\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: A response message containing a list of secrets along with a link to\n            the next page of secrets\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretListResult\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/secrets/{secret-name}/{secret-version}\":\n    get:\n      description: Gets a secret.\n      operationId: GetSecret\n      parameters:\n        - description: The name of the secret in the given vault\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the secret\n          in: path\n          name: secret-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: The retrieved secret\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\n    patch:\n      description: Updates the attributes associated with the specified secret\n      operationId: UpdateSecret\n      parameters:\n        - description: The name of the secret in the given vault\n          in: path\n          name: secret-name\n          required: true\n          schema:\n            type: string\n        - description: The version of the secret\n          in: path\n          name: secret-version\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecretUpdateParameters\"\n        required: true\n        x-ms-client-flatten: true\n      responses:\n        \"200\":\n          description: The updated secret\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretBundle\"\n        default:\n          description: Default Response. It will be deserialized as per the Error\n            definition specified in the schema. Exception will be thrown.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeyVaultError\"\n      tags:\n        - Secrets\nservers:\n  - url: https://azure.local\n  - url: \"{vaultBaseUrl}\"\n    variables:\n      vaultBaseUrl:\n        description: The vault name, e.g. https://myvault.vault.azure.net\n        x-ms-skip-url-encoding: true\n        default: \"\"\ncomponents:\n  parameters:\n    ApiVersionParameter:\n      description: Client Api Version.\n      in: query\n      name: api-version\n      required: true\n      schema:\n        type: string\n  requestBodies:\n    KeyOperationsParameters:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/KeyOperationsParameters\"\n      description: The parameters for key operations.\n      required: true\n      x-ms-client-flatten: true\n  schemas:\n    Action:\n      description: The action that will be executed.\n      properties:\n        action_type:\n          description: The type of the action.\n          enum:\n            - EmailContacts\n            - AutoRenew\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: ActionType\n    AdministratorDetails:\n      description: Details of the organization administrator of the certificate issuer\n      properties:\n        email:\n          description: Email address.\n          type: string\n          x-ms-client-name: EmailAddress\n        first_name:\n          description: First name.\n          type: string\n        last_name:\n          description: Last name.\n          type: string\n        phone:\n          description: Phone number.\n          type: string\n    Attributes:\n      description: The object attributes managed by the KeyVault service\n      properties:\n        created:\n          description: Creation time in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: Determines whether the object is enabled\n          type: boolean\n        exp:\n          description: Expiry date in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          type: integer\n          x-ms-client-name: Expires\n        nbf:\n          description: Not before date in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          type: integer\n          x-ms-client-name: NotBefore\n        updated:\n          description: Last updated time in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          readOnly: true\n          type: integer\n    BackupKeyResult:\n      description: The backup key result, containing the backup blob\n      properties:\n        value:\n          description: The backup blob containing the backed up key\n          format: base64url\n          readOnly: true\n          type: string\n    CertificateAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The certificate management attributes\n    CertificateBundle:\n      description: A certificate bundle consists of a certificate (X509) plus its\n        attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        cer:\n          description: CER contents of x509 certificate.\n          format: byte\n          type: string\n        contentType:\n          description: The content type of the secret\n          type: string\n        id:\n          description: The certificate id\n          readOnly: true\n          type: string\n        kid:\n          description: The key id\n          readOnly: true\n          type: string\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        sid:\n          description: The secret id\n          readOnly: true\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        x5t:\n          description: Thumbprint of the certificate.\n          format: base64url\n          readOnly: true\n          type: string\n          x-ms-client-name: X509Thumbprint\n    CertificateCreateParameters:\n      description: The certificate create parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    CertificateImportParameters:\n      description: The certificate import parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        pwd:\n          description: If the private key in base64EncodedCertificate is encrypted, the\n            password used for encryption\n          type: string\n          x-ms-client-name: password\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        value:\n          description: Base64 encoded representation of the certificate object to import.\n            This certificate needs to contain the private key.\n          type: string\n          x-ms-client-name: base64EncodedCertificate\n      required:\n        - value\n    CertificateIssuerItem:\n      description: The certificate issuer item containing certificate issuer metadata\n      properties:\n        id:\n          description: Certificate Identifier\n          type: string\n        provider:\n          description: The issuer provider.\n          type: string\n    CertificateIssuerListResult:\n      description: The certificate issuer list result\n      properties:\n        nextLink:\n          description: The URL to get the next set of certificate issuers.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of certificate issuers in the\n            vault along with a link to the next page of certificate issuers\n          items:\n            $ref: \"#/components/schemas/CertificateIssuerItem\"\n          readOnly: true\n          type: array\n    CertificateIssuerSetParameters:\n      description: The certificate issuer set parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n      required:\n        - provider\n    CertificateIssuerUpdateParameters:\n      description: The certificate issuer update parameters.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n    CertificateItem:\n      description: The certificate item containing certificate metadata\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        id:\n          description: Certificate Identifier\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        x5t:\n          description: Thumbprint of the certificate.\n          format: base64url\n          type: string\n          x-ms-client-name: X509Thumbprint\n    CertificateListResult:\n      description: The certificate list result\n      properties:\n        nextLink:\n          description: The URL to get the next set of certificates.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of certificates in the vault\n            along with a link to the next page of certificates\n          items:\n            $ref: \"#/components/schemas/CertificateItem\"\n          readOnly: true\n          type: array\n    CertificateMergeParameters:\n      description: The certificate merge parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        x5c:\n          description: The certificate or the certificate chain to merge\n          items:\n            format: byte\n            type: string\n          type: array\n          x-ms-client-name: x509Certificates\n      required:\n        - x5c\n    CertificateOperation:\n      description: A certificate operation is returned in case of async requests.\n      properties:\n        cancellation_requested:\n          description: Indicates if cancellation was requested on the certificate operation.\n          type: boolean\n        csr:\n          description: The Certificate Signing Request (CSR) that is being used in the\n            certificate operation.\n          format: byte\n          type: string\n        error:\n          $ref: \"#/components/schemas/Error\"\n        id:\n          description: The certificate id\n          readOnly: true\n          type: string\n        issuer:\n          $ref: \"#/components/schemas/IssuerParameters\"\n        request_id:\n          description: Identifier for the certificate operation.\n          type: string\n        status:\n          description: Status of the certificate operation.\n          type: string\n        status_details:\n          description: The status details of the certificate operation.\n          type: string\n        target:\n          description: Location which contains the result of the certificate operation.\n          type: string\n    CertificateOperationUpdateParameter:\n      description: The certificate operation update parameters.\n      properties:\n        cancellation_requested:\n          description: Indicates if cancellation was requested on the certificate operation.\n          type: boolean\n      required:\n        - cancellation_requested\n    CertificatePolicy:\n      description: Management policy for a certificate.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        id:\n          description: The certificate id\n          readOnly: true\n          type: string\n        issuer:\n          $ref: \"#/components/schemas/IssuerParameters\"\n        key_props:\n          $ref: \"#/components/schemas/KeyProperties\"\n        lifetime_actions:\n          description: Actions that will be performed by Key Vault over the lifetime of a\n            certificate.\n          items:\n            $ref: \"#/components/schemas/LifetimeAction\"\n          type: array\n        secret_props:\n          $ref: \"#/components/schemas/SecretProperties\"\n        x509_props:\n          $ref: \"#/components/schemas/X509CertificateProperties\"\n    CertificateUpdateParameters:\n      description: The certificate update parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/CertificateAttributes\"\n        policy:\n          $ref: \"#/components/schemas/CertificatePolicy\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    Contact:\n      description: The contact information for the vault certificates.\n      properties:\n        email:\n          description: Email address.\n          type: string\n          x-ms-client-name: EmailAddress\n        name:\n          description: Name.\n          type: string\n        phone:\n          description: Phone number.\n          type: string\n    Contacts:\n      description: The contacts for the vault certificates.\n      properties:\n        contacts:\n          description: The contact list for the vault certificates.\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n          x-ms-client-name: ContactList\n        id:\n          description: Identifier for the contacts collection.\n          readOnly: true\n          type: string\n    Error:\n      description: The key vault server error\n      properties:\n        code:\n          description: The error code.\n          readOnly: true\n          type: string\n        message:\n          description: The error message.\n          readOnly: true\n          type: string\n    IssuerAttributes:\n      description: The attributes of an issuer managed by the KeyVault service\n      properties:\n        created:\n          description: Creation time in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          readOnly: true\n          type: integer\n        enabled:\n          description: Determines whether the issuer is enabled\n          type: boolean\n        updated:\n          description: Last updated time in seconds since 1970-01-01T00:00:00Z\n          format: unixtime\n          readOnly: true\n          type: integer\n    IssuerBundle:\n      description: The issuer for Key Vault certificate\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/IssuerAttributes\"\n        credentials:\n          $ref: \"#/components/schemas/IssuerCredentials\"\n        id:\n          description: Identifier for the issuer object.\n          readOnly: true\n          type: string\n        org_details:\n          $ref: \"#/components/schemas/OrganizationDetails\"\n        provider:\n          description: The issuer provider.\n          type: string\n    IssuerCredentials:\n      description: The credentials to be used for the certificate issuer.\n      properties:\n        account_id:\n          description: The user name/account name/account id.\n          type: string\n        pwd:\n          description: The password/secret/account key.\n          type: string\n          x-ms-client-name: Password\n    IssuerParameters:\n      description: Parameters for the issuer of the X509 component of a certificate.\n      properties:\n        cty:\n          description: Type of certificate to be requested from the issuer provider.\n          type: string\n          x-ms-client-name: CertificateType\n        name:\n          description: Name of the referenced issuer object or reserved names e.g. 'Self',\n            'Unknown'.\n          type: string\n    JsonWebKey:\n      description: As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18\n      properties:\n        d:\n          description: RSA private exponent\n          format: base64url\n          type: string\n        dp:\n          description: RSA Private Key Parameter\n          format: base64url\n          type: string\n          x-ms-client-name: DP\n        dq:\n          description: RSA Private Key Parameter\n          format: base64url\n          type: string\n          x-ms-client-name: DQ\n        e:\n          description: RSA public exponent\n          format: base64url\n          type: string\n        k:\n          description: Symmetric key\n          format: base64url\n          type: string\n        key_hsm:\n          description: HSM Token, used with Bring Your Own Key\n          format: base64url\n          type: string\n          x-ms-client-name: t\n        key_ops:\n          items:\n            description: Supported Key Operations\n            type: string\n          type: array\n        kid:\n          description: Key Identifier\n          type: string\n        kty:\n          description: Supported JsonWebKey key types (kty) for Elliptic Curve, RSA, HSM,\n            Octet, usually RSA\n          enum:\n            - EC\n            - RSA\n            - RSA-HSM\n            - oct\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyType\n        n:\n          description: RSA modulus\n          format: base64url\n          type: string\n        p:\n          description: RSA secret prime\n          format: base64url\n          type: string\n        q:\n          description: RSA secret prime, with p \u003c q\n          format: base64url\n          type: string\n        qi:\n          description: RSA Private Key Parameter\n          format: base64url\n          type: string\n          x-ms-client-name: QI\n    KeyAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The attributes of a key managed by the KeyVault service\n    KeyBundle:\n      description: A KeyBundle consisting of a WebKey plus its Attributes\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key:\n          $ref: \"#/components/schemas/JsonWebKey\"\n        managed:\n          description: True if the key's lifetime is managed by key vault i.e. if this is a\n            key backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    KeyCreateParameters:\n      description: The key create parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key_ops:\n          items:\n            description: JSON web key operations. For more information, see\n              JsonWebKeyOperation.\n            enum:\n              - encrypt\n              - decrypt\n              - sign\n              - verify\n              - wrapKey\n              - unwrapKey\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: JsonWebKeyOperation\n          type: array\n        key_size:\n          description: The key size in bits. e.g. 1024 or 2048.\n          format: int32\n          type: integer\n        kty:\n          description: The type of key to create. Valid key types, see JsonWebKeyType.\n            Supported JsonWebKey key types (kty) for Elliptic Curve, RSA, HSM,\n            Octet\n          enum:\n            - EC\n            - RSA\n            - RSA-HSM\n            - oct\n          minLength: 1\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyType\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n      required:\n        - kty\n    KeyImportParameters:\n      description: The key import parameters\n      properties:\n        Hsm:\n          description: Whether to import as a hardware key (HSM) or software key\n          type: boolean\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key:\n          $ref: \"#/components/schemas/JsonWebKey\"\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n      required:\n        - key\n    KeyItem:\n      description: The key item containing key metadata\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        kid:\n          description: Key Identifier\n          type: string\n        managed:\n          description: True if the key's lifetime is managed by key vault i.e. if this is a\n            key backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    KeyListResult:\n      description: The key list result\n      properties:\n        nextLink:\n          description: The URL to get the next set of keys.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of keys in the vault along with\n            a link to the next page of keys\n          items:\n            $ref: \"#/components/schemas/KeyItem\"\n          readOnly: true\n          type: array\n    KeyOperationResult:\n      description: The key operation result\n      properties:\n        kid:\n          description: Key identifier\n          readOnly: true\n          type: string\n        value:\n          format: base64url\n          readOnly: true\n          type: string\n          x-ms-client-name: result\n    KeyOperationsParameters:\n      description: The key operations parameters\n      properties:\n        alg:\n          description: algorithm identifier\n          enum:\n            - RSA-OAEP\n            - RSA-OAEP-256\n            - RSA1_5\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeyEncryptionAlgorithm\n        value:\n          format: base64url\n          type: string\n      required:\n        - alg\n        - value\n    KeyProperties:\n      description: Properties of the key pair backing a certificate.\n      properties:\n        exportable:\n          description: Indicates if the private key can be exported.\n          type: boolean\n        key_size:\n          description: The key size in bits. e.g. 2048.\n          format: int32\n          type: integer\n        kty:\n          description: The key type.\n          type: string\n          x-ms-client-name: keyType\n        reuse_key:\n          description: Indicates if the same key pair will be used on certificate renewal.\n          type: boolean\n    KeyRestoreParameters:\n      description: The key restore parameters\n      properties:\n        value:\n          description: the backup blob associated with a key bundle\n          format: base64url\n          type: string\n          x-ms-client-name: keyBundleBackup\n      required:\n        - value\n    KeySignParameters:\n      description: The key operations parameters\n      properties:\n        alg:\n          description: The signing/verification algorithm identifier. For more information\n            on possible algorithm types, see JsonWebKeySignatureAlgorithm.\n          enum:\n            - PS256\n            - PS384\n            - PS512\n            - RS256\n            - RS384\n            - RS512\n            - RSNULL\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeySignatureAlgorithm\n        value:\n          format: base64url\n          type: string\n      required:\n        - alg\n        - value\n    KeyUpdateParameters:\n      description: The key update parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/KeyAttributes\"\n        key_ops:\n          description: Json web key operations. For more information on possible key\n            operations, see JsonWebKeyOperation.\n          items:\n            enum:\n              - encrypt\n              - decrypt\n              - sign\n              - verify\n              - wrapKey\n              - unwrapKey\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: JsonWebKeyOperation\n          type: array\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    KeyVaultError:\n      description: the key vault error exception\n      properties:\n        error:\n          $ref: \"#/components/schemas/Error\"\n    KeyVerifyParameters:\n      description: The key verify parameters\n      properties:\n        alg:\n          description: The signing/verification algorithm. For more information on possible\n            algorithm types, see JsonWebKeySignatureAlgorithm.\n          enum:\n            - PS256\n            - PS384\n            - PS512\n            - RS256\n            - RS384\n            - RS512\n            - RSNULL\n          minLength: 1\n          type: string\n          x-ms-client-name: algorithm\n          x-ms-enum:\n            modelAsString: true\n            name: JsonWebKeySignatureAlgorithm\n        digest:\n          description: The digest used for signing\n          format: base64url\n          type: string\n        value:\n          description: The signature to be verified\n          format: base64url\n          type: string\n          x-ms-client-name: signature\n      required:\n        - alg\n        - digest\n        - value\n    KeyVerifyResult:\n      description: The key verify result\n      properties:\n        value:\n          description: true if the signature is verified, false otherwise.\n          readOnly: true\n          type: boolean\n    LifetimeAction:\n      description: Action and its trigger that will be performed by Key Vault over the\n        lifetime of a certificate.\n      properties:\n        action:\n          $ref: \"#/components/schemas/Action\"\n        trigger:\n          $ref: \"#/components/schemas/Trigger\"\n    OrganizationDetails:\n      description: Details of the organization of the certificate issuer.\n      properties:\n        admin_details:\n          description: Details of the organization administrator.\n          items:\n            $ref: \"#/components/schemas/AdministratorDetails\"\n          type: array\n        id:\n          description: Id of the organization.\n          type: string\n    PendingCertificateSigningRequestResult:\n      description: The pending certificate signing request result\n      properties:\n        value:\n          description: The pending certificate signing request as Base64 encoded string.\n          readOnly: true\n          type: string\n    SecretAttributes:\n      allOf:\n        - $ref: \"#/components/schemas/Attributes\"\n      description: The secret management attributes\n    SecretBundle:\n      description: A Secret consisting of a value, id and its attributes.\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: The content type of the secret\n          type: string\n        id:\n          description: The secret id\n          type: string\n        kid:\n          description: If this is a secret backing a KV certificate, then this field\n            specifies the corresponding key backing the KV certificate.\n          readOnly: true\n          type: string\n        managed:\n          description: True if the secret's lifetime is managed by key vault i.e. if this\n            is a secret backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        value:\n          description: \"The secret value \"\n          type: string\n    SecretItem:\n      description: The secret item containing secret metadata\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password\n          type: string\n        id:\n          description: Secret Identifier\n          type: string\n        managed:\n          description: True if the secret's lifetime is managed by key vault i.e. if this\n            is a key backing a certificate, then managed will be true.\n          readOnly: true\n          type: boolean\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    SecretListResult:\n      description: The secret list result\n      properties:\n        nextLink:\n          description: The URL to get the next set of secrets.\n          readOnly: true\n          type: string\n        value:\n          description: A response message containing a list of secrets in the vault along\n            with a link to the next page of secrets\n          items:\n            $ref: \"#/components/schemas/SecretItem\"\n          readOnly: true\n          type: array\n    SecretProperties:\n      description: Properties of the key backing a certificate.\n      properties:\n        contentType:\n          description: The media type (MIME type).\n          type: string\n    SecretSetParameters:\n      description: The secret set parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n        value:\n          description: The value of the secret\n          type: string\n      required:\n        - value\n    SecretUpdateParameters:\n      description: The secret update parameters\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/SecretAttributes\"\n        contentType:\n          description: Type of the secret value such as a password\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          description: Application-specific metadata in the form of key-value pairs\n          type: object\n    SubjectAlternativeNames:\n      description: The subject alternate names of a X509 object.\n      properties:\n        dns_names:\n          description: Domain names.\n          items:\n            type: string\n          type: array\n        emails:\n          description: Email addresses.\n          items:\n            type: string\n          type: array\n        upns:\n          description: User principal names.\n          items:\n            type: string\n          type: array\n    Trigger:\n      description: A condition to be satisfied for an action to be executed.\n      properties:\n        days_before_expiry:\n          description: Days before expiry.\n          format: int32\n          type: integer\n        lifetime_percentage:\n          description: Percentage of lifetime as which to trigger. Value should be between\n            1 and 99.\n          format: int32\n          maximum: 99\n          minimum: 1\n          type: integer\n    X509CertificateProperties:\n      description: Properties of the X509 component of a certificate.\n      properties:\n        ekus:\n          description: The enhanced key usage.\n          items:\n            type: string\n          type: array\n        key_usage:\n          description: List of key usages.\n          items:\n            enum:\n              - digitalSignature\n              - nonRepudiation\n              - keyEncipherment\n              - dataEncipherment\n              - keyAgreement\n              - keyCertSign\n              - cRLSign\n              - encipherOnly\n              - decipherOnly\n            type: string\n            x-ms-enum:\n              modelAsString: true\n              name: KeyUsageType\n          type: array\n        sans:\n          $ref: \"#/components/schemas/SubjectAlternativeNames\"\n        subject:\n          description: The subject name. Should be a valid X509 Distinguished Name.\n          type: string\n        validity_months:\n          description: The duration that the certificate is valid in months.\n          format: int32\n          minimum: 0\n          type: integer\n          x-ms-client-name: ValidityInMonths\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-keyvault-2015-06-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-keyvault-2015-06-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}