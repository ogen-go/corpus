{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "adyen.com-MarketPayNotificationService-3-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/adyen.com-MarketPayNotificationService-3-openapi.yaml",
			"byteSize": 78688,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n    x-twitter: Adyen\n  description: \u003e-\n    The Notification Service sends notifications to the endpoints specified in a\n    given subscription. Subscriptions are managed through the Notification\n    Configuration API. The API specifications listed here detail the format of\n    each notification.\n\n\n    For further information on MarketPay notifications, please visit the [MarketPay documentation](https://docs.adyen.com/marketpay).\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Adyen Notification Service\n  version: \"3\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://raw.githubusercontent.com/adyen/adyen-openapi/master/specs/3.0/MarketPayNotificationService-v3.json\n      version: \"3.0\"\n  x-preferred: false\n  x-providerName: adyen.com\n  x-serviceName: MarketPayNotificationService\npaths:\n  /ACCOUNT_CLOSED:\n    post:\n      description: This notification is sent when an account has been closed.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCloseNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the closure of an account.\n      x-groupName: Accounts\n      x-sortIndex: 3\n  /ACCOUNT_CREATED:\n    post:\n      description: This notification is sent when an account has been created.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountCreateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the creation of an account.\n      x-groupName: Accounts\n      x-sortIndex: 1\n  /ACCOUNT_HOLDER_CREATED:\n    post:\n      description: This notification is sent when an account holder has been created.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHolderCreateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the creation of an account holder.\n      x-groupName: Account holders\n      x-sortIndex: 1\n  /ACCOUNT_HOLDER_PAYOUT:\n    post:\n      description: This notification is sent when a payout request to an account holder has\n        been processed and the payout has been scheduled.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHolderPayoutNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon a payout to an account holder.\n      x-groupName: Fund management\n      x-sortIndex: 1\n  /ACCOUNT_HOLDER_STATUS_CHANGE:\n    post:\n      description: This notification is sent when the status of an account holder has been\n        changed.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHolderStatusChangeNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the status change of an account holder.\n      x-groupName: Account holders\n      x-sortIndex: 4\n  /ACCOUNT_HOLDER_UPDATED:\n    post:\n      description: This notification is sent when an account holder has been updated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHolderUpdateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the update of an account holder.\n      x-groupName: Account holders\n      x-sortIndex: 2\n  /ACCOUNT_HOLDER_VERIFICATION:\n    post:\n      description: This notification is sent when KYC Verification results are made\n        available.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountHolderVerificationNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the receipt of KYC Verification results.\n      x-groupName: Account holders\n      x-sortIndex: 3\n  /ACCOUNT_UPDATED:\n    post:\n      description: This notification is sent when an account has been updated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountUpdateNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the update of an account.\n      x-groupName: Accounts\n      x-sortIndex: 2\n  /BENEFICIARY_SETUP:\n    post:\n      description: This notification is sent when a benefactor/beneficiary relationship\n        between accounts has been set up.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BeneficiarySetupNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the setup of a beneficiary.\n      x-groupName: Fund management\n      x-sortIndex: 3\n  /COMPENSATE_NEGATIVE_BALANCE:\n    post:\n      description: This notification is sent when funds have been transferred from the\n        Marketplace's liable account to an overdrawn account in order to\n        compensate for the overdraft.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompensateNegativeBalanceNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the compensation of negative account balances.\n      x-groupName: Fund management\n      x-sortIndex: 5\n  /PAYMENT_FAILURE:\n    post:\n      description: This notification is sent when a payment to an account has failed. In\n        these cases, the funds which were meant for the account are redirected\n        to the Marketplace's liable account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentFailureNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon an account payment failure.\n      x-groupName: Other\n      x-sortIndex: 1\n  /REPORT_AVAILABLE:\n    post:\n      description: This notification is sent when a report has been made available.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReportAvailableNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered when a report is made available.\n      x-groupName: Other\n      x-sortIndex: 2\n  /SCHEDULED_REFUNDS:\n    post:\n      description: This notification is sent when a 'Refund Transfers Not Paid Out' call\n        has been processed and the associated refunds have been scheduled.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduledRefundsNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the scheduling of refunds requested by a 'Refund\n        Transfers Not Paid Out' call.\n      x-groupName: Fund management\n      x-sortIndex: 4\n  /TRANSFER_FUNDS:\n    post:\n      description: This notification is sent when the funds from an account have been\n        transferred to another account.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferFundsNotification\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationResponse\"\n          description: OK - the request has succeeded.\n      summary: Triggered upon the transfer of funds between accounts.\n      x-groupName: Fund management\n      x-sortIndex: 2\ncomponents:\n  schemas:\n    AccountCloseNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CloseAccountResponse\"\n          description: The details of the Account update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountCreateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CreateAccountResponse\"\n          description: The details of the account creation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountEvent:\n      properties:\n        event:\n          description: \u003e-\n            The event.\n\n            \u003ePermitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.\n\n            For more information, refer to [Verification checks](https://docs.adyen.com/marketpay/onboarding-and-verification/verification-checks).\n          enum:\n            - InactivateAccount\n            - RefundNotPaidOutTransfers\n          type: string\n        executionDate:\n          description: The date on which the event will take place.\n          format: date-time\n          type: string\n        reason:\n          description: The reason why this event has been created.\n          type: string\n      required:\n        - event\n        - executionDate\n        - reason\n    AccountHolderCreateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CreateAccountHolderResponse\"\n          description: The details of the account holder creation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderDetails:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The address of the account holder.\n        bankAccountDetails:\n          description: \u003e-\n            Each of the bank accounts associated with the account holder.\n\n            \u003e Each array entry should represent one bank account.\n\n            \u003e For comprehensive detail regarding the required `BankAccountDetail` fields, please refer to the [KYC Verification documentation](https://docs.adyen.com/marketpay/onboarding-and-verification/verification-checks).\n          items:\n            $ref: \"#/components/schemas/BankAccountDetail\"\n          type: array\n        businessDetails:\n          $ref: \"#/components/schemas/BusinessDetails\"\n          description: \u003e-\n            Details applicable to `Business` legal entities.\n\n            Populated only if the account holder's legal entity is of type `Business`.\n\n            \u003e Required when being used in a `/createAccountHolder` request in which the legal entity is `Business`.\n        email:\n          description: The email address of the account holder.\n          type: string\n        fullPhoneNumber:\n          description: \u003e-\n            The phone number of the account holder provided as a single string.\n            It will be handled as a landline phone.\n\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        individualDetails:\n          $ref: \"#/components/schemas/IndividualDetails\"\n          description: \u003e-\n            Details applicable to `Individual` legal entities.\n\n            Populated only if the account holder's legal entity is of type `Individual`.\n\n            \u003e Required when being used in a `/createAccountHolder` request in which the legal entity is `Individual`.\n        merchantCategoryCode:\n          description: \u003e-\n            The Merchant Category Code of the account holder.\n\n            \u003e If not specified in the request, this will be derived from the platform account (which is configured by Adyen).\n          type: string\n        metadata:\n          description: \u003e-\n            A set of key and value pairs for general use by the account holder\n            or merchant.\n\n            The keys do not have specific names and may be used for storing miscellaneous data as desired.\n\n            \u003e The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.\n\n            \u003e Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.\n          type: object\n        webAddress:\n          description: The URL of the website of the account holder.\n          type: string\n      required:\n        - fullPhoneNumber\n        - email\n    AccountHolderPayoutNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderPayoutNotificationContent\"\n          description: Details of the payout to the Account Holder.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderPayoutNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account from which the payout was made.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder to which the payout was made.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: payout amount\n        amounts:\n          description: payout amounts (per currency)\n          items:\n            $ref: \"#/components/schemas/Amount\"\n          type: array\n        bankAccountDetail:\n          $ref: \"#/components/schemas/BankAccountDetail\"\n          description: Details of the Bank Account to which the payout was made.\n        description:\n          description: A description of the payout.\n          type: string\n        merchantReference:\n          description: merchant reference\n          type: string\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: payout status\n      required:\n        - accountHolderCode\n        - accountCode\n        - bankAccountDetail\n    AccountHolderStatus:\n      properties:\n        events:\n          description: A list of events scheduled for the account holder.\n          items:\n            $ref: \"#/components/schemas/AccountEvent\"\n          type: array\n        payoutState:\n          $ref: \"#/components/schemas/AccountPayoutState\"\n          description: The payout state of the account holder.\n        processingState:\n          $ref: \"#/components/schemas/AccountProcessingState\"\n          description: The processing state of the account holder.\n        status:\n          description: |-\n            The status of the account holder.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        statusReason:\n          description: The reason why the status was assigned to the account holder.\n          type: string\n      required:\n        - status\n        - statusReason\n        - processingState\n        - payoutState\n        - events\n    AccountHolderStatusChangeNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderStatusChangeNotificationContent\"\n          description: The details of the Account Holder status change.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    AccountHolderStatusChangeNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        newStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The new status of the account holder.\n        oldStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The former status of the account holder.\n        reason:\n          description: The reason for the status change.\n          type: string\n      required:\n        - accountHolderCode\n        - oldStatus\n        - newStatus\n        - reason\n    AccountHolderUpdateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/UpdateAccountHolderResponse\"\n          description: The details of the Account Holder update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderVerificationNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/AccountHolderVerificationNotificationContent\"\n          description: The details of the Account Holder verification.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    AccountHolderVerificationNotificationContent:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        bankAccountUUID:\n          description: The unique ID of the bank account that has been verified.\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that has been verified.\n          type: string\n        statusSummaryItems:\n          deprecated: true\n          description: A summary of the verification status.\n          items:\n            $ref: \"#/components/schemas/KYCCheckDataSummaryItem\"\n          type: array\n        verificationStatus:\n          description: The status of verification.\n          enum:\n            - AWAITING_DATA\n            - DATA_PROVIDED\n            - FAILED\n            - INVALID_DATA\n            - PASSED\n            - PENDING\n            - PENDING_REVIEW\n            - RETRY_LIMIT_REACHED\n            - UNCHECKED\n          type: string\n        verificationType:\n          description: The type of validation performed.\n          enum:\n            - BANK_ACCOUNT_VERIFICATION\n            - COMPANY_VERIFICATION\n            - IDENTITY_VERIFICATION\n            - NONPROFIT_VERIFICATION\n            - PASSPORT_VERIFICATION\n          type: string\n      required:\n        - accountHolderCode\n    AccountPayoutState:\n      properties:\n        allowPayout:\n          description: Indicates whether payouts are allowed. This field is the overarching\n            payout status, and is the aggregate of multiple conditions (e.g.,\n            KYC status, disabled flag, etc). If this field is false, no payouts\n            will be permitted for any of the account holder's accounts. If this\n            field is true, payouts will be permitted for any of the account\n            holder's accounts.\n          type: boolean\n        disableReason:\n          description: The reason why payouts (to all of the account holder's accounts)\n            have been disabled (by the platform). If the `disabled` field is\n            true, this field can be used to explain why.\n          type: string\n        disabled:\n          description: Indicates whether payouts have been disabled (by the platform) for\n            all of the account holder's accounts. A platform may enable and\n            disable this field at their discretion. If this field is true,\n            `allowPayout` will be false and no payouts will be permitted for any\n            of the account holder's accounts. If this field is false,\n            `allowPayout` may or may not be enabled, depending on other factors.\n          type: boolean\n        payoutLimit:\n          $ref: \"#/components/schemas/Amount\"\n          description: The maximum amount that payouts are limited to. Only applies if\n            payouts are allowed but limited.\n        tierNumber:\n          description: The payout tier that the account holder occupies.\n          format: int32\n          type: integer\n      required:\n        - allowPayout\n        - disabled\n        - tierNumber\n        - disableReason\n        - payoutLimit\n    AccountProcessingState:\n      properties:\n        disableReason:\n          description: The reason why processing has been disabled.\n          type: string\n        disabled:\n          description: Indicates whether the processing of payments is allowed.\n          type: boolean\n        processedFrom:\n          $ref: \"#/components/schemas/Amount\"\n          description: The lower bound of the processing tier (i.e., an account holder must\n            have processed at least this amount of money in order to be placed\n            into this tier).\n        processedTo:\n          $ref: \"#/components/schemas/Amount\"\n          description: The upper bound of the processing tier (i.e., an account holder must\n            have processed less than this amount of money in order to be placed\n            into this tier).\n        tierNumber:\n          description: The processing tier that the account holder occupies.\n          format: int32\n          type: integer\n      required:\n        - disabled\n        - disableReason\n        - processedFrom\n        - processedTo\n        - tierNumber\n    AccountUpdateNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/UpdateAccountResponse\"\n          description: The details of the Account update.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency\n            code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: \u003e-\n            The payable amount that can be charged for the transaction.\n\n\n            The transaction amount needs to be represented in minor units according to the [following table](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    BankAccountDetail:\n      properties:\n        accountNumber:\n          description: \u003e-\n            The bank account number (without separators).\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        accountType:\n          description: \u003e-\n            The type of bank account.\n\n            Only applicable to bank accounts held in the USA.\n\n            The permitted values are: `checking`, `savings`.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankAccountName:\n          description: The name of the bank account.\n          type: string\n        bankAccountUUID:\n          description: \u003e\n            The unique identifier (UUID) of the Bank Account.\n\n            \u003eIf, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.\n\n\n            \u003eIf, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.\n\n\n            \u003eIf, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.\n\n\n            \u003eIf, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.\n          type: string\n        bankBicSwift:\n          description: \u003e-\n            The bank identifier code.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCity:\n          description: \u003e-\n            The city in which the bank branch is located.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankCode:\n          description: \u003e-\n            The bank code of the banking institution with which the bank account\n            is registered.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        bankName:\n          description: \u003e-\n            The name of the banking institution with which the bank account is\n            held.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        branchCode:\n          description: \u003e-\n            The branch code of the branch under which the bank account is\n            registered. The value to be specified in this parameter depends on\n            the country of the bank account:\n\n            * United States - Routing number\n\n            * United Kingdom - Sort code\n\n            * Germany - Bankleitzahl\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        checkCode:\n          description: \u003e-\n            The check code of the bank account.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        countryCode:\n          description: \u003e-\n            The two-letter country code in which the bank account is registered.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        currencyCode:\n          description: \u003e-\n            The currency in which the bank account deals.\n\n            \u003eThe permitted currency codes are defined in ISO-4217 (e.g. 'EUR').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        iban:\n          description: \u003e-\n            The international bank account number.\n\n            \u003eThe IBAN standard is defined in ISO-13616.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCity:\n          description: \u003e-\n            The city of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerCountryCode:\n          description: \u003e-\n            The country code of the country of residence of the bank account\n            owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerDateOfBirth:\n          description: |\n            The date of birth of the bank account owner.\n          type: string\n        ownerHouseNumberOrName:\n          description: \u003e-\n            The house name or number of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerName:\n          description: \u003e-\n            The name of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerNationality:\n          description: \u003e-\n            The country code of the country of nationality of the bank account\n            owner.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerPostalCode:\n          description: \u003e-\n            The postal code of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerState:\n          description: \u003e-\n            The state of residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        ownerStreet:\n          description: \u003e-\n            The street name of the residence of the bank account owner.\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        primaryAccount:\n          description: If set to true, the bank account is a primary account.\n          type: boolean\n        taxId:\n          description: \u003e-\n            The tax ID number.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n        urlForVerification:\n          description: \u003e-\n            The URL to be used for bank account verification.\n\n            This may be generated on bank account creation.\n\n\n            \u003eRefer to the [Onboarding and verification](https://docs.adyen.com/marketpay/onboarding-and-verification) section for details on field requirements.\n          type: string\n    BeneficiarySetupNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/BeneficiarySetupNotificationContent\"\n          description: Details of the beneficiary setup.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    BeneficiarySetupNotificationContent:\n      properties:\n        destinationAccountCode:\n          description: The code of the beneficiary account.\n          type: string\n        destinationAccountHolderCode:\n          description: The code of the beneficiary Account Holder.\n          type: string\n        merchantReference:\n          description: The reference provided by the merchant.\n          type: string\n        sourceAccountCode:\n          description: The code of the benefactor account.\n          type: string\n        sourceAccountHolderCode:\n          description: The code of the benefactor Account Holder.\n          type: string\n        transferDate:\n          description: The date on which the beneficiary was set up and funds transferred\n            from benefactor to beneficiary.\n          format: date-time\n          type: string\n        transferredTransactionCount:\n          description: The number of transactions transferred upon the setup of the\n            beneficiary.\n          format: int32\n          type: integer\n      required:\n        - sourceAccountHolderCode\n        - sourceAccountCode\n        - destinationAccountHolderCode\n        - destinationAccountCode\n        - transferDate\n        - transferredTransactionCount\n    BusinessDetails:\n      properties:\n        doingBusinessAs:\n          description: The registered name of the company (if it differs from the legal\n            name of the company).\n          type: string\n        legalBusinessName:\n          description: The legal name of the company.\n          type: string\n        shareholders:\n          description: |-\n            Each of the shareholders associated with the company.\n            Each array entry should represent one shareholder.\n          items:\n            $ref: \"#/components/schemas/ShareholderContact\"\n          type: array\n        taxId:\n          description: The tax ID of the company.\n          type: string\n    CloseAccountResponse:\n      properties:\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The new status of the account.\n            \u003ePermitted values: `Active`, `Inactive`, `Suspended`, `Closed`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's platform settings, the\n            following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - status\n    CompensateNegativeBalanceNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/CompensateNegativeBalanceNotificationContent\"\n          description: Details of the negative balance compensation.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n    CompensateNegativeBalanceNotificationContent:\n      properties:\n        records:\n          description: A list of the negative balances compensated.\n          items:\n            $ref: \"#/components/schemas/CompensateNegativeBalanceNotificationRecord\"\n          type: array\n      required:\n        - records\n    CompensateNegativeBalanceNotificationRecord:\n      properties:\n        accountCode:\n          description: The code of the account whose negative balance has been compensated.\n          type: string\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount compensated.\n        transferDate:\n          description: The date on which the compensation took place.\n          format: date-time\n          type: string\n      required:\n        - accountCode\n        - transferDate\n        - amount\n    CreateAccountHolderResponse:\n      properties:\n        accountCode:\n          description: The code of a new account created for the account holder.\n          type: string\n        accountHolderCode:\n          description: The code of the new account holder.\n          type: string\n        accountHolderDetails:\n          $ref: \"#/components/schemas/AccountHolderDetails\"\n          description: Details of the new account holder.\n        accountHolderStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The status of the new account holder.\n        invalidFields:\n          description: A list of fields that caused the `/createAccountHolder` request to\n            fail.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's platform settings, the\n            following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n        verification:\n          $ref: \"#/components/schemas/KYCVerificationResult\"\n          description: The details of KYC Verification of the account holder.\n      required:\n        - pspReference\n        - submittedAsync\n        - accountHolderCode\n        - accountHolderStatus\n        - accountHolderDetails\n        - verification\n    CreateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the new account.\n          type: string\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        payoutSchedule:\n          $ref: \"#/components/schemas/PayoutScheduleResponse\"\n          description: The payout schedule of the account.\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        status:\n          description: |-\n            The status of the account.\n            \u003ePermitted values: `Active`.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's platform settings, the\n            following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - accountHolderCode\n        - accountCode\n        - status\n    ErrorFieldType:\n      properties:\n        errorCode:\n          description: The validation error code.\n          format: int32\n          type: integer\n        errorDescription:\n          description: A description of the validation error.\n          type: string\n        fieldType:\n          $ref: \"#/components/schemas/FieldType\"\n          description: The type of error field.\n    FieldType:\n      properties:\n        field:\n          description: The full name of the property.\n          type: string\n        fieldName:\n          description: The type of the field.\n          enum:\n            - accountCode\n            - accountHolderCode\n            - accountHolderDetails\n            - accountNumber\n            - accountStateType\n            - accountStatus\n            - accountType\n            - address\n            - bankAccount\n            - bankAccountCode\n            - bankAccountName\n            - bankBicSwift\n            - bankCity\n            - bankCode\n            - bankName\n            - bankStatement\n            - branchCode\n            - businessContact\n            - cardToken\n            - checkCode\n            - city\n            - country\n            - countryCode\n            - currency\n            - currencyCode\n            - dateOfBirth\n            - description\n            - destinationAccountCode\n            - document\n            - documentExpirationDate\n            - documentIssuerCountry\n            - documentIssuerState\n            - documentName\n            - documentNumber\n            - documentType\n            - doingBusinessAs\n            - drivingLicence\n            - drivingLicenceBack\n            - drivingLicense\n            - email\n            - firstName\n            - fullPhoneNumber\n            - gender\n            - houseNumberOrName\n            - iban\n            - idCard\n            - idCardBack\n            - idCardFront\n            - idNumber\n            - identityDocument\n            - individualDetails\n            - lastName\n            - legalBusinessName\n            - legalEntity\n            - legalEntityType\n            - merchantCategoryCode\n            - merchantCode\n            - merchantReference\n            - microDeposit\n            - name\n            - nationality\n            - ownerCity\n            - ownerCountryCode\n            - ownerHouseNumberOrName\n            - ownerName\n            - ownerPostalCode\n            - ownerState\n            - ownerStreet\n            - passport\n            - passportNumber\n            - personalData\n            - phoneCountryCode\n            - phoneNumber\n            - postalCode\n            - primaryCurrency\n            - reason\n            - registrationNumber\n            - schedule\n            - shareholder\n            - shareholderCode\n            - socialSecurityNumber\n            - sourceAccountCode\n            - stateOrProvince\n            - status\n            - storeCode\n            - storeDetail\n            - storeReference\n            - street\n            - taxId\n            - tierNumber\n            - transferCode\n            - unknown\n            - value\n            - virtualAccount\n            - visaNumber\n            - webAddress\n          type: string\n        shareholderCode:\n          description: The code of the shareholder that the field belongs to. If empty, the\n            field belongs to an account holder.\n          type: string\n    IndividualDetails:\n      properties:\n        name:\n          $ref: \"#/components/schemas/ViasName\"\n          description: \u003e-\n            The name of the individual.\n\n            \u003eMake sure your account holder registers using the name shown on their Photo ID.\n        personalData:\n          $ref: \"#/components/schemas/ViasPersonalData\"\n          description: Personal information of the individual.\n    KYCBankAccountCheckResult:\n      properties:\n        bankAccountUUID:\n          description: The unique ID of the bank account to which the check applies.\n          type: string\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n      required:\n        - checks\n        - bankAccountUUID\n    KYCCheckDataSummaryItem:\n      properties:\n        itemCode:\n          description: The code of the item reviewed.\n          format: int32\n          type: integer\n        itemDescription:\n          description: A description of the item reviewed.\n          type: string\n    KYCCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n      required:\n        - checks\n    KYCCheckStatusData:\n      properties:\n        requiredFields:\n          description: A list of the fields required for execution of the check.\n          items:\n            type: string\n          type: array\n        status:\n          description: \u003e-\n            The status of the check.\n\n            \u003ePermitted Values: `UNCHECKED`, `DATA_PROVIDED`, `PASSED`, `PENDING`, `AWAITING_DATA`, `RETRY_LIMIT_REACHED`, `INVALID_DATA`, `FAILED`.\n          enum:\n            - AWAITING_DATA\n            - DATA_PROVIDED\n            - FAILED\n            - INVALID_DATA\n            - PASSED\n            - PENDING\n            - PENDING_REVIEW\n            - RETRY_LIMIT_REACHED\n            - UNCHECKED\n          type: string\n        summary:\n          $ref: \"#/components/schemas/KYCCheckSummary\"\n          description: A summary of the execution of the check.\n        type:\n          description: \u003e-\n            The type of check.\n\n            \u003ePermitted Values: `COMPANY_VERIFICATION`, `IDENTITY_VERIFICATION`, `PASSPORT_VERIFICATION`, `BANK_ACCOUNT_VERIFICATION`, `NONPROFIT_VERIFICATION`.\n          enum:\n            - BANK_ACCOUNT_VERIFICATION\n            - COMPANY_VERIFICATION\n            - IDENTITY_VERIFICATION\n            - NONPROFIT_VERIFICATION\n            - PASSPORT_VERIFICATION\n          type: string\n      required:\n        - type\n        - status\n        - summary\n        - requiredFields\n    KYCCheckSummary:\n      properties:\n        code:\n          description: The code of the check.\n          format: int32\n          type: integer\n        description:\n          description: A description of the check.\n          type: string\n      required:\n        - code\n    KYCShareholderCheckResult:\n      properties:\n        checks:\n          description: A list of the checks and their statuses.\n          items:\n            $ref: \"#/components/schemas/KYCCheckStatusData\"\n          type: array\n        shareholderCode:\n          description: The code of the shareholder to which the check applies.\n          type: string\n      required:\n        - checks\n        - shareholderCode\n    KYCVerificationResult:\n      properties:\n        accountHolder:\n          $ref: \"#/components/schemas/KYCCheckResult\"\n          description: The result(s) of the checks on the account holder.\n        bankAccounts:\n          description: The result(s) of the checks on the bank account(s).\n          items:\n            $ref: \"#/components/schemas/KYCBankAccountCheckResult\"\n          type: array\n        shareholders:\n          description: The result(s) of the checks on the shareholder(s).\n          items:\n            $ref: \"#/components/schemas/KYCShareholderCheckResult\"\n          type: array\n      required:\n        - accountHolder\n        - shareholders\n        - bankAccounts\n    Message:\n      properties:\n        code:\n          description: The message code.\n          type: string\n        text:\n          description: The message text.\n          type: string\n    NotificationResponse:\n      properties:\n        notificationResponse:\n          description: Set this property to **[accepted]** to acknowledge that you received\n            a notification from Adyen.\n          type: string\n      required:\n        - notificationResponse\n    OperationStatus:\n      properties:\n        message:\n          $ref: \"#/components/schemas/Message\"\n          description: The message regarding the operation status.\n        statusCode:\n          description: The status code.\n          type: string\n    PaymentFailureNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/PaymentFailureNotificationContent\"\n          description: The details of the payment failure.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    PaymentFailureNotificationContent:\n      properties:\n        errorFields:\n          description: Missing or invalid fields that caused the payment error.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n        errorMessage:\n          $ref: \"#/components/schemas/Message\"\n          description: The error message.\n      required:\n        - errorMessage\n        - errorFields\n    PayoutScheduleResponse:\n      properties:\n        nextScheduledPayout:\n          description: The date of the next scheduled payout.\n          format: date-time\n          type: string\n        schedule:\n          description: |-\n            The payout schedule of the account.\n            \u003ePermitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.\n          enum:\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT\n            - BIWEEKLY_ON_1ST_AND_15TH_AT_NOON\n            - DAILY\n            - DAILY_6PM\n            - DEFAULT\n            - EVERY_6_HOURS_FROM_MIDNIGHT\n            - HOLD\n            - MONTHLY\n            - WEEKLY\n            - WEEKLY_ON_TUE_FRI_MIDNIGHT\n            - YEARLY\n          type: string\n      required:\n        - schedule\n        - nextScheduledPayout\n    PersonalDocumentData:\n      properties:\n        expirationDate:\n          description: |-\n            The expiration date of the document.\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).\n          type: string\n        issuerCountry:\n          description: \u003e-\n            The two-character country code of the issuer.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          maxLength: 2\n          minLength: 2\n          type: string\n        issuerState:\n          description: The state issued the document (if applicable)\n          type: string\n        number:\n          description: The number of the document. Delete the given type if the value empty.\n          type: string\n        type:\n          description: \u003e-\n            The type of the document. More then one item pert type does not\n            allowed.\n\n            Valid values: ID, PASSPORT, VISA, DRIVINGLICENSE\n          enum:\n            - DRIVINGLICENSE\n            - ID\n            - PASSPORT\n            - SOCIALSECURITY\n            - VISA\n          type: string\n      required:\n        - type\n        - number\n    RefundResult:\n      properties:\n        originalTransaction:\n          $ref: \"#/components/schemas/Transaction\"\n          description: The transaction that has been refunded.\n        pspReference:\n          description: The reference of the refund.\n          type: string\n        response:\n          description: The response indicating if the refund has been received for\n            processing.\n          type: string\n      required:\n        - pspReference\n        - originalTransaction\n    ReportAvailableNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/ReportAvailableNotificationContent\"\n          description: Details of the report.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    ReportAvailableNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the Account to which the report applies.\n          type: string\n        accountType:\n          description: The type of Account to which the report applies.\n          type: string\n        eventDate:\n          description: The date of the event to which the report applies.\n          format: date-time\n          type: string\n        remoteAccessUrl:\n          description: The URL at which the report can be accessed.\n          type: string\n        success:\n          description: Indicates whether the event resulted in a success.\n          type: boolean\n    ScheduledRefundsNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/ScheduledRefundsNotificationContent\"\n          description: Details of the scheduling of the refunds.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    ScheduledRefundsNotificationContent:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        accountHolderCode:\n          description: The code of the Account Holder.\n          type: string\n        lastPayout:\n          $ref: \"#/components/schemas/Transaction\"\n          description: The most recent payout (after which all transactions were scheduled\n            to be refunded).\n        refundResults:\n          description: A list of the refunds that have been scheduled and their results.\n          items:\n            $ref: \"#/components/schemas/RefundResult\"\n          type: array\n      required:\n        - accountHolderCode\n        - accountCode\n        - refundResults\n        - lastPayout\n    ShareholderContact:\n      properties:\n        address:\n          $ref: \"#/components/schemas/ViasAddress\"\n          description: The address of the contact.\n        email:\n          description: The e-mail address of the contact.\n          type: string\n        fullPhoneNumber:\n          description: \u003e-\n            The phone number of the contact provided as a single string.  It\n            will be handled as a landline phone.\n\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        name:\n          $ref: \"#/components/schemas/ViasName\"\n          description: The name of the contact.\n        personalData:\n          $ref: \"#/components/schemas/ViasPersonalData\"\n          description: Personal data of the Shareholder.\n        phoneNumber:\n          $ref: \"#/components/schemas/ViasPhoneNumber\"\n          description: The phone number of the contact.\n        shareholderCode:\n          description: \u003e\n            The unique identifier (UUID) of the Shareholder.\n\n            \u003e**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**\n\n\n            \u003e**If, during an Account Holder create request, a UUID is provided, the creation of the Shareholder will fail while the creation of the Account Holder will continue.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**\n\n\n            \u003e**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Bank Account will be updated.**\n          type: string\n        webAddress:\n          description: The URL of the website of the contact.\n          type: string\n    Transaction:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount of the transaction.\n        bankAccountDetail:\n          $ref: \"#/components/schemas/BankAccountDetail\"\n          description: The details of the bank account to where a payout was made.\n        captureMerchantReference:\n          description: The merchant reference of a related capture.\n          type: string\n        capturePspReference:\n          description: The psp reference of a related capture.\n          type: string\n        creationDate:\n          description: The date on which the transaction was performed.\n          format: date-time\n          type: string\n        description:\n          description: A description of the transaction.\n          type: string\n        destinationAccountCode:\n          description: The code of the account to which funds were credited during an\n            outgoing fund transfer.\n          type: string\n        disputePspReference:\n          description: The psp reference of the related dispute.\n          type: string\n        disputeReasonCode:\n          description: The reason code of a dispute.\n          type: string\n        merchantReference:\n          description: The merchant reference of a transaction.\n          type: string\n        paymentPspReference:\n          description: The psp reference of the related authorisation or transfer.\n          type: string\n        payoutPspReference:\n          description: The psp reference of the related payout.\n          type: string\n        pspReference:\n          description: The psp reference of a transaction.\n          type: string\n        sourceAccountCode:\n          description: The code of the account from which funds were debited during an\n            incoming fund transfer.\n          type: string\n        transactionStatus:\n          description: \u003e-\n            The status of the transaction.\n\n            \u003ePermitted values: `PendingCredit`, `CreditFailed`, `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`, `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`, `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`, `ManualCorrected`.\n          enum:\n            - Chargeback\n            - ChargebackReceived\n            - ChargebackReversed\n            - ChargebackReversedReceived\n            - Converted\n            - CreditFailed\n            - Credited\n            - DebitFailed\n            - DebitReversedReceived\n            - Debited\n            - DebitedReversed\n            - FundTransfer\n            - ManualCorrected\n            - Payout\n            - PayoutReversed\n            - PendingCredit\n            - PendingDebit\n            - PendingFundTransfer\n            - SecondChargeback\n            - SecondChargebackReceived\n          type: string\n        transferCode:\n          description: The transfer code of the transaction.\n          type: string\n    TransferFundsNotification:\n      properties:\n        content:\n          $ref: \"#/components/schemas/TransferFundsNotificationContent\"\n          description: Details of the fund transfer.\n        eventType:\n          description: The event type of the notification.\n          type: string\n        executingUserKey:\n          description: The user or process that has triggered the notification.\n          type: string\n        live:\n          description: Indicates whether the notification originated from the live\n            environment or the test environment. If true, the notification\n            originated from the live environment. If false, the notification\n            originated from the test environment.\n          type: boolean\n        pspReference:\n          description: The PSP reference of the request from which the notification\n            originates.\n          type: string\n      required:\n        - executingUserKey\n        - pspReference\n        - eventType\n        - live\n        - content\n    TransferFundsNotificationContent:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount transferred.\n        destinationAccountCode:\n          description: The code of the Account to which funds were credited.\n          type: string\n        merchantReference:\n          description: The reference provided by the merchant.\n          type: string\n        sourceAccountCode:\n          description: The code of the Account from which funds were debited.\n          type: string\n        status:\n          $ref: \"#/components/schemas/OperationStatus\"\n          description: The status of the fund transfer.\n        transferCode:\n          description: The transfer code.\n          type: string\n      required:\n        - sourceAccountCode\n        - destinationAccountCode\n        - amount\n        - transferCode\n    UpdateAccountHolderResponse:\n      properties:\n        accountHolderCode:\n          description: The code of the account holder.\n          type: string\n        accountHolderDetails:\n          $ref: \"#/components/schemas/AccountHolderDetails\"\n          description: Details of the account holder.\n        accountHolderStatus:\n          $ref: \"#/components/schemas/AccountHolderStatus\"\n          description: The new status of the account holder.\n        invalidFields:\n          description: in case the account holder has not been updated, contains account\n            holder fields, that did not pass the validation.\n          items:\n            $ref: \"#/components/schemas/ErrorFieldType\"\n          type: array\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's platform settings, the\n            following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n        updatedFields:\n          description: A list of the fields updated through the request.\n          items:\n            $ref: \"#/components/schemas/FieldType\"\n          type: array\n        verification:\n          $ref: \"#/components/schemas/KYCVerificationResult\"\n          description: The details of KYC Verification of the account holder.\n      required:\n        - pspReference\n        - submittedAsync\n        - accountHolderStatus\n        - verification\n    UpdateAccountResponse:\n      properties:\n        accountCode:\n          description: The code of the account.\n          type: string\n        payoutSchedule:\n          $ref: \"#/components/schemas/PayoutScheduleResponse\"\n          description: The payout schedule of the account.\n        pspReference:\n          description: The reference of a request.  Can be used to uniquely identify the\n            request.\n          type: string\n        resultCode:\n          description: The result code.\n          type: string\n        submittedAsync:\n          description: \u003e-\n            Indicates whether the request is processed synchronously or\n            asynchronously.  Depending on the request's platform settings, the\n            following scenarios may be applied:\n\n            * **sync:** The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.\n\n            * **async:** The request is queued and will be executed when the providing service is available in the order in which the requests are received.\n\n            * **asyncOnError:** The processing of the request is immediately attempted, but if the providing service is unavailable, the request is scheduled in a queue.\n          type: boolean\n      required:\n        - pspReference\n        - submittedAsync\n        - accountCode\n        - payoutSchedule\n    ViasAddress:\n      properties:\n        city:\n          description: \u003e-\n            The name of the city.\n\n            \u003eRequired if either `houseNumberOrName`, `street`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n        country:\n          description: \u003e-\n            The two-character country code of the address. The permitted country\n            codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n\n            \u003e If you don't know the country or are not collecting the country from the shopper, provide `countryCode` as `ZZ`.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: \u003e-\n            The postal code.\n\n            \u003eA maximum of five (5) digits for an address in the USA, or a maximum of ten (10) characters for an address in all other countries.\n\n            \u003eRequired if either `houseNumberOrName`, `street`, `city`, or `stateOrProvince` are provided.\n          type: string\n        stateOrProvince:\n          description: \u003e-\n            The abbreviation of the state or province.\n\n            \u003eTwo (2) characters for an address in the USA or Canada, or a maximum of three (3) characters for an address in all other countries.\n\n            \u003eRequired for an address in the USA or Canada if either `houseNumberOrName`, `street`, `city`, or `postalCode` are provided.\n          type: string\n        street:\n          description: \u003e-\n            The name of the street.\n\n            \u003eThe house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n\n            \u003eRequired if either `houseNumberOrName`, `city`, `postalCode`, or `stateOrProvince` are provided.\n          type: string\n      required:\n        - country\n    ViasName:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n            - MALE\n            - FEMALE\n            - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n        - gender\n    ViasPersonalData:\n      properties:\n        dateOfBirth:\n          description: |-\n            The date of birth of the person.\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).\n          type: string\n        documentData:\n          description: Key value pairs of document type and identify numbers\n          items:\n            $ref: \"#/components/schemas/PersonalDocumentData\"\n          type: array\n        idNumber:\n          deprecated: true\n          description: An ID number of the person.\n          type: string\n        nationality:\n          description: \u003e-\n            The nationality of the person represented by a two-character country\n            code.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          maxLength: 2\n          minLength: 2\n          type: string\n    ViasPhoneNumber:\n      properties:\n        phoneCountryCode:\n          description: \u003e-\n            The two-character country code of the phone number.\n\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        phoneNumber:\n          description: |-\n            The phone number.\n            \u003eThe inclusion of the phone number country code is not necessary.\n          type: string\n        phoneType:\n          description: \u003e-\n            The type of the phone number.\n\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.\n          enum:\n            - Fax\n            - Landline\n            - Mobile\n            - SIP\n          type: string\n      required:\n        - phoneCountryCode\n        - phoneNumber\nx-groups:\n  - Account holders\n  - Accounts\n  - Fund management\n  - Other\nx-isWebhook: \"true\"\nx-staticResponse: response.json\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/adyen.com-MarketPayNotificationService-3-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/adyen.com-MarketPayNotificationService-3-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}