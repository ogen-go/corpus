{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sproogen/itsgoingto.be"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "server/swagger.yml",
			"byteSize": 14374,
			"content": "openapi: 3.0.1\ninfo:\n  title: Its Going To Be API\n  description: \"\"\n  license:\n    name: GPLv3\n    url: https://www.gnu.org/licenses/gpl-3.0.en.html\n  version: 0.0.1\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n- url: https://itsgoingto.be/api\n- url: http://itsgoingto.be/api\ntags:\n- name: Polls\n  description: \"\"\n- name: Responses\n  description: \"\"\n- name: Admin\n  description: \"\"\npaths:\n  /polls:\n    get:\n      tags:\n      - Polls\n      summary: Retrieve all polls, only accessible when authorised\n      security:\n        - bearerAuth: []\n      operationId: \"\"\n      parameters:\n      - name: page\n        in: query\n        description: The page to return.\n        schema:\n          type: integer\n          default: 1\n      - name: pageSize\n        in: query\n        description: The ammount of results to return per page.\n        schema:\n          type: integer\n          default: 20\n      - name: sort\n        in: query\n        description: The field to sort on.\n        schema:\n          type: string\n          default: id\n          enum:\n          - id\n          - identifier\n          - question\n          - responsesCount\n      - name: sortDirection\n        in: query\n        description: The direction to sort.\n        schema:\n          type: string\n          default: asc\n          enum:\n          - asc\n          - desc\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 20\n                  total:\n                    type: integer\n                    example: 100\n                  entities:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Poll'\n        400:\n          description: Bad request. Invalid **sort** option or **sortDirection** provided.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: invalid-sort-option\n        401:\n          description: Authorization information is missing or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: unauthorised\n    post:\n      tags:\n      - Polls\n      summary: Create a new poll\n      operationId: \"\"\n      requestBody:\n        description: The poll to create.\n        content:\n          application/json:\n            schema:\n              required:\n              - answers\n              - question\n              type: object\n              properties:\n                question:\n                  type: string\n                answers:\n                  type: array\n                  items:\n                    type: string\n                multipleChoice:\n                  type: boolean\n                endDate:\n                  type: string\n                  format: datetime\n                passphrase:\n                  type: string\n        required: false\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Poll'\n        400:\n          description: Bad request. Invalid question params.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: array\n                    example:\n                    - No question has been provided\n                    items:\n                      type: string\n      x-codegen-request-body-name: poll\n  /polls/{identifier}:\n    get:\n      tags:\n      - Polls\n      summary: Retrieve poll\n      security:\n        - {}\n        - bearerAuth: []\n      operationId: \"\"\n      parameters:\n      - name: identifier\n        in: path\n        description: The poll identifier\n        required: true\n        schema:\n          type: string\n      - name: passphrase\n        in: query\n        description: Passphrase to access the poll\n        schema:\n          type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Poll'\n        403:\n          description: Forbidden. Poll has a passcode which is not provided or invallid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: incorrect-passphrase\n        404:\n          description: Not found. Poll could not be found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-not-found\n    delete:\n      tags:\n      - Polls\n      summary: Delete poll, only accessible when authorised\n      security:\n        - bearerAuth: []\n      operationId: \"\"\n      parameters:\n      - name: identifier\n        in: path\n        description: The poll identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Poll'\n        400:\n          description: Bad request. Poll has already been deleted.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-already-deleted\n        404:\n          description: Not found. Poll could not be found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-not-found\n  /polls/{identifier}/responses:\n    get:\n      tags:\n      - Responses\n      summary: Retrieve responses for poll\n      security:\n        - {}\n        - bearerAuth: []\n      operationId: \"\"\n      parameters:\n      - name: identifier\n        in: path\n        description: The poll identifier\n        required: true\n        schema:\n          type: string\n      - name: passphrase\n        in: query\n        description: Passphrase to access the poll\n        schema:\n          type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PollResponses'\n        403:\n          description: Forbidden. Poll has a passcode which is not provided or invallid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: incorrect-passphrase\n        404:\n          description: Not found. Poll could not be found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-not-found\n    post:\n      tags:\n      - Responses\n      summary: Submit responses for poll\n      operationId: \"\"\n      parameters:\n      - name: identifier\n        in: path\n        description: The poll identifier\n        required: true\n        schema:\n          type: string\n      - name: passphrase\n        in: query\n        description: Passphrase to access the poll\n        schema:\n          type: string\n      requestBody:\n        description: The poll to create.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                answers:\n                  type: array\n                  items:\n                    type: integer\n                    example: 1\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PollResponses'\n        400:\n          description: Bad request. Poll has ended, or invalid answers provided.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-ended\n        403:\n          description: Forbidden. Poll has a passcode which is not provided or invallid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: incorrect-passphrase\n        404:\n          description: Not found. Poll could not be found.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: poll-not-found\n  /login:\n    post:\n      tags:\n      - Admin\n      summary: \"\"\n      operationId: \"\"\n      requestBody:\n        description: The poll to create.\n        content:\n          application/json:\n            schema:\n              required:\n              - username\n              - password\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n        400:\n          description: Bad request. Invalid Username or Password.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      type: integer\n                    example: [Username is required, Password is required, Invalid Username or Password.]\n  /stats:\n    get:\n      tags:\n      - Admin\n      summary: Get stats on polls\n      security:\n        - bearerAuth: []\n      operationId: \"\"\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  polls:\n                    type: integer\n                    example: 156\n                  responses:\n                    type: integer\n                    example: 454\n        401:\n          description: Authorization information is missing or invalid.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                    example: unauthorised\ncomponents:\n  schemas:\n    Poll:\n      required:\n      - question\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique server generated ID\n          example: 1\n        identifier:\n          type: string\n          description: Unique generate poll identifier\n          example: v90034d6\n        question:\n          type: string\n          description: The question asked\n          example: Is this a question?\n        multipleChoice:\n          type: boolean\n          description: Does the poll allow multiple choice responses\n          example: false\n          default: false\n        endDate:\n          type: string\n          description: The end date for the poll, can be empty if no end date\n          format: date-time\n          example: 2020-10-09T19:56:35Z\n        ended:\n          type: boolean\n          description: Has the poll ended\n          example: false\n        deleted:\n          type: boolean\n          description: Has the poll been deleted\n          example: false\n        created:\n          type: string\n          description: When the poll was created\n          format: date-time\n          example: 2020-10-09T19:56:35Z\n        updated:\n          type: string\n          description: When the poll was last updated\n          format: date-time\n          example: 2020-10-09T19:56:35Z\n        answers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Answer'\n        responsesCount:\n          type: integer\n          description: Total number of responses for all answers\n          example: 5\n        userResponses:\n          type: array\n          description: Total number of responses for all answers\n          example:\n          - 1\n          items:\n            type: integer\n    Answer:\n      required:\n      - answer\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique server generated ID\n          example: 1\n        answer:\n          type: string\n          description: The answer\n          example: Answer Text\n        responsesCount:\n          type: integer\n          description: Total number of responses for the answer\n          example: 5\n    PollResponses:\n      type: object\n      properties:\n        ended:\n          type: boolean\n          description: Has the poll ended\n          example: false\n        answers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Answer'\n        responsesCount:\n          type: integer\n          description: Total number of responses for all answers\n          example: 5\n        userResponses:\n          type: array\n          description: Total number of responses for all answers\n          example:\n          - 1\n          items:\n            type: integer\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/sproogen/itsgoingto.be@a69b656425da59ebd301ceab4f6ecb0d1dd97683/-/blob/server/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/sproogen/itsgoingto.be/blob/a69b656425da59ebd301ceab4f6ecb0d1dd97683/server/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}