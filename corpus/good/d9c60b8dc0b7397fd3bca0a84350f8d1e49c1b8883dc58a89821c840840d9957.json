{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-go-api-library"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/recurring/api/openapi.yaml",
			"byteSize": 32155,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n  description: |-\n    The Recurring APIs allow you to manage and remove your tokens or saved payment details. Tokens should be created with validation during a payment request.\n\n    For more information, refer to our [Tokenization documentation](https://docs.adyen.com/checkout/tokenization).\n    ## Authentication\n    To connect to the Recurring API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:\n\n    ```\n    curl\n    -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\\n    -H \"Content-Type: application/json\" \\\n    ...\n    ```\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n    ## Versioning\n    Recurring API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n    For example:\n    ```\n    https://pal-test.adyen.com/pal/servlet/Recurring/v49/disable\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Adyen Recurring API\n  version: \"49\"\nservers:\n- url: https://pal-test.adyen.com/pal/servlet/Recurring/v49\npaths:\n  /disable:\n    post:\n      description: |-\n        Disables stored payment details to stop charging a shopper with this particular recurring detail ID.\n\n        For more information, refer to [Disable stored details](https://docs.adyen.com/classic-integration/recurring-payments/disable-stored-details/).\n      operationId: post-disable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableResult'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Disables stored payment details.\n      x-groupName: General\n      x-sortIndex: 2\n  /listRecurringDetails:\n    post:\n      description: |-\n        Lists the stored payment details for a shopper, if there are any available. The recurring detail ID can be used with a regular authorisation request to charge the shopper. A summary of the payment detail is returned for presentation to the shopper.\n\n        For more information, refer to [Retrieve stored details](https://docs.adyen.com/classic-integration/recurring-payments/retrieve-stored-details/).\n      operationId: post-listRecurringDetails\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RecurringDetailsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecurringDetailsResult'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Retrieves stored payment details for a shopper.\n      x-groupName: General\n      x-sortIndex: 1\n  /notifyShopper:\n    post:\n      description: |-\n        Sends a request to the issuer so they can inform the shopper about the\n        upcoming recurring payment. This endpoint is used only for local\n        acquiring in India. For more information, refer to [Recurring card\n        payments in\n        India](https://docs.adyen.com/payment-methods/cards/cards-recurring-india).\n      operationId: post-notifyShopper\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotifyShopperRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotifyShopperResult'\n          description: OK - the request has succeeded.\n        '400':\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          description: Unauthorized - authentication required.\n        '403':\n          description: Forbidden - insufficient permissions to process the request.\n        '422':\n          description: Unprocessable Entity - a request validation error.\n        '500':\n          description: Internal Server Error - the server could not process the request.\n      summary: Ask the issuer to inform shopper of upcoming payment\n      x-groupName: General\n      x-sortIndex: 4\n  /scheduleAccountUpdater:\n    post:\n      description: |-\n        When making the API call, you can submit either the credit card information, or the recurring detail reference and the shopper reference:\n        * If the card information is provided, all the sub-fields for `card` are mandatory.\n        * If the recurring detail reference is provided, the fields for `shopperReference` and `selectedRecurringDetailReference` are mandatory.\n      operationId: post-scheduleAccountUpdater\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScheduleAccountUpdaterRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleAccountUpdaterResult'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Schedules running of the Account Updater.\n      x-groupName: General\n      x-sortIndex: 3\ncomponents:\n  schemas:\n    Address:\n      example:\n        country: country\n        stateOrProvince: stateOrProvince\n        city: city\n        houseNumberOrName: houseNumberOrName\n        street: street\n        postalCode: postalCode\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        country:\n          description: |-\n            The two-character country code as defined in ISO-3166-1 alpha-2. For example, **US**.\n            \u003e If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: A maximum of five digits for an address in the US, or a maximum\n            of ten characters for an address in all other countries.\n          type: string\n        stateOrProvince:\n          description: |-\n            State or province codes as defined in ISO 3166-2. For example, **CA** in the US or **ON** in Canada.\n            \u003e Required for the US and Canada.\n          type: string\n        street:\n          description: |-\n            The name of the street.\n            \u003e The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n          type: string\n      required:\n      - city\n      - country\n      - houseNumberOrName\n      - postalCode\n      - street\n    Amount:\n      properties:\n        currency:\n          description: |-\n            The three-character [ISO currency\n            code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: |-\n            The amount of the transaction, in [minor\n            units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    BankAccount:\n      example:\n        ownerName: ownerName\n        countryCode: countryCode\n        taxId: taxId\n        iban: iban\n        bankAccountNumber: bankAccountNumber\n        bankName: bankName\n        bankLocationId: bankLocationId\n        bic: bic\n        bankCity: bankCity\n      properties:\n        bankAccountNumber:\n          description: The bank account number (without separators).\n          type: string\n        bankCity:\n          description: The bank city.\n          type: string\n        bankLocationId:\n          description: The location id of the bank. The field value is `nil` in most\n            cases.\n          type: string\n        bankName:\n          description: The name of the bank.\n          type: string\n        bic:\n          description: The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362)\n            (BIC) is the SWIFT address assigned to a bank. The field value is `nil`\n            in most cases.\n          type: string\n        countryCode:\n          description: |-\n            Country code where the bank is located.\n\n            A valid value is an ISO two-character country code (e.g. 'NL').\n          type: string\n        iban:\n          description: The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number)\n            (IBAN).\n          type: string\n        ownerName:\n          description: |-\n            The name of the bank account holder.\n            If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:\n            * χ12 is converted to ch12.\n            * üA is converted to euA.\n            * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n            After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:\n            * John17 - allowed.\n            * J17 - allowed.\n            * 171 - not allowed.\n            * John-7 - allowed.\n            \u003e If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.\n          type: string\n        taxId:\n          description: The bank account holder's tax ID.\n          type: string\n    Card:\n      example:\n        cvc: cvc\n        number: number\n        holderName: holderName\n        startMonth: startMonth\n        issueNumber: issueNumber\n        expiryMonth: expiryMonth\n        startYear: startYear\n        expiryYear: expiryYear\n      properties:\n        cvc:\n          description: |-\n            The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid) (1-20 characters). Depending on the card brand, it is known also as:\n            * CVV2/CVC2 – length: 3 digits\n            * CID – length: 4 digits\n            \u003e If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce), the CVC code is present in the encrypted data. You must never post the card details to the server.\n            \u003e This field must be always present in a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).\n            \u003e When this value is returned in a response, it is always empty because it is not stored.\n          maxLength: 20\n          minLength: 1\n          type: string\n        expiryMonth:\n          description: |-\n            The card expiry month.\n            Format: 2 digits, zero-padded for single digits. For example:\n            * 03 = March\n            * 11 = November\n          maxLength: 2\n          minLength: 1\n          type: string\n        expiryYear:\n          description: |-\n            The card expiry year.\n            Format: 4 digits. For example: 2020\n          maxLength: 4\n          minLength: 4\n          type: string\n        holderName:\n          description: The name of the cardholder, as printed on the card.\n          maxLength: 50\n          minLength: 1\n          type: string\n        issueNumber:\n          description: The issue number of the card (for some UK debit cards only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        number:\n          description: |-\n            The card number (4-19 characters). Do not use any separators.\n            When this value is returned in a response, only the last 4 digits of the card number are returned.\n          maxLength: 19\n          minLength: 4\n          type: string\n        startMonth:\n          description: The month component of the start date (for some UK debit cards\n            only).\n          maxLength: 2\n          minLength: 1\n          type: string\n        startYear:\n          description: The year component of the start date (for some UK debit cards\n            only).\n          maxLength: 4\n          minLength: 4\n          type: string\n      required:\n      - expiryMonth\n      - expiryYear\n      - holderName\n      - number\n    DisableRequest:\n      example:\n        merchantAccount: merchantAccount\n        contract: contract\n        recurringDetailReference: recurringDetailReference\n        shopperReference: shopperReference\n      properties:\n        contract:\n          description: |-\n            Specify the contract if you only want to disable a specific use.\n\n            This field can be set to one of the following values, or to their combination (comma-separated):\n            * ONECLICK\n            * RECURRING\n            * PAYOUT\n          type: string\n        merchantAccount:\n          description: The merchant account identifier with which you want to process\n            the transaction.\n          type: string\n        recurringDetailReference:\n          description: |-\n            The ID that uniquely identifies the recurring detail reference.\n\n            If it is not provided, the whole recurring contract of the `shopperReference` will be disabled, which includes all recurring details.\n          type: string\n        shopperReference:\n          description: |-\n            The ID that uniquely identifies the shopper.\n\n            This `shopperReference` must be the same as the `shopperReference` used in the initial payment.\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n    DisableResult:\n      example:\n        response: response\n      properties:\n        response:\n          description: Depending on whether a specific recurring detail was in the\n            request, result is either [detail-successfully-disabled] or [all-details-successfully-disabled].\n          type: string\n    Name:\n      example:\n        firstName: firstName\n        lastName: lastName\n        gender: MALE\n        infix: infix\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        gender:\n          description: |-\n            The gender.\n            \u003eThe following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.\n          enum:\n          - MALE\n          - FEMALE\n          - UNKNOWN\n          maxLength: 1\n          minLength: 1\n          type: string\n        infix:\n          description: |-\n            The name's infix, if applicable.\n            \u003eA maximum length of twenty (20) characters is imposed.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n      - firstName\n      - gender\n      - lastName\n    Recurring:\n      example:\n        recurringExpiry: 2000-01-23T04:56:07.000+00:00\n        recurringFrequency: recurringFrequency\n        tokenService: VISATOKENSERVICE\n        contract: ONECLICK\n        recurringDetailName: recurringDetailName\n      properties:\n        contract:\n          description: |-\n            The type of recurring contract to be used.\n            Possible values:\n            * `ONECLICK` – Payment details can be used to initiate a one-click payment, where the shopper enters the [card security code (CVC/CVV)](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid).\n            * `RECURRING` – Payment details can be used without the card security code to initiate [card-not-present transactions](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-not-present-cnp).\n            * `ONECLICK,RECURRING` – Payment details can be used regardless of whether the shopper is on your site or not.\n            * `PAYOUT` – Payment details can be used to [make a payout](https://docs.adyen.com/checkout/online-payouts).\n          enum:\n          - ONECLICK\n          - RECURRING\n          - PAYOUT\n          type: string\n        recurringDetailName:\n          description: A descriptive name for this detail.\n          type: string\n        recurringExpiry:\n          description: Date after which no further authorisations shall be performed.\n            Only for 3D Secure 2.\n          format: date-time\n          type: string\n        recurringFrequency:\n          description: Minimum number of days between authorisations. Only for 3D\n            Secure 2.\n          type: string\n        tokenService:\n          description: The name of the token service.\n          enum:\n          - VISATOKENSERVICE\n          - MCTOKENSERVICE\n          type: string\n    RecurringDetail:\n      example:\n        socialSecurityNumber: socialSecurityNumber\n        firstPspReference: firstPspReference\n        creationDate: 2000-01-23T04:56:07.000+00:00\n        bank:\n          ownerName: ownerName\n          countryCode: countryCode\n          taxId: taxId\n          iban: iban\n          bankAccountNumber: bankAccountNumber\n          bankName: bankName\n          bankLocationId: bankLocationId\n          bic: bic\n          bankCity: bankCity\n        shopperName:\n          firstName: firstName\n          lastName: lastName\n          gender: MALE\n          infix: infix\n        aliasType: aliasType\n        name: name\n        variant: variant\n        alias: alias\n        recurringDetailReference: recurringDetailReference\n        contractTypes:\n        - contractTypes\n        - contractTypes\n        additionalData:\n          key: additionalData\n        billingAddress:\n          country: country\n          stateOrProvince: stateOrProvince\n          city: city\n          houseNumberOrName: houseNumberOrName\n          street: street\n          postalCode: postalCode\n        paymentMethodVariant: paymentMethodVariant\n        card:\n          cvc: cvc\n          number: number\n          holderName: holderName\n          startMonth: startMonth\n          issueNumber: issueNumber\n          expiryMonth: expiryMonth\n          startYear: startYear\n          expiryYear: expiryYear\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: |-\n            This field contains additional data, which may be returned in a particular response.\n\n            The additionalData object consists of entries, each of which includes the key and value.\n          type: object\n        alias:\n          description: |-\n            The alias of the credit card number.\n\n            Applies only to recurring contracts storing credit card details\n          type: string\n        aliasType:\n          description: |-\n            The alias type of the credit card number.\n\n            Applies only to recurring contracts storing credit card details.\n          type: string\n        bank:\n          $ref: '#/components/schemas/BankAccount'\n        billingAddress:\n          $ref: '#/components/schemas/Address'\n        card:\n          $ref: '#/components/schemas/Card'\n        contractTypes:\n          description: Types of recurring contracts.\n          items:\n            type: string\n          type: array\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        firstPspReference:\n          description: The `pspReference` of the first recurring payment that created\n            the recurring detail.\n          type: string\n        name:\n          description: An optional descriptive name for this recurring detail.\n          type: string\n        paymentMethodVariant:\n          description: The  type or sub-brand of a payment method used, e.g. Visa\n            Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).\n          type: string\n        recurringDetailReference:\n          description: The reference that uniquely identifies the recurring detail.\n          type: string\n        shopperName:\n          $ref: '#/components/schemas/Name'\n        socialSecurityNumber:\n          description: A shopper's social security number (only in countries where\n            it is legal to collect).\n          type: string\n        variant:\n          description: The payment method, such as “mc\", \"visa\", \"ideal\", \"paypal\".\n          type: string\n      required:\n      - recurringDetailReference\n      - variant\n    RecurringDetailsRequest:\n      example:\n        merchantAccount: merchantAccount\n        recurring:\n          recurringExpiry: 2000-01-23T04:56:07.000+00:00\n          recurringFrequency: recurringFrequency\n          tokenService: VISATOKENSERVICE\n          contract: ONECLICK\n          recurringDetailName: recurringDetailName\n        shopperReference: shopperReference\n      properties:\n        merchantAccount:\n          description: The merchant account identifier you want to process the (transaction)\n            request with.\n          type: string\n        recurring:\n          $ref: '#/components/schemas/Recurring'\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g.\n            user ID or account ID).\n          type: string\n      required:\n      - merchantAccount\n      - shopperReference\n    RecurringDetailsResult:\n      example:\n        lastKnownShopperEmail: lastKnownShopperEmail\n        details:\n        - socialSecurityNumber: socialSecurityNumber\n          firstPspReference: firstPspReference\n          creationDate: 2000-01-23T04:56:07.000+00:00\n          bank:\n            ownerName: ownerName\n            countryCode: countryCode\n            taxId: taxId\n            iban: iban\n            bankAccountNumber: bankAccountNumber\n            bankName: bankName\n            bankLocationId: bankLocationId\n            bic: bic\n            bankCity: bankCity\n          shopperName:\n            firstName: firstName\n            lastName: lastName\n            gender: MALE\n            infix: infix\n          aliasType: aliasType\n          name: name\n          variant: variant\n          alias: alias\n          recurringDetailReference: recurringDetailReference\n          contractTypes:\n          - contractTypes\n          - contractTypes\n          additionalData:\n            key: additionalData\n          billingAddress:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          paymentMethodVariant: paymentMethodVariant\n          card:\n            cvc: cvc\n            number: number\n            holderName: holderName\n            startMonth: startMonth\n            issueNumber: issueNumber\n            expiryMonth: expiryMonth\n            startYear: startYear\n            expiryYear: expiryYear\n        - socialSecurityNumber: socialSecurityNumber\n          firstPspReference: firstPspReference\n          creationDate: 2000-01-23T04:56:07.000+00:00\n          bank:\n            ownerName: ownerName\n            countryCode: countryCode\n            taxId: taxId\n            iban: iban\n            bankAccountNumber: bankAccountNumber\n            bankName: bankName\n            bankLocationId: bankLocationId\n            bic: bic\n            bankCity: bankCity\n          shopperName:\n            firstName: firstName\n            lastName: lastName\n            gender: MALE\n            infix: infix\n          aliasType: aliasType\n          name: name\n          variant: variant\n          alias: alias\n          recurringDetailReference: recurringDetailReference\n          contractTypes:\n          - contractTypes\n          - contractTypes\n          additionalData:\n            key: additionalData\n          billingAddress:\n            country: country\n            stateOrProvince: stateOrProvince\n            city: city\n            houseNumberOrName: houseNumberOrName\n            street: street\n            postalCode: postalCode\n          paymentMethodVariant: paymentMethodVariant\n          card:\n            cvc: cvc\n            number: number\n            holderName: holderName\n            startMonth: startMonth\n            issueNumber: issueNumber\n            expiryMonth: expiryMonth\n            startYear: startYear\n            expiryYear: expiryYear\n        creationDate: 2000-01-23T04:56:07.000+00:00\n        shopperReference: shopperReference\n      properties:\n        creationDate:\n          description: The date when the recurring details were created.\n          format: date-time\n          type: string\n        details:\n          description: Payment details stored for recurring payments.\n          items:\n            $ref: '#/components/schemas/RecurringDetail'\n          type: array\n        lastKnownShopperEmail:\n          description: The most recent email for this shopper (if available).\n          type: string\n        shopperReference:\n          description: The reference you use to uniquely identify the shopper (e.g.\n            user ID or account ID).\n          type: string\n    NotifyShopperRequest:\n      properties:\n        amount:\n          description: The amount of the upcoming payment.\n          $ref: '#/components/schemas/Amount'\n        billingDate:\n          description: |-\n            Date on which the subscription amount will be debited from the\n            shopper. In YYYY-MM-DD format\n          type: string\n        billingSequenceNumber:\n          description: |-\n            Sequence of the debit. Depends on Frequency and Billing Attempts\n            Rule.\n          type: string\n        displayedReference:\n          description: |-\n            Reference of Pre-debit notification that is displayed to the\n            shopper. Optional field. Maps to reference if missing\n          type: string\n        merchantAccount:\n          description: |-\n            The merchant account identifier with which you want to process the\n            transaction.\n          type: string\n        recurringDetailReference:\n          description: |-\n            This is the `recurringDetailReference` returned in the response when\n            you created the token.\n          type: string\n        reference:\n          description: |-\n            Pre-debit notification reference sent by the merchant. This is a\n            mandatory field\n          type: string\n        shopperReference:\n          description: |-\n            The ID that uniquely identifies the shopper.\n            This `shopperReference` must be the same as the `shopperReference`\n            used in the initial payment.\n          type: string\n        storedPaymentMethodId:\n          description: |-\n            This is the `recurringDetailReference` returned in the response when\n            you created the token.\n          type: string\n      required:\n        - merchantAccount\n        - shopperReference\n        - amount\n        - reference\n    NotifyShopperResult:\n      properties:\n        displayedReference:\n          description: Reference of Pre-debit notification that is displayed to the shopper\n          type: string\n        message:\n          description: A simple description of the `resultCode`.\n          type: string\n        pspReference:\n          description: The unique reference that is associated with the request.\n          type: string\n        reference:\n          description: Reference of Pre-debit notification sent in my the merchant\n          type: string\n        resultCode:\n          description: The code indicating the status of notification.\n          type: string\n        shopperNotificationReference:\n          description: The unique reference for the request sent downstream.\n          type: string\n        storedPaymentMethodId:\n          description: |-\n            This is the recurringDetailReference returned in the response when\n            token was created\n          type: string\n    ScheduleAccountUpdaterRequest:\n      example:\n        reference: reference\n        merchantAccount: merchantAccount\n        selectedRecurringDetailReference: selectedRecurringDetailReference\n        additionalData:\n          key: additionalData\n        card:\n          cvc: cvc\n          number: number\n          holderName: holderName\n          startMonth: startMonth\n          issueNumber: issueNumber\n          expiryMonth: expiryMonth\n          startYear: startYear\n          expiryYear: expiryYear\n        shopperReference: shopperReference\n      properties:\n        additionalData:\n          additionalProperties:\n            type: string\n          description: This field contains additional data, which may be required\n            for a particular request.\n          type: object\n        card:\n          $ref: '#/components/schemas/Card'\n        merchantAccount:\n          description: Account of the merchant.\n          type: string\n        reference:\n          description: A reference that merchants can apply for the call.\n          type: string\n        selectedRecurringDetailReference:\n          description: |-\n            The selected detail recurring reference.\n\n            Optional if `card` is provided.\n          type: string\n        shopperReference:\n          description: |-\n            The reference of the shopper that owns the recurring contract.\n\n            Optional if `card` is provided.\n          type: string\n      required:\n      - merchantAccount\n      - reference\n    ScheduleAccountUpdaterResult:\n      example:\n        result: result\n        pspReference: pspReference\n      properties:\n        pspReference:\n          description: Adyen's 16-character unique reference associated with the transaction.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        result:\n          description: The result of scheduling an Account Updater. If scheduling\n            was successful, this field returns **Success**; otherwise it contains\n            the error message.\n          type: string\n      required:\n      - pspReference\n      - result\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n- General\n",
			"canonicalURL": "/github.com/Adyen/adyen-go-api-library@c686d3f8b29d214d117df7ef1e55b22b122a38f7/-/blob/src/recurring/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-go-api-library/blob/c686d3f8b29d214d117df7ef1e55b22b122a38f7/src/recurring/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}