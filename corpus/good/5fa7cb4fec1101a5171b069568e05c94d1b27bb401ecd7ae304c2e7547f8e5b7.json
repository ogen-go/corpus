{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "ManageIntelligentFeeds.yaml",
			"size": 0,
			"path": "static/cloudngfw/aws/spec/api/ManageIntelligentFeeds.yaml",
			"byteSize": 22769,
			"content": "components:\n  schemas:\n    CreateIntelligentFeedRequest:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', maxLength: 512, title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', maxLength: 512, title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', maxLength: 255, minLength: 1, pattern: '^(http|https)://.+$', title: Feedurl,\n          type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Name: {description: 'Name of the rulestack.\n\n            ', maxLength: 63, minLength: 1, pattern: '^[a-zA-Z0-9-]+$', title: Name,\n          type: string}\n        Time: {default: 3, description: \"The timestamp of the feed. \\n\", maximum: 23,\n          minimum: 0, title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n      required: [Name, FeedURL, Type, Frequency]\n      title: CreateIntelligentFeedRequest\n      type: object\n    CreateIntelligentFeedResponse:\n      additionalProperties: false\n      properties:\n        Response: {$ref: '#/components/schemas/CreateIntelligentFeedResponse.ResponseData',\n          description: 'The API call response.\n\n            '}\n        ResponseStatus: {$ref: '#/components/schemas/CreateIntelligentFeedResponse.Result',\n          description: 'The API call response status.\n\n            '}\n      title: CreateIntelligentFeedResponse\n      type: object\n    CreateIntelligentFeedResponse.FeedDetails:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', title: Feedurl, type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Time: {description: \"The timestamp of the feed. \\n\", maximum: 23, minimum: 0,\n          title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n        UpdateToken: {default: '1', description: \"Refresh the token.    \\n\", title: Updatetoken,\n          type: string}\n      title: FeedDetails\n      type: object\n    CreateIntelligentFeedResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        FeedEntry: {$ref: '#/components/schemas/CreateIntelligentFeedResponse.FeedDetails',\n          description: 'The intelligent feed list entry.\n\n            '}\n        Name: {description: \"Name of the intelligent feed list.    \\n\", title: Name,\n          type: string}\n        RuleStackName: {description: \"Name of the rulestack. \\n\", title: Rulestackname,\n          type: string}\n      title: ResponseData\n      type: object\n    CreateIntelligentFeedResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode: {default: 0, description: \"Default value of a successful response\\\n            \\ is 0. Any other number indicates an error code.  \\n\\n400\\u2014HTTP bad\\\n            \\ request\\n* InvalidRequestException\\u2014Operation failed due to invalid\\\n            \\ request. For example, unsupported parameter name or value in the request.\\n\\\n            * LimitExceededException\\u2014Operation failed due to violation in limit\\\n            \\ settings.\\n* ThrottlingException\\u2014Operation failed due to throttling\\\n            \\ limitations.\\n* AccessDeniedException\\u2014You do not have sufficient\\\n            \\ access to perform this action.\\n\\n500\\u2014Bad request \\n* InternalServerError\\u2014\\\n            Your request is valid but Cloud NGFW could not perform the operation due\\\n            \\ to a system issue.\\n* InsufficientCapacityException\\u2014AWS currently\\\n            \\ does not have enough capacity to fulfill your request.\\n\", title: Errorcode,\n          type: integer}\n        Reason: {description: \"The error description. \\n\", title: Reason, type: string}\n      title: Result\n      type: object\n    DeleteIntelligentFeedRequest:\n      additionalProperties: false\n      properties: {}\n      title: DeleteIntelligentFeedRequest\n      type: object\n    DeleteIntelligentFeedResponse:\n      additionalProperties: false\n      properties:\n        Response: {$ref: '#/components/schemas/DeleteIntelligentFeedResponse.ResponseData',\n          description: 'The API call response.\n\n            '}\n        ResponseStatus: {$ref: '#/components/schemas/DeleteIntelligentFeedResponse.Result',\n          description: 'The API call response status.\n\n            '}\n      title: DeleteIntelligentFeedResponse\n      type: object\n    DeleteIntelligentFeedResponse.FeedDetails:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', title: Feedurl, type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Time: {description: \"The timestamp of the feed. \\n\", maximum: 23, minimum: 0,\n          title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n        UpdateToken: {default: '1', description: \"Refresh the token.    \\n\", title: Updatetoken,\n          type: string}\n      title: FeedDetails\n      type: object\n    DeleteIntelligentFeedResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        FeedEntry: {$ref: '#/components/schemas/DeleteIntelligentFeedResponse.FeedDetails',\n          description: 'The intelligent feed list entry.\n\n            '}\n        Name: {description: \"Name of the intelligent feed list.    \\n\", title: Name,\n          type: string}\n        RuleStackName: {description: \"Name of the rulestack. \\n\", title: Rulestackname,\n          type: string}\n      title: ResponseData\n      type: object\n    DeleteIntelligentFeedResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode: {default: 0, description: \"Default value of a successful response\\\n            \\ is 0. Any other number indicates an error code.  \\n\\n400\\u2014HTTP bad\\\n            \\ request\\n* InvalidRequestException\\u2014Operation failed due to invalid\\\n            \\ request. For example, unsupported parameter name or value in the request.\\n\\\n            * LimitExceededException\\u2014Operation failed due to violation in limit\\\n            \\ settings.\\n* ResourceNotFoundException\\u2014Unable to locate a resource\\\n            \\ using the parameters you provided.\\n* ThrottlingException\\u2014Operation\\\n            \\ failed due to throttling limitations.\\n* AccessDeniedException\\u2014\\\n            You do not have sufficient access to perform this action.\\n\\n500\\u2014\\\n            Bad request \\n* InternalServerError\\u2014Your request is valid but Cloud\\\n            \\ NGFW could not perform the operation due to a system issue.\\n* InsufficientCapacityException\\u2014\\\n            AWS currently does not have enough capacity to fulfill your request.\\n\",\n          title: Errorcode, type: integer}\n        Reason: {description: 'The error description.\n\n            ', title: Reason, type: string}\n      title: Result\n      type: object\n    DescribeIntelligentFeedRequest:\n      additionalProperties: false\n      properties:\n        Candidate: {default: true, description: 'Intelligent feed candidate.\n\n            ', title: Candidate, type: boolean}\n        Running: {default: false, description: 'Intelligent feeds in run state.\n\n            ', title: Running, type: boolean}\n      title: DescribeIntelligentFeedRequest\n      type: object\n    DescribeIntelligentFeedResponse:\n      additionalProperties: false\n      properties:\n        Response: {$ref: '#/components/schemas/DescribeIntelligentFeedResponse.ResponseData',\n          description: 'The API call response.\n\n            '}\n        ResponseStatus: {$ref: '#/components/schemas/DescribeIntelligentFeedResponse.Result',\n          description: 'The API call response status.\n\n            '}\n      title: DescribeIntelligentFeedResponse\n      type: object\n    DescribeIntelligentFeedResponse.FeedDetails:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', title: Feedurl, type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Time: {description: \"The timestamp of the feed. \\n\", maximum: 23, minimum: 0,\n          title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n        UpdateToken: {default: '1', description: 'Refresh the token.\n\n            ', title: Updatetoken, type: string}\n      title: FeedDetails\n      type: object\n    DescribeIntelligentFeedResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        FeedCandidate: {$ref: '#/components/schemas/DescribeIntelligentFeedResponse.FeedDetails',\n          description: 'The intelligent feed list candidate.\n\n            '}\n        FeedRunning: {$ref: '#/components/schemas/DescribeIntelligentFeedResponse.FeedDetails',\n          description: 'The intelligent feeds on run state.\n\n            '}\n        Name: {description: \"Name of the intelligent feed entry.    \\n\", title: Name,\n          type: string}\n        RuleStackName: {description: \"Name of the rulestack. \\n\", title: Rulestackname,\n          type: string}\n      title: ResponseData\n      type: object\n    DescribeIntelligentFeedResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode: {default: 0, description: \"Default value of a successful response\\\n            \\ is 0. Any other number indicates an error code.  \\n\\n400\\u2014HTTP bad\\\n            \\ request\\n* InvalidRequestException\\u2014Operation failed due to invalid\\\n            \\ request. For example, unsupported parameter name or value in the request.\\n\\\n            * LimitExceededException\\u2014Operation failed due to violation in limit\\\n            \\ settings.\\n* ThrottlingException\\u2014Operation failed due to throttling\\\n            \\ limitations.\\n* AccessDeniedException\\u2014You do not have sufficient\\\n            \\ access to perform this action.\\n\\n500\\u2014Bad request \\n* InternalServerError\\u2014\\\n            Your request is valid but Cloud NGFW could not perform the operation due\\\n            \\ to a system issue.\\n\", title: Errorcode, type: integer}\n        Reason: {description: 'The error description.\n\n            ', title: Reason, type: string}\n      title: Result\n      type: object\n    UpdateIntelligentFeedRequest:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', maxLength: 512, title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', maxLength: 512, title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', maxLength: 255, minLength: 1, pattern: '^(http|https)://.+$', title: Feedurl,\n          type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Time: {default: 3, description: \"The timestamp of the feed. \\n\", maximum: 23,\n          minimum: 0, title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n        UpdateToken: {description: 'Refresh the token.\n\n            ', title: Updatetoken, type: string}\n      required: [FeedURL, Type, Frequency]\n      title: UpdateIntelligentFeedRequest\n      type: object\n    UpdateIntelligentFeedResponse:\n      additionalProperties: false\n      properties:\n        Response: {$ref: '#/components/schemas/UpdateIntelligentFeedResponse.ResponseData',\n          description: 'The API call response.\n\n            '}\n        ResponseStatus: {$ref: '#/components/schemas/UpdateIntelligentFeedResponse.Result',\n          description: 'The API call response status.\n\n            '}\n      title: UpdateIntelligentFeedResponse\n      type: object\n    UpdateIntelligentFeedResponse.FeedDetails:\n      additionalProperties: false\n      properties:\n        AuditComment: {description: 'The intelligent feed audit remarks.\n\n            ', title: Auditcomment, type: string}\n        Certificate: {description: 'The threat intelligence feed certificate.\n\n            ', title: Certificate, type: string}\n        Description: {description: 'A description of feed.\n\n            ', title: Description, type: string}\n        FeedURL: {description: 'The intelligence feed URL.\n\n            ', title: Feedurl, type: string}\n        Frequency:\n          description: 'The frequency of feed refresh.\n\n            '\n          enum: [HOURLY, DAILY]\n          title: Frequency\n          type: string\n        Time: {description: \"The timestamp of the feed. \\n\", maximum: 23, minimum: 0,\n          title: Time, type: integer}\n        Type:\n          description: 'Type of the feed; category feeds, source feeds, and destination\n            feeds.\n\n            '\n          enum: [IP_LIST, URL_LIST]\n          title: Type\n          type: string\n        UpdateToken: {default: '1', description: \"Refresh the token.    \\n\", title: Updatetoken,\n          type: string}\n      title: FeedDetails\n      type: object\n    UpdateIntelligentFeedResponse.ResponseData:\n      additionalProperties: false\n      properties:\n        FeedEntry: {$ref: '#/components/schemas/UpdateIntelligentFeedResponse.FeedDetails',\n          description: 'The intelligent feed list entry.\n\n            '}\n        Name: {description: \"Name of the intelligent feed list.    \\n\", title: Name,\n          type: string}\n        RuleStackName: {description: \"Name of the rulestack. \\n\", title: Rulestackname,\n          type: string}\n      title: ResponseData\n      type: object\n    UpdateIntelligentFeedResponse.Result:\n      additionalProperties: false\n      properties:\n        ErrorCode: {default: 0, description: \"Default value of a successful response\\\n            \\ is 0. Any other number indicates an error code.  \\n\\n400\\u2014HTTP bad\\\n            \\ request\\n* InvalidRequestException\\u2014Operation failed due to invalid\\\n            \\ request. For example, unsupported parameter name or value in the request.\\n\\\n            * LimitExceededException\\u2014Operation failed due to violation in limit\\\n            \\ settings.\\n* ThrottlingException\\u2014Operation failed due to throttling\\\n            \\ limitations.\\n* AccessDeniedException\\u2014You do not have sufficient\\\n            \\ access to perform this action.\\n\\n500\\u2014Bad request \\n* InternalServerError\\u2014\\\n            Your request is valid but Cloud NGFW could not perform the operation due\\\n            \\ to a system issue.\\n* InsufficientCapacityException\\u2014AWS currently\\\n            \\ does not have enough capacity to fulfill your request.\\n\", title: Errorcode,\n          type: integer}\n        Reason: {description: \"The error description.   \\n\", title: Reason, type: string}\n      title: Result\n      type: object\ninfo:\n  contact: {}\n  description: \"An intelligent feed, also called an external dynamic list, is a list\\\n    \\ that you or third-parties can host on an external web server. You can specify\\\n    \\ the Intelligence Feed as the source or destination of your security rule. The\\\n    \\ NGFW checks the hosted list at hourly or daily intervals, and enforces your\\\n    \\ security rules based on the latest entries on your list, without requiring you\\\n    \\ to make any configuration changes.  \\n\\nFor more information about feeds, see\\\n    \\ [EDL hosting service](https://docs.paloaltonetworks.com/resources/edl-hosting-service.html).\\n\\\n    \\n### Permission Policies\\n\\n| Action                      | Local Firewall Administrator\\\n    \\ | Local Rulestack Administrator | Global Rulestack Administrator|\\n| ---------------------------\\\n    \\ | :--------------------------: | :---------------------------: | :---------------------------:\\\n    \\ |\\n| Create Intelligent Feed     | \u0026#9744;                      | **\u0026#9745;**\\\n    \\                   | **\u0026#9745;**                   |\\n| Delete Intelligent Feed\\\n    \\     | \u0026#9744;                      | **\u0026#9745;**                   | **\u0026#9745;**\\\n    \\                   |                        \\n| Update Intelligent Feed     |\\\n    \\ \u0026#9744;                      | **\u0026#9745;**                   | **\u0026#9745;** \\\n    \\                  |  \\n| Describe Intelligent Feed   | **\u0026#9745;**          \\\n    \\        | **\u0026#9745;**                   | **\u0026#9745;**                   |\\n\"\n  title: Manage Intelligent Feeds\n  version: 1.0.0\nopenapi: 3.0.3\npaths:\n  /v1/config/rulestacks/{rulestackname}/feeds:\n    post:\n      description: 'Create intelligence feed to analyze threat data.\n\n        '\n      operationId: post-v1-config-rulestacks-rulestackname-feeds\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/CreateIntelligentFeedRequest'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/CreateIntelligentFeedResponse'}\n          description: OK\n      summary: Create an IntelligentFeed\n      tags: [ManageIntelligentFeeds]\n  /v1/config/rulestacks/{rulestackname}/feeds/{name}:\n    delete:\n      description: 'Delete the threat intelligence feeds received for a specified\n        rulestack.\n\n        '\n      operationId: delete-v1-config-rulestacks-rulestackname-feeds-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema: {type: string}\n      - description: 'The name of the feed.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/DeleteIntelligentFeedRequest'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/DeleteIntelligentFeedResponse'}\n          description: OK\n      summary: Delete an IntelligentFeed\n      tags: [ManageIntelligentFeeds]\n    get:\n      description: \"Returns the intelligence feed data collected for the specified\\\n        \\ rulestack. \\n\"\n      operationId: get-v1-config-rulestacks-rulestackname-feeds-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema: {type: string}\n      - description: 'The name of the feed.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/DescribeIntelligentFeedRequest'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/DescribeIntelligentFeedResponse'}\n          description: OK\n      summary: Describe an IntelligentFeed\n      tags: [ManageIntelligentFeeds]\n    put:\n      description: 'Update the threat intelligence feeds for a rulestack.\n\n        '\n      operationId: put-v1-config-rulestacks-rulestackname-feeds-name\n      parameters:\n      - description: 'The name of the rulestack.\n\n          '\n        in: path\n        name: rulestackname\n        required: true\n        schema: {type: string}\n      - description: 'The name of the feed.\n\n          '\n        in: path\n        name: name\n        required: true\n        schema: {type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/UpdateIntelligentFeedRequest'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/UpdateIntelligentFeedResponse'}\n          description: OK\n      summary: Update an IntelligentFeed\n      tags: [ManageIntelligentFeeds]\nservers:\n- {url: 'https://api.us-east-1.aws.cloudngfw.paloaltonetworks.com'}\ntags:\n- {name: ManageIntelligentFeeds}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@86bd224794bceef941209fae2a07267bcd08d207/-/blob/static/cloudngfw/aws/spec/api/ManageIntelligentFeeds.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/86bd224794bceef941209fae2a07267bcd08d207/static/cloudngfw/aws/spec/api/ManageIntelligentFeeds.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}