{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainpoint/chainpoint-gateway"
		},
		"file": {
			"name": "chainpoint-gateway-openapi-3.yaml",
			"size": 0,
			"path": "chainpoint-gateway-openapi-3.yaml",
			"byteSize": 13240,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Chainpoint Node'\n  description: 'Documentation for the Chainpoint Node API'\n  version: '2.0.0'\n  license:\n    name: 'Apache 2.0'\n    url: 'https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)'\nservers:\n  - url: 'http://35.231.41.69'\n    description: 'Development server (produces testnet proofs)'\npaths:\n  '/hashes':\n    post:\n      summary: 'Submit one or more hashes for anchoring'\n      operationId: 'submitHashes'\n      requestBody:\n        description: 'An array of hex string hashes to be anchored'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostHashesRequest'\n      responses:\n        '200':\n          description: 'An array of hash object and supporting meta information for that array'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/PostHashesResponse'\n        '409':\n          description: 'There was an invalid argument in the request'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n        - 'Hashes'\n  '/proofs/{proof_id}':\n    get:\n      summary: 'Retrieves a proof by proof_id'\n      operationId: 'getProof'\n      parameters:\n        - name: 'proof_id'\n          in: 'path'\n          required: true\n          description: 'The proof_id of the proof to retrieve'\n          schema:\n            type: 'string'\n            format: 'uuid'\n      responses:\n        '200':\n          description: 'The requested proof object'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/GetProofsBase64Response'\n            'application/vnd.chainpoint.ld+json':\n              schema:\n                $ref: '#/components/schemas/GetProofsJSONResponse'\n            'application/vnd.chainpoint.json+base64':\n              schema:\n                $ref: '#/components/schemas/GetProofsBase64Response'\n        '409':\n          description: 'There was an invalid argument in the request'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            'application/vnd.chainpoint.ld+json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            'application/vnd.chainpoint.json+base64':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n      - 'Proofs'\n  '/proofs':\n    get:\n      summary: 'Retrieves one or more proofs by proofids supplied in header'\n      operationId: 'getProofs'\n      parameters:\n        - name: 'proofids'\n          in: 'header'\n          required: true\n          description: 'Comma separated proof_id list of the proofs to retrieve'\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: 'An array of the requested proof objects'\n          content:\n            'application/json':\n              schema:\n                type: 'array'\n                items:\n                  $ref: '#/components/schemas/GetProofsBase64Response'\n            'application/vnd.chainpoint.ld+json':\n              schema:\n                type: 'array'\n                items:\n                  $ref: '#/components/schemas/GetProofsJSONResponse'\n            'application/vnd.chainpoint.json+base64':\n              schema:\n                type: 'array'\n                items:\n                  $ref: '#/components/schemas/GetProofsBase64Response'\n        '409':\n          description: 'There was an invalid argument in the request'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            'application/vnd.chainpoint.ld+json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n            'application/vnd.chainpoint.json+base64':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n      - 'Proofs'\n  '/verify':\n    post:\n      summary: 'Submit one or more proofs for verification'\n      operationId: 'verifyProofs'\n      requestBody:\n        description: 'Array of one or more proofs to be verified'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostVerifyRequest'\n      responses:\n        '200':\n          description: 'An array of the verification results'\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PostVerifyResponse'\n        '409':\n          description: 'There was an invalid argument in the request'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n      - 'Verify'\n  '/calendar/{tx_id}/data':\n    get:\n      summary: 'Retrieves the the data embedded in a calendar transaction'\n      operationId: 'getCalendarTxData'\n      parameters:\n        - name: 'tx_id'\n          in: 'path'\n          required: true\n          description: 'The calendar transaction id from which to retrieve the embedded data'\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: 'The data value embedded within the calendar transaction'\n          content:\n            'application/json':\n              schema:\n                type: 'string'\n                example: 'f18bf0968b224f73528d99cc83ca9e79d467f34875e85f36e2c1f074ff2dc657'\n        '404':\n          description: 'The requested transaction was not found'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: 'There was an invalid argument in the request'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n      - 'Calendar'\n  '/config':\n    get:\n      summary: 'Retrieves some basic information for the Node'\n      operationId: 'getNodeConfig'\n      responses:\n        '200':\n          description: 'Basic information about the Node and it''s environment'\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/GetConfigResponse'\n      tags:\n      - 'Config'\ncomponents:\n  schemas:\n    PostHashesRequest:\n      type: 'object'\n      properties:\n        hashes:\n          type: 'array'\n          items:\n            type: 'string'\n            example: '1957db7fe23e4be1740ddeb941ddda7ae0a6b782e536a9e00b5aa82db1e84547'\n            pattern: '^([a-fA-F0-9]{2}){20,64}$'\n            minLength: 40\n            maxLength: 128\n    PostHashesResponse:\n      type: 'object'\n      properties:\n        meta:\n         type: 'object'\n         properties:\n          submitted_at:\n            type: 'string'\n            format: 'date-time'\n            example: '2017-05-02T15:16:44Z'\n          processing_hints:\n            type: 'object'\n            properties:\n              cal:\n                type: 'string'\n                format: 'date-time'\n                example: '2017-05-02T15:17:44Z'\n              btc:\n                type: 'string'\n                format: 'date-time'\n                example: '2017-05-02T16:17:44Z'\n        hashes:\n         type: 'array'\n         items:\n          type: 'object'\n          properties:\n            proof_id:\n              type: 'string'\n              example: '5a001650-2f4a-11e7-ad22-37b426116bc4'\n            hash:\n              type: 'string'\n              example: '11cd8a380e8d5fd3ac47c1f880390341d40b11485e8ae946d8fa3d466f23fe89'\n    GetProofsJSONResponse:\n      type: 'object'\n      properties:\n        proof_id:\n          type: 'string'\n          example: '577c6c90-78d5-11e9-9c57-010a193d9f8c'\n        proof:\n          type: 'object'\n          example:\n            '@context': 'https://w3id.org/chainpoint/v3'\n            type: 'Chainpoint'\n            hash: '11cd8a380e8d5fd3ac47c1f880390341d40b11485e8ae946d8fa3d466f23fe89'\n            proof_id: '577c6c90-78d5-11e9-9c57-010a193d9f8c'\n            hash_received: '2019-05-17T18:55:30Z'\n            branches:\n              - label: 'cal_anchor_branch'\n                ops:\n                  - l: 'node_id:577c6c90-78d5-11e9-9c57-010a193d9f8c'\n                  - op: 'sha-256'\n                  - l: 'core_id:5a22fb80-78d5-11e9-8186-01d1f712eccc'\n                  - op: 'sha-256'\n                  - l: 'nistv2:1558119240000:eb591780782f746fda5e7ac8011064fda657ae451bd1ae6b71e2f5d7e24e9d49bdc25db6d901ccf8736bbf135c451d1edc9c6065b577d69f3fd9be6a1a8d0763'\n                  - op: 'sha-256'\n                  - l: '1766c5a6c10cf8ae5cce76c6d89cb9bc8696a2acf8e7ed4dbe05a71802cae38a'\n                  - op: 'sha-256'\n                  - anchors:\n                      - type: 'cal'\n                        anchor_id: 'b220c0443b5f8b1394a38a102892590b4c21d8ad1382cd9e4d59b9834f6a769f'\n                        uris:\n                          - 'http://35.245.9.90/calendar/b220c0443b5f8b1394a38a102892590b4c21d8ad1382cd9e4d59b9834f6a769f/data'\n        anchors_complete:\n          type: 'array'\n          items:\n            type: 'string'\n            example: 'cal'\n    GetProofsBase64Response:\n      type: 'object'\n      properties:\n        proof_id:\n          type: 'string'\n          example: '577c6c90-78d5-11e9-9c57-010a193d9f8c'\n        proof:\n          type: 'string'\n          example: 'eJyNk79u1EAQh1+Gksvt7P91dRKvQJXmNDszy1k67JPtBCgDDW0KOpqQoAREg4QoeY97G+y7S4AAUrbzrr5vfyP/9u3NgtpmkJfDj9UwbPpqPn9haj5qu2dzWmHdbNq6Gean5mp4tZHPT+62rlbYr7YLAOKIJiqJ7AobJBsISozKJGUssFUZwEYnESVZz7GgYet90aZITF8mzbLmZdOybB+5EMhTUrMw6mYAkmaJXJgpUAjJcCqRvu+Q/iQ/r4dB9uQSh29aQZqpkQpPIVbOVUYd3+mp7SY9al1y/F0fIfpRz1ACaCH6Sz+R/9bb45vcYUMr6c9ff1xjlvVXwvVy2mq75f7sst30788u1tvHu5w1Vw+Z8exDu7nuVzjTzu/gXYoJfsAE9+F3Td0Pp7oC5yJA0laNq5LsEoSoQtQlWF8YnQSkqACUt+OndwHFOsgMKD4HEF0cB9FWEtuUmbTj7DkpICoxGJ9zAeNoZBiEKZFX3uVxXvapmMIpi0fAyCp4cz/lAoL35NATqFGH4ogkeBorkyinTNEnjxrHMwnClrMohwGi0oRiIt4XJqO10irezm1MqKC6bXk++lXvqe3V+OeqA3F20W0XQRBJMhoxbABRUzBG5zFkZBNztihZNEDBWGL23hvtQhFO1hSXAvwR53rfif78ze4dXY6XfTrUpObrw7VXJ13dn2+P/hdxPlLSMHbzAzCfqvoTAAQ82A=='\n        anchors_complete:\n          type: 'array'\n          items:\n            type: 'string'\n            example: 'cal'\n    PostVerifyRequest:\n      type: 'object'\n      properties:\n        proofs:\n          type: 'array'\n          items:\n            type: 'string'\n            example: 'eJyNk79u1EAQh1+Gksvt7P91dRKvQJXmNDszy1k67JPtBCgDDW0KOpqQoAREg4QoeY97G+y7S4AAUrbzrr5vfyP/9u3NgtpmkJfDj9UwbPpqPn9haj5qu2dzWmHdbNq6Gean5mp4tZHPT+62rlbYr7YLAOKIJiqJ7AobJBsISozKJGUssFUZwEYnESVZz7GgYet90aZITF8mzbLmZdOybB+5EMhTUrMw6mYAkmaJXJgpUAjJcCqRvu+Q/iQ/r4dB9uQSh29aQZqpkQpPIVbOVUYd3+mp7SY9al1y/F0fIfpRz1ACaCH6Sz+R/9bb45vcYUMr6c9ff1xjlvVXwvVy2mq75f7sst30788u1tvHu5w1Vw+Z8exDu7nuVzjTzu/gXYoJfsAE9+F3Td0Pp7oC5yJA0laNq5LsEoSoQtQlWF8YnQSkqACUt+OndwHFOsgMKD4HEF0cB9FWEtuUmbTj7DkpICoxGJ9zAeNoZBiEKZFX3uVxXvapmMIpi0fAyCp4cz/lAoL35NATqFGH4ogkeBorkyinTNEnjxrHMwnClrMohwGi0oRiIt4XJqO10irezm1MqKC6bXk++lXvqe3V+OeqA3F20W0XQRBJMhoxbABRUzBG5zFkZBNztihZNEDBWGL23hvtQhFO1hSXAvwR53rfif78ze4dXY6XfTrUpObrw7VXJ13dn2+P/hdxPlLSMHbzAzCfqvoTAAQ82A=='\n          minItems: 1\n          maxItems: 1000\n    PostVerifyResponse:\n      type: 'object'\n      properties:\n        proof_index:\n          type: 'integer'\n          example: 0\n        hash:\n          type: 'string'\n          example: '11cd8a380e8d5fd3ac47c1f880390341d40b11485e8ae946d8fa3d466f23fe89'\n        proof_id:\n          type: 'string'\n          example: '577c6c90-78d5-11e9-9c57-010a193d9f8c'\n        hash_received:\n          type: 'string'\n          format: 'date-time'\n          example: '2019-05-17T18:55:30Z'\n        anchors:\n          type: 'array'\n          items:\n            type: 'object'\n            properties:\n              branch:\n                type: 'string'\n                example: 'cal_anchor_branch'\n              type:\n                type: 'string'\n                example: 'cal'\n              valid:\n                type: 'boolean'\n                example: true\n        status:\n          type: 'string'\n          example: 'verified'\n    GetConfigResponse:\n      type: 'object'\n      properties:\n        version:\n          type: 'string'\n          example: '2.0.0'\n        time:\n          type: 'string'\n          format: 'date-time'\n          example: '2019-05-17T19:53:49.140Z'\n    ErrorResponse:\n      type: 'object'\n      properties:\n        code:\n          type: 'string'\n        message:\n          type: 'string'\ntags:\n  - name: 'Hashes'\n    description: 'Your hashes to be anchored'\n  - name: 'Proofs'\n    description: 'Your Chainpoint proofs created for each of your hashes'\n  - name: 'Verify'\n    description: 'Verification process for your proofs'\n  - name: 'Calendar'\n    description: 'Chainpoint calendar transaction data'\n  - name: 'Config'\n    description: 'Configuration information about the Node'\nexternalDocs:\n  description: 'Find out more about Chainpoint'\n  url: 'https://chainpoint.org'\n",
			"canonicalURL": "/github.com/chainpoint/chainpoint-gateway@87a35270802fa2ae8555bd17ea923831cc173c6e/-/blob/chainpoint-gateway-openapi-3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/chainpoint/chainpoint-gateway/blob/87a35270802fa2ae8555bd17ea923831cc173c6e/chainpoint-gateway-openapi-3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}