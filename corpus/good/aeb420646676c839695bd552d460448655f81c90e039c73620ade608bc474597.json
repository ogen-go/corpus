{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/awslabs/aws-perspective"
		},
		"file": {
			"name": "PerspectiveServerAPI-Prod-oas30-apigateway.yaml",
			"size": 0,
			"path": "source/backend/functions/search/docs/PerspectiveServerAPI-Prod-oas30-apigateway.yaml",
			"byteSize": 6523,
			"content": "openapi: \"3.0.1\"\ninfo:\n  title: \"PerspectiveServerAPI\"\n  description: \"The server zoomAPI\"\n  version: \"2020-06-18T15:29:13Z\"\nservers:\n- url: \"https://XXXXXXXXX.execute-api.eu-west-1.amazonaws.com/{basePath}\"\n  variables:\n    basePath:\n      default: \"/Prod\"\npaths:\n  /search:\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content: {}\n      security:\n      - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:XXXXXXXXXXXX:function:aws-perspective-XXXXXXXXXXXX-ElasticsearchFunction-1T21J2PZNSDAV/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,POST,PUT,DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,POST,PUT,DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"never\"\n        type: \"mock\"\n  /resources:\n    get:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content: {}\n      security:\n      - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:XXXXXXXXXXXX:function:aws-perspective-XXXXXXXXXXXX-eu-we-GremlinFunction-1NCNJOHRBDERH/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,POST,PUT,DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\n   \\\"command\\\" : \\\"$input.params('command')\\\",\\n \\\n            \\  \\\"data\\\":{\\n        \\\"id\\\": \\\"$input.params('id')\\\",\\n        \\\"resourceType\\\"\\\n            : \\\"$input.params('resourceType')\\\"\\n     }\\n}\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        type: \"aws_proxy\"\n    post:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content: {}\n      security:\n      - sigv4: []\n      x-amazon-apigateway-integration:\n        uri: \"arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:XXXXXXXXXXXX:function:aws-perspective-XXXXXXXXXXXX-eu-we-GremlinFunction-1NCNJOHRBDERH/invocations\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,POST,PUT,DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        passthroughBehavior: \"when_no_match\"\n        httpMethod: \"POST\"\n        type: \"aws_proxy\"\n    options:\n      responses:\n        200:\n          description: \"200 response\"\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: \"string\"\n            Access-Control-Allow-Headers:\n              schema:\n                type: \"string\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Empty\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Methods: \"'GET,POST,PUT,DELETE,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'\"\n              method.response.header.Access-Control-Allow-Origin: \"'*'\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"never\"\n        type: \"mock\"\ncomponents:\n  schemas:\n    Empty:\n      title: \"Empty Schema\"\n      type: \"object\"\n  securitySchemes:\n    sigv4:\n      type: \"apiKey\"\n      name: \"Authorization\"\n      in: \"header\"\n      x-amazon-apigateway-authtype: \"awsSigv4\"\n",
			"canonicalURL": "/github.com/awslabs/aws-perspective@0b3d188d0d2ffdf1ed118c667aba6705c6206122/-/blob/source/backend/functions/search/docs/PerspectiveServerAPI-Prod-oas30-apigateway.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/awslabs/aws-perspective/blob/0b3d188d0d2ffdf1ed118c667aba6705c6206122/source/backend/functions/search/docs/PerspectiveServerAPI-Prod-oas30-apigateway.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}