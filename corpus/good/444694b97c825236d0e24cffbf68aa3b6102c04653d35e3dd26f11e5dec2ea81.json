{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/smenateam/assignments"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "backend/api.yml",
			"byteSize": 5495,
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Printer API\n  description: API для сервиса печати чеков\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:8000/\n    description: Dev\n\ntags:\n  - name: erp\n    description: Методы API для ERP\n  - name: app\n    description: Методы API для приложения\n\npaths:\n  /create_checks/:\n    post:\n      tags:\n        - erp\n\n      summary: Создание чеков для заказа\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Order'\n\n      responses:\n        '200':\n          description: Чеки успешно созданы\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OkResponse'\n              example:\n                ok: Чеки успешно созданы\n        '400':\n          description: |\n            При создании чеков произошла одна из ошибок:\n            1. Для данного заказа уже созданы чеки\n            2. Для данной точки не настроено ни одного принтера\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /new_checks/:\n    get:\n      tags:\n        - app\n\n      summary: Список доступных чеков для печати\n\n      parameters:\n        - $ref: '#/components/parameters/APIKey'\n\n      responses:\n        '200':\n          description: Список чеков\n          content:\n            application/json:\n              schema:\n                properties:\n                  checks:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Check'\n        '401':\n          description: Не существует принтера с таким api_key\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                error: Ошибка авторизации\n\n  /check/:\n    get:\n      tags:\n        - app\n\n      summary: PDF-файл чека\n\n      parameters:\n        - $ref: '#/components/parameters/APIKey'\n        - name: check_id\n          in: query\n          required: true\n          description: ID чека\n          schema:\n            type: integer\n\n      responses:\n        '200':\n          description: PDF-файл чека\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n        '401':\n          description: Не существует принтера с таким api_key\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                error: Ошибка авторизации\n        '400':\n          description: |\n            При создании чеков произошла одна из ошибок:\n            1. Данного чека не существует\n            2. Для данного чека не сгенерирован PDF-файл\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\ncomponents:\n  parameters:\n    APIKey:\n      name: api_key\n      in: query\n      required: true\n      description: Ключ доступа к API\n      schema:\n        type: string\n\n  schemas:\n    Order:\n      properties:\n        id:\n          type: integer\n          description: ID заказа\n        items:\n          type: array\n          description: Список позиций\n          items:\n            $ref: '#/components/schemas/Item'\n        price:\n          type: integer\n          description: Стоимость\n        address:\n          type: string\n          description: Адрес доставки\n        client:\n          type: object\n          description: Информация о клиенте\n          $ref: '#/components/schemas/Client'\n        point_id:\n          type: string\n          description: Точка на которой готовится заказ\n      example:\n        id: 123456\n        price: 780\n        items:\n          - name: Вкусная пицца\n            quantity: 2\n            unit_price: 250\n          - name: Не менее вкусные роллы\n            quantity: 1\n            unit_price: 280\n        address: г. Уфа, ул. Ленина, д. 42\n        client:\n          name: Иван\n          phone: 9173332222\n        point_id: 1\n\n    Item:\n      properties:\n        name:\n          type: string\n          description: Название\n        quantity:\n          type: integer\n          description: Количество\n        unit_price:\n          type: integer\n          description: Цена за единицу\n\n    Client:\n      properties:\n        name:\n          type: string\n          description: Имя клиента\n        phone:\n          type: string\n          description: Номер телефона\n\n    Check:\n      properties:\n        id:\n          type: integer\n          description: ID чека\n\n    OkResponse:\n      properties:\n        ok:\n          type: string\n\n    ErrorResponse:\n      properties:\n        error:\n          type: string\n",
			"canonicalURL": "/github.com/smenateam/assignments@dd8b5489810bcf94bbc67699dcba877559f97ca8/-/blob/backend/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/smenateam/assignments/blob/dd8b5489810bcf94bbc67699dcba877559f97ca8/backend/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}