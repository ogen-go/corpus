{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/konveyor/tackle-diva"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest-server/src/diva_server/spec/openapi.yaml",
			"byteSize": 11337,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: \"Tackle-DiVA (Data-intensive Validity Analyzer)\"\n  description: \"Data-centric application code analysis that import a set of application codes and provides database/transaction analysis results.\"\n  version: 1.0.0\n  license:\n    name: \"Apache Public License 2.0\"\n    url: \"https://github.com/konveyor/tackle-diva/blob/main/LICENSE\"\n\ntags:\n  - name: General\n    description: General operations\n  - name: Analysis\n    description: Code analysis of applications\n  - name: Database\n    description: Database information of an app\n  - name: Transaction\n    description: Transaction information an app\n\n# to be changed to valid public endpoints\nservers:\n  - url: /\n    description: Development server\n\npaths:\n  /healthz:\n    get:\n      tags:\n        - General\n      summary: Health check\n      description: Health check. It returns 200 if it's working.\n      operationId: diva_server.health_check\n      responses:\n        \"200\":\n          description: This REST endpoint is working.\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Status\"\n              example:\n                status_code: 0\n                detail: Server is working\n                version: 0.0.0\n\n  /apps:\n    post:\n      tags:\n        - Analysis\n      summary: \"Request code analysis for an application\"\n      description: |-\n        Request data-centric code analysis for specified application.\n        Currently URL for a Git repository is allowed as application source code.\n        If successful, new resource for the analysis result will be created and its URL will be returned.\n        If failed, a Bad Request error (400) will be returned with its reason.\n      operationId: diva_server.new_app\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/NewApp\"\n            example:\n              id: day_trader\n              name: Day Trader (WAS)\n              source:\n                github_url: https://github.com/WASdev/sample.daytrader7.git\n      responses:\n        \"201\":\n          description: Analysis is successfully completed and results are generated.\n        \"400\":\n          description: Analysis failed.\n  /apps/{id}:\n    get:\n      tags:\n        - Analysis\n      summary: \"Query status of application code analysis\"\n      description: |-\n        Get an overview and status of the application that was analyzed.\n        The result will be given in JSON format.\n      operationId: diva_server.get_app\n      parameters:\n        - name: id\n          in: path\n          description: Target application ID.\n          required: true\n          schema:\n            type: string\n            example: day_trader\n      responses:\n        200:\n          description: \"Successful operation\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/AppStatus\"\n        404:\n          description: \"Application ID not found.\"\n\n  /apps/{id}/database:\n    get:\n      tags:\n        - Database\n      summary: Get a list of database tables for an app\n      description: |-\n        Get a list of databases of an application that was analyzed before.\n        The result will be given in JSON format.\n      operationId: diva_server.get_database\n      parameters:\n        - name: id\n          in: path\n          description: Target application ID.\n          required: true\n          schema:\n            type: string\n            example: day_trader\n      responses:\n        200:\n          description: \"Successful operation\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Database\"\n        404:\n          description: \"Application ID not found.\"\n\n  /apps/{id}/transaction:\n    get:\n      tags:\n        - Transaction\n      summary: \"Get a list of transactions for an app\"\n      description: |-\n        Get a list of transactions of an application that was analyzed before.\n        The result will be given in JSON format.\n      operationId: diva_server.get_transaction\n      parameters:\n        - name: id\n          in: path\n          description: Target application ID.\n          required: true\n          schema:\n            type: string\n            example: day_trader\n      responses:\n        200:\n          description: \"Successful operation\"\n          content:\n            \"application/json\":\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        404:\n          description: \"Application ID not found.\"\n\n  # /analysis/{applicationName}:\n  #   post:\n  #     tags:\n  #       - \"analysis\"\n  #     summary: \"รง\"\n  #     parameters:\n  #       - name: \"applicationName\"\n  #         in: \"path\"\n  #         description: \"Target application name\"\n  #         required: true\n  #         schema:\n  #           type: string\n  #     requestBody:\n  #       description: \"GitHub URL of source application codes.\"\n  #       required: true\n  #       content:\n  #         \"application/json\":\n  #           schema:\n  #             $ref: \"#/components/schemas/GithubURL\"\n  #     responses:\n  #       200:\n  #         description: \"Successful operation\"\n  #       400:\n  #         description: \"Invalid {applicationName}\"\n  #       405:\n  #         description: \"Validation exception\"\n  #   put:\n  #     tags:\n  #       - \"analysis\"\n  #     summary: \"Update an existing application code analysis result.\"\n  #     parameters:\n  #       - name: \"applicationName\"\n  #         in: \"path\"\n  #         description: \"Target application name\"\n  #         required: true\n  #         schema:\n  #           type: \"string\"\n  #     requestBody:\n  #       description: \"GitHub URL of source application codes.\"\n  #       required: true\n  #       content:\n  #         \"application/json\":\n  #           schema:\n  #             $ref: \"#/components/schemas/GithubURL\"\n  #     responses:\n  #       200:\n  #         description: \"Successful operation\"\n  #       400:\n  #         description: \"Invalid {applicationName}\"\n  #       405:\n  #         description: \"Validation exception\"\n  #   get:\n  #     tags:\n  #       - \"analysis\"\n  #     summary: \"Query application analysis status\"\n  #     parameters:\n  #       - name: \"applicationName\"\n  #         in: \"path\"\n  #         description: \"Target application name.\"\n  #         required: true\n  #         schema:\n  #           type: \"string\"\n  #     responses:\n  #       200:\n  #         description: \"Successful operation\"\n  #         content:\n  #           \"application/json\":\n  #             schema:\n  #               $ref: \"#/components/schemas/AppStatus\"\n  #       400:\n  #         description: \"Invalid {applicationName}\"\n  #       405:\n  #         description: \"Validation exception\"\n  #   delete:\n  #     tags:\n  #       - \"analysis\"\n  #     summary: \"Delete application analysis results\"\n  #     description: \"Delete application analysis results\"\n  #     parameters:\n  #       - name: \"applicationName\"\n  #         in: \"path\"\n  #         description: \"Target application name\"\n  #         required: true\n  #         schema:\n  #           type: \"string\"\n  #     responses:\n  #       200:\n  #         description: \"Successful operation\"\n  #         content:\n  #           \"application/json\":\n  #             schema:\n  #               $ref: \"#/components/schemas/AppStatus\"\n  #       400:\n  #         description: \"Invalid {applicationName}\"\n  #       405:\n  #         description: \"Validation exception\"\n\ncomponents:\n  schemas:\n    Status:\n      type: \"object\"\n      properties:\n        status_code:\n          type: integer\n          description: |-\n            Server status code. 0 means normal status and positive number means an error.\n          minimum: 0\n        detail:\n          type: string\n          description: \"Human readable text of server status.\"\n        version:\n          type: string\n          description: |-\n            Server version text, in format of `\u003cmajor\u003e.\u003cminor\u003e.\u003cpatch\u003e`.\n          format: version\n      required:\n        - status_code\n        - detail\n        - version\n      additionalProperties: false\n\n    NewApp:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique key for identifying each app.\n        name:\n          type: string\n          description: Display name for the app, which does not need to be unique.\n        source:\n          $ref: \"#/components/schemas/AppSource\"\n      required:\n        - id\n        - source\n\n    AppStatus:\n      type: \"object\"\n      properties:\n        id:\n          type: string\n          description: Unique key for identifying each app.\n        name:\n          type: \"string\"\n          example: \"daytrader\"\n        source:\n          $ref: \"#/components/schemas/AppSource\"\n        status:\n          type: \"string\"\n          enum:\n            - \"available\"\n            - \"pending\"\n            - \"none\"\n          default: \"available\"\n      required:\n        - id\n        - source\n        - status\n      example:\n        id: day_trader\n        name: Day Trader (WAS)\n        source:\n          github_url: https://github.com/WASdev/sample.daytrader7.git\n        status: available\n\n    Database:\n      type: \"object\"\n      additionalProperties:\n        type: array\n        items:\n          type: string\n\n    Transaction:\n      type: array\n      items:\n        type: object\n        properties:\n          entry:\n            $ref: \"#/components/schemas/Entry\"\n          http-param:\n            $ref: \"#/components/schemas/HttpParam\"\n          transactions:\n            type: \"array\"\n            items:\n              $ref: \"#/components/schemas/Tx\"\n        required:\n          - \"entry\"\n          - \"transactions\"\n\n    Entry:\n      type: \"object\"\n      required:\n        - \"methods\"\n      properties:\n        methods:\n          type: \"array\"\n          items:\n            type: \"string\"\n\n    HttpParam:\n      type: \"object\"\n      required:\n        - \"action\"\n      properties:\n        action:\n          type: \"array\"\n          items:\n            type: \"string\"\n\n    Tx:\n      type: \"object\"\n      required:\n        - \"txid\"\n        - \"transaction\"\n      properties:\n        txid:\n          type: \"integer\"\n        transaction:\n          type: \"array\"\n          items:\n            $ref: \"#/components/schemas/Operation\"\n\n    Operation:\n      type: \"object\"\n      required:\n        - \"stacktrace\"\n        - \"sql\"\n      properties:\n        stacktrace:\n          $ref: \"#/components/schemas/StackTrace\"\n        sql:\n          type: \"string\"\n\n    StackTrace:\n      type: \"array\"\n      items:\n        $ref: \"#/components/schemas/Stack\"\n\n    Stack:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"file\"\n        - \"position\"\n      properties:\n        method:\n          type: \"string\"\n        file:\n          type: \"string\"\n        position:\n          type: \"string\"\n\n    AppSource:\n      oneOf:\n        - $ref: \"#/components/schemas/GithubURL\"\n      description: application source\n\n    GithubURL:\n      type: \"object\"\n      description: Application source info that points to GitHub repository.\n      required:\n        - github_url\n      properties:\n        github_url:\n          type: string\n          format: uri\n      example: https://github.com/WASdev/sample.daytrader7.git\n",
			"canonicalURL": "/github.com/konveyor/tackle-diva@2231bc56423b21c50fe4c5bd3f04030d88408fe5/-/blob/rest-server/src/diva_server/spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/konveyor/tackle-diva/blob/2231bc56423b21c50fe4c5bd3f04030d88408fe5/rest-server/src/diva_server/spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}