{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudavail/snippets"
		},
		"file": {
			"name": "api_gateway_http_with_alb.yaml",
			"size": 0,
			"path": "aws/api_gateway/api_gateway_http_with_alb/api_gateway_http_with_alb.yaml",
			"byteSize": 4081,
			"content": "---\n\nAWSTemplateFormatVersion: 2010-09-09\n\nDescription: API Gateway\n\nParameters: {}\n\nMappings: {}\n\nResources:\n\n  VPC:\n    Type: AWS::EC2::VPC\n    Properties:\n      CidrBlock: 10.0.0.0/24\n      EnableDnsHostnames: true\n      EnableDnsSupport: true\n\n  InternetGateway:\n    Type: AWS::EC2::InternetGateway\n\n  PublicInternetRoute:\n    Type: AWS::EC2::Route\n    Properties:\n      DestinationCidrBlock: 0.0.0.0/0\n      GatewayId: !Ref InternetGateway\n      RouteTableId: !Ref PublicInternetRouteTable\n\n  VPCGatewayAttachment:\n    Type: AWS::EC2::VPCGatewayAttachment\n    Properties:\n      InternetGatewayId: !Ref InternetGateway\n      VpcId: !Ref VPC\n\n  PublicInternetRouteTable:\n    Type: AWS::EC2::RouteTable\n    Properties:\n      VpcId: !Ref VPC\n\n  PublicSubnet01:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 0, !GetAZs '' ]\n      CidrBlock: 10.0.0.0/25\n      VpcId: !Ref VPC\n\n  PublicSubnet02:\n    Type: AWS::EC2::Subnet\n    Properties:\n      AvailabilityZone: !Select [ 1, !GetAZs '' ]\n      CidrBlock: 10.0.0.128/25\n      VpcId: !Ref VPC\n\n  PublicSubnet01RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PublicInternetRouteTable\n      SubnetId: !Ref PublicSubnet01\n\n  PublicSubnet02RouteTableAssociation:\n    Type: AWS::EC2::SubnetRouteTableAssociation\n    Properties:\n      RouteTableId: !Ref PublicInternetRouteTable\n      SubnetId: !Ref PublicSubnet02\n\n  HttpApiVpcLinkSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Load Balancer Security Group\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n      VpcId: !Ref VPC\n\n  # an AWS::ApiGatewayV2::VpcLink type resource is required for accessing any \"Private resources\"\n  HttpApiVpcLink:\n    Type: AWS::ApiGatewayV2::VpcLink\n    Properties:\n      Name: http-api-vpc-link\n      SecurityGroupIds:\n        - !Ref HttpApiVpcLinkSecurityGroup\n      SubnetIds:\n        - !Ref PublicSubnet01\n        - !Ref PublicSubnet02\n\n  HttpApiGatewayRestApi:\n    Type: AWS::ApiGatewayV2::Api\n    Properties:\n      Body:\n        openapi: 3.0.1\n        info:\n          title: http-api-gateway-with-alb\n          version: 1.0\n        # servers:\n        # - url: \"https://88pnpih3s9.execute-api.us-west-2.amazonaws.com/{basePath}\"\n        #   variables:\n        #     basePath:\n        #       default: \"\"\n        paths:\n          /:\n            x-amazon-apigateway-any-method:\n              responses:\n                default:\n                  description: \"Default response for ANY /\"\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: 1.0\n                connectionId: !Ref HttpApiVpcLink\n                type: http_proxy\n                httpMethod: ANY\n                uri: !Ref LoadBalancerHTTPListener\n                connectionType: VPC_LINK\n        x-amazon-apigateway-importexport-version: 1.0\n\n\n  HttpApiApiGatewayDefaultStage:\n    Type: AWS::ApiGatewayV2::Stage\n    Properties:\n      AutoDeploy: true\n      ApiId:\n        Ref: HttpApiGatewayRestApi\n      StageName: $default\n\n  LoadBalancerSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: Load Balancer Security Group\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n      VpcId: !Ref VPC\n\n  LoadBalancer:\n    Type: AWS::ElasticLoadBalancingV2::LoadBalancer\n    Properties:\n      Scheme: internal\n      SecurityGroups:\n        - !Ref LoadBalancerSecurityGroup\n      Subnets:\n        - !Ref PublicSubnet01\n        - !Ref PublicSubnet02\n      Type: application\n\n  LoadBalancerHTTPListener:\n    Type: AWS::ElasticLoadBalancingV2::Listener\n    Properties:\n      LoadBalancerArn: !Ref LoadBalancer\n      Protocol: HTTP\n      Port: 80\n      DefaultActions:\n        - Type: fixed-response\n          FixedResponseConfig:\n            ContentType: text/plain\n            MessageBody: \"Hello from CloudAvail!\"\n            StatusCode: 200\n",
			"canonicalURL": "/github.com/cloudavail/snippets@f705a76b3fa123abb4a9222047e1bf4e470fcecd/-/blob/aws/api_gateway/api_gateway_http_with_alb/api_gateway_http_with_alb.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudavail/snippets/blob/f705a76b3fa123abb4a9222047e1bf4e470fcecd/aws/api_gateway/api_gateway_http_with_alb/api_gateway_http_with_alb.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}