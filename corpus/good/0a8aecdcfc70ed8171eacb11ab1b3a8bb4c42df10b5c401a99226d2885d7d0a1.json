{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ebi-uniprot/openapi-spring-maven-plugin"
		},
		"file": {
			"name": "pet-resource.yaml",
			"size": 0,
			"path": "src/test/resources/expected-output/pet-resource.yaml",
			"byteSize": 5665,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n  - url: localhost\n    description: ' Default server url'\npaths:\n  /pet/{petId}:\n    get:\n      summary: Find pet by ID\n      description: Returns a pet when 0 \u003c ID \u003c= 10.  ID \u003e 10 or nonintegers will simulate\n        API error conditions\n      operationId: getPetById\n      parameters:\n      - name: petId\n        in: path\n        description: ID of pet that needs to be fetched\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        default:\n          description: The pet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Pet not found\n  /pet:\n    put:\n      summary: Update an existing pet\n      operationId: updatePet\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      responses:\n        400:\n          description: Invalid ID supplied\n        404:\n          description: Pet not found\n        405:\n          description: Validation exception\n    post:\n      summary: Add a new pet to the store\n      operationId: addPet\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n        required: true\n      responses:\n        405:\n          description: Invalid input\n  /pet/bodynoannotation:\n    post:\n      summary: Add a new pet to the store no annotation\n      operationId: addPetNoAnnotation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n        405:\n          description: Invalid input\n  /pet/bodyid:\n    post:\n      summary: Add a new pet to the store passing an integer with generic parameter\n        annotation\n      operationId: addPetByInteger\n      requestBody:\n        description: Pet object that needs to be added to the store\n        content:\n          application/json:\n            schema:\n              type: integer\n              format: int32\n          application/xml:\n            schema:\n              type: integer\n              format: int32\n        required: true\n      responses:\n        405:\n          description: Invalid input\n  /pet/bodyidnoannotation:\n    post:\n      summary: Add a new pet to the store passing an integer without parameter annotation\n      operationId: addPetByIntegerNoAnnotation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: integer\n              format: int32\n          application/xml:\n            schema:\n              type: integer\n              format: int32\n      responses:\n        405:\n          description: Invalid input\n  /pet/findByStatus:\n    get:\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma seperated strings\n      operationId: findPetsByStatus\n      parameters:\n      - name: status\n        in: query\n        description: Status values that need to be considered for filter\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        400:\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      summary: Finds Pets by tags\n      description: Muliple tags can be provided with comma seperated strings. Use\n        tag1, tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n      - name: tags\n        in: query\n        description: Tags to filter by\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: Pets matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        400:\n          description: Invalid tag value\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Pet:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: '#/components/schemas/Category'\n        name:\n          type: string\n        photoUrls:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            type: string\n            xml:\n              name: photoUrl\n        tags:\n          type: array\n          xml:\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n          - available,pending,sold\n      xml:\n        name: Pet\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n",
			"canonicalURL": "/github.com/ebi-uniprot/openapi-spring-maven-plugin@f6d3c5d3f4ad5e03cbea5461b1fa52a104697dbe/-/blob/src/test/resources/expected-output/pet-resource.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ebi-uniprot/openapi-spring-maven-plugin/blob/f6d3c5d3f4ad5e03cbea5461b1fa52a104697dbe/src/test/resources/expected-output/pet-resource.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}