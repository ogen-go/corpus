{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/drizzleco/salary-database"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "backend/static/swagger.yml",
			"byteSize": 6647,
			"content": "openapi: 3.0.0\ninfo:\n  description: Salary Database\n  version: 1.0.0\n  title: Salary Database\nservers:\n  - url: /\n  - url: /data\n  - url: /table\n  - url: /about\ntags:\n  - name: Index\n    description: Home page\n  - name: Employee Data\n    description: Queries database for employers based on employer fields\n  - name: Table\n    description: Returns table of employees\n  - name: About\n    description: About Salary Database app\npaths:\n  /:\n    get:\n      tags:\n        - Index\n      summary: Directs user to home page\n      responses:\n        '200':\n          description: Success\n  # /data:\n  #   get:\n  #     tags:\n  #       - Employee Data\n  #     summary: Returns all employees in a list\n  #     responses:\n  #       '200':\n  #         description: Success\n  #         schema:\n  #           $ref: '#/components/schemas/final_result'\n  #       '400':\n  #         description: Error\n  #         schema:\n  #           $ref: '#/components/schemas/final_result'\n  /table:\n    get:\n      tags:\n        - Table\n      summary: Returns table of employees\n      parameters:\n        - in: query\n          name: limit\n          type: string\n          required: true\n          description: \u003e-\n            Max number of results to return\n          schema:\n            $ref: '#/components/schemas/limit'\n        - in: query\n          name: offset\n          type: string\n          required: true\n          description: \u003e-\n            Starting point of data\n          schema:\n            $ref: '#/components/schemas/offset'\n        - in: query\n          name: sort\n          type: string\n          required: true\n          description: \u003e-\n            Column to sort data by. Default: prevailing_wage\n          schema:\n            $ref: '#/components/schemas/sort'\n        - in: query\n          name: order\n          type: string\n          required: true\n          description: \u003e-\n            How to order column being sorted(asc or desc). Default: asc\n          schema:\n            $ref: '#/components/schemas/order'\n      responses:\n        '200':\n          description: \u003e-\n            Matched salary data in form of dict with keys:  \n                Total - total number of matched results\n                Rows - matched salary data in current page as a list\n          schema:\n            $ref: '#/components/schemas/table_result'\n  /about:\n    get:\n      tags:\n        - About\n      summary: About the Salary Database API\n      responses:\n        '200':\n          description: Success\n  /data:\n    get:\n      tags:\n        - Employee Data\n      summary: Fetches data using employer fields and values\n      parameters:\n        - in: query\n          name: field1\n          type: string\n          required: true\n          description: \u003e-\n            Query employee data using employer information fields\n            Ex. employer_name, employer_state, employer_city, prevailing_wage\n          schema:\n            $ref: '#/components/schemas/fields'\n        - in: query\n          name: value1\n          type: string\n          required: true\n          description: \u003e-\n            Value of employer information field\n            Ex. google\n          schema:\n            $ref: '#/components/schemas/values' \n        - in: query\n          name: field2\n          type: string\n          required: false\n          description: \u003e-\n            Ex. employer_name, employer_state, employer_city, prevailing_wage\n          schema:\n            $ref: '#/components/schemas/fields'\n        - in: query\n          name: value2\n          type: string\n          required: false\n          description: \u003e-\n            Ex. California\n          schema:\n            $ref: '#/components/schemas/values' \n        - in: query\n          name: field3\n          type: string\n          required: false\n          description: \u003e-\n            Ex. employer_name, employer_state, employer_city, prevailing_wage\n          schema:\n            $ref: '#/components/schemas/fields'\n        - in: query\n          name: value3\n          type: string\n          required: false\n          description: \u003e-\n            Ex. Anaheim\n          schema:\n            $ref: '#/components/schemas/values' \n        - in: query\n          name: field4\n          type: string\n          required: false\n          description: \u003e-\n            Ex. employer_name, employer_state, employer_city, prevailing_wage\n          schema:\n            $ref: '#/components/schemas/fields'\n        - in: query\n          name: value4\n          type: string\n          required: false\n          description: \u003e-\n            Ex. true\n          schema:\n            $ref: '#/components/schemas/values' \n      responses:\n        '200':\n          description: Success\n          schema:\n            $ref: '#/components/schemas/data'\n        '400':\n          description: Failed. Missing a field or value.\ncomponents:\n  schemas:\n    limit:\n      properties:\n        title:\n          type: string\n          format: string\n    offset:\n      properties:\n        title:\n          type: string\n          format: string\n    sort:\n      properties:\n        title:\n          type: string\n          format: string\n    order:\n      properties:\n        title:\n          type: string\n          format: string\n    fields:\n      properties:\n        field1:\n          type: string\n          format: string\n        field2:\n          type: string\n          format: string\n        field3:\n          type: string\n          format: string\n        field4:\n          type: string\n          format: string\n    values:\n      properties:\n        value1:\n          type: string\n          format: string\n        value2:\n          type: string\n          format: string\n        value3:\n          type: string\n          format: string\n        value4:\n          type: string\n          format: string\n    \n    data:\n      type: object\n      properties:\n        CASE_NUMBER:\n          type: string\n          format: number\n        CASE_STATUS:\n          type: string\n          format: string\n        EMPLOYER_CITY:\n          type: string\n          format: string\n        EMPLOYER_NAME:\n          type: string\n          format: string\n        EMPLOYER_STATE:\n          type: string\n          format: string\n        FULL_TIME_POSITION:\n          type: string\n          format: string\n        JOB_TITLE:\n          type: string\n          format: string\n        PERIOD_OF_EMPLOYMENT_START_DATE:\n          type: string\n          format: number\n        PREVAILING_WAGE_1:\n          type: string\n          format: number\n        VISA_CLASS:\n          type: string\n          format: number\n    \n    table_result:\n      properties:\n        title:\n          type: string\n          format: string\n\n",
			"canonicalURL": "/github.com/drizzleco/salary-database@79d84eb94a07b8b8930c1e8c7c7c41c36bff3c49/-/blob/backend/static/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/drizzleco/salary-database/blob/79d84eb94a07b8b8930c1e8c7c7c41c36bff3c49/backend/static/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}