{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/qarax/qarax"
		},
		"file": {
			"name": "qarax.yml",
			"size": 0,
			"path": "qarax.yml",
			"byteSize": 11654,
			"content": "openapi: 3.0.1\ninfo:\n  title: qarax API\n  version: 0.1.0\n  description: The API for qarax manager\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nexternalDocs:\n  description: Find out more about Qarax\n  url: \"https://github.com/qarax/qarax\"\ntags:\n  - name: Hosts\n  - name: Vms\n  - name: Storage\ncomponents:\n  schemas:\n    StringResponse:\n      properties:\n        response:\n          type: string\n    Host:\n      properties:\n        address:\n          type: string\n        host_user:\n          type: string\n        id:\n          format: uuid\n          type: string\n          readOnly: true\n        name:\n          type: string\n        password:\n          type: string\n          writeOnly: true\n        port:\n          format: int32\n          type: integer\n        status:\n          type: string\n          readOnly: true\n          enum:\n            - up\n            - down\n            - unknown\n            - initializing\n            - installing\n            - installation_failed\n\n    Vm:\n      properties:\n        id:\n          format: uuid\n          type: string\n          readOnly: true\n        name:\n          type: string\n        status:\n          type: string\n          readOnly: true\n          enum:\n            - up\n            - down\n            - unknown\n        host_id:\n          format: uuid\n          type: string\n        vcpu:\n          format: int32\n          type: integer\n        memory:\n          format: int32\n          type: integer\n        ip_address:\n          format: ipv4\n          type: string\n        mac_address:\n          type: string\n        network_mode:\n          type: string\n          enum:\n            - dhcp\n            - static_ip\n        kernel_parameters:\n          type: string\n        kernel:\n          type: string\n\n    Storage:\n      properties:\n        id:\n          format: uuid\n          type: string\n          readOnly: true\n        name:\n          type: string\n        status:\n          type: string\n          readOnly: true\n          enum:\n            - up\n            - down\n            - unknown\n        type:\n          type: string\n          enum:\n            - local\n            - shared\n        config:\n          type: object\n          properties:\n            path:\n              type: string\n            host_id:\n              format: uuid\n              type: string\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n    CreationResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n    HostListResponse:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Host'\n    StorageListResponse:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Storage'\npaths:\n  /hosts:\n    get:\n      operationId: listHosts\n      summary: Get hosts list\n      description: Get hosts list\n      tags:\n        - Hosts\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HostListResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: addHost\n      summary: Create new host\n      description: Create new host\n      tags:\n        - Hosts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Host\"\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreationResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/hosts/{hostId}\":\n    get:\n      operationId: getHost\n      summary: Get host by ID\n      description: \"\"\n      tags:\n        - Hosts\n      parameters:\n        - name: hostId\n          in: path\n          description: ID of host\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Host\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  \"/hosts/{hostId}/install\":\n    post:\n      operationId: installHost\n      summary: Install qarax node on host\n      description: Install and run qarax-node on host\n      tags:\n        - Hosts\n      parameters:\n        - name: hostId\n          in: path\n          description: ID of host\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StringResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/hosts/{hostId}/healthcheck\":\n    post:\n      operationId: healthcheck\n      summary: Healthcehck a host\n      description: Runs healthcheck on a host, currently just ensures gRPC connectivity\n      tags:\n        - Hosts\n      parameters:\n        - name: hostId\n          in: path\n          description: ID of host\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StringResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /vms:\n    get:\n      operationId: listVms\n      summary: Get VM list\n      description: Get VM list\n      tags:\n        - VMs\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Vm\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: addVm\n      summary: Create new VM\n      description: Create new VM\n      tags:\n        - VMs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Vm\"\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreationResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/vms/{vmId}\":\n    get:\n      operationId: getVm\n      summary: Get VM by ID\n      description: \"\"\n      tags:\n        - VMs\n      parameters:\n        - name: vmId\n          in: path\n          description: ID of VN\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vm\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  \"/vms/{vmId}/start\":\n    post:\n      operationId: startVm\n      summary: Start a VM\n      description: Start a VM on an available host\n      tags:\n        - VMs\n      parameters:\n        - name: vmId\n          in: path\n          description: ID of VM\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StringResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/vms/{vmId}/stop\":\n    post:\n      operationId: stopVm\n      summary: Stop a VM\n      description: \"\"\n      tags:\n        - VMs\n      parameters:\n        - name: vmId\n          in: path\n          description: ID of VM\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StringResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /storage:\n    get:\n      operationId: listStorage\n      summary: Get storage list\n      description: Get storage list\n      tags:\n        - Storage\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageListResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: addStorage\n      summary: Create new storage\n      description: Create new storage\n      tags:\n        - Storage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Storage\"\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreationResponse\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/storage/{storageId}\":\n    get:\n      operationId: getStorage\n      summary: Get storage by ID\n      description: \"\"\n      tags:\n        - Storage\n      parameters:\n        - name: storageId\n          in: path\n          description: ID of storage\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Storage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n",
			"canonicalURL": "/github.com/qarax/qarax@2342cbfddbaa31507c8681691f220778455612ba/-/blob/qarax.yml",
			"externalURLs": [
				{
					"url": "https://github.com/qarax/qarax/blob/2342cbfddbaa31507c8681691f220778455612ba/qarax.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}