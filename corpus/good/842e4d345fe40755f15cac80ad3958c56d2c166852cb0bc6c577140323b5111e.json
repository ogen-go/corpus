{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/symanto.net/1.0/openapi.yaml",
			"byteSize": 12782,
			"content": "openapi: 3.0.3\nservers:\n  - url: https://api.symanto.net\ninfo:\n  contact:\n    email: support@symanto.net\n    name: Symanto Support\n    url: https://developers.symanto.net\n  description: We aim to provide the deepest understanding of people through psychology \u0026 AI\n  termsOfService: https://developers.symanto.net/terms-of-service\n  title: Psycholinguistic Text Analytics\n  version: \"1.0\"\n  x-apisguru-categories:\n    - text\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://www.symanto.com/wp-content/uploads/2020/06/symanto.svg\n  x-origin:\n    - format: openapi\n      url: https://api.symanto.net/docs/v1/openapi.json\n      version: \"3.0\"\n  x-providerName: symanto.net\nsecurity:\n  - apiKeyHeader: []\npaths:\n  /communication:\n    post:\n      description: |-\n        Identify the purpose and writing style of a written text.\n\n        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]\n\n        Returned labels:\n        * action-seeking\n        * fact-oriented\n        * information-seeking\n        * self-revealing\n      operationId: communication\n      parameters:\n        - explode: true\n          in: query\n          name: all\n          required: false\n          schema:\n            default: false\n            type: boolean\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PredictionResults\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Communication \u0026 Tonality\n      tags:\n        - Text Analysis\n  /ekman-emotion:\n    post:\n      description: |-\n        Detect the emotions of the text based on Ekman.\n\n        Supported Langauges: [`en`, `de`, `es`]\n\n        Returned labels:\n        * anger\n        * disgust\n        * fear\n        * joy\n        * sadness\n        * surprise\n        * no-emotion\n      operationId: ekman-emotion\n      parameters:\n        - explode: true\n          in: query\n          name: all\n          required: false\n          schema:\n            default: false\n            type: boolean\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PredictionResults\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Emotion Analysis\n      tags:\n        - Text Analysis\n  /emotion:\n    post:\n      description: |-\n        Detect the emotions of the text.\n\n        Supported Langauges: [`en`, `de`, `es`]\n\n        Returned labels:\n        * anger\n        * joy\n        * love\n        * sadness\n        * surprise\n        * uncategorized\n      operationId: emotion\n      parameters:\n        - explode: true\n          in: query\n          name: all\n          required: false\n          schema:\n            default: false\n            type: boolean\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PredictionResults\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Emotion Analysis\n      tags:\n        - Text Analysis\n  /language-detection:\n    post:\n      description: |-\n        Identifies what language a text is written in. Only languages that our API supports can be analyzed.\n\n        Returned labels:\n        * language_code of the detected language\n      operationId: language-detection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LanguageDetectionRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LanguageDetectionResponse\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Language Detection\n      tags:\n        - Text Analysis\n  /personality:\n    post:\n      description: |-\n        Predict the personality trait of author of any written text.\n\n        Supported Languages: [`ar`, `de`, `en`, `es`, `fr`, `it`, `nl`, `pt`, `ru`, `tr`, `zh`]\n\n        Returned labels:\n\n        * emotional\n        * rational\n      operationId: personality\n      parameters:\n        - explode: true\n          in: query\n          name: all\n          required: false\n          schema:\n            default: false\n            type: boolean\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PredictionResults\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Personality Traits\n      tags:\n        - Text Analysis\n  /sentiment:\n    post:\n      description: |-\n        Evaluate the overall tonality of the text.\n\n        Supported Languages: [`en`, `de`, `es`]\n\n        Returned labels:\n        * positive\n        * negative\n      operationId: sentiment\n      parameters:\n        - explode: true\n          in: query\n          name: all\n          required: false\n          schema:\n            default: false\n            type: boolean\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PredictionResults\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidationErrors\"\n          description: Validation Error\n      summary: Sentiment Analysis\n      tags:\n        - Text Analysis\n  /topic-sentiment:\n    post:\n      operationId: topic-sentiment\n      parameters:\n        - description: Provide analysis domain for better extraction (optional)\n          explode: true\n          in: query\n          name: domain\n          required: false\n          schema:\n            enum:\n              - Ecom\n              - Employee\n              - Hotel\n              - Restaurant\n            type: string\n          style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PostRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TopicSentimentResponse\"\n          description: \"\"\n      summary: Extracts topics and sentiments and relates them.\n      tags:\n        - Text Analysis\ncomponents:\n  schemas:\n    LanguageDetection:\n      properties:\n        id:\n          description: id of the text.\n          type: string\n        text:\n          description: the text itself.\n          type: string\n      required:\n        - text\n      type: object\n    LanguageDetectionRequest:\n      items:\n        $ref: \"#/components/schemas/LanguageDetection\"\n      maxItems: 64\n      minItems: 1\n      type: array\n    LanguageDetectionResponse:\n      items:\n        $ref: \"#/components/schemas/LanguagePredicted\"\n      type: array\n    LanguagePredicted:\n      properties:\n        detected_language:\n          description: the detected language_code corresponding to the input text.\n          type: string\n        id:\n          description: id of the post.\n          type: string\n      required:\n        - detected_language\n      title: LanguagePredicted\n      type: object\n    Post:\n      properties:\n        id:\n          description: id of the post.\n          example: \"1\"\n          type: string\n        language:\n          description: language_code of the text.\n          example: en\n          type: string\n        text:\n          description: the text to be analysed.\n          example: I love the service\n          type: string\n      required:\n        - language\n        - text\n      title: Post\n      type: object\n    PostPredicted:\n      properties:\n        id:\n          description: id of the post.\n          type: string\n        predictions:\n          description: the list of predictions.\n          items:\n            $ref: \"#/components/schemas/Prediction\"\n          type: array\n      required:\n        - predictions\n      title: PostPredicted\n      type: object\n    PostRequest:\n      items:\n        $ref: \"#/components/schemas/Post\"\n      maxItems: 32\n      minItems: 1\n      title: Posts\n      type: array\n    Prediction:\n      properties:\n        prediction:\n          description: the predicted label.\n          title: Prediction\n          type: string\n        probability:\n          description: the probability of the predicted label.\n          title: Probability\n          type: number\n      required:\n        - prediction\n        - probability\n      title: Prediction\n      type: object\n    PredictionResults:\n      items:\n        $ref: \"#/components/schemas/PostPredicted\"\n      title: Prediction Results\n      type: array\n    Sentiment:\n      properties:\n        category:\n          type: string\n        end:\n          format: int32\n          type: integer\n        negationTerm:\n          type: string\n        parentCategory:\n          type: string\n        positive:\n          type: boolean\n        scale:\n          format: double\n          type: number\n        start:\n          format: int32\n          type: integer\n        text:\n          type: string\n      type: object\n    Topic:\n      properties:\n        category:\n          type: string\n        end:\n          format: int32\n          type: integer\n        polarity:\n          format: double\n          type: number\n        start:\n          format: int32\n          type: integer\n        text:\n          type: string\n        topic:\n          type: string\n      type: object\n    TopicSentiment:\n      properties:\n        sentence:\n          type: string\n        sentiment:\n          $ref: \"#/components/schemas/Sentiment\"\n        topic:\n          $ref: \"#/components/schemas/Topic\"\n      type: object\n    TopicSentimentOutput:\n      properties:\n        id:\n          type: string\n        language:\n          type: string\n        sentiments:\n          items:\n            $ref: \"#/components/schemas/Sentiment\"\n          type: array\n        text:\n          type: string\n        topicSentiments:\n          items:\n            $ref: \"#/components/schemas/TopicSentiment\"\n          type: array\n        topics:\n          items:\n            $ref: \"#/components/schemas/Topic\"\n          type: array\n      type: object\n    TopicSentimentResponse:\n      items:\n        $ref: \"#/components/schemas/TopicSentimentOutput\"\n      type: array\n    ValidationError:\n      properties:\n        loc:\n          items:\n            type: string\n          title: Location\n          type: array\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n      required:\n        - loc\n        - msg\n        - type\n      title: ValidationError\n      type: object\n    ValidationErrors:\n      properties:\n        detail:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          title: Detail\n          type: array\n      title: ValidationErrors\n      type: object\n  securitySchemes:\n    apiKeyHeader:\n      in: header\n      name: x-api-key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/symanto.net/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/symanto.net/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}