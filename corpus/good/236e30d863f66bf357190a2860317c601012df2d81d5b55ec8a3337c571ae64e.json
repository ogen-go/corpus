{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bian-official/public"
		},
		"file": {
			"name": "CardCollections.yaml",
			"size": 0,
			"path": "release10.0.0/semantic-apis/oas3/yamls/CardCollections.yaml",
			"byteSize": 20586,
			"content": "openapi: 3.0.1\ninfo:\n  title: Card Collections\n  description: This service domain administers the recovery of outstanding amounts from cancelled card accounts through internal or external collection agencies. \u0026nbsp;This may involve negotiating payment terms and/or interest write-downs.\n  version: 10.0.0\nservers:\n- description: SwaggerHub API Auto Mocking\n  url: https://virtserver.swaggerhub.com/BIAN-3/CardCollections/10.0.0\npaths:\n  /CardCollections/Initiate:\n    post:\n      tags:\n      - CR - CardCollectionsProcedure\n      summary: InCR Initiate card collections processing\n      description: InCR Initiate card collections processing\n      operationId: Initiate\n      parameters: []\n      requestBody:\n        $ref: '#/components/requestBodies/CardCollectionsProcedure'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiateCardCollectionsProcedureResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Update:\n    put:\n      tags:\n      - CR - CardCollectionsProcedure\n      summary: UpCR Update details of card collections processing\n      description: UpCR Update details of card collections processing\n      operationId: Update\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      requestBody:\n        $ref: '#/components/requestBodies/CardCollectionsProcedure'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CardCollectionsProcedure'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Retrieve:\n    get:\n      tags:\n      - CR - CardCollectionsProcedure\n      summary: ReCR Retrieve details about a card collections procedure\n      description: ReCR Retrieve details about a card collections procedure\n      operationId: Retrieve\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CardCollectionsProcedure'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Assignment/{assignmentId}/Retrieve:\n    get:\n      tags:\n      - BQ - Assignment\n      summary: ReBQ Retrieve details about a card collections assignment\n      description: ReBQ Retrieve details about a card collections assignment\n      operationId: RetrieveAssignment\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/AssignmentID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrieveAssignmentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/PaymentTerms/{paymenttermsId}/Retrieve:\n    get:\n      tags:\n      - BQ - PaymentTerms\n      summary: ReBQ Retrieve details about the payment terms for a card collections procedure\n      description: ReBQ Retrieve details about the payment terms for a card collections procedure\n      operationId: RetrievePaymentTerms\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/PaymentTermsID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CardCollectionsProcedure'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Payment/Initiate:\n    post:\n      tags:\n      - BQ - Payment\n      summary: InBQ Initiate payment processing against the card collections account\n      description: InBQ Initiate payment processing against the card collections account\n      operationId: InitiatePayment\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      requestBody:\n        $ref: '#/components/requestBodies/InitiatePaymentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InitiatePaymentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Payment/{paymentId}/Update:\n    put:\n      tags:\n      - BQ - Payment\n      summary: UpBQ Update a payment transaction\n      description: UpBQ Update a payment transaction\n      operationId: UpdatePayment\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/PaymentID'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdatePaymentRequest'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatePaymentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Payment/{paymentId}/Retrieve:\n    get:\n      tags:\n      - BQ - Payment\n      summary: ReBQ Retrieve details about a payment made against the delinquent account\n      description: ReBQ Retrieve details about a payment made against the delinquent account\n      operationId: RetrievePayment\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/PaymentID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RetrievePaymentResponse'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Resolution/{resolutionId}/Update:\n    put:\n      tags:\n      - BQ - Resolution\n      summary: UpBQ Update a resolution plan\n      description: UpBQ Update a resolution plan\n      operationId: UpdateResolution\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/ResolutionID'\n      requestBody:\n        $ref: '#/components/requestBodies/Resolution'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resolution'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\n  /CardCollections/{cardcollectionsId}/Resolution/{resolutionId}/Retrieve:\n    get:\n      tags:\n      - BQ - Resolution\n      summary: ReBQ Retrieve details about a card collections resolution plan\n      description: ReBQ Retrieve details about a card collections resolution plan\n      operationId: RetrieveResolution\n      parameters:\n      - $ref: '#/components/parameters/CardCollectionsID'\n      - $ref: '#/components/parameters/ResolutionID'\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CardCollectionsProcedure'\n        400:\n          $ref: '#/components/responses/BadRequestError'\n        401:\n          $ref: '#/components/responses/UnauthorizedError'\n        403:\n          $ref: '#/components/responses/ForbiddenError'\n        404:\n          $ref: '#/components/responses/NotFoundError'\n        429:\n          $ref: '#/components/responses/TooManyRequestsError'\n        500:\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    CardCollectionsProcedure:\n      type: object\n      properties:\n        ProductInstanceReference:\n          type: object\n        ProductandServiceType:\n          type: string\n        CustomerReference:\n          type: object\n        CardType:\n          type: string\n        CardAccountStatus:\n          type: string\n        CardAccountLimits:\n          type: string\n        ConfigurationOrOptions:\n          type: string\n        TaxReference:\n          type: object\n        BillingTransactions:\n          type: string\n        BillingTransactionReference:\n          type: object\n        PaymentTransactions:\n          type: string\n        PaymentTransactionReference:\n          type: object\n        ProductTransactions:\n          type: string\n        ProductTransactionReference:\n          type: object\n        Statements:\n          type: string\n        StatementsReference:\n          type: object\n        CardCollectionsProcessingSchedule:\n          type: string\n    Payment:\n      type: object\n      properties:\n        PaymentTransactionReference:\n          type: object\n        PaymentTransaction:\n          type: string\n        CardCollectionsPaymentNotificationRecord:\n          type: string\n    Resolution:\n      type: object\n      properties:\n        CardCollectionsResolutionDecision:\n          type: string\n        CardCollectionsResolutionWorkProduct:\n          type: string\n    PaymentTerms:\n      type: object\n      properties:\n        CardCollectionsPaymentTermsContactRecord:\n          type: string\n        ContactMessage:\n          type: string\n        ContactDate:\n          type: string\n        ContactResult:\n          type: string\n        DocumentDirectoryEntryInstanceReference:\n          type: object\n        DocumentContent:\n          type: string\n        CorrespondenceInstanceReference:\n          type: object\n        CorrespondenceContent:\n          type: string\n        CardCollectionsPaymentTermsRenegotiationDecision:\n          type: string\n        CardCollectionsPaymentTermsWorkProduct:\n          type: string\n    Assignment:\n      type: object\n      properties:\n        CustomerCreditRatingAssessmentInstanceReference:\n          type: object\n        CustomerCreditRatingAssessment:\n          type: string\n        CollectionAgencyReference:\n          type: object\n        CollectionAgencyAgreement:\n          type: string\n        CardCollectionsAssignmentDecision:\n          type: string\n        CardCollectionsAssignmentWorkProduct:\n          type: string\n    HTTPError:\n      type: object\n      properties:\n        status_code:\n          type: string\n        status:\n          type: string\n        message:\n          type: string\n    InitiateCardCollectionsProcedureResponse:\n      type: object\n      properties:\n        CardCollectionsProcedure:\n          type: object\n          properties:\n            CardCollectionsProcessingSchedule:\n              type: string\n    RetrieveAssignmentResponse:\n      type: object\n      properties:\n        CardCollectionsProcedure:\n          type: object\n          properties:\n            ProductInstanceReference:\n              type: object\n            ProductandServiceType:\n              type: string\n            CustomerReference:\n              type: object\n            CardType:\n              type: string\n            CardAccountStatus:\n              type: string\n            CardAccountLimits:\n              type: string\n            ConfigurationOrOptions:\n              type: string\n            TaxReference:\n              type: object\n            BillingTransactions:\n              type: string\n            BillingTransactionReference:\n              type: object\n            PaymentTransactions:\n              type: string\n            PaymentTransactionReference:\n              type: object\n            ProductTransactions:\n              type: string\n            ProductTransactionReference:\n              type: object\n            Statements:\n              type: string\n            StatementsReference:\n              type: object\n            CardCollectionsProcessingSchedule:\n              type: string\n        Assignment:\n          type: object\n          properties:\n            CustomerCreditRatingAssessmentInstanceReference:\n              type: object\n            CollectionAgencyReference:\n              type: object\n            CollectionAgencyAgreement:\n              type: string\n            CardCollectionsAssignmentDecision:\n              type: string\n            CardCollectionsAssignmentWorkProduct:\n              type: string\n    InitiatePaymentRequest:\n      type: object\n      properties:\n        CardCollectionsProcedure:\n          type: object\n          properties:\n            ProductInstanceReference:\n              type: object\n            ProductandServiceType:\n              type: string\n            CustomerReference:\n              type: object\n            CardType:\n              type: string\n            CardAccountStatus:\n              type: string\n            PaymentTransactions:\n              type: string\n            PaymentTransactionReference:\n              type: object\n            CardCollectionsProcessingSchedule:\n              type: string\n        Payment:\n          type: object\n          properties:\n            CardCollectionsPaymentNotificationRecord:\n              type: string\n    InitiatePaymentResponse:\n      type: object\n      properties:\n        CardCollectionsProcedure:\n          type: object\n          properties:\n            CardCollectionsProcessingSchedule:\n              type: string\n    UpdatePaymentRequest:\n      type: object\n      properties:\n        Payment:\n          type: object\n          properties:\n            PaymentTransactionReference:\n              type: object\n            CardCollectionsPaymentNotificationRecord:\n              type: string\n    UpdatePaymentResponse:\n      type: object\n      properties:\n        Payment:\n          type: object\n          properties:\n            PaymentTransactionReference:\n              type: object\n            CardCollectionsPaymentNotificationRecord:\n              type: string\n    RetrievePaymentResponse:\n      type: object\n      properties:\n        CardCollectionsProcedure:\n          type: object\n          properties:\n            ProductInstanceReference:\n              type: object\n            ProductandServiceType:\n              type: string\n            CustomerReference:\n              type: object\n            CardType:\n              type: string\n            CardAccountStatus:\n              type: string\n            PaymentTransactions:\n              type: string\n            PaymentTransactionReference:\n              type: object\n            CardCollectionsProcessingSchedule:\n              type: string\n        Payment:\n          type: object\n          properties:\n            CardCollectionsPaymentNotificationRecord:\n              type: string\n  parameters:\n    CardCollectionsID:\n      name: cardcollectionsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    PaymentID:\n      name: paymentId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    ResolutionID:\n      name: resolutionId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    PaymentTermsID:\n      name: paymenttermsId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    AssignmentID:\n      name: assignmentId\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n  requestBodies:\n    CardCollectionsProcedure:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CardCollectionsProcedure'\n    InitiatePaymentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InitiatePaymentRequest'\n    UpdatePaymentRequest:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdatePaymentRequest'\n    Resolution:\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Resolution'\n  responses:\n    HTTPError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    BadRequestError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    UnauthorizedError:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    ForbiddenError:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    NotFoundError:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    TooManyRequestsError:\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n    InternalServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/HTTPError'\n...\n",
			"canonicalURL": "/github.com/bian-official/public@dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/-/blob/release10.0.0/semantic-apis/oas3/yamls/CardCollections.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bian-official/public/blob/dc33ea6e7cb8ac904995f7a514d5d2e5119c140f/release10.0.0/semantic-apis/oas3/yamls/CardCollections.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}