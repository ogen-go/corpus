{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/uam-apis"
		},
		"file": {
			"name": "uam-data-collection-X3.yaml",
			"size": 0,
			"path": "datacollection/openapi/X3/uam-data-collection-X3.yaml",
			"byteSize": 32506,
			"content": "openapi: 3.0.0\ninfo:\n  description: |-\n    Data Pipeline Endpoints for X3 - includes endpoints Scenario 1, 2 and 3\n  version: \"1.0.3\"\n  title: Data Pipeline Endpoints for X3\n\npaths:\n  /waypoint:\n      post:\n        summary: Upload an array of the Waypoint models\n        responses:\n            '200':\n              $ref: '#/components/responses/r200'\n            '204':\n              $ref: '#/components/responses/r204'\n            '400':\n              $ref: '#/components/responses/r400'\n            '401':\n              $ref: '#/components/responses/r400'\n            '403':\n              $ref: '#/components/responses/r403'\n            '409':\n              $ref: '#/components/responses/r409'\n            '429':\n              $ref: '#/components/responses/r429'\n            '500':\n              $ref: '#/components/responses/r500'\n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Waypoint'\n          description: Upload array of Waypoint models\n          required: true\n\n  /psu-exchange:\n    post:\n      summary: Upload an array of PSUExchange models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PSUExchange'\n        description: Upload an object of models, containing array of psu exchange\n        required: true\n\n  /metadata:\n    post:\n      summary: Upload an array of FlightRunMetadata models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/FlightRunMetadata'\n        description: Upload an object of models, containing array of flight run metadata\n        required: true\n\n  /constraint-occurrence:\n    post:\n      summary: Upload an array of ConstraintOccurrence models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConstraintOccurrence'\n        description: Upload an object of models, containing array of constraint occurrence\n        required: true\n\n  /off-nominal-response:\n    post:\n      summary: Upload an array of OffNominalResponse models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/OffNominalResponse'\n        description: Upload an object of models, containing array of OffNominalResponse\n        required: true\n\n  /auxiliary-operation:\n    post:\n      summary: Upload an array of AuxiliaryOperation models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/AuxiliaryOperation'\n        description: Upload an object of models, containing array of AuxiliaryOperation\n        required: true\n\n  /con-pre-run-op:\n    post:\n      summary: Upload an array of ConPreRunOp models\n      responses:\n        '200':\n          $ref: '#/components/responses/r200'\n        '204':\n          $ref: '#/components/responses/r204'\n        '400':\n          $ref: '#/components/responses/r400'\n        '401':\n          $ref: '#/components/responses/r400'\n        '403':\n          $ref: '#/components/responses/r403'\n        '409':\n          $ref: '#/components/responses/r409'\n        '429':\n          $ref: '#/components/responses/r429'\n        '500':\n          $ref: '#/components/responses/r500'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConPreRunOp'\n        description: Upload an object of models, containing array of ConPreRunOp\n        required: true\n\ncomponents:\n  schemas:\n    Timestamp:\n      description: \u003e-\n        Timestamps are validated against the ECMA 262 regex defined for 'pattern'.\n        Note that this format specifies UTC time indicated by a trailing 'Z'.\n        Note that this format specifies date and time separation with a 'T'.\n      type: string\n      format: date-time\n      minLength: 24\n      maxLength: 24\n      pattern: \"^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\\\.[0-9]{1,3})?Z$\"\n      example: '2015-08-20T14:11:56.118Z'\n\n    LatLonAlt:\n      type: object\n      required:\n        - latitude\n        - longitude\n        - altitude\n      description: \u003e-\n        Object used to define a location. Latitude and Longitude should have precision of 7 or more digits. WGS84 altitude. (m)\n      properties:\n        latitude:\n          description: \u003e-\n            Degrees of latitude north of the equator, with reference to the WGS84 ellipsoid. Should have precision of 7 or more digits.\n          type: number\n          format: double\n        longitude:\n          description: \u003e-\n            Degrees of longitude east of the Prime Meridian, with reference to the WGS84 ellipsoid. Should have precision of 7 or more digits.\n          type: number\n          format: double\n        altitude:\n          description: \u003e-\n            The numeric value of the WGS84 altitude. (m)\n          type: number\n          format: double\n\n    UTMRestResponse:\n      type: object\n      required:\n        - http_status_code\n        - message\n      properties:\n        http_status_code:\n          type: integer\n          minimum: 100\n          exclusiveMinimum: false\n          maximum: 599\n          exclusiveMaximum: false\n        message:\n          type: string\n          maxLength: 500\n      example:\n        http_status_code: 400\n        message: Bad Request. Invalid JSON?\n\n    PSUExchange:\n        required:\n          - \"exchanged_data_pk\"\n          - \"exchanged_data_type\"\n          - \"version_number\"\n          - \"source_psu\"\n          - \"target_psu\"\n          - \"reporting_psu_role\"\n          - \"time_request_initiation\"\n          - \"time_request_completed\"\n          - \"actual_http_response\"\n          - \"endpoint\"\n          - \"http_method\"\n        description: \u003e-\n          This model captures performance and interoperability data for a PSU. Since only failure case data is included in the PSU network 'Report' model, it is important to have PSUs self report on nominal elements. This information may inform future performance requirements and forensics of certain incidents. This may be an initial model that will be required operationally in terms of a PSUs need to log interactions with other PSUs.\n        properties:\n          FRI:\n            description: \u003e-\n                Array of Flight Test Run Identifiers, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.\n            type: array\n            items:\n              type: string\n              format: uuid\n              maxLength: 36\n              minLength: 36\n              pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n              example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n          exchanged_data_pk:\n            description: \u003e-\n                The primary key of the data that were exchanged. For example, if an Operation, Constraint, or Telemetry was exchanged, then this field would contain the reference ID.\n\n                In the case that multiple data elements were exchanged, then just populate this field with one of the primary keys. As a best practice, choose the first one in the array as they were sent between PSUs.\n\n                In the case where there is no Operation, Constraint, Telemetry, or reference ID, use 00000000-0000-4000-?000-000000000000 where ? is 8, 9, A, or B.\n            type: string\n            format: uuid\n            maxLength: 36\n            minLength: 36\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n          exchanged_data_type:\n            description: \u003e-\n              The data model that is being exchanged. For ‘TELEMETRY’, this model is only provided for the GET endpoint exchanges.\n            type: \"string\"\n            enum:\n              - OPERATION\n              - TELEMETRY\n              - CONSTRAINT\n              - SUBSCRIPTIONS\n              - REPORT\n              - OTHER_SEE_COMMENT\n            example: \"TELEMETRY\"\n          version_number:\n            description: \u003e-\n              The version number of the model that was sent. For Operation and Constraint.\n\n              Use 0 if model does not include a version, such as for Telemetry.\n            type: \"integer\"\n            example: 4\n          source_psu:\n            description: \u003e-\n              This is the base url of the source_psu, or discovery.\n            type: \"string\"\n            example: \"psu.provider123.net\"\n          target_psu:\n            description: \u003e-\n              This is the base url of the target_psu, or discovery.\n            type: \"string\"\n            example: \"psu.provider456.net\"\n          reporting_psu_role:\n            description: \u003e-\n              An enum indicating if the PSU providing these data was the one that initiated the request (source_psu) or the PSU that received the request (target_psu).\n            type: \"string\"\n            enum:\n              - SOURCE_PSU\n              - TARGET_PSU\n            example: \"SOURCE_PSU\"\n          time_request_initiation:\n            description: \u003e-\n              If SOURCE_PSU, this is the time that the request is sent to the TARGET_USS.\n              If TARGET_PSU, this is the time that the request was received from the SOURCE_PSU.\n              Must be less than time_request_completed.\n            $ref: '#/components/schemas/Timestamp'\n          time_request_completed:\n            description: \u003e-\n              If SOURCE_PSU, this is the time that the response was received from the TARGET_PSU.\n              If TARGET_PSU, this is the time that the request was sent back to the SOURCE_PSU.\n              Must be greater than time_request_initiation.\n            $ref: '#/components/schemas/Timestamp'\n          endpoint:\n            description: \u003e-\n              The endpoint to which the data request was initially sent.\n            type: \"string\"\n            example: \"https://psu.provider456.net/operations\"\n          http_method:\n            description: \u003e-\n              The HTTP method used in this exchange.\n            type: string\n            enum:\n              - GET\n              - POST\n              - PUT\n              - DELETE\n              - HEAD\n              - TRACE\n              - OPTIONS\n              - CONNECT\n              - PATCH\n            example: \"PUT\"\n          expected_http_response:\n            description: \u003e-\n              The expected HTTP response code.\n              This is required ONLY if the reporting_psu_role is source_psu.\n            type: \"integer\"\n            minimum: 100\n            maximum: 599\n            example: 204\n          actual_http_response:\n            description: \u003e-\n              The actual HTTP response code sent by the target_psu to the source_psu.\n              Must be reported by USSs in either role.\n            type: \"integer\"\n            minimum: 100\n            maximum: 599\n            example: 204\n          comments:\n            description: \u003e-\n              Any additional comments that could aid in analysis involving these data.\n            type: \"string\"\n            maxLength: 1000\n            example: \"This test was good.\"\n\n    Waypoint:\n        description: A single waypoint with associated data.\n        required:\n          - id\n          - sequence_id\n          - waypoint_type\n          - waypoint_phase\n          - waypoint_location\n          - target_time\n          - target_ground_speed\n          - target_vertical_speed\n          - hover_duration\n        properties:\n          FRI:\n            description: \u003e-\n                Flight Test Run Identifier, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.\n            type: string\n            format: uuid\n            maxLength: 36\n            minLength: 36\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n          id:\n            description: \u003e-\n                Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data.\n            type: string\n            format: uuid\n            maxLength: 36\n            minLength: 36\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n          sequence_id:\n            description: \u003e-\n                Integer indicating order of this waypoint in the list of waypoints.\n                Provides the sequence of waypoints for the operation. The sequence\n                IDs for an operations waypoints must start at 1. Sequence IDs may\n                not be repeated and there there may be no gaps in the sequence IDs\n                for an operations waypoints. If an Operations waypoints are updated\n                with subsequent submissions of waypoints to this endpoint, sequence\n                IDs that already exist will be updated, and new sequence IDs will be added.\n            type: integer\n            format: int32\n            minimum: 1\n            maximum: 9999\n            example: 23\n          waypoint_type:\n            description: Fly over or fly by?\n            type: string\n            enum:\n              - FLY_BY\n              - FLY_OVER\n          waypoint_phase:\n            description: \u003e-\n              Phase of flight that the operation will be in at this waypoint. Climb or Descent implies that the vehicle is traveling with some lateral air speed while descending. Vertical implies no lateral speed.\n            type: string\n            enum:\n              - GROUND_TAXI\n              - GROUND_HOVER\n              - TAKEOFF\n              - CLIMB_VERTICAL\n              - CLIMB\n              - CRUISE\n              - DESCENT_VERTICAL\n              - DESCENT\n              - APPROACH\n              - LANDING\n          waypoint_location:\n            description: \u003e-\n              For Lat/Lon, report at least seven decimal degrees. (deg)\n              For Alt, express in WGS84 standard. (m)\n            $ref: '#/components/schemas/LatLonAlt'\n          target_time:\n            description: |-\n              Targeted time to reach this waypoint.  Cannot be repeated\n              anywhere in its waypoint sequence. Times MUST be in the same order as\n              their sequence ids.\n            $ref: '#/components/schemas/Timestamp'\n          target_air_speed:\n            description: \u003e-\n              The target air speed of the vehicle at this waypoint.\n              Units of measure: m/sec.\n            type: integer\n            format: int32\n            minimum: -9999\n            maximum: 9999\n            example: 32\n          target_ground_speed:\n            description: \u003e-\n              The target ground speed of the vehicle at this waypoint.\n              Units of measure: m/sec.\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 9999\n            example: 32\n          target_vertical_speed:\n            description: \u003e-\n              For climb and descent waypoints, the target speed of climb or descent\n              Units of measure: m/sec.\n            type: integer\n            format: int32\n            minimum: -9999\n            maximum: 9999\n            example: 32\n          hover_duration:\n            description: \u003e-\n              Number of seconds the vehicle plans to hover or loiter at this waypoint.\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 99999\n            example: 120\n\n    FlightRunMetadata:\n        description: \u003e-\n          This interface allows all the subsystems to setup context for a\n          flight test run. As part of this interface the identifier\n          FRI (Flight Run Identifier) is generated.   FRI will be embedded into every\n          interface data model exchanged between subsystems. Industry partner\n          PSU subsystem that include PSU operator capabilities shall submit data\n          as per the data model mentioned in Table-3 to Data Pipeline.\n\n          This model is submitted after Operation enters 'Ended' state.\n\n          The only fields that are allowed to change in updates are Operation_IDs, and call_sign, and once call sign has been set in an update, it is “frozen”.\n\n        required:\n          - FRI\n          - FRI_tag\n          - flight_type\n          - flight_test_run_date_time\n          - industry_partner_name\n          - test_id\n          - scenario_id\n          - PSU_url\n          - crew\n        properties:\n          FRI:\n            description: \u003e-\n                Flight Test Run Identifier, autogenerated by subsystem, in this case partner PSU while submitting flight-run-metadata to NASA Data Pipeline subsystem.\n            type: string\n            format: uuid\n            maxLength: 36\n            minLength: 36\n            pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n            example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n          FRI_tag:\n            description: \u003e-\n              A tag that can group multiple UAM aircrafts (simulated/real) flight test runs.\n            type: string\n          flight_type:\n            description: \u003e-\n                Distinguishes flight test types.\n            type: string\n            enum:\n              - AIRSPACE_SIMULATION\n              - FLIGHT_SIMULATION\n              - LIVE_FLIGHT\n          flight_test_run_date_time:\n            description: Timestamp information about the start of the flight test event run.\n            $ref: '#/components/schemas/Timestamp'\n          industry_partner_name:\n            description: \u003e-\n              Name of the industry partner\n            type: string\n          test_id:\n            description: \u003e-\n                Distinguishes the event by ID.\n            type: string\n            enum:\n              - X3\n              - X4\n              - VIRTUAL_DRY_RUN\n              - BUILDUP_RUN_1\n              - BUILDUP_RUN_2\n              - BUILDUP_RUN_3\n              - DT\n              - NC1-DT1-FAM1\n              - NC1-DT1-BuildupRun1\n              - NC1-DT1-BuildupRun2-Preconnectivity1\n              - NC1-DT1-BuildupRun2-Preconnectivity2\n              - NC1-DT1-BuildupRun2 \n              - NC1-DT1-BuildupRun3\n          test_description:\n            description: \u003e-\n              Description of the test like Connectivity test, demonstration, actual test etc..\n            type: string\n          scenario_id:\n            description: \u003e-\n                Distinguishing NC Scenarios.\n            type: string\n            enum:\n              - SCENARIO_1\n              - SCENARIO_2\n              - SCENARIO_3\n          call_sign:\n            description: \u003e-\n              Unique call sign used to communicate with operators. The call sign will be captured in the communication audio while executing the flight test.\n            type: string\n          Operation_IDs:\n            description: \u003e-\n              An array of operations been submitted as part of the FRI. This array shall be updated individually by POST requests if new operations were submitted as part of the FRI.\n            type: array\n            items:\n              type: string\n              format: uuid\n              maxLength: 36\n              minLength: 36\n              pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n              example: \"00000000-0000-4444-8888-FEEFEEBEAFEE\"\n          PSU_url:\n            description: \u003e-\n              Partner PSU URL\n            type: string\n          crew:\n            description: \u003e-\n              The crew.\n            type: array\n            items:\n              $ref: '#/components/schemas/CrewMember'\n\n    CrewMember:\n        description: \u003e-\n          Information pretaining to the member of a crew.\n        required:\n          - role\n        properties:\n          name:\n            description: \u003e-\n                Name of the individual crew member\n            type: string\n            example: \"Skipper Tanner\"\n          role:\n            description: \u003e-\n                Role of the individual crew member\n            type: string\n          email:\n            description: \u003e-\n                Email of the individual crew member\n            type: string\n\n    ConstraintOccurrence:\n      description: \u003e-\n        This model captures the enactment of a Constraint from the\n        perspective of PSU to operator interaction.  The goal is to capture how\n        PSUs inform operators and how those operators react.  These data will\n        be correlated with data captured via the PSU Network.\n      required:\n        - id\n        - constraint_id\n        - time_psu_received\n        - time_psu_sent\n        - time_response_from_operator_received\n        - message_protocol\n      properties:\n        id:\n          description: \u003e-\n            Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data\n          type: string\n          format: uuid\n          maxLength: 36\n          minLength: 36\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n        constraint_id:\n          description: \u003e-\n            EntityUUID of the Constraint this exchange is in reference too\n          type: string\n          format: uuid\n          maxLength: 36\n          minLength: 36\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n        time_psu_received:\n          description: \u003e-\n            The time that the PSU received the Constraint message describing\n            this dynamic restriction.\n          $ref: '#/components/schemas/Timestamp'\n        time_psu_sent:\n          description: \u003e-\n            The time that the PSU sent a message to an affected operation.\n          $ref: '#/components/schemas/Timestamp'\n        time_response_from_operator_received:\n          description: \u003e-\n            The time that the PSU receives acknowledgement that the message was\n            received.  If an HTTP exchange this would be the time that the\n            20X was received.  If some other exchange mechanism, then just the\n            time that acknowledgement was received.\n          $ref: '#/components/schemas/Timestamp'\n        message_protocol:\n          description: \u003e-\n            How is the message sent to the operator?  If 'OTHER' you must describe\n            in 'notes' field.  May expand this enumeration based on discussions\n            with partners.\n          type: string\n          enum:\n            - HTTP\n            - WEBSOCKETS\n            - EMAIL\n            - SMS\n            - OTHER\n        message_to_operator:\n          description: \u003e-\n            The actual data payload sent to the operator from the PSU. May be\n            difficult to apply a maxLength to this field, should discuss.\n\n            This may be JSON formatted, so proper escaping of certain chars may\n            be necessary.  It may make sense to base64 encode this.  Should discuss.\n          type: string\n        notes:\n          description: \u003e-\n            Additional details about the exchange and/or message protocol. This may\n            include the actual data payload sent to the operator from the PSU.\n          type: string\n\n    OffNominalResponse:\n      description: \u003e-\n        This model captures the response to an off nominal event from the perspective\n        of the operator.\n      type: object\n      required:\n        - id\n        - response_time\n        - response_value\n        - landing_location\n      properties:\n        id:\n          description: \u003e-\n            Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data\n          type: string\n          format: uuid\n          maxLength: 36\n          minLength: 36\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n        response_time:\n          description: \u003e-\n            Time at which the operator alerts the PSU of the response to the off\n            nominal event\n          $ref: '#/components/schemas/Timestamp'\n        response_value:\n          description: \u003e-\n            The response to the off nominal event\n          type: string\n          enum:\n            - GO_AROUND_INITIATED\n            - ALTERNATE_LANDING_INITIATED\n            - CONTINGENT_INITIATED\n        landing_location:\n          description: \u003e-\n            Revised landing location as a result of the off nominal event\n            For Lat/Lon, report at least seven decimal degrees. (deg)\n            For Alt, express in WGS84 standard. (m)\n          $ref: '#/components/schemas/LatLonAlt'\n\n    AuxiliaryOperation:\n      description: \u003e-\n        This model captures operation data post flight that is not specifically included in the PSU Network Operation model.\n      required:\n        - id\n        - takeoff_time\n        - landing_time\n      properties:\n        id:\n          description: \u003e-\n            Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data\n          type: string\n          format: uuid\n          maxLength: 36\n          minLength: 36\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n        takeoff_time:\n          description: \u003e-\n            The time the operation first becomes airborne\n          $ref: '#/components/schemas/Timestamp'\n        landing_time:\n          description: \u003e-\n            The time the operation lands\n          $ref: '#/components/schemas/Timestamp'\n        traffic_interactions:\n          description: \u003e-\n            Number of distinct IFR or VFR vehicles that came within 1 nmi lateral and 1500 ft vertical of the operation at any point of an operations flight\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 9999\n          example: 32\n\n    ConPreRunOp:\n      type: object\n      required:\n        - id\n        - plannedTakeoffLocation\n        - plannedLandingLocation\n        - alternateLandingLocations\n      properties:\n        id:\n          description: \u003e-\n            Universally-unique identifier for an Operation. This is the same value used in the 'id' fields in the Operation data\n          type: string\n          format: uuid\n          maxLength: 36\n          minLength: 36\n          pattern: \"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[8-9a-bA-B][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$\"\n          example: \"00000000-0000-4444-8888-FEEDDEADBEEF\"\n        plannedTakeoffLocation:\n          description: \u003e-\n            For Lat/Lon, report at least seven decimal degrees. (deg)\n            For Alt, express in WGS84 standard. (m)\n          $ref: '#/components/schemas/LatLonAlt'\n        plannedLandingLocation:\n          description: \u003e-\n            For Lat/Lon, report at least seven decimal degrees. (deg)\n            For Alt, express in WGS84 standard. (m)\n          $ref: '#/components/schemas/LatLonAlt'\n        alternateLandingLocations:\n          description: \u003e-\n            Planned landing locations in case of a contingency\n          type: array\n          items:\n            $ref: '#/components/schemas/LatLonAlt'\n          minItems: 1\n          maxItems: 10000\n\n  responses:\n\n    'r200':\n      description: okay\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r201':\n      description: data created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r204':\n      description: no response supplied\n\n    'r400':\n      description: Bad request. Typically validation error. Fix your request and retry.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r401':\n      description: Invalid or missing access_token provided.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r403':\n      description: \u003e-\n        Forbidden. Do not retry with same access token. Reason not provided,\n        but do you have the right scopes? Does uss_name match the sub claim?\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r409':\n      description: Conflict for a PUT that is unsuccessful due to a 3rd-party modification\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r429':\n      description: Too many recent requests from you. Wait to make further queries.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n\n    'r500':\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UTMRestResponse'\n",
			"canonicalURL": "/github.com/nasa/uam-apis@d18c3afbdac9b91b89564c7a0f9dbe1c7332a9de/-/blob/datacollection/openapi/X3/uam-data-collection-X3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nasa/uam-apis/blob/d18c3afbdac9b91b89564c7a0f9dbe1c7332a9de/datacollection/openapi/X3/uam-data-collection-X3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}