{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Gi60s/openapi-enforcer"
		},
		"file": {
			"name": "splack.yml",
			"size": 0,
			"path": "test-resources/splack.yml",
			"byteSize": 11945,
			"content": "openapi: 3.0.2\ninfo:\n  title: Splack\n  description: The lacking slack API\n  version: '1.0'\npaths:\n  /channels:\n    get:\n      summary: Get a list of channels and stuff.\n      x-controller: channels\n      x-operation: getChannelsList\n      tags:\n        - Channels\n      parameters:\n        - $ref: '#/components/parameters/ChannelFieldsets'\n      responses:\n        200:\n          description: A list of channels.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Channel'\n        default:\n          description: Unexpected\n    post:\n      summary: Create a new channel.\n      tags:\n        - Channels\n      requestBody:\n        $ref: '#/components/requestBodies/Channel'\n      responses:\n        201:\n          description: Channel created\n          headers:\n            Location:\n              $ref: '#/components/headers/PostLocation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelBasic'\n        default:\n          description: Unexpected\n  /channels/{channelId}:\n    parameters:\n      - $ref: '#/components/parameters/ChannelId'\n    get:\n      summary: Get a single channel.\n      tags:\n        - Channels\n      parameters:\n        - $ref: '#/components/parameters/ChannelFieldsets'\n      responses:\n        200:\n          description: Channel retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n        default:\n          description: Unexpected\n    put:\n      summary: Update a channel's basic information.\n      tags:\n        - Channels\n      requestBody:\n        $ref: '#/components/requestBodies/Channel'\n      responses:\n        200:\n          description: Channel data set\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChannelBasic'\n        default:\n          description: Unexpected\n  /channels/{channelId}/messages:\n    parameters:\n      - $ref: '#/components/parameters/ChannelId'\n    get:\n      summary: Get a list of messages from a channel.\n      tags:\n        - Messages\n      parameters:\n        - $ref: '#/components/parameters/StartDate'\n        - $ref: '#/components/parameters/EndDate'\n        - $ref: '#/components/parameters/MessageFieldsets'\n      responses:\n        200:\n          description: A list of messages.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Message'\n        default:\n          description: Unexpected\n    post:\n      summary: Post a message to the channel.\n      tags:\n        - Messages\n      requestBody:\n        $ref: '#/components/requestBodies/Message'\n      responses:\n        201:\n          description: Message posted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageBasic'\n        default:\n          description: Unexpected\n  /channels/{channelId}/members:\n    parameters:\n      - $ref: '#/components/parameters/ChannelId'\n    get:\n      summary: Get a list of channel members.\n      tags:\n        - Users\n      responses:\n        200:\n          description: A list of members.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n        default:\n          description: Unexpected\n  /channels/{channelId}/members/{memberId}:\n    parameters:\n      - $ref: '#/components/parameters/ChannelId'\n      - $ref: '#/components/parameters/MemberId'\n    put:\n      summary: Make user a member of the channel.\n      tags:\n        - Users\n      responses:\n        200:\n          description: User is now a member of the channel.\n        default:\n          description: Unexpected\n    delete:\n      summary: Remove user from being a member of the channel.\n      tags:\n        - Users\n      responses:\n        200:\n          description: User is not a member of the channel.\n        default:\n          description: Unexpected\n  /messages/{messageId}:\n    parameters:\n      - $ref: '#/components/parameters/MessageId'\n    put:\n      summary: Set a message's content.\n      tags:\n        - Messages\n      requestBody:\n        $ref: '#/components/requestBodies/Message'\n      responses:\n        200:\n          description: Message content set.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageBasic'\n        default:\n          description: Unexpected\n    delete:\n      summary: Delete a message and its comments.\n      tags:\n        - Messages\n      responses:\n        204:\n          description: Message deleted\n        default:\n          description: Unexpected\n  /messages/{messageId}/comments:\n    parameters:\n      - $ref: '#/components/parameters/MessageId'\n    get:\n      summary: Get a list of comments associated with this message.\n      tags:\n        - Comments\n      parameters:\n        - $ref: '#/components/parameters/StartDate'\n        - $ref: '#/components/parameters/EndDate'\n      responses:\n        200:\n          description: A list of comments.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Comment'\n        default:\n          description: Unexpected\n    post:\n      summary: Add a comment to a message.\n      tags:\n        - Comments\n      requestBody:\n        $ref: '#/components/requestBodies/Message'\n      responses:\n        201:\n          description: Comment posted\n          headers:\n            Location:\n              $ref: '#/components/headers/PostLocation'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n        default:\n          description: Unexpected\n  /comments/{commentId}:\n    parameters:\n      - $ref: '#/components/parameters/CommentId'\n    put:\n      summary: Set a comment's text.\n      tags:\n        - Comments\n      requestBody:\n        $ref: '#/components/requestBodies/Message'\n      responses:\n        200:\n          description: Comment text set.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n        default:\n          description: Unexpected\n    delete:\n      summary: Delete a comment.\n      tags:\n        - Comments\n      responses:\n        204:\n          description: Comment removed.\n        default:\n          description: Unexpected\n  /users:\n    post:\n      summary: Create a user\n      tags:\n        - Users\n      requestBody:\n        $ref: '#/components/requestBodies/UserLogin'\n      responses:\n        201:\n          description: User created.\n        default:\n          description: Unexpected\n    put:\n      summary: Log in\n      tags:\n        - Users\n      requestBody:\n        $ref: '#/components/requestBodies/UserLogin'\n      responses:\n        200:\n          description: Log in successful.\n        default:\n          description: Unexpected\n    delete:\n      summary: Log out\n      tags:\n        - Users\n      responses:\n        204:\n          description: Logged out.\n        default:\n          description: Unexpected\ncomponents:\n  parameters:\n    ChannelId:\n      name: channelId\n      in: path\n      required: true\n      schema:\n        type: string\n    ChannelFieldsets:\n      name: fieldsets\n      in: query\n      schema:\n        type: array\n        default: ['basic']\n        items:\n          type: string\n          enum:\n            - basic\n            - metadata\n    CommentId:\n      name: commentId\n      in: path\n      required: true\n      schema:\n        type: string\n    EndDate:\n      name: endDate\n      in: query\n      schema:\n        type: string\n        format: date-time\n    MemberId:\n      name: memberId\n      in: path\n      required: true\n      schema:\n        type: string\n    MessageId:\n      name: messageId\n      in: path\n      required: true\n      schema:\n        type: string\n    MessageFieldsets:\n      name: fieldsets\n      in: query\n      schema:\n        type: array\n        default: ['basic']\n        items:\n          type: string\n          enum:\n            - basic\n            - comments\n    StartDate:\n      name: startDate\n      in: query\n      schema:\n        type: string\n        format: date-time\n  headers:\n    PostLocation:\n      description: The URL to retrieve the created resource from.\n      schema:\n        type: string\n  requestBodies:\n    Channel:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ChannelBasic'\n    Message:\n      content:\n        application/json:\n          schema:\n            type: string\n    UserLogin:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserLogin'\n  schemas:\n    Channel:\n      type: object\n      properties:\n        basic:\n          $ref: '#/components/schemas/ChannelBasic'\n        metadata:\n          type: object\n          properties:\n            memberCount:\n              type: integer\n              readOnly: true\n    ChannelBasic:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          description: A unique identifier.\n          type: string\n        name:\n          description: The channel's name\n          type: string\n        description:\n          description: A description of the channel's purpose.\n          type: string\n          default: ''\n    Comment:\n      allOf:\n        - $ref: '#/components/schemas/MessageBase'\n        - type: object\n          properties:\n            messageId:\n              description: The message that this comment belongs to.\n              type: string\n              readOnly: true\n    Message:\n      type: object\n      properties:\n        basic:\n          $ref: '#/components/schemas/MessageBasic'\n        comments:\n          description: The first 25 comments on a message.\n          type: array\n          maxItems: 25\n          items:\n            $ref: '#/components/schemas/Comment'\n    MessageBase:\n      type: object\n      required:\n        - id\n        - text\n        - postedBy\n        - datePosted\n        - dateUpdated\n      properties:\n        id:\n          description: A unique identifier.\n          type: string\n          readOnly: true\n        text:\n          description: The text in the message or comment.\n          type: string\n          minLength: 1\n        postedBy:\n          description: The user id of the user who posted this.\n          type: string\n        datePosted:\n          description: The date-time that this was first posted.\n          type: string\n          format: date-time\n        dateUpdated:\n          description: The date-time that this was last modified.\n          type: string\n          format: date-time\n    MessageBasic:\n      allOf:\n        - $ref: '#/components/schemas/MessageBase'\n        - type: object\n          required:\n            - channelId\n          properties:\n            channelId:\n              description: The channel ID that this message belong to.\n              type: string\n              readOnly: true\n    User:\n      type: object\n      properties:\n        email:\n          description: The user's email address.\n          type: string\n        name:\n          description: The user name, displayed on messages.\n          type: string\n        avatar:\n          description: The URL to the user's avatar.\n          type: string\n    UserLogin:\n      type: object\n      properties:\n        email:\n          description: The user's email address.\n          type: string\n        password:\n          description: The user's password.\n          type: string\n          format: password\n",
			"canonicalURL": "/github.com/Gi60s/openapi-enforcer@82b58ad19f2dfc037b525b9b07d62da5a4828656/-/blob/test-resources/splack.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Gi60s/openapi-enforcer/blob/82b58ad19f2dfc037b525b9b07d62da5a4828656/test-resources/splack.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}