{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jlndk/devoops"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "docs/swagger.yaml",
			"byteSize": 8807,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: MiniTwit Simulator API\n  description: API spec. for group D.\nservers:\n# Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/tobloef/MiniTwit/1.0.0\n  - url: 'http://minitwit.tk/api'\npaths:\n  /latest:\n    get:\n      summary: Get latest accepted id\n      responses:\n        '200':\n          description: Returns the latest id accepted by the API\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLatestDTO'\n  /msgs:\n    get:\n      summary: Get a number of messages from the global timeline\n      parameters:\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n        - name: 'no'\n          in: query\n          description: The maximum amount of messages to get\n          required: false\n          schema:\n            type: integer\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n      responses:\n        '200':\n          description: Returns the requested number of messages sorted by date\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMessagesDTO'\n        '401':\n          description: Unauthorized\n  '/msgs/{username}':\n    get:\n      summary: Get a number of messages from a specific user's timeline\n      parameters:\n        - name: username\n          in: path\n          description: Username of user to return messages for\n          required: true\n          schema:\n            type: integer\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n        - name: 'no'\n          in: query\n          description: The maximum amount of messages to get\n          required: false\n          schema:\n            type: integer\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n      responses:\n        '200':\n          description: Returns the requested number of messages sorted by date\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMessagesDTO'\n        '401':\n          description: Unauthorized\n        '404':\n          description: User not found\n    post:\n      summary: Post a new message to the user's timeline\n      parameters:\n        - name: username\n          in: path\n          description: Username of the user whose timeline should be posted to\n          required: true\n          schema:\n            type: integer\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/MessageBody'\n      responses:\n        '204':\n          description: The message was successfully posted\n        '400':\n          description: No valid message\n        '401':\n          description: Unauthorized\n        '404':\n          description: User not found\n  /register:\n    post:\n      summary: Register a new user\n      parameters:\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/RegisterBody'\n      responses:\n        '204':\n          description: The user was successfully registered\n        '400':\n          description: Invalid user details to register with (see response for details)\n        '401':\n          description: Unauthorized\n  '/fllws/{username}':\n    get:\n      summary: Get the users that a user follows\n      parameters:\n        - name: username\n          in: path\n          description: Username of user to get follows for\n          required: true\n          schema:\n            type: integer\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n        - name: 'no'\n          in: query\n          description: The maximum amount of follows to get\n          required: false\n          schema:\n            type: integer\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n      responses:\n        '200':\n          description: Returns the users a user follows\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFollowsDTO'\n        '401':\n          description: Unauthorized\n        '404':\n          description: User not found\n    post:\n      summary: Follow or unfollow a user\n      parameters:\n        - name: username\n          in: path\n          description: Username of the user to follow or unfollow\n          required: true\n          schema:\n            type: integer\n        - name: Authorization\n          in: header\n          required: true\n          schema:\n            type: string\n            example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh\n        - name: latest\n          in: query\n          description: The latest id sent by the simulator API\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        $ref: '#/components/requestBodies/FollowBody'\n      responses:\n        '204':\n          description: The user was successfully followed or unfollowed\n        '400':\n          description: No valid message\n        '401':\n          description: Unauthorized\n        '404':\n          description: User not found\ncomponents:\n  schemas:\n    GetLatestDTO:\n      type: object\n      properties:\n        latest:\n          type: integer\n          example: 23592\n    GetMessageDTO:\n      type: object\n      properties:\n        content:\n          type: string\n        pub_date:\n          type: string\n          format: date-time\n        user:\n          type: string\n          example: SomeUser123\n    GetMessagesDTO:\n      type: array\n      items:\n        $ref: '#/components/schemas/GetMessageDTO'\n    GetFollowsDTO:\n      type: object\n      properties:\n        follows:\n          type: array\n          items:\n            type: string\n            example: SomeUser123\n    PostMessageDTO:\n      type: object\n      required:\n        - content\n      properties:\n        content:\n          type: string\n          example: 'Wow, my vacation was so nice!'\n        latest:\n          type: integer\n          example: 23592\n    PostRegisterDTO:\n      type: object\n      required:\n        - username\n        - email\n        - password\n      properties:\n        username:\n          type: string\n          example: SomeUser123\n        email:\n          type: string\n          example: user123@email.com\n        pwd:\n          type: string\n          example: P455W0RD\n        latest:\n          type: integer\n          example: 23592\n    PostFollowUnfollowDTO:\n      type: object\n      required:\n        - follow\n      properties:\n        follow:\n          type: string\n          example: SomeUser123\n        unfollow:\n          type: string\n          example: SomeUser123\n        latest:\n          type: integer\n          example: 23592\n  requestBodies:\n    FollowBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostFollowUnfollowDTO'\n          examples:\n            follow:\n              value:\n                follow: SomeUser123\n            unfollow:\n              value:\n                unfollow: SomeUser123\n    MessageBody:\n      description: Message object that needs to be added to the database\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostMessageDTO'\n      required: true\n    RegisterBody:\n      description: User object that needs to be added to the database\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostRegisterDTO'\n      required: true",
			"canonicalURL": "/github.com/jlndk/devoops@c2474832866b6bcb255bf1efdd26ad9b83be6b4b/-/blob/docs/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jlndk/devoops/blob/c2474832866b6bcb255bf1efdd26ad9b83be6b4b/docs/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}