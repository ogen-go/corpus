{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "claims.json",
			"size": 0,
			"path": "openapi3_autogen/claims.json",
			"byteSize": 4248,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"claims\": {\n        \"description\": \"Represents the claims in the token used to access a service.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Contains the raw JSON web token (JWT) claims.\",\n            \"example\": {\n              \"exp\": 1553899021,\n              \"iat\": 1553888221,\n              \"iss\": \"https://accounts.acme.com\",\n              \"sub\": \"alice@acme.com\"\n            },\n            \"type\": \"object\"\n          },\n          \"hash\": {\n            \"description\": \"XXH64 hash of the claims content. It will be used as ID. To compute a correct\\nhash,\\nyou must first clob `content` as an string array in the form `key=value`, sort\\nit\\nthen apply the XXH64 function.\",\n            \"example\": \"1134423925458173049\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"hash\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"claims\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/claims\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of claims.\",\n        \"operationId\": \"get-all-claims\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/claims\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"guy\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new claims record.\",\n        \"operationId\": \"create-a-new-claims\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/claims\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/claims\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"guy\"\n        ]\n      }\n    },\n    \"/claims/{id}\": {\n      \"get\": {\n        \"description\": \"Retrieves the object with the given ID.\",\n        \"operationId\": \"get-claims-by-ID\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/claims\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"guy\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'policy/networking'\",\n      \"name\": \"policy/networking\"\n    },\n    {\n      \"description\": \"This tag is for package 'guy'\",\n      \"name\": \"guy\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@135fa774a34971a04dc7232e029f99de005f0e87/-/blob/openapi3_autogen/claims.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/135fa774a34971a04dc7232e029f99de005f0e87/openapi3_autogen/claims.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}