{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "letmc.com-free-tier-v2-free-tier-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/letmc.com-free-tier-v2-free-tier-swagger.yaml",
			"byteSize": 100805,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: LetMC\n  title: LetMC Api V2, Free (Tier 1)\n  version: v2-free-tier\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/agentOSSoftware/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://live-api.letmc.com/swagger/docs/v2-free-tier\n      version: \"2.0\"\n  x-providerName: letmc.com\n  x-serviceName: free-tier\npaths:\n  \"/v2/tier1/{shortName}/area/areas\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AreaModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AreaModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AreaModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AreaModelResults\"\n      summary: A collection of all the areas for a company\n      tags:\n        - AreaController\n  \"/v2/tier1/{shortName}/area/areas/{areaID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Area\n          in: path\n          name: areaID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AreaModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AreaModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/AreaModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AreaModel\"\n      summary: Get a specific area given its unique Object ID (OID)\n      tags:\n        - AreaController\n  \"/v2/tier1/{shortName}/branch/branches\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n      summary: All branches defined for a company\n      tags:\n        - BranchController\n  \"/v2/tier1/{shortName}/branch/branches/{branchID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: path\n          name: branchID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModel\"\n      summary: Get a specific branch given its unique Object ID (OID)\n      tags:\n        - BranchController\n  \"/v2/tier1/{shortName}/company\":\n    get:\n      deprecated: false\n      operationId: CompanyController_GetCompany\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CompanyModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CompanyModel\"\n      summary: Information about a specific company\n      tags:\n        - CompanyController\n  \"/v2/tier1/{shortName}/county/counties\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CountyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CountyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CountyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CountyModelResults\"\n      summary: A collection of all counties available for a company\n      tags:\n        - CountyController\n  \"/v2/tier1/{shortName}/county/counties/{countyID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the County\n          in: path\n          name: countyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CountyModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/CountyModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/CountyModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/CountyModel\"\n      summary: Get a specific county given its unique Object ID (OID)\n      tags:\n        - CountyController\n  \"/v2/tier1/{shortName}/county/counties/{countyID}/branches\":\n    get:\n      deprecated: false\n      operationId: CountyController_GetCountiesBranches\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the County\n          in: path\n          name: countyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/BranchModelResults\"\n      summary: A collection of branches that manage a specific county\n      tags:\n        - CountyController\n  \"/v2/tier1/{shortName}/diary/allocations\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModelResults\"\n      summary: A collection of all diary allocations\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/diary/allocations/{diaryAllocationID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the DiaryAllocation\n          in: path\n          name: diaryAllocationID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAllocationModel\"\n      summary: Get a specific diary allocation given its unique Object ID (OID)\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/diary/appointments\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModelResults\"\n      summary: A collection of all diary appointments\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/diary/appointments/{diaryAppointmentID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the DiaryAppointment\n          in: path\n          name: diaryAppointmentID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentModel\"\n      summary: Get a specific diary appointment given its unique Object ID (OID)\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/diary/appointmenttypes\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModelResults\"\n      summary: A collection of all diary appointment types\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/diary/appointmenttypes/{diaryAppointmentTypeID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the DiaryAppointmentType\n          in: path\n          name: diaryAppointmentTypeID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n      summary: Get a specific diary appointment type given its unique Object ID (OID)\n      tags:\n        - DiaryController\n  \"/v2/tier1/{shortName}/lettings/advertised\":\n    get:\n      deprecated: false\n      operationId: LettingsController_GetAdvertised\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: query\n          name: branchID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The unique ID of the Area\n          in: query\n          name: areaID\n          required: false\n          schema:\n            type: string\n        - description: The minimum advertised rent to search for\n          in: query\n          name: rentMinimum\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The maximum advertised rent to search for\n          in: query\n          name: rentMaximum\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The maximum number of tenants a property can accommodate\n          in: query\n          name: maximumTenants\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Search for shared properties?\n          in: query\n          name: wantSharedProperties\n          required: false\n          schema:\n            type: boolean\n        - description: Search for student properties?\n          in: query\n          name: wantStudentProperties\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n      summary: Search all properties available for rent given a range of search\n        criteria.\n      tags:\n        - LettingsController\n  \"/v2/tier1/{shortName}/lettings/advertisedbetweendates\":\n    get:\n      deprecated: false\n      operationId: LettingsController_GetAdvertisedBetweenDates\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: query\n          name: branchID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The date to search from\n          in: query\n          name: rangeStartDate\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - description: The date to search to\n          in: query\n          name: rangeEndDate\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - description: The unique ID of the Area\n          in: query\n          name: areaID\n          required: false\n          schema:\n            type: string\n        - description: The minimum advertised rent to search for\n          in: query\n          name: rentMinimum\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The maximum advertised rent to search for\n          in: query\n          name: rentMaximum\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The maximum number of tenants a property can accommodate\n          in: query\n          name: maximumTenants\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Search for shared properties?\n          in: query\n          name: wantSharedProperties\n          required: false\n          schema:\n            type: boolean\n        - description: Search for student properties?\n          in: query\n          name: wantStudentProperties\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n      summary: Search all properties available for rent given a range of search\n        criteria and dates.\n      tags:\n        - LettingsController\n  \"/v2/tier1/{shortName}/lettings/tenancies\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n      summary: A collection of all the company's tenancies\n      tags:\n        - LettingsController\n  \"/v2/tier1/{shortName}/lettings/tenancies/{tenancyID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Tenancy\n          in: path\n          name: tenancyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModel\"\n      summary: Get a specific tenancy given its unique Object ID (OID)\n      tags:\n        - LettingsController\n  \"/v2/tier1/{shortName}/lettings/tenancies/{tenancyID}/brochure\":\n    get:\n      deprecated: false\n      operationId: LettingsController_GetTenancyBrochure\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the tenancy\n          in: path\n          name: tenancyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the brochure relating to the latest advertised rental of a\n        property\n      tags:\n        - LettingsController\n  \"/v2/tier1/{shortName}/photo/photos\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n      summary: A collection of all photos in the company\n      tags:\n        - PhotoController\n  \"/v2/tier1/{shortName}/photo/photos/{photoID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Photo\n          in: path\n          name: photoID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModel\"\n      summary: Get a specific photo given its unique Object ID (OID)\n      tags:\n        - PhotoController\n  \"/v2/tier1/{shortName}/photos/photo/{photoID}/download\":\n    get:\n      deprecated: false\n      operationId: PhotoController_GetPhotoDownload\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the photo on the property\n          in: path\n          name: photoID\n          required: true\n          schema:\n            type: string\n        - description: An optional parameter specifying the image width\n          in: query\n          name: width\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: An optional parameter specifying the image height\n          in: query\n          name: height\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the photo of a property given the property and photo ID.\n      tags:\n        - PhotoController\n  \"/v2/tier1/{shortName}/property/properties\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyModelResults\"\n      summary: A collection of all properties within a company\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/properties/{propertyID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyModel\"\n      summary: Get a specific property given its unique Object ID (OID)\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/properties/{propertyID}/facilities\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertiesFacilities\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyFacilityModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyFacilityModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyFacilityModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyFacilityModelResults\"\n      summary: A collection of facilities linked to a block, property or room\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/properties/{propertyID}/photos\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertiesPhotos\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n      summary: A collection showing all the photos linked to a specific block, property\n        or room\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/properties/{propertyID}/rooms\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertiesRooms\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n      summary: A collection of the rooms that belong to this property or block\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/properties/{propertyID}/tenancies\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertiesTenancies\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Property\n          in: path\n          name: propertyID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/TenancyModelResults\"\n      summary: A collection of all tenancies associated with this block, property or\n        room\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/structures/{propertyStructureID}/reports/eer\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertyEERDownload\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the property structure\n          in: path\n          name: propertyStructureID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the energy efficiency report (EER) graph for a property\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/property/structures/{propertyStructureID}/reports/eir\":\n    get:\n      deprecated: false\n      operationId: PropertyController_GetPropertyEIRDownload\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the property structure\n          in: path\n          name: propertyStructureID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the environmental impact report (EIR) graph for a property\n      tags:\n        - PropertyController\n  \"/v2/tier1/{shortName}/sales/advertisedsales\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetAdvertisedSales\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the Branch\n          in: query\n          name: branchID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: Show only development properties?\n          in: query\n          name: onlyDevelopement\n          required: true\n          schema:\n            type: boolean\n        - description: Show only investment properties?\n          in: query\n          name: onlyInvestements\n          required: true\n          schema:\n            type: boolean\n        - description: The minimum price to search for\n          in: query\n          name: minimumPrice\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The maximum price to search for\n          in: query\n          name: maximumPrice\n          required: false\n          schema:\n            type: number\n            format: double\n        - description: The minimum beds to search for\n          in: query\n          name: minimumBeds\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The minimum bathrooms to search for\n          in: query\n          name: minimumBathrooms\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The minimum ensuite bathrooms to search for\n          in: query\n          name: minimumEnsuites\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The minimum toilets to search for\n          in: query\n          name: minimumToilets\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The minimum reception rooms to search for\n          in: query\n          name: minimumReception\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n      summary: Search all sales properties available given a range of search criteria\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/reports/eer/{salesInstructionID}\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetEER\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the energy efficiency report (EER) graph for a sales\n        instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/reports/eir/{salesInstructionID}\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetEIR\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Object\"\n      summary: Downloads the energy efficiency report (EIR) graph for a sales\n        instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesfeaturetypes\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModelResults\"\n      summary: A collection of all sales feature types linked to a company\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesfeaturetypes/{salesFeatureTypeID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesFeatureType\n          in: path\n          name: salesFeatureTypeID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureTypeModel\"\n      summary: Get a specific sales feature type given its unique Object ID (OID)\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModelResults\"\n      summary: A collection of all sales instructions linked to a company\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesInstructionModel\"\n      summary: Get a specific sales instruction given its unique Object ID (OID)\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/features\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetSalesInstructionsFeatures\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SalesFeatureModelResults\"\n      summary: A collection of all features linked to a sales instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/floorplans\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetSalesInstructionsFloorPlans\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n      summary: A collection of floor plans linked to an instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/photos\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetSalesInstructionsPhotos\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PhotoModelResults\"\n      summary: A collection of photos linked to an instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/sales/salesinstructions/{salesInstructionID}/rooms\":\n    get:\n      deprecated: false\n      operationId: SalesController_GetSalesInstructionsRooms\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the SalesInstruction\n          in: path\n          name: salesInstructionID\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PropertyRoomModelResults\"\n      summary: A collection of rooms linked to an instruction\n      tags:\n        - SalesController\n  \"/v2/tier1/{shortName}/staff/staff\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The index of the first item to return\n          in: query\n          name: offset\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - description: The maximum number of items to return (up to 1000 per request)\n          in: query\n          name: count\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModelResults\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModelResults\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModelResults\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModelResults\"\n      summary: A collection of all the staff members linked to a specific company\n      tags:\n        - StaffController\n  \"/v2/tier1/{shortName}/staff/staff/{applicationStaffID}\":\n    get:\n      deprecated: false\n      parameters:\n        - description: The unique client short-name\n          in: path\n          name: shortName\n          required: true\n          schema:\n            type: string\n        - description: The unique ID of the ApplicationStaff\n          in: path\n          name: applicationStaffID\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModel\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModel\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModel\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ApplicationStaffModel\"\n      summary: Get a specific application staff given its unique Object ID (OID)\n      tags:\n        - StaffController\nservers:\n  - url: https://live-api.letmc.com\ncomponents:\n  securitySchemes:\n    apiKey:\n      description: ApiKey Authentication\n      in: header\n      name: ApiKey\n      type: apiKey\n    basic:\n      description: Basic HTTP Authentication\n      type: http\n      scheme: basic\n  schemas:\n    ApplicationStaffModel:\n      description: Holds the information about a member of staff.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Forename:\n          description: The user's forename.\n          type: string\n        GlobalReference:\n          description: The global reference to this user.\n          type: string\n        IsEnabled:\n          description: Is this staff member enabled?\n          type: boolean\n        ManagedBy:\n          description: The branch linked to this user\n          type: string\n        Middlename:\n          description: The user's middlename.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Surname:\n          description: The user's surname.\n          type: string\n        Title:\n          description: The user's title.\n          type: string\n      type: object\n    ApplicationStaffModelResults:\n      description: Holds results from a paged query returning ApplicationStaffModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/ApplicationStaffModel\"\n          type: array\n      type: object\n    AreaModel:\n      description: Stores the information about a single property area.\n      properties:\n        Branch:\n          description: The branch that manages this area.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: The property area name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        ShowOnSites:\n          description: Show the area on sites?\n          type: boolean\n      type: object\n    AreaModelResults:\n      description: Holds results from a paged query returning AreaModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/AreaModel\"\n          type: array\n      type: object\n    BranchModel:\n      description: Defines a single branch of a client.\n      properties:\n        Address1:\n          description: Branch address line 1.\n          type: string\n        Address2:\n          description: Branch address line 2.\n          type: string\n        Address3:\n          description: Branch address line 3.\n          type: string\n        Address4:\n          description: Branch address line 4.\n          type: string\n        CompanyName:\n          description: The relevant company name, if not the one specified on the branch\n            then the one on company.\n          type: string\n        County:\n          description: County\n          type: string\n        EMailAddress:\n          description: Branch email address.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FaxPhone:\n          description: Branch fax phone number.\n          type: string\n        LandPhone:\n          description: Branch land phone number.\n          type: string\n        Name:\n          description: The branch name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Postcode:\n          description: Branch address postcode.\n          type: string\n        WebAddress:\n          description: Branch web address.\n          type: string\n      type: object\n    BranchModelResults:\n      description: Holds results from a paged query returning BranchModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/BranchModel\"\n          type: array\n      type: object\n    CompanyModel:\n      description: The search code for the ApplicationCompany storage object.\n      properties:\n        CompanyName:\n          description: Company name\n          type: string\n        CompanyRegistration:\n          description: Company registration number\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        MarketingCompanyName:\n          description: Company Marketing Name\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        ShortName:\n          description: The unique identifier assigned to the client\n          type: string\n      type: object\n    CountyModel:\n      description: Stores the information about a single property County. A County can have\n        a number of areas linked to it.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: The property county name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n      type: object\n    CountyModelResults:\n      description: Holds results from a paged query returning CountyModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/CountyModel\"\n          type: array\n      type: object\n    DiaryAllocationModel:\n      description: \"Represents a single diary allocation, capable of holding a number\\r\n\n        \\            of appointments associated with a member of staff.\"\n      properties:\n        AppointmentType:\n          description: The diary appointment type.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        End:\n          description: The end date/time of this allocation.\n          format: date-time\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Staff:\n          description: The staff member holding this allocation.\n          type: string\n        Start:\n          description: The start date/time of this allocation.\n          format: date-time\n          type: string\n      type: object\n    DiaryAllocationModelResults:\n      description: Holds results from a paged query returning DiaryAllocationModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/DiaryAllocationModel\"\n          type: array\n      type: object\n    DiaryAppointmentModel:\n      description: Represents a single diary appointment for a staff member.\n      properties:\n        AppointmentType:\n          description: The diary appointment type.\n          type: string\n        Cancelled:\n          description: Whether the appointment has been cancelled.\n          type: boolean\n        Comment:\n          description: The appointment comments text.\n          type: string\n        CreatedAt:\n          description: The date/time this appointment was created.\n          format: date-time\n          type: string\n        CreatedBy:\n          description: The staff member that created this appointment.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        End:\n          description: The end date/time of this appointment.\n          format: date-time\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        RemindAt:\n          description: The date/time to remind the staff member of this appointment.\n          format: date-time\n          type: string\n        RemindBefore:\n          description: The number of minutes before the appointment start date/time to\n            remind the staff member. -1 means don't remind.\n          enum:\n            - Min\n            - Min2\n            - Min5\n            - Min10\n            - Min15\n            - Min30\n            - Min45\n            - Hour\n            - Hour2\n            - Hour3\n            - Hour6\n            - Hour12\n            - Day\n            - Day2\n            - Day3\n            - Week\n            - NoReminder\n          type: string\n        Staff:\n          description: The staff member holding this appointment.\n          type: string\n        Start:\n          description: The start date/time of this appointment.\n          format: date-time\n          type: string\n        Subject:\n          description: The appointment subject text.\n          type: string\n      type: object\n    DiaryAppointmentModelResults:\n      description: Holds results from a paged query returning DiaryAppointmentModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/DiaryAppointmentModel\"\n          type: array\n      type: object\n    DiaryAppointmentTypeModel:\n      description: Represents a diary appointment type.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: The appointment type name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        SystemType:\n          description: The appointment system type.\n          enum:\n            - Viewing\n            - ViewAndValue\n            - OpeningInspection\n            - InterimInspection\n            - ClosingInspection\n            - SalesAppraisal\n            - Custom\n          type: string\n      type: object\n    DiaryAppointmentTypeModelResults:\n      description: Holds results from a paged query returning DiaryAppointmentTypeModel\n        values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/DiaryAppointmentTypeModel\"\n          type: array\n      type: object\n    Object:\n      properties: {}\n      type: object\n    PhotoModel:\n      description: Stores a photo related to a property structure.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FileName:\n          description: The file name.\n          type: string\n        InspectionItem:\n          description: The inspection item the photo is assigned to (if applicable).\n          type: string\n        InterimInspection:\n          description: The inspection the photo is assigned to (if applicable).\n          type: string\n        InventoryItem:\n          description: The inventory item the photo is assigned to (if applicable).\n          type: string\n        Name:\n          description: The photo name.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        PhotoNumber:\n          description: The photo ordering number\n          format: int32\n          type: integer\n        PhotoType:\n          description: The photo type.\n          enum:\n            - Photo\n            - Map\n            - FloorPlan\n            - SiteMap\n            - AerialPhoto\n          type: string\n        Property:\n          description: The property the photo is assigned to.\n          type: string\n        Room:\n          description: The room the photo is assigned to. (If applicable)\n          type: string\n      type: object\n    PhotoModelResults:\n      description: Holds results from a paged query returning PhotoModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/PhotoModel\"\n          type: array\n      type: object\n    PropertyFacilityModel:\n      description: Stores the information about a single property facility.\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: Display Name\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n      type: object\n    PropertyFacilityModelResults:\n      description: Holds results from a paged query returning PropertyFacilityModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/PropertyFacilityModel\"\n          type: array\n      type: object\n    PropertyModel:\n      description: Stores the 'Sales' type fields for property ownable as a stepping stone\n        to a full on BO when we finally get the go ahead to write sales!!\n      properties:\n        Area:\n          description: The area the property is located in.\n          type: string\n        Branch:\n          description: The branch the block, property or room is assigned to\n          type: string\n        Description:\n          description: The block, property or room description.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FullAddress:\n          description: The full address of a block, property or room, formatted with line\n            breaks such that it may be used on a letter directly.\n          type: string\n        GlobalReference:\n          description: The global reference to this block, property or room\n          type: string\n        MainPhoto:\n          description: Gets the main photo, if there is one.\n          type: string\n        ManagedByStaff:\n          description: The staff memeber that manages the block, property or room\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        PropertySource:\n          description: The block, property or room source type\n          type: string\n        PropertyType:\n          description: The block or property type.\n          enum:\n            - House\n            - FlatApartment\n            - Bungalow\n            - Land\n            - HouseFlatShare\n            - GarageParking\n            - CommercialProperty\n            - Block\n            - TerracedHouse\n            - EndTerraceHouse\n            - SemiDetachedHouse\n            - DetachedHouse\n            - SemiDetachedBungalow\n            - TownHouse\n            - Cottage\n            - ServicedApartment\n            - Studio\n            - Apartment\n            - Barn\n            - FarmHouse\n            - Penthouse\n            - BuildingPlot\n            - DetachedBungalow\n            - LinkDetached\n            - MidTerracedBungalow\n            - LandResidential\n          type: string\n        RoomName:\n          description: The room name (if applicable).\n          type: string\n        VideoURL:\n          description: URL of the video linked to the property\n          type: string\n      type: object\n    PropertyModelResults:\n      description: Holds results from a paged query returning PropertyModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/PropertyModel\"\n          type: array\n      type: object\n    PropertyRoomModel:\n      description: A single room (bedroom) property structure.\n      properties:\n        Area:\n          description: The area the property is located in.\n          type: string\n        Branch:\n          description: The branch the block, property or room is assigned to\n          type: string\n        Description:\n          description: The block, property or room description.\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        FullAddress:\n          description: The full address of a block, property or room, formatted with line\n            breaks such that it may be used on a letter directly.\n          type: string\n        GlobalReference:\n          description: The global reference to this block, property or room\n          type: string\n        HeightCentimeters:\n          description: Gets the CentiMeter part of the room Height.\n          format: int32\n          type: integer\n        HeightMeters:\n          description: Gets the Meter part of the room Height.\n          format: int32\n          type: integer\n        LengthCentimeters:\n          description: Gets the CentiMeter part of the room Length.\n          format: int32\n          type: integer\n        LengthMeters:\n          description: Gets the Meter part of the room Length.\n          format: int32\n          type: integer\n        MainPhoto:\n          description: Gets the main photo, if there is one.\n          type: string\n        ManagedByStaff:\n          description: The staff memeber that manages the block, property or room\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        PropertySource:\n          description: The block, property or room source type\n          type: string\n        RoomFloor:\n          description: Gets and sets the room floor.\n          enum:\n            - Basement\n            - Ground\n            - First\n            - Second\n            - Third\n            - Fourth\n            - Fifth\n            - SixthPlus\n            - Unknown\n          type: string\n        RoomName:\n          description: The room name (if applicable).\n          type: string\n        WidthCentiMeters:\n          description: Gets the CentiMeter part of the room width.\n          format: int32\n          type: integer\n        WidthMeters:\n          description: Gets the Meter part of the room width.\n          format: int32\n          type: integer\n      type: object\n    PropertyRoomModelResults:\n      description: Holds results from a paged query returning PropertyRoomModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/PropertyRoomModel\"\n          type: array\n      type: object\n    SalesFeatureModel:\n      description: \"\"\n      properties:\n        Comment:\n          description: The feature comment\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        Type:\n          description: The feature type\n          type: string\n      type: object\n    SalesFeatureModelResults:\n      description: Holds results from a paged query returning SalesFeatureModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/SalesFeatureModel\"\n          type: array\n      type: object\n    SalesFeatureTypeModel:\n      description: \"\"\n      properties:\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Name:\n          description: The name of the feature type\n          type: string\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n      type: object\n    SalesFeatureTypeModelResults:\n      description: Holds results from a paged query returning SalesFeatureTypeModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/SalesFeatureTypeModel\"\n          type: array\n      type: object\n    SalesInstructionModel:\n      description: \"\"\n      properties:\n        Address1:\n          description: Address 1 of the property to be sold\n          type: string\n        Address2:\n          description: Address 2 of the property to be sold\n          type: string\n        Address3:\n          description: Address 3 of the property to be sold\n          type: string\n        Address4:\n          description: Address 4 of the property to be sold\n          type: string\n        AddressNumber:\n          description: Address number of the property to be sold\n          type: string\n        Area:\n          description: The area linked to the instruction\n          type: string\n        Bathrooms:\n          description: Number of bathrooms linked to the instruction\n          format: int32\n          type: integer\n        BathroomsEnsuite:\n          description: How many of the bathrooms are ensuite?\n          format: int32\n          type: integer\n        Bedrooms:\n          description: Number of bedrooms linked to the instruction\n          format: int32\n          type: integer\n        ContractType:\n          description: The contract type\n          enum:\n            - Pending\n            - SoleAgency\n            - SoleSellingRights\n            - JointSoleAgency\n            - MultiAgency\n            - SubAgent\n          type: string\n        Country:\n          description: Address country of the property to be sold\n          enum:\n            - Afghanistan\n            - Albania\n            - Algeria\n            - Andorra\n            - Angola\n            - AntiguaAndBarbuda\n            - Argentina\n            - Armenia\n            - Australia\n            - Austria\n            - Azerbaijan\n            - Bahamas\n            - Bahrain\n            - Bangladesh\n            - Barbados\n            - Belarus\n            - Belgium\n            - Belize\n            - Benin\n            - Bhutan\n            - Bolivia\n            - BosniaAndHerzegovina\n            - Botswana\n            - Brazil\n            - Brunei\n            - Bulgaria\n            - BurkinaFaso\n            - Burundi\n            - Cambodia\n            - Cameroon\n            - Canada\n            - CapeVerde\n            - CentralAfricanRepublic\n            - Chad\n            - Chile\n            - China\n            - Colombia\n            - Comoros\n            - CongoBrazzaville\n            - CongoDemocraticRepublicOfThe\n            - CostaRica\n            - CoteDIvoire\n            - Croatia\n            - Cuba\n            - Cyprus\n            - CzechRepublic\n            - Denmark\n            - Djibouti\n            - Dominica\n            - DominicanRepublic\n            - EastTimorTimorTimur\n            - Ecuador\n            - Egypt\n            - ElSalvador\n            - EquatorialGuinea\n            - Eritrea\n            - Estonia\n            - Ethiopia\n            - Fiji\n            - Finland\n            - France\n            - Gabon\n            - GambiaThe\n            - Georgia\n            - Germany\n            - Ghana\n            - Greece\n            - Grenada\n            - Guatemala\n            - Guinea\n            - GuineaBissau\n            - Guyana\n            - Haiti\n            - Honduras\n            - Hungary\n            - Iceland\n            - India\n            - Indonesia\n            - Iran\n            - Iraq\n            - Ireland\n            - Israel\n            - Italy\n            - Jamaica\n            - Japan\n            - Jordan\n            - Kazakhstan\n            - Kenya\n            - Kiribati\n            - KoreaNorth\n            - KoreaSouth\n            - Kuwait\n            - Kyrgyzstan\n            - Laos\n            - Latvia\n            - Lebanon\n            - Lesotho\n            - Liberia\n            - Libya\n            - Liechtenstein\n            - Lithuania\n            - Luxembourg\n            - MacedoniaFormerYugoslavRepublicOf\n            - Madagascar\n            - Malawi\n            - Malaysia\n            - Maldives\n            - Mali\n            - Malta\n            - MarshallIslands\n            - Mauritania\n            - Mauritius\n            - Mexico\n            - MicronesiaFederatedStatesOf\n            - Moldova\n            - Monaco\n            - Mongolia\n            - Morocco\n            - Mozambique\n            - Myanmar\n            - Namibia\n            - Nauru\n            - Nepal\n            - Netherlands\n            - NewZealand\n            - Nicaragua\n            - Niger\n            - Nigeria\n            - Norway\n            - Oman\n            - Pakistan\n            - Palau\n            - Panama\n            - PapuaNewGuinea\n            - Paraguay\n            - Peru\n            - Philippines\n            - Poland\n            - Portugal\n            - Qatar\n            - Romania\n            - Russia\n            - Rwanda\n            - SaintKittsAndNevis\n            - SaintLucia\n            - SaintVincentAndTheGrenadines\n            - Samoa\n            - SanMarino\n            - SaoTomeAndPrincipe\n            - SaudiArabia\n            - Senegal\n            - SerbiaAndMontenegro\n            - Seychelles\n            - SierraLeone\n            - Singapore\n            - Slovakia\n            - Slovenia\n            - SolomonIslands\n            - Somalia\n            - SouthAfrica\n            - Spain\n            - SriLanka\n            - Sudan\n            - Suriname\n            - Swaziland\n            - Sweden\n            - Switzerland\n            - Syria\n            - Taiwan\n            - Tajikistan\n            - Tanzania\n            - Thailand\n            - Togo\n            - Tonga\n            - TrinidadAndTobago\n            - Tunisia\n            - Turkey\n            - Turkmenistan\n            - Tuvalu\n            - Uganda\n            - Ukraine\n            - UnitedArabEmirates\n            - UnitedKingdom\n            - UnitedStates\n            - Uruguay\n            - Uzbekistan\n            - Vanuatu\n            - VaticanCity\n            - Venezuela\n            - Vietnam\n            - WesternSahara\n            - Yemen\n            - Zambia\n            - Zimbabwe\n            - UnknownCountry\n            - HongKong\n            - Jersey\n            - ChannelIslands\n            - Bermuda\n            - BritishOverseasTerritory\n          type: string\n        Description:\n          description: The instruction description\n          type: string\n        DevelopmentOpp:\n          description: Is the instruction a development opportunity?\n          type: boolean\n        Directions:\n          description: Directions linked to the instruction\n          type: string\n        EPCCurrentEER:\n          description: Current EER value\n          format: int32\n          type: integer\n        EPCCurrentEI:\n          description: Current EI value\n          format: int32\n          type: integer\n        EPCPotentialEER:\n          description: Potential EER value\n          format: int32\n          type: integer\n        EPCPotentialEI:\n          description: Potential EI value\n          format: int32\n          type: integer\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        HasElectricitySupply:\n          description: Does the instruction have an electrical supply linked to it?\n          type: boolean\n        HasGasSupply:\n          description: Does the instruction have an gas supply linked to it?\n          type: boolean\n        HasWaterMeter:\n          description: Does the instruction have a water meter linked to it?\n          type: boolean\n        InvestmentOpp:\n          description: Is the instruction a investment opportunity?\n          type: boolean\n        Kitchens:\n          description: Number of kitchens linked to the property instruction\n          format: int32\n          type: integer\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        OutsideSpaceBalcony:\n          description: Does the instruction have an outside balcony linked to it?\n          type: boolean\n        OutsideSpaceCommunalGarden:\n          description: Does the instruction have a communal garden linked to it?\n          type: boolean\n        OutsideSpaceConservatory:\n          description: Does the instruction have a conservatory linked to it?\n          type: boolean\n        OutsideSpaceGarden:\n          description: Does the instruction have a garden linked to it?\n          type: boolean\n        OutsideSpaceLargeGarden:\n          description: Does the instruction have a large garden linked to it?\n          type: boolean\n        OutsideSpacePatio:\n          description: Does the instruction have a patio linked to it?\n          type: boolean\n        OutsideSpaceRoofTerrace:\n          description: Does the instruction have a roof terrace linked to it?\n          type: boolean\n        OutsideSpaceSouthFacingGarden:\n          description: Does the instruction have a south facing garden?\n          type: boolean\n        ParkingAllocated:\n          description: Is there any parking allocation linked to the instruction?\n          type: boolean\n        ParkingCarport:\n          description: Does the instruction have a carport linked to it?\n          type: boolean\n        ParkingDoubleGarage:\n          description: Does the instruction have a double garage linked to it?\n          type: boolean\n        ParkingGarage:\n          description: Does the instruction have a garage linked to it?\n          type: boolean\n        ParkingOffRoad:\n          description: Is there off road parking linked to the instruction?\n          type: boolean\n        ParkingOnRoad:\n          description: Is there on road parking linked to the instruction?\n          type: boolean\n        ParkingPermit:\n          description: Is a parking permit required?\n          type: boolean\n        ParkingSecureGated:\n          description: Is there any secured gate parking linked to the instruction?\n          type: boolean\n        ParkingTripleGarage:\n          description: Does the instruction have a triple garage linked to it?\n          type: boolean\n        Postcode:\n          description: Postcode of the property to be sold\n          type: string\n        Price:\n          description: The price of the property to be sold\n          format: double\n          type: number\n        PropertyOwnableType:\n          description: The property type\n          enum:\n            - House\n            - FlatApartment\n            - Bungalow\n            - Land\n            - HouseFlatShare\n            - GarageParking\n            - CommercialProperty\n            - Block\n            - TerracedHouse\n            - EndTerraceHouse\n            - SemiDetachedHouse\n            - DetachedHouse\n            - SemiDetachedBungalow\n            - TownHouse\n            - Cottage\n            - ServicedApartment\n            - Studio\n            - Apartment\n            - Barn\n            - FarmHouse\n            - Penthouse\n            - BuildingPlot\n            - DetachedBungalow\n            - LinkDetached\n            - MidTerracedBungalow\n            - LandResidential\n          type: string\n        ReceptionRooms:\n          description: Number of reception rooms linked to the instruction\n          format: int32\n          type: integer\n        State:\n          description: The current instruction state\n          enum:\n            - MarketAppraisal\n            - LostAppraisal\n            - Instructed\n            - Advertised\n            - UnderOffer\n            - ContractsExchanged\n            - Completed\n            - FallenThrough\n            - Withdrawn\n          type: string\n        Tenure:\n          description: Instruction tenure\n          enum:\n            - Freehold\n            - Leasehold\n            - Commonhold\n            - ShareOfFreehold\n            - FlyingFreehold\n            - ShareTransfer\n            - Unknown\n          type: string\n        VideoURL:\n          description: The URL of the video linked to the Sales Instruction\n          type: string\n      type: object\n    SalesInstructionModelResults:\n      description: Holds results from a paged query returning SalesInstructionModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/SalesInstructionModel\"\n          type: array\n      type: object\n    TenancyModel:\n      description: \"Represents a single tenancy on a property structure. This class may\\r\n\n        \\            be considered to be the context of the tenancy\n        strategy pattern. The\\r\n\n        \\            strategy is the tenancy service, that dictates the\n        algorithm applied\\r\n\n        \\            to the tenancy. This class therefore holds the raw\n        data of a tenancy,\\r\n\n        \\            and ignores any tenancy service (fully managed, let\n        only) parameters.\"\n      properties:\n        AdvertiseFrom:\n          description: The date to advertise this tenancy from.\n          format: date-time\n          type: string\n        Area:\n          description: The area containing the instruction.\n          type: string\n        BondRequired:\n          description: The total bond required.\n          format: double\n          type: number\n        Branch:\n          description: The branch the tenancy is assigned to..\n          type: string\n        ETag:\n          description: A unique identifier defining the object and change revision.\n          type: string\n        Furnished:\n          description: The property furnished type.\n          enum:\n            - Unfurnished\n            - PartFurnished\n            - Furnished\n          type: string\n        GlobalReference:\n          description: The global reference for a tenancy.\n          type: string\n        IsShareProperty:\n          description: Is this property a shared property.\n          type: boolean\n        IsStudentProperty:\n          description: Is this property a student property.\n          type: boolean\n        IsTenancyAdvertised:\n          description: \"Gets a value indicating whether this tenancy is being advertised.\n            Note\\r\n\n            \\            that this will only return true while the\n            tenancy has a valid advertise\\r\n\n            \\            date. It will not return true in the\n            proposed phase.\"\n          type: boolean\n        IsTenancyProposed:\n          description: Is the tenancy a proposed tenancy?\n          type: boolean\n        MaximumTenants:\n          description: The maximum number of tenants to advertise for.\n          format: int32\n          type: integer\n        MinimumTenants:\n          description: The minimum number of tenants to advertise for.\n          format: int32\n          type: integer\n        OID:\n          description: The unique Object ID (OID).\n          type: string\n        RentAdvertised:\n          description: The advertised amount of rent for the property.\n          format: double\n          type: number\n        RentRecurrence:\n          description: The rent schedule recurrence\n          format: int32\n          type: integer\n        RentSchedule:\n          description: The tenancy rent schedule\n          enum:\n            - Once\n            - Daily\n            - Weekly\n            - Monthly\n            - Yearly\n          type: string\n        TenancyProperty:\n          description: The property linked to this tenancy.\n          type: string\n        TenantSystemTypes:\n          description: The specific tenant type list, or empty if for all types.\n          items:\n            enum:\n              - Employed\n              - SelfEmployed\n              - Unemployed\n              - Student\n              - OwnMeans\n              - Retired\n              - Company\n              - Council\n            type: string\n          type: array\n        TermMaximum:\n          description: The instruction maximum term.\n          format: int32\n          type: integer\n        TermMinimum:\n          description: The minimum term.\n          format: int32\n          type: integer\n        TermStart:\n          description: The instruction start date.\n          format: date-time\n          type: string\n        UtilityCouncilTax:\n          description: Who's responsible for council tax bills.\n          enum:\n            - Tenant\n            - Landlord\n          type: string\n        UtilityElectricity:\n          description: Who's responsible for electricity bills.\n          enum:\n            - Tenant\n            - Landlord\n          type: string\n        UtilityGas:\n          description: Who's responsible for Gas bills.\n          enum:\n            - Tenant\n            - Landlord\n          type: string\n        UtilityTelephone:\n          description: Who's responsible for telephone bills.\n          enum:\n            - Tenant\n            - Landlord\n          type: string\n        UtilityWater:\n          description: Who's responsible for water bills.\n          enum:\n            - Tenant\n            - Landlord\n          type: string\n      type: object\n    TenancyModelResults:\n      description: Holds results from a paged query returning TenancyModel values\n      properties:\n        Count:\n          description: The total number of results available for all pages\n          format: int32\n          type: integer\n        Data:\n          description: The resulting data returned from the paged query range\n          items:\n            $ref: \"#/components/schemas/TenancyModel\"\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/letmc.com-free-tier-v2-free-tier-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/letmc.com-free-tier-v2-free-tier-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}