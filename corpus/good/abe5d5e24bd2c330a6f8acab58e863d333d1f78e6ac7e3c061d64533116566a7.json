{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InterDigitalInc/AdvantEDGE"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-packages/meep-loc-serv-client/api/swagger.yaml",
			"byteSize": 202637,
			"content": "openapi: 3.0.0\ninfo:\n  title: AdvantEDGE Location Service REST API\n  description: \"Location Service is AdvantEDGE's implementation of [ETSI MEC ISG MEC013\\\n    \\ Location API](http://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/02.01.01_60/gs_mec013v020101p.pdf)\\\n    \\ \u003cp\u003eThe API is based on the Open Mobile Alliance's specification RESTful Network\\\n    \\ API for Zonal Presence \u003cp\u003e[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt)\\\n    \\ \u003cp\u003e**Micro-service**\u003cbr\u003e[meep-loc-serv](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-loc-serv)\\\n    \\ \u003cp\u003e**Type \u0026 Usage**\u003cbr\u003eEdge Service used by edge applications that want to get\\\n    \\ information about Users (UE) and Zone locations \u003cp\u003e**Note**\u003cbr\u003eAdvantEDGE supports\\\n    \\ all of Location API endpoints (see below).\"\n  contact:\n    name: InterDigital AdvantEDGE Support\n    email: AdvantEDGE@InterDigital.com\n  license:\n    name: Apache 2.0\n    url: https://github.com/InterDigitalInc/AdvantEDGE/blob/master/LICENSE\n  version: 2.1.1\nexternalDocs:\n  description: ETSI MEC013 V2.1.1 Location API\n  url: http://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/02.01.01_60/gs_mec013v020101p.pdf\nservers:\n- url: https://localhost/sandboxname/location/v2\ntags:\n- name: location\npaths:\n  /queries/distance:\n    get:\n      tags:\n      - location\n      summary: UE Distance Lookup of a specific UE\n      description: UE Distance Lookup between terminals or a terminal and a location\n      operationId: distanceGET\n      parameters:\n      - name: requester\n        in: query\n        description: Entity that is requesting the information\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        x-exportParamName: Requester\n      - name: address\n        in: query\n        description: \"address of users (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n        x-exportParamName: AddressMandatory\n      - name: latitude\n        in: query\n        description: Latitude geo position\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n          format: float\n        x-exportParamName: Latitude\n      - name: longitude\n        in: query\n        description: Longitude geo position\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: number\n          format: float\n        x-exportParamName: Longitude\n      responses:\n        \"200\":\n          description: Successful response to a distance request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineTerminalDistance'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /queries/users:\n    get:\n      tags:\n      - location\n      summary: UE Location Lookup of a specific UE or group of UEs\n      description: UE Location Lookup of a specific UE or group of UEs\n      operationId: usersGET\n      parameters:\n      - name: zoneId\n        in: query\n        description: Identifier of zone\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n        x-exportParamName: ZoneId\n      - name: accessPointId\n        in: query\n        description: Identifier of access point\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n        x-exportParamName: AccessPointId\n      - name: address\n        in: query\n        description: \"address of users (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: array\n          items:\n            type: string\n        x-exportParamName: Address\n      responses:\n        \"200\":\n          description: Successful response to users request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineUserList'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /queries/zones:\n    get:\n      tags:\n      - location\n      summary: Zones information Lookup\n      description: Used to get a list of identifiers for zones authorized for use\n        by the application.\n      operationId: zonesGET\n      responses:\n        \"200\":\n          description: Successful response to zones request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZoneList'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /queries/zones/{zoneId}:\n    get:\n      tags:\n      - location\n      summary: Zones information Lookup\n      description: Used to get the information for an authorized zone for use by the\n        application.\n      operationId: zonesGetById\n      parameters:\n      - name: zoneId\n        in: path\n        description: Indentifier of zone\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        x-exportParamName: ZoneId\n      responses:\n        \"200\":\n          description: Successful response to an access point Id request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZoneInfo'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /queries/zones/{zoneId}/accessPoints:\n    get:\n      tags:\n      - location\n      summary: Radio Node Location Lookup\n      description: Radio Node Location Lookup to retrieve a list of radio nodes associated\n        to a zone.\n      operationId: apGET\n      parameters:\n      - name: zoneId\n        in: path\n        description: Indentifier of zone\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        x-exportParamName: ZoneId\n      - name: interestRealm\n        in: query\n        description: \"Interest realm of access point (e.g. geographical area, a type\\\n          \\ of industry etc.).\"\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        x-exportParamName: InterestRealm\n      responses:\n        \"200\":\n          description: Successful response to an access point Id request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineAccessPointList'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /queries/zones/{zoneId}/accessPoints/{accessPointId}:\n    get:\n      tags:\n      - location\n      summary: Radio Node Location Lookup\n      description: Radio Node Location Lookup to retrieve a radio node associated\n        to a zone.\n      operationId: apByIdGET\n      parameters:\n      - name: zoneId\n        in: path\n        description: Indentifier of zone\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        x-exportParamName: ZoneId\n      - name: accessPointId\n        in: path\n        description: Identifier of access Point\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n        x-exportParamName: AccessPointId\n      responses:\n        \"200\":\n          description: Successful response to an access point Id request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineAccessPointInfo'\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: queries\n  /subscriptions/area/circle:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to area change notifications\n      description: This operation is used for retrieving all active subscriptions\n        to area change notifications.\n      operationId: areaCircleSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve area subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  circleNotificationSubscription:\n                  - clientCorrelator: \"0123\"\n                    callbackReference:\n                      callbackData: \"1234\"\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    address:\n                    - acr:10.0.0.1\n                    checkImmediate: true\n                    enteringLeavingCriteria: Entering\n                    frequency: 10\n                    latitude: -80.88\n                    longitude: 41.277\n                    radius: 500\n                    trackingAccuracy: 10\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for area change notification\n      description: Creates a subscription to the Location Service for an area change\n        notification.\n      operationId: areaCircleSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineCircleNotificationSubscription'\n            example:\n              circleNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                address:\n                - acr:10.0.0.1\n                checkImmediate: true\n                enteringLeavingCriteria: Entering\n                frequency: 10\n                latitude: -80.88\n                longitude: 41.277\n                radius: 500\n                trackingAccuracy: 10\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineCircleNotificationSubscription'\n              example:\n                circleNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  checkImmediate: true\n                  enteringLeavingCriteria: Entering\n                  frequency: 10\n                  latitude: -80.88\n                  longitude: 41.277\n                  radius: 500\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/circleNotificationSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: circleNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineSubscriptionNotification'\n                    example:\n                      subscriptionNotification:\n                        enteringLeavingCriteria: Entering\n                        isFinalNotification: \"false,\"\n                        link:\n                          rel: CircleNotificationSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/area/circle/sub123\n                        terminalLocation:\n                          address: acr:10.0.0.1\n                          currentLocation:\n                            accuracy: 100\n                            altitude: 1001.0\n                            latitude: -80.86302\n                            longitude: 41.277306\n                            timestamp:\n                              seconds: 1483231138\n                              nanoSeconds\": 0\n                          locationRetrievalStatus: Retrieved\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/area/circle/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: areaCircleSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineCircleNotificationSubscription'\n              example:\n                circleNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  checkImmediate: true\n                  enteringLeavingCriteria: Entering\n                  frequency: 10\n                  latitude: -80.88\n                  longitude: 41.277\n                  radius: 500\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: areaCircleSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineCircleNotificationSubscription'\n            example:\n              circleNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                address:\n                - acr:10.0.0.1\n                checkImmediate: true\n                enteringLeavingCriteria: Entering\n                frequency: 10\n                latitude: -80.88\n                longitude: 41.277\n                radius: 500\n                trackingAccuracy: 10\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineCircleNotificationSubscription'\n              example:\n                circleNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  checkImmediate: true\n                  enteringLeavingCriteria: Entering\n                  frequency: 10\n                  latitude: -80.88\n                  longitude: 41.277\n                  radius: 500\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/area/circle/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: areaCircleSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /subscriptions/distance:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to distance change notifications\n      description: This operation is used for retrieving all active subscriptions\n        to a distance change notifications.\n      operationId: distanceSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve area subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  distanceNotificationSubscription:\n                  - clientCorrelator: \"0123\"\n                    callbackReference:\n                      callbackData: \"1234\"\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    monitoredAddress:\n                    - acr:10.0.0.1\n                    - acr:10.0.0.2\n                    checkImmediate: true\n                    criteria: AllWithinDistance\n                    distance: 100\n                    frequency: 10\n                    referenceAddress:\n                    - acr:10.0.0.3\n                    trackingAccuracy: 10\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/sub123\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for distance change notification\n      description: Creates a subscription to the Location Service for a distance change\n        notification.\n      operationId: distanceSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineDistanceNotificationSubscription'\n            example:\n              distanceNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                monitoredAddress:\n                - acr:10.0.0.1\n                - acr:10.0.0.2\n                checkImmediate: true\n                criteria: AllWithinDistance\n                distance: 100\n                frequency: 10\n                referenceAddress:\n                - acr:10.0.0.3\n                trackingAccuracy: 10\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'\n              example:\n                distanceNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  monitoredAddress:\n                  - acr:10.0.0.1\n                  - acr:10.0.0.2\n                  checkImmediate: true\n                  criteria: AllWithinDistance\n                  distance: 100\n                  frequency: 10\n                  referenceAddress:\n                  - acr:10.0.0.3\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/distanceNotificationSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: distanceNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineSubscriptionNotification'\n                    example:\n                      subscriptionNotification:\n                        distanceCriteria: AllWithinDistance\n                        isFinalNotification: \"false,\"\n                        link:\n                          rel: DistanceNotificationSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/distance/sub123\n                        terminalLocation:\n                        - address: acr:10.0.0.1\n                          currentLocation:\n                            accuracy: 100\n                            altitude: 1001.0\n                            latitude: -80.86302\n                            longitude: 41.277306\n                            timestamp:\n                              seconds: 1483231138\n                              nanoSeconds\": 0\n                          locationRetrievalStatus: Retrieved\n                        - address: acr:10.0.0.2\n                          currentLocation:\n                            accuracy: 100\n                            altitude: 1001.0\n                            latitude: -80.86301\n                            longitude: 41.277306\n                            timestamp:\n                              seconds: 1483231138\n                              nanoSeconds\": 0\n                          locationRetrievalStatus: Retrieved\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/distance/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: distanceSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'\n              example:\n                distanceNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  monitoredAddress:\n                  - acr:10.0.0.1\n                  - acr:10.0.0.2\n                  checkImmediate: true\n                  criteria: AllWithinDistance\n                  distance: 100\n                  frequency: 10\n                  referenceAddress:\n                  - acr:10.0.0.3\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: distanceSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineDistanceNotificationSubscription'\n            example:\n              distanceNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                monitoredAddress:\n                - acr:10.0.0.1\n                - acr:10.0.0.2\n                checkImmediate: true\n                criteria: AllWithinDistance\n                distance: 100\n                frequency: 10\n                referenceAddress:\n                - acr:10.0.0.3\n                trackingAccuracy: 10\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineDistanceNotificationSubscription'\n              example:\n                distanceNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  monitoredAddress:\n                  - acr:10.0.0.1\n                  - acr:10.0.0.2\n                  checkImmediate: true\n                  criteria: AllWithinDistance\n                  distance: 100\n                  frequency: 10\n                  referenceAddress:\n                  - acr:10.0.0.3\n                  trackingAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/distance/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: distanceSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /subscriptions/periodic:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to periodic notifications\n      description: This operation is used for retrieving all active subscriptions\n        to periodic notifications.\n      operationId: periodicSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve area subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  periodicNotificationSubscription:\n                  - clientCorrelator: \"0123\"\n                    callbackReference:\n                      callbackData: \"1234\"\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    address:\n                    - acr:10.0.0.1\n                    frequency: 10\n                    requestedAccuracy: 10\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for periodic notification\n      description: Creates a subscription to the Location Service for a periodic notification.\n      operationId: periodicSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'\n            example:\n              periodicNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                address:\n                - acr:10.0.0.1\n                frequency: 10\n                requestedAccuracy: 10\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'\n              example:\n                periodicNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  frequency: 10\n                  requestedAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/periodicNotificationSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: periodicNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineSubscriptionNotification'\n                    example:\n                      subscriptionNotification:\n                        isFinalNotification: \"false,\"\n                        link:\n                          rel: PeriodicNotificationSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/periodic/sub123\n                        terminalLocation:\n                          address: acr:10.0.0.1\n                          currentLocation:\n                            accuracy: 100\n                            altitude: 1001.0\n                            latitude: -80.86302\n                            longitude: 41.277306\n                            timestamp:\n                              seconds: 1483231138\n                              nanoSeconds\": 0\n                          locationRetrievalStatus: Retrieved\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/periodic/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: periodicSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'\n              example:\n                periodicNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  frequency: 10\n                  requestedAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: periodicSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'\n            example:\n              periodicNotificationSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  callbackData: \"1234\"\n                  notifyURL: http://clientApp.example.com/location_notifications/123456\n                address:\n                - acr:10.0.0.1\n                frequency: 10\n                requestedAccuracy: 10\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlinePeriodicNotificationSubscription'\n              example:\n                periodicNotificationSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    callbackData: \"1234\"\n                    notifyURL: http://clientApp.example.com/location_notifications/123456\n                  address:\n                  - acr:10.0.0.1\n                  frequency: 10\n                  requestedAccuracy: 10\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/periodic/subscription123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: periodicSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /subscriptions/userTracking:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to user tracking notifications\n      description: This operation is used for retrieving all active subscriptions\n        to user tracking notifications.\n      operationId: userTrackingSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve user tracking subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  userTrackingSubscription:\n                  - clientCorrelator: \"0123\"\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/subscription123\n                    callbackReference:\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    address: acr:192.0.2.1\n                    userEventCriteria:\n                    - Transferring\n                  - clientCorrelator: \"0124\"\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/subscription124\n                    callbackReference:\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    address: acr:192.0.2.2\n                    userEventCriteria:\n                    - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for user tracking notification\n      description: Creates a subscription to the Location Service for user tracking\n        change notification.\n      operationId: userTrackingSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineUserTrackingSubscription'\n            example:\n              userTrackingSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                address: acr:10.0.0.1\n                userEventCriteria:\n                - Transferring\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineUserTrackingSubscription'\n              example:\n                userTrackingSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  address: acr:10.0.0.1\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/userTrackingSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: userTrackingNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineZonalPresenceNotification'\n                    example:\n                      zonalPresenceNotification:\n                        clientCorrelator: \"0123\"\n                        zoneId: zone01\n                        address: acr:10.0.0.1\n                        userEventType: Transferring\n                        currentAccessPointId: ap2\n                        previousAccessPointId: ap1\n                        timestamp:\n                          seconds: 1483231138\n                          nanoseconds: 0\n                        link:\n                          rel: UserTrackingSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/userTracking/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: userTrackingSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineUserTrackingSubscription'\n              example:\n                userTrackingSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  address: acr:10.0.0.1\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: userTrackingSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineUserTrackingSubscription'\n            example:\n              userTrackingSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                address: acr:10.0.0.1\n                userEventCriteria:\n                - Transferring\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineUserTrackingSubscription'\n              example:\n                userTrackingSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  address: acr:10.0.0.1\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/userTracking/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: userTrackingSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /subscriptions/zonalTraffic:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to zonal traffic notifications\n      description: This operation is used for retrieving all active subscriptions\n        to zonal traffic change notifications.\n      operationId: zonalTrafficSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve zonal traffic subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  zonalTrafficSubscription:\n                  - clientCorrelator: \"0123\"\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/subscription123\n                    callbackReference:\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    zoneId: zone01\n                    userEventCriteria:\n                    - Transferring\n                  - clientCorrelator: \"0124\"\n                    resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/subscription124\n                    callbackReference:\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    zoneId: zone02\n                    userEventCriteria:\n                    - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for zonal traffic notification\n      description: Creates a subscription to the Location Service for zonal traffic\n        change notification.\n      operationId: zonalTrafficSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineZonalTrafficSubscription'\n            example:\n              zonalTrafficSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                zoneId: zone01\n                userEventCriteria:\n                - Transferring\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZonalTrafficSubscription'\n              example:\n                zonalTrafficSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/zonalTrafficSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: zonalTrafficNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineZonalPresenceNotification'\n                    example:\n                      zonalPresenceNotification:\n                        clientCorrelator: \"0123\"\n                        zoneId: zone01\n                        address: acr:10.0.0.1\n                        userEventType: Transferring\n                        currentAccessPointId: ap2\n                        previousAccessPointId: ap1\n                        timestamp:\n                          seconds: 1483231138\n                          nanoseconds: 0\n                        link:\n                          rel: ZonalTrafficSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/zonalTraffic/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: zonalTrafficSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZonalTrafficSubscription'\n              example:\n                zonalTrafficSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: zonalTrafficSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineZonalTrafficSubscription'\n            example:\n              zonalTrafficSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                zoneId: zone01\n                userEventCriteria:\n                - Transferring\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZonalTrafficSubscription'\n              example:\n                zonalTrafficSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  userEventCriteria:\n                  - Transferring\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zonalTraffic/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: zonalTrafficSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /subscriptions/zoneStatus:\n    get:\n      tags:\n      - location\n      summary: Retrieves all active subscriptions to zone status notifications\n      description: This operation is used for retrieving all active subscriptions\n        to zone status change notifications.\n      operationId: zoneStatusSubListGET\n      responses:\n        \"200\":\n          description: Response to retrieve zone status subscriptions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineNotificationSubscriptionList'\n              example:\n                notificationSubscriptionList:\n                  zoneStatusSubscription:\n                  - clientCorrelator: \"0123\"\n                    resourceURL: http://example.com/exampleAPI/location/v2/subscriptions/zoneStatus/subscription123\n                    callbackReference:\n                      notifyURL: http://clientApp.example.com/location_notifications/123456\n                    zoneId: zone01\n                    numberOfUsersZoneThreshold: 500\n                    operationStatus:\n                    - Serviceable\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus\n    post:\n      tags:\n      - location\n      summary: Creates a subscription for zone status notification\n      description: Creates a subscription to the Location Service for zone status\n        change notification.\n      operationId: zoneStatusSubPOST\n      requestBody:\n        description: Subscription to be created\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineZoneStatusSubscription'\n            example:\n              zoneStatusSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                zoneId: zone01\n                numberOfUsersZoneThreshold: 500\n                operationStatus:\n                - Serviceable\n        required: true\n      responses:\n        \"201\":\n          description: Successful subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZoneStatusSubscription'\n              example:\n                zoneStatusSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  numberOfUsersZoneThreshold: 500\n                  operationStatus:\n                  - Serviceable\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      callbacks:\n        notification:\n          '{$request.body#/zoneStatusSubscription.callbackReference.notifyURL}':\n            post:\n              summary: Callback POST used to send a notification\n              description: \"Notification from Location service, content based on subscription\\\n                \\ type\"\n              operationId: zoneStatusNotificationPOST\n              requestBody:\n                description: Subscription notification\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/InlineZoneStatusNotification'\n                    example:\n                      zoneStatusNotification:\n                        clientCorrelator: \"0123\"\n                        zoneId: zone01\n                        accessPointId: poa1\n                        operationStatus: Serviceable\n                        numberOfUsersInZone: \"20\"\n                        numberOfUsersInAP: \"12\"\n                        timestamp:\n                          seconds: 1483231138\n                          nanoseconds: 0\n                        link:\n                          rel: ZoneStatusSubscription\n                          href: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123\n                required: true\n              responses:\n                \"204\":\n                  description: No Content\n      x-swagger-router-controller: subscriptions\n  /subscriptions/zoneStatus/{subscriptionId}:\n    get:\n      tags:\n      - location\n      summary: Retrieve subscription information\n      description: Get subscription information.\n      operationId: zoneStatusSubGET\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"200\":\n          description: Subscription information regarding subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZoneStatusSubscription'\n              example:\n                zoneStatusSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  numberOfUsersZoneThreshold: 500\n                  operationStatus:\n                  - Serviceable\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    put:\n      tags:\n      - location\n      summary: Updates a subscription information\n      description: Updates a subscription.\n      operationId: zoneStatusSubPUT\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      requestBody:\n        description: Subscription to be modified\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InlineZoneStatusSubscription'\n            example:\n              zoneStatusSubscription:\n                clientCorrelator: \"0123\"\n                callbackReference:\n                  notifyURL: http://my.callback.com/location_notifications/some-id\n                zoneId: zone01\n                numberOfUsersZoneThreshold: 500\n                operationStatus:\n                - Serviceable\n                resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123\n        required: true\n      responses:\n        \"200\":\n          description: Successful subscription to response to subscription notifications\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InlineZoneStatusSubscription'\n              example:\n                zoneStatusSubscription:\n                  clientCorrelator: \"0123\"\n                  callbackReference:\n                    notifyURL: http://my.callback.com/location_notifications/some-id\n                  zoneId: zone01\n                  numberOfUsersZoneThreshold: 500\n                  operationStatus:\n                  - Serviceable\n                  resourceURL: http://meAppServer.example.com/location/v2/subscriptions/zoneStatus/sub123\n        \"400\":\n          description: \"Bad Request : used to indicate that incorrect parameters were\\\n            \\ passed to the request.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"406\":\n          description: \"Not Acceptable : used to indicate that the server cannot provide\\\n            \\ the any of the content formats supported by the client.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"412\":\n          description: \"Precondition failed :  used when a condition has failed during\\\n            \\ conditional requests, e.g. when using ETags to avoid write conflicts\\\n            \\ when using PUT\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"422\":\n          description: \"Unprocessable Entity : used to indicate that the server understands\\\n            \\ the content type of the request entity and that the syntax of the request\\\n            \\ entity is correct but that the server is unable to process the contained\\\n            \\ instructions. This error condition can occur if an JSON request body\\\n            \\ is syntactically correct but semantically incorrect, for example if\\\n            \\ the target area for the request is considered too large. This error\\\n            \\ condition can also occur if the capabilities required by the request\\\n            \\ are not supported.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n              example:\n                application/problem+json:\n                  ProblemDetails:\n                    type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                    title: Too many targets\n                    status: \"422\"\n                    detail: The target area for the request is considered too large\n                    instance: /meAppClient.example.com/77777/msgs/abc\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n    delete:\n      tags:\n      - location\n      summary: Cancel a subscription\n      description: Method to delete a subscription.\n      operationId: zoneStatusSubDELETE\n      parameters:\n      - name: subscriptionId\n        in: path\n        description: \"Subscription Identifier, specifically the \\\"self\\\" returned\\\n          \\ in the subscription request\"\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uri\n        x-exportParamName: SubscriptionId\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: \"Unauthorized :  used when the client did not submit credentials.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"403\":\n          description: \"Forbidden :  operation is not allowed given the current status\\\n            \\ of the resource.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"404\":\n          description: \"Not Found :  used when a client provided a URI that cannot\\\n            \\ be mapped to a valid resource URI.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n        \"429\":\n          description: \"Too Many Requests : used when a rate limiter has triggered.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProblemDetails'\n      x-swagger-router-controller: subscriptions\n  /notifications/mec011/appTermination:\n    post:\n      tags:\n      - location\n      summary: MEC011 Application Termination notification for self termination\n      description: Terminates itself.\n      operationId: mec011AppTerminationPOST\n      requestBody:\n        description: Termination notification details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppTerminationNotification'\n            example:\n              notificationType: AppTerminationNotification\n              operationAction: TERMINATING\n              maxGracefulTimeout: 10\n              links:\n                subscription:\n                  href: http://mec011Server.example.com/mec_app_support/v1/applications/appId1234/subscriptions/sub123\n                confirmTermination:\n                  href: http://mec011Server.example.com/mec_app_support/v1/confirm_termination\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      x-swagger-router-controller: notifications\ncomponents:\n  schemas:\n    AccessPointInfo:\n      required:\n      - accessPointId\n      - connectionType\n      - numberOfUsers\n      - operationStatus\n      - resourceURL\n      type: object\n      properties:\n        accessPointId:\n          type: string\n          description: Identifier of access point.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n        connectionType:\n          $ref: '#/components/schemas/ConnectionType'\n        interestRealm:\n          type: string\n          description: Interest realm of access point.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        locationInfo:\n          $ref: '#/components/schemas/LocationInfo'\n        numberOfUsers:\n          type: integer\n          description: Number of users currently on the access point.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: integer\n        operationStatus:\n          $ref: '#/components/schemas/OperationStatus'\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        timezone:\n          type: string\n          description: Time zone of access point.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: dateTimeStamp\n      description: A type containing access point information.\n      example:\n        locationInfo:\n          altitude: 5.962134\n          orientationMajorAxis: 4\n          shape: 7\n          confidence: 5\n          latitude:\n          - 9.301444\n          - 9.301444\n          offsetAngle: 2\n          accuracy: 0\n          includedAngle: 2\n          velocity:\n            verticalUncertainty: 4\n            horizontalSpeed: 1\n            bearing: 1\n            uncertainty: 6\n            verticalSpeed: 1\n            velocityType: 7\n          accuracySemiMinor: 1\n          innerRadius: 7\n          accuracyAltitude: 6\n          uncertaintyRadius: 1\n          longitude:\n          - 3.6160767\n          - 3.6160767\n          timestamp:\n            seconds: 5\n            nanoSeconds: 1\n        operationStatus: Serviceable\n        resourceURL: resourceURL\n        numberOfUsers: 0\n        timezone: timezone\n        accessPointId: accessPointId\n        interestRealm: interestRealm\n        connectionType: Femto\n    AccessPointList:\n      required:\n      - resourceURL\n      - zoneId\n      type: object\n      properties:\n        accessPoint:\n          type: array\n          description: Collection of the access point information list.\n          items:\n            $ref: '#/components/schemas/AccessPointInfo'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: AccessPointInfo\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing list of access points.\n      example:\n        resourceURL: resourceURL\n        zoneId: zoneId\n        accessPoint:\n        - locationInfo:\n            altitude: 5.962134\n            orientationMajorAxis: 4\n            shape: 7\n            confidence: 5\n            latitude:\n            - 9.301444\n            - 9.301444\n            offsetAngle: 2\n            accuracy: 0\n            includedAngle: 2\n            velocity:\n              verticalUncertainty: 4\n              horizontalSpeed: 1\n              bearing: 1\n              uncertainty: 6\n              verticalSpeed: 1\n              velocityType: 7\n            accuracySemiMinor: 1\n            innerRadius: 7\n            accuracyAltitude: 6\n            uncertaintyRadius: 1\n            longitude:\n            - 3.6160767\n            - 3.6160767\n            timestamp:\n              seconds: 5\n              nanoSeconds: 1\n          operationStatus: Serviceable\n          resourceURL: resourceURL\n          numberOfUsers: 0\n          timezone: timezone\n          accessPointId: accessPointId\n          interestRealm: interestRealm\n          connectionType: Femto\n        - locationInfo:\n            altitude: 5.962134\n            orientationMajorAxis: 4\n            shape: 7\n            confidence: 5\n            latitude:\n            - 9.301444\n            - 9.301444\n            offsetAngle: 2\n            accuracy: 0\n            includedAngle: 2\n            velocity:\n              verticalUncertainty: 4\n              horizontalSpeed: 1\n              bearing: 1\n              uncertainty: 6\n              verticalSpeed: 1\n              velocityType: 7\n            accuracySemiMinor: 1\n            innerRadius: 7\n            accuracyAltitude: 6\n            uncertaintyRadius: 1\n            longitude:\n            - 3.6160767\n            - 3.6160767\n            timestamp:\n              seconds: 5\n              nanoSeconds: 1\n          operationStatus: Serviceable\n          resourceURL: resourceURL\n          numberOfUsers: 0\n          timezone: timezone\n          accessPointId: accessPointId\n          interestRealm: interestRealm\n          connectionType: Femto\n    CallbackReference:\n      required:\n      - notifyURL\n      type: object\n      properties:\n        callbackData:\n          type: string\n          description: \"Data the application can register with the server when subscribing\\\n            \\ to notifications, and that are passed back unchanged in each of the\\\n            \\ related notifications. These data can be used by the application in\\\n            \\ the processing of the notification, e.g. for correlation purposes.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        notificationFormat:\n          $ref: '#/components/schemas/NotificationFormat'\n        notifyURL:\n          type: string\n          description: Notify Callback URL\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: anyURI\n      example:\n        notificationFormat: XML\n        callbackData: callbackData\n        notifyURL: notifyURL\n    CircleNotificationSubscription:\n      required:\n      - address\n      - callbackReference\n      - checkImmediate\n      - enteringLeavingCriteria\n      - frequency\n      - latitude\n      - longitude\n      - radius\n      - trackingAccuracy\n      type: object\n      properties:\n        address:\n          type: array\n          description: \"Address of terminals to monitor (e.g. \\\"sip\\\" URI, \\\"tel\\\"\\\n            \\ URI, \\\"acr\\\" URI)\"\n          items:\n            type: string\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: anyURI\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        checkImmediate:\n          type: boolean\n          description: Check location immediately after establishing notification.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: boolean\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        count:\n          type: integer\n          description: \"Maximum number of notifications per individual address. For\\\n            \\ no maximum, either do not include this element or specify a value of\\\n            \\ zero. Default value is 0.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: int\n        duration:\n          type: integer\n          description: \"Period of time (in seconds) notifications are provided for.\\\n            \\ If set to “0” (zero), a default duration time, which is specified by\\\n            \\ the service policy, will be used. If the parameter is omitted, the notifications\\\n            \\ will continue until the maximum duration time, which is specified by\\\n            \\ the service policy, unless the notifications are stopped by deletion\\\n            \\ of subscription for notifications.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: int\n        enteringLeavingCriteria:\n          $ref: '#/components/schemas/EnteringLeavingCriteria'\n        frequency:\n          type: integer\n          description: Maximum frequency (in seconds) of notifications per subscription\n            (can also be considered minimum time between notifications).\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: int\n        latitude:\n          type: number\n          description: Latitude of center point.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n        link:\n          type: array\n          description: Link to other resources that are in relationship with the resource.\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        longitude:\n          type: number\n          description: Longitude of center point.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n        radius:\n          type: number\n          description: Radius circle around center point in meters.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n        requester:\n          type: string\n          description: \"Identifies the entity that is requesting the information (e.g.\\\n            \\ \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        trackingAccuracy:\n          type: number\n          description: Number of meters of acceptable error in tracking distance.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n      description: \"A type containing data for notifications, when the area is defined\\\n        \\ as a circle.\"\n      example:\n        requester: requester\n        trackingAccuracy: 7.0614014\n        address:\n        - address\n        - address\n        callbackReference:\n          notificationFormat: XML\n          callbackData: callbackData\n          notifyURL: notifyURL\n        latitude: 5.962134\n        count: 0\n        link:\n        - rel: rel\n          href: href\n        - rel: rel\n          href: href\n        frequency: 1\n        duration: 6\n        enteringLeavingCriteria: Entering\n        resourceURL: resourceURL\n        clientCorrelator: clientCorrelator\n        checkImmediate: true\n        radius: 2.302136\n        longitude: 5.637377\n    ConnectionType:\n      type: string\n      description: The connection type for the access point\n      enum:\n      - Femto\n      - LTE-femto\n      - Smallcell\n      - LTE-smallcell\n      - Wifi\n      - Pico\n      - Micro\n      - Macro\n      - Wimax\n      - Unknown\n    DistanceCriteria:\n      type: string\n      enum:\n      - AllWithinDistance\n      - AnyWithinDistance\n      - AllBeyondDistance\n      - AnyBeyondDistance\n    DistanceNotificationSubscription:\n      required:\n      - callbackReference\n      - checkImmediate\n      - criteria\n      - distance\n      - frequency\n      - monitoredAddress\n      - trackingAccuracy\n      type: object\n      properties:\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        checkImmediate:\n          type: boolean\n          description: Check location immediately after establishing notification.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: boolean\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        count:\n          type: integer\n          description: \"Maximum number of notifications per individual address. For\\\n            \\ no maximum, either do not include this element or specify a value of\\\n            \\ zero. Default value is 0.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: int\n        criteria:\n          $ref: '#/components/schemas/DistanceCriteria'\n        distance:\n          type: number\n          description: Distance between devices that shall be monitored.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n        duration:\n          type: integer\n          description: \"Period of time (in seconds) notifications are provided for.\\\n            \\ If set to “0” (zero), a default duration time, which is specified by\\\n            \\ the service policy, will be used. If the parameter is omitted, the notifications\\\n            \\ will continue until the maximum duration time, which is specified by\\\n            \\ the service policy, unless the notifications are stopped by deletion\\\n            \\ of subscription for notifications.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: int\n        frequency:\n          type: integer\n          description: Maximum frequency (in seconds) of notifications per subscription\n            (can also be considered minimum time between notifications).\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: int\n        link:\n          type: array\n          description: Link to other resources that are in relationship with the resource.\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        monitoredAddress:\n          type: array\n          description: \"Contains addresses of devices to monitor (e.g., 'sip' URI,\\\n            \\ 'tel' URI, 'acr' URI)\"\n          items:\n            type: string\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: anyURI\n        referenceAddress:\n          type: array\n          description: \"Indicates address of each device that will be used as reference\\\n            \\ devices from which the distances towards monitored devices indicated\\\n            \\ in the Addresses will be monitored (e.g., 'sip' URI, 'tel' URI, 'acr'\\\n            \\ URI)\"\n          items:\n            type: string\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: anyURI\n        requester:\n          type: string\n          description: \"Identifies the entity that is requesting the information (e.g.\\\n            \\ \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        trackingAccuracy:\n          type: number\n          description: Number of meters of acceptable error in tracking distance.\n          format: float\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: float\n      description: \"A type containing data for distance subscription, with reference\\\n        \\ to other devices.\"\n      example:\n        requester: requester\n        trackingAccuracy: 7.386282\n        distance: 3.6160767\n        callbackReference: null\n        criteria: AllWithinDistance\n        count: 9\n        link:\n        - null\n        - null\n        frequency: 4\n        duration: 2\n        monitoredAddress:\n        - monitoredAddress\n        - monitoredAddress\n        referenceAddress:\n        - referenceAddress\n        - referenceAddress\n        resourceURL: resourceURL\n        clientCorrelator: clientCorrelator\n        checkImmediate: true\n    EnteringLeavingCriteria:\n      type: string\n      enum:\n      - Entering\n      - Leaving\n    Link:\n      required:\n      - href\n      - rel\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI\n          format: anyURI\n        rel:\n          type: string\n          description: Describes the relationship between the URI and the resource.\n      description: Link to other resources\n      example:\n        rel: rel\n        href: href\n    LocationInfo:\n      required:\n      - latitude\n      - longitude\n      - shape\n      type: object\n      properties:\n        accuracy:\n          type: integer\n          description: \"Horizontal accuracy / (semi-major) uncertainty of location\\\n            \\ provided in meters, as defined in [14]. Present only if \\\"shape\\\" equals\\\n            \\ 4, 5 or 6\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        accuracyAltitude:\n          type: integer\n          description: \"Altitude accuracy / uncertainty of location provided in meters,\\\n            \\ as defined in [14]. Present only if \\\"shape\\\" equals 3 or 4\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        accuracySemiMinor:\n          type: integer\n          description: \"Horizontal accuracy / (semi-major) uncertainty of location\\\n            \\ provided in meters, as defined in [14]. Present only if \\\"shape\\\" equals\\\n            \\ 4, 5 or 6\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        altitude:\n          type: number\n          description: Location altitude relative to the WGS84 ellipsoid surface.\n          format: float\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: Float\n        confidence:\n          type: integer\n          description: \"Confidence by which the position of a target entity is known\\\n            \\ to be within the shape description, expressed as a percentage and defined\\\n            \\ in [14]. Present only if \\\"shape\\\" equals 1, 4 or 6\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        includedAngle:\n          type: integer\n          description: Present only if \"shape\" equals 6\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        innerRadius:\n          type: integer\n          description: Present only if \"shape\" equals 6\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        latitude:\n          minItems: 1\n          type: array\n          description: \"Location latitude, expressed in the range -90° to +90°. Cardinality\\\n            \\ greater than one only if \\\"shape\\\" equals 7.\"\n          items:\n            type: number\n            format: float\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: Float\n        longitude:\n          minItems: 1\n          type: array\n          description: \"Location longitude, expressed in the range -180° to +180°\\\n            . Cardinality greater than one only if \\\"shape\\\" equals 7.\"\n          items:\n            type: number\n            format: float\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: Float\n        offsetAngle:\n          type: integer\n          description: Present only if \"shape\" equals 6\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        orientationMajorAxis:\n          type: integer\n          description: \"Angle of orientation of the major axis, expressed in the range\\\n            \\ 0° to 180°, as defined in [14]. Present only if \\\"shape\\\" equals 4 or\\\n            \\ 6\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        shape:\n          type: integer\n          description: \"Shape information, as detailed in [14], associated with the\\\n            \\ reported location coordinate: \u003cp\u003e1 = ELLIPSOID_ARC \u003cp\u003e2 = ELLIPSOID_POINT\\\n            \\ \u003cp\u003e3 = ELLIPSOID_POINT_ALTITUDE \u003cp\u003e4 = ELLIPSOID_POINT_ALTITUDE_UNCERT_ELLIPSOID\\\n            \\ \u003cp\u003e5 = ELLIPSOID_POINT_UNCERT_CIRCLE \u003cp\u003e6 = ELLIPSOID_POINT_UNCERT_ELLIPSE\\\n            \\ \u003cp\u003e7 = POLYGON\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Enum_inlined\n        timestamp:\n          $ref: '#/components/schemas/TimeStamp'\n        uncertaintyRadius:\n          type: integer\n          description: Present only if \"shape\" equals 6\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        velocity:\n          $ref: '#/components/schemas/LocationInfo_velocity'\n      example:\n        altitude: 5.962134\n        orientationMajorAxis: 4\n        shape: 7\n        confidence: 5\n        latitude:\n        - 9.301444\n        - 9.301444\n        offsetAngle: 2\n        accuracy: 0\n        includedAngle: 2\n        velocity:\n          verticalUncertainty: 4\n          horizontalSpeed: 1\n          bearing: 1\n          uncertainty: 6\n          verticalSpeed: 1\n          velocityType: 7\n        accuracySemiMinor: 1\n        innerRadius: 7\n        accuracyAltitude: 6\n        uncertaintyRadius: 1\n        longitude:\n        - 3.6160767\n        - 3.6160767\n        timestamp:\n          seconds: 5\n          nanoSeconds: 1\n      x-etsi-ref: 6.5.3\n    NotificationFormat:\n      type: string\n      enum:\n      - XML\n      - JSON\n    NotificationSubscriptionList:\n      required:\n      - resourceURL\n      type: object\n      properties:\n        circleNotificationSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of CircleNotificationSubscription elements, see\\\n            \\ note 2.\"\n          items:\n            $ref: '#/components/schemas/CircleNotificationSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: CircleNotificationSubscription\n        distanceNotificationSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of DistanceNotificationSubscription elements, see\\\n            \\ note 2.\"\n          items:\n            $ref: '#/components/schemas/DistanceNotificationSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: DistanceNotificationSubscription\n        periodicNotificationSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of PeriodicNotificationSubscription elements, see\\\n            \\ note 2.\"\n          items:\n            $ref: '#/components/schemas/PeriodicNotificationSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: PeriodicNotificationSubscription\n        resourceURL:\n          type: string\n          description: \"Self-referring URL, see note 1.\"\n          format: uri\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: AnyURI\n        userTrackingSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of UserTrackingSubscription elements, see note\\\n            \\ 1.\"\n          items:\n            $ref: '#/components/schemas/UserTrackingSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: UserTrackingSubscription\n        zonalTrafficSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of ZonalTrafficSubscription elements, see note\\\n            \\ 1.\"\n          items:\n            $ref: '#/components/schemas/ZonalTrafficSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: ZonalTrafficSubscription\n        zoneStatusSubscription:\n          minItems: 0\n          type: array\n          description: \"Collection of ZoneStatusSubscription elements, see note 1.\"\n          items:\n            $ref: '#/components/schemas/ZoneStatusSubscription'\n          x-etsi-mec-cardinality: 0.. N\n          x-etsi-mec-origin-type: ZoneStatusSubscription\n      example:\n        distanceNotificationSubscription:\n        - requester: requester\n          trackingAccuracy: 7.386282\n          distance: 3.6160767\n          callbackReference: null\n          criteria: AllWithinDistance\n          count: 9\n          link:\n          - null\n          - null\n          frequency: 4\n          duration: 2\n          monitoredAddress:\n          - monitoredAddress\n          - monitoredAddress\n          referenceAddress:\n          - referenceAddress\n          - referenceAddress\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n        - requester: requester\n          trackingAccuracy: 7.386282\n          distance: 3.6160767\n          callbackReference: null\n          criteria: AllWithinDistance\n          count: 9\n          link:\n          - null\n          - null\n          frequency: 4\n          duration: 2\n          monitoredAddress:\n          - monitoredAddress\n          - monitoredAddress\n          referenceAddress:\n          - referenceAddress\n          - referenceAddress\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n        circleNotificationSubscription:\n        - requester: requester\n          trackingAccuracy: 7.0614014\n          address:\n          - address\n          - address\n          callbackReference:\n            notificationFormat: XML\n            callbackData: callbackData\n            notifyURL: notifyURL\n          latitude: 5.962134\n          count: 0\n          link:\n          - rel: rel\n            href: href\n          - rel: rel\n            href: href\n          frequency: 1\n          duration: 6\n          enteringLeavingCriteria: Entering\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n          radius: 2.302136\n          longitude: 5.637377\n        - requester: requester\n          trackingAccuracy: 7.0614014\n          address:\n          - address\n          - address\n          callbackReference:\n            notificationFormat: XML\n            callbackData: callbackData\n            notifyURL: notifyURL\n          latitude: 5.962134\n          count: 0\n          link:\n          - rel: rel\n            href: href\n          - rel: rel\n            href: href\n          frequency: 1\n          duration: 6\n          enteringLeavingCriteria: Entering\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n          radius: 2.302136\n          longitude: 5.637377\n        resourceURL: http://example.com/aeiou\n        userTrackingSubscription:\n        - address: address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          userEventCriteria:\n          - Entering\n          - Entering\n        - address: address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          userEventCriteria:\n          - Entering\n          - Entering\n        zonalTrafficSubscription:\n        - duration: 6\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          interestRealm:\n          - interestRealm\n          - interestRealm\n          userEventCriteria:\n          - null\n          - null\n        - duration: 6\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          interestRealm:\n          - interestRealm\n          - interestRealm\n          userEventCriteria:\n          - null\n          - null\n        zoneStatusSubscription:\n        - operationStatus:\n          - Serviceable\n          - Serviceable\n          numberOfUsersAPThreshold: 7\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          numberOfUsersZoneThreshold: 1\n        - operationStatus:\n          - Serviceable\n          - Serviceable\n          numberOfUsersAPThreshold: 7\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          numberOfUsersZoneThreshold: 1\n        periodicNotificationSubscription:\n        - duration: 1\n          requester: requester\n          address:\n          - address\n          - address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          link:\n          - null\n          - null\n          frequency: 1\n          requestedAccuracy: 1\n        - duration: 1\n          requester: requester\n          address:\n          - address\n          - address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          link:\n          - null\n          - null\n          frequency: 1\n          requestedAccuracy: 1\n      x-etsi-notes: \"NOTE 1:\\tAs specified in [5], clause 5.2.2.8.\\nNOTE 2: \\tAs specified\\\n        \\ in [6], clause 5.2.2.7.\"\n      x-etsi-ref: 6.3.3\n    OperationStatus:\n      type: string\n      enum:\n      - Serviceable\n      - Unserviceable\n      - Unknown\n    PeriodicNotificationSubscription:\n      required:\n      - address\n      - callbackReference\n      - frequency\n      - requestedAccuracy\n      type: object\n      properties:\n        address:\n          type: array\n          description: \"Address of terminals to monitor (e.g. \\\"sip\\\" URI, \\\"tel\\\"\\\n            \\ URI, \\\"acr\\\" URI)\"\n          items:\n            type: string\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: anyURI\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        duration:\n          type: integer\n          description: \"Period of time (in seconds) notifications are provided for.\\\n            \\ If set to “0” (zero), a default duration time, which is specified by\\\n            \\ the service policy, will be used. If the parameter is omitted, the notifications\\\n            \\ will continue until the maximum duration time, which is specified by\\\n            \\ the service policy, unless the notifications are stopped by deletion\\\n            \\ of subscription for notifications.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: int\n        frequency:\n          type: integer\n          description: Maximum frequency (in seconds) of notifications (can also be\n            considered minimum time between notifications) per subscription.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: int\n        link:\n          type: array\n          description: Link to other resources that are in relationship with the resource.\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        requestedAccuracy:\n          type: integer\n          description: Accuracy of the provided distance in meters.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: int\n        requester:\n          type: string\n          description: \"Identifies the entity that is requesting the information (e.g.\\\n            \\ \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n      description: A type containing data for periodic subscription.\n      example:\n        duration: 1\n        requester: requester\n        address:\n        - address\n        - address\n        resourceURL: resourceURL\n        callbackReference: null\n        clientCorrelator: clientCorrelator\n        link:\n        - null\n        - null\n        frequency: 1\n        requestedAccuracy: 1\n    ProblemDetails:\n      type: object\n      properties:\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of\n            the problem\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: String\n        instance:\n          type: string\n          description: A URI reference that identifies the specific occurrence of\n            the problem\n          format: uri\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: URI\n        status:\n          type: integer\n          description: The HTTP status code for this occurrence of the problem\n          format: uint32\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: Uint32\n        title:\n          type: string\n          description: \"A short, human-readable summary of the problem type\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: String\n        type:\n          type: string\n          description: A URI reference according to IETF RFC 3986 that identifies\n            the problem type\n          format: uri\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: URI\n    RetrievalStatus:\n      type: string\n      enum:\n      - Retrieved\n      - NotRetrieved\n      - Error\n    ServiceError:\n      required:\n      - messageId\n      - text\n      type: object\n      properties:\n        messageId:\n          type: string\n          description: \"Message identifier, either with prefix SVC or with prefix\\\n            \\ POL\"\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n        text:\n          type: string\n          description: \"Message text, with replacement variables marked with %n, where\\\n            \\ n is an index into the list of \u003cvariables\u003e elements, starting at 1\"\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n        variables:\n          type: array\n          description: Variables to substitute into text string\n          items:\n            type: string\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: string\n      description: used to indicate a notification termination or cancellation.\n    SubscriptionCancellationNotification:\n      required:\n      - terminalLocation\n      type: object\n      properties:\n        address:\n          type: string\n          description: Address of terminal if the error applies to an individual terminal.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        callbackData:\n          type: string\n          description: CallbackData if passed by the application in the receiptRequest\n            element during the associated subscription operation\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        link:\n          type: array\n          description: Link to other resources that are in relationship with the resource.\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        reason:\n          $ref: '#/components/schemas/ServiceError'\n      description: A type containing the subscription cancellation notification.\n    SubscriptionNotification:\n      required:\n      - terminalLocation\n      type: object\n      properties:\n        callbackData:\n          type: string\n          description: CallbackData if passed by the application in the receiptRequest\n            element during the associated subscription operation\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        distanceCriteria:\n          $ref: '#/components/schemas/DistanceCriteria'\n        enteringLeavingCriteria:\n          $ref: '#/components/schemas/EnteringLeavingCriteria'\n        isFinalNotification:\n          type: boolean\n          description: Set to true if it is a final notification about location change.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: boolean\n        link:\n          type: array\n          description: Link to other resources that are in relationship with the resource.\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        terminalLocation:\n          type: array\n          description: Collection of the terminal locations.\n          items:\n            $ref: '#/components/schemas/TerminalLocation'\n          x-etsi-mec-cardinality: 1..N\n          x-etsi-mec-origin-type: TerminalLocation\n      description: A type containing the notification subscription.\n    TerminalDistance:\n      required:\n      - distance\n      type: object\n      properties:\n        accuracy:\n          type: integer\n          description: Accuracy of the provided distance in meters\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: integer\n        distance:\n          type: integer\n          description: Distance from terminal to a location or between two terminals\n            specified in meters\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: integer\n        timestamp:\n          $ref: '#/components/schemas/TimeStamp'\n      description: \"A type containing information about the distance from a terminal\\\n        \\ to a location or between two terminals, in addition the accuracy and a timestamp\\\n        \\ of the information are provided.\"\n      example:\n        distance: 6\n        accuracy: 0\n        timestamp:\n          seconds: 5\n          nanoSeconds: 1\n    TerminalLocation:\n      required:\n      - address\n      - locationRetrievalStatus\n      type: object\n      properties:\n        address:\n          type: string\n          description: \"Address of the terminal to which the location information\\\n            \\ applies (e.g., 'sip' URI, 'tel' URI, 'acr' URI).\"\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        currentLocation:\n          $ref: '#/components/schemas/LocationInfo'\n        errorInformation:\n          $ref: '#/components/schemas/ServiceError'\n        locationRetrievalStatus:\n          $ref: '#/components/schemas/RetrievalStatus'\n      description: \"A type containing device address, retrieval status and location\\\n        \\ information.\"\n    TerminalLocationList:\n      type: array\n      description: Collection of the terminal locations.\n      items:\n        $ref: '#/components/schemas/TerminalLocation'\n      x-etsi-mec-cardinality: 1..N\n      x-etsi-mec-origin-type: TerminalLocation\n    TimeStamp:\n      required:\n      - nanoSeconds\n      - seconds\n      type: object\n      properties:\n        nanoSeconds:\n          type: integer\n          description: \"The nanoseconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC.\"\n          format: int32\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Uint32\n        seconds:\n          type: integer\n          description: \"The seconds part of the time. Time is defined as Unix-time\\\n            \\ since January 1, 1970, 00:00:00 UTC.\"\n          format: int32\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Uint32\n      example:\n        seconds: 5\n        nanoSeconds: 1\n      x-etsi-ref: 6.5.2\n    UserEventType:\n      type: string\n      enum:\n      - Entering\n      - Leaving\n      - Transferring\n    UserInfo:\n      required:\n      - accessPointId\n      - address\n      - resourceURL\n      - timestamp\n      - zoneId\n      type: object\n      properties:\n        accessPointId:\n          type: string\n          description: \"The identity of the access point the user is currently on,\\\n            \\ see note 1.\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: String\n        address:\n          type: string\n          description: \"Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI) currently\\\n            \\ on the access point, see note 1.\"\n          format: uri\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: AnyURI\n        ancillaryInfo:\n          type: string\n          description: Reserved for future use.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: String\n        contextLocationInfo:\n          type: string\n          description: \"Contextual information of a user location (e.g. aisle, floor,\\\n            \\ room number, etc.).\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: String\n        locationInfo:\n          $ref: '#/components/schemas/LocationInfo'\n        resourceURL:\n          type: string\n          description: \"Self-referring URL, see note 1.\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: String\n        timestamp:\n          $ref: '#/components/schemas/TimeStamp'\n        zoneId:\n          type: string\n          description: \"The identity of the zone the user is currently within, see\\\n            \\ note 1.\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: String\n      example:\n        locationInfo:\n          altitude: 5.962134\n          orientationMajorAxis: 4\n          shape: 7\n          confidence: 5\n          latitude:\n          - 9.301444\n          - 9.301444\n          offsetAngle: 2\n          accuracy: 0\n          includedAngle: 2\n          velocity:\n            verticalUncertainty: 4\n            horizontalSpeed: 1\n            bearing: 1\n            uncertainty: 6\n            verticalSpeed: 1\n            velocityType: 7\n          accuracySemiMinor: 1\n          innerRadius: 7\n          accuracyAltitude: 6\n          uncertaintyRadius: 1\n          longitude:\n          - 3.6160767\n          - 3.6160767\n          timestamp:\n            seconds: 5\n            nanoSeconds: 1\n        address: http://example.com/aeiou\n        resourceURL: resourceURL\n        accessPointId: accessPointId\n        zoneId: zoneId\n        ancillaryInfo: ancillaryInfo\n        contextLocationInfo: contextLocationInfo\n        timestamp: null\n      x-etsi-notes: \"NOTE 1:\\tAs specified in [5], clause 5.2.2.7.\\nNOTE 2: \\tAs specified\\\n        \\ in [5], clause 5.2.2.5.\"\n      x-etsi-ref: 6.2.2\n    UserList:\n      required:\n      - resourceURL\n      type: object\n      properties:\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        user:\n          type: array\n          description: Collection of the zone information list.\n          items:\n            $ref: '#/components/schemas/UserInfo'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: UserInfo\n      description: A type containing list of users.\n      example:\n        resourceURL: resourceURL\n        user:\n        - locationInfo:\n            altitude: 5.962134\n            orientationMajorAxis: 4\n            shape: 7\n            confidence: 5\n            latitude:\n            - 9.301444\n            - 9.301444\n            offsetAngle: 2\n            accuracy: 0\n            includedAngle: 2\n            velocity:\n              verticalUncertainty: 4\n              horizontalSpeed: 1\n              bearing: 1\n              uncertainty: 6\n              verticalSpeed: 1\n              velocityType: 7\n            accuracySemiMinor: 1\n            innerRadius: 7\n            accuracyAltitude: 6\n            uncertaintyRadius: 1\n            longitude:\n            - 3.6160767\n            - 3.6160767\n            timestamp:\n              seconds: 5\n              nanoSeconds: 1\n          address: http://example.com/aeiou\n          resourceURL: resourceURL\n          accessPointId: accessPointId\n          zoneId: zoneId\n          ancillaryInfo: ancillaryInfo\n          contextLocationInfo: contextLocationInfo\n          timestamp: null\n        - locationInfo:\n            altitude: 5.962134\n            orientationMajorAxis: 4\n            shape: 7\n            confidence: 5\n            latitude:\n            - 9.301444\n            - 9.301444\n            offsetAngle: 2\n            accuracy: 0\n            includedAngle: 2\n            velocity:\n              verticalUncertainty: 4\n              horizontalSpeed: 1\n              bearing: 1\n              uncertainty: 6\n              verticalSpeed: 1\n              velocityType: 7\n            accuracySemiMinor: 1\n            innerRadius: 7\n            accuracyAltitude: 6\n            uncertaintyRadius: 1\n            longitude:\n            - 3.6160767\n            - 3.6160767\n            timestamp:\n              seconds: 5\n              nanoSeconds: 1\n          address: http://example.com/aeiou\n          resourceURL: resourceURL\n          accessPointId: accessPointId\n          zoneId: zoneId\n          ancillaryInfo: ancillaryInfo\n          contextLocationInfo: contextLocationInfo\n          timestamp: null\n    UserTrackingSubscription:\n      required:\n      - address\n      - callbackReference\n      type: object\n      properties:\n        address:\n          type: string\n          description: \"Address of user (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\\\n            \\ to monitor\"\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        userEventCriteria:\n          type: array\n          description: \"List of user event values to generate notifications for (these\\\n            \\ apply to address specified). If this element is missing, a notification\\\n            \\ is requested to be generated for any change in user event.\"\n          items:\n            $ref: '#/components/schemas/UserEventType'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: UserEventType\n      description: A type containing user tracking subscription.\n      example:\n        address: address\n        resourceURL: resourceURL\n        callbackReference: null\n        clientCorrelator: clientCorrelator\n        userEventCriteria:\n        - Entering\n        - Entering\n    ZonalPresenceNotification:\n      required:\n      - address\n      - currentAccessPointId\n      - timestamp\n      - userEventType\n      - zoneId\n      type: object\n      properties:\n        address:\n          type: string\n          description: \"Address of user (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\\\n            \\ to monitor\"\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        callbackData:\n          type: string\n          description: \"CallBackData if passed by the application during the associated\\\n            \\ ZonalTrafficSubscription and UserTrackingSubscription operation. See\\\n            \\ [REST_NetAPI_Common].\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        currentAccessPointId:\n          type: string\n          description: Identifier of access point.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n        interestRealm:\n          type: string\n          description: \"Interest realm of access point (e.g. geographical area, a\\\n            \\ type of industry etc.).\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        link:\n          type: array\n          description: Link to other resources that are in relationship with this\n            notification. The server SHOULD include a link to the related subscription.\n            No other links are required or suggested by this specification\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        previousAccessPointId:\n          type: string\n          description: Identifier of access point.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        timestamp:\n          $ref: '#/components/schemas/TimeStamp'\n        userEventType:\n          $ref: '#/components/schemas/UserEventType'\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing zonal presence notification\n    ZonalTrafficSubscription:\n      required:\n      - callbackReference\n      - zoneId\n      type: object\n      properties:\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        duration:\n          type: integer\n          description: \"Period (in seconds) of time notifications are provided for.\\\n            \\ If set to \\\"0\\\" (zero), a default duration time, which is specified\\\n            \\ by the service policy, will be used. If the parameter is omitted, the\\\n            \\ notifications will continue until the maximum duration time, which is\\\n            \\ specified by the service policy, unless the notifications are stopped\\\n            \\ by deletion of subscription for notifications. This element MAY be given\\\n            \\ by the client during resource creation in order to signal the desired\\\n            \\ lifetime of the subscription. The server MUST return in this element\\\n            \\ the   period of time for which the subscription will still be valid.\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: unsignedInt\n        interestRealm:\n          type: array\n          description: \"Interest realm of access point (e.g. geographical area, a\\\n            \\ type of industry etc.).\"\n          items:\n            type: string\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: string\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        userEventCriteria:\n          type: array\n          description: \"List of user event values to generate notifications for (these\\\n            \\ apply to zone identifier or all interest realms within zone identifier\\\n            \\ specified). If this element is missing, a notification is requested\\\n            \\ to be generated for any change in user event.\"\n          items:\n            $ref: '#/components/schemas/UserEventType'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: UserEventType\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing zonal traffic subscription\n      example:\n        duration: 6\n        resourceURL: resourceURL\n        callbackReference: null\n        clientCorrelator: clientCorrelator\n        zoneId: zoneId\n        interestRealm:\n        - interestRealm\n        - interestRealm\n        userEventCriteria:\n        - null\n        - null\n    ZoneInfo:\n      required:\n      - numberOfAccessPoints\n      - numberOfUnserviceableAccessPoints\n      - numberOfUsers\n      - resourceURL\n      - zoneId\n      type: object\n      properties:\n        numberOfAccessPoints:\n          type: integer\n          description: The number of access points within the zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: unsignedInt\n        numberOfUnserviceableAccessPoints:\n          type: integer\n          description: Number of inoperable access points within the zone.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: unsignedInt\n        numberOfUsers:\n          type: integer\n          description: The number of users currently on the access point.\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: unsignedInt\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing zone information.\n      example:\n        resourceURL: resourceURL\n        numberOfUsers: 1\n        zoneId: zoneId\n        numberOfAccessPoints: 0\n        numberOfUnserviceableAccessPoints: 6\n    ZoneList:\n      required:\n      - resourceURL\n      type: object\n      properties:\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: anyURI\n        zone:\n          type: array\n          description: Collection of the zone information list.\n          items:\n            $ref: '#/components/schemas/ZoneInfo'\n      description: A type containing a list of zones.\n      example:\n        resourceURL: resourceURL\n        zone:\n        - resourceURL: resourceURL\n          numberOfUsers: 1\n          zoneId: zoneId\n          numberOfAccessPoints: 0\n          numberOfUnserviceableAccessPoints: 6\n        - resourceURL: resourceURL\n          numberOfUsers: 1\n          zoneId: zoneId\n          numberOfAccessPoints: 0\n          numberOfUnserviceableAccessPoints: 6\n    ZoneStatusNotification:\n      required:\n      - timestamp\n      - zoneId\n      type: object\n      properties:\n        accessPointId:\n          type: string\n          description: Identifier of an access point.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        callbackData:\n          type: string\n          description: \"CallBackData if passed by the application during the associated\\\n            \\ ZoneStatusSubscription operation. See [REST_NetAPI_Common].\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        link:\n          type: array\n          description: Link to other resources that are in relationship with this\n            notification. The server SHOULD include a link to the related subscription.\n            No other links are required or suggested by this specification\n          items:\n            $ref: '#/components/schemas/Link'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: Link\n        numberOfUsersInAP:\n          type: integer\n          description: This element shall be present when ZoneStatusSubscription includes\n            numberOfUsersAPThreshold element and the number of users in an access\n            point exceeds the threshold defined in the subscription.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: unsignedInt\n        numberOfUsersInZone:\n          type: integer\n          description: This element shall be present when ZoneStatusSubscription includes\n            numberOfUsersZoneThreshold element and the number of users in a zone exceeds\n            the threshold defined in this subscription.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: unsignedInt\n        operationStatus:\n          $ref: '#/components/schemas/OperationStatus'\n        timestamp:\n          $ref: '#/components/schemas/TimeStamp'\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing zone status notification.\n    ZoneStatusSubscription:\n      required:\n      - callbackReference\n      - zoneId\n      type: object\n      properties:\n        callbackReference:\n          $ref: '#/components/schemas/CallbackReference'\n        clientCorrelator:\n          type: string\n          description: A correlator that the client can use to tag this particular\n            resource representation during a request to create a resource on the server.\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: string\n        numberOfUsersAPThreshold:\n          type: integer\n          description: Threshold number of users in an access point which if crossed\n            shall cause a notification\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: unsignedInt\n        numberOfUsersZoneThreshold:\n          type: integer\n          description: Threshold number of users in a zone which if crossed shall\n            cause a notification\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: unsignedInt\n        operationStatus:\n          type: array\n          description: List of operation status values to generate notifications for\n            (these apply to all access points within a zone).\n          items:\n            $ref: '#/components/schemas/OperationStatus'\n          x-etsi-mec-cardinality: 0..N\n          x-etsi-mec-origin-type: OperationStatus\n        resourceURL:\n          type: string\n          description: Self referring URL\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: anyURI\n        zoneId:\n          type: string\n          description: Identifier of zone\n          x-etsi-mec-cardinality: 1\n          x-etsi-mec-origin-type: string\n      description: A type containing zone status subscription.\n      example:\n        operationStatus:\n        - Serviceable\n        - Serviceable\n        numberOfUsersAPThreshold: 7\n        resourceURL: resourceURL\n        callbackReference: null\n        clientCorrelator: clientCorrelator\n        zoneId: zoneId\n        numberOfUsersZoneThreshold: 1\n    InlineAccessPointInfo:\n      type: object\n      properties:\n        accessPointInfo:\n          $ref: '#/components/schemas/AccessPointInfo'\n      example:\n        accessPointInfo:\n          locationInfo:\n            altitude: 5.962134\n            orientationMajorAxis: 4\n            shape: 7\n            confidence: 5\n            latitude:\n            - 9.301444\n            - 9.301444\n            offsetAngle: 2\n            accuracy: 0\n            includedAngle: 2\n            velocity:\n              verticalUncertainty: 4\n              horizontalSpeed: 1\n              bearing: 1\n              uncertainty: 6\n              verticalSpeed: 1\n              velocityType: 7\n            accuracySemiMinor: 1\n            innerRadius: 7\n            accuracyAltitude: 6\n            uncertaintyRadius: 1\n            longitude:\n            - 3.6160767\n            - 3.6160767\n            timestamp:\n              seconds: 5\n              nanoSeconds: 1\n          operationStatus: Serviceable\n          resourceURL: resourceURL\n          numberOfUsers: 0\n          timezone: timezone\n          accessPointId: accessPointId\n          interestRealm: interestRealm\n          connectionType: Femto\n    InlineAccessPointList:\n      type: object\n      properties:\n        accessPointList:\n          $ref: '#/components/schemas/AccessPointList'\n      example:\n        accessPointList:\n          resourceURL: resourceURL\n          zoneId: zoneId\n          accessPoint:\n          - locationInfo:\n              altitude: 5.962134\n              orientationMajorAxis: 4\n              shape: 7\n              confidence: 5\n              latitude:\n              - 9.301444\n              - 9.301444\n              offsetAngle: 2\n              accuracy: 0\n              includedAngle: 2\n              velocity:\n                verticalUncertainty: 4\n                horizontalSpeed: 1\n                bearing: 1\n                uncertainty: 6\n                verticalSpeed: 1\n                velocityType: 7\n              accuracySemiMinor: 1\n              innerRadius: 7\n              accuracyAltitude: 6\n              uncertaintyRadius: 1\n              longitude:\n              - 3.6160767\n              - 3.6160767\n              timestamp:\n                seconds: 5\n                nanoSeconds: 1\n            operationStatus: Serviceable\n            resourceURL: resourceURL\n            numberOfUsers: 0\n            timezone: timezone\n            accessPointId: accessPointId\n            interestRealm: interestRealm\n            connectionType: Femto\n          - locationInfo:\n              altitude: 5.962134\n              orientationMajorAxis: 4\n              shape: 7\n              confidence: 5\n              latitude:\n              - 9.301444\n              - 9.301444\n              offsetAngle: 2\n              accuracy: 0\n              includedAngle: 2\n              velocity:\n                verticalUncertainty: 4\n                horizontalSpeed: 1\n                bearing: 1\n                uncertainty: 6\n                verticalSpeed: 1\n                velocityType: 7\n              accuracySemiMinor: 1\n              innerRadius: 7\n              accuracyAltitude: 6\n              uncertaintyRadius: 1\n              longitude:\n              - 3.6160767\n              - 3.6160767\n              timestamp:\n                seconds: 5\n                nanoSeconds: 1\n            operationStatus: Serviceable\n            resourceURL: resourceURL\n            numberOfUsers: 0\n            timezone: timezone\n            accessPointId: accessPointId\n            interestRealm: interestRealm\n            connectionType: Femto\n    InlineTerminalDistance:\n      type: object\n      properties:\n        terminalDistance:\n          $ref: '#/components/schemas/TerminalDistance'\n      example:\n        terminalDistance:\n          distance: 6\n          accuracy: 0\n          timestamp:\n            seconds: 5\n            nanoSeconds: 1\n    InlineUserList:\n      type: object\n      properties:\n        userList:\n          $ref: '#/components/schemas/UserList'\n      example:\n        userList:\n          resourceURL: resourceURL\n          user:\n          - locationInfo:\n              altitude: 5.962134\n              orientationMajorAxis: 4\n              shape: 7\n              confidence: 5\n              latitude:\n              - 9.301444\n              - 9.301444\n              offsetAngle: 2\n              accuracy: 0\n              includedAngle: 2\n              velocity:\n                verticalUncertainty: 4\n                horizontalSpeed: 1\n                bearing: 1\n                uncertainty: 6\n                verticalSpeed: 1\n                velocityType: 7\n              accuracySemiMinor: 1\n              innerRadius: 7\n              accuracyAltitude: 6\n              uncertaintyRadius: 1\n              longitude:\n              - 3.6160767\n              - 3.6160767\n              timestamp:\n                seconds: 5\n                nanoSeconds: 1\n            address: http://example.com/aeiou\n            resourceURL: resourceURL\n            accessPointId: accessPointId\n            zoneId: zoneId\n            ancillaryInfo: ancillaryInfo\n            contextLocationInfo: contextLocationInfo\n            timestamp: null\n          - locationInfo:\n              altitude: 5.962134\n              orientationMajorAxis: 4\n              shape: 7\n              confidence: 5\n              latitude:\n              - 9.301444\n              - 9.301444\n              offsetAngle: 2\n              accuracy: 0\n              includedAngle: 2\n              velocity:\n                verticalUncertainty: 4\n                horizontalSpeed: 1\n                bearing: 1\n                uncertainty: 6\n                verticalSpeed: 1\n                velocityType: 7\n              accuracySemiMinor: 1\n              innerRadius: 7\n              accuracyAltitude: 6\n              uncertaintyRadius: 1\n              longitude:\n              - 3.6160767\n              - 3.6160767\n              timestamp:\n                seconds: 5\n                nanoSeconds: 1\n            address: http://example.com/aeiou\n            resourceURL: resourceURL\n            accessPointId: accessPointId\n            zoneId: zoneId\n            ancillaryInfo: ancillaryInfo\n            contextLocationInfo: contextLocationInfo\n            timestamp: null\n    InlineZoneInfo:\n      type: object\n      properties:\n        zoneInfo:\n          $ref: '#/components/schemas/ZoneInfo'\n      example:\n        zoneInfo:\n          resourceURL: resourceURL\n          numberOfUsers: 1\n          zoneId: zoneId\n          numberOfAccessPoints: 0\n          numberOfUnserviceableAccessPoints: 6\n    InlineZoneList:\n      type: object\n      properties:\n        zoneList:\n          $ref: '#/components/schemas/ZoneList'\n      example:\n        zoneList:\n          resourceURL: resourceURL\n          zone:\n          - resourceURL: resourceURL\n            numberOfUsers: 1\n            zoneId: zoneId\n            numberOfAccessPoints: 0\n            numberOfUnserviceableAccessPoints: 6\n          - resourceURL: resourceURL\n            numberOfUsers: 1\n            zoneId: zoneId\n            numberOfAccessPoints: 0\n            numberOfUnserviceableAccessPoints: 6\n    InlineCircleNotificationSubscription:\n      type: object\n      properties:\n        circleNotificationSubscription:\n          $ref: '#/components/schemas/CircleNotificationSubscription'\n      example:\n        circleNotificationSubscription:\n          requester: requester\n          trackingAccuracy: 7.0614014\n          address:\n          - address\n          - address\n          callbackReference:\n            notificationFormat: XML\n            callbackData: callbackData\n            notifyURL: notifyURL\n          latitude: 5.962134\n          count: 0\n          link:\n          - rel: rel\n            href: href\n          - rel: rel\n            href: href\n          frequency: 1\n          duration: 6\n          enteringLeavingCriteria: Entering\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n          radius: 2.302136\n          longitude: 5.637377\n    InlineDistanceNotificationSubscription:\n      type: object\n      properties:\n        distanceNotificationSubscription:\n          $ref: '#/components/schemas/DistanceNotificationSubscription'\n      example:\n        distanceNotificationSubscription:\n          requester: requester\n          trackingAccuracy: 7.386282\n          distance: 3.6160767\n          callbackReference: null\n          criteria: AllWithinDistance\n          count: 9\n          link:\n          - null\n          - null\n          frequency: 4\n          duration: 2\n          monitoredAddress:\n          - monitoredAddress\n          - monitoredAddress\n          referenceAddress:\n          - referenceAddress\n          - referenceAddress\n          resourceURL: resourceURL\n          clientCorrelator: clientCorrelator\n          checkImmediate: true\n    InlinePeriodicNotificationSubscription:\n      type: object\n      properties:\n        periodicNotificationSubscription:\n          $ref: '#/components/schemas/PeriodicNotificationSubscription'\n      example:\n        periodicNotificationSubscription:\n          duration: 1\n          requester: requester\n          address:\n          - address\n          - address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          link:\n          - null\n          - null\n          frequency: 1\n          requestedAccuracy: 1\n    InlineUserTrackingSubscription:\n      type: object\n      properties:\n        userTrackingSubscription:\n          $ref: '#/components/schemas/UserTrackingSubscription'\n      example:\n        userTrackingSubscription:\n          address: address\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          userEventCriteria:\n          - Entering\n          - Entering\n    InlineZonalTrafficSubscription:\n      type: object\n      properties:\n        zonalTrafficSubscription:\n          $ref: '#/components/schemas/ZonalTrafficSubscription'\n      example:\n        zonalTrafficSubscription:\n          duration: 6\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          interestRealm:\n          - interestRealm\n          - interestRealm\n          userEventCriteria:\n          - null\n          - null\n    InlineZoneStatusSubscription:\n      type: object\n      properties:\n        zoneStatusSubscription:\n          $ref: '#/components/schemas/ZoneStatusSubscription'\n      example:\n        zoneStatusSubscription:\n          operationStatus:\n          - Serviceable\n          - Serviceable\n          numberOfUsersAPThreshold: 7\n          resourceURL: resourceURL\n          callbackReference: null\n          clientCorrelator: clientCorrelator\n          zoneId: zoneId\n          numberOfUsersZoneThreshold: 1\n    InlineNotificationSubscriptionList:\n      required:\n      - notificationSubscriptionList\n      type: object\n      properties:\n        notificationSubscriptionList:\n          $ref: '#/components/schemas/NotificationSubscriptionList'\n      example:\n        notificationSubscriptionList:\n          distanceNotificationSubscription:\n          - requester: requester\n            trackingAccuracy: 7.386282\n            distance: 3.6160767\n            callbackReference: null\n            criteria: AllWithinDistance\n            count: 9\n            link:\n            - null\n            - null\n            frequency: 4\n            duration: 2\n            monitoredAddress:\n            - monitoredAddress\n            - monitoredAddress\n            referenceAddress:\n            - referenceAddress\n            - referenceAddress\n            resourceURL: resourceURL\n            clientCorrelator: clientCorrelator\n            checkImmediate: true\n          - requester: requester\n            trackingAccuracy: 7.386282\n            distance: 3.6160767\n            callbackReference: null\n            criteria: AllWithinDistance\n            count: 9\n            link:\n            - null\n            - null\n            frequency: 4\n            duration: 2\n            monitoredAddress:\n            - monitoredAddress\n            - monitoredAddress\n            referenceAddress:\n            - referenceAddress\n            - referenceAddress\n            resourceURL: resourceURL\n            clientCorrelator: clientCorrelator\n            checkImmediate: true\n          circleNotificationSubscription:\n          - requester: requester\n            trackingAccuracy: 7.0614014\n            address:\n            - address\n            - address\n            callbackReference:\n              notificationFormat: XML\n              callbackData: callbackData\n              notifyURL: notifyURL\n            latitude: 5.962134\n            count: 0\n            link:\n            - rel: rel\n              href: href\n            - rel: rel\n              href: href\n            frequency: 1\n            duration: 6\n            enteringLeavingCriteria: Entering\n            resourceURL: resourceURL\n            clientCorrelator: clientCorrelator\n            checkImmediate: true\n            radius: 2.302136\n            longitude: 5.637377\n          - requester: requester\n            trackingAccuracy: 7.0614014\n            address:\n            - address\n            - address\n            callbackReference:\n              notificationFormat: XML\n              callbackData: callbackData\n              notifyURL: notifyURL\n            latitude: 5.962134\n            count: 0\n            link:\n            - rel: rel\n              href: href\n            - rel: rel\n              href: href\n            frequency: 1\n            duration: 6\n            enteringLeavingCriteria: Entering\n            resourceURL: resourceURL\n            clientCorrelator: clientCorrelator\n            checkImmediate: true\n            radius: 2.302136\n            longitude: 5.637377\n          resourceURL: http://example.com/aeiou\n          userTrackingSubscription:\n          - address: address\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            userEventCriteria:\n            - Entering\n            - Entering\n          - address: address\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            userEventCriteria:\n            - Entering\n            - Entering\n          zonalTrafficSubscription:\n          - duration: 6\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            zoneId: zoneId\n            interestRealm:\n            - interestRealm\n            - interestRealm\n            userEventCriteria:\n            - null\n            - null\n          - duration: 6\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            zoneId: zoneId\n            interestRealm:\n            - interestRealm\n            - interestRealm\n            userEventCriteria:\n            - null\n            - null\n          zoneStatusSubscription:\n          - operationStatus:\n            - Serviceable\n            - Serviceable\n            numberOfUsersAPThreshold: 7\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            zoneId: zoneId\n            numberOfUsersZoneThreshold: 1\n          - operationStatus:\n            - Serviceable\n            - Serviceable\n            numberOfUsersAPThreshold: 7\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            zoneId: zoneId\n            numberOfUsersZoneThreshold: 1\n          periodicNotificationSubscription:\n          - duration: 1\n            requester: requester\n            address:\n            - address\n            - address\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            link:\n            - null\n            - null\n            frequency: 1\n            requestedAccuracy: 1\n          - duration: 1\n            requester: requester\n            address:\n            - address\n            - address\n            resourceURL: resourceURL\n            callbackReference: null\n            clientCorrelator: clientCorrelator\n            link:\n            - null\n            - null\n            frequency: 1\n            requestedAccuracy: 1\n    InlineSubscriptionNotification:\n      type: object\n      properties:\n        subscriptionNotification:\n          $ref: '#/components/schemas/SubscriptionNotification'\n    InlineZonalPresenceNotification:\n      type: object\n      properties:\n        zonalPresenceNotification:\n          $ref: '#/components/schemas/ZonalPresenceNotification'\n    InlineZoneStatusNotification:\n      type: object\n      properties:\n        zoneStatusNotification:\n          $ref: '#/components/schemas/ZoneStatusNotification'\n    InlineProblemDetails:\n      type: object\n      properties:\n        problemDetails:\n          $ref: '#/components/schemas/ProblemDetails'\n    InlineProblemDetailsRequired:\n      required:\n      - problemDetails\n      type: object\n      properties:\n        problemDetails:\n          $ref: '#/components/schemas/ProblemDetails'\n    AppTerminationNotification:\n      required:\n      - _links\n      - maxGracefulTimeout\n      - notificationType\n      - operationAction\n      type: object\n      properties:\n        notificationType:\n          type: string\n          description: Shall be set to AppTerminationNotification.\n        operationAction:\n          $ref: '#/components/schemas/OperationActionType'\n        maxGracefulTimeout:\n          type: integer\n          description: Maximum timeout value in seconds for graceful termination or\n            graceful stop of an application instance.\n          format: uint32\n        _links:\n          $ref: '#/components/schemas/AppTerminationNotification__links'\n      description: This type represents the information that the MEC platform notifies\n        the subscribed application instance about  the corresponding application instance\n        termination/stop.\n    LinkType:\n      required:\n      - href\n      type: object\n      properties:\n        href:\n          type: string\n          description: URI referring to a resource\n          format: uri\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: URI\n    OperationActionType:\n      type: string\n      description: Operation that is being performed on the MEC application instance.\n      enum:\n      - STOPPING\n      - TERMINATING\n    LocationInfo_velocity:\n      required:\n      - bearing\n      - horizontalSpeed\n      - velocityType\n      type: object\n      properties:\n        bearing:\n          type: integer\n          description: \"Bearing, expressed in the range 0° to 360°, as defined in\\\n            \\ [14].\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: UnsignedInt\n        horizontalSpeed:\n          type: integer\n          description: \"Horizontal speed, expressed in km/h and defined in [14].\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: UnsignedInt\n        uncertainty:\n          type: integer\n          description: \"Horizontal uncertainty, as defined in [14]. Present only if\\\n            \\ \\\"velocityType\\\" equals 3 or 4\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n        velocityType:\n          type: integer\n          description: \"Velocity information, as detailed in [14], associated with\\\n            \\ the reported location coordinate: \u003cp\u003e1 = HORIZONTAL \u003cp\u003e2 = HORIZONTAL_VERTICAL\\\n            \\ \u003cp\u003e3 = HORIZONTAL_UNCERT \u003cp\u003e4 = HORIZONTAL_VERTICAL_UNCERT\"\n          x-etsi-mec-cardinality: \"1\"\n          x-etsi-mec-origin-type: Enum_inlined\n        verticalSpeed:\n          type: integer\n          description: \"Vertical speed, expressed in km/h and defined in [14]. Present\\\n            \\ only if \\\"velocityType\\\" equals 2 or 4\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: Int\n        verticalUncertainty:\n          type: integer\n          description: \"Vertical uncertainty, as defined in [14]. Present only if\\\n            \\ \\\"velocityType\\\" equals 4\"\n          x-etsi-mec-cardinality: 0..1\n          x-etsi-mec-origin-type: UnsignedInt\n      description: \"Structure with attributes relating to the target entity’s velocity,\\\n        \\ as defined in [14].\"\n      example:\n        verticalUncertainty: 4\n        horizontalSpeed: 1\n        bearing: 1\n        uncertainty: 6\n        verticalSpeed: 1\n        velocityType: 7\n    AppTerminationNotification__links:\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/LinkType'\n        confirmTermination:\n          $ref: '#/components/schemas/LinkType'\n      description: Object containing hyperlinks related to the resource.\n  responses:\n    \"200\":\n      description: OK\n    \"204\":\n      description: No Content\n    \"400\":\n      description: \"Bad Request : used to indicate that incorrect parameters were\\\n        \\ passed to the request.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"401\":\n      description: \"Unauthorized :  used when the client did not submit credentials.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"403\":\n      description: \"Forbidden :  operation is not allowed given the current status\\\n        \\ of the resource.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"404\":\n      description: \"Not Found :  used when a client provided a URI that cannot be\\\n        \\ mapped to a valid resource URI.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"406\":\n      description: \"Not Acceptable : used to indicate that the server cannot provide\\\n        \\ the any of the content formats supported by the client.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"412\":\n      description: \"Precondition failed :  used when a condition has failed during\\\n        \\ conditional requests, e.g. when using ETags to avoid write conflicts when\\\n        \\ using PUT\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"414\":\n      description: \"URI Too Long : used to indicate that the server is refusing to\\\n        \\ process the request because the request URI is longer than the server is\\\n        \\ willing or able to process.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"415\":\n      description: \"Unsupported Media Type :  used to indicate that the server or\\\n        \\ the client does not support the content type of the entity body.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    \"422\":\n      description: \"Unprocessable Entity : used to indicate that the server understands\\\n        \\ the content type of the request entity and that the syntax of the request\\\n        \\ entity is correct but that the server is unable to process the contained\\\n        \\ instructions. This error condition can occur if an JSON request body is\\\n        \\ syntactically correct but semantically incorrect, for example if the target\\\n        \\ area for the request is considered too large. This error condition can also\\\n        \\ occur if the capabilities required by the request are not supported.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n          example:\n            application/problem+json:\n              ProblemDetails:\n                type: https://meAppServer.example.com/rni/v2/probs/too-many targets\n                title: Too many targets\n                status: \"422\"\n                detail: The target area for the request is considered too large\n                instance: /meAppClient.example.com/77777/msgs/abc\n    \"429\":\n      description: \"Too Many Requests : used when a rate limiter has triggered.\"\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n  parameters:\n    Path.AccessPointId:\n      name: accessPointId\n      in: path\n      description: Identifier of access Point\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n      x-exportParamName: AccessPointId\n    Path.SubscrId:\n      name: subscriptionId\n      in: path\n      description: \"Subscription Identifier, specifically the \\\"self\\\" returned in\\\n        \\ the subscription request\"\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n        format: uri\n      x-exportParamName: SubscriptionId\n    Path.ZoneId:\n      name: zoneId\n      in: path\n      description: Indentifier of zone\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n      x-exportParamName: ZoneId\n    Query.AccessPointId:\n      name: accessPointId\n      in: query\n      description: Identifier of access point\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n      x-exportParamName: AccessPointId\n    Query.Address:\n      name: address\n      in: query\n      description: \"address of users (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n      x-exportParamName: Address\n    Query.AddressMandatory:\n      name: address\n      in: query\n      description: \"address of users (e.g. \\\"sip\\\" URI, \\\"tel\\\" URI, \\\"acr\\\" URI)\"\n      required: true\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n      x-exportParamName: AddressMandatory\n    Query.InterestRealm:\n      name: interestRealm\n      in: query\n      description: \"Interest realm of access point (e.g. geographical area, a type\\\n        \\ of industry etc.).\"\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n      x-exportParamName: InterestRealm\n    Query.Latitude:\n      name: latitude\n      in: query\n      description: Latitude geo position\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: number\n        format: float\n      x-exportParamName: Latitude\n    Query.Longitude:\n      name: longitude\n      in: query\n      description: Longitude geo position\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: number\n        format: float\n      x-exportParamName: Longitude\n    Query.Requester:\n      name: requester\n      in: query\n      description: Entity that is requesting the information\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: string\n      x-exportParamName: Requester\n    Query.ZoneId:\n      name: zoneId\n      in: query\n      description: Identifier of zone\n      required: false\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n      x-exportParamName: ZoneId\n",
			"canonicalURL": "/github.com/InterDigitalInc/AdvantEDGE@f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/-/blob/go-packages/meep-loc-serv-client/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/InterDigitalInc/AdvantEDGE/blob/f203f7ab4f1cd5983fbbe2963ff72092b6e9b107/go-packages/meep-loc-serv-client/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}