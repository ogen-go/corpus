{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/combell.com/v2/openapi.yaml",
			"byteSize": 138460,
			"content": "openapi: 3.0.1\nservers:\n  - url: /v2\ninfo:\n  description: |-\n    # Introduction\n\n    This API allows resellers to manage their resources in a simple, programmatic way using HTTP requests.\n\n    # Conventions\n\n    ## Requests\n\n    The API supports different methods depending on the required action.\n\n    | Method\t| Description\n    | ---\t\t| ---\n    | GET\t\t| Retrieve resources in a collection or get a single resource.\u003cbr/\u003eGetters will never have any effect on the queried resources.\n    | POST\t\t| Create a new resource in a collection.\n    | PUT\t\t| Update an existing resource with its new representation.\n    | DELETE\t| Delete an existing resource.\n\n    ## HTTP status codes\n\n    The API will reply with different HTTP statuscodes:\n\n    | StatusCode\t\t\t\t| Description\n    | ---\t\t\t\t\t\t| ---\n    | 200 OK\t\t\t\t\t| The requests was processed and you receive data as a result.\n    | 201 CREATED\t\t\t\t| The resource has been created. Either the Location header contains a link to the created resource, or links are being returned in the response body. The applied method will be indicated in the documentation.\n    | 202 ACCEPTED\t\t\t\t| The request has been validated and accepted. Because we need to do some background processing prior to returning the result, we cannot send back a useful representation.\n    | 204 NOCONTENT\t\t\t\t| The request has been processed, but no details can be returned.\n    | 400 BADREQUEST\t\t\t| Your request is malformed.\n    | 401 UNAUTHORIZED\t\t\t| You are not authorized. Follow the instructions in the Authorization documentation.\n    | 403 FORBIDDEN\t\t\t\t| Access to the resource or operation is not allowed.\n    | 404 NOTFOUND\t\t\t\t| The resource cannot be found.\n    | 410 GONE                  | The resource is permanently no longer available.\n    | 429 TOOMANYREQUESTS\t\t| The ratelimit has been exceeded. Please refer to the documentation on rate limiting for more details.\n    | 500 INTERNALSERVERERROR\t| An error occurred during the processing of the request. The error is unexpected and most likely due to a bug in the api.\n\n    In the event of a problem, the body of the response will usually contain an errorcode and errormessage.\n    In rare cases additional details about the error are reported.\n\n    Errorcodes 400-499 are considered to be client errors and indicate that there was an issue with the request.\n    We will not take any action besides monitoring. \n\n    Errorcodes 500-599 are considered to be server errors. The errors are monitored AND action will be taken to resolve the error.\n\n    ## Formatting\n\n    Snake casing is applied on resources and query parameters.\n    The API is strictly returning JSON. No other formats are supported.\n\n    Datetimes are returned in ISO-8601 format.\n\n    ## Pagination\n\n    Pagination is on by default on collections and is controlled by specifying *skip* and *take* parameters.  \n    **Skip** indicates the number of results to skip and where to start the new take.  \n    **Take** indicates the number of records to return. The returned number of items can be smaller than the requested take.\n\n    Paged results will have headers with useful information regarding the paging.\n\n    | Header\t\t\t\t| Description\n    | ---\t\t\t\t\t| ---\n    | X-Paging-Skipped\t\t| The number of results that have been skipped.\n    | X-Paging-Take\t\t\t| The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n    | X-Paging-TotalResults | The total number of results regardless of paging.\n\n    ## Rate limiting\n\n    The number of requests per interval is limited. Detailed information on the rate limiting can be found in specific headers which will be sent on each request.\n\n    | Header\t\t\t\t| Description\n    | ---\t\t\t\t\t| ---\n    | X-RateLimit-Limit\t\t| The number of requests that can be made in a specific time interval.\n    | X-RateLimit-Usage\t\t| The number of requests already made in the current time interval.\n    | X-RateLimit-Remaining\t| The number of requests remaining until the reset.\n    | X-RateLimit-Reset\t\t| The number of seconds until the reset.\u003cbr /\u003eAfter the reset you are allowed to make as many requests as specified by the X-RateLimit-Limit header.\n    | Retry-After\t\t\t| The number of seconds you have to wait until you can make new requests.\u003cbr /\u003eThis header is only present when the rate limit has been reached. It is identical to X-RateLimit-Reset.\n\n    When the ratelimit has been reached, all requests will return with a HTTP statuscode 429 and ReasonPhrase '*Too many requests, retry later.*'.\n\n    # Authentication\n\n    The Api uses HMAC authentication.  \n    Hash-based message authentication code (HMAC) is a mechanism for calculating a message authentication code involving a hash function in combination with a secret key.  \n    Both the integrity and the authenticity of the message are verified this way.\n\n    ## Steps to generate the HMAC\n\n    1. Get your api key and secret from your controlpanel.  \n    It is absolutely vital that the secret is never exposed. Once the secret is out, anyone would be able to generate hmacs to impersonate you.  \n    In case your secret is compromised, you can generate a new api key and secret on your controlpanel.\n    2. Construct the input value for generating the hmac.  \n    Concatenate:apikey, request method, path and querystring information, unix timestamp, nonce and content.\n\n    |\t\t\t\t\t\t\t\t\t\t| Description\n    | ---\t\t\t\t\t\t\t\t\t| ---\n    | apikey\t\t\t\t\t\t\t\t| The key that is linked to your user.\n    | request method\t\t\t\t\t\t| lowercased (eg: get, post, delete,...)\n    | path and querystring information\t\t| urlencoding of the lowercased relative path and querystring.\u003cbr /\u003eThe path **MUST start with the api version (/v2)**.\u003cbr /\u003eThe hexadecimal codes (percent encoding) MUST be uppercased.\n    | unix timestamp\t\t\t\t\t\t| the unix timestamp in **seconds**.\n    | nonce\t\t\t\t\t\t\t\t\t| a\tunique string for each request. It should be a random string, not related to the request. The nonce (in combination with the unix timestamp) protects you from replay attacks in case anyone was able to intercept a request.\n    | content\t\t\t\t\t\t\t\t| When the request body is not empty, this should be the Base64 encoded Md5 hash of the request body.\u003cbr /\u003eAn empty body should not be encoded.\n\n    3. Hash the concatenated string using your api secret and the SHA-256 algorithm.\n    4. Base64 encode the result of the hash function. This is the hmac signature you will need to send an authorized request.\n\n    ## Sending an authorized request\n\n    An authorized request can be made by sending the generated HMAC in the authorization header.  \n    A correct authorizationheader uses the hmac authorization scheme and a correctly formatted authorization parameter.\n\n    Create the authorization parameter by concatenating:\n      * apikey\n      * colon ':'\n      * generated HMAC signature (see above)\n      * colon ':'\n      * nonce (the one used to generate the signature)\n      * colon ':'\n      * unix timestamp (the one used to generate the signature)\n\n    A sample (illustrated):\n\n    * The first line is the string you create to feed to the hashing algorithm.\n    * The second line is the authorization header that should be sent in the request.\n\n    ![hmac authorization header illustrated](/v2/images/authentication_illustration.jpg \"authorization header illustrated\")\n\n    ## IP whitelisting\n\n    Access is by default restricted for all IP addresses. You need to explicitly whitelist an IP in your controlpanel.\n\n    # Versioning\n\n    Because of breaking contract changes compared to v1, we released v2 of the API.  \n    V1 will still be available, but you are strongly encouraged to migrate to the latest version.  \n    New features will only be available on v2.\n\n    # Policy\n\n    ### Fair use policy\n\n    Please respect the rate limits and do not use the api for any purposes of abuse.  \n    All requests are being monitored and logged.  \n    Intentional abuse might result in api key revocation.\n\n    # Errors\n\n    The API attempts to return appropriate HTTP status codes for every request.  \n    When the status code indicates failure, the API will also provide an error message in most cases.\n\n    An error message contains a machine-parseable error code accompanied by a descriptive error text.  \n    The text for an error message might change over time, but codes will stay the same.\n\n    [An overview of error codes can be found here](/v2/documentation/errorcodes).\n\n    # Change log\n\n    [An overview of new changes can be found here](/v2/documentation/changelog).\n\n    # Provisioning information\n\n    ## Terminology\n\n    | Term\t\t\t| Definition\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n    | ---\t\t\t| ---\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n    | Servicepack\t| Defines a set of assets that belong together. An example is a hosting package which offers Linux hosting, a domain name, a couple of mailboxes and databases.\u003cbr/\u003eIt also limits the size of individual assets within the same account. |\n    | Account\t\t| Represents an instance of the servicepack. It contains one or more assets. The number and size of assets is defined by the servicepack. |\n    | Asset\t\t\t| A manageable service. For example: a mysql database, a linux hosting, a mailbox,...\u003cbr/\u003eSome assets are created at the moment when the account is created. Other assets can be created afterwards.\n    \t\n    ## Common provisioning scenario\n\n    **Provisioning of an account with Linux hosting with one MySql database**\n\n    *Without a pre-existing account:*\n\n    1. Create a new account.\u003cbr/\u003ePerform a POST on the accounts route and provide the desired servicepack id and identifier (domain name).\n    2. Read the Location header from the response and perform a GET of the provided resource (a provisioning job).\n    3. When the response returns 200(OK), you should repeat the GET operation after a certain interval (Repeat this step).\u003cbr/\u003e\n    When the response returns 201(Created), you should read the response body. This will contain links to the created resources.\u003cbr/\u003e\n    This will usually hold only one link, but to be futureproof, this has been designed to return a collection.\n    4. The created resource will point to an account. You now know the account's Id and can continue with the provisioning of a MySql database on this account.\n    5. Perform a POST on the mysqldatabases route and provide the account id along with other requested information.\n    6. Read the Location header from the response and perform a GET of the provided resource (a provisioning job).\n    7. When the response returns 200(OK), you should repeat the GET operation after a certain interval (Repeat this step).\u003cbr/\u003e\n    When the response returns 201(Created), you should read the response body. This will contain links to the created resources.\u003cbr/\u003e\n    This will usually hold only one link, but to be futureproof, this has been designed to return a collection.\n    8. The created resource will point to a MySql database resource.\n\n    ## SSL certificate requests\n\n    **Requesting an SSL certificate causes the purchase of a paying product.**\n\n    1. A certificate is created by adding an ssl certificate request.\n    2. Upon statuscode 201 you should query for certificate completion on the resource provided in the location response header.\n    3. The resource request can respond with different statuscodes:\n    \u003cul\u003e\n        \u003cli\u003e200: the certificate request is ongoing.\u003cbr/\u003e\n    Check the validations collection for validation values that are not auto_validated. Those should be set by you system.\u003cbr/\u003e\n    Call verify domain validations once all validation values are in place. It might take some time for verification to take place. It is not necessary to call this method more than once.\u003c/li\u003e\n        \u003cli\u003e303: the certificate request is complete; there is no more certificate request resource available. Check the location header value to retrieve the representation of the resulting ssl certificate.\u003c/li\u003e\n        \u003cli\u003e410: the certificate request does not exist anymore, there is no certificate created as a result of the request.\u003c/li\u003e\n    \u003c/ul\u003e\n  title: Public Api\n  version: v2\n  x-apisguru-categories:\n    - hosting\n  x-logo:\n    url: https://www.combell.com/build/website/images/favicons/apple-icon-57x57.png\n  x-origin:\n    - format: openapi\n      url: https://api.combell.com/v2/documentation/swagger-v2.json\n      version: \"3.0\"\n  x-providerName: combell.com\ntags:\n  - name: Accounts\n  - description: \"Manage the dns records for a domain name.\u003cp\u003eThe interface allows you to manage following records: A, CNAME, MX, SRV, ALIAS and TXT.\"\n    name: DNS records\n  - description: Manage your domains.\n    name: Domains\n  - description: Manage your linux hostings.\n    name: Linux hostings\n  - description: Manage your mailboxes.\n    name: Mailboxes\n  - description: Manage your mail zones.\n    name: Mail zones\n  - description: Manage your MySql databases.\n    name: MySql databases\n  - name: Provisioning jobs\n  - name: Servicepacks\n  - name: SSH\n  - description: Create new SSL certificates. In the provisioning documentation you can find more info on the flow that should be followed.\n    name: SSL certificate requests\n  - description: Manage your SSL certificates.\n    name: SSL certificates\n  - description: Manage your windows hostings.\n    name: Windows hostings\npaths:\n  /accounts:\n    get:\n      operationId: GetAccounts\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n        - description: Filters the list, returning only accounts containing the specified asset type.\n          in: query\n          name: asset_type\n          schema:\n            $ref: \"#/components/schemas/AssetType\"\n        - description: Return only accounts, matching the specified identifier.\n          in: query\n          name: identifier\n          schema:\n            description: Return only accounts, matching the specified identifier.\n            nullable: true\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Account\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of accounts\n      tags:\n        - Accounts\n    post:\n      description: The creation of an account requires some background processing. There is no instant feedback of the creation status.\n      operationId: CreateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAccount\"\n        description: \"\"\n      responses:\n        \"202\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Create a new account\n      tags:\n        - Accounts\n  \"/accounts/{accountId}\":\n    get:\n      description: \"\"\n      operationId: GetAccount\n      parameters:\n        - description: The id of the account.\n          in: query\n          name: account_id\n          required: true\n          schema:\n            description: The id of the account.\n            format: int32\n            type: integer\n        - description: Automatically added\n          in: path\n          name: accountId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountDetail\"\n          description: Success\n      summary: Get a specific account\n      tags:\n        - Accounts\n  \"/dns/{domainName}/records\":\n    get:\n      parameters:\n        - description: The domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name.\n            type: string\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n        - description: Filters records matching the type. Most other filters only apply when this filter is specified.\n          in: query\n          name: type\n          schema:\n            description: Filters records matching the type. Most other filters only apply when this filter is specified.\n            nullable: true\n            type: string\n        - description: Filters records matching the record name. This filter only applies to lookups of A, CNAME, TXT, ALIAS and TLSA records.\n          in: query\n          name: record_name\n          schema:\n            description: Filters records matching the record name. This filter only applies to lookups of A, CNAME, TXT, ALIAS and TLSA records.\n            nullable: true\n            type: string\n        - description: Filters records for the service. This filter only applies to lookups of SRV records.\n          in: query\n          name: service\n          schema:\n            description: Filters records for the service. This filter only applies to lookups of SRV records.\n            nullable: true\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DnsRecord\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Get records\n      tags:\n        - DNS records\n    post:\n      parameters:\n        - description: The domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DnsRecord\"\n        description: The record to create\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Create a record\n      tags:\n        - DNS records\n  \"/dns/{domainName}/records/{recordId}\":\n    delete:\n      parameters:\n        - description: The domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name.\n            type: string\n        - description: The id of the record.\n          in: query\n          name: record_id\n          required: true\n          schema:\n            description: The id of the record.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: recordId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n      summary: Delete a record\n      tags:\n        - DNS records\n    get:\n      parameters:\n        - description: The domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name.\n            type: string\n        - description: The id of the record.\n          in: query\n          name: record_id\n          required: true\n          schema:\n            description: The id of the record.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: recordId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DnsRecord\"\n          description: Success\n      summary: Get specific record\n      tags:\n        - DNS records\n    put:\n      parameters:\n        - description: The domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name.\n            type: string\n        - description: The id of the record.\n          in: query\n          name: record_id\n          required: true\n          schema:\n            description: The id of the record.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: recordId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DnsRecord\"\n        description: The record with updated values.\n      responses:\n        \"200\":\n          description: Success\n      summary: Edit a record\n      tags:\n        - DNS records\n  /domains:\n    get:\n      operationId: Domains\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Domain\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overviews of domains\n      tags:\n        - Domains\n  /domains/registrations:\n    post:\n      description: Registers an available domain.\u003cbr /\u003eDomain names with extension '.ca' are only available for registrants with country code 'CA'.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterDomain\"\n        description: \"\"\n      responses:\n        \"202\":\n          description: Success\n      summary: Register a domain\n      tags:\n        - Domains\n  \"/domains/{domainName}\":\n    get:\n      parameters:\n        - description: The domain name\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DomainDetail\"\n          description: Success\n      summary: Details of a domain\n      tags:\n        - Domains\n  \"/domains/{domainName}/nameservers\":\n    put:\n      description: \"\"\n      parameters:\n        - description: The domain name\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditNameServers\"\n        description: \"\"\n      responses:\n        \"204\":\n          description: Success\n      summary: Edit domain name servers\n      tags:\n        - Domains\n  \"/domains/{domainName}/renew\":\n    put:\n      description: \"Allowed if can_toggle_renew is true on the domain detail:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eIf there are no unpaid invoices for the domain name anymore.\u003c/li\u003e\u003cli\u003eIf the renewal won't start within 1 month.\u003c/li\u003e\u003c/ul\u003e\\r\n\n        Allowed if the requesting user has the finance role.\"\n      operationId: ConfigureDomain\n      parameters:\n        - description: The domain name\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The domain name\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EditDomainWillRenewRequest\"\n        description: Contains the domain renew information\n      responses:\n        \"204\":\n          description: Success\n      summary: Edit domain name renew state\n      tags:\n        - Domains\n  /linuxhostings:\n    get:\n      operationId: GetLinuxHostings\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/LinuxHosting\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of linux hostings\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}\":\n    get:\n      operationId: GetLinuxHosting\n      parameters:\n        - description: The Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LinuxHostingDetail\"\n          description: Success\n      summary: Linux hosting detail\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/ftp/configuration\":\n    put:\n      operationId: ConfigureFtp\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FtpConfiguration\"\n        description: \"\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Configure FTP\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/phpsettings/apcu\":\n    put:\n      operationId: ChangeApcu\n      parameters:\n        - description: Linux hosting domain name\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePhpAPcuRequest\"\n        description: Php APcu config\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure PHP APCu setting\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/phpsettings/availableversions\":\n    get:\n      operationId: GetAvailablePhpVersions\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PhpVersion\"\n                type: array\n          description: Success\n      summary: Get the available PHP versions.\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/phpsettings/memorylimit\":\n    put:\n      operationId: ChangePhpMemoryLimit\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdatePhpMemoryLimitRequest\"\n        description: Memory limit config\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure PHP memory limit\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/phpsettings/version\":\n    put:\n      operationId: ChangePhpVersion\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PhpVersion\"\n        description: The new PHP version.\n      responses:\n        \"204\":\n          description: Success\n      summary: Change the Linux hosting PHP version.\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/scheduledtasks\":\n    get:\n      description: Manage scheduled tasks which are also manageable via the control panel.\n      operationId: GetScheduledTasks\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ScheduledTask\"\n                type: array\n          description: Success\n      summary: Overview of scheduled tasks\n      tags:\n        - Linux hostings\n    post:\n      operationId: AddScheduledTasks\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduledTask\"\n        description: \"\"\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Add a scheduled task\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/scheduledtasks/{scheduledTaskId}\":\n    delete:\n      operationId: DeleteScheduledTask\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Id of the scheduled task.\n          in: query\n          name: scheduled_task_id\n          required: true\n          schema:\n            description: Id of the scheduled task.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: scheduledTaskId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a scheduled task\n      tags:\n        - Linux hostings\n    get:\n      operationId: GetScheduledTask\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Id of the scheduled task.\n          in: query\n          name: scheduled_task_id\n          required: true\n          schema:\n            description: Id of the scheduled task.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: scheduledTaskId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduledTask\"\n          description: Success\n      summary: Get scheduled task detail\n      tags:\n        - Linux hostings\n    put:\n      operationId: ConfigureScheduledTask\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Id of the scheduled task.\n          in: query\n          name: scheduled_task_id\n          required: true\n          schema:\n            description: Id of the scheduled task.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: scheduledTaskId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScheduledTask\"\n        description: \"\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Configure a scheduled task\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/settings/gzipcompression\":\n    put:\n      operationId: ChangeGzipCompression\n      parameters:\n        - description: Linux hosting domain name\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GzipConfig\"\n        description: Whether GZIP compression is enabled or not.\n      responses:\n        \"204\":\n          description: Success\n      summary: Enable/disable GZIP compression\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/sites/{siteName}/hostheaders\":\n    post:\n      operationId: CreateHostHeader\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Name of the site on the linux hosting.\n          in: query\n          name: site_name\n          required: true\n          schema:\n            description: Name of the site on the linux hosting.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: siteName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddHostHeaderRequest\"\n        description: Add host header request\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Create a host header\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/sites/{siteName}/http2/configuration\":\n    put:\n      operationId: ConfigureHttp2\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: \"Site name where HTTP/2 should be configured.\u003cbr /\u003e\\r\n\n            For HTTP/2 to work correctly, the site must have ssl enabled.\"\n          in: query\n          name: site_name\n          required: true\n          schema:\n            description: \"Site name where HTTP/2 should be configured.\u003cbr /\u003e\\r\n\n              For HTTP/2 to work correctly, the site must have ssl enabled.\"\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: siteName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Http2Configuration\"\n        description: \"\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Configure HTTP/2\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/ssh/configuration\":\n    put:\n      operationId: ConfigureSsh\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SshConfiguration\"\n        description: \"\"\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Configure SSH\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/ssh/keys\":\n    get:\n      operationId: GetSshKeys\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SshKey\"\n                type: array\n          description: Success\n      summary: Overview of SSH keys\n      tags:\n        - Linux hostings\n    post:\n      operationId: AddSshKey\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddSshKeyRequest\"\n        description: SSH key public key.\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Add a SSH key\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/ssh/keys/{fingerprint}\":\n    delete:\n      operationId: DeleteSshKey\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Fingerprint of public key.\n          in: path\n          name: fingerprint\n          required: true\n          schema:\n            description: Fingerprint of public key.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a SSH key\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/sslsettings/{hostname}/autoredirect\":\n    put:\n      operationId: ChangeAutoRedirect\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Specific hostname.\n          in: path\n          name: hostname\n          required: true\n          schema:\n            description: Specific hostname.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AutoRedirectConfig\"\n        description: Auto redirect config.\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure auto redirect\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/sslsettings/{hostname}/letsencrypt\":\n    put:\n      operationId: ChangeLetsEncrypt\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Specific hostname.\n          in: path\n          name: hostname\n          required: true\n          schema:\n            description: Specific hostname.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LetsEncryptConfig\"\n        description: Let's encrypt config.\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure let's encrypt\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/subsites\":\n    post:\n      operationId: CreateSubsite\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddSubsiteRequest\"\n        description: Add subsite request\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Create a subsite\n      tags:\n        - Linux hostings\n  \"/linuxhostings/{domainName}/subsites/{siteName}\":\n    delete:\n      operationId: DeleteSubsite\n      parameters:\n        - description: Linux hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Linux hosting domain name.\n            type: string\n        - description: Name of the site on the linux hosting.\n          in: query\n          name: site_name\n          required: true\n          schema:\n            description: Name of the site on the linux hosting.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: siteName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a subsite\n      tags:\n        - Linux hostings\n  /mailboxes:\n    get:\n      description: Currently only supports getting the mailboxes filtered by domain name.\n      operationId: GetMailboxes\n      parameters:\n        - description: Obligated domain name for getting mailboxes.\n          in: query\n          name: domain_name\n          schema:\n            description: Obligated domain name for getting mailboxes.\n            nullable: true\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Mailbox\"\n                type: array\n          description: Success\n      summary: Gets your mailboxes.\n      tags:\n        - Mailboxes\n    post:\n      operationId: CreateMailbox\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMailboxRequest\"\n        description: The add mailbox request.\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Create a new mailbox.\n      tags:\n        - Mailboxes\n  \"/mailboxes/{mailboxName}\":\n    delete:\n      operationId: DeleteMailbox\n      parameters:\n        - description: Mailbox name.\n          in: query\n          name: mailbox_name\n          required: true\n          schema:\n            description: Mailbox name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: mailboxName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a mailbox\n      tags:\n        - Mailboxes\n    get:\n      operationId: GetMailbox\n      parameters:\n        - description: Mailbox name.\n          in: query\n          name: mailbox_name\n          required: true\n          schema:\n            description: Mailbox name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: mailboxName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MailboxDetail\"\n          description: Success\n      summary: Get a specific mailbox\n      tags:\n        - Mailboxes\n  \"/mailboxes/{mailboxName}/autoforward\":\n    put:\n      operationId: ConfigureMailboxAutoForward\n      parameters:\n        - description: Mailbox name.\n          in: query\n          name: mailbox_name\n          required: true\n          schema:\n            description: Mailbox name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: mailboxName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AutoForward\"\n        description: Contains the auto-forward information.\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure auto-forward for mailbox\n      tags:\n        - Mailboxes\n  \"/mailboxes/{mailboxName}/autoreply\":\n    put:\n      operationId: ConfigureMailboxAutoReply\n      parameters:\n        - description: Mailbox name.\n          in: query\n          name: mailbox_name\n          required: true\n          schema:\n            description: Mailbox name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: mailboxName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AutoReply\"\n        description: Contains the auto-reply information.\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure auto-reply for mailbox\n      tags:\n        - Mailboxes\n  \"/mailboxes/{mailboxName}/password\":\n    put:\n      operationId: ChangeMailboxPassword\n      parameters:\n        - description: Mailbox name.\n          in: query\n          name: mailbox_name\n          required: true\n          schema:\n            description: Mailbox name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: mailboxName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateMailboxPasswordRequest\"\n        description: Contains the new password.\n      responses:\n        \"204\":\n          description: Success\n      summary: Change password for mailbox\n      tags:\n        - Mailboxes\n  \"/mailzones/{domainName}\":\n    get:\n      operationId: GetMailZone\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MailZone\"\n          description: Success\n      summary: Get the mail zone.\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/aliases\":\n    post:\n      operationId: CreateAlias\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAliasRequest\"\n        description: Contains the alias information.\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Create a new alias\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/aliases/{emailAddress}\":\n    delete:\n      operationId: DeleteAlias\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Alias e-mail address.\n          in: query\n          name: email_address\n          required: true\n          schema:\n            description: Alias e-mail address.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: emailAddress\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a alias\n      tags:\n        - Mail zones\n    put:\n      operationId: ConfigureAlias\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Alias e-mail address.\n          in: query\n          name: email_address\n          required: true\n          schema:\n            description: Alias e-mail address.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: emailAddress\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateAliasRequest\"\n        description: Contains the alias information.\n      responses:\n        \"202\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Configure a alias\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/antispam\":\n    put:\n      operationId: ConfigureAntiSpam\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateAntiSpamRequest\"\n        description: Contains the anti-spam information.\n      responses:\n        \"204\":\n          description: Success\n      summary: Configure anti-spam for mail zone\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/catchall\":\n    post:\n      operationId: CreateCatchAll\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCatchAllRequest\"\n        description: Contains the catch-all information.\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Create a catch-all on the mail zone\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/catchall/{emailAddress}\":\n    delete:\n      operationId: DeleteCatchAll\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: E-mail address to which all e-mails are sent to inexistent mailboxes or aliases.\n          in: query\n          name: email_address\n          required: true\n          schema:\n            description: E-mail address to which all e-mails are sent to inexistent mailboxes or aliases.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: emailAddress\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n      summary: Delete a catch-all on the mail zone\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/smtpdomains\":\n    post:\n      operationId: CreateSmtpDomain\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSmtpDomainRequest\"\n        description: Contains the smtp domain information.\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Create an extra smtp domain\n      tags:\n        - Mail zones\n  \"/mailzones/{domainName}/smtpdomains/{hostname}\":\n    delete:\n      operationId: DeleteSmtpDomain\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Smtp domain name.\n          in: path\n          name: hostname\n          required: true\n          schema:\n            description: Smtp domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete an extra smtp domain\n      tags:\n        - Mail zones\n    put:\n      operationId: ConfigureSmtpDomain\n      parameters:\n        - description: Mail zone domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: Mail zone domain name.\n            type: string\n        - description: Smtp domain name.\n          in: path\n          name: hostname\n          required: true\n          schema:\n            description: Smtp domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateSmtpDomainRequest\"\n        description: Contains the smtp domain information.\n      responses:\n        \"202\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Configure an extra smtp domain\n      tags:\n        - Mail zones\n  /mysqldatabases:\n    get:\n      operationId: GetMySqlDatabases\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MySqlDatabase\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of mysql databases\n      tags:\n        - MySql databases\n    post:\n      operationId: CreateMySqlDatabase\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMySqlDatabase\"\n        description: \"\"\n      responses:\n        \"202\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Create a new mysql database\n      tags:\n        - MySql databases\n  \"/mysqldatabases/{databaseName}\":\n    delete:\n      operationId: DeleteDatabase\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a mysql database\n      tags:\n        - MySql databases\n    get:\n      operationId: GetMySqlDatabase\n      parameters:\n        - in: query\n          name: database_name\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MySqlDatabase\"\n          description: Success\n      summary: Get a specific database\n      tags:\n        - MySql databases\n  \"/mysqldatabases/{databaseName}/users\":\n    get:\n      operationId: GetDatabaseUsers\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MySqlUser\"\n                type: array\n          description: Success\n      summary: Overview of mysql users\n      tags:\n        - MySql databases\n    post:\n      description: The creation of a new mysql user will result in a user with read_only rights.\n      operationId: CreateMySqlUser\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMySqlUser\"\n        description: \"\"\n      responses:\n        \"202\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestResponse\"\n          description: Bad Request\n      summary: Create a new mysql user\n      tags:\n        - MySql databases\n  \"/mysqldatabases/{databaseName}/users/{userName}\":\n    delete:\n      description: The deletion of a mysql user is allowed for users with read_only rights.\n      operationId: DeleteDatabaseUser\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Name of the user.\n          in: query\n          name: user_name\n          required: true\n          schema:\n            description: Name of the user.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: userName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: Bad Request\n      summary: Delete a mysql user\n      tags:\n        - MySql databases\n  \"/mysqldatabases/{databaseName}/users/{userName}/password\":\n    put:\n      operationId: ChangeDatabaseUserPassword\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Name of the user.\n          in: query\n          name: user_name\n          required: true\n          schema:\n            description: Name of the user.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: userName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserPasswordRequest\"\n        description: Contains the new password.\n      responses:\n        \"204\":\n          description: Success\n      summary: Change password for mysql user\n      tags:\n        - MySql databases\n  \"/mysqldatabases/{databaseName}/users/{userName}/status\":\n    put:\n      operationId: ChangeDatabaseUserStatus\n      parameters:\n        - description: Name of the database.\n          in: query\n          name: database_name\n          required: true\n          schema:\n            description: Name of the database.\n            type: string\n        - description: Name of the user.\n          in: query\n          name: user_name\n          required: true\n          schema:\n            description: Name of the user.\n            type: string\n        - description: Automatically added\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n        - description: Automatically added\n          in: path\n          name: userName\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateUserStatusRequest\"\n        description: Whether the user is enabled or not.\n      responses:\n        \"204\":\n          description: Success\n      summary: Enable/disable mysql user\n      tags:\n        - MySql databases\n  \"/provisioningjobs/{jobId}\":\n    get:\n      description: \"Provisioning failures may occur. Contact support in the event of a failure or wait for error resolution.\u003cbr /\u003e\\r\n\n        Do NOT retry provisioning until the job reports finished or cancelled.\"\n      parameters:\n        - in: query\n          name: job_id\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: Automatically added\n          in: path\n          name: jobId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningJobInfo\"\n          description: Success\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisioningJobCompletion\"\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Detail of a provisioning job\n      tags:\n        - Provisioning jobs\n  /servicepacks:\n    get:\n      operationId: Servicepacks\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Servicepack\"\n                type: array\n          description: Success\n      summary: Overview of service packs\n      tags:\n        - Servicepacks\n  /ssh:\n    get:\n      operationId: GetAllSshKeys\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SshKeyDetail\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of SSH keys\n      tags:\n        - SSH\n  /sslcertificaterequests:\n    get:\n      operationId: GetSslCertificateRequests\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SslCertificateRequest\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of SSL certificate requests\n      tags:\n        - SSL certificate requests\n    post:\n      description: \"Executing this method causes the purchase of a paying product.\u003cbr /\u003e\\r\n\n        Log on to our website to see your current (renewal) prices or contact our Sales department.\u003cbr /\u003e\\r\n\n        Please note that promotional pricing does not apply for purchases made through our API.\"\n      operationId: AddSslCertificateRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSslCertificateRequest\"\n        description: \"\"\n      responses:\n        \"201\":\n          description: Success\n          headers:\n            Location:\n              description: The location of the created resource.\n              schema:\n                type: string\n      summary: Add a SSL certificate request\n      tags:\n        - SSL certificate requests\n  \"/sslcertificaterequests/{id}\":\n    get:\n      operationId: GetSslCertificateRequest\n      parameters:\n        - description: The id of the certificate request.\n          in: path\n          name: id\n          required: true\n          schema:\n            description: The id of the certificate request.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SslCertificateRequestDetail\"\n          description: Success\n        \"303\":\n          description: Redirect\n          headers:\n            Location:\n              description: The location referring to a resource that replaced the original resource.\n              schema:\n                type: string\n        \"410\":\n          description: The resource existed in the past, but is no longer available.\n      summary: Detail of a SSL certificate request\n      tags:\n        - SSL certificate requests\n    put:\n      operationId: VerifySslCertificateRequestDomainValidations\n      parameters:\n        - description: The id of the certificate request.\n          in: path\n          name: id\n          required: true\n          schema:\n            description: The id of the certificate request.\n            format: int32\n            type: integer\n      responses:\n        \"202\":\n          description: Success\n        \"303\":\n          description: Redirect\n          headers:\n            Location:\n              description: The location referring to a resource that replaced the original resource.\n              schema:\n                type: string\n        \"410\":\n          description: The resource existed in the past, but is no longer available.\n      summary: Verify the SSL certificate request domain validations\n      tags:\n        - SSL certificate requests\n  /sslcertificates:\n    get:\n      operationId: GetSslCertificates\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SslCertificate\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of SSL certificates\n      tags:\n        - SSL certificates\n  \"/sslcertificates/{sha1Fingerprint}\":\n    get:\n      operationId: GetSslCertificate\n      parameters:\n        - description: The SHA-1 fingerprint of the certificate.\n          in: query\n          name: sha1_fingerprint\n          required: true\n          schema:\n            description: The SHA-1 fingerprint of the certificate.\n            type: string\n        - description: Automatically added\n          in: path\n          name: sha1Fingerprint\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SslCertificateDetail\"\n          description: Success\n      summary: Detail of a SSL certificate\n      tags:\n        - SSL certificates\n  \"/sslcertificates/{sha1Fingerprint}/download\":\n    get:\n      description: Returns the certifcate as binary data with the content-type and the filename information in the response headers.\n      operationId: DownloadCertificate\n      parameters:\n        - description: The SHA-1 fingerprint of the certificate.\n          in: query\n          name: sha1_fingerprint\n          required: true\n          schema:\n            description: The SHA-1 fingerprint of the certificate.\n            type: string\n        - description: \"The file format of the returned file stream:\\r\n\n            \u003cul\u003e\u003cli\u003ePFX: Also known as PKCS #12, is a single, password protected certificate archive that contains the entire certificate chain plus the matching private key.\u003c/li\u003e\u003c/ul\u003e\"\n          in: query\n          name: file_format\n          required: true\n          schema:\n            $ref: \"#/components/schemas/SslCertificateFileFormat\"\n        - description: The password used to protect the certificate file.\u003cbr /\u003e\n          in: query\n          name: password\n          required: true\n          schema:\n            description: The password used to protect the certificate file.\u003cbr /\u003e\n            type: string\n        - description: Automatically added\n          in: path\n          name: sha1Fingerprint\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                format: binary\n                type: string\n          description: Success\n        \"400\":\n          description: Invalid file_format or invalid password\n      summary: Download a SSL certificate\n      tags:\n        - SSL certificates\n  /windowshostings:\n    get:\n      operationId: GetWindowsHostings\n      parameters:\n        - description: The number of items to skip in the resultset.\n          in: query\n          name: skip\n          schema:\n            description: The number of items to skip in the resultset.\n            format: int32\n            type: integer\n        - description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n          in: query\n          name: take\n          schema:\n            description: The number of items to return in the resultset. The returned count can be equal or less than this number.\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WindowsHosting\"\n                type: array\n          description: Success\n          headers:\n            X-Paging-Skipped:\n              description: The number of results that have been skipped.\n              schema:\n                type: integer\n            X-Paging-Take:\n              description: The number of items in the current take. The number might differ from the requested take. It represents the actual number of items returned in the response.\n              schema:\n                type: integer\n            X-Paging-TotalResults:\n              description: The total number of results regardless of paging.\n              schema:\n                type: integer\n      summary: Overview of windows hostings\n      tags:\n        - Windows hostings\n  \"/windowshostings/{domainName}\":\n    get:\n      operationId: GetWindowsHosting\n      parameters:\n        - description: The Windows hosting domain name.\n          in: query\n          name: domain_name\n          required: true\n          schema:\n            description: The Windows hosting domain name.\n            type: string\n        - description: Automatically added\n          in: path\n          name: domainName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WindowsHostingDetail\"\n          description: Success\n      summary: Windows hosting detail\n      tags:\n        - Windows hostings\ncomponents:\n  schemas:\n    Account:\n      additionalProperties: false\n      properties:\n        id:\n          description: The id of the account\n          format: int32\n          type: integer\n        identifier:\n          description: Identifier for the account\n          type: string\n        servicepack_id:\n          description: The servicepack id that defines the account.\n          format: int32\n          type: integer\n      type: object\n    AccountDetail:\n      additionalProperties: false\n      description: A detailed representation of an account.\n      properties:\n        addons:\n          description: A list of addons applied to the account.\n          items:\n            $ref: \"#/components/schemas/Addon\"\n          type: array\n        id:\n          description: The id of the account\n          format: int32\n          type: integer\n        identifier:\n          description: Identifier for the account\n          type: string\n        servicepack:\n          $ref: \"#/components/schemas/Servicepack\"\n      type: object\n    AddHostHeaderRequest:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: Host header domain name (e.g. alias.be or alias.site.be).\n          type: string\n      type: object\n    AddSshKeyRequest:\n      additionalProperties: false\n      properties:\n        public_key:\n          description: Public key\n          type: string\n      type: object\n    AddSubsiteRequest:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: Subsite domain name (e.g. alias.be or subsite.site.be).\n          type: string\n        path:\n          description: \"Folder location for the subsite (when empty we use /subsites/site (e.g. /subsites/subsite.site.be)\u003cbr /\u003e\\r\n\n            The path MUST pre-exist on the server. It WILL NOT be created automatically.\"\n          type: string\n      type: object\n    AdditionalValidationAttribute:\n      additionalProperties: false\n      properties:\n        name:\n          description: Additional validation attribute field name.\n          type: string\n        value:\n          description: Additional validation attribute field value.\n          type: string\n      type: object\n    Addon:\n      additionalProperties: false\n      description: Addon information\n      properties:\n        id:\n          description: The id of the addon\n          format: int32\n          type: integer\n        name:\n          description: The name of the addon\n          type: string\n      type: object\n    Alias:\n      additionalProperties: false\n      properties:\n        destinations:\n          description: The alias destination e-mail addresses\n          items:\n            type: string\n          type: array\n        email_address:\n          description: The alias e-mail address\n          type: string\n      type: object\n    AntiSpam:\n      additionalProperties: false\n      properties:\n        allowed_types:\n          description: Allowed types of anti-spam scanning for this mail zone\n          items:\n            $ref: \"#/components/schemas/AntiSpamTypes\"\n          type: array\n        type:\n          $ref: \"#/components/schemas/AntiSpamTypes\"\n      type: object\n    AntiSpamTypes:\n      description: Types of anti-spam scanning\n      enum:\n        - none\n        - advanced\n        - basic\n      type: string\n    ApplicationPool:\n      additionalProperties: false\n      description: The application pool for the hosting account.\n      properties:\n        installed_net_core_runtimes:\n          description: The installed .NET Core runtimes for the hosting account.\n          items:\n            type: string\n          type: array\n        pipeline_mode:\n          description: The active pipeline mode for the hosting account.\n          type: string\n        runtime:\n          description: The active runtime for the hosting account.\n          type: string\n      type: object\n    AssetType:\n      description: Asset types\n      enum:\n        - domain\n        - linux_hosting\n        - mysql\n        - dns\n        - mailbox\n        - windows_hosting\n      type: string\n    AutoForward:\n      additionalProperties: false\n      properties:\n        copy_to_myself:\n          description: Copy to myself\n          type: boolean\n        email_addresses:\n          description: E-mail addresses to which e-mails are forwarded\n          items:\n            type: string\n          type: array\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    AutoRedirectConfig:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    AutoReply:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n        message:\n          description: Message\n          type: string\n        subject:\n          description: Subject\n          type: string\n      type: object\n    BadRequestResponse:\n      additionalProperties: false\n      properties:\n        validation_errors:\n          description: A list of validation errors that occurred when processing the request.\n          items:\n            $ref: \"#/components/schemas/ValidationErrorMessage\"\n          type: array\n      type: object\n    CatchAll:\n      additionalProperties: false\n      properties:\n        email_addresses:\n          description: E-mail addresses to which all e-mails are sent to inexistent mailboxes or aliases\n          items:\n            type: string\n          type: array\n      type: object\n    CompletionEstimation:\n      additionalProperties: false\n      properties:\n        estimate:\n          description: \"The estimated time when the job should be finished.\u003cbr /\u003e\\r\n\n            Unexpected delays can always occur.\u003cbr /\u003e\\r\n\n            The value is subject to change during the provisioning.\"\n          format: date-time\n          type: string\n      type: object\n    CreateAccount:\n      additionalProperties: false\n      properties:\n        ftp_password:\n          description: \"Ftp password for the account.\u003cbr /\u003e\\r\n\n            Applies only if the servicepack contains hosting.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n        identifier:\n          description: \"An identifier for the account.\u003cbr /\u003e\\r\n\n            Should be a domain name for hosting accounts.\"\n          type: string\n        servicepack_id:\n          description: The servicepack id that defines the account.\n          format: int32\n          type: integer\n      type: object\n    CreateAliasRequest:\n      additionalProperties: false\n      properties:\n        destinations:\n          description: The alias destination e-mail addresses\n          items:\n            type: string\n          type: array\n        email_address:\n          description: The alias e-mail\n          type: string\n      type: object\n    CreateCatchAllRequest:\n      additionalProperties: false\n      properties:\n        email_address:\n          description: E-mail address to which all e-mails are sent to inexistent mailboxes or aliases\n          type: string\n      type: object\n    CreateMailboxRequest:\n      additionalProperties: false\n      properties:\n        account_id:\n          description: Mail zone account id\n          format: int32\n          type: integer\n        email_address:\n          description: E-mail address\n          type: string\n        password:\n          description: \"The password for the mailbox.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n      type: object\n    CreateMySqlDatabase:\n      additionalProperties: false\n      properties:\n        account_id:\n          description: The id of the account on which to create the database.\n          format: int32\n          type: integer\n        database_name:\n          description: \"The name for the database. This will be prefixed during provisioning.\\r\n\n            The provided name during creation will be different from the provisioned database name.\"\n          type: string\n        password:\n          description: \"The password for the database user.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n      type: object\n    CreateMySqlUser:\n      additionalProperties: false\n      properties:\n        name:\n          description: \"User name\u003cbr /\u003e\\r\n\n            User names have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 2-14 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and/or digits.\u003c/li\u003e\u003cli\u003eMust be lower cased.\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n        password:\n          description: \"The password for the database user.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n      type: object\n    CreateSmtpDomainRequest:\n      additionalProperties: false\n      properties:\n        hostname:\n          description: The smtp domain name\n          type: string\n      type: object\n    CreateSslCertificateRequest:\n      additionalProperties: false\n      properties:\n        additional_validation_attributes:\n          description: \"List of additional validation attributes for the certificate when choosing organization or extended validation.\\r\n\n            \u003ctable\u003e\u003ctr\u003e\u003cth\u003eName\u003c/th\u003e\u003cth\u003eInfo\u003c/th\u003e\u003cth\u003eRequired\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eFirstname\u003c/td\u003e\u003ctd\u003eFirstname of the technical contact\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eLastname\u003c/td\u003e\u003ctd\u003eLastname of the technical contact\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003ePhone\u003c/td\u003e\u003ctd\u003ePhone of the technical contact\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eEmailAddress\u003c/td\u003e\u003ctd\u003eEmail address of the technical contact\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eStreet\u003c/td\u003e\u003ctd\u003eAddress street of the organization\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eNumber\u003c/td\u003e\u003ctd\u003eAddress house number of the organization\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003ePostalCode\u003c/td\u003e\u003ctd\u003eAddress postal code of the organization\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eVatCountryCode\u003c/td\u003e\u003ctd\u003eVAT country code of the organization, ISO 3166-1 alpha-2 country code\u003c/td\u003e\u003ctd\u003eYes\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eOrganizationNumber\u003c/td\u003e\u003ctd\u003eBusiness number of the organization\u003c/td\u003e\u003ctd\u003eNo\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\"\n          items:\n            $ref: \"#/components/schemas/AdditionalValidationAttribute\"\n          type: array\n        certificate_type:\n          $ref: \"#/components/schemas/SslCertificateType\"\n        csr:\n          description: \"The certificate signing request data.\u003cbr /\u003e\\r\n\n            The certificate signing request subject should contain following attributes:\u003cbr /\u003e\u003ctable\u003e\u003ctr\u003e\u003cth\u003eName\u003c/th\u003e\u003cth\u003eCode\u003c/th\u003e\u003cth\u003eFormat\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eCommonName\u003c/td\u003e\u003ctd\u003eCN\u003c/td\u003e\u003ctd\u003eValid domain name, for example site.be, alias.site.be or *.site.be\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eCountry\u003c/td\u003e\u003ctd\u003eC\u003c/td\u003e\u003ctd\u003eISO 3166-1 alpha-2 country code\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eState\u003c/td\u003e\u003ctd\u003eST\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eLocality\u003c/td\u003e\u003ctd\u003eL\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eOrganization\u003c/td\u003e\u003ctd\u003eO\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eOrganizationUnit\u003c/td\u003e\u003ctd\u003eOU\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003eEmailAddress\u003c/td\u003e\u003ctd\u003eE\u003c/td\u003e\u003ctd\u003eValid email address\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\\r\n\n            The certificate signing request should also contain all the additional aliases and domains (SAN's) for the certificate.\"\n          type: string\n        validation_level:\n          $ref: \"#/components/schemas/SslCertificateValidationLevel\"\n      type: object\n    DnsRecord:\n      additionalProperties: false\n      properties:\n        content:\n          description: \"Variable data depending on the record type.\\r\n\n            \u003cul\u003e\u003cli\u003eA: the IPv4 address.\u003c/li\u003e\u003cli\u003eCNAME: canonical name of an alias.\u003c/li\u003e\u003cli\u003eMX: fully qualified domain name of a mail host.\u003c/li\u003e\u003cli\u003eSRV: does not apply. Data for the SRV records can be found in specific properties.\u003c/li\u003e\u003cli\u003eTXT: free form text data.\u003c/li\u003e\u003cli\u003eALIAS: canonical name of an alias.\u003c/li\u003e\u003cli\u003eTLSA: format should match specific values for usage, selector, matching type and data: \\\"{usage} {selector} {matching_type} {data}\\\"\\r\n\n            \\        \u003cul\u003e\u003cli\u003eThe usage. The first field after the TLSA text in the DNS RR, specifies how to verify the certificate.\u003cbr /\u003e\u003cul\u003e\u003cli\u003eA value of 0 is for what is commonly called CA constraint (and PKIX-TA). The certificate provided when establishing TLS must be issued by the listed root-CA or one of its intermediate CAs, with a valid certification path to a root-CA already trusted by the application doing the verification.\u003c/li\u003e\u003cli\u003eA value of 1 is for what is commonly called Service certificate constraint (and PKIX-EE). The certificate used must match the TLSA record exactly, and it must also pass PKIX certification path validation to a trusted root-CA.\u003c/li\u003e\u003cli\u003eA value of 2 is for what is commonly called Trust Anchor Assertion (and DANE-TA). The certificate used has a valid certification path pointing back to the certificate mention in this record, but there is no need for it to pass the PKIX certification path validation to a trusted root-CA.\u003c/li\u003e\u003cli\u003eA value of 3 is for what is commonly called Domain issued certificate (and DANE-EE). The services uses a self-signed certificate. It is not signed by anyone else, and is exactly this record.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eThe selector. When connecting to the service and a certificate is received, the selector field specifies which parts of it should be checked.\u003cbr /\u003e\u003cul\u003e\u003cli\u003eA value of 0 means to select the entire certificate for matching.\u003c/li\u003e\u003cli\u003eA value of 1 means to select just the public key for certificate matching. Matching the public key is often sufficient, as this is likely to be unique.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eThe matching type.\u003cbr /\u003e\u003cul\u003e\u003cli\u003eA type of 0 means the entire information selected is present in the certificate association data.\u003c/li\u003e\u003cli\u003eA type of 1 means to do a SHA-256 hash of the selected data.\u003c/li\u003e\u003cli\u003eA type of 2 means to do a SHA-512 hash of the selected data.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eThe actual data to be matched given the settings of the other fields. This is a long text string of hexadecimal data.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n        id:\n          description: \"The id of the record\\r\n\n            This value is ignored for creation of new records.\"\n          type: string\n        port:\n          description: \"The port for SRV records.\u003cbr /\u003e\\r\n\n            The value MUST be a positive integer.\u003cbr /\u003e\\r\n\n            Editing the value is not possible. You should add a new SRV record and delete the existing record.\"\n          format: int32\n          type: integer\n        priority:\n          default: 10\n          description: \"The priority for MX or SRV records.\u003cbr /\u003e\\r\n\n            A lower value means more preferred.\u003cbr /\u003e\\r\n\n            The value MUST be a positive integer less or equal to 9999.\"\n          format: int32\n          type: integer\n        protocol:\n          default: TCP\n          description: \"Used for the creation of SRV records. Possible options: TCP, UDP, ...\u003cbr /\u003e\\r\n\n            Editing the value is not possible. You should add a new SRV record and delete the existing record.\"\n          type: string\n        record_name:\n          description: \"The name of the record.\u003cbr /\u003e\\r\n\n            This is the host name, alias defined by the record.\u003cbr /\u003e\\r\n\n            An empty record or '@' is equal to the domain name.\u003cbr /\u003e\\r\n\n            Applies to A, MX, CNAME, TXT, ALIAS and TLSA records.\u003cbr /\u003e\\r\n\n            When type is TLSA the recommended value format is port number, protocol and host: _25._tcp.\u003cbr /\u003e\\r\n\n            Does not apply for SRV records.\"\n          type: string\n        service:\n          description: \"The symbolic name of the desired service for SRV records.\u003cbr /\u003e\\r\n\n            Editing the value is not possible. You should add a new SRV record and can delete the existing record.\"\n          type: string\n        target:\n          description: \"The canonical hostname of the machine providing the service for SRV records.\u003cbr /\u003e\\r\n\n            Editing the value is not possible. You should add a new SRV record and delete the existing record.\"\n          type: string\n        ttl:\n          default: 3600\n          description: \"Time to live of the record in seconds.\u003cbr /\u003e\\r\n\n            It defines the time frame that clients can cache the information.\u003cbr /\u003e\\r\n\n            The value MUST be between 60 and 86400. The default value is 3600 (= 1 hour).\"\n          format: int32\n          type: integer\n        type:\n          description: The type of the record (A, MX, CNAME, SRV, TXT, ALIAS and TLSA).\n          type: string\n        weight:\n          default: 0\n          description: \"The weight for SRV records with the same priority.\u003cbr /\u003e\\r\n\n            A higher value means more preferred.\"\n          format: int32\n          type: integer\n      type: object\n    Domain:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: The domain name\n          type: string\n        expiration_date:\n          description: Expiration date of the domain\n          format: date-time\n          type: string\n        will_renew:\n          description: \"Indication of renewal.\u003cbr /\u003e\\r\n\n            No value indicates that the renewal state could not be determined at the moment.\"\n          type: boolean\n      type: object\n    DomainDetail:\n      additionalProperties: false\n      properties:\n        can_toggle_renew:\n          description: Indication if the domain renew state can be changed.\n          type: boolean\n        domain_name:\n          description: The domain name\n          type: string\n        expiration_date:\n          description: Expiration date of the domain\n          format: date-time\n          type: string\n        name_servers:\n          description: Nameservers of the domain\n          items:\n            $ref: \"#/components/schemas/NameServer\"\n          type: array\n        registrant:\n          $ref: \"#/components/schemas/Registrant\"\n        will_renew:\n          description: \"Indication of renewal.\u003cbr /\u003e\\r\n\n            No value indicates that the renewal state could not be determined at the moment.\"\n          type: boolean\n      type: object\n    EditDomainWillRenewRequest:\n      additionalProperties: false\n      properties:\n        will_renew:\n          description: Indication of renewal.\n          type: boolean\n      type: object\n    EditNameServers:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: The domain name to register.\n          type: string\n        name_servers:\n          description: List of name servers.\n          items:\n            type: string\n          type: array\n      type: object\n    ExtraField:\n      additionalProperties: false\n      properties:\n        name:\n          description: Registrant extra field name.\n          type: string\n        value:\n          description: Registrant extra field value.\n          type: string\n      type: object\n    FtpConfiguration:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enable or disable FTP.\n          type: boolean\n      type: object\n    GzipConfig:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    HostHeader:\n      additionalProperties: false\n      description: A host header identifies a web domain.\n      properties:\n        enabled:\n          description: Indicates if the host header is applied on the web server.\n          type: boolean\n        name:\n          description: The name of the host header.\n          type: string\n      type: object\n    Http2Configuration:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enable or disable HTTP/2.\n          type: boolean\n      type: object\n    LetsEncryptConfig:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    LinuxHosting:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: Domain name for the Linux hosting account.\n          type: string\n        servicepack_id:\n          description: Id of Linux hosting service package.\n          format: int32\n          type: integer\n      type: object\n    LinuxHostingDetail:\n      additionalProperties: false\n      properties:\n        actual_size:\n          description: Used webspace size in MB\n          format: int32\n          type: integer\n        domain_name:\n          description: Domain name for the Linux hosting account.\n          type: string\n        ftp_enabled:\n          description: Indicates whether ftp is enabled for the hosting account.\n          type: boolean\n        ftp_username:\n          description: Ftp username\n          type: string\n        ip:\n          description: Linux hosting IP address\n          type: string\n        ip_type:\n          $ref: \"#/components/schemas/LinuxIpType\"\n        max_size:\n          description: Maximum webspace size in MB\n          format: int32\n          type: integer\n        max_webspace_size:\n          deprecated: true\n          description: \"Maximum webspace size in MB\u003cbr /\u003e\\r\n\n            Use max_size instead.\"\n          format: int32\n          type: integer\n        mysql_database_names:\n          description: \"A list of mysql databases linked to the hosting account.\u003cbr /\u003e\\r\n\n            Details of the database can be read using the mysql database detail.\"\n          items:\n            type: string\n          type: array\n        php_version:\n          description: The active php version for the hosting account.\n          type: string\n        servicepack_id:\n          description: Id of Linux hosting service package.\n          format: int32\n          type: integer\n        sites:\n          description: A list of websites on the hosting account.\n          items:\n            $ref: \"#/components/schemas/LinuxSite\"\n          type: array\n        ssh_host:\n          description: Ssh host of the linux hosting account\n          type: string\n        ssh_username:\n          description: Ssh username\n          type: string\n        webspace_usage:\n          deprecated: true\n          description: \"Used webspace size in MB\u003cbr /\u003e\\r\n\n            Use actual_size instead.\"\n          format: int32\n          type: integer\n      type: object\n    LinuxIpType:\n      description: Type of the hosting IP address (dedicated or shared)\n      enum:\n        - dedicated\n        - shared\n      type: string\n    LinuxSite:\n      additionalProperties: false\n      properties:\n        host_headers:\n          description: Host headers for the website.\n          items:\n            $ref: \"#/components/schemas/HostHeader\"\n          type: array\n        http2_enabled:\n          description: Indicates whether http/2 protocol is enabled for the website.\n          type: boolean\n        https_redirect_enabled:\n          description: Indicates whether automatic https redirection is enabled for the website.\n          type: boolean\n        name:\n          description: The name of the website.\n          type: string\n        path:\n          description: The path of the website.\n          type: string\n        ssl_enabled:\n          description: Indicates whether ssl is enabled for the website.\n          type: boolean\n      type: object\n    MailZone:\n      additionalProperties: false\n      properties:\n        aliases:\n          description: \"List of aliases on the mail zone\u003cbr /\u003e\\r\n\n            An alias is an e-mail address (alias) that automatically forwards received e-mails to another e-mail address (destination).\"\n          items:\n            $ref: \"#/components/schemas/Alias\"\n          type: array\n        anti_spam:\n          $ref: \"#/components/schemas/AntiSpam\"\n        available_accounts:\n          description: List of mail zone accounts with their mailbox size.\n          items:\n            $ref: \"#/components/schemas/MailZoneAccount\"\n          type: array\n        catch_all:\n          $ref: \"#/components/schemas/CatchAll\"\n        enabled:\n          description: Indicates whether the mail zone is enabled.\n          type: boolean\n        name:\n          type: string\n        smtp_domains:\n          description: \"List of extra smtp domains on the mail zone\u003cbr /\u003e\\r\n\n            SMTP domain names allow you to link multiple domain names to a single e-mail address.\u003cbr /\u003e\\r\n\n            E-mails sent to an SMTP domain will be caught by the respective e-mail address on the main domain name.\"\n          items:\n            $ref: \"#/components/schemas/SmtpDomain\"\n          type: array\n      type: object\n    MailZoneAccount:\n      additionalProperties: false\n      properties:\n        account_id:\n          description: Mail zone account id, use this value to create a mailbox\n          format: int32\n          type: integer\n        size:\n          description: Size of mailbox(es) in MB\n          format: int32\n          type: integer\n      type: object\n    Mailbox:\n      additionalProperties: false\n      properties:\n        actual_size:\n          description: Used size in MB\n          format: int32\n          type: integer\n        max_size:\n          description: Maximum size in MB\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    MailboxDetail:\n      additionalProperties: false\n      properties:\n        actual_size:\n          description: Used size in MB\n          format: int32\n          type: integer\n        auto_forward:\n          $ref: \"#/components/schemas/AutoForward\"\n        auto_reply:\n          $ref: \"#/components/schemas/AutoReply\"\n        login:\n          description: Login to connect with the mailbox\n          type: string\n        max_size:\n          description: Maximum size in MB\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    MySqlDatabase:\n      additionalProperties: false\n      properties:\n        account_id:\n          description: The account id for the database.\n          format: int32\n          type: integer\n        actual_size:\n          description: The actual size in MB for the database.\n          format: int32\n          type: integer\n        hostname:\n          description: Hostname\n          type: string\n        max_size:\n          description: The maximim size in MB for the database.\n          format: int32\n          type: integer\n        name:\n          description: Database name\n          type: string\n        user_count:\n          description: The number of users.\n          format: int32\n          type: integer\n      type: object\n    MySqlUser:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: User status\n          type: boolean\n        name:\n          description: User name\n          type: string\n        rights:\n          $ref: \"#/components/schemas/UserRights\"\n      type: object\n    NameServer:\n      additionalProperties: false\n      properties:\n        ip:\n          description: Nameserver ip\n          type: string\n        name:\n          description: Nameserver name\n          type: string\n      type: object\n    PhpVersion:\n      additionalProperties: false\n      properties:\n        version:\n          description: Php version\n          type: string\n      type: object\n    ProvisioningJobCompletion:\n      additionalProperties: false\n      properties:\n        id:\n          description: The id of the job.\n          type: string\n        resource_links:\n          description: Links to the created resource(s).\n          items:\n            type: string\n          type: array\n      type: object\n    ProvisioningJobInfo:\n      additionalProperties: false\n      properties:\n        completion:\n          $ref: \"#/components/schemas/CompletionEstimation\"\n        id:\n          description: The id of the job.\n          type: string\n        status:\n          $ref: \"#/components/schemas/ProvisioningJobStatus\"\n      type: object\n    ProvisioningJobStatus:\n      description: Current job status\n      enum:\n        - ongoing\n        - cancelled\n        - failed\n        - finished\n      type: string\n    RegisterDomain:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: \"The domain name to register.\u003cbr /\u003e\\r\n\n            Only pass the domain part and the tld.\u003cbr /\u003e\u003ci\u003eFor abc.com, abc is the domain part, com is the tld.\u003c/i\u003e\"\n          type: string\n        name_servers:\n          description: List of name servers. When empty, the registation will be done on default name servers.\n          items:\n            type: string\n          type: array\n        registrant:\n          $ref: \"#/components/schemas/RegistrantInput\"\n      type: object\n    Registrant:\n      additionalProperties: false\n      properties:\n        address:\n          description: Address of the registrant.\n          type: string\n        city:\n          description: City of the registrant.\n          type: string\n        company_name:\n          description: \"Company name of the registrant.\u003cbr /\u003e\\r\n\n            The registrant is a company if not empty, otherwise the registrant is an individual when validating extra fields.\"\n          type: string\n        country_code:\n          description: \"Country code of the registrant.\\r\n\n            Syntax: 'BE', 'NL, 'FR', ...\"\n          type: string\n        email:\n          description: Email of the registrant.\n          type: string\n        enterprise_number:\n          description: \"Enterprise number of the registrant.\u003cbr /\u003e\\r\n\n            Syntax: 'BE0123456789'\"\n          type: string\n        fax:\n          description: \"Fax of the registrant.\\r\n\n            Syntax: '+32.123456789'\"\n          type: string\n        first_name:\n          description: First name of the registrant.\n          type: string\n        language_code:\n          description: \"Language code of the registrant.\\r\n\n            Syntax: 'nl', 'fr', 'en', 'de', ...\"\n          type: string\n        last_name:\n          description: Last name of the registrant.\n          type: string\n        phone:\n          description: \"Phone of the registrant.\u003cbr /\u003e\\r\n\n            Syntax: '+32.123456789'\"\n          type: string\n        postal_code:\n          description: Postal code of the registrant.\n          type: string\n      type: object\n    RegistrantInput:\n      additionalProperties: false\n      properties:\n        address:\n          description: Address of the registrant.\n          type: string\n        city:\n          description: City of the registrant.\n          type: string\n        company_name:\n          description: \"Company name of the registrant.\u003cbr /\u003e\\r\n\n            The registrant is a company if not empty, otherwise the registrant is an individual when validating extra fields.\"\n          type: string\n        country_code:\n          description: \"Country code of the registrant.\\r\n\n            Syntax: 'BE', 'NL, 'FR', ...\"\n          type: string\n        email:\n          description: Email of the registrant.\n          type: string\n        enterprise_number:\n          description: \"Enterprise number of the registrant.\u003cbr /\u003e\\r\n\n            Syntax: 'BE0123456789'\"\n          type: string\n        extra_fields:\n          description: \"List of registrant extra fields for the domain name.\\r\n\n            \u003ctable\u003e\u003ctr\u003e\u003cth\u003eExtension\u003c/th\u003e\u003cth\u003eRegistrant specifics\u003c/th\u003e\u003cth\u003eRequired extra field(s)\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.dk\u003c/td\u003e\u003ctd\u003eis a company\u003c/td\u003e\u003ctd\u003eCompanyNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.es\u003c/td\u003e\u003ctd\u003eis a company\u003c/td\u003e\u003ctd\u003eCompanyNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.es\u003c/td\u003e\u003ctd\u003eis an individual\u003c/td\u003e\u003ctd\u003ePassportNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.fr\u003c/td\u003e\u003ctd\u003eis a company\u003c/td\u003e\u003ctd\u003eCompanyNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.it\u003c/td\u003e\u003ctd\u003eis an individual and has country code 'IT'\u003c/td\u003e\u003ctd\u003eCodiceFiscal\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.it\u003c/td\u003e\u003ctd\u003eis an individual and has not country code 'IT'\u003c/td\u003e\u003ctd\u003ePassportNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.nu\u003c/td\u003e\u003ctd\u003eis a company\u003c/td\u003e\u003ctd\u003eCompanyNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.nu\u003c/td\u003e\u003ctd\u003eis an individual\u003c/td\u003e\u003ctd\u003ePassportNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.se\u003c/td\u003e\u003ctd\u003eis a company\u003c/td\u003e\u003ctd\u003eCompanyNumber\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e.se\u003c/td\u003e\u003ctd\u003eis an individual\u003c/td\u003e\u003ctd\u003ePassportNumber\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\"\n          items:\n            $ref: \"#/components/schemas/ExtraField\"\n          type: array\n        fax:\n          description: \"Fax of the registrant.\\r\n\n            Syntax: '+32.123456789'\"\n          type: string\n        first_name:\n          description: First name of the registrant.\n          type: string\n        language_code:\n          description: \"Language code of the registrant.\\r\n\n            Syntax: 'nl', 'fr', 'en', 'de', ...\"\n          type: string\n        last_name:\n          description: Last name of the registrant.\n          type: string\n        phone:\n          description: \"Phone of the registrant.\u003cbr /\u003e\\r\n\n            Syntax: '+32.123456789'\"\n          type: string\n        postal_code:\n          description: Postal code of the registrant.\n          type: string\n      type: object\n    ScheduledTask:\n      additionalProperties: false\n      properties:\n        cron_expression:\n          description: \"Cron expression of scheduled task.\u003cbr /\u003e\\r\n\n            5-digit expressions (*/5 * * * *) are required in the following sequence:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eMinute (0 - 59, also */5, */10, */15 and */30 as every 5 minutes, every 10 minutes, every quarter or every half-hour are allowed)\u003c/li\u003e\u003cli\u003eHour (0 - 23, also * as every hour is allowed)\u003c/li\u003e\u003cli\u003eDay of the month (1 - 31, also * as every day is allowed)\u003c/li\u003e\u003cli\u003eMonth (1 - 12 as January to December, also * as every month is allowed)\u003c/li\u003e\u003cli\u003eDay of the week (1 - 7 as Monday to Sunday, also * as every day is allowed)\u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n        enabled:\n          description: Enabled.\n          type: boolean\n        id:\n          description: \"The id of the scheduled task.\u003cbr /\u003e\\r\n\n            This value is ignored for creation of new scheduled tasks.\"\n          type: string\n        script_location:\n          description: Absolute path from this linux hosting to execute.\n          type: string\n      type: object\n    Servicepack:\n      additionalProperties: false\n      description: Servicepack information.\n      properties:\n        id:\n          description: The id of the service pack\n          format: int32\n          type: integer\n        name:\n          description: The name of the service pack\n          type: string\n      type: object\n    SiteBinding:\n      additionalProperties: false\n      description: A site binding identifies a web domain.\n      properties:\n        cert_thumbprint:\n          description: The certificate thumbprint of the site binding.\n          type: string\n        host_name:\n          description: The host name of the site binding.\n          type: string\n        ip_address:\n          description: The IP address of the site binding.\n          type: string\n        port:\n          description: The port of the site binding.\n          format: int32\n          type: integer\n        protocol:\n          description: The protocol of the site binding.\n          type: string\n        ssl_enabled:\n          description: Indicates whether ssl is enabled for the binding.\n          type: boolean\n      type: object\n    SmtpDomain:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n        hostname:\n          description: The smtp domain name\n          type: string\n      type: object\n    SshConfiguration:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enable or disable SSH.\n          type: boolean\n      type: object\n    SshKey:\n      additionalProperties: false\n      properties:\n        fingerprint:\n          description: \"The fingerprint of the public key.\u003cbr /\u003e\\r\n\n            This value is ignored for creation of new SSH keys.\"\n          type: string\n        public_key:\n          description: Public key\n          type: string\n      type: object\n    SshKeyDetail:\n      additionalProperties: false\n      properties:\n        fingerprint:\n          description: \"The fingerprint of the public key.\u003cbr /\u003e\\r\n\n            This value is ignored for creation of new SSH keys.\"\n          type: string\n        linux_hostings:\n          description: List of Linux hostings where SSH key is attached\n          items:\n            type: string\n          type: array\n        public_key:\n          description: Public key\n          type: string\n      type: object\n    SslCertificate:\n      additionalProperties: false\n      properties:\n        common_name:\n          description: The common name (e.g. domain.com) of the certificate.\n          type: string\n        expires_after:\n          description: The exact time the certificate will expire.\n          format: date-time\n          type: string\n        sha1_fingerprint:\n          description: \"The SHA-1 fingerprint of the certificate.\u003cbr /\u003e\\r\n\n            The fingerprint is a cryptographic hash which is a short unique identification of the certificate.\"\n          type: string\n        type:\n          $ref: \"#/components/schemas/SslCertificateType\"\n        validation_level:\n          $ref: \"#/components/schemas/SslCertificateValidationLevel\"\n      type: object\n    SslCertificateDetail:\n      additionalProperties: false\n      properties:\n        common_name:\n          description: The common name (e.g. domain.com) of the certificate.\n          type: string\n        expires_after:\n          description: The exact time the certificate will expire.\n          format: date-time\n          type: string\n        sha1_fingerprint:\n          description: \"The SHA-1 fingerprint of the certificate.\u003cbr /\u003e\\r\n\n            The fingerprint is a cryptographic hash which is a short unique identification of the certificate.\"\n          type: string\n        subject_alt_names:\n          description: The list of all supported dns names in the certificate.\n          items:\n            $ref: \"#/components/schemas/SslSubjectAltName\"\n          type: array\n        type:\n          $ref: \"#/components/schemas/SslCertificateType\"\n        validation_level:\n          $ref: \"#/components/schemas/SslCertificateValidationLevel\"\n      type: object\n    SslCertificateFileFormat:\n      description: \"The file format of the returned file stream:\\r\n\n        \u003cul\u003e\u003cli\u003ePFX: Also known as PKCS #12, is a single, password protected certificate archive that contains the entire certificate chain plus the matching private key.\u003c/li\u003e\u003c/ul\u003e\"\n      enum:\n        - pfx\n      type: string\n    SslCertificateRequest:\n      additionalProperties: false\n      properties:\n        certificate_type:\n          $ref: \"#/components/schemas/SslCertificateType\"\n        common_name:\n          description: The common name of the certificate request.\n          type: string\n        id:\n          description: The id of the certificate request.\n          format: int32\n          type: integer\n        order_code:\n          description: The order code of the certificate request.\n          type: string\n        validation_level:\n          $ref: \"#/components/schemas/SslCertificateValidationLevel\"\n        vendor:\n          $ref: \"#/components/schemas/SslCertificateVendor\"\n      type: object\n    SslCertificateRequestDetail:\n      additionalProperties: false\n      properties:\n        certificate_type:\n          $ref: \"#/components/schemas/SslCertificateType\"\n        common_name:\n          description: The common name of the certificate request.\n          type: string\n        id:\n          description: The id of the certificate request.\n          format: int32\n          type: integer\n        order_code:\n          description: The order code of the certificate request.\n          type: string\n        subject_alt_names:\n          description: The list of all supported domains in the certificate.\n          items:\n            $ref: \"#/components/schemas/SslSubjectAltName\"\n          type: array\n        validation_level:\n          $ref: \"#/components/schemas/SslCertificateValidationLevel\"\n        validations:\n          description: The list of dns names to be validated with the information related to domain verification.\n          items:\n            $ref: \"#/components/schemas/SslCertificateRequestValidation\"\n          type: array\n        vendor:\n          $ref: \"#/components/schemas/SslCertificateVendor\"\n      type: object\n    SslCertificateRequestValidation:\n      additionalProperties: false\n      properties:\n        auto_validated:\n          description: Returns true if no user interaction is required and the domain validation will be verified automatic.\n          type: boolean\n        cname_validation_content:\n          description: The value-part (Point To) of the CNAME-record that must be created as part of domain verification.\n          type: string\n        cname_validation_name:\n          description: The host-part (Name) of the CNAME-record that must be created as part of domain verification.\n          type: string\n        dns_name:\n          description: A domain name of the certificate.\n          type: string\n        email_addresses:\n          description: An array of eligible domain verification email addresses.\n          items:\n            type: string\n          type: array\n        file_validation_content:\n          description: The content your verification file must contain, consisting of three lines of plain-text.\n          items:\n            type: string\n          type: array\n        file_validation_url_http:\n          description: The URL (http format) your verification file must be uploaded to as part of domain verification.\n          type: string\n        file_validation_url_https:\n          description: The URL (https format) your verification file must be uploaded to as part of domain verification.\n          type: string\n        type:\n          $ref: \"#/components/schemas/SslCertificateRequestValidationType\"\n      type: object\n    SslCertificateRequestValidationType:\n      description: The domain validation verification type.\n      enum:\n        - dns\n        - file\n        - email\n      type: string\n    SslCertificateType:\n      description: \"The type of the certificate:\\r\n\n        \u003cul\u003e\u003cli\u003eStandard: Certificate for a single domain.\u003c/li\u003e\u003cli\u003eMulti domain: Certificate for multiple (sub)domains belonging to the same owner.\u003c/li\u003e\u003cli\u003eWildcard: Certificate for all the subdomains.\u003c/li\u003e\u003c/ul\u003e\"\n      enum:\n        - standard\n        - multi_domain\n        - wildcard\n      type: string\n    SslCertificateValidationLevel:\n      description: \"The validation level of the certificate:\\r\n\n        \u003cul\u003e\u003cli\u003eDomain validated: Basic check of the identity of the owner of the domain name.\u003c/li\u003e\u003cli\u003eOrganization validated: Company details are verified and integrated in the certificate.\u003c/li\u003e\u003cli\u003eExtended validated: A thorough verification of your domain name and company details.\u003c/li\u003e\u003c/ul\u003e\"\n      enum:\n        - domain_validated\n        - organization_validated\n        - extended_validated\n      type: string\n    SslCertificateVendor:\n      description: The vendor of the certificate.\n      enum:\n        - sectigo\n      type: string\n    SslSubjectAltName:\n      additionalProperties: false\n      properties:\n        type:\n          $ref: \"#/components/schemas/SslSubjectAltNameType\"\n        value:\n          description: The value of the alt name.\n          type: string\n      type: object\n    SslSubjectAltNameType:\n      description: \"The type of the alt name:\\r\n\n        \u003cul\u003e\u003cli\u003eDns\u003c/li\u003e\u003cli\u003eIp\u003c/li\u003e\u003c/ul\u003e\"\n      enum:\n        - dns\n        - ip\n      type: string\n    UpdateAliasRequest:\n      additionalProperties: false\n      properties:\n        destinations:\n          description: The alias destination e-mail addresses\n          items:\n            type: string\n          type: array\n      type: object\n    UpdateAntiSpamRequest:\n      additionalProperties: false\n      properties:\n        type:\n          $ref: \"#/components/schemas/AntiSpamTypes\"\n      type: object\n    UpdateMailboxPasswordRequest:\n      additionalProperties: false\n      properties:\n        password:\n          description: \"The password for the database user.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n      type: object\n    UpdatePhpAPcuRequest:\n      additionalProperties: false\n      properties:\n        apcu_size:\n          description: The APcu size.\n          format: int32\n          type: integer\n        enabled:\n          description: Enables or disables APC.\n          type: boolean\n      type: object\n    UpdatePhpMemoryLimitRequest:\n      additionalProperties: false\n      properties:\n        memory_limit:\n          description: The php memory limit\n          format: int32\n          type: integer\n      type: object\n    UpdateSmtpDomainRequest:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    UpdateUserPasswordRequest:\n      additionalProperties: false\n      properties:\n        password:\n          description: \"The password for the database user.\u003cbr /\u003e\\r\n\n            Passwords have to adhere to following rules:\u003cbr /\u003e\u003cul\u003e\u003cli\u003eBetween 8-20 characters.\u003c/li\u003e\u003cli\u003eMust be a mix of letters and digits.\u003c/li\u003e\u003cli\u003eMust contain at least one digit (0-9).\u003c/li\u003e\u003cli\u003eMust contain at least one letter (a-z).\u003c/li\u003e\u003cli\u003eCannot contain spaces.\u003c/li\u003e\u003cli\u003eCannot contain characters: * € $ \u0026 + } { ' \\\" \\\\ \u003c/li\u003e\u003c/ul\u003e\"\n          type: string\n      type: object\n    UpdateUserStatusRequest:\n      additionalProperties: false\n      properties:\n        enabled:\n          description: Enabled\n          type: boolean\n      type: object\n    UserRights:\n      description: User rights\n      enum:\n        - read_and_write\n        - read_only\n      type: string\n    ValidationErrorMessage:\n      additionalProperties: false\n      properties:\n        error_code:\n          type: string\n        error_text:\n          type: string\n      type: object\n    WindowsHosting:\n      additionalProperties: false\n      properties:\n        domain_name:\n          description: Domain name for the Windows hosting account.\n          type: string\n        servicepack_id:\n          description: Id of Windows hosting service package.\n          format: int32\n          type: integer\n      type: object\n    WindowsHostingDetail:\n      additionalProperties: false\n      properties:\n        actual_size:\n          description: Used webspace size in MB\n          format: int32\n          type: integer\n        application_pool:\n          $ref: \"#/components/schemas/ApplicationPool\"\n        domain_name:\n          description: Domain name for the Windows hosting account.\n          type: string\n        ftp_username:\n          description: Ftp username\n          type: string\n        ip:\n          description: Windows hosting IP address\n          type: string\n        ip_type:\n          $ref: \"#/components/schemas/WindowsIpType\"\n        max_size:\n          description: Maximum webspace size in MB\n          format: int32\n          type: integer\n        mssql_database_names:\n          description: A list of mssql databases linked to the hosting account.\u003cbr /\u003e\n          items:\n            type: string\n          type: array\n        servicepack_id:\n          description: Id of Windows hosting service package.\n          format: int32\n          type: integer\n        sites:\n          description: A list of websites on the hosting account.\n          items:\n            $ref: \"#/components/schemas/WindowsSite\"\n          type: array\n      type: object\n    WindowsIpType:\n      description: Type of the hosting IP address (dedicated or shared)\n      enum:\n        - dedicated\n        - shared\n      type: string\n    WindowsSite:\n      additionalProperties: false\n      properties:\n        bindings:\n          description: The bindings for the website.\n          items:\n            $ref: \"#/components/schemas/SiteBinding\"\n          type: array\n        name:\n          description: The name of the website.\n          type: string\n        path:\n          description: The path of the website.\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/combell.com/v2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/combell.com/v2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}