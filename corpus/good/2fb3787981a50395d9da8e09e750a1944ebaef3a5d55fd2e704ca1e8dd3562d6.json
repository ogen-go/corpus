{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/folosada/brasilvacinado"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api/api.yaml",
			"byteSize": 6163,
			"content": "openapi: 3.0.0\ninfo:\n  title: Brasil Vacinado API\n  contact:\n    name: Fl√°vio Omar Losada\n    url: https://www.linkedin.com/in/folosada/\n  version: 1.0.0\n\nx-amazon-apigateway-request-validators:\n  all:\n    validateRequestBody: true\n    validateRequestParameters: true\n  params:\n    validateRequestBody: false\n    validateRequestParameters: true\n  body:\n    validateRequestBody: true\n    validateRequestParameters: false\n\ncomponents:\n  parameters:\n    InitialDate:\n      in: query\n      name: initialDate\n      required: true\n      schema:\n        type: string\n        format: date\n    FinalDate:\n      in: query\n      name: finalDate\n      required: true\n      schema:\n        type: string\n        format: date\n  schemas:\n    VaccinationData:\n      type: array\n      items:\n        type: object\n        properties:\n          iso_code:\n            type: string\n          date:\n            type: string\n          total_vaccinations:\n            type: number\n    HistoricData:\n      type: array\n      items:\n        type: object\n        properties:\n          iso_code:\n            type: string\n          date:\n            type: string\n            format: date-time\n          total_vaccinations:\n            type: number\n          new_vaccinations:\n            type: number\n\n  responses:\n    UnauthorizedError:\n      description: API key is missing or invalid\n      headers:\n        WWW_Authenticate:\n          schema:\n            type: string\n    Options:\n      headers:\n        Access-Control-Allow-Origin:\n          schema:\n            type: string\n        Access-Control-Allow-Methods:\n          schema:\n            type: string\n        Access-Control-Allow-Headers:\n          schema:\n            type: string\n      content: {}\npaths:\n  /vaccination:\n    options:\n      tags:\n        - CORS\n      responses:\n        '200':\n          $ref: '#/components/responses/Options'\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: |\n            {\n              \"statusCode\" : 200\n            }\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''\n              method.response.header.Access-Control-Allow-Methods: '''*'''\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n            responseTemplates:\n              application/json: |\n                {}\n    get:\n      summary: Returns vaccination data\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetVaccinationDataFunction.Arn}/invocations\n        passthorughBehavior: when_no_match\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''\n              method.response.header.Access-Control-Allow-Methods: '''*'''\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n            responseTemplates:\n              application/json: |\n                {}\n      responses:\n        '200':\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VaccinationData'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /graphic:\n    options:\n      tags:\n        - CORS\n      responses:\n        '200':\n          $ref: '#/components/responses/Options'\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: |\n            {\n              \"statusCode\" : 200\n            }\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''\n              method.response.header.Access-Control-Allow-Methods: '''*'''\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n            responseTemplates:\n              application/json: |\n                {}\n    get:\n      summary: Returns data to build the graphic\n      x-amazon-apigateway-request-validator: params\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetGraphicDataFunction.Arn}/invocations\n        passthorughBehavior: when_no_match\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''\n              method.response.header.Access-Control-Allow-Methods: '''*'''\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n            responseTemplates:\n              application/json: |\n                {}\n      parameters:\n        - $ref: '#/components/parameters/InitialDate'\n        - $ref: '#/components/parameters/FinalDate'\n      responses:\n        '200':\n          description: All items are returned in array with total items and total items value\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HistoricData'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'",
			"canonicalURL": "/github.com/folosada/brasilvacinado@896f7e61e46952a49470d108820bc8290447f582/-/blob/api/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/folosada/brasilvacinado/blob/896f7e61e46952a49470d108820bc8290447f582/api/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}