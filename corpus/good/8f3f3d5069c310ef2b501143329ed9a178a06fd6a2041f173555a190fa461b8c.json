{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Amirhossein-Rajabpour/Movies-Database"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 11335,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"IE Fall 2021 backend assignment\"\n  version: \"1.0.0\"\n  title: \"IE-Fall 2021 backend\"\n  contact:\n    email: \"ie.ce.aut@gmail.com\"\ntags:\n- name: \"admin\"\n  description: \"Movie CRUD only for admin\"\n- name: \"user\"\n  description: \"User restricted features\"\n- name: \"public\"\n  description: \"public movie operations\"\npaths:\n  /admin/movie:\n    post:\n      tags:\n      - \"admin\"\n      security:\n        - BearerAuth: []\n      summary: \"Insert a new movie\"\n      description: \"Use this endpoint to create a movie\"\n      operationId: \"addMovie\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n              required:\n                - name\n                - description\n            examples:\n              Normal SMS:\n                value:\n                  name: \"Hoshdar baraye Cobra 11\"\n                  description: \"Film action khafan\"\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /admin/movie/{id}:\n    put:\n      tags:\n      - \"admin\"\n      security:\n        - BearerAuth: []\n      summary: \"Update a movie\"\n      description: \"Use this endpoint to update a movie\"\n      operationId: \"updateMovie\"\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: movie id.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n              required:\n                - name\n                - description\n            examples:\n              Successful insert:\n                value:\n                  name: \"Hoshdar baraye Cobra 11\"\n                  description: \"Film action khafan\"\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There was an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - \"admin\"\n      summary: \"Remove a movie\"\n      description: \"\"\n      operationId: \"deleteMovie\"\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: The name of the template.\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There was an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - BearerAuth: [] \n  /admin/comment/{id}:\n    put:\n      tags:\n      - \"admin\"\n      security:\n        - BearerAuth: []\n      summary: \"update a comment\"\n      description: \"Use this endpoint to update a comment(i.e. approving/disapproving a comment).\"\n      operationId: \"updateComment\"\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: comment id.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                approved:\n                  type: boolean\n              required:\n                - approved\n            examples:\n              Successful approval:\n                value:\n                  approved: true\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    delete:\n      tags:\n      - \"admin\"\n      summary: \"remove a movie\"\n      description: \"\"\n      operationId: \"deleteComment\"\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: comment id to delete.\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - BearerAuth: [] \n\n  /user/vote:\n    post:\n      tags:\n      - \"user\"\n      security:\n        - BearerAuth: []\n      summary: \"vote a movie\"\n      description: \"Use this endpoint to submit a vote(used for both submission and editing)\"\n      operationId: \"submitVote\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                movie_id:\n                  type: integer\n                vote:\n                  type: integer\n                  minimum: 0\n                  maximum: 10\n              required:\n                - movie_id\n                - vote\n            examples:\n              successful vote:\n                value:\n                  movie_id: 1\n                  vote: 5\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        204:\n          description: OK\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n                \n  /user/comment:\n    post:\n      tags:\n      - \"user\"\n      security:\n        - BearerAuth: []\n      summary: \"submit a comment\"\n      description: \"submit a comment\"\n      operationId: \"submitComment\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                movie_id:\n                  type: integer\n                comment_body:\n                  type: string\n              required:\n                - movie_id\n                - comment_body\n            examples:\n              Successful comment:\n                value:\n                  movie_id: 1\n                  comment_body: \"Filmi besyar ziba\"\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        200:\n          description: OK\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n                \n  /comments:\n    get:\n      tags:\n      - \"public\"\n      summary: \"get movie comments\"\n      description: \"\"\n      operationId: \"getComments\"\n      parameters:\n        - in: query\n          name: movie\n          schema:\n            type: string\n          required: true\n          description: movie ID to get comments for.\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentList'\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /movies:\n    get:\n      tags:\n      - \"public\"\n      summary: \"get list of movies\"\n      description: \"\"\n      operationId: \"getMovies\"\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MovieList'\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'         \n  /movie/{id}:\n    get:\n      tags:\n      - \"public\"\n      summary: \"get information of single movie\"\n      description: \"\"\n      operationId: \"getMovie\"\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: movie id.\n      responses:\n        400:\n          description:\n            Bad request. \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Movie'\n        500:\n          description: There is an internal issue.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'  \ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n\n  schemas:\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Describe the error in plain english.\n          \n    Movie:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        rating:\n          type: number\n          \n    MovieList:\n      type: object\n      properties: \n        movies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Movie'\n              \n    CommentList:\n      type: object\n      properties: \n        movie:\n          type: string\n        comments:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n              author:\n                type: string\n              body:\n                type: string",
			"canonicalURL": "/github.com/Amirhossein-Rajabpour/Movies-Database@2a031e83329a1e546c0e265282b6b603e00f9d5e/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Amirhossein-Rajabpour/Movies-Database/blob/2a031e83329a1e546c0e265282b6b603e00f9d5e/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}