{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "responses.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/responses.yml",
			"byteSize": 7072,
			"content": "openapi: 3.0.2\ninfo:\npaths:\ncomponents:\n    responses:\n        NotFound:\n            description: The record does not exist or was not found.\n            content:\n                application/json:\n                    schema:\n                        type: object\n                        properties:\n                            message:\n                                type: string\n                                description: More information about the error.\n                            status:\n                                type: number\n                                description: The HTTP status code for the error.\n                                format: int32\n                        required:\n                            - message\n                    example:\n                        status: 404\n                        message: Page Not Found\n        PermissionError:\n            description: You don't have adequate permissions to access this resource.\n            content:\n                application/json:\n                    schema:\n                        type: object\n                        required: [message, status, permissions]\n                        properties:\n                            message:\n                                type: string\n                                description: A message that tells you the permissions you need.\n                            status:\n                                type: number\n                                description: The HTTP status code for the error.\n                                format: int32\n                            permissions:\n                                description: The permissions the requesting user is missing.\n                                type: array\n                                items:\n                                    type: string\n                            recordIDs:\n                                description: The recordIDs the user didn't have permission on.\n                                type: array\n                                items:\n                                    type: integer\n                    example:\n                        status: 403\n                        message: Permission Problem\n                        permissions: [\"Vanilla.Discussions.Edit\", \"Vanilla.Community.Manage\"]\n                        recordIDs: [2425, 1342]\n        LongRunnerResponse:\n            description: |\n                Endpoints that may time out and require the client to\n                progress them with the `/api/v2/calls` endpoints may return this.\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/LongRunnerResult\"\n        TrackingSlipResponse:\n            description: |\n                Endpoints may queue a job to perform a task in the background.\n                This response allows you track that progress with the `/api/v2/job-statuses` endpoints.\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/TrackingSlipData\"\n    schemas:\n        LongRunnerResult:\n            description: |\n                Endpoints will return this if they may time out and require the client\n                to progress the task with additional requests.\n            type: object\n            required: [progress, callbackPayload]\n            properties:\n                callbackPayload:\n                    description: |\n                        A signed JWT payload to pass to the /api/v2/calls endpoint in order to continue\n                        progression of the task.\n                    type: string\n                    example: |\n                        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                progress:\n                    $ref: \"#/components/schemas/LongRunnerProgress\"\n        TrackingSlipData:\n            type: object\n            description: |\n                Represents a scheduled server-side job.\n            properties:\n                jobID:\n                    description: The ID of a particular job.\n                    type: string\n                    example: 10232183.longrunnerjob.5fa1a178cfe1b9.07902191\n                jobTrackingID:\n                    description: |\n                        A shared ID that can be used to track the status of a job.\n                        This ID persists even if jobs fail and retry, or spawn child jobs.\n                    type: string\n                    example: 42adsf424::613fda84bdea32.25565677\n                status:\n                    description: The current status of the job.\n                    type: string\n                    enum:\n                        - abandoned\n                        - complete\n                        - error\n                        - failed\n                        - intended\n                        - invalid\n                        - stackError\n                        - progress\n                        - retry\n                        - received\n                        - unknown\n                    example: received\n        BasicError:\n            type: object\n            properties:\n                message:\n                    description: Verbose description of the error.\n                    type: string\n                status:\n                    description: Response status code.\n                    type: integer\n            required:\n                - message\n                - status\n        LongRunnerProgress:\n            description: Progress of the task.\n            type: object\n            required: [successIDs, failedIDs, exceptionsByID]\n            properties:\n                successIDs:\n                    description: |\n                        The IDs of records for which an action has succeeded.\n                    example: [25, 145, 11431, 1313]\n                    type: array\n                    items:\n                        type: integer\n                failedIDs:\n                    description: |\n                        The IDs of records for which and action has failed.\n                    example: [14424, 1264524]\n                    type: array\n                    items:\n                        type: integer\n                exceptionsByID:\n                    description: Detailed errors by failedID during the action.\n                    example:\n                        14424:\n                            message: Discussions of type \"redirect\" can't be moved.\n                            code: 400\n                    type: object\n                    required: [message, type]\n                    properties:\n                        message:\n                            type: string\n                        code:\n                            type: number\n                countTotalIDs:\n                    description: Total count of records that can be progressed.\n                    type: integer\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/responses.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/responses.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}