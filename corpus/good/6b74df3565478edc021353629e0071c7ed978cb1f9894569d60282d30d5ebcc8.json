{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "npm/openapi-to-postmanv2"
		},
		"file": {
			"name": "balancePlatformService.yaml",
			"size": 0,
			"path": "test/data/valid_openapi31X/yaml/balancePlatformService.yaml",
			"byteSize": 199631,
			"content": "openapi: 3.1.0\nservers:\n  - url: https://balanceplatform-api-test.adyen.com/bcl/v1\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: |-\n    The Balance Platform API enables you to create a platform, onboard users as account holders, create balance accounts, and issue cards.\n\n    For information about use cases, refer to [Adyen Issuing](https://docs.adyen.com/issuing).\n\n     ## Authentication\n    Your Adyen contact will provide your API credential and an API key. To connect to the API, add an `X-API-Key` header with the API key as the value, for example:\n\n     ```\n    curl\n    -H \"Content-Type: application/json\" \\\n    -H \"X-API-Key: YOUR_API_KEY\" \\\n    ...\n    ```\n\n    Alternatively, you can use the username and password to connect to the API using basic authentication. For example:\n\n    ```\n    curl\n    -H \"Content-Type: application/json\" \\\n    -U \"ws@BalancePlatform.YOUR_BALANCE_PLATFORM\":\"YOUR_WS_PASSWORD\" \\\n    ...\n    ```\n    ## Versioning\n    Balance Platform API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.\n\n    For example:\n    ```\n    https://balanceplatform-api-test.adyen.com/bcl/v1\n    ```\n    ## Going live\n    When going live, your Adyen contact will provide your API credential for the live environment. You can then use the API key or the username and password to send requests to `https://balanceplatform-api-live.adyen.com/bcl/v1`.\n\n    For more information, refer to our [Going live documentation](https://docs.adyen.com/issuing/integration-checklist#going-live).\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: \"Issuing: Balance Platform API\"\n  version: \"1\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://adyen.com/.resources/adyen-website/themes/images/apple-icon-180x180.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/BalancePlatformService-v1.json\n      version: \"3.1\"\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: BalancePlatformService\npaths:\n  /accountHolders:\n    post:\n      description: |-\n        Creates an account holder. This resource represents your user's entity within the balance platform.\n\n        For more information, refer to [Create accounts](https://docs.adyen.com/issuing/create-accounts).\n      operationId: post-accountHolders\n      requestBody:\n        content:\n          application/json:\n            examples:\n              createAccountHolder:\n                $ref: \"#/components/examples/post-accountHolders-createAccountHolder\"\n            schema:\n              $ref: \"#/components/schemas/AccountHolderInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/post-accountHolders-success-200\"\n              schema:\n                $ref: \"#/components/schemas/AccountHolder\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create an account holder.\n      tags:\n        - Account holders\n      x-addedInVersion: \"1\"\n      x-groupName: Account holders\n      x-sortIndex: 1\n  \"/accountHolders/{id}\":\n    get:\n      description: Returns a specific account holder.\n      operationId: get-accountHolders-id\n      parameters:\n        - description: Unique identifier of the account holder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-accountHolders-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/AccountHolder\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve an account holder.\n      tags:\n        - Account holders\n      x-addedInVersion: \"1\"\n      x-groupName: Account holders\n      x-sortIndex: 3\n    patch:\n      description: |-\n        Updates a specific account holder. When updating an account holder resource, note that:\n\n        * If a parameter is not provided in the request, the parameter is left unchanged.\n\n        * When updating any parameter in the `contactDetails` object, you must send all other existing `contactDetails` parameters.\n      operationId: patch-accountHolders-id\n      parameters:\n        - description: Unique identifier of the account holder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              updateAccountHolderStatus:\n                $ref: \"#/components/examples/patch-accountHolders-id-updateAccountHolderStatus\"\n            schema:\n              $ref: \"#/components/schemas/AccountHolder\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/patch-accountHolders-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/AccountHolder\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update an account holder.\n      tags:\n        - Account holders\n      x-addedInVersion: \"1\"\n      x-groupName: Account holders\n      x-sortIndex: 2\n  \"/accountHolders/{id}/balanceAccounts\":\n    get:\n      description: |-\n        Returns a paginated list of balance accounts associated with a specific account holder. To fetch multiple pages, use the query parameters. \n\n        For example, to limit the page to 5 balance accounts and to skip the first 10: `/accountHolders/{id}/balanceAccounts?limit=5\u0026offset=10`.\n      operationId: get-accountHolders-id-balanceAccounts\n      parameters:\n        - description: Unique identifier of the account holder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The number of items that you want to skip.\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-accountHolders-id-balanceAccounts-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaginatedBalanceAccountsResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve all balance accounts of a specific account holder.\n      tags:\n        - Account holders\n      x-addedInVersion: \"1\"\n      x-groupName: Account holders\n      x-sortIndex: 4\n  /balanceAccounts:\n    post:\n      description: |-\n        Creates a balance account. The balance account resource holds the funds of the associated account holder. \n\n        For more information, refer to [Create accounts](https://docs.adyen.com/issuing/create-accounts).\n      operationId: post-balanceAccounts\n      requestBody:\n        content:\n          application/json:\n            examples:\n              createBalanceAccount:\n                $ref: \"#/components/examples/post-balanceAccounts-createBalanceAccount\"\n            schema:\n              $ref: \"#/components/schemas/BalanceAccountInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/post-balanceAccounts-success-200\"\n              schema:\n                $ref: \"#/components/schemas/BalanceAccount\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a balance account.\n      tags:\n        - Balance accounts\n      x-addedInVersion: \"1\"\n      x-groupName: Balance accounts\n      x-sortIndex: 1\n  \"/balanceAccounts/{id}\":\n    get:\n      description: Returns a specific balance account.\n      operationId: get-balanceAccounts-id\n      parameters:\n        - description: Unique identifier of the balance account.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-balanceAccounts-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/BalanceAccount\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a balance account.\n      tags:\n        - Balance accounts\n      x-addedInVersion: \"1\"\n      x-groupName: Balance accounts\n      x-sortIndex: 3\n    patch:\n      description: Updates a balance account.\n      operationId: patch-balanceAccounts-id\n      parameters:\n        - description: Unique identifier of the balance account.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BalanceAccountUpdateRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BalanceAccount\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a balance account.\n      tags:\n        - Balance accounts\n      x-addedInVersion: \"1\"\n      x-groupName: Balance accounts\n      x-sortIndex: 2\n  \"/balanceAccounts/{id}/paymentInstruments\":\n    get:\n      description: |-\n        Returns a paginated list of the payment instruments associated with a specific balance account. To fetch multiple pages, use the query parameters. \n\n        For example, to limit the page to 3 payment instruments and to skip the first 6: `/balanceAccounts/{id}/paymentInstruments?limit=3\u0026offset=6`\n      operationId: get-balanceAccounts-id-paymentInstruments\n      parameters:\n        - description: Unique identifier of the balance account.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The number of items that you want to skip.\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-balanceAccounts-id-paymentInstruments-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaginatedPaymentInstrumentsResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve all payment instruments for a specific balance account.\n      tags:\n        - Balance accounts\n      x-addedInVersion: \"1\"\n      x-groupName: Balance accounts\n      x-sortIndex: 4\n  \"/balancePlatforms/{id}\":\n    get:\n      description: Returns a specific balance platform.\n      operationId: get-balancePlatforms-id\n      parameters:\n        - description: Unique identifier of the balance platform.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-balancePlatforms-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/BalancePlatform\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a balance platform.\n      tags:\n        - General\n      x-addedInVersion: \"1\"\n      x-groupName: General\n      x-sortIndex: 0\n  \"/balancePlatforms/{id}/accountHolders\":\n    get:\n      description: |-\n        Returns a paginated list of all the account holders that belong to the balance platform. To fetch multiple pages, use the query parameters. \n\n        For example, to limit the page to 5 account holders and to skip the first 20: `/balancePlatforms/{id}/accountHolders?limit=5\u0026offset=20`.\n      operationId: get-balancePlatforms-id-accountHolders\n      parameters:\n        - description: Unique identifier of the balance platform.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The number of items that you want to skip.\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            type: integer\n        - description: The number of items returned per page, maximum 100 items. By default, the response returns 10 items per page.\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-balancePlatforms-id-accountHolders-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaginatedAccountHoldersResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve all account holders under a specific balance platform.\n      tags:\n        - General\n      x-addedInVersion: \"1\"\n      x-groupName: General\n      x-sortIndex: 0\n  /documents:\n    post:\n      description: |-\n        Uploads a document for verification checks. Adyen uses the information from the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/legalEntities) to run automated Know Your Customer checks. If these checks fail, your Adyen contact will inform you so you can provide additional documents. Adyen uses the documents to validate the identity of the individual or organization legal entity, or the legal entity's bank account details.\n\n         You should only upload documents when your Adyen contact informs you to provide additional information for the legal entity. For more information, refer to [Onboard and verify account holders](https://docs.adyen.com/issuing/kyc-verification).\n      operationId: post-documents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Document\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Upload a document for verification checks.\n      tags:\n        - Documents\n      x-addedInVersion: \"1\"\n      x-groupName: Documents\n      x-sortIndex: 4\n  \"/documents/{id}\":\n    delete:\n      description: Deletes a document.\n      operationId: delete-documents-id\n      parameters:\n        - description: Unique identifier of the document to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VoidResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Delete a document.\n      tags:\n        - Documents\n      x-addedInVersion: \"1\"\n      x-groupName: Documents\n      x-sortIndex: 7\n    get:\n      description: Returns a specific document.\n      operationId: get-documents-id\n      parameters:\n        - description: Unique identifier of the document.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a document.\n      tags:\n        - Documents\n      x-addedInVersion: \"1\"\n      x-groupName: Documents\n      x-sortIndex: 5\n    patch:\n      description: Updates a specific document.\n      operationId: patch-documents-id\n      parameters:\n        - description: Unique identifier of the document to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Document\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a document.\n      tags:\n        - Documents\n      x-addedInVersion: \"1\"\n      x-groupName: Documents\n      x-sortIndex: 6\n  /legalEntities:\n    post:\n      description: |-\n        Creates a legal entity. This resource contains information about an individual or organization that will be onboarded on your balance platform. Adyen uses this information to perform Know Your Customer (KYC) checks as required by payment industry regulations. Your Adyen contact will inform you of the status and results of the KYC checks. \n\n        When the legal entity passes the verification checks, you can issue a card to them. For more information, refer to [Onboard and verify account holders](https://docs.adyen.com/issuing/kyc-verification).\n      operationId: post-legalEntities\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LegalEntityInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalEntity\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a legal entity.\n      tags:\n        - Legal entities\n      x-addedInVersion: \"1\"\n      x-groupName: Legal entities\n      x-sortIndex: 1\n  \"/legalEntities/{id}\":\n    get:\n      description: Returns a specific legal entity.\n      operationId: get-legalEntities-id\n      parameters:\n        - description: Unique identifier of the legal entity.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalEntity\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a legal entity.\n      tags:\n        - Legal entities\n      x-addedInVersion: \"1\"\n      x-groupName: Legal entities\n      x-sortIndex: 2\n    patch:\n      description: |-\n        Updates a legal entity. When updating a legal entity resource, note that:\n\n         * To update the `entityAssociations` array, you need to replace the entire array. For example, if the array has 3 entries and you want to remove 1 entry, you need to PATCH the resource with the remaining 2 entries.\n      operationId: patch-legalEntities-id\n      parameters:\n        - description: Unique identifier of the legal entity.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GenericEntityInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalEntity\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a legal entity.\n      tags:\n        - Legal entities\n      x-addedInVersion: \"1\"\n      x-groupName: Legal entities\n      x-sortIndex: 3\n  /paymentInstrumentGroups:\n    post:\n      description: Creates a payment instrument group, which you use to associate and group payment instrument resources together. You can apply a transaction rule to a payment instrument group.\n      operationId: post-paymentInstrumentGroups\n      requestBody:\n        content:\n          application/json:\n            examples:\n              createPaymentInstrumentGroups:\n                $ref: \"#/components/examples/post-paymentInstrumentGroups-createPaymentInstrumentGroups\"\n            schema:\n              $ref: \"#/components/schemas/PaymentInstrumentGroupInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/post-paymentInstrumentGroups-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrumentGroup\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a payment instrument group.\n      tags:\n        - Payment instrument groups\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instrument groups\n      x-sortIndex: 1\n  \"/paymentInstrumentGroups/{id}\":\n    get:\n      description: Returns a specific payment instrument group.\n      operationId: get-paymentInstrumentGroups-id\n      parameters:\n        - description: Unique identifier of the payment instrument group.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-paymentInstrumentGroups-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrumentGroup\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a payment instrument group.\n      tags:\n        - Payment instrument groups\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instrument groups\n      x-sortIndex: 2\n  \"/paymentInstrumentGroups/{id}/transactionRules\":\n    get:\n      description: Returns a list of all the transaction rules associated with a specific payment instrument group.\n      operationId: get-paymentInstrumentGroups-id-transactionRules\n      parameters:\n        - description: Unique identifier of the payment instrument group.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-paymentInstrumentGroups-id-transactionRules-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRulesResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve all transaction rules for a specific payment instruments group.\n      tags:\n        - Payment instrument groups\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instrument groups\n      x-sortIndex: 3\n  /paymentInstruments:\n    post:\n      description: |-\n        Creates a payment instrument, which results in issuing either a physical or a virtual card to your user.\n\n         For more information, refer to [Create cards](https://docs.adyen.com/issuing/create-cards).\n      operationId: post-paymentInstruments\n      requestBody:\n        content:\n          application/json:\n            examples:\n              createPhysicalCard:\n                $ref: \"#/components/examples/post-paymentInstruments-createPhysicalCard\"\n              createVirtualCard:\n                $ref: \"#/components/examples/post-paymentInstruments-createVirtualCard\"\n            schema:\n              $ref: \"#/components/schemas/PaymentInstrumentInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/post-paymentInstruments-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a payment instrument.\n      tags:\n        - Payment instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instruments\n      x-sortIndex: 11\n  \"/paymentInstruments/{id}\":\n    get:\n      description: Returns a specific payment instrument.\n      operationId: get-paymentInstruments-id\n      parameters:\n        - description: Unique identifier of the payment instrument.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-paymentInstruments-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a payment instrument.\n      tags:\n        - Payment instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instruments\n      x-sortIndex: 13\n    patch:\n      description: Updates a specific payment instrument. Once a payment instrument is already active, you can only update the status. However, for cards created with a **Requested** or **Inactive** status, you can still update the balance account associated with the card.\n      operationId: patch-paymentInstruments-id\n      parameters:\n        - description: Unique identifier of the payment instrument.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              updatePaymentInstrumentBalanceAccount:\n                $ref: \"#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount\"\n              updatePaymentInstrumentStatus:\n                $ref: \"#/components/examples/patch-paymentInstruments-id-updatePaymentInstrumentStatus\"\n            schema:\n              $ref: \"#/components/schemas/PaymentInstrumentUpdateRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/patch-paymentInstruments-id-success-200\"\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n                invalidData:\n                  $ref: \"#/components/examples/patch-paymentInstruments-id-invalidData-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a payment instrument.\n      tags:\n        - Payment instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instruments\n      x-sortIndex: 12\n  \"/paymentInstruments/{id}/transactionRules\":\n    get:\n      description: Returns a list of transaction rules associated to a specific payment instrument.\n      operationId: get-paymentInstruments-id-transactionRules\n      parameters:\n        - description: Unique identifier of the payment instrument.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-paymentInstruments-id-transactionRules-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRulesResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve all transaction rules for a specific payment instrument.\n      tags:\n        - Payment instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Payment instruments\n      x-sortIndex: 14\n  /transactionRules:\n    post:\n      description: |-\n        Creates a transaction rule. Transaction rules define conditions to automatically approve or deny transactions. You can apply transaction rules to a specific payment instrument, a group of payment instruments, or to all the payment instruments in your balance platform.\n\n        For more information on how you can set conditions, refer to [Transaction rules](https://docs.adyen.com/issuing/transaction-rules).\n      operationId: post-transactionRules\n      requestBody:\n        content:\n          application/json:\n            examples:\n              createTransactionRule:\n                $ref: \"#/components/examples/post-transactionRules-createTransactionRule\"\n            schema:\n              $ref: \"#/components/schemas/TransactionRuleInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/post-transactionRules-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRule\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a transaction rule.\n      tags:\n        - Transaction rules\n      x-addedInVersion: \"1\"\n      x-groupName: Transaction rules\n      x-sortIndex: 1\n  \"/transactionRules/{transactionRuleId}\":\n    delete:\n      description: Deletes a transaction rule.\n      operationId: delete-transactionRules-transactionRuleId\n      parameters:\n        - description: Unique identifier of the transaction rule.\n          in: path\n          name: transactionRuleId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/delete-transactionRules-transactionRuleId-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRule\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Delete a transaction rule.\n      tags:\n        - Transaction rules\n      x-addedInVersion: \"1\"\n      x-groupName: Transaction rules\n      x-sortIndex: 5\n    get:\n      description: Returns a specific transaction rule.\n      operationId: get-transactionRules-transactionRuleId\n      parameters:\n        - description: Unique identifier of the transaction rule.\n          in: path\n          name: transactionRuleId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/get-transactionRules-transactionRuleId-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRuleResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a transaction rule.\n      tags:\n        - Transaction rules\n      x-addedInVersion: \"1\"\n      x-groupName: Transaction rules\n      x-sortIndex: 2\n    patch:\n      description: |-\n        Updates a transaction rule.  When updating a transaction rule resource, note that: \n\n        * When updating only the `status`, you can send only the `status` parameter. All other parameters not provided in the request are left unchanged.\n\n        * When updating any other parameter, you need to send all existing resource parameters. If you omit a parameter in the request, the parameter is removed from the resource.\n      operationId: patch-transactionRules-transactionRuleId\n      parameters:\n        - description: Unique identifier of the transaction rule.\n          in: path\n          name: transactionRuleId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            examples:\n              updateTransactionRuleStatus:\n                $ref: \"#/components/examples/patch-transactionRules-transactionRuleId-updateTransactionRuleStatus\"\n            schema:\n              $ref: \"#/components/schemas/TransactionRuleInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                success:\n                  $ref: \"#/components/examples/patch-transactionRules-transactionRuleId-success-200\"\n              schema:\n                $ref: \"#/components/schemas/TransactionRule\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-400\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-401\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-403\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-422\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic-500\"\n              schema:\n                $ref: \"#/components/schemas/RestServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a transaction rule.\n      tags:\n        - Transaction rules\n      x-addedInVersion: \"1\"\n      x-groupName: Transaction rules\n      x-sortIndex: 3\n  /transferInstruments:\n    post:\n      description: |-\n        Creates a transfer instrument. A transfer instrument is a bank account or other payment details that a legal entity owns. Adyen performs Know Your Customer (KYC) checks on the transfer instrument as required by payment industry regulations. Your Adyen contact will inform you of the status and results of the KYC checks.\n\n        When the transfer instrument passes the verification checks, you can start sending funds from the balance platform to the transfer instrument (such as payouts).\n      operationId: post-transferInstruments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferInstrumentInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Create a transfer instrument.\n      tags:\n        - Transfer instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Transfer instruments\n      x-sortIndex: 8\n  \"/transferInstruments/{id}\":\n    delete:\n      description: Deletes a transfer instrument.\n      operationId: delete-transferInstruments-id\n      parameters:\n        - description: Unique identifier of the transfer instrument to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VoidResponse\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Delete a transfer instrument\n      tags:\n        - Transfer instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Transfer instruments\n      x-sortIndex: 11\n    get:\n      description: Returns a specific transfer instrument.\n      operationId: get-transferInstruments-id\n      parameters:\n        - description: Unique identifier of the transfer instrument.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Retrieve a transfer instrument.\n      tags:\n        - Transfer instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Transfer instruments\n      x-sortIndex: 9\n    patch:\n      description: Updates a transfer instrument.\n      operationId: patch-transferInstruments-id\n      parameters:\n        - description: Unique identifier of the transfer instrument.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferInstrumentInfo\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferInstrument\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              examples:\n                generic:\n                  $ref: \"#/components/examples/generic\"\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Update a transfer instrument.\n      tags:\n        - Transfer instruments\n      x-addedInVersion: \"1\"\n      x-groupName: Transfer instruments\n      x-sortIndex: 10\ncomponents:\n  examples:\n    delete-transactionRules-transactionRuleId-success-200:\n      description: Example response for successfully deleting a transaction rule\n      summary: Response code - 200 OK\n      value:\n        amount:\n          currency: EUR\n          value: 10000\n        description: Allow up to 100 EUR per month\n        id: TR3227C223222B5CMDKQTBQ5M\n        interval:\n          type: monthly\n        paymentInstrumentGroupId: PG3227C223222B5CMD3FJFKGZ\n        reference: myRule16378\n        startDate: 2021-01-25T12:46:35.476629Z\n        type: velocity\n    generic: {}\n    generic-400:\n      summary: Response code - 400 Bad request\n      value:\n        detail: Empty input which would have resulted in a null result.\n        errorCode: 00_400\n        status: 400\n        title: Bad request\n        type: https://docs.adyen.com/errors/general/bad-request\n    generic-401:\n      summary: Response code - 401 Unauthorized\n      value:\n        errorCode: 00_401\n        status: 401\n        title: Unauthorized\n        type: https://docs.adyen.com/errors/security/unauthorized\n    generic-403:\n      summary: Response code - 403 Forbidden.\n      value:\n        detail: Not the right permission to access this service.\n        errorCode: 00_403\n        status: 403\n        title: Forbidden\n        type: https://docs.adyen.com/errors/security/unauthorized\n    generic-404:\n      summary: Response code 404 - Not found\n      value:\n        errorCode: 00_404\n        status: 404\n        title: Not found\n        type: https://docs.adyen.com/errors/general/not-found\n    generic-422:\n      summary: Response code - 422 Unprocessable Entity.\n      value:\n        detail: The balanceAccountId can only be changed when the status is Inactive or Requested\n        errorCode: 30_031\n        requestId: 1W1UI15PLVGC9V8O\n        status: 422\n        title: Invalid Payment Instrument information provided\n        type: https://docs.adyen.com/errors/general/invalid-field-value\n    generic-500:\n      summary: Response code - 500 Internal Server Error\n      value:\n        detail: Unrecoverable error while trying to create payment instrument\n        errorCode: 00_500\n        requestId: 1WAF555PLWNTLYOQ\n        status: 500\n        title: An internal error happened\n        type: https://docs.adyen.com/errors/general/internal\n    generic-503:\n      summary: Response code - 503 Internal Server Error\n      value:\n        detail: Error while determining the payment instrument workflow\n        errorCode: 99_500\n        requestId: 1W1UHY5O2CONU4R7\n        status: 500\n        title: Error processing request\n        type: https://docs.adyen.com/errors/general/processing-error\n    get-accountHolders-id-balanceAccounts-success-200:\n      description: Example response when retrieving a list of balance accounts under an account holder\n      summary: Response code - 200 OK\n      value:\n        balanceAccounts:\n          - accountHolderId: AH32272223222B59K6ZKBBFNQ\n            defaultCurrencyCode: EUR\n            id: BA32272223222B59K6ZXHBFN6\n            status: Active\n          - accountHolderId: AH32272223222B59K6ZKBBFNQ\n            defaultCurrencyCode: EUR\n            id: BA32272223222B59K72CKBFNJ\n            status: Active\n          - accountHolderId: AH32272223222B59K6ZKBBFNQ\n            defaultCurrencyCode: EUR\n            id: BA32272223222B5BRR27B2M7G\n            status: Active\n        hasNext: true\n        hasPrevious: false\n    get-accountHolders-id-success-200:\n      description: Example response when retrieving an account holder\n      summary: Response code - 200 OK\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        contactDetails:\n          address:\n            city: Amsterdam\n            country: NL\n            houseNumberOrName: \"274\"\n            postalCode: 1020CD\n            street: Brannan Street\n          email: s.hopper@example.com\n          phone:\n            number: \"+315551231234\"\n            type: Mobile\n        description: S.Hopper - Staff 123\n        id: AH32272223222B5CM4MWJ892H\n        status: Active\n    get-balanceAccounts-id-paymentInstruments-success-200:\n      description: Example response when retrieving a list of payment instruments under a balance account\n      summary: Response code - 200 OK\n      value:\n        hasNext: \"true\"\n        hasPrevious: \"false\"\n        paymentInstruments:\n          - balanceAccountId: BA32272223222B59CZ3T52DKZ\n            card:\n              bin: \"555544\"\n              brandVariant: mc\n              cardholderName: name\n              expiration:\n                month: \"12\"\n                year: \"2022\"\n              formFactor: virtual\n              lastFour: \"2357\"\n              number: \"************2357\"\n            id: PI32272223222B59M5TM658DT\n            issuingCountryCode: GB\n            status: Active\n            type: card\n          - balanceAccountId: BA32272223222B59CZ3T52DKZ\n            card:\n              bin: \"555544\"\n              brandVariant: mc\n              cardholderName: name\n              expiration:\n                month: \"01\"\n                year: \"2023\"\n              formFactor: virtual\n              lastFour: \"8331\"\n              number: \"************8331\"\n            id: PI32272223222B59PXDGQDLSF\n            issuingCountryCode: GB\n            status: Active\n            type: card\n    get-balanceAccounts-id-success-200:\n      description: Example response when retrieving a balance account\n      summary: Response code - 200 OK\n      value:\n        accountHolderId: AH32272223222B59K6RTQBFNZ\n        balances:\n          - available: 0\n            balance: 0\n            currency: EUR\n            reserved: 0\n        defaultCurrencyCode: EUR\n        id: BA3227C223222B5BLP6JQC3FD\n        paymentInstruments:\n          - id: PI32272223222B5BRM4FZ7J9J\n        status: Active\n    get-balancePlatforms-id-accountHolders-success-200:\n      description: Example response when retrieving a list of account holders under a balance platform\n      summary: Response code - 200 OK\n      value:\n        accountHolders:\n          - contactDetails:\n              address:\n                city: Amsterdam\n                country: NL\n                houseNumberOrName: \"6\"\n                postalCode: \"12336750\"\n                street: Simon Carmiggeltstraat\n            description: J. Doe\n            id: AH32272223222B59DDWSCCMP7\n            status: Active\n          - contactDetails:\n              address:\n                city: Amsterdam\n                country: NL\n                houseNumberOrName: \"11\"\n                postalCode: \"12336750\"\n                street: Simon Carmiggeltstraat\n            description: S. Hopper\n            id: AH32272223222B59DJ7QBCMPN\n            status: Active\n        hasNext: \"true\"\n        hasPrevious: \"false\"\n    get-balancePlatforms-id-success-200:\n      description: Example response when retrieving a balance platform\n      summary: Response code - 200 OK\n      value:\n        id: YOUR_BALANCE_PLATFORM\n        status: Active\n    get-paymentInstrumentGroups-id-success-200:\n      description: Example response when retrieving a payment instrument group\n      summary: Response code - 200 OK\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        id: PG3227C223222B5CMD3FJFKGZ\n        txVariant: mc\n    get-paymentInstrumentGroups-id-transactionRules-success-200:\n      description: Example response when retrieving a list of transaction rules applied to a payment instrument group\n      summary: Response code - 200 OK\n      value:\n        transactionRules:\n          - description: Allow 5 transactions per month\n            id: TR32272223222B5CMDGMC9F4F\n            interval:\n              type: monthly\n            maxTransactions: 5\n            paymentInstrumentGroupId: PG3227C223222B5CMD3FJFKGZ\n            reference: myRule12345\n            startDate: 2021-01-25T12:46:35.476629Z\n            status: active\n            type: velocity\n          - amount:\n              currency: EUR\n              value: 10000\n            description: Allow up to 100 EUR per month\n            id: TR32272223222B5CMDGT89F4F\n            interval:\n              type: monthly\n            paymentInstrumentGroupId: PG3227C223222B5CMD3FJFKGZ\n            reference: myRule16378\n            startDate: 2021-01-25T12:46:35.476629Z\n            status: active\n            type: velocity\n    get-paymentInstruments-id-success-200:\n      description: Example response when retrieving a payment instrument\n      summary: Response code - 200 OK\n      value:\n        balanceAccountId: BA32272223222B59CZ3T52DKZ\n        card:\n          bin: \"555544\"\n          brand: mc\n          brandVariant: mcdebit\n          cardholderName: Simon Hopper\n          expiration:\n            month: \"01\"\n            year: \"2024\"\n          formFactor: virtual\n          lastFour: \"3548\"\n          number: \"************3548\"\n        description: S. Hopper - Main card\n        id: PI32272223222B5CMD3MQ3HXX\n        issuingCountryCode: GB\n        status: Active\n        type: card\n    get-paymentInstruments-id-transactionRules-success-200:\n      description: Example response when retrieving a list of transaction rules applied to a payment instrument\n      summary: Response code - 200 OK\n      value:\n        transactionRules:\n          - description: Allow 5 transactions per month\n            id: TR32272223222B5CMDGMC9F4F\n            interval:\n              type: monthly\n            maxTransactions: 5\n            paymentInstrumentGroupId: PG3227C223222B5CMD3FJFKGZ\n            reference: myRule12345\n            startDate: 2021-01-25T12:46:35.476629Z\n            status: active\n            type: velocity\n          - amount:\n              currency: EUR\n              value: 10000\n            description: Allow up to 100 EUR per month\n            id: TR32272223222B5CMDGT89F4F\n            interval:\n              type: monthly\n            paymentInstrumentGroupId: PG3227C223222B5CMD3FJFKGZ\n            reference: myRule16378\n            startDate: 2021-01-25T12:46:35.476629Z\n            status: active\n            type: velocity\n    get-transactionRules-transactionRuleId-success-200:\n      description: Example response when retrieving a transaction rule\n      summary: Response code - 200 OK\n      value:\n        transactionRule:\n          description: Allow 5 transactions per month\n          id: TR32272223222B5CMD3V73HXG\n          interval:\n            type: monthly\n          maxTransactions: 5\n          paymentInstrumentId: PI3227C223222B59KGTXP884R\n          reference: myRule12345\n          startDate: 2021-01-25T12:46:35.476629Z\n          status: active\n          type: velocity\n    patch-accountHolders-id-success-200:\n      description: Example response for successfully updating the status of an account holder\n      summary: Response code - 200 OK\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        contactDetails:\n          address:\n            city: Amsterdam\n            country: NL\n            houseNumberOrName: \"274\"\n            postalCode: 1020CD\n            street: Brannan Street\n          email: s.hopper@example.com\n          phone:\n            number: \"+315551231234\"\n            type: Mobile\n        description: S.Hopper - Staff 123\n        id: AH32272223222B5CM4MWJ892H\n        status: Suspended\n    patch-accountHolders-id-updateAccountHolderStatus:\n      description: Example request for updating the status of an account holder\n      summary: Update the status of an account holder.\n      value:\n        status: Suspended\n    patch-paymentInstruments-id-invalidData-422:\n      description: Example response for a failed request to update the balance account ID\n      summary: Response code - 422 Unprocessable Entity\n      value:\n        detail: The balanceAccountId can only be changed when the status is Inactive or Requested\n        errorCode: 30_031\n        requestId: 1W1UI15PLVGC9V8O\n        status: 422\n        title: Invalid Payment Instrument information provided\n        type: https://docs.adyen.com/errors/general/invalid-field-value\n    patch-paymentInstruments-id-success-200:\n      description: Example respones for successfully updating the status of a payment instrument\n      summary: Response code - 200 OK\n      value:\n        balanceAccountId: BA32272223222B59CZ3T52DKZ\n        card:\n          bin: \"555544\"\n          brand: mc\n          brandVariant: mcdebit\n          cardholderName: Simon Hopper\n          expiration:\n            month: \"01\"\n            year: \"2024\"\n          formFactor: virtual\n          lastFour: \"5785\"\n          number: \"************5785\"\n        description: S. Hopper - Main card\n        id: PI3227C223222B5CMD278FKGS\n        issuingCountryCode: GB\n        status: Suspended\n        type: card\n    patch-paymentInstruments-id-updatePaymentInstrumentBalanceAccount:\n      description: Example request for updating the balance account of a payment instrument\n      summary: Update the balance account linked to a payment instrument.\n      value:\n        balanceAccountId: BA32272223222B5CM82WL892M\n    patch-paymentInstruments-id-updatePaymentInstrumentStatus:\n      summary: Update the status of a payment instrument.\n      value:\n        status: Suspended\n    patch-transactionRules-transactionRuleId-success-200:\n      description: Example response for successfully updating the status of a transaction rule\n      summary: Response code - 200 OK\n      value:\n        description: Allow 5 transactions per month\n        id: TR3227C223222B5B85CDV4DRS\n        interval:\n          type: monthly\n        maxTransactions: 5\n        paymentInstrumentId: PI3227C223222B59KGTXP884R\n        reference: myRule12345\n        startDate: 2021-01-21T12:46:35.476629Z\n        status: inactive\n        type: velocity\n    patch-transactionRules-transactionRuleId-updateTransactionRuleStatus:\n      description: Example request for updating the status of a transaction rule\n      summary: Update the status of transaction rule.\n      value:\n        status: inactive\n    post-accountHolders-createAccountHolder:\n      description: Example request for creating an account holder\n      summary: Create an account holder.\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        contactDetails:\n          address:\n            city: Amsterdam\n            country: NL\n            houseNumberOrName: \"274\"\n            postalCode: 1020CD\n            street: Brannan Street\n          email: s.hopper@example.com\n          phone:\n            number: \"+315551231234\"\n            type: Mobile\n        description: S.Hopper - Staff 123\n    post-accountHolders-success-200:\n      description: Example response for successfully creating an account holder\n      summary: Response code - 200 OK\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        contactDetails:\n          address:\n            city: Amsterdam\n            country: NL\n            houseNumberOrName: \"274\"\n            postalCode: 1020CD\n            street: Brannan Street\n          email: s.hopper@example.com\n          phone:\n            number: \"+315551231234\"\n            type: Mobile\n        description: S.Hopper - Staff 123\n        id: AH3227C223222B5CMD2SXFKGT\n        status: Active\n    post-balanceAccounts-createBalanceAccount:\n      description: Example request for creating a balance account\n      summary: Create a balance account.\n      value:\n        accountHolderId: AH32272223222B59K6ZKBBFNQ\n        description: S.Hopper - Main balance account\n    post-balanceAccounts-success-200:\n      description: Example response for successfully creating a balance account\n      summary: Response code - 200 OK\n      value:\n        accountHolderId: AH32272223222B59K6ZKBBFNQ\n        balances:\n          - available: 0\n            balance: 0\n            currency: EUR\n            reserved: 0\n        defaultCurrencyCode: EUR\n        description: S.Hopper - Main balance account\n        id: BA3227C223222B5CMD38HFKGH\n        status: Active\n    post-paymentInstrumentGroups-createPaymentInstrumentGroups:\n      description: Example request for creating a payment instrument group\n      summary: Create a payment instrument group.\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        txVariant: mc\n    post-paymentInstrumentGroups-success-200:\n      description: Example response for successfully creating a payment instrument group\n      summary: Response code - 200 OK\n      value:\n        balancePlatform: YOUR_BALANCE_PLATFORM\n        id: PG3227C223222B5CMD3FJFKGZ\n        txVariant: mc\n    post-paymentInstruments-createPhysicalCard:\n      description: Example request for creating a physical card\n      summary: Create a physical card\n      value:\n        balanceAccountId: BALANCE_ACCOUNT_ID\n        card:\n          brand: mc\n          brandVariant: mcdebit\n          cardholderName: Sam Hopper\n          configuration:\n            configurationProfileId: YOUR_CONFIGURATION_PROFILE_ID\n          deliveryContact:\n            address:\n              city: Amsterdam\n              country: NL\n              houseNumberOrName: 6-50\n              postalCode: 1011DJ\n              stateOrProvince: NH\n              street: Simon Carmiggeltstraat\n            name:\n              firstName: Sam\n              lastName: Hopper\n          expiry:\n            month: 8\n            year: 2024\n          formFactor: physical\n        description: S.Hopper - Main card\n        issuingCountryCode: NL\n        status: Inactive\n        type: card\n    post-paymentInstruments-createVirtualCard:\n      description: Example request for creating a virtual card\n      summary: Create a virtual card.\n      value:\n        balanceAccountId: BA32272223222B59CZ3T52DKZ\n        card:\n          brand: mc\n          brandVariant: mcdebit\n          cardholderName: Simon Hopper\n          formFactor: virtual\n        description: S. Hopper - Main card\n        issuingCountryCode: GB\n        type: card\n    post-paymentInstruments-success-200:\n      description: Example response for successfully creating a virtual card\n      summary: Response code - 200 OK\n      value:\n        balanceAccountId: BA32272223222B59CZ3T52DKZ\n        card:\n          bin: \"555544\"\n          brand: mc\n          brandVariant: mcdebit\n          cardholderName: Simon Hopper\n          cvc: \"873\"\n          expiration:\n            month: \"01\"\n            year: \"2024\"\n          formFactor: virtual\n          lastFour: \"3548\"\n        description: S. Hopper - Main card\n        id: PI32272223222B5CMD3MQ3HXX\n        issuingCountryCode: GB\n        status: Active\n        type: card\n    post-transactionRules-createTransactionRule:\n      summary: Create a transaction rule.\n      value:\n        description: Allow 5 transactions per month\n        interval:\n          type: monthly\n        maxTransactions: 5\n        paymentInstrumentId: PI3227C223222B59KGTXP884R\n        reference: myRule12345\n        startDate: 2021-01-21T12:46:35.476629Z\n        status: inactive\n        type: velocity\n    post-transactionRules-success-200:\n      description: Example response for successfully creating a transaction rule\n      summary: Response code - 200 OK\n      value:\n        description: Allow 5 transactions per month\n        id: TR32272223222B5CMD3V73HXG\n        interval:\n          type: monthly\n        maxTransactions: 5\n        paymentInstrumentId: PI3227C223222B59KGTXP884R\n        reference: myRule12345\n        startDate: 2021-01-21T12:46:35.476629Z\n        status: active\n        type: velocity\n  schemas:\n    AccountHolder:\n      properties:\n        balancePlatform:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) where the account holder belongs. Required in the request if your API credentials has access to multiple balance platforms.\n          type: string\n        capabilities:\n          additionalProperties:\n            $ref: \"#/components/schemas/AccountHolderCapability\"\n          description: Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability, such as **issueCard**, and the value is an object containing the settings for the capability.\n          type: object\n        contactDetails:\n          $ref: \"#/components/schemas/ContactDetails\"\n          description: Contact details of the account holder.\n        description:\n          description: Your description for the account holder, maximum 300 characters.\n          maxLength: 300\n          type: string\n        id:\n          description: Unique identifier of the account holder.\n          type: string\n        legalEntityId:\n          description: |-\n            The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/legalEntities) associated with the account holder. Adyen performs the Know Your Customer (KYC) verification process against the legal entity of the account holder.\n\n            To create a legal entity, refer to [Onboard and verify account holders](https://docs.adyen.com/issuing/kyc-verification).\n          type: string\n        primaryBalanceAccount:\n          description: The ID of the account holder's primary balance account. By default, this is set to the account holder's first balance account. This can be updated in a PATCH request.\n          type: string\n        reference:\n          description: Your reference to the account holder, maximum 150 characters.\n          maxLength: 150\n          type: string\n        status:\n          description: |-\n            The status of the account holder.\n\n            Possible values: \n\n             * **Active**: The account holder is active. This the default status when creating an account holder. \n\n             * **Suspended**: The account holder is temporarily suspended. You can set the account back to active or permanently close the account. \n\n            * **Closed**: The account holder is permanently closed. This action cannot be undone.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        sweepConfigurations:\n          additionalProperties:\n            $ref: \"#/components/schemas/SweepConfiguration\"\n          description: |+\n            Contains key-value pairs that specify configurations for balance sweeps per currency code. A sweep pulls in or pushes out funds based on a defined schedule, amount, and a source (for pulling funds) or a destination (for pushing funds).\n\n             Sweep configurations on the account holder level applies to all the account holder's balance accounts.\n\n             The key must be a currency code in the three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format and in uppercase. For example, **EUR**. The value must be an object containing the sweep configuration.\n\n          type: object\n      required:\n        - id\n    AccountHolderCapability:\n      properties:\n        allowed:\n          description: Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful, and the account holder is permitted to use the capability.\n          readOnly: true\n          type: boolean\n        allowedLevel:\n          description: \"The capability level that is allowed for the account holder.Possible values: **notApplicable**, **low**, **medium**, **high**\"\n          enum:\n            - high\n            - low\n            - medium\n            - notApplicable\n          readOnly: true\n          type: string\n        allowedSettings:\n          $ref: \"#/components/schemas/JSONObject\"\n          description: A JSON object containing the settings that are allowed for the account holder.\n          readOnly: true\n        enabled:\n          description: Indicates whether the capability is enabled. You can set this field to **false** if you want to temporarily stop an account holder from using a capability.\n          type: boolean\n        problems:\n          description: Contains verification errors and the actions that you can take to resolve them.\n          items:\n            $ref: \"#/components/schemas/CapabilityProblem\"\n          readOnly: true\n          type: array\n        requested:\n          description: Indicates whether the capability is requested. To know whether the account holder is permitted to use the capability, refer to the `allowed` field.\n          type: boolean\n        requestedLevel:\n          description: |-\n            The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels) have different levels. Levels increase the capability, but also require additional checks and increased monitoring.\n\n            Possible values: **notApplicable**, **low**, **medium**, **high**\n          enum:\n            - high\n            - low\n            - medium\n            - notApplicable\n          type: string\n        requestedSettings:\n          $ref: \"#/components/schemas/JSONObject\"\n          description: A JSON object containing the settings that were requested for the account holder.\n          readOnly: true\n        verificationStatus:\n          description: |\n            The status of the verification checks for the capability.\n\n            Possible values:\n\n            - **pending** - Adyen is running the verification.\n\n            - **invalid** - The verification failed. Check if the `errors` array contains more information.\n\n            - **valid** - The verification has been successfully completed.\n\n            - **rejected** - Adyen has verified the information, but has found reasons to not allow the capability.\n          enum:\n            - invalid\n            - pending\n            - rejected\n            - valid\n          readOnly: true\n          type: string\n    AccountHolderInfo:\n      properties:\n        balancePlatform:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) where the account holder belongs. Required in the request if your API credentials has access to multiple balance platforms.\n          type: string\n        contactDetails:\n          $ref: \"#/components/schemas/ContactDetails\"\n          description: Contact details of the account holder.\n        description:\n          description: Your description for the account holder, maximum 300 characters.\n          maxLength: 300\n          type: string\n        legalEntityId:\n          description: |-\n            The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/legalEntities) associated with the account holder. Adyen performs the Know Your Customer (KYC) verification process against the legal entity of the account holder.\n\n            To create a legal entity, refer to [Onboard and verify account holders](https://docs.adyen.com/issuing/kyc-verification).\n          type: string\n        reference:\n          description: Your reference to the account holder, maximum 150 characters.\n          maxLength: 150\n          type: string\n        sweepConfigurations:\n          additionalProperties:\n            $ref: \"#/components/schemas/SweepConfiguration\"\n          description: |+\n            Contains key-value pairs that specify configurations for balance sweeps per currency code. A sweep pulls in or pushes out funds based on a defined schedule, amount, and a source (for pulling funds) or a destination (for pushing funds).\n\n             Sweep configurations on the account holder level applies to all the account holder's balance accounts.\n\n             The key must be a currency code in the three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format and in uppercase. For example, **EUR**. The value must be an object containing the sweep configuration.\n\n          type: object\n    Address:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        country:\n          description: |-\n            The two-character country code as defined in ISO-3166-1 alpha-2. For example, **US**.\n            \u003e If you don't know the country or are not collecting the country from the shopper, provide `country` as `ZZ`.\n          type: string\n        houseNumberOrName:\n          description: The number or name of the house.\n          type: string\n        postalCode:\n          description: A maximum of five digits for an address in the US, or a maximum of ten characters for an address in all other countries.\n          type: string\n        stateOrProvince:\n          description: |-\n            State or province codes as defined in ISO 3166-2. For example, **CA** in the US or **ON** in Canada.\n            \u003e Required for the US and Canada.\n          type: string\n        street:\n          description: |-\n            The name of the street.\n            \u003e The house number should not be included in this field; it should be separately provided via `houseNumberOrName`.\n          type: string\n      required:\n        - street\n        - houseNumberOrName\n        - city\n        - postalCode\n        - country\n    Address2:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        country:\n          description: The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n          type: string\n        postalCode:\n          description: Postal code.\n          type: string\n        stateOrProvince:\n          description: State or province as defined in ISO 3166-2. For example, **CA** in the US.\n          type: string\n        street:\n          description: The name of the street, and the house or building number.\n          type: string\n        street2:\n          description: The apartment, unit, or suite number.\n          type: string\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n        - value\n        - currency\n    Attachment:\n      properties:\n        content:\n          contentEncoding: base64\n          description: The document, in Base64-encoded string format.\n          type: string\n        contentType:\n          deprecated: true\n          description: |-\n            The file format.\n\n             Possible values: **application/pdf**, **image/jpg**, **image/jpeg**, or **image/png**. \n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is being deprecated.\n        filename:\n          deprecated: true\n          description: The name of the file including the file extension.\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is being deprecated.\n        pageType:\n          description: |-\n            Specifies which side of the ID card is being uploaded.\n\n            - When `type` is **driversLicense**, set this to **front** or **back**.\n\n            - When omitted, we infer the page number based on the order of attachments.\n          type: string\n    Authentication:\n      properties:\n        password:\n          description: |-\n            The password used for 3D Secure password-based authentication. The value must be between 1 to 30 characters and must only contain the following supported characters.\n\n            - Characters between **a-z**, **A-Z**, and **0-9**\n\n            - Special characters: **äöüßÄÖÜ+-*/ç%()=?!~#'\",;:$\u0026àùòâôûáúó**\n          type: string\n        phone:\n          $ref: \"#/components/schemas/Phone\"\n          description: |-\n            The phone number where the one-time password (OTP) is sent.\n\n            This object must have:\n\n            - A `type` set to **mobile**.\n\n            - A `number` with a valid country code.\n\n            - A `number` with more than 4 digits, excluding the country code.\n\n            \u003eMake sure to verify that the card user owns the phone number.\n    Balance:\n      properties:\n        available:\n          description: The remaining amount available for spending.\n          format: int64\n          type: integer\n        balance:\n          description: The total amount in the balance.\n          format: int64\n          type: integer\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.\n          type: string\n        reserved:\n          description: The amount reserved for payments that have been authorised, but have not been captured yet.\n          format: int64\n          type: integer\n      required:\n        - currency\n        - balance\n        - reserved\n        - available\n    BalanceAccount:\n      properties:\n        accountHolderId:\n          description: Unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}) associated with the balance account.\n          type: string\n        balances:\n          description: List of balances with the amount and currency.\n          items:\n            $ref: \"#/components/schemas/Balance\"\n          type: array\n        defaultCurrencyCode:\n          description: |-\n            The default currency code of this balance account, in three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format.\n            The default value is **EUR**.\n          type: string\n        description:\n          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to help distinguish between multiple balance accounts under an account holder.\n          maxLength: 300\n          type: string\n        id:\n          description: Unique identifier of the balance account.\n          type: string\n        paymentInstruments:\n          description: List of [payment instruments](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/paymentInstruments/{id}__queryParam_id) associated with the balance account.\n          items:\n            $ref: \"#/components/schemas/PaymentInstrumentReference\"\n          type: array\n        reference:\n          description: Your reference to the balance account, maximum 150 characters.\n          maxLength: 150\n          type: string\n        status:\n          description: |\n            The status of the balance account, set to **Active** by default. \n          type: string\n        sweepConfigurations:\n          additionalProperties:\n            $ref: \"#/components/schemas/SweepConfiguration\"\n          description: |-\n            Contains key-value pairs that specify configurations for balance sweeps per currency code. A sweep pulls in or pushes out funds based on a defined schedule, amount, and a source (for pulling funds) or a destination (for pushing funds).\n\n            Sweep configurations on the balance account override [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/accountHolders__reqParam_sweepConfigurations) configurations.\n\n            The key must be a currency code in the three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format and in uppercase. For example, **EUR**. The value must be an object containing the sweep configuration.\n          type: object\n      required:\n        - accountHolderId\n        - id\n    BalanceAccountInfo:\n      properties:\n        accountHolderId:\n          description: Unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}) associated with the balance account.\n          type: string\n        defaultCurrencyCode:\n          description: |-\n            The default currency code of this balance account, in three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format.\n            The default value is **EUR**.\n          type: string\n        description:\n          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to help distinguish between multiple balance accounts under an account holder.\n          maxLength: 300\n          type: string\n        reference:\n          description: Your reference to the balance account, maximum 150 characters.\n          maxLength: 150\n          type: string\n        sweepConfigurations:\n          additionalProperties:\n            $ref: \"#/components/schemas/SweepConfiguration\"\n          description: |-\n            Contains key-value pairs that specify configurations for balance sweeps per currency code. A sweep pulls in or pushes out funds based on a defined schedule, amount, and a source (for pulling funds) or a destination (for pushing funds).\n\n            Sweep configurations on the balance account override [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/accountHolders__reqParam_sweepConfigurations) configurations.\n\n            The key must be a currency code in the three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) format and in uppercase. For example, **EUR**. The value must be an object containing the sweep configuration.\n          type: object\n      required:\n        - accountHolderId\n    BalanceAccountUpdateRequest:\n      properties:\n        accountHolderId:\n          description: Unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/accountHolders/{id}) associated with the balance account.\n          type: string\n        description:\n          description: A human-readable description of the balance account, maximum 300 characters. You can use this parameter to help distinguish between multiple balance accounts under an account holder.\n          maxLength: 300\n          type: string\n        status:\n          description: |-\n            The status of the balance account. Payment instruments linked to the balance account can only be used if the balance account status is **Active**.\n\n            Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Suspended\n          type: string\n        sweepConfigurations:\n          additionalProperties:\n            $ref: \"#/components/schemas/SweepConfiguration\"\n          description: |-\n            Contains key-value pairs that specify [balance sweep configuration per currency code](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__reqParam_sweepConfigurations).\n\n            You can update the balance account to add, update, or delete configurations.\n\n            * To add a configuration, send the currency code as a key and the configuration as the object.\n\n             * To update a configuration, send the whole configuration with your updates.\n\n            * To delete a configuration, set the value to **null**. For example, `\"EUR\": null`.\n          type: object\n      required:\n        - accountHolderId\n    BalancePlatform:\n      properties:\n        description:\n          description: A description of the balance platform, maximum 300 characters.\n          maxLength: 300\n          type: string\n        id:\n          description: Unique identifier of the balance platform.\n          type: string\n        status:\n          description: |-\n            The status of the balance platform.\n\n            Possible values: **Active**, **Inactive**, **Closed**, **Suspended**.\n          type: string\n      required:\n        - id\n    BankAccountInfo:\n      properties:\n        accountNumber:\n          description: |-\n            The bank account number (without separators).\n\n             When this is provided, the `bankCode` and `branchCode` are also required.\n          type: string\n        accountType:\n          description: |-\n            The type of bank account. Only applies to bank accounts held in the US. \n\n            Possible values: **checking**, **savings**.\n          type: string\n        bankBicSwift:\n          description: The bank's BIC or SWIFT code.\n          type: string\n        bankCity:\n          description: The city where the bank is located.\n          type: string\n        bankCode:\n          description: |-\n            The bank code of the banking institution with which the bank account is registered.\n\n            Required when you provide an `accountNumber`.\n          type: string\n        bankName:\n          description: The name of the banking institution with which the bank account is held.\n          type: string\n        branchCode:\n          description: |-\n            The branch code of the branch under which the bank account is registered.\n\n            Required when you provide an `accountNumber`.\n\n             In the following countries, this value corresponds to:\n\n\n            * United States - Routing number\n            * United Kingdom - Sort code\n            * Germany - Bankleitzahl\n          type: string\n        checkCode:\n          description: The check code of the bank account.\n          type: string\n        countryCode:\n          description: Country where the bank account is registered, in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**.\n          type: string\n        currencyCode:\n          description: The account's three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **EUR**.\n          type: string\n        iban:\n          description: The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.\n          type: string\n    BirthData:\n      properties:\n        dateOfBirth:\n          description: The individual's date of birth, in YYYY-MM-DD format.\n          type: string\n    BulkAddress:\n      properties:\n        city:\n          description: The name of the city.\n          type: string\n        company:\n          description: The name of the company.\n          type: string\n        country:\n          description: The two-character country code in ISO-3166-1 alpha-2 format. For example, **US**.\n          type: string\n        email:\n          description: The email address.\n          type: string\n        houseNumberOrName:\n          description: The house number or name.\n          type: string\n        mobile:\n          description: The full telephone number.\n          type: string\n        postalCode:\n          description: |-\n            The postal code.\n\n            Maximum length:\n\n            * 5 digits for addresses in the US.\n\n            * 10 characters for all other countries.\n          type: string\n        stateOrProvince:\n          description: |-\n            State or province codes as defined in ISO 3166-2.\n\n            Maximum length: 2 characters for addresses in the US.\n          type: string\n        street:\n          description: The streetname of the house.\n          type: string\n      required:\n        - country\n    CapabilityProblem:\n      properties:\n        entity:\n          $ref: \"#/components/schemas/CapabilityProblemEntity\"\n          description: Contains the type of the entity and the corresponding ID.\n        verificationErrors:\n          description: Contains information about the verification error.\n          items:\n            $ref: \"#/components/schemas/VerificationError\"\n          type: array\n    CapabilityProblemEntity:\n      properties:\n        id:\n          description: The ID of the entity.\n          type: string\n        owner:\n          $ref: \"#/components/schemas/CapabilityProblemEntity-recursive\"\n          description: Contains details about the owner of the entity that has an error.\n        type:\n          description: \"The type of the entity. Possible values: **LegalEntity**, **BankAccount**, **Document**\"\n          enum:\n            - BankAccount\n            - Document\n            - LegalEntity\n          type: string\n    CapabilityProblemEntity-recursive:\n      properties:\n        id:\n          description: The ID of the entity.\n          type: string\n        type:\n          description: \"The type of the entity. Possible values: **LegalEntity**, **BankAccount**, **Document**\"\n          enum:\n            - BankAccount\n            - Document\n            - LegalEntity\n          type: string\n    Card:\n      properties:\n        authentication:\n          $ref: \"#/components/schemas/Authentication\"\n          description: Contains the card user's password and mobile phone number. This is required when you issue cards that can be used to make online payments within the EEA and the UK, or can be added to digital wallets. Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets) for more information.\n        bin:\n          description: The BIN of the card number.\n          type: string\n        brand:\n          description: |-\n            The brand for the payment instrument.\n            Possible values: **visa**, **mc**.\n          type: string\n        brandVariant:\n          description: |-\n            The brand variant for the payment instrument.\n            \u003eContact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.\n          type: string\n        cardholderName:\n          description: The name of the card holder. Maximum length 26 characters.\n          type: string\n        configuration:\n          $ref: \"#/components/schemas/CardConfiguration\"\n          description: Settings required when creating a physical card. Reach out to your Adyen contact to get the values that you can send in this object.\n        cvc:\n          description: |-\n            The CVC2 value of the card.\n            \u003e The CVC2 is not sent by default. This is only returned in the `POST` response for single-use virtual cards.\n          type: string\n        deliveryContact:\n          $ref: \"#/components/schemas/Contact\"\n          description: The delivery contact (name and address) for physical card delivery.\n        expiration:\n          $ref: \"#/components/schemas/Expiry\"\n          description: The expiration date of the card.\n        formFactor:\n          description: |-\n            The form factor of the card.\n            Possible values: **virtual**, **physical**.\n          enum:\n            - physical\n            - unknown\n            - virtual\n          type: string\n        lastFour:\n          description: Last last four digits of the card number.\n          type: string\n        number:\n          description: |-\n            The primary account number of the card.\n            \u003e The primary account number is masked by default. The full primary account number is only returned for single-use virtual cards.\n          readOnly: true\n          type: string\n      required:\n        - formFactor\n        - cardholderName\n        - brand\n        - brandVariant\n        - number\n    CardConfiguration:\n      properties:\n        activation:\n          description: Overrides the activation label design ID defined in the `configurationProfileId`. The activation label is attached to the card containing activation instructions.\n          type: string\n        activationUrl:\n          description: |-\n            Your app's URL, if you want to activate cards through your app. For example, **my-app://ref1236a7d**. A QR code is created based on this URL, and is included in the carrier.\n\n             Maximum length: 255 characters.\n          type: string\n        bulkAddress:\n          $ref: \"#/components/schemas/BulkAddress\"\n          description: Overrides the shipment bulk address defined in the `configurationProfileId`.\n        cardImageId:\n          description: The ID of the card image. This is the image that will be printed on the full front of the card.\n          type: string\n        carrier:\n          description: Overrides the carrier design ID defined in the `configurationProfileId`. The carrier is the letter or packaging to which the card is attached.\n          type: string\n        carrierImageId:\n          description: The ID of the carrier image. This is the image that will printed on the letter to which the card is attached.\n          type: string\n        configurationProfileId:\n          description: |-\n            The ID of the card configuration profile, which contains settings for the card. Examples of these settings include the envelope and PIN mailer designs, and the logistics company handling the shipment. All the settings in the profile are applied to the card, unless you provide other fields to override the settings.\n\n            For example, send the `shipmentMethod` to override the logistics company defined in the card configuration profile.\n          type: string\n        currency:\n          description: The three-letter currency code for the card, in the [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217) format. For example **EUR**.\n          type: string\n        envelope:\n          description: \"Overrides the envelope design ID defined in the `configurationProfileId`. \"\n          type: string\n        insert:\n          description: Overrides the insert design ID defined in the `configurationProfileId`. An insert is any additional material, such as marketing materials, that are shipped together with the card.\n          type: string\n        language:\n          description: The language for the card, in the [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format. For example, **en**.\n          type: string\n        logoImageId:\n          description: The ID of the logo image. This is the image that will be printed on the partial front of the card, such as a logo on the upper right corner.\n          type: string\n        pinMailer:\n          description: Overrides the PIN mailer design ID defined in the `configurationProfileId`. The PIN mailer is the letter on which the PIN is printed.\n          type: string\n        shipmentMethod:\n          description: Overrides the logistics company defined in the `configurationProfileId`.\n          type: string\n      required:\n        - configurationProfileId\n    CardInfo:\n      properties:\n        authentication:\n          $ref: \"#/components/schemas/Authentication\"\n          description: Contains the card user's password and mobile phone number. This is required when you issue cards that can be used to make online payments within the EEA and the UK, or can be added to digital wallets. Refer to [3D Secure and digital wallets](https://docs.adyen.com/issuing/3d-secure-and-wallets) for more information.\n        brand:\n          description: |-\n            The brand for the payment instrument.\n            Possible values: **visa**, **mc**.\n          type: string\n        brandVariant:\n          description: |-\n            The brand variant for the payment instrument.\n            \u003eContact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.\n          type: string\n        cardholderName:\n          description: The name of the card holder. Maximum length 26 characters.\n          type: string\n        configuration:\n          $ref: \"#/components/schemas/CardConfiguration\"\n          description: Settings required when creating a physical card. Reach out to your Adyen contact to get the values that you can send in this object.\n        deliveryContact:\n          $ref: \"#/components/schemas/Contact\"\n          description: The delivery contact (name and address) for physical card delivery.\n        formFactor:\n          description: |-\n            The form factor of the card.\n            Possible values: **virtual**, **physical**.\n          enum:\n            - physical\n            - unknown\n            - virtual\n          type: string\n      required:\n        - formFactor\n        - cardholderName\n        - brand\n        - brandVariant\n    Contact:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n          description: The address of the contact.\n        email:\n          description: The e-mail address of the contact.\n          type: string\n        fullPhoneNumber:\n          description: |-\n            The phone number of the contact provided as a single string.  It will be handled as a landline phone.\n            **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"\n          type: string\n        name:\n          $ref: \"#/components/schemas/Name\"\n          description: The name of the contact.\n        personalData:\n          $ref: \"#/components/schemas/PersonalData\"\n          description: Personal data of the contact.\n        phoneNumber:\n          $ref: \"#/components/schemas/PhoneNumber\"\n          description: The phone number of the contact.\n        webAddress:\n          description: The URL of the website of the contact.\n          type: string\n    ContactDetails:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n          description: The address of the account holder.\n        email:\n          description: The e-mail address of the account holder.\n          type: string\n        phone:\n          $ref: \"#/components/schemas/Phone\"\n          description: The phone number of the account holder.\n        webAddress:\n          description: URL to the website of the account holder.\n          type: string\n      required:\n        - email\n        - phone\n        - address\n    Document:\n      properties:\n        attachment:\n          $ref: \"#/components/schemas/Attachment\"\n          deprecated: true\n          description: Object that contains the document.\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Use the `attachments` array instead.\n        attachments:\n          description: Array that contains the document. The array supports multiple attachments for uploading different sides or pages of one document.\n          items:\n            $ref: \"#/components/schemas/Attachment\"\n          type: array\n        description:\n          description: Your description of the document.\n          type: string\n        expiryDate:\n          deprecated: true\n          description: The expiry date of the document, in YYYY-MM-DD format.\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is deprecated.\n        id:\n          description: Unique identifier of the document.\n          type: string\n        issuerCountry:\n          deprecated: true\n          description: The country where the document was issued, in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**.\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is deprecated.\n        issuerState:\n          deprecated: true\n          description: The state or province where the document was issued (AU only).\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is being deprecated.\n        number:\n          description: The number in the document.\n          type: string\n        owner:\n          $ref: \"#/components/schemas/Entity\"\n          description: Contains information about the resource that owns the document.\n        type:\n          description: |-\n            The type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity `type`.\n\n            * When providing ID numbers for individuals, the values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.\n\n            When uploading documents:\n            * For `type` **organization**, the values can be **proofOfAddress**, **registrationDocument**, **taxDocument**. \n\n            * For `type` **individual**, the values can be **identityCard**, **driversLicense**, **proofOfNationalIdNumber**, or **proofOfResidency**.\n\n            * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/documents__reqParam_owner).\n          enum:\n            - bankStatement\n            - driversLicense\n            - identityCard\n            - nationalIdNumber\n            - passport\n            - proofOfAddress\n            - proofOfNationalIdNumber\n            - proofOfResidency\n            - registrationDocument\n            - taxDocument\n          type: string\n    Entity:\n      properties:\n        id:\n          description: Unique identifier of the resource that owns the document. Depending on the entity `type`, this value can be the unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/legalEntities/{id}__queryParam_id) or the [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/transferInstruments/{id}__queryParam_id).\n          type: string\n        type:\n          description: \"The type of resource that owns the document. Possible values: **legalEntity**, **bankAccount**.\"\n          type: string\n    EntityReference:\n      properties:\n        id:\n          description: Unique identifier of the resource.\n          type: string\n    Expiry:\n      properties:\n        month:\n          description: The month in which the card will expire.\n          type: string\n        year:\n          description: The year in which the card will expire.\n          type: string\n    GenericEntityInfo:\n      properties:\n        entityAssociations:\n          description: |-\n            List of individual legal entities associated with the organization legal entity. \n            For example, ultimate business owners through ownership or control, and signatories. \n          items:\n            $ref: \"#/components/schemas/LegalEntityAssociation\"\n          type: array\n        individual:\n          $ref: \"#/components/schemas/Individual\"\n          description: Information about the individual. Required if `type` is **individual**.\n        organization:\n          $ref: \"#/components/schemas/Organization\"\n          description: Information about the organization. Required if `type` is **organization**.\n    IdentificationData:\n      properties:\n        expiryDate:\n          deprecated: true\n          description: The expiry date of the document, in YYYY-MM-DD format.\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is deprecated.\n        issuerCountry:\n          deprecated: true\n          description: The country where the document was issued, in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US**.\n          type: string\n          x-deprecatedInVersion: \"1\"\n          x-deprecatedMessage: Field is deprecated.\n        issuerState:\n          description: The state or province where the document was issued (AU only).\n          type: string\n        nationalIdExempt:\n          description: Applies only to individuals in the US. Set to **true** if the individual does not have an SSN. To verify their identity, note that Adyen will require them to [upload an ID document](https://docs.adyen.com/issuing/kyc-verification#upload-documents).\n          type: boolean\n        number:\n          description: The number in the document.\n          type: string\n        type:\n          description: |-\n            The type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity `type`.\n\n            * When providing ID numbers for individuals, the values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.\n\n            When uploading documents:\n            * For `type` **organization**, the values can be **proofOfAddress**, **registrationDocument**, **taxDocument**. \n\n            * For `type` **individual**, the values can be **identityCard**, **driversLicense**, **proofOfNationalIdNumber**, or **proofOfResidency**.\n\n            * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/post/documents__reqParam_owner).\n          enum:\n            - bankStatement\n            - driversLicense\n            - identityCard\n            - nationalIdNumber\n            - passport\n            - proofOfAddress\n            - proofOfNationalIdNumber\n            - proofOfResidency\n            - registrationDocument\n            - taxDocument\n          type: string\n    Individual:\n      properties:\n        birthData:\n          $ref: \"#/components/schemas/BirthData\"\n          description: The individual's birth information.\n        email:\n          description: The email address of the legal entity.\n          type: string\n        identificationData:\n          $ref: \"#/components/schemas/IdentificationData\"\n          description: Information about the individual's identification document.\n        name:\n          $ref: \"#/components/schemas/Name2\"\n          description: The individual's name.\n        nationality:\n          description: The individual's nationality.\n          type: string\n        phone:\n          $ref: \"#/components/schemas/PhoneNumber2\"\n          description: The phone number of the legal entity.\n        residentialAddress:\n          $ref: \"#/components/schemas/Address2\"\n          description: The residential address of the individual.\n        webData:\n          $ref: \"#/components/schemas/WebData\"\n          deprecated: true\n          description: The website and app URL of the legal entity.\n    InvalidField:\n      properties:\n        message:\n          description: Description of the validation error.\n          type: string\n        name:\n          description: The field that has an invalid value.\n          type: string\n        value:\n          description: The invalid value.\n          type: string\n      required:\n        - name\n        - value\n        - message\n    JSONObject:\n      properties:\n        paths:\n          items:\n            $ref: \"#/components/schemas/JSONPath\"\n          type: array\n        rootPath:\n          $ref: \"#/components/schemas/JSONPath\"\n    JSONPath:\n      properties:\n        content:\n          items:\n            type: string\n          type: array\n    LegalEntity:\n      properties:\n        documents:\n          description: List of documents uploaded for the legal entity.\n          items:\n            $ref: \"#/components/schemas/EntityReference\"\n          type: array\n        entityAssociations:\n          description: |-\n            List of individual legal entities associated with the organization legal entity. \n            For example, ultimate business owners through ownership or control, and signatories. \n          items:\n            $ref: \"#/components/schemas/LegalEntityAssociation\"\n          type: array\n        id:\n          description: Unique identifier of the legal entity.\n          type: string\n        individual:\n          $ref: \"#/components/schemas/Individual\"\n          description: Information about the individual. Required if `type` is **individual**.\n        organization:\n          $ref: \"#/components/schemas/Organization\"\n          description: Information about the organization. Required if `type` is **organization**.\n        transferInstruments:\n          description: List of transfer instruments that the legal entity owns.\n          items:\n            $ref: \"#/components/schemas/EntityReference\"\n          type: array\n        type:\n          description: \"The type of legal entity. Possible values: **individual**, **organization**.\"\n          enum:\n            - individual\n            - organization\n          type: string\n    LegalEntityAssociation:\n      properties:\n        jobTitle:\n          description: The individual's job title in case of `type` **uboThroughControl** or **signatory**.\n          type: string\n        legalEntityId:\n          description: Unique identifier of the individual legal entity associated with the organization.\n          type: string\n        type:\n          description: |-\n            How the individual is associated with the organization. \n\n            Possible values: **uboThroughOwnership**, **uboThroughControl**, **signatory**. \n          enum:\n            - signatory\n            - uboThroughControl\n            - uboThroughOwnership\n          type: string\n    LegalEntityInfo:\n      properties:\n        entityAssociations:\n          description: |-\n            List of individual legal entities associated with the organization legal entity. \n            For example, ultimate business owners through ownership or control, and signatories. \n          items:\n            $ref: \"#/components/schemas/LegalEntityAssociation\"\n          type: array\n        individual:\n          $ref: \"#/components/schemas/Individual\"\n          description: Information about the individual. Required if `type` is **individual**.\n        organization:\n          $ref: \"#/components/schemas/Organization\"\n          description: Information about the organization. Required if `type` is **organization**.\n        type:\n          description: \"The type of legal entity. Possible values: **individual**, **organization**.\"\n          enum:\n            - individual\n            - organization\n          type: string\n    Name:\n      properties:\n        firstName:\n          description: The first name.\n          type: string\n        lastName:\n          description: The last name.\n          type: string\n      required:\n        - firstName\n        - lastName\n    Name2:\n      properties:\n        firstName:\n          description: The individual's first name.\n          type: string\n        infix:\n          description: The infix in the individual's name, if any.\n          type: string\n        lastName:\n          description: The individual's last name.\n          type: string\n    Organization:\n      properties:\n        description:\n          description: Your description for the organization.\n          type: string\n        doingBusinessAs:\n          description: The organization's registered name, if different from the legal name.\n          type: string\n        email:\n          description: The email address of the legal entity.\n          type: string\n        legalName:\n          description: The organization's legal name.\n          type: string\n        phone:\n          $ref: \"#/components/schemas/PhoneNumber2\"\n          description: The phone number of the legal entity.\n        principalPlaceOfBusiness:\n          $ref: \"#/components/schemas/Address2\"\n          description: The address where the organization operates from. Provide this if the principal place of business is different from the `registeredAddress`.\n        registeredAddress:\n          $ref: \"#/components/schemas/Address2\"\n          description: The address of the organization registered at their registrar (such as the Chamber of Commerce).\n        registrationNumber:\n          description: The organization's registration number.\n          type: string\n        stockData:\n          $ref: \"#/components/schemas/StockData\"\n          description: Information about the organization's publicly traded stock. Provide this object only if `type` is **listedPublicCompany**.\n        taxId:\n          description: The organization's tax identifier.\n          type: string\n        taxIdAbsenceReason:\n          description: |-\n            The reason the organization has not provided a tax identifier.\n\n            Possible values: **industryExemption**, **belowTaxThreshold**.\n          enum:\n            - industryExemption\n            - belowTaxThreshold\n          type: string\n        type:\n          description: \"The type of organization. Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**,**nonProfit**, **partnershipIncorporated**, **privateCompany**.\"\n          enum:\n            - associationIncorporated\n            - governmentalOrganization\n            - listedPublicCompany\n            - nonProfit\n            - partnershipIncorporated\n            - privateCompany\n          type: string\n        webData:\n          $ref: \"#/components/schemas/WebData\"\n          deprecated: true\n          description: The website and app URL of the legal entity.\n    PaginatedAccountHoldersResponse:\n      properties:\n        accountHolders:\n          description: List of account holders.\n          items:\n            $ref: \"#/components/schemas/AccountHolder\"\n          type: array\n        hasNext:\n          description: Indicates if there are more items in the next page.\n          type: boolean\n        hasPrevious:\n          description: Indicates if there are more items in the previous page.\n          type: boolean\n      required:\n        - accountHolders\n        - hasPrevious\n        - hasNext\n    PaginatedBalanceAccountsResponse:\n      properties:\n        balanceAccounts:\n          description: List of balance accounts.\n          items:\n            $ref: \"#/components/schemas/BalanceAccount\"\n          type: array\n        hasNext:\n          description: Indicates if there are more items in the next page.\n          type: boolean\n        hasPrevious:\n          description: Indicates if there are more items in the previous page.\n          type: boolean\n      required:\n        - balanceAccounts\n        - hasPrevious\n        - hasNext\n    PaginatedPaymentInstrumentsResponse:\n      properties:\n        hasNext:\n          description: Indicates if there are more items in the next page.\n          type: boolean\n        hasPrevious:\n          description: Indicates if there are more items in the previous page.\n          type: boolean\n        paymentInstruments:\n          description: List of payment instruments associated with the balance account.\n          items:\n            $ref: \"#/components/schemas/PaymentInstrument\"\n          type: array\n      required:\n        - paymentInstruments\n        - hasPrevious\n        - hasNext\n    PaymentInstrument:\n      properties:\n        balanceAccountId:\n          description: Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id) associated with the payment instrument.\n          type: string\n        card:\n          $ref: \"#/components/schemas/Card\"\n          description: Contains information about the card payment instrument.\n        description:\n          description: Your description for the payment instrument, maximum 300 characters.\n          maxLength: 300\n          type: string\n        id:\n          description: Unique identifier of the payment instrument.\n          type: string\n        issuingCountryCode:\n          description: Country where the payment instrument is being issued, in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**, **US**.\n          type: string\n        paymentInstrumentGroupId:\n          description: The ID of a payment instrument group that this payment instrument is part of.\n          type: string\n        reference:\n          description: Your reference to the payment instrument, maximum 150 characters.\n          maxLength: 150\n          type: string\n        status:\n          description: \"The status of the payment instrument. If a status is not specified when creating a payment instrument, the status is set to **Active** by default. However, there can be exceptions based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards issued in the US, the default status is **Requested**.\n\n\n            Possible values:\\ \n\n\n            \\ * **Active**:  The payment instrument is active and can be used to make payments.\\ \n\n\n            \\ * **Requested**: The payment instrument has been requested. This state is applicable when creating physical cards.\\ \n\n\n            * **Inactive**: The payment instrument is inactive and cannot be used to make payments.\\ \n\n\n            \\ * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments.\\ \n\n\n            \\ * **Closed**: The payment instrument is permanently closed. This action cannot be undone.\\ \n\n\n            * **Stolen**\\ \n\n\n            \\ * **Lost**\n\n\n            \\ \"\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Lost\n            - Requested\n            - Stolen\n            - Suspended\n          type: string\n          x-enum:\n            - description: The payment instrument has been requested. This state is applicable when creating physical cards.\n              value: Requested\n            - description: The payment instrument is active and can be used to make payments.\n              value: Active\n            - description: The payment instrument is inactive and cannot be used to make payments.\n              value: Inactive\n            - description: The payment instrument is temporarily suspended and cannot be used to make payments.\n              value: Suspended\n            - description: The payment instrument is permanently closed. This action cannot be undone.\n              value: Closed\n        type:\n          description: |-\n            The type of payment instrument.\n\n            Possible value: **card** \n          enum:\n            - bankAccount\n            - card\n            - unknown\n          type: string\n      required:\n        - balanceAccountId\n        - issuingCountryCode\n        - type\n        - id\n    PaymentInstrumentGroup:\n      properties:\n        balancePlatform:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) where this payment instrument group belongs.\n          type: string\n        description:\n          description: Your description for the payment instrument group, maximum 300 characters.\n          maxLength: 300\n          type: string\n        id:\n          description: Unique identifier of the payment instrument group.\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: Properties of the payment instrument group.\n          type: object\n        reference:\n          description: Your reference to the payment instrument group, maximum 150 characters.\n          maxLength: 150\n          type: string\n        txVariant:\n          description: The tx variant of the payment instrument group.\n          type: string\n      required:\n        - balancePlatform\n        - txVariant\n    PaymentInstrumentGroupInfo:\n      properties:\n        balancePlatform:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) where this payment instrument group belongs.\n          type: string\n        description:\n          description: Your description for the payment instrument group, maximum 300 characters.\n          maxLength: 300\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: Properties of the payment instrument group.\n          type: object\n        reference:\n          description: Your reference to the payment instrument group, maximum 150 characters.\n          maxLength: 150\n          type: string\n        txVariant:\n          description: The tx variant of the payment instrument group.\n          type: string\n      required:\n        - balancePlatform\n        - txVariant\n    PaymentInstrumentInfo:\n      properties:\n        balanceAccountId:\n          description: Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}__queryParam_id) associated with the payment instrument.\n          type: string\n        card:\n          $ref: \"#/components/schemas/CardInfo\"\n          description: Object that contains information about the card payment instrument.\n        description:\n          description: Your description for the payment instrument, maximum 300 characters.\n          maxLength: 300\n          type: string\n        issuingCountryCode:\n          description: Country where the payment instrument is being issued, in the two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**, **US**.\n          type: string\n        paymentInstrumentGroupId:\n          description: The ID of a payment instrument group that this payment instrument is part of.\n          type: string\n        reference:\n          description: Your reference to the payment instrument, maximum 150 characters.\n          maxLength: 150\n          type: string\n        status:\n          description: \"The status of the payment instrument. If a status is not specified when creating a payment instrument, the status is set to **Active** by default. However, there can be exceptions based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards issued in the US, the default status is **Requested**.\n\n\n            Possible values:\\ \n\n\n            \\ * **Active**:  The payment instrument is active and can be used to make payments.\\ \n\n\n            \\ * **Requested**: The payment instrument has been requested. This state is applicable when creating physical cards.\\ \n\n\n            * **Inactive**: The payment instrument is inactive and cannot be used to make payments.\\ \n\n\n            \\ * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments.\\ \n\n\n            \\ * **Closed**: The payment instrument is permanently closed. This action cannot be undone.\\ \n\n\n            * **Stolen**\\ \n\n\n            \\ * **Lost**\n\n\n            \\ \"\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Lost\n            - Requested\n            - Stolen\n            - Suspended\n          type: string\n          x-enum:\n            - description: The payment instrument has been requested. This state is applicable when creating physical cards.\n              value: Requested\n            - description: The payment instrument is active and can be used to make payments.\n              value: Active\n            - description: The payment instrument is inactive and cannot be used to make payments.\n              value: Inactive\n            - description: The payment instrument is temporarily suspended and cannot be used to make payments.\n              value: Suspended\n            - description: The payment instrument is permanently closed. This action cannot be undone.\n              value: Closed\n        type:\n          description: |-\n            The type of payment instrument.\n\n            Possible value: **card** \n          enum:\n            - bankAccount\n            - card\n            - unknown\n          type: string\n      required:\n        - balanceAccountId\n        - issuingCountryCode\n        - type\n    PaymentInstrumentReference:\n      properties:\n        id:\n          description: Unique identifier of the payment instrument.\n          type: string\n      required:\n        - id\n    PaymentInstrumentUpdateRequest:\n      properties:\n        balanceAccountId:\n          description: |-\n            Unique identifier of the balance account associated with this payment instrument.\n            \u003eYou can only change the balance account ID if the payment instrument has a **Requested** or **Inactive** status.\n          type: string\n        card:\n          $ref: \"#/components/schemas/CardInfo\"\n          description: Object that contains information about the card payment instrument.\n        status:\n          description: \"The new status of the payment instrument.\n\n\n            Possible values:\\ \n\n\n            \\ * **Active**:  The payment instrument is active and can be used to make payments.\\ \n\n\n            \\ * **Requested**: The payment instrument has been requested. This state is applicable when creating physical cards.\\ \n\n\n            * **Inactive**: The payment instrument is inactive and cannot be used to make payments.\\ \n\n\n            \\ * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments.\\ \n\n\n            \\ * **Closed**: The payment instrument is permanently closed. This action cannot be undone.\\ \n\n\n            * **Stolen**\\ \n\n\n            \\ * **Lost**\n\n\n            \\ \"\n          enum:\n            - Active\n            - Closed\n            - Inactive\n            - Lost\n            - Requested\n            - Stolen\n            - Suspended\n          type: string\n          x-enum:\n            - description: The payment instrument has been requested. This state is applicable when creating physical cards.\n              value: Requested\n            - description: The payment instrument is active and can be used to make payments.\n              value: Active\n            - description: The payment instrument is inactive and cannot be used to make payments.\n              value: Inactive\n            - description: The payment instrument is temporarily suspended and cannot be used to make payments.\n              value: Suspended\n            - description: The payment instrument is permanently closed. This action cannot be undone.\n              value: Closed\n    PersonalData:\n      properties:\n        dateOfBirth:\n          description: |-\n            The date of birth of the person.\n            The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).\n          type: string\n        idNumber:\n          description: An ID number of the person.\n          type: string\n        nationality:\n          description: |-\n            The nationality of the person represented by a two-character country code.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          maxLength: 2\n          minLength: 2\n          type: string\n    Phone:\n      properties:\n        number:\n          description: |-\n            The full phone number provided as a single string. \n            For example, **\"0031 6 11 22 33 44\"**, **\"+316/1122-3344\"**, \n\n             or **\"(0031) 611223344\"**.\n          type: string\n        type:\n          description: |\n            The type of phone number.\n            Possible values: \n            **Landline**, **Mobile**.\n          enum:\n            - Landline\n            - Mobile\n          type: string\n      required:\n        - number\n        - type\n    PhoneNumber:\n      properties:\n        phoneCountryCode:\n          description: |-\n            The two-character country code of the phone number.\n            \u003eThe permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').\n          type: string\n        phoneNumber:\n          description: |-\n            The phone number.\n            \u003eThe inclusion of the phone number country code is not necessary.\n          type: string\n        phoneType:\n          description: |-\n            The type of the phone number.\n            \u003eThe following values are permitted: `Landline`, `Mobile`, `SIP`, `Fax`.\n          enum:\n            - Fax\n            - Landline\n            - Mobile\n            - SIP\n          type: string\n      required:\n        - phoneCountryCode\n        - phoneNumber\n    PhoneNumber2:\n      properties:\n        countryCode:\n          description: The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **US** or **NL**.\n          type: string\n        number:\n          description: The phone number.\n          type: string\n        type:\n          description: |-\n            The type of phone number.\n             Possible values: **mobile**, **landline**, **sip**, or **fax.** \n          type: string\n    RecurringDetail:\n      properties:\n        merchantAccount:\n          description: The merchant account used when the payment details were stored.\n          type: string\n        reference:\n          description: The `recurringDetailReference` returned in the response when the payment details were stored.\n          type: string\n        shopperReference:\n          description: The unique identifier used when the payment details were stored.\n          type: string\n    RemediatingAction:\n      properties:\n        code:\n          description: The remediating action code.\n          type: string\n        message:\n          description: A description of how you can resolve the verification error.\n          type: string\n    RestServiceError:\n      properties:\n        detail:\n          description: A human-readable explanation specific to this occurrence of the problem.\n          type: string\n        errorCode:\n          description: A code that identifies the problem type.\n          type: string\n        errorType:\n          description: A URI that identifies the problem type, which points to human-readable documentation on this problem type.\n          type: string\n        instance:\n          description: A unique URI that identifies the specific occurrence of the problem.\n          type: string\n        invalidFields:\n          description: Detailed explanations of each validation error, when applicable.\n          items:\n            $ref: \"#/components/schemas/InvalidField\"\n          type: array\n        requestId:\n          description: A unique reference for the request, essentially same as `pspReference`.\n          type: string\n        status:\n          description: The HTTP status code.\n          format: int32\n          type: integer\n        title:\n          description: A short, human-readable summary of the problem type.\n          type: string\n      required:\n        - errorType\n        - errorCode\n        - title\n        - detail\n        - status\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    StockData:\n      properties:\n        marketIdentifier:\n          description: The [Market Identifier Code](https://en.wikipedia.org/wiki/Market_Identifier_Code) of the stock market where the organization's stocks are traded.\n          type: string\n        stockNumber:\n          description: The stock number.\n          type: string\n        tickerSymbol:\n          description: The stock ticker symbol.\n          type: string\n    SweepConfiguration:\n      properties:\n        balanceAccountId:\n          description: Unique identifier of the [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balanceAccounts/{id}) that will be the source or destination of the balance sweep. This can only be used for periodic sweep schedules such as `schedule.type` **daily** or **monthly**.\n          type: string\n        merchantAccount:\n          description: The merchant account that will be the source of funds. You can only use this if you are processing payments with Adyen. This can only be used for sweeps of `type` **pull** and `schedule.type` **balance**.\n          type: string\n        schedule:\n          $ref: \"#/components/schemas/SweepSchedule\"\n          description: The schedule when the `triggerAmount` is evaluated. If the balance meets the threshold, funds are pushed out of or pulled in to the balance account.\n        sweepAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount that must be pushed out or pulled in. You can configure only one of `sweepAmount` or `targetAmount`.\n        targetAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The amount that must be available in the balance account after the sweep. You can configure only one of `sweepAmount` or `targetAmount`.\n        transferInstrumentId:\n          description: Unique identifier of the [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/transferInstruments/{id}__queryParam_id) that will be the source or destination of the balance sweep. This can only be used for periodic sweep schedules such as `schedule.type` **daily** or **monthly**.\n          type: string\n        triggerAmount:\n          $ref: \"#/components/schemas/Amount\"\n          description: |-\n            The threshold amount that triggers the sweep. If not specified, the amount defaults to zero. The `triggerAmount` is evaluated at the specified `schedule.type`.\n\n            * For `type` **pull**, if the balance is less than or equal to the `triggerAmount`, funds will be pulled in to the balance account.\n\n            * For `type` **push**, if the balance is more than or equal to the `triggerAmount`, funds will be pushed out of the balance account.\n        type:\n          default: push\n          description: |-\n            The direction of sweep. Possible values:\n\n             * **push**: _Push funds out_ to a destination balance account or transfer instrument.\n\n             * **pull**: _Pull funds in_ from a source merchant account or balance account. \n          enum:\n            - pull\n            - push\n          type: string\n      required:\n        - schedule\n        - type\n    SweepSchedule:\n      properties:\n        type:\n          description: |-\n            The schedule type.\n\n            Possible values:\n\n            * **daily**: Push out funds daily at 07:00 AM CET.\n\n            * **weekly**: Push out funds every Monday at 07:00 AM CET.\n\n            * **monthly**: Push out funds every 1st of the month at 07:00 AM CET.\n\n            * **balance**: Only for sweeps of `type` **pull** and with a `merchantAccount` source. Pull in funds instantly if the balance is less than or equal to the `triggerAmount`.\n          enum:\n            - balance\n            - daily\n            - monthly\n            - weekly\n          type: string\n    TransactionRule:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The maximum amount that a payment instrument can be used for in a given period specified in the `interval.type`.\n        balancePlatformId:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.\n          type: string\n        countries:\n          description: 'List of countries to which the rule applies. For example: **[\"NL\",\"US\"]**.'\n          items:\n            type: string\n          type: array\n        description:\n          description: Your description for the transaction rule, maximum 300 characters.\n          maxLength: 300\n          type: string\n        endDate:\n          description: |-\n            The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format.  For example, **2020-12-18T10:15:30+01:00**.\n\n            If not provided when creating a transaction rule, the rule will be evaluated until the rule status is set to **inactive**.\n          type: string\n        entryModes:\n          description: |-\n            List of point-of-sale entry modes to which the rule applies.\n\n            Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.\n          items:\n            enum:\n              - barcode\n              - chip\n              - cof\n              - contactless\n              - magstripe\n              - manual\n              - ocr\n              - server\n              - token\n              - unknown\n            type: string\n          type: array\n        id:\n          description: Unique identifier of the transaction rule.\n          type: string\n        interval:\n          $ref: \"#/components/schemas/TransactionRuleInterval\"\n          description: The interval when the rule conditions must be applied.\n        maxTransactions:\n          description: The maximum number of transactions that a payment instrument can be used for in a given period specified in the `interval.type`.\n          format: int32\n          type: integer\n        mccs:\n          description: List of Merchant Category Codes (MCCs) to which the rule applies.\n          items:\n            type: string\n          type: array\n        paymentInstrumentGroupId:\n          description: Unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/paymentInstrumentGroups/{id}) to which the rule applies.\n          type: string\n        paymentInstrumentId:\n          description: Unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/paymentInstruments/{id}) to which the rule applies.\n          type: string\n        processingTypes:\n          description: |-\n            List of processing types to which the rule applies.\n\n            Possible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.\n          items:\n            enum:\n              - atmWithdraw\n              - balanceInquiry\n              - ecommerce\n              - moto\n              - pos\n              - purchaseWithCashback\n              - recurring\n              - token\n              - unknown\n            type: string\n          type: array\n        reference:\n          description: Your reference for the transaction rule, maximum 150 characters.\n          maxLength: 150\n          type: string\n        startDate:\n          description: |+\n            The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\n            If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. \n\n          type: string\n        status:\n          description: |-\n            The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created \n            with an **active** status. \n\n            Possible values: **active**, **inactive**.\n          enum:\n            - active\n            - inactive\n          type: string\n        type:\n          description: |\n            The type of conditions provided in the rule.\n\n            Possible values:\n              * **allowList** - The rule provides categories (such as country and MCC) where payments must be allowed. \n             * **blockList** - The rule provides categories (such as country and MCC) where payments must be blocked. \n             * **maxUsage** - The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument. \n             * **velocity** - The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.\n          enum:\n            - allowList\n            - blockList\n            - maxUsage\n            - velocity\n          type: string\n          x-enum:\n            - description: The rule provides categories (such as country and MCC) where payments must be allowed.\n              value: allowList\n            - description: The rule provides categories (such as country and MCC) where payments must be blocked.\n              value: blockList\n            - description: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.\n              value: velocity\n            - description: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.\n              value: maxUsage\n      required:\n        - type\n        - description\n        - reference\n        - interval\n    TransactionRuleInfo:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n          description: The maximum amount that a payment instrument can be used for in a given period specified in the `interval.type`.\n        balancePlatformId:\n          description: Unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.\n          type: string\n        countries:\n          description: 'List of countries to which the rule applies. For example: **[\"NL\",\"US\"]**.'\n          items:\n            type: string\n          type: array\n        description:\n          description: Your description for the transaction rule, maximum 300 characters.\n          maxLength: 300\n          type: string\n        endDate:\n          description: |-\n            The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format.  For example, **2020-12-18T10:15:30+01:00**.\n\n            If not provided when creating a transaction rule, the rule will be evaluated until the rule status is set to **inactive**.\n          type: string\n        entryModes:\n          description: |-\n            List of point-of-sale entry modes to which the rule applies.\n\n            Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.\n          items:\n            enum:\n              - barcode\n              - chip\n              - cof\n              - contactless\n              - magstripe\n              - manual\n              - ocr\n              - server\n              - token\n              - unknown\n            type: string\n          type: array\n        interval:\n          $ref: \"#/components/schemas/TransactionRuleInterval\"\n          description: The interval when the rule conditions must be applied.\n        maxTransactions:\n          description: The maximum number of transactions that a payment instrument can be used for in a given period specified in the `interval.type`.\n          format: int32\n          type: integer\n        mccs:\n          description: List of Merchant Category Codes (MCCs) to which the rule applies.\n          items:\n            type: string\n          type: array\n        paymentInstrumentGroupId:\n          description: Unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/paymentInstrumentGroups/{id}) to which the rule applies.\n          type: string\n        paymentInstrumentId:\n          description: Unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/paymentInstruments/{id}) to which the rule applies.\n          type: string\n        processingTypes:\n          description: |-\n            List of processing types to which the rule applies.\n\n            Possible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.\n          items:\n            enum:\n              - atmWithdraw\n              - balanceInquiry\n              - ecommerce\n              - moto\n              - pos\n              - purchaseWithCashback\n              - recurring\n              - token\n              - unknown\n            type: string\n          type: array\n        reference:\n          description: Your reference for the transaction rule, maximum 150 characters.\n          maxLength: 150\n          type: string\n        startDate:\n          description: |+\n            The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.\n\n            If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. \n\n          type: string\n        status:\n          description: |-\n            The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created \n            with an **active** status. \n\n            Possible values: **active**, **inactive**.\n          enum:\n            - active\n            - inactive\n          type: string\n        type:\n          description: |\n            The type of conditions provided in the rule.\n\n            Possible values:\n              * **allowList** - The rule provides categories (such as country and MCC) where payments must be allowed. \n             * **blockList** - The rule provides categories (such as country and MCC) where payments must be blocked. \n             * **maxUsage** - The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument. \n             * **velocity** - The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.\n          enum:\n            - allowList\n            - blockList\n            - maxUsage\n            - velocity\n          type: string\n          x-enum:\n            - description: The rule provides categories (such as country and MCC) where payments must be allowed.\n              value: allowList\n            - description: The rule provides categories (such as country and MCC) where payments must be blocked.\n              value: blockList\n            - description: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.\n              value: velocity\n            - description: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.\n              value: maxUsage\n      required:\n        - type\n        - description\n        - reference\n        - interval\n    TransactionRuleInterval:\n      properties:\n        type:\n          description: |-\n            Defines the period when the rule conditions and limits apply, and how often the amount and transaction counters are reset.\n\n            Possible values:\n              * **perTransaction**: The conditions are evaluated and the counters are reset for every transaction.\n             * **daily**: The counters are reset daily at 00:00:00 UTC.\n             * **weekly**: The counters are reset every Monday at 00:00:00 UTC. \n             * **monthly**: The counters reset every 1st day of the month at 00:00:00 UTC. \n             * **lifetime**: The conditions and limits apply to the lifetime of the payment instrument.\n          enum:\n            - daily\n            - lifetime\n            - monthly\n            - perTransaction\n            - weekly\n          type: string\n      required:\n        - type\n    TransactionRuleResponse:\n      properties:\n        transactionRule:\n          $ref: \"#/components/schemas/TransactionRule\"\n          description: The transaction rule.\n    TransactionRulesResponse:\n      properties:\n        transactionRules:\n          description: List of transaction rules.\n          items:\n            $ref: \"#/components/schemas/TransactionRule\"\n          type: array\n    TransferInstrument:\n      properties:\n        bankAccount:\n          $ref: \"#/components/schemas/BankAccountInfo\"\n          description: Contains information about the legal entity's bank account. Required when `type` is **bankAccount**.\n        id:\n          description: Unique identifier of the transfer instrument.\n          type: string\n        legalEntityId:\n          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/legalEntities/{id}__queryParam_id) that owns the transfer instrument.\n          type: string\n        recurringDetail:\n          $ref: \"#/components/schemas/RecurringDetail\"\n          description: Contains information about the legal entity's previously stored payment details. Required when `type` is **recurringDetail**.\n        type:\n          description: |-\n            The type of transfer instrument.\n\n            Possible values: **bankAccount**, **recurringDetail**.\n          type: string\n    TransferInstrumentInfo:\n      properties:\n        bankAccount:\n          $ref: \"#/components/schemas/BankAccountInfo\"\n          description: Contains information about the legal entity's bank account. Required when `type` is **bankAccount**.\n        legalEntityId:\n          description: Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/legalEntities/{id}__queryParam_id) that owns the transfer instrument.\n          type: string\n        recurringDetail:\n          $ref: \"#/components/schemas/RecurringDetail\"\n          description: Contains information about the legal entity's previously stored payment details. Required when `type` is **recurringDetail**.\n        type:\n          description: |-\n            The type of transfer instrument.\n\n            Possible values: **bankAccount**, **recurringDetail**.\n          type: string\n    VerificationError:\n      properties:\n        code:\n          description: The verification error code.\n          type: string\n        message:\n          description: A description of the error.\n          type: string\n        remediatingActions:\n          description: Contains the actions that you can take to resolve the verification error.\n          items:\n            $ref: \"#/components/schemas/RemediatingAction\"\n          type: array\n        subErrors:\n          description: Contains more granular information about the verification error.\n          items:\n            $ref: \"#/components/schemas/VerificationError-recursive\"\n          type: array\n        type:\n          description: \"The type of error. Possible values: **invalidInput**, **dataMissing**\"\n          enum:\n            - dataMissing\n            - invalidInput\n          type: string\n    VerificationError-recursive:\n      properties:\n        code:\n          description: The verification error code.\n          type: string\n        message:\n          description: A description of the error.\n          type: string\n        remediatingActions:\n          description: Contains the actions that you can take to resolve the verification error.\n          items:\n            $ref: \"#/components/schemas/RemediatingAction\"\n          type: array\n        type:\n          description: \"The type of error. Possible values: **invalidInput**, **dataMissing**\"\n          enum:\n            - dataMissing\n            - invalidInput\n          type: string\n    VoidResponse: {}\n    WebData:\n      properties:\n        appAddress:\n          description: Application URL.\n          type: string\n        webAddress:\n          description: Website URL.\n          type: string\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n  - General\n  - Account holders\n  - Balance accounts\n  - Payment instruments\n  - Payment instrument groups\n  - Transaction rules\n  - Legal entities\n  - Transfer instruments\n  - Documents",
			"canonicalURL": "/npm/openapi-to-postmanv2@8662e530a1fe4e843e6779d4e062197c292df425/-/blob/test/data/valid_openapi31X/yaml/balancePlatformService.yaml",
			"externalURLs": []
		}
	}
}