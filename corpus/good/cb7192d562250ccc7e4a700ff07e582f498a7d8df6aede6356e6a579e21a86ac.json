{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PacktPublishing/API-Testing-and-Development-with-Postman"
		},
		"file": {
			"name": "TodoList.yaml",
			"size": 0,
			"path": "Chapter12/TodoList.yaml",
			"byteSize": 4205,
			"content": "openapi: 3.0.1\r\ninfo:\r\n  title: ToDo List API\r\n  description: Manages ToDo list tasks\r\n  version: '1.0'\r\nservers:\r\n  - url: http://localhost:5000/todolist/api/v1\r\npaths:\r\n  /tasks:\r\n    get:\r\n      description: gets the list of all tasks for the current user\r\n      responses:\r\n        '200':\r\n          description: got back the list of tasks\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/tasks'\r\n        '400':\r\n          description: sent wrongly formatted data\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n    post:\r\n      description: create a new task\r\n      responses:\r\n        '201':\r\n          description: created a new task\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/task'\r\n        '400':\r\n          description: sent wrongly formatted data\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/taskBody'\r\n  /tasks/{taskId}:\r\n    get:\r\n      description: Gets the informaiton for the specified task\r\n      parameters:\r\n        - in: path\r\n          schema:\r\n            $ref: '#/components/schemas/taskId'\r\n          name: taskId\r\n          description: Id of the task\r\n          required: true \r\n          example:\r\n            taskId: 1\r\n      responses:\r\n        '200':\r\n          description: Got back the specified task\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/task'\r\n        '400':\r\n          description: sent wrongly formatted data\r\n          content:\r\n            application/json:\r\n              schema:\r\n               $ref: '#/components/schemas/Error'\r\n\r\n    put:\r\n      description: Changes the description for the specified task\r\n      parameters:\r\n        - in: path\r\n          schema:\r\n            $ref: '#/components/schemas/taskId'\r\n          name: taskId\r\n          description: Id of the task\r\n          required: true \r\n      responses:\r\n        '200':\r\n          description: task updated correctly\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/task'\r\n        '400':\r\n          description: send wrongly formatted data\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Error'\r\n      requestBody:\r\n        $ref: '#/components/requestBodies/taskBody'\r\n    delete:\r\n      description: Removes the specified task\r\n      parameters:\r\n        - in: path\r\n          schema:\r\n            $ref: '#/components/schemas/taskId'\r\n          name: taskId\r\n          description: Id of the task\r\n          required: true \r\n      responses:\r\n        '204':\r\n          description: specified task removed\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\ncomponents:\r\n  requestBodies:\r\n    taskBody:\r\n      required: true\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: '#/components/schemas/task'\r\n          examples:\r\n            New:\r\n              value:\r\n                title: Learn API Testing\r\n                status: New\r\n            InProgress:\r\n              value:\r\n                title: Learn API Testing\r\n                status: In Progress\r\n            Completed:\r\n              value:\r\n                title: Learn API Testing\r\n                status: Completed\r\n  schemas:\r\n    taskId:\r\n      type: integer\r\n      minimum: 1\r\n      example: 1\r\n    task:\r\n      type: object\r\n      required:\r\n        - title\r\n        - status\r\n      properties:\r\n        title:\r\n          type: string\r\n        status:\r\n          type: string\r\n          enum: [New,In Progress,Completed]\r\n        dueDate:\r\n            type: string\r\n            format: date-time\r\n    tasks:\r\n      type: array\r\n      items:\r\n        $ref: '#/components/schemas/task'\r\n    Error:\r\n      type: string\r\n      default: \"Bad data sent\"",
			"canonicalURL": "/github.com/PacktPublishing/API-Testing-and-Development-with-Postman@bacfd13f281ca3022d33674e6fa1b0d5ebcdfc11/-/blob/Chapter12/TodoList.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PacktPublishing/API-Testing-and-Development-with-Postman/blob/bacfd13f281ca3022d33674e6fa1b0d5ebcdfc11/Chapter12/TodoList.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}