{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Coiney-SDK/CoineyKit-Payge"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "api-spec/api.yaml",
			"byteSize": 18063,
			"content": "openapi: 3.0.3\ninfo:\n  title: STORES Invoice API\n  description: Payment with STORES Invoice\n  version: 1.0.2\n  x-CoineyPayge-Version: 2016-10-25\nservers:\n- url: /v1\nsecurity:\n- bearer: []\npaths:\n  /payments:\n    get:\n      tags:\n      - payment\n      description: |\n        支払取引の一覧を返します。\n      parameters:\n      - name: X-CoineyPayge-Version\n        in: header\n        description: API のマイナーバージョンを指定します。\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: |\n          返す支払取引の数を指定。\n        schema:\n          maximum: 100\n          minimum: 1\n          type: integer\n          default: 10\n      - name: startingAfter\n        in: query\n        description: |\n          支払取引の一覧を取得する際に、先頭の支払取引の ID を指定します。\n          返ってくる一覧は、この ID の次の支払取引からとなります。\n          この動きは、次のページを取得したい場合に、前回取得した一覧の最後の ID を\n          指定すればよいことになります。\n        schema:\n          type: string\n      - name: endingBefore\n        in: query\n        description: |\n          支払取引の一覧を取得する際に、最後の支払取引の ID を指定します。\n          返ってくる一覧は、この ID の前の支払取引からとなります。\n          この動きは、前のページを取得したい場合に、前回取得した一覧の最後の ID を\n          指定すればよいことになります。\n        schema:\n          type: string\n      responses:\n        200:\n          description: |\n            条件にマッチする支払取引を返します。\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  object:\n                    type: string\n                    enum:\n                    - list\n                  hasMore:\n                    type: boolean\n                  totalCount:\n                    type: integer\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Payment'\n        400:\n          description: |\n            リクエストパラメータ不正\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer error=\"invalid_request\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        401:\n          description: |\n            API キーが設定されていない。\n            もしくは、不正な API キー\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer realm=\"no_api_key\" or\n                Bearer error=\"invaid_api_key\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - payment\n      description: |\n        支払取引を開始します。\n      parameters:\n      - name: X-CoineyPayge-Version\n        in: header\n        description: API のマイナーバージョンを指定します。\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentRequest'\n        required: false\n      responses:\n        201:\n          description: |\n            支払い完了\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n        400:\n          description: |\n            リクエストパラメータ不正\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer error=\"invalid_request\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        401:\n          description: |\n            API キーが設定されていない。\n            もしくは、不正な API キー\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer realm=\"no_api_key\" or\n                Bearer error=\"invaid_api_key\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: body\n  /payments/{PAYMENT_ID}:\n    get:\n      tags:\n      - payment\n      description: |\n        支払取引の情報を返します。\n      parameters:\n      - name: X-CoineyPayge-Version\n        in: header\n        description: API のマイナーバージョンを指定します。\n        schema:\n          type: string\n      - name: PAYMENT_ID\n        in: path\n        description: 支払取引のID\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: |\n            該当する支払取引を返します。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n        400:\n          description: |\n            リクエストパラメータ不正\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer error=\"invalid_request\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        401:\n          description: |\n            API キーが設定されていない。\n            もしくは、不正な API キー\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer realm=\"no_api_key\" or\n                Bearer error=\"invaid_api_key\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        404:\n          description: |\n            支払取引が見つからない\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    patch:\n      tags:\n      - payment\n      description: |\n        支払取引の情報を更新します。\n      parameters:\n      - name: X-CoineyPayge-Version\n        in: header\n        description: API のマイナーバージョンを指定します。\n        schema:\n          type: string\n      - name: PAYMENT_ID\n        in: path\n        description: 支払取引のID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePaymentRequest'\n        required: false\n      responses:\n        200:\n          description: |\n            支払取引の更新完了。\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Payment'\n        400:\n          description: |\n            リクエストパラメータ不正\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer error=\"invalid_request\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        401:\n          description: |\n            API キーが設定されていない。\n            もしくは、不正な API キー\n          headers:\n            WWW-Authenticate:\n              description: |\n                Bearer realm=\"no_api_key\" or\n                Bearer error=\"invaid_api_key\"\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        404:\n          description: |\n            支払取引が見つからない\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    Payment:\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n          enum:\n          - payment\n        mode:\n          type: string\n          description: |\n            本番環境では live、テスト環境では test\n          enum:\n          - live\n          - test\n        createdAt:\n          type: string\n          description: |\n            取引の作成日時。ISO 8601 フォーマット\n          format: dateTime\n        amount:\n          type: number\n          format: float\n        currency:\n          type: string\n          description: |\n            支払に使う通貨。\n            ISO 4217 に基づいた 3桁の通貨コードを使います。\n          enum:\n          - jpy\n        locale:\n          type: string\n          description: |\n            STORES 請求書決済の表示言語。\n            支払処理前は、支払作成時に設定した表示言語、\n            支払処理が行われた場合は、支払時に設定した表示言語となります。\n            ISO 639 の言語コード、ISO 3166 の国コードに基づいています。\n          enum:\n          - ja_JP\n          - en_US\n          - zh_CN\n          - zh_TW\n          - ko_KR\n          - th_TH\n        paidAt:\n          type: string\n          description: |\n            支払処理が完了した日時。ISO 8601 フォーマット\n            status が paid or refunded の場合のみ\n          format: dateTime\n        refundedAt:\n          type: string\n          description: |\n            返金処理が完了した日時。ISO 8601 フォーマット\n            status が refunded の場合のみ\n          format: dateTime\n        validUntil:\n          type: string\n          description: |\n            この支払が有効である日時。ISO 8601 フォーマット\n          format: dateTime\n        status:\n          type: string\n          enum:\n          - open\n          - expired\n          - paid\n          - refunded\n          - cancelled\n        subject:\n          type: string\n          description: |\n            STORES 請求書決済 の件名\n        remarks:\n          type: string\n          description: |\n            STORES 請求書決済 の備考\n        description:\n          type: string\n          description: |\n            STORES 請求書決済に関する内部的なメモ\n        metadata:\n          type: object\n          properties: {}\n          description: |\n            STORES 請求書決済に関する任意のデータ\n            任意の Key/Value が定義できるが、Value は文字列のみ許可\n        links:\n          type: object\n          properties:\n            paymentUrl:\n              type: string\n              description: |\n                実際に支払処理する画面へ遷移する URL\n                POST `/payment` で作られる\n            redirectUrl:\n              type: string\n              description: |\n                支払処理が完了した際に遷移する画面の URL\n            cancelUrl:\n              type: string\n              description: |\n                支払処理をキャンセルした際に遷移する画面の URL\n            webhookUrl:\n              type: string\n              description: |\n                支払処理中に呼び出す Webhook の URL\n    CreatePaymentRequest:\n      required:\n      - amount\n      - currency\n      - method\n      type: object\n      properties:\n        amount:\n          minimum: 1\n          type: number\n          description: |\n            支払金額\n          format: float\n        currency:\n          type: string\n          description: |\n            支払に使う通貨を指定します。\n            ISO 4217 に基づいた 3桁の通貨コードを使います。\n            現状は \"JPY\" のみ有効です。\n          enum:\n          - jpy\n        locale:\n          type: string\n          description: |\n            STORES 請求書決済の表示言語を指定します。\n            指定しない場合は、ブラウザの設定が使われます。\n            ISO 639 の言語コード、ISO 3166 の国コードに基づいています。\n          enum:\n          - ja_JP\n          - en_US\n          - zh_CN\n          - zh_TW\n          - ko_KR\n          - th_TH\n        redirectUrl:\n          maxLength: 255\n          type: string\n          description: |\n            支払処理が完了した後に遷移する画面の URL を指定します。\n            指定しない場合は STORES 請求書決済の画面が使われます。\n        cancelUrl:\n          maxLength: 255\n          type: string\n          description: |\n            支払処理をキャンセルした際に遷移する画面の URL を指定します。\n            指定しない場合は、ユーザーからのキャンセルができなくなります。\n        webhookUrl:\n          maxLength: 255\n          type: string\n          description: |\n            この支払でのみ使用する webhook URL を指定します。\n            指定しない場合は、アカウントの設定値が使われます。\n            アカウントの設定値もない場合は、webhook の通知をしません。\n        method:\n          type: string\n          description: |\n            支払に使用する支払方法を指定します。\n            通常は、このパラメータを設定せずに使用します。\n            パラメータを設定しない場合は、使用できる支払方法から選択する画面が表示されます。\n            このパラメータを設定した場合は、支払方法の選択画面を表示せず、直接入力画面へと遷移します。\n          enum:\n          - creditcard\n        subject:\n          type: string\n          description: |\n            STORES 請求書決済の件名\n        remarks:\n          type: string\n          description: |\n            STORES 請求書決済の備考\n        description:\n          type: string\n          description: |\n            STORES 請求書決済に関する内部的なメモ\n        metadata:\n          type: object\n          properties: {}\n          description: |\n            STORES 請求書決済に関する任意のデータ\n            任意の Key/Value が定義できるが、Value は文字列のみ許可\n        expiredOn:\n          type: string\n          description: |\n            支払期限を日付で指定します。\n            指定しない場合は、デフォルトで 3ヶ月が設定されます。\n          format: date\n    UpdatePaymentRequest:\n      type: object\n      properties:\n        expiredOn:\n          type: string\n          description: |\n            支払期限を日付で指定します。\n            指定しない場合は、デフォルトで 3ヶ月が設定されます。\n          format: date\n        description:\n          type: string\n          description: |\n            STORES 請求書決済に関する内部的なメモ\n        metadata:\n          type: object\n          properties: {}\n          description: |\n            STORES 請求書決済に関する任意のデータ\n            任意の Key/Value が定義できるが、Value は文字列のみ許可\n    Errors:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: エラーの種類\n          enum:\n          - api_error\n          - authentication_error\n          - card_error\n          - invalid_request_error\n        code:\n          type: string\n          description: エラーコード\n        message:\n          type: string\n          description: エラーの内容\n        params:\n          type: object\n          properties: {}\n          description: |\n            パラメータに関するエラーの場合に使用する。\n            Key としてパラメータ名、Value としてエラーメッセージを含める。\n  responses:\n    AuthenticationError:\n      description: |\n        API キーが設定されていない。\n        もしくは、不正な API キー\n      headers:\n        WWW-Authenticate:\n          description: |\n            Bearer realm=\"no_api_key\" or\n            Bearer error=\"invaid_api_key\"\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    InvalidParameter:\n      description: |\n        リクエストパラメータ不正\n      headers:\n        WWW-Authenticate:\n          description: |\n            Bearer error=\"invalid_request\"\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    NotFound:\n      description: |\n        支払取引が見つからない\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n  parameters:\n    payment_id:\n      name: PAYMENT_ID\n      in: path\n      description: 支払取引のID\n      required: true\n      schema:\n        type: string\n    x_coiney_version:\n      name: X-CoineyPayge-Version\n      in: header\n      description: API のマイナーバージョンを指定します。\n      schema:\n        type: string\n  securitySchemes:\n    bearer:\n      type: apiKey\n      description: RFC 7235 の Authorization ヘッダを用い、RFC 6750 の Bearer スキームを使用する\n      name: Authorization\n      in: header\n",
			"canonicalURL": "/github.com/Coiney-SDK/CoineyKit-Payge@3a3992c3a06bf98bd339812e3e7c89373c390f3d/-/blob/api-spec/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Coiney-SDK/CoineyKit-Payge/blob/3a3992c3a06bf98bd339812e3e7c89373c390f3d/api-spec/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}