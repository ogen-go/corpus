{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openservicebrokerapi/osb-checker"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "autogenerated/go-server/api/openapi.yaml",
			"byteSize": 46892,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    email: open-service-broker-api@googlegroups.com\n    name: Open Service Broker API\n    url: https://www.openservicebrokerapi.org/\n  description: The Open Service Broker API defines an HTTP(S) interface between Platforms\n    and Service Brokers.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Open Service Broker API\n  version: master - might contain changes that are not yet released\nexternalDocs:\n  description: The offical Open Service Broker API specification\n  url: https://github.com/openservicebrokerapi/servicebroker/\nservers:\n- url: http://localhost:3000/\n- url: https://localhost:3000/\nsecurity:\n- basicAuth: []\npaths:\n  /v2/catalog:\n    get:\n      operationId: catalog.get\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Catalog'\n          description: catalog response\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: get the catalog of services that the service broker offers\n      tags:\n      - Catalog\n  /v2/service_instances/{instance_id}:\n    delete:\n      operationId: serviceInstance.deprovision\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: asynchronous operations supported\n        in: query\n        name: accepts_incomplete\n        schema:\n          type: boolean\n      - description: id of the service associated with the instance being deleted\n        in: query\n        name: service_id\n        required: true\n        schema:\n          type: string\n      - description: id of the plan associated with the instance being deleted\n        in: query\n        name: plan_id\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n          description: Accepted\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        410:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Gone\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unprocessable Entity\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: deprovision a service instance\n      tags:\n      - ServiceInstances\n    get:\n      operationId: serviceInstance.get\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: id of the service associated with the instance\n        in: query\n        name: service_id\n        schema:\n          type: string\n      - description: id of the plan associated with the instance\n        in: query\n        name: plan_id\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceResource'\n          description: OK\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: gets a service instance\n      tags:\n      - ServiceInstances\n    patch:\n      operationId: serviceInstance.update\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: asynchronous operations supported\n        in: query\n        name: accepts_incomplete\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceUpdateRequest'\n        description: parameters for the requested service instance update\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n          description: Accepted\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unprocessable Entity\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: update a service instance\n      tags:\n      - ServiceInstances\n      x-codegen-request-body-name: body\n    put:\n      operationId: serviceInstance.provision\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: asynchronous operations supported\n        in: query\n        name: accepts_incomplete\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceInstanceProvisionRequest'\n        description: parameters for the requested service instance provision\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n          description: OK\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceProvisionResponse'\n          description: Created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceInstanceAsyncOperation'\n          description: Accepted\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unprocessable Entity\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: provision a service instance\n      tags:\n      - ServiceInstances\n      x-codegen-request-body-name: body\n  /v2/service_instances/{instance_id}/last_operation:\n    get:\n      operationId: serviceInstance.lastOperation.get\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: id of the service associated with the instance\n        in: query\n        name: service_id\n        schema:\n          type: string\n      - description: id of the plan associated with the instance\n        in: query\n        name: plan_id\n        schema:\n          type: string\n      - description: a provided identifier for the operation\n        in: query\n        name: operation\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          description: OK\n          headers:\n            RetryAfter:\n              description: Indicates when to retry the request\n              schema:\n                type: string\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        410:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Gone\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: last requested operation state for service instance\n      tags:\n      - ServiceInstances\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}/last_operation:\n    get:\n      operationId: serviceBinding.lastOperation.get\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: binding id of binding to create\n        in: path\n        name: binding_id\n        required: true\n        schema:\n          type: string\n      - description: id of the service associated with the instance\n        in: query\n        name: service_id\n        schema:\n          type: string\n      - description: id of the plan associated with the instance\n        in: query\n        name: plan_id\n        schema:\n          type: string\n      - description: a provided identifier for the operation\n        in: query\n        name: operation\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastOperationResource'\n          description: OK\n          headers:\n            RetryAfter:\n              description: Indicates when to retry the request\n              schema:\n                type: string\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        410:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Gone\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: last requested operation state for service binding\n      tags:\n      - ServiceBindings\n  /v2/service_instances/{instance_id}/service_bindings/{binding_id}:\n    delete:\n      operationId: serviceBinding.unbinding\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: binding id of binding to create\n        in: path\n        name: binding_id\n        required: true\n        schema:\n          type: string\n      - description: id of the service associated with the instance being deleted\n        in: query\n        name: service_id\n        required: true\n        schema:\n          type: string\n      - description: id of the plan associated with the instance being deleted\n        in: query\n        name: plan_id\n        required: true\n        schema:\n          type: string\n      - description: asynchronous operations supported\n        in: query\n        name: accepts_incomplete\n        schema:\n          type: boolean\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Object'\n          description: OK\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n          description: Accepted\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        410:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Gone\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unprocessable Entity\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: deprovision of a service binding\n      tags:\n      - ServiceBindings\n    get:\n      operationId: serviceBinding.get\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: binding id of binding to create\n        in: path\n        name: binding_id\n        required: true\n        schema:\n          type: string\n      - description: id of the service associated with the instance\n        in: query\n        name: service_id\n        schema:\n          type: string\n      - description: id of the plan associated with the instance\n        in: query\n        name: plan_id\n        schema:\n          type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResource'\n          description: OK\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        404:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not Found\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: gets a service binding\n      tags:\n      - ServiceBindings\n    put:\n      operationId: serviceBinding.binding\n      parameters:\n      - description: version number of the Service Broker API that the Platform will\n          use\n        in: header\n        name: X-Broker-API-Version\n        required: true\n        schema:\n          type: string\n      - description: identity of the user that initiated the request from the Platform\n        in: header\n        name: X-Broker-API-Originating-Identity\n        schema:\n          type: string\n      - description: idenity of the request from the Platform\n        in: header\n        name: X-Broker-API-Request-Identity\n        schema:\n          type: string\n      - description: instance id of instance to provision\n        in: path\n        name: instance_id\n        required: true\n        schema:\n          type: string\n      - description: binding id of binding to create\n        in: path\n        name: binding_id\n        required: true\n        schema:\n          type: string\n      - description: asynchronous operations supported\n        in: query\n        name: accepts_incomplete\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceBindingRequest'\n        description: parameters for the requested service binding\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n          description: OK\n        201:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceBindingResponse'\n          description: Created\n        202:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncOperation'\n          description: Accepted\n        400:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Bad Request\n        401:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized\n        409:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Conflict\n        410:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Gone\n        412:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Precondition Failed\n        422:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unprocessable Entity\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected\n      summary: generation of a service binding\n      tags:\n      - ServiceBindings\n      x-codegen-request-body-name: body\ncomponents:\n  parameters:\n    APIVersion:\n      description: version number of the Service Broker API that the Platform will\n        use\n      in: header\n      name: X-Broker-API-Version\n      required: true\n      schema:\n        type: string\n    OriginatingIdentity:\n      description: identity of the user that initiated the request from the Platform\n      in: header\n      name: X-Broker-API-Originating-Identity\n      schema:\n        type: string\n    RequestIdentity:\n      description: idenity of the request from the Platform\n      in: header\n      name: X-Broker-API-Request-Identity\n      schema:\n        type: string\n    accepts_incomplete:\n      description: asynchronous operations supported\n      in: query\n      name: accepts_incomplete\n      schema:\n        type: boolean\n    service_id:\n      description: id of the service associated with the instance being deleted\n      in: query\n      name: service_id\n      required: true\n      schema:\n        type: string\n    plan_id:\n      description: id of the plan associated with the instance being deleted\n      in: query\n      name: plan_id\n      required: true\n      schema:\n        type: string\n  responses:\n    ErrorBadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Bad Request\n    ErrorConflict:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Conflict\n    ErrorGone:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Gone\n    ErrorNotFound:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Not Found\n    ErrorPreconditionFailed:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Precondition Failed\n    ErrorUnauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unauthorized\n    ErrorUnexpected:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unexpected\n    ErrorUnprocessableEntity:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Unprocessable Entity\n  schemas:\n    Catalog:\n      example:\n        services:\n        - allow_context_updates: true\n          metadata: '{}'\n          instances_retrievable: true\n          description: description\n          tags:\n          - tags\n          - tags\n          bindable: true\n          plan_updateable: true\n          plans:\n          - metadata: '{}'\n            bindable: true\n            plan_updateable: true\n            maintenance_info:\n              description: description\n              version: version\n            schemas:\n              service_binding:\n                create:\n                  parameters: '{}'\n              service_instance:\n                create:\n                  parameters: '{}'\n                update:\n                  parameters: '{}'\n            name: name\n            description: description\n            id: id\n            free: true\n            maximum_polling_duration: 0\n          - metadata: '{}'\n            bindable: true\n            plan_updateable: true\n            maintenance_info:\n              description: description\n              version: version\n            schemas:\n              service_binding:\n                create:\n                  parameters: '{}'\n              service_instance:\n                create:\n                  parameters: '{}'\n                update:\n                  parameters: '{}'\n            name: name\n            description: description\n            id: id\n            free: true\n            maximum_polling_duration: 0\n          name: name\n          id: id\n          dashboard_client:\n            id: id\n            secret: secret\n            redirect_uri: redirect_uri\n          requires:\n          - syslog_drain\n          - syslog_drain\n          bindings_retrievable: true\n        - allow_context_updates: true\n          metadata: '{}'\n          instances_retrievable: true\n          description: description\n          tags:\n          - tags\n          - tags\n          bindable: true\n          plan_updateable: true\n          plans:\n          - metadata: '{}'\n            bindable: true\n            plan_updateable: true\n            maintenance_info:\n              description: description\n              version: version\n            schemas:\n              service_binding:\n                create:\n                  parameters: '{}'\n              service_instance:\n                create:\n                  parameters: '{}'\n                update:\n                  parameters: '{}'\n            name: name\n            description: description\n            id: id\n            free: true\n            maximum_polling_duration: 0\n          - metadata: '{}'\n            bindable: true\n            plan_updateable: true\n            maintenance_info:\n              description: description\n              version: version\n            schemas:\n              service_binding:\n                create:\n                  parameters: '{}'\n              service_instance:\n                create:\n                  parameters: '{}'\n                update:\n                  parameters: '{}'\n            name: name\n            description: description\n            id: id\n            free: true\n            maximum_polling_duration: 0\n          name: name\n          id: id\n          dashboard_client:\n            id: id\n            secret: secret\n            redirect_uri: redirect_uri\n          requires:\n          - syslog_drain\n          - syslog_drain\n          bindings_retrievable: true\n      properties:\n        services:\n          items:\n            $ref: '#/components/schemas/Service'\n          type: array\n      type: object\n    Service:\n      example:\n        allow_context_updates: true\n        metadata: '{}'\n        instances_retrievable: true\n        description: description\n        tags:\n        - tags\n        - tags\n        bindable: true\n        plan_updateable: true\n        plans:\n        - metadata: '{}'\n          bindable: true\n          plan_updateable: true\n          maintenance_info:\n            description: description\n            version: version\n          schemas:\n            service_binding:\n              create:\n                parameters: '{}'\n            service_instance:\n              create:\n                parameters: '{}'\n              update:\n                parameters: '{}'\n          name: name\n          description: description\n          id: id\n          free: true\n          maximum_polling_duration: 0\n        - metadata: '{}'\n          bindable: true\n          plan_updateable: true\n          maintenance_info:\n            description: description\n            version: version\n          schemas:\n            service_binding:\n              create:\n                parameters: '{}'\n            service_instance:\n              create:\n                parameters: '{}'\n              update:\n                parameters: '{}'\n          name: name\n          description: description\n          id: id\n          free: true\n          maximum_polling_duration: 0\n        name: name\n        id: id\n        dashboard_client:\n          id: id\n          secret: secret\n          redirect_uri: redirect_uri\n        requires:\n        - syslog_drain\n        - syslog_drain\n        bindings_retrievable: true\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        description:\n          type: string\n        tags:\n          items:\n            type: string\n          type: array\n        requires:\n          items:\n            enum:\n            - syslog_drain\n            - route_forwarding\n            - volume_mount\n            type: string\n          type: array\n        bindable:\n          type: boolean\n        instances_retrievable:\n          type: boolean\n        bindings_retrievable:\n          type: boolean\n        allow_context_updates:\n          type: boolean\n        metadata:\n          description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)\n            for more details.\n          type: object\n        dashboard_client:\n          $ref: '#/components/schemas/DashboardClient'\n        plan_updateable:\n          type: boolean\n        plans:\n          items:\n            $ref: '#/components/schemas/Plan'\n          type: array\n      required:\n      - bindable\n      - description\n      - id\n      - name\n      - plans\n      type: object\n    DashboardClient:\n      example:\n        id: id\n        secret: secret\n        redirect_uri: redirect_uri\n      properties:\n        id:\n          type: string\n        secret:\n          type: string\n        redirect_uri:\n          type: string\n      required:\n      - id\n      - secret\n      type: object\n    Plan:\n      example:\n        metadata: '{}'\n        bindable: true\n        plan_updateable: true\n        maintenance_info:\n          description: description\n          version: version\n        schemas:\n          service_binding:\n            create:\n              parameters: '{}'\n          service_instance:\n            create:\n              parameters: '{}'\n            update:\n              parameters: '{}'\n        name: name\n        description: description\n        id: id\n        free: true\n        maximum_polling_duration: 0\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        metadata:\n          description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)\n            for more details.\n          type: object\n        free:\n          default: true\n          type: boolean\n        bindable:\n          type: boolean\n        plan_updateable:\n          type: boolean\n        schemas:\n          $ref: '#/components/schemas/SchemasObject'\n        maximum_polling_duration:\n          type: integer\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n      required:\n      - description\n      - id\n      - name\n      type: object\n    SchemasObject:\n      example:\n        service_binding:\n          create:\n            parameters: '{}'\n        service_instance:\n          create:\n            parameters: '{}'\n          update:\n            parameters: '{}'\n      properties:\n        service_instance:\n          $ref: '#/components/schemas/ServiceInstanceSchemaObject'\n        service_binding:\n          $ref: '#/components/schemas/ServiceBindingSchemaObject'\n      type: object\n    ServiceInstanceSchemaObject:\n      example:\n        create:\n          parameters: '{}'\n        update:\n          parameters: '{}'\n      properties:\n        create:\n          $ref: '#/components/schemas/SchemaParameters'\n        update:\n          $ref: '#/components/schemas/SchemaParameters'\n      type: object\n    ServiceBindingSchemaObject:\n      example:\n        create:\n          parameters: '{}'\n      properties:\n        create:\n          $ref: '#/components/schemas/SchemaParameters'\n      type: object\n    SchemaParameters:\n      example:\n        parameters: '{}'\n      properties:\n        parameters:\n          type: object\n      type: object\n    JSONSchemaObject:\n      type: object\n    ServiceInstanceResource:\n      example:\n        service_id: service_id\n        dashboard_url: dashboard_url\n        parameters: '{}'\n        plan_id: plan_id\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        dashboard_url:\n          type: string\n        parameters:\n          type: object\n      type: object\n    ServiceInstanceProvisionRequest:\n      example:\n        maintenance_info:\n          description: description\n          version: version\n        service_id: service_id\n        context: '{}'\n        organization_guid: organization_guid\n        space_guid: space_guid\n        parameters: '{}'\n        plan_id: plan_id\n      properties:\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        context:\n          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)\n            for more details.\n          type: object\n        organization_guid:\n          type: string\n          x-deprecated: true\n        space_guid:\n          type: string\n          x-deprecated: true\n        parameters:\n          type: object\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n      required:\n      - organization_guid\n      - plan_id\n      - service_id\n      - space_guid\n      type: object\n    ServiceInstanceProvisionResponse:\n      example:\n        dashboard_url: dashboard_url\n      properties:\n        dashboard_url:\n          type: string\n      type: object\n    ServiceInstanceAsyncOperation:\n      properties:\n        dashboard_url:\n          type: string\n        operation:\n          type: string\n      type: object\n    ServiceInstanceUpdateRequest:\n      example:\n        maintenance_info:\n          description: description\n          version: version\n        previous_values:\n          maintenance_info:\n            description: description\n            version: version\n          service_id: service_id\n          organization_id: organization_id\n          space_id: space_id\n          plan_id: plan_id\n        service_id: service_id\n        context: '{}'\n        parameters: '{}'\n        plan_id: plan_id\n      properties:\n        context:\n          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)\n            for more details.\n          type: object\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        parameters:\n          type: object\n        previous_values:\n          $ref: '#/components/schemas/ServiceInstancePreviousValues'\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n      required:\n      - service_id\n      type: object\n    ServiceInstancePreviousValues:\n      example:\n        maintenance_info:\n          description: description\n          version: version\n        service_id: service_id\n        organization_id: organization_id\n        space_id: space_id\n        plan_id: plan_id\n      properties:\n        service_id:\n          type: string\n          x-deprecated: true\n        plan_id:\n          type: string\n        organization_id:\n          type: string\n          x-deprecated: true\n        space_id:\n          type: string\n          x-deprecated: true\n        maintenance_info:\n          $ref: '#/components/schemas/MaintenanceInfo'\n      type: object\n    AsyncOperation:\n      properties:\n        operation:\n          type: string\n      type: object\n    LastOperationResource:\n      example:\n        instance_usable: true\n        update_repeatable: true\n        description: description\n        state: in progress\n      properties:\n        state:\n          enum:\n          - in progress\n          - succeeded\n          - failed\n          type: string\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n      required:\n      - state\n      type: object\n    ServiceBindingResource:\n      example:\n        route_service_url: route_service_url\n        credentials: '{}'\n        syslog_drain_url: syslog_drain_url\n        volume_mounts:\n        - mode: r\n          driver: driver\n          device_type: shared\n          device:\n            volume_id: volume_id\n            mount_config: '{}'\n          container_dir: container_dir\n        - mode: r\n          driver: driver\n          device_type: shared\n          device:\n            volume_id: volume_id\n            mount_config: '{}'\n          container_dir: container_dir\n        parameters: '{}'\n      properties:\n        credentials:\n          type: object\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n          type: array\n        parameters:\n          type: object\n      type: object\n    ServiceBindingRequest:\n      example:\n        app_guid: app_guid\n        service_id: service_id\n        context: '{}'\n        bind_resource:\n          app_guid: app_guid\n          route: route\n        parameters: '{}'\n        plan_id: plan_id\n      properties:\n        context:\n          description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)\n            for more details.\n          type: object\n        service_id:\n          type: string\n        plan_id:\n          type: string\n        app_guid:\n          type: string\n          x-deprecated: true\n        bind_resource:\n          $ref: '#/components/schemas/ServiceBindingResourceObject'\n        parameters:\n          type: object\n      required:\n      - plan_id\n      - service_id\n      type: object\n    ServiceBindingResourceObject:\n      example:\n        app_guid: app_guid\n        route: route\n      properties:\n        app_guid:\n          type: string\n        route:\n          type: string\n      type: object\n    ServiceBindingResponse:\n      example:\n        route_service_url: route_service_url\n        credentials: '{}'\n        syslog_drain_url: syslog_drain_url\n        volume_mounts:\n        - mode: r\n          driver: driver\n          device_type: shared\n          device:\n            volume_id: volume_id\n            mount_config: '{}'\n          container_dir: container_dir\n        - mode: r\n          driver: driver\n          device_type: shared\n          device:\n            volume_id: volume_id\n            mount_config: '{}'\n          container_dir: container_dir\n      properties:\n        credentials:\n          type: object\n        syslog_drain_url:\n          type: string\n        route_service_url:\n          type: string\n        volume_mounts:\n          items:\n            $ref: '#/components/schemas/ServiceBindingVolumeMount'\n          type: array\n      type: object\n    ServiceBindingVolumeMount:\n      example:\n        mode: r\n        driver: driver\n        device_type: shared\n        device:\n          volume_id: volume_id\n          mount_config: '{}'\n        container_dir: container_dir\n      properties:\n        driver:\n          type: string\n        container_dir:\n          type: string\n        mode:\n          enum:\n          - r\n          - rw\n          type: string\n        device_type:\n          enum:\n          - shared\n          type: string\n        device:\n          $ref: '#/components/schemas/ServiceBindingVolumeMountDevice'\n      required:\n      - container_dir\n      - device\n      - device_type\n      - driver\n      - mode\n      type: object\n    ServiceBindingVolumeMountDevice:\n      example:\n        volume_id: volume_id\n        mount_config: '{}'\n      properties:\n        volume_id:\n          type: string\n        mount_config:\n          type: object\n      required:\n      - volume_id\n      type: object\n    MaintenanceInfo:\n      example:\n        description: description\n        version: version\n      properties:\n        version:\n          type: string\n        description:\n          type: string\n      type: object\n    Context:\n      description: See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object)\n        for more details.\n      type: object\n    Metadata:\n      description: See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata)\n        for more details.\n      type: object\n    Object:\n      type: object\n    Error:\n      properties:\n        error:\n          type: string\n        description:\n          type: string\n        instance_usable:\n          type: boolean\n        update_repeatable:\n          type: boolean\n      type: object\n  securitySchemes:\n    basicAuth:\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/openservicebrokerapi/osb-checker@e6d47cbaed87e102a982ed49abf2185648cf8b5e/-/blob/autogenerated/go-server/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openservicebrokerapi/osb-checker/blob/e6d47cbaed87e102a982ed49abf2185648cf8b5e/autogenerated/go-server/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}