{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/o3de/o3de"
		},
		"file": {
			"name": "api_spec.json",
			"size": 0,
			"path": "Gems/AWSMetrics/cdk/api_spec.json",
			"byteSize": 10359,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"AWSMetricsServiceApi\",\n        \"description\": \"Service API for the data analytics pipeline defined by the AWS Metrics Gem\",\n        \"version\": \"1.0.1\"\n    },\n    \"x-amazon-apigateway-request-validators\": {\n      \"all\": {\n         \"validateRequestBody\": true,\n         \"validateRequestParameters\": true\n      }\n    },\n    \"x-amazon-apigateway-request-validator\": \"all\",\n    \"paths\": {\n        \"/producer/events\": {\n            \"post\": {\n                \"x-amazon-apigateway-auth\": {\n                  \"type\": \"AWS_IAM\"\n                },\n                \"x-amazon-apigateway-integration\": {\n                    \"credentials\": \"${ApiGatewayRoleArn}\",\n                    \"uri\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:kinesis:action/PutRecords\",\n                    \"httpMethod\": \"POST\",\n                    \"responses\": {\n                        \"200\": {\n                            \"statusCode\": \"200\",\n                            \"responseTemplates\": {\n                                \"application/json\": \"#set($response = $input.path('$'))\\n#set($records = $input.json('$.Records'))\\n{\\n    \\\"result\\\": {\\n       \\\"total\\\": $response.Records.size(),\\n       \\\"failed_record_count\\\": $input.json('$.FailedRecordCount'),\\n       \\\"events\\\": [\\n           #foreach($record in $response.Records)\\n               #if($record.ErrorCode != $null)\\n               {\\n                   \\\"result\\\": \\\"Error\\\", \\n                   \\\"error_code\\\": \\\"$record.ErrorCode\\\"\\n               }\\n               #else\\n               {\\n                   \\\"result\\\": \\\"Ok\\\"\\n               }\\n               #end\\n               #if($foreach.hasNext),#end\\n           #end\\n       ]\\n    }\\n}\\n\"\n                            }\n                        },\n                        \"4\\\\d{2}\": {\n                            \"statusCode\": \"400\",\n                            \"responseTemplates\": {\n                                \"application/json\": \"#set($inputRoot = $input.path('$'))\\n{\\n   \\\"type\\\": \\\"BadRequest\\\",\\n   \\\"message\\\": $input.json('$.message')\\n}\\n\"\n                            }\n                        },\n                        \"5\\\\d{2}\": {\n                            \"statusCode\": \"500\",\n                            \"responseTemplates\": {\n                                \"application/json\": \"#set($inputRoot = $input.path('$'))\\n{\\n   \\\"type\\\": $input.json('$.__type'),\\n   \\\"message\\\": $input.json('$.message')\\n}\\n\"\n                            }\n                        }\n                    },\n                    \"requestParameters\": {\n                        \"integration.request.header.Content-Type\": \"'x-amz-json-1.1'\"\n                    },\n                    \"requestTemplates\": {\n                        \"application/json\": \"{\\n   \\\"StreamName\\\": \\\"${InputStreamName}\\\",\\n   \\\"Records\\\": [\\n       #set($i = 0)\\n       #foreach($event in $input.path('$.events'))\\n           #set($data = $input.json(\\\"$.events[$i]\\\"))\\n           {\\n               \\\"Data\\\": \\\"$util.base64Encode($data)\\\",\\n               \\\"PartitionKey\\\": \\\"$event.application_id\\\"\\n           }#if($foreach.hasNext),#end\\n           #set($i = $i + 1)\\n       #end\\n   ]\\n}\\n\"\n                    },\n                    \"passthroughBehavior\": \"never\",\n                    \"type\": \"aws\"\n                },\n                \"operationId\": \"SendEvents\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MetricsEventsBatchSchema\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful POST /producer/events\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PostMetricsEventsResponse\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Bad Request Exception\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PostMetricsEventsError\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized Exception\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PostMetricsEventsError\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Internal Server PostMetricsEventsError\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PostMetricsEventsError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"PostMetricsEventsError\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"description\": \"Error message\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"description\": \"Error code from the API\"\n                    }\n                }\n            },\n            \"MetricsEventsBatchSchema\": {\n                \"title\": \"Batched Metrics Events Schema\",\n                \"required\": [\n                    \"events\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"events\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MetricsEventSchema\"\n                        }\n                    }\n                }\n            },\n            \"MetricsEventSchema\": {\n                \"type\": \"object\",\n                \"title\": \"AWSMetrics API Event Schema\",\n                \"description\": \"Metrics Event sent to the service API\",\n                \"required\": [\n                    \"application_id\",\n                    \"event_id\",\n                    \"event_name\",\n                    \"event_timestamp\"\n                ],\n                \"properties\": {\n                    \"application_id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^[0-9-.]+-\\\\{[0-9A-F]{8}-[0-9A-F]{4}-[1-5][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}\\\\}$\",\n                        \"description\": \"Identifier for the application that generated the event\"\n                    },\n                    \"event_id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^\\\\{[0-9A-F]{8}-[0-9A-F]{4}-[1-5][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}\\\\}$\",\n                        \"description\": \"A random UUID that uniquely identifies an event.\"\n                    },\n                    \"event_name\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^[A-Za-z0-9-_.]+$\",\n                        \"description\": \"Name of the event that occurred\"\n                    },\n                    \"event_timestamp\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})T(\\\\d{2})\\\\:(\\\\d{2})\\\\:(\\\\d{2})Z$\",\n                        \"description\": \"The time in seconds since the Unix epoch at which this event occurred (set by producer of event).\"\n                    },\n                    \"event_type\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^[A-Za-z0-9-_.]+$\",\n                        \"description\": \"Identifies the type of event\"\n                    },\n                    \"event_version\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"^[A-Za-z0-9-_.]+$\",\n                        \"description\": \"An API version for this event format.\"\n                    },\n                    \"event_data\": {\n                        \"type\": \"object\",\n                        \"description\": \"Custom metrics attributes defined by this event.\"\n                    }\n                }\n            },\n            \"PostMetricsEventsResponse\": {\n                \"title\": \"Metrics Event Success Response Schema\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"failed_record_count\": {\n                        \"type\": \"number\",\n                        \"description\": \"Number of events that failed to be sent to the backend\"\n                    },\n                    \"events\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostMetricsEventsResponseEntry\"\n                        }\n                    },\n                    \"total\": {\n                        \"type\": \"number\",\n                        \"description\": \"Total number of events that were processed in the request\"\n                    }\n                }\n            },\n            \"PostMetricsEventsResponseEntry\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"error_code\": {\n                        \"type\": \"string\",\n                        \"description\": \"Error code if the individual metrics event failed to be sent\"\n                    },\n                    \"result\": {\n                        \"type\": \"string\",\n                        \"description\": \"Result for the processed individual metrics event. Expected value: \\\"Error\\\" or \\\"Ok\\\"\"\n                    }\n                }\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/o3de/o3de@7daf2ca0d6493e872e8f22d1831f0b2b1f8ebc80/-/blob/Gems/AWSMetrics/cdk/api_spec.json",
			"externalURLs": [
				{
					"url": "https://github.com/o3de/o3de/blob/7daf2ca0d6493e872e8f22d1831f0b2b1f8ebc80/Gems/AWSMetrics/cdk/api_spec.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}