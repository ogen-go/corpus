{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ayltai/hknews"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/main/terraform/templates/api.yaml",
			"byteSize": 7846,
			"content": "openapi: 3.0.3\ninfo:\n  title: HK News\n  description: Serves aggregated news from 13 local news publishers in Hong Kong\n  version: \"3.3\"\n  contact:\n    name: GitHub\n    url: https://github.com/ayltai/hknews\n  license:\n    name: MIT\n    url: https://github.com/ayltai/hknews/blob/master/LICENSE\nservers:\n  - url: ${base_uri}\npaths:\n  /:\n    head:\n      summary: Returns HTTP OK to indicate system health\n      responses:\n        200:\n          description: System is running\n  /sources:\n    get:\n      summary: Gets a list of news publishers supported\n      responses:\n        200:\n          description: Successfully returned the list of news publishers supported\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        500:\n          description: An unexpected internal server error has occurred\n  /item/{uid}:\n    get:\n      summary: Gets a specific news record by its unique ID\n      parameters:\n        - in: path\n          name: uid\n          description: An unique ID that represents the news record to be retrieved\n          schema:\n            type: string\n            format: uuid\n            example: 3c765a4f-4cf9-46e7-8331-6ed6208c9644\n          required: true\n      responses:\n        200:\n          description: Successfully returned the news record requested\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Item'\n        400:\n          description: Request parameter {uid} was missing or invalid\n        404:\n          description: No news record specified by the given unique ID was found\n        500:\n          description: An unexpected internal server error has occurred\n  /items/{sourceNames}/{categoryNames}/{days}:\n    get:\n      summary: Gets a list of news records of specific news categories and from specific news publishers\n      parameters:\n        - in: path\n          name: sourceNames\n          description: A list of news publishers, separated by commas\n          schema:\n            type: string\n            example: 蘋果日報,香港電台\n          required: true\n        - in: path\n          name: categoryNames\n          description: A list of news categories, separated by commas\n          schema:\n            type: string\n            example: 港聞,國際\n          required: true\n        - in: path\n          name: days\n          description: The number of previous days of news to retrieve\n          schema:\n            type: integer\n            example: 2\n          required: true\n        - in: query\n          name: pageNumber\n          description: Page offset\n          schema:\n            type: integer\n            example: 1\n          required: true\n        - in: query\n          name: pageSize\n          description: Page size\n          schema:\n            type: integer\n            example: 10\n          required: true\n      responses:\n        200:\n          description: Successfully returned the list of news records requested\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PageOfItems'\n        400:\n          description: At least one of the request parameters was missing or invalid\n        500:\n          description: An unexpected internal server error has occurred\ncomponents:\n  schemas:\n    Sort:\n      type: object\n      required:\n        - sorted\n        - unsorted\n        - empty\n      properties:\n        sorted:\n          type: boolean\n        unsorted:\n          type: boolean\n        empty:\n          type: boolean\n    Pageable:\n      type: object\n      required:\n        - sort\n        - offset\n        - pageNumber\n        - pageSize\n        - paged\n        - unpaged\n      properties:\n        sort:\n          $ref: '#/components/schemas/Sort'\n        offset:\n          type: integer\n          description: The offset to be taken according to the corresponding page number and page size\n        pageNumber:\n          type: integer\n          description: The page to be returned\n        pageSize:\n          type: integer\n          description: The nunber of items to be returned\n        paged:\n          type: boolean\n          description: Whether the current object contains pagination information\n        unpaged:\n          type: boolean\n          description: Whether the current object does not contain pagination information\n    Page:\n      type: object\n      required:\n        - pageable\n        - sort\n        - number\n        - size\n        - totalPages\n        - totalElements\n        - numberOfElements\n        - first\n        - last\n        - empty\n      properties:\n        pageable:\n          $ref: '#/components/schemas/Pageable'\n        sort:\n          $ref: '#/components/schemas/Sort'\n        number:\n          type: integer\n          description: The page offset of current page\n        size:\n          type: integer\n          description: The maximum number of items on a page\n        totalPages:\n          type: integer\n          description: The number of total pages\n        totalElements:\n          type: integer\n          description: The total amount of items available\n        numberOfElements:\n          type: integer\n          description: The number of items currently on this page\n        first:\n          type: boolean\n          description: Whether the current page is the first one\n        last:\n          type: boolean\n          description: Whether the current page is the last one\n        empty:\n          type: boolean\n          description: Whether the current page is empty\n    PageOfItems:\n      allOf:\n        - type: object\n          required:\n            - content\n          properties:\n            content:\n              type: array\n              items:\n                $ref: '#/components/schemas/Item'\n        - $ref: '#/components/schemas/Page'\n    Item:\n      type: object\n      required:\n        - uid\n        - url\n        - publishDate\n        - sourceName\n        - categoryName\n        - images\n        - videos\n      properties:\n        uid:\n          type: string\n          format: uuid\n          description: The unique ID that represents a news record\n          example: 3c765a4f-4cf9-46e7-8331-6ed6208c9644\n        title:\n          type: string\n          description: The news title\n        description:\n          type: string\n          description: The news details description\n        url:\n          type: string\n          description: The URL where the news was retrieved from\n        publishDate:\n          type: string\n          format: date-time\n          description: The date and time when the news record was first published\n        sourceName:\n          type: string\n          description: The name of the news publisher who published the news record\n          example: 蘋果日報\n        categoryName:\n          type: string\n          description: The news category that the news record belongs to\n          example: 港聞\n        images:\n          type: array\n          items:\n            type: object\n            required:\n              - url\n            properties:\n              url:\n                type: string\n                description: The URL of the image that belongs to a news record\n              description:\n                type: string\n                description: The text description associated with the image\n        videos:\n          type: array\n          items:\n            type: object\n            required:\n              - url\n              - cover\n            properties:\n              url:\n                type: string\n                description: The URL of the video that belongs to a news record\n              cover:\n                type: string\n                description: The URL of the video thumbnail that belongs to a news record\n",
			"canonicalURL": "/github.com/ayltai/hknews@b8d0d22657e6104e3c707c1d9edee4887e100418/-/blob/src/main/terraform/templates/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ayltai/hknews/blob/b8d0d22657e6104e3c707c1d9edee4887e100418/src/main/terraform/templates/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}