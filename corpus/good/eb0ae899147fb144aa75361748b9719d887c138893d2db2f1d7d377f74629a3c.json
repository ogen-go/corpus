{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/abunuwas/microservice-apis"
		},
		"file": {
			"name": "kitchen.yaml",
			"size": 0,
			"path": "ch11/orders/kitchen.yaml",
			"byteSize": 5704,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Kitchen API\n  description: API that allows to manage the production of orders in the kitchen\n  version: 1.0.0\n\nservers:\n  - url: https://coffeemesh.com\n    description: main production server\n  - url: https://coffeemesh-staging.com\n    description: staging server for testing purposes only\n\npaths:\n  /kitchen/schedule:\n    get:\n      summary: Returns a list of orders scheduled for production\n      parameters:\n        - name: progress\n          in: query\n          description: Whether the order is in progress or not. In progress means it's in production in the kitchen.\n          required: false\n          schema:\n            type: boolean\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: since\n          in: query\n          required: false\n          schema:\n            type: string\n            format: 'date-time'\n      responses:\n        '200':\n          description: A list of scheduled orders\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  orders:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/GetScheduledOrderSchema'\n\n    post:\n      summary: Schedules an order for production\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                orders:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ScheduleOrderSchema'\n      responses:\n        '201':\n          description: A JSON representation of the scheduled order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetScheduledOrderSchema'\n\n  /kitchen/schedule/{schedule_id}:\n    parameters:\n      - in: path\n        name: schedule_id\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Returns the status and details of a scheduled order\n      responses:\n        '200':\n          description: A JSON representation of a scheduled order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleOrderSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      summary: Updates an existing scheduled order\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScheduleOrderSchema'\n      responses:\n        '200':\n          description: A JSON representation of a scheduled order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetScheduledOrderSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      summary: Deletes an existing order\n      responses:\n        '204':\n          description: The resource was deleted successfully\n\n  /kitchen/schedule/{schedule_id}/status:\n    parameters:\n      - in: path\n        name: schedule_id\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Returns the status of a scheduled order\n      responses:\n        '200':\n          description: A JSON representation of a scheduled order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleOrderSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /kitchen/schedule/{schedule_id}/cancel:\n    parameters:\n      - in: path\n        name: schedule_id\n        required: true\n        schema:\n          type: string\n    post:\n      summary: Returns the status and details of a scheduled order\n      responses:\n        '200':\n          description: A JSON representation of a scheduled order\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleOrderSchema'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\ncomponents:\n  responses:\n    NotFound:\n      description: The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  schemas:\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n\n    OrderItemSchema:\n      type: object\n      additionalProperties: false\n      required:\n        - product\n        - quantity\n        - size\n      properties:\n        product:\n          type: string\n        size:\n          type: string\n          enum:\n            - small\n            - medium\n            - big\n        quantity:\n          type: integer\n          minimum: 1\n\n    ScheduleOrderSchema:\n      type: object\n      additionalProperties: false\n      required:\n        - order\n      properties:\n        order:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderItemSchema'\n\n    GetScheduledOrderSchema:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - order\n        - scheduled\n        - status\n      properties:\n        id:\n          type: string\n          format: uuid\n        scheduled:\n          type: integer\n          description: Date in the form of UNIX timestmap\n        status:\n          type: string\n          enum:\n            - pending\n            - progress\n            - cancelled\n            - finished\n        order:\n          type: array\n          items:\n            $ref: '#/components/schemas/OrderItemSchema'\n",
			"canonicalURL": "/github.com/abunuwas/microservice-apis@5ad4e831a646cc47470c2cc2fd01fcc67c010779/-/blob/ch11/orders/kitchen.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/abunuwas/microservice-apis/blob/5ad4e831a646cc47470c2cc2fd01fcc67c010779/ch11/orders/kitchen.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}