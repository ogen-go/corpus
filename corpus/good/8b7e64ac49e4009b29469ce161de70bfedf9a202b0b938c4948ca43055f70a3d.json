{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/kusk-gateway"
		},
		"file": {
			"name": "kusk-backend-api.yaml",
			"size": 0,
			"path": "examples/todomvc/kusk-backend-api.yaml",
			"byteSize": 8668,
			"content": "apiVersion: gateway.kusk.io/v1alpha1\nkind: API\nmetadata:\n  name: todo\nspec:\n  # service name and port should be specified inside x-kusk annotation\n  spec: |\n    openapi: 3.0.0\n    info:\n      title: Todo-Backend API\n      version: 1.0.0\n    x-kusk:\n      cors:\n        origins:\n          - '*'\n        methods:\n          - POST\n          - PATCH\n          - DELETE\n          - PUT\n          - GET\n          - OPTIONS\n        headers:\n          - Content-Type\n        credentials: true\n        max_age: 86200\n      upstream:\n        service:\n          namespace: default\n          name: todo-backend\n          port: 3000\n      path:\n        prefix: /\n    paths:\n      /todos/{id}:\n        get:\n          responses:\n            '200':\n              description: ''\n              content:\n                application/json:\n                  schema:\n                    type: object\n                    properties:\n                      title:\n                        type: string\n                        description: Description of what to do\n                      completed:\n                        type: boolean\n                      order:\n                        type: integer\n                        format: int32\n                      url:\n                        type: string\n                    required:\n                      - title\n                      - completed\n                      - order\n                      - url\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Shows a single Todo\n          parameters:\n            - name: id\n              in: path\n              schema:\n                type: integer\n              required: true\n          tags:\n            - Todo\n        delete:\n          responses:\n            '200':\n              description: ''\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Deletes this Todo\n          parameters:\n            - name: id\n              in: path\n              schema:\n                type: integer\n              required: true\n          tags:\n            - Todo\n        patch:\n          x-kusk:\n            validation:\n              request:\n                enabled: true\n          responses:\n            '200':\n              description: ''\n              content:\n                application/json:\n                  schema:\n                    type: object\n                    properties:\n                      title:\n                        type: string\n                        description: Description of what to do\n                      completed:\n                        type: boolean\n                      order:\n                        type: integer\n                        format: int32\n                      url:\n                        type: string\n                    required:\n                      - title\n                      - completed\n                      - order\n                      - url\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Modifies this Todo\n          parameters:\n            - name: id\n              in: path\n              schema:\n                type: integer\n              required: true\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  type: object\n                  # if you want strict validation of request bodies, please enable this option in your OpenAPI file\n                  additionalProperties: false\n                  properties:\n                    title:\n                      type: string\n                    completed:\n                      type: boolean\n                    order:\n                      type: integer\n                      format: int32\n          tags:\n            - Todo\n      /todos:\n        get:\n          responses:\n            '200':\n              description: The full list of todos\n              content:\n                application/json:\n                  schema:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        title:\n                          type: string\n                          description: Description of what to do\n                        completed:\n                          type: boolean\n                        order:\n                          type: integer\n                          format: int32\n                        url:\n                          type: string\n                      required:\n                        - title\n                        - completed\n                        - order\n                        - url\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Lists all Todos\n          description: The returned Todos are ordered by 'order' and then 'title'\n          tags:\n            - Todo\n        post:\n          responses:\n            '201':\n              description: ''\n              content:\n                application/json:\n                  schema:\n                    type: object\n                    properties:\n                      title:\n                        type: string\n                        description: Description of what to do\n                      completed:\n                        type: boolean\n                      order:\n                        type: integer\n                        format: int32\n                      url:\n                        type: string\n                    required:\n                      - title\n                      - completed\n                      - order\n                      - url\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Creates a new, uncompleted Todo\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    title:\n                      type: string\n                      description: Description of what to do\n                    order:\n                      type: integer\n                      format: int32\n                  required:\n                    - title\n          tags:\n            - Todo\n        delete:\n          responses:\n            '200':\n              description: ''\n            '400':\n              description: Client error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n            '500':\n              description: Server error\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/endpoints.Errors'\n          summary: Deletes all Todos\n          tags:\n            - Todo\n    components:\n      schemas:\n        endpoints.Errors:\n          type: array\n          items:\n            type: string\n",
			"canonicalURL": "/github.com/kubeshop/kusk-gateway@71d8a6c204f833b6e837095bdd2bb340290906af/-/blob/examples/todomvc/kusk-backend-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kubeshop/kusk-gateway/blob/71d8a6c204f833b6e837095bdd2bb340290906af/examples/todomvc/kusk-backend-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}