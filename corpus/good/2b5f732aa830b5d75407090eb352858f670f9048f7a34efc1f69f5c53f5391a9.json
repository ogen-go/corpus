{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-sql-DatabaseSchema-2018-06-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-sql-DatabaseSchema-2018-06-01-preview-swagger.yaml",
			"byteSize": 24087,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Azure SQL Database management API provides a RESTful set of web APIs\n    that interact with Azure SQL Database services to manage your databases. The\n    API enables users to create, retrieve, update, and delete databases,\n    servers, and other entities.\n  title: SqlManagementClient\n  version: 2018-06-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2018-06-01-preview/DatabaseSchema.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: sql-DatabaseSchema\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas\":\n    get:\n      description: List database schemas\n      operationId: DatabaseSchemas_ListByDatabase\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: An OData filter expression that filters elements in the collection.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database schemas.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSchemaListResult\"\n              examples:\n                List database schemas:\n                  $ref: \"#/components/examples/List_database_schemas\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseSchemas\n      x-ms-odata: \"#/components/schemas/DatabaseSchema\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}\":\n    get:\n      description: Get database schema\n      operationId: DatabaseSchemas_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: The name of the schema.\n          in: path\n          name: schemaName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database schema:\n              value: dbo\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database schema.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSchema\"\n              examples:\n                Get database schema:\n                  $ref: \"#/components/examples/Get_database_schema\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseSchemas\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables\":\n    get:\n      description: List database tables\n      operationId: DatabaseTables_ListBySchema\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: The name of the schema.\n          in: path\n          name: schemaName\n          required: true\n          schema:\n            type: string\n          examples:\n            List  database tables:\n              value: dbo\n        - description: An OData filter expression that filters elements in the collection.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database tables.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseTableListResult\"\n              examples:\n                List  database tables:\n                  $ref: \"#/components/examples/List_database_tables\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseTables\n      x-ms-odata: \"#/components/schemas/DatabaseTable\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}\":\n    get:\n      description: Get database table\n      operationId: DatabaseTables_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: The name of the schema.\n          in: path\n          name: schemaName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database table:\n              value: dbo\n        - description: The name of the table.\n          in: path\n          name: tableName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database table:\n              value: table1\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseTable\"\n              examples:\n                Get database table:\n                  $ref: \"#/components/examples/Get_database_table\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseTables\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns\":\n    get:\n      description: List database columns\n      operationId: DatabaseColumns_ListByTable\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: The name of the schema.\n          in: path\n          name: schemaName\n          required: true\n          schema:\n            type: string\n          examples:\n            List database columns:\n              value: dbo\n        - description: The name of the table.\n          in: path\n          name: tableName\n          required: true\n          schema:\n            type: string\n          examples:\n            List database columns:\n              value: table1\n        - description: An OData filter expression that filters elements in the collection.\n          in: query\n          name: $filter\n          required: false\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database columns.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseColumnListResult\"\n              examples:\n                List database columns:\n                  $ref: \"#/components/examples/List_database_columns\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseColumns\n      x-ms-odata: \"#/components/schemas/DatabaseColumn\"\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}\":\n    get:\n      description: Get database column\n      operationId: DatabaseColumns_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - description: The name of the schema.\n          in: path\n          name: schemaName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database column:\n              value: dbo\n        - description: The name of the table.\n          in: path\n          name: tableName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database column:\n              value: table1\n        - description: The name of the column.\n          in: path\n          name: columnName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get database column:\n              value: column1\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database column.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseColumn\"\n              examples:\n                Get database column:\n                  $ref: \"#/components/examples/Get_database_column\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 InvalidDatabaseSchema - Schema is missing in database.\n\n             * 404 InvalidDatabaseTable - Table is missing in database.\n\n             * 404 InvalidDatabaseColumn - Column is missing in table.\n      tags:\n        - DatabaseColumns\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    List_database_schemas:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo\n            name: dbo\n            type: Microsoft.Sql/servers/databases/schemas\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/schema2\n            name: schema2\n            type: Microsoft.Sql/servers/databases/schemas\n    Get_database_schema:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo\n        name: dbo\n        type: Microsoft.Sql/servers/databases/schemas\n    List_database_tables:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1\n            name: table1\n            type: Microsoft.Sql/servers/databases/schemas/tables\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table2\n            name: table2\n            type: Microsoft.Sql/servers/databases/schemas/tables\n    Get_database_table:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1\n        name: table1\n        type: Microsoft.Sql/servers/databases/schemas/tables\n    List_database_columns:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/col1\n            name: col1\n            properties:\n              columnType: nvarchar\n            type: Microsoft.Sql/servers/databases/schemas/tables/columns\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/col2\n            name: col2\n            properties:\n              columnType: bit\n            type: Microsoft.Sql/servers/databases/schemas/tables/columns\n    Get_database_column:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/myRG/providers/Microsoft.Sql/servers/serverName/databases/myDatabase/schemas/dbo/tables/table1/columns/column1\n        name: column1\n        properties:\n          columnType: bit\n        type: Microsoft.Sql/servers/databases/schemas/tables/columns\n  parameters:\n    ApiVersionParameter:\n      description: The API version to use for the request.\n      in: query\n      name: api-version\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        List database schemas:\n          value: 2018-06-01-preview\n        Get database schema:\n          value: 2018-06-01-preview\n        List  database tables:\n          value: 2018-06-01-preview\n        Get database table:\n          value: 2018-06-01-preview\n        List database columns:\n          value: 2018-06-01-preview\n        Get database column:\n          value: 2018-06-01-preview\n    DatabaseNameParameter:\n      description: The name of the database.\n      in: path\n      name: databaseName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List database schemas:\n          value: myDatabase\n        Get database schema:\n          value: myDatabase\n        List  database tables:\n          value: myDatabase\n        Get database table:\n          value: myDatabase\n        List database columns:\n          value: myDatabase\n        Get database column:\n          value: myDatabase\n    ResourceGroupParameter:\n      description: The name of the resource group that contains the resource. You can\n        obtain this value from the Azure Resource Manager API or the portal.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List database schemas:\n          value: myRG\n        Get database schema:\n          value: myRG\n        List  database tables:\n          value: myRG\n        Get database table:\n          value: myRG\n        List database columns:\n          value: myRG\n        Get database column:\n          value: myRG\n    ServerNameParameter:\n      description: The name of the server.\n      in: path\n      name: serverName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List database schemas:\n          value: serverName\n        Get database schema:\n          value: serverName\n        List  database tables:\n          value: serverName\n        Get database table:\n          value: serverName\n        List database columns:\n          value: serverName\n        Get database column:\n          value: serverName\n    SqlVirtualMachineContainerNameParameter:\n      description: The name of the SqlVirtualMachineContainer.\n      in: path\n      name: sqlVirtualMachineContainerName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SqlVirtualMachineInstanceNameParameter:\n      description: The name of the SqlVirtualMachineInstance.\n      in: path\n      name: sqlVirtualMachineInstanceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: The subscription ID that identifies an Azure subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        List database schemas:\n          value: 00000000-1111-2222-3333-444444444444\n        Get database schema:\n          value: 00000000-1111-2222-3333-444444444444\n        List  database tables:\n          value: 00000000-1111-2222-3333-444444444444\n        Get database table:\n          value: 00000000-1111-2222-3333-444444444444\n        List database columns:\n          value: 00000000-1111-2222-3333-444444444444\n        Get database column:\n          value: 00000000-1111-2222-3333-444444444444\n    VirtualClusterNameParameter:\n      description: The name of the virtual cluster.\n      in: path\n      name: virtualClusterName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    DatabaseColumn:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: A database column resource.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/DatabaseColumnProperties\"\n      type: object\n    DatabaseColumnListResult:\n      description: A list of database columns.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/DatabaseColumn\"\n          readOnly: true\n          type: array\n      type: object\n    DatabaseColumnProperties:\n      description: Database column properties.\n      properties:\n        columnType:\n          description: The column data type.\n          enum:\n            - image\n            - text\n            - uniqueidentifier\n            - date\n            - time\n            - datetime2\n            - datetimeoffset\n            - tinyint\n            - smallint\n            - int\n            - smalldatetime\n            - real\n            - money\n            - datetime\n            - float\n            - sql_variant\n            - ntext\n            - bit\n            - decimal\n            - numeric\n            - smallmoney\n            - bigint\n            - hierarchyid\n            - geometry\n            - geography\n            - varbinary\n            - varchar\n            - binary\n            - char\n            - timestamp\n            - nvarchar\n            - nchar\n            - xml\n            - sysname\n          type: string\n          x-ms-enum:\n            modelAsString: true\n            name: ColumnDataType\n      type: object\n    DatabaseSchema:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: A database schema resource.\n      type: object\n    DatabaseSchemaListResult:\n      description: A list of database schemas.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/DatabaseSchema\"\n          readOnly: true\n          type: array\n      type: object\n    DatabaseTable:\n      allOf:\n        - $ref: \"#/components/schemas/ProxyResource\"\n      description: A database table resource.\n      type: object\n    DatabaseTableListResult:\n      description: A list of database tables.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/DatabaseTable\"\n          readOnly: true\n          type: array\n      type: object\n    ProxyResource:\n      allOf:\n        - $ref: \"#/components/schemas/Resource\"\n      description: ARM proxy resource.\n      properties: {}\n      type: object\n    Resource:\n      description: ARM resource.\n      properties:\n        id:\n          description: Resource ID.\n          readOnly: true\n          type: string\n        name:\n          description: Resource name.\n          readOnly: true\n          type: string\n        type:\n          description: Resource type.\n          readOnly: true\n          type: string\n      type: object\n      x-ms-azure-resource: true\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-sql-DatabaseSchema-2018-06-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-sql-DatabaseSchema-2018-06-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}