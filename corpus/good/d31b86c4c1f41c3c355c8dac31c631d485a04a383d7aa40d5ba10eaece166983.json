{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/unitn-software-engineering/01-Javascript"
		},
		"file": {
			"name": "assignments.openAPI3.yaml",
			"size": 0,
			"path": "ExampleProjects/AssignmentsAPI/assignments.openAPI3.yaml",
			"byteSize": 7279,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.0'\n  title: \"Assignments OpenAPI 3.0\"\n  description: API for managing exams.\n  license:\n    name: MIT\nservers:\n  - url: http://assignments-api.herokuapp.com.com/api/v1\n    description: Heroku\n  - url: http://localhost:3000/api/v1\n    description: Localhost\npaths:\n  /users:\n    post:\n      description: \u003e-\n        Creates a new user in the system.\n      summary: Create a new user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - username\n                - email\n              properties:\n                username:\n                  type: string\n                  description: 'Username of the user'\n                email:\n                  type: string\n                  description: 'Email address of the user'\n      responses:\n        '201':\n          description: 'User created. Link in the Location header'\n          headers:\n            'Location':\n              schema:\n                type: string\n              description: Link to the newly created user.\n\n  /users/{id}:\n    get:\n      description: \u003e-\n        Gets information about a specific user, identified by an ID\n      summary: Get a user\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: 'ID of the requested user'\n      responses:\n        '200':\n          description: 'The user corresponding to the input ID'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n  /assignments:\n    post:\n      description: \u003e-\n        Creates an assignment.\n      summary: Create an assignment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - deadline\n                - status\n              properties:\n                name:\n                  type: string\n                  description: 'Name for the assignment'\n                deadline:\n                  type: string\n                  description: 'Datetime of the deadline in ISO 8601 format'\n                status:\n                  type: string\n                  enum: [open, closed]\n                  description: 'Defined whether the assignment is open for replies or not'\n      responses:\n        '201':\n          description: 'The created assignment'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Assignment'\n    get:\n      description: \u003e-\n        Gets the list of assignments. Optionally, you can pass the ID of the user as a parameter.\n        If the passed user is a teacher, then the list represents assignments that the teacher has created;\n        if it is a student, then the list represents the assignments they have to complete.\n      summary: Get assignments\n      responses:\n        '200':\n          description: 'Collection of assignments'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Assignment'\n      parameters:\n        - in: query\n          name: userId\n          schema:\n            type: integer\n          description: 'Optional parameter. The user ID is used to restrict the results of the request'\n  /assignments/{id}:\n    get:\n      description: \u003e-\n        Gets information about a specific assignment\n      summary: Get an assignment\n      responses:\n        '200':\n          description: 'The assignment corresponding to the input ID'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Assignment'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n          description: 'ID of the requested assignment'\n    put:\n      description: \u003e-\n        Updates a specific assignment, changing properties like its name, the status (open/closed),\n        and the list of tasks. In the request, send only the fields that you want to change.\n      summary: Update assignment\n      responses:\n        '200':\n          description: 'The updated assignment'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Assignment'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n          description: 'ID of the assignment to modify'\n    delete:\n      description: \u003e-\n        Deletes an assignment.\n      summary: Delete an assignment\n      responses:\n        '204':\n          description: ''\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: integer\n          required: true\n          description: 'ID of the assignment to delete'\n  /marks:\n    post:\n      description: \u003e-\n        Gives a mark for an assignment made by a student.\n      summary: Give a mark\n      responses:\n        '201':\n          description: ''\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Mark'\n    get:\n      description: \u003e-\n        Gets marks. It is possible to get the marks for all the assignments a user has taken,\n        or the mark for a specific exam.\n      summary: Get marks\n      responses:\n        '200':\n          description: 'A collection of marks'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n      parameters:\n        - in: query\n          name: userId\n          schema:\n            type: integer\n        - in: query\n          name: assignmentId\n          schema:\n            type: integer\n          \ncomponents:\n  schemas:\n    User:\n      type: object\n      required:\n        - id\n        - username\n        - email\n      properties:\n        id:\n          type: integer\n          description: 'ID of the user'\n        username:\n          type: string\n          description: 'Username of the user'\n        email:\n          type: string\n          description: 'Email address of the user'\n    Assignment:\n      type: object\n      required:\n        - name\n        - deadline\n        - status\n      properties:\n        name:\n          type: string\n          description: 'Name for the assignment'\n        deadline:\n          type: string\n          description: 'Datetime of the deadline in ISO 8601 format'\n        status:\n          type: string\n          enum: [open, closed]\n          description: 'Defined whether the assignment is open for replies or not'\n    Mark:\n      type: object\n      required:\n      - userId\n      - assignmentId\n      - mark\n      properties:\n        userId:\n          type: integer\n          description: 'ID of the user the mark has been given to'\n        assignmentId:\n          type: integer\n          description: 'ID of the assignment'\n        mark:\n          type: string\n          description: 'The given mark value'\n        text:\n          type: string\n          description: 'Comment associated to the mark'",
			"canonicalURL": "/github.com/unitn-software-engineering/01-Javascript@4068b7b35b759e9541d4dfbae94fbea4fe014b32/-/blob/ExampleProjects/AssignmentsAPI/assignments.openAPI3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/unitn-software-engineering/01-Javascript/blob/4068b7b35b759e9541d4dfbae94fbea4fe014b32/ExampleProjects/AssignmentsAPI/assignments.openAPI3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}