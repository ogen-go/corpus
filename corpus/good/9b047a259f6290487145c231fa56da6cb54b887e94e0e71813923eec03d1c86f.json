{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-rds-data-2018-08-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-rds-data-2018-08-01-swagger.yaml",
			"byteSize": 40446,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2018-08-01\n  x-release: v4\n  title: AWS RDS DataService\n  description: \u003cp\u003e\u003cfullname\u003eAmazon RDS Data Service\u003c/fullname\u003e \u003cp\u003eAmazon RDS provides an\n    HTTP endpoint to run SQL statements on an Amazon Aurora Serverless DB\n    cluster. To run these statements, you work with the Data Service API.\u003c/p\u003e\n    \u003cp\u003eFor more information about the Data Service API, see \u003ca\n    href=\"https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html\"\u003eUsing\n    the Data API for Aurora Serverless\u003c/a\u003e in the \u003ci\u003eAmazon Aurora User\n    Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you have questions or comments related to the\n    Data API, send email to \u003ca\n    href=\"mailto:Rds-data-api-feedback@amazon.com\"\u003eRds-data-api-feedback@amazon.com\u003c/a\u003e.\u003c/p\u003e\n    \u003c/note\u003e\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: rds-data\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-data-2018-08-01.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/rds-data/\nsecurity:\n  - hmac: []\npaths:\n  /BatchExecute:\n    post:\n      operationId: BatchExecuteStatement\n      description: \u003cp\u003eRuns a batch SQL statement over an array of data.\u003c/p\u003e \u003cp\u003eYou can run\n        bulk update and insert operations for multiple records using a DML\n        statement with different parameter sets. Bulk operations can provide a\n        significant performance improvement over individual insert and update\n        operations.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf a call isn't part of a transaction\n        because it doesn't include the \u003ccode\u003etransactionID\u003c/code\u003e parameter,\n        changes that result from the call are committed automatically.\u003c/p\u003e\n        \u003c/important\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchExecuteStatementResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: StatementTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementTimeoutException\"\n        \"482\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"483\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"484\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceArn\n                - secretArn\n                - sql\n              properties:\n                database:\n                  description: The name of the database.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                parameterSets:\n                  description: The parameter set for the batch operation.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/SqlParametersList\"\n                resourceArn:\n                  description: The Amazon Resource Name (ARN) of the Aurora Serverless DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                schema:\n                  description: The name of the database schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                secretArn:\n                  description: The name or ARN of the secret that enables access to the DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                sql:\n                  description: The SQL statement to run.\n                  type: string\n                  minLength: 0\n                  maxLength: 65536\n                transactionId:\n                  description: \u003cp\u003eThe identifier of a transaction that was started by using\n                    the \u003ccode\u003eBeginTransaction\u003c/code\u003e operation. Specify the\n                    transaction ID of the transaction that you want to include\n                    the SQL statement in.\u003c/p\u003e \u003cp\u003eIf the SQL statement is not\n                    part of a transaction, don't set this parameter.\u003c/p\u003e\n                  type: string\n                  minLength: 0\n                  maxLength: 192\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /BeginTransaction:\n    post:\n      operationId: BeginTransaction\n      description: \u003cp\u003eStarts a SQL transaction.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e \u0026lt;important\u0026gt;\n        \u0026lt;p\u0026gt;A transaction can run for a maximum of 24 hours. A transaction\n        is terminated and rolled back automatically after 24 hours.\u0026lt;/p\u0026gt;\n        \u0026lt;p\u0026gt;A transaction times out if no calls use its transaction ID in\n        three minutes. If a transaction times out before it's committed, it's\n        rolled back automatically.\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;DDL statements inside a\n        transaction cause an implicit commit. We recommend that you run each DDL\n        statement in a separate \u0026lt;code\u0026gt;ExecuteStatement\u0026lt;/code\u0026gt; call\n        with \u0026lt;code\u0026gt;continueAfterTimeout\u0026lt;/code\u0026gt; enabled.\u0026lt;/p\u0026gt;\n        \u0026lt;/important\u0026gt; \u003c/code\u003e\u003c/pre\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BeginTransactionResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: StatementTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementTimeoutException\"\n        \"482\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"483\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"484\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceArn\n                - secretArn\n              properties:\n                database:\n                  description: The name of the database.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                resourceArn:\n                  description: The Amazon Resource Name (ARN) of the Aurora Serverless DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                schema:\n                  description: The name of the database schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                secretArn:\n                  description: The name or ARN of the secret that enables access to the DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /CommitTransaction:\n    post:\n      operationId: CommitTransaction\n      description: Ends a SQL transaction started with the \u003ccode\u003eBeginTransaction\u003c/code\u003e\n        operation and commits the changes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CommitTransactionResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"482\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"483\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n        \"484\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceArn\n                - secretArn\n                - transactionId\n              properties:\n                resourceArn:\n                  description: The Amazon Resource Name (ARN) of the Aurora Serverless DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                secretArn:\n                  description: The name or ARN of the secret that enables access to the DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                transactionId:\n                  description: The identifier of the transaction to end and commit.\n                  type: string\n                  minLength: 0\n                  maxLength: 192\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /ExecuteSql:\n    post:\n      deprecated: true\n      operationId: ExecuteSql\n      description: \u003cp\u003eRuns one or more SQL statements.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eThis operation is\n        deprecated. Use the \u003ccode\u003eBatchExecuteStatement\u003c/code\u003e or\n        \u003ccode\u003eExecuteStatement\u003c/code\u003e operation.\u003c/p\u003e \u003c/important\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExecuteSqlResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"482\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"483\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - awsSecretStoreArn\n                - dbClusterOrInstanceArn\n                - sqlStatements\n              properties:\n                awsSecretStoreArn:\n                  description: The Amazon Resource Name (ARN) of the secret that enables\n                    access to the DB cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                database:\n                  description: The name of the database.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                dbClusterOrInstanceArn:\n                  description: The ARN of the Aurora Serverless DB cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                schema:\n                  description: The name of the database schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                sqlStatements:\n                  description: \u003cp\u003eOne or more SQL statements to run on the DB cluster.\u003c/p\u003e\n                    \u003cp\u003eYou can separate SQL statements from each other with a\n                    semicolon (;). Any valid SQL statement is permitted,\n                    including data definition, data manipulation, and commit\n                    statements. \u003c/p\u003e\n                  type: string\n                  minLength: 0\n                  maxLength: 65536\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /Execute:\n    post:\n      operationId: ExecuteStatement\n      description: \u003cp\u003eRuns a SQL statement against a database.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf a call\n        isn't part of a transaction because it doesn't include the\n        \u003ccode\u003etransactionID\u003c/code\u003e parameter, changes that result from the call\n        are committed automatically.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe response size limit\n        is 1 MB or 1,000 records. If the call returns more than 1 MB of response\n        data or over 1,000 records, the call is terminated.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExecuteStatementResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: StatementTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementTimeoutException\"\n        \"482\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"483\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"484\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceArn\n                - secretArn\n                - sql\n              properties:\n                continueAfterTimeout:\n                  description: \u003cp\u003eA value that indicates whether to continue running the\n                    statement after the call times out. By default, the\n                    statement stops running when the call times out.\u003c/p\u003e\n                    \u003cimportant\u003e \u003cp\u003eFor DDL statements, we recommend continuing\n                    to run the statement after the call times out. When a DDL\n                    statement terminates before it is finished running, it can\n                    result in errors and possibly corrupted data structures.\u003c/p\u003e\n                    \u003c/important\u003e\n                  type: boolean\n                database:\n                  description: The name of the database.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                includeResultMetadata:\n                  description: A value that indicates whether to include metadata in the\n                    results.\n                  type: boolean\n                parameters:\n                  description: The parameters for the SQL statement.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/SqlParameter\"\n                resourceArn:\n                  description: The Amazon Resource Name (ARN) of the Aurora Serverless DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                resultSetOptions:\n                  description: Options that control how the result set is returned.\n                  type: object\n                  properties:\n                    decimalReturnType:\n                      $ref: \"#/components/schemas/DecimalReturnType\"\n                schema:\n                  description: The name of the database schema.\n                  type: string\n                  minLength: 0\n                  maxLength: 64\n                secretArn:\n                  description: The name or ARN of the secret that enables access to the DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                sql:\n                  description: The SQL statement to run.\n                  type: string\n                  minLength: 0\n                  maxLength: 65536\n                transactionId:\n                  description: \u003cp\u003eThe identifier of a transaction that was started by using\n                    the \u003ccode\u003eBeginTransaction\u003c/code\u003e operation. Specify the\n                    transaction ID of the transaction that you want to include\n                    the SQL statement in.\u003c/p\u003e \u003cp\u003eIf the SQL statement is not\n                    part of a transaction, don't set this parameter.\u003c/p\u003e\n                  type: string\n                  minLength: 0\n                  maxLength: 192\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /RollbackTransaction:\n    post:\n      operationId: RollbackTransaction\n      description: Performs a rollback of a transaction. Rolling back a transaction cancels\n        its changes.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RollbackTransactionResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerErrorException\"\n        \"482\":\n          description: ForbiddenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ForbiddenException\"\n        \"483\":\n          description: ServiceUnavailableError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableError\"\n        \"484\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - resourceArn\n                - secretArn\n                - transactionId\n              properties:\n                resourceArn:\n                  description: The Amazon Resource Name (ARN) of the Aurora Serverless DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                secretArn:\n                  description: The name or ARN of the secret that enables access to the DB\n                    cluster.\n                  type: string\n                  minLength: 11\n                  maxLength: 100\n                transactionId:\n                  description: The identifier of the transaction to roll back.\n                  type: string\n                  minLength: 0\n                  maxLength: 192\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://rds-data.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS RDS DataService multi-region endpoint\n  - url: https://rds-data.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS RDS DataService multi-region endpoint\n  - url: http://rds-data.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS RDS DataService endpoint for China (Beijing) and China (Ningxia)\n  - url: https://rds-data.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS RDS DataService endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchExecuteStatementResponse:\n      type: object\n      properties:\n        updateResults:\n          $ref: \"#/components/schemas/UpdateResults\"\n      description: The response elements represent the output of a SQL statement over an\n        array of data.\n    SqlParametersList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SqlParameter\"\n    BadRequestException: {}\n    StatementTimeoutException: {}\n    InternalServerErrorException: {}\n    ForbiddenException: {}\n    ServiceUnavailableError: {}\n    BeginTransactionResponse:\n      type: object\n      properties:\n        transactionId:\n          $ref: \"#/components/schemas/Id\"\n      description: The response elements represent the output of a request to start a SQL\n        transaction.\n    CommitTransactionResponse:\n      type: object\n      properties:\n        transactionStatus:\n          $ref: \"#/components/schemas/TransactionStatus\"\n      description: The response elements represent the output of a commit transaction\n        request.\n    NotFoundException: {}\n    ExecuteSqlResponse:\n      type: object\n      properties:\n        sqlStatementResults:\n          $ref: \"#/components/schemas/SqlStatementResults\"\n      description: The response elements represent the output of a request to run one or\n        more SQL statements.\n    ExecuteStatementResponse:\n      type: object\n      properties:\n        columnMetadata:\n          $ref: \"#/components/schemas/Metadata\"\n        generatedFields:\n          $ref: \"#/components/schemas/FieldList\"\n        numberOfRecordsUpdated:\n          $ref: \"#/components/schemas/RecordsUpdated\"\n        records:\n          $ref: \"#/components/schemas/SqlRecords\"\n      description: The response elements represent the output of a request to run a SQL\n        statement against a database.\n    SqlParameter:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ParameterName\"\n        value:\n          $ref: \"#/components/schemas/Field\"\n      description: A parameter used in a SQL statement.\n    DecimalReturnType:\n      type: string\n      enum:\n        - DOUBLE_OR_LONG\n        - STRING\n    RollbackTransactionResponse:\n      type: object\n      properties:\n        transactionStatus:\n          $ref: \"#/components/schemas/TransactionStatus\"\n      description: The response elements represent the output of a request to perform a\n        rollback of a transaction.\n    Arn:\n      type: string\n      minLength: 11\n      maxLength: 100\n    ArrayValue:\n      type: object\n      properties:\n        arrayValues:\n          $ref: \"#/components/schemas/ArrayOfArray\"\n        booleanValues:\n          $ref: \"#/components/schemas/BooleanArray\"\n        doubleValues:\n          $ref: \"#/components/schemas/DoubleArray\"\n        longValues:\n          $ref: \"#/components/schemas/LongArray\"\n        stringValues:\n          $ref: \"#/components/schemas/StringArray\"\n      description: Contains an array.\n    ArrayOfArray:\n      type: array\n      description: \u003cp\u003eAn array of arrays.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSome array entries can be null.\u003c/p\u003e\n        \u003c/note\u003e\n      items:\n        $ref: \"#/components/schemas/ArrayValue\"\n    BooleanArray:\n      type: array\n      description: \u003cp\u003eAn array of Boolean values.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSome array entries can be\n        null.\u003c/p\u003e \u003c/note\u003e\n      items:\n        $ref: \"#/components/schemas/BoxedBoolean\"\n    DoubleArray:\n      type: array\n      description: \u003cp\u003eAn array of floating point numbers.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSome array entries\n        can be null.\u003c/p\u003e \u003c/note\u003e\n      items:\n        $ref: \"#/components/schemas/BoxedDouble\"\n    LongArray:\n      type: array\n      description: \u003cp\u003eAn array of integers.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSome array entries can be\n        null.\u003c/p\u003e \u003c/note\u003e\n      items:\n        $ref: \"#/components/schemas/BoxedLong\"\n    StringArray:\n      type: array\n      description: \u003cp\u003eAn array of strings.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eSome array entries can be\n        null.\u003c/p\u003e \u003c/note\u003e\n      items:\n        $ref: \"#/components/schemas/String\"\n    Value:\n      type: object\n      properties:\n        arrayValues:\n          $ref: \"#/components/schemas/ArrayValueList\"\n        bigIntValue:\n          $ref: \"#/components/schemas/BoxedLong\"\n        bitValue:\n          $ref: \"#/components/schemas/BoxedBoolean\"\n        blobValue:\n          $ref: \"#/components/schemas/Blob\"\n        doubleValue:\n          $ref: \"#/components/schemas/BoxedDouble\"\n        intValue:\n          $ref: \"#/components/schemas/BoxedInteger\"\n        isNull:\n          $ref: \"#/components/schemas/BoxedBoolean\"\n        realValue:\n          $ref: \"#/components/schemas/BoxedFloat\"\n        stringValue:\n          $ref: \"#/components/schemas/String\"\n        structValue:\n          $ref: \"#/components/schemas/StructValue\"\n      description: \u003cp\u003eContains the value of a column.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e \u0026lt;important\u0026gt;\n        \u0026lt;p\u0026gt;This data type is deprecated.\u0026lt;/p\u0026gt; \u0026lt;/important\u0026gt;\n        \u003c/code\u003e\u003c/pre\u003e\n    ArrayValueList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Value\"\n    DbName:\n      type: string\n      minLength: 0\n      maxLength: 64\n    SqlParameterSets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SqlParametersList\"\n    SqlStatement:\n      type: string\n      minLength: 0\n      maxLength: 65536\n    Id:\n      type: string\n      minLength: 0\n      maxLength: 192\n    BatchExecuteStatementRequest:\n      type: object\n      required:\n        - resourceArn\n        - secretArn\n        - sql\n      properties:\n        database:\n          $ref: \"#/components/schemas/DbName\"\n        parameterSets:\n          $ref: \"#/components/schemas/SqlParameterSets\"\n        resourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        schema:\n          $ref: \"#/components/schemas/DbName\"\n        secretArn:\n          $ref: \"#/components/schemas/Arn\"\n        sql:\n          $ref: \"#/components/schemas/SqlStatement\"\n        transactionId:\n          $ref: \"#/components/schemas/Id\"\n      description: The request parameters represent the input of a SQL statement over an\n        array of data.\n    UpdateResults:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UpdateResult\"\n    BeginTransactionRequest:\n      type: object\n      required:\n        - resourceArn\n        - secretArn\n      properties:\n        database:\n          $ref: \"#/components/schemas/DbName\"\n        resourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        schema:\n          $ref: \"#/components/schemas/DbName\"\n        secretArn:\n          $ref: \"#/components/schemas/Arn\"\n      description: The request parameters represent the input of a request to start a SQL\n        transaction.\n    Blob:\n      type: string\n    Boolean:\n      type: boolean\n    BoxedBoolean:\n      type: boolean\n    BoxedDouble:\n      type: number\n      format: double\n    BoxedFloat:\n      type: number\n      format: float\n    BoxedInteger:\n      type: integer\n    BoxedLong:\n      type: integer\n    Integer:\n      type: integer\n    String:\n      type: string\n    ColumnMetadata:\n      type: object\n      properties:\n        arrayBaseColumnType:\n          $ref: \"#/components/schemas/Integer\"\n        isAutoIncrement:\n          $ref: \"#/components/schemas/Boolean\"\n        isCaseSensitive:\n          $ref: \"#/components/schemas/Boolean\"\n        isCurrency:\n          $ref: \"#/components/schemas/Boolean\"\n        isSigned:\n          $ref: \"#/components/schemas/Boolean\"\n        label:\n          $ref: \"#/components/schemas/String\"\n        name:\n          $ref: \"#/components/schemas/String\"\n        nullable:\n          $ref: \"#/components/schemas/Integer\"\n        precision:\n          $ref: \"#/components/schemas/Integer\"\n        scale:\n          $ref: \"#/components/schemas/Integer\"\n        schemaName:\n          $ref: \"#/components/schemas/String\"\n        tableName:\n          $ref: \"#/components/schemas/String\"\n        type:\n          $ref: \"#/components/schemas/Integer\"\n        typeName:\n          $ref: \"#/components/schemas/String\"\n      description: Contains the metadata for a column.\n    CommitTransactionRequest:\n      type: object\n      required:\n        - resourceArn\n        - secretArn\n        - transactionId\n      properties:\n        resourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        secretArn:\n          $ref: \"#/components/schemas/Arn\"\n        transactionId:\n          $ref: \"#/components/schemas/Id\"\n      description: The request parameters represent the input of a commit transaction\n        request.\n    TransactionStatus:\n      type: string\n      minLength: 0\n      maxLength: 128\n    ExecuteSqlRequest:\n      type: object\n      required:\n        - awsSecretStoreArn\n        - dbClusterOrInstanceArn\n        - sqlStatements\n      properties:\n        awsSecretStoreArn:\n          $ref: \"#/components/schemas/Arn\"\n        database:\n          $ref: \"#/components/schemas/DbName\"\n        dbClusterOrInstanceArn:\n          $ref: \"#/components/schemas/Arn\"\n        schema:\n          $ref: \"#/components/schemas/DbName\"\n        sqlStatements:\n          $ref: \"#/components/schemas/SqlStatement\"\n      description: The request parameters represent the input of a request to run one or\n        more SQL statements.\n    SqlStatementResults:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SqlStatementResult\"\n    ResultSetOptions:\n      type: object\n      properties:\n        decimalReturnType:\n          $ref: \"#/components/schemas/DecimalReturnType\"\n      description: Options that control how the result set is returned.\n    ExecuteStatementRequest:\n      type: object\n      required:\n        - resourceArn\n        - secretArn\n        - sql\n      properties:\n        continueAfterTimeout:\n          $ref: \"#/components/schemas/Boolean\"\n        database:\n          $ref: \"#/components/schemas/DbName\"\n        includeResultMetadata:\n          $ref: \"#/components/schemas/Boolean\"\n        parameters:\n          $ref: \"#/components/schemas/SqlParametersList\"\n        resourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        resultSetOptions:\n          $ref: \"#/components/schemas/ResultSetOptions\"\n        schema:\n          $ref: \"#/components/schemas/DbName\"\n        secretArn:\n          $ref: \"#/components/schemas/Arn\"\n        sql:\n          $ref: \"#/components/schemas/SqlStatement\"\n        transactionId:\n          $ref: \"#/components/schemas/Id\"\n      description: The request parameters represent the input of a request to run a SQL\n        statement against a database.\n    Metadata:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ColumnMetadata\"\n    FieldList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Field\"\n    RecordsUpdated:\n      type: integer\n    SqlRecords:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FieldList\"\n    Field:\n      type: object\n      properties:\n        arrayValue:\n          $ref: \"#/components/schemas/ArrayValue\"\n        blobValue:\n          $ref: \"#/components/schemas/Blob\"\n        booleanValue:\n          $ref: \"#/components/schemas/BoxedBoolean\"\n        doubleValue:\n          $ref: \"#/components/schemas/BoxedDouble\"\n        isNull:\n          $ref: \"#/components/schemas/BoxedBoolean\"\n        longValue:\n          $ref: \"#/components/schemas/BoxedLong\"\n        stringValue:\n          $ref: \"#/components/schemas/String\"\n      description: Contains a value.\n    Long:\n      type: integer\n    ParameterName:\n      type: string\n    Row:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Value\"\n    Record:\n      type: object\n      properties:\n        values:\n          $ref: \"#/components/schemas/Row\"\n      description: A record returned by a call.\n    Records:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Record\"\n    ResultSetMetadata:\n      type: object\n      properties:\n        columnCount:\n          $ref: \"#/components/schemas/Long\"\n        columnMetadata:\n          $ref: \"#/components/schemas/Metadata\"\n      description: The metadata of the result set returned by a SQL statement.\n    ResultFrame:\n      type: object\n      properties:\n        records:\n          $ref: \"#/components/schemas/Records\"\n        resultSetMetadata:\n          $ref: \"#/components/schemas/ResultSetMetadata\"\n      description: The result set returned by a SQL statement.\n    RollbackTransactionRequest:\n      type: object\n      required:\n        - resourceArn\n        - secretArn\n        - transactionId\n      properties:\n        resourceArn:\n          $ref: \"#/components/schemas/Arn\"\n        secretArn:\n          $ref: \"#/components/schemas/Arn\"\n        transactionId:\n          $ref: \"#/components/schemas/Id\"\n      description: The request parameters represent the input of a request to perform a\n        rollback of a transaction.\n    SqlStatementResult:\n      type: object\n      properties:\n        numberOfRecordsUpdated:\n          $ref: \"#/components/schemas/RecordsUpdated\"\n        resultFrame:\n          $ref: \"#/components/schemas/ResultFrame\"\n      description: \u003cp\u003eThe result of a SQL statement.\u003c/p\u003e \u003cpre\u003e\u003ccode\u003e \u0026lt;important\u0026gt;\n        \u0026lt;p\u0026gt;This data type is deprecated.\u0026lt;/p\u0026gt; \u0026lt;/important\u0026gt;\n        \u003c/code\u003e\u003c/pre\u003e\n    StructValue:\n      type: object\n      properties:\n        attributes:\n          $ref: \"#/components/schemas/ArrayValueList\"\n      description: A structure value returned by a call.\n    UpdateResult:\n      type: object\n      properties:\n        generatedFields:\n          $ref: \"#/components/schemas/FieldList\"\n      description: The response elements represent the results of an update.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-rds-data-2018-08-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-rds-data-2018-08-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}