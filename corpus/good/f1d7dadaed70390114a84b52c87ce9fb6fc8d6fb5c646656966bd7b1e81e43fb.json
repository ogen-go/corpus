{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-openapi"
		},
		"file": {
			"name": "StoredValueService-v46.yaml",
			"size": 0,
			"path": "yaml/StoredValueService-v46.yaml",
			"byteSize": 38430,
			"content": "openapi: 3.1.0\nservers:\n- url: https://pal-test.adyen.com/pal/servlet/StoredValue/v46\ninfo:\n  version: '46'\n  x-publicVersion: true\n  title: Adyen Stored Value API\n  description: A set of API endpoints to manage stored value products.\n  x-timestamp: '2022-05-03T09:24:07Z'\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  contact:\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    email: developer-experience@adyen.com\nx-groups:\n- General\ntags:\n- name: General\npaths:\n  /changeStatus:\n    post:\n      tags:\n      - General\n      summary: Changes the status of the payment method.\n      description: Changes the status of the provided payment method to the specified\n        status.\n      operationId: post-changeStatus\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueStatusChangeRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueStatusChangeResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /checkBalance:\n    post:\n      tags:\n      - General\n      summary: Checks the balance.\n      description: Checks the balance of the provided payment method.\n      operationId: post-checkBalance\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueBalanceCheckRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueBalanceCheckResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /issue:\n    post:\n      tags:\n      - General\n      summary: Issues a new card.\n      description: Issues a new card of the given payment method.\n      operationId: post-issue\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueIssueRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueIssueResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /load:\n    post:\n      tags:\n      - General\n      summary: Loads the payment method.\n      description: Loads the payment method with the specified funds.\n      operationId: post-load\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueLoadRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueLoadResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /mergeBalance:\n    post:\n      tags:\n      - General\n      summary: Merge the balance of two cards.\n      description: Increases the balance of the paymentmethod by the full amount left\n        on the source paymentmethod\n      operationId: post-mergeBalance\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueBalanceMergeRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueBalanceMergeResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\n  /voidTransaction:\n    post:\n      tags:\n      - General\n      summary: Voids a transaction.\n      description: Voids the referenced stored value transaction.\n      operationId: post-voidTransaction\n      x-groupName: General\n      x-sortIndex: 0\n      security:\n      - BasicAuth: []\n      - ApiKeyAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoredValueVoidRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StoredValueVoidResponse'\n          description: OK - the request has succeeded.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Bad Request - a problem reading or understanding the request.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Unauthorized - authentication required.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Forbidden - insufficient permissions to process the request.\n        '500':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceError'\n          description: Internal Server Error - the server could not process the request.\ncomponents:\n  schemas:\n    Amount:\n      properties:\n        currency:\n          description: The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes).\n          maxLength: 3\n          minLength: 3\n          type: string\n        value:\n          description: The amount of the transaction, in [minor units](https://docs.adyen.com/development-resources/currency-codes).\n          format: int64\n          type: integer\n      required:\n      - value\n      - currency\n    ServiceError:\n      properties:\n        additionalData:\n          x-addedInVersion: '46'\n          additionalProperties:\n            type: string\n          description: 'Contains additional information about the payment. Some data\n            fields are included only if you select them first: Go to **Customer Area**\n            \u003e **Account** \u003e **API URLs**.'\n          type: object\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    StoredValueBalanceCheckRequest:\n      properties:\n        amount:\n          description: The amount information for the transaction.\n          $ref: '#/components/schemas/Amount'\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        recurringDetailReference:\n          type: string\n        reference:\n          description: 'The reference to uniquely identify a payment. This reference\n            is used in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate\n            them with hyphens (\"-\").\n\n            Maximum length: 80 characters.'\n          type: string\n        shopperInteraction:\n          description: 'Specifies the sales channel, through which the shopper gives\n            their card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by\n            default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online).\n            For better authorisation rates, we recommend sending the card security\n            code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the\n            cardholder is known to the merchant (returning customer). If the shopper\n            is present (online), you can supply also the CSC to improve authorisation\n            (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper\n            is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present\n            to make a payment using a secure payment terminal.'\n          enum:\n          - Ecommerce\n          - ContAuth\n          - Moto\n          - POS\n          type: string\n        shopperReference:\n          type: string\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n      - merchantAccount\n      - reference\n      - paymentMethod\n    StoredValueBalanceCheckResponse:\n      properties:\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n    StoredValueBalanceMergeRequest:\n      properties:\n        amount:\n          description: The amount information for the transaction.\n          $ref: '#/components/schemas/Amount'\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        recurringDetailReference:\n          type: string\n        reference:\n          description: 'The reference to uniquely identify a payment. This reference\n            is used in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate\n            them with hyphens (\"-\").\n\n            Maximum length: 80 characters.'\n          type: string\n        shopperInteraction:\n          description: 'Specifies the sales channel, through which the shopper gives\n            their card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by\n            default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online).\n            For better authorisation rates, we recommend sending the card security\n            code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the\n            cardholder is known to the merchant (returning customer). If the shopper\n            is present (online), you can supply also the CSC to improve authorisation\n            (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper\n            is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present\n            to make a payment using a secure payment terminal.'\n          enum:\n          - Ecommerce\n          - ContAuth\n          - Moto\n          - POS\n          type: string\n        shopperReference:\n          type: string\n        sourcePaymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the source payment method and\n            its specific information if available. Note that type should not be included\n            since it is inferred from the (target) payment method\n          type: object\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n      - merchantAccount\n      - reference\n      - paymentMethod\n      - sourcePaymentMethod\n    StoredValueBalanceMergeResponse:\n      properties:\n        authCode:\n          description: 'Authorisation code:\n\n            * When the payment is authorised, this field holds the authorisation code\n            for the payment.\n\n            * When the payment is not authorised, this field is empty.'\n          type: string\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n    StoredValueIssueRequest:\n      properties:\n        amount:\n          description: The amount information for the transaction.\n          $ref: '#/components/schemas/Amount'\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        recurringDetailReference:\n          type: string\n        reference:\n          description: 'The reference to uniquely identify a payment. This reference\n            is used in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate\n            them with hyphens (\"-\").\n\n            Maximum length: 80 characters.'\n          type: string\n        shopperInteraction:\n          description: 'Specifies the sales channel, through which the shopper gives\n            their card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by\n            default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online).\n            For better authorisation rates, we recommend sending the card security\n            code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the\n            cardholder is known to the merchant (returning customer). If the shopper\n            is present (online), you can supply also the CSC to improve authorisation\n            (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper\n            is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present\n            to make a payment using a secure payment terminal.'\n          enum:\n          - Ecommerce\n          - ContAuth\n          - Moto\n          - POS\n          type: string\n        shopperReference:\n          type: string\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n      - merchantAccount\n      - reference\n      - paymentMethod\n    StoredValueIssueResponse:\n      properties:\n        authCode:\n          description: 'Authorisation code:\n\n            * When the payment is authorised, this field holds the authorisation code\n            for the payment.\n\n            * When the payment is not authorised, this field is empty.'\n          type: string\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n    StoredValueLoadRequest:\n      properties:\n        amount:\n          description: The amount information for the transaction.\n          $ref: '#/components/schemas/Amount'\n        loadType:\n          description: The type of load you are trying to do, when absent we default\n            to 'Load'\n          enum:\n          - merchandiseReturn\n          - load\n          type: string\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        recurringDetailReference:\n          type: string\n        reference:\n          description: 'The reference to uniquely identify a payment. This reference\n            is used in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate\n            them with hyphens (\"-\").\n\n            Maximum length: 80 characters.'\n          type: string\n        shopperInteraction:\n          description: 'Specifies the sales channel, through which the shopper gives\n            their card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by\n            default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online).\n            For better authorisation rates, we recommend sending the card security\n            code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the\n            cardholder is known to the merchant (returning customer). If the shopper\n            is present (online), you can supply also the CSC to improve authorisation\n            (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper\n            is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present\n            to make a payment using a secure payment terminal.'\n          enum:\n          - Ecommerce\n          - ContAuth\n          - Moto\n          - POS\n          type: string\n        shopperReference:\n          type: string\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n      - merchantAccount\n      - reference\n      - paymentMethod\n      - amount\n    StoredValueLoadResponse:\n      properties:\n        authCode:\n          description: 'Authorisation code:\n\n            * When the payment is authorised, this field holds the authorisation code\n            for the payment.\n\n            * When the payment is not authorised, this field is empty.'\n          type: string\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n    StoredValueStatusChangeRequest:\n      properties:\n        amount:\n          description: The amount information for the transaction.\n          $ref: '#/components/schemas/Amount'\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        paymentMethod:\n          additionalProperties:\n            type: string\n          description: The collection that contains the type of the payment method\n            and its specific information if available\n          type: object\n        recurringDetailReference:\n          type: string\n        reference:\n          description: 'The reference to uniquely identify a payment. This reference\n            is used in all communication with you about the payment status. We recommend\n            using a unique value per payment; however, it is not a requirement.\n\n            If you need to provide multiple references for a transaction, separate\n            them with hyphens (\"-\").\n\n            Maximum length: 80 characters.'\n          type: string\n        shopperInteraction:\n          description: 'Specifies the sales channel, through which the shopper gives\n            their card details, and whether the shopper is a returning customer.\n\n            For the web service API, Adyen assumes Ecommerce shopper interaction by\n            default.\n\n\n            This field has the following possible values:\n\n            * `Ecommerce` - Online transactions where the cardholder is present (online).\n            For better authorisation rates, we recommend sending the card security\n            code (CSC) along with the request.\n\n            * `ContAuth` - Card on file and/or subscription transactions, where the\n            cardholder is known to the merchant (returning customer). If the shopper\n            is present (online), you can supply also the CSC to improve authorisation\n            (one-click payment).\n\n            * `Moto` - Mail-order and telephone-order transactions where the shopper\n            is in contact with the merchant via email or telephone.\n\n            * `POS` - Point-of-sale transactions where the shopper is physically present\n            to make a payment using a secure payment terminal.'\n          enum:\n          - Ecommerce\n          - ContAuth\n          - Moto\n          - POS\n          type: string\n        shopperReference:\n          type: string\n        status:\n          description: The status you want to change to\n          enum:\n          - active\n          - inactive\n          type: string\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n      required:\n      - merchantAccount\n      - reference\n      - paymentMethod\n      - status\n    StoredValueStatusChangeResponse:\n      properties:\n        authCode:\n          description: 'Authorisation code:\n\n            * When the payment is authorised, this field holds the authorisation code\n            for the payment.\n\n            * When the payment is not authorised, this field is empty.'\n          type: string\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n    StoredValueVoidRequest:\n      properties:\n        merchantAccount:\n          description: The merchant account identifier, with which you want to process\n            the transaction.\n          type: string\n        originalReference:\n          description: The original pspReference of the payment to modify.\n          type: string\n        reference:\n          description: 'Your reference for the payment modification. This reference\n            is visible in Customer Area and in reports.\n\n            Maximum length: 80 characters.'\n          type: string\n        store:\n          description: The physical store, for which this payment is processed.\n          maxLength: 16\n          minLength: 1\n          type: string\n        tenderReference:\n          description: The reference of the tender.\n          type: string\n        uniqueTerminalId:\n          description: The unique ID of a POS terminal.\n          type: string\n      required:\n      - merchantAccount\n      - originalReference\n    StoredValueVoidResponse:\n      properties:\n        currentBalance:\n          description: The balance currently on the payment method.\n          $ref: '#/components/schemas/Amount'\n        pspReference:\n          description: Adyen's 16-character string reference associated with the transaction/request.\n            This value is globally unique; quote it when communicating with us about\n            this request.\n          type: string\n        refusalReason:\n          description: 'If the transaction is refused or an error occurs, this field\n            holds Adyen''s mapped reason for the refusal or a description of the error.\n\n\n            When a transaction fails, the authorisation response includes `resultCode`\n            and `refusalReason` values.'\n          type: string\n        resultCode:\n          description: \"The result of the payment. Possible values:\\n\\n* **Success**\\\n            \\ \\u2013 The operation has been completed successfully. \\n* **Refused**\\\n            \\ \\u2013 The operation was refused. The reason is given in the `refusalReason`\\\n            \\ field. \\n* **Error** \\u2013 There was an error when the operation was\\\n            \\ processed. The reason is given in the `refusalReason` field. \\n* **NotEnoughBalance**\\\n            \\ \\u2013 The amount on the payment method is lower than the amount given\\\n            \\ in the request. Only applicable to balance checks. \\n\"\n          enum:\n          - Success\n          - Refused\n          - Error\n          - NotEnoughBalance\n          type: string\n        thirdPartyRefusalReason:\n          description: Raw refusal reason received from the third party, where available\n          type: string\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\n  examples: {}\n",
			"canonicalURL": "/github.com/Adyen/adyen-openapi@1ce757e7aa9360d308ee46c57faf90dacc9aaf98/-/blob/yaml/StoredValueService-v46.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-openapi/blob/1ce757e7aa9360d308ee46c57faf90dacc9aaf98/yaml/StoredValueService-v46.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}