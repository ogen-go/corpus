{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/redhat.com/catalog_inventory/1.0.0/openapi.yaml",
			"byteSize": 54571,
			"content": "openapi: 3.0.0\nservers:\n  - description: Production Server\n    url: https://cloud.redhat.com/{basePath}\n    variables:\n      basePath:\n        default: /api/catalog-inventory/v1.0\n  - description: Development Server\n    url: http://localhost:{port}/{basePath}\n    variables:\n      basePath:\n        default: /api/catalog-inventory/v1.0\n      port:\n        default: \"3000\"\ninfo:\n  contact:\n    email: support@redhat.com\n  description: Catalog Inventory\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Catalog Inventory\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/RedHatInsights/catalog_inventory-api/master/public/doc/openapi-3-v1.0.json\n      version: \"3.0\"\n  x-providerName: redhat.com\n  x-serviceName: catalog_inventory\nsecurity:\n  - UserSecurity: []\npaths:\n  /graphql:\n    post:\n      description: Performs a GraphQL Query\n      operationId: postGraphQL\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GraphQLRequest\"\n        description: GraphQL Query Request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GraphQLResponse\"\n          description: GraphQL Query Response\n      summary: Perform a GraphQL Query\n  /openapi.json:\n    get:\n      operationId: getDocumentation\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: The API document for this version of the API\n      summary: Return this API document in JSON format\n  /service_credential_types:\n    get:\n      description: Returns an array of ServiceCredentialType objects\n      operationId: listServiceCredentialTypes\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCredentialTypesCollection\"\n          description: ServiceCredentialTypes collection\n      summary: List ServiceCredentialTypes\n      tags:\n        - ServiceCredentialType\n  \"/service_credential_types/{id}\":\n    get:\n      description: Returns a ServiceCredentialType object\n      operationId: showServiceCredentialType\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCredentialType\"\n          description: ServiceCredentialType info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceCredentialType\n      tags:\n        - ServiceCredentialType\n  /service_credentials:\n    get:\n      description: Returns an array of ServiceCredential objects\n      operationId: listServiceCredentials\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCredentialsCollection\"\n          description: ServiceCredentials collection\n      summary: List ServiceCredentials\n      tags:\n        - ServiceCredential\n  \"/service_credentials/{id}\":\n    get:\n      description: Returns a ServiceCredential object\n      operationId: showServiceCredential\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceCredential\"\n          description: ServiceCredential info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceCredential\n      tags:\n        - ServiceCredential\n  /service_instances:\n    get:\n      description: Returns an array of ServiceInstance objects\n      operationId: listServiceInstances\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInstancesCollection\"\n          description: ServiceInstances collection\n      summary: List ServiceInstances\n      tags:\n        - ServiceInstance\n  \"/service_instances/{id}\":\n    get:\n      description: Returns a ServiceInstance object\n      operationId: showServiceInstance\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInstance\"\n          description: ServiceInstance info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceInstance\n      tags:\n        - ServiceInstance\n  /service_inventories:\n    get:\n      description: Returns an array of ServiceInventory objects\n      operationId: listServiceInventories\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInventoriesCollection\"\n          description: ServiceInventories collection\n      summary: List ServiceInventories\n      tags:\n        - ServiceInventory\n  \"/service_inventories/{id}\":\n    get:\n      description: Returns a ServiceInventory object\n      operationId: showServiceInventory\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInventory\"\n          description: ServiceInventory info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceInventory\n      tags:\n        - ServiceInventory\n  \"/service_inventories/{id}/tag\":\n    post:\n      description: Tags a ServiceInventory object\n      operationId: tagServiceInventory\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/Tag\"\n              type: array\n        description: Tag attributes to add\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tag\"\n                type: array\n          description: ServiceInventory tagged successful\n        \"304\":\n          description: Not modified\n      summary: Tag a ServiceInventory\n      tags:\n        - ServiceInventory\n  \"/service_inventories/{id}/tags\":\n    get:\n      description: Returns an array of Tag objects\n      operationId: listServiceInventoryTags\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagsCollection\"\n          description: Tags collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List Tags for ServiceInventory\n      tags:\n        - ServiceInventory\n  \"/service_inventories/{id}/untag\":\n    post:\n      description: Untags a ServiceInventory object\n      operationId: untagServiceInventory\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/Tag\"\n              type: array\n        description: Tag attributes to removed\n        required: true\n      responses:\n        \"204\":\n          description: ServiceInventory untagged successfully\n      summary: Untag a ServiceInventory\n      tags:\n        - ServiceInventory\n  /service_offering_nodes:\n    get:\n      description: Returns an array of ServiceOfferingNode objects\n      operationId: listServiceOfferingNodes\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingNodesCollection\"\n          description: ServiceOfferingNodes collection\n      summary: List ServiceOfferingNodes\n      tags:\n        - ServiceOfferingNode\n  \"/service_offering_nodes/{id}\":\n    get:\n      description: Returns a ServiceOfferingNode object\n      operationId: showServiceOfferingNode\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingNode\"\n          description: ServiceOfferingNode info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceOfferingNode\n      tags:\n        - ServiceOfferingNode\n  /service_offerings:\n    get:\n      description: Returns an array of ServiceOffering objects\n      operationId: listServiceOfferings\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingsCollection\"\n          description: ServiceOfferings collection\n      summary: List ServiceOfferings\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}\":\n    get:\n      description: Returns a ServiceOffering object\n      operationId: showServiceOffering\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOffering\"\n          description: ServiceOffering info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServiceOffering\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}/applied_inventories_tags\":\n    post:\n      description: Returns an array of inventories tags\n      operationId: appliedInventoriesTagsForServiceOffering\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AppliedInventoriesParametersServicePlan\"\n        description: Parameters defining input data for computing inventories\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tag\"\n                type: array\n          description: Returns an array of inventories tags for the computing result\n        \"400\":\n          description: BadRequest\n      summary: Invokes computing of ServiceInventories tags for given ServiceOffering\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}/order\":\n    post:\n      description: Returns a Task id\n      operationId: orderServiceOffering\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderParametersServiceOffering\"\n        description: Order parameters defining the service and provider control\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  task_id:\n                    type: string\n                type: object\n          description: Returns a task ID for the order\n        \"400\":\n          description: BadRequest\n      summary: Order an existing ServiceOffering\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}/service_instances\":\n    get:\n      description: Returns an array of ServiceInstance objects\n      operationId: listServiceOfferingServiceInstances\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInstancesCollection\"\n          description: ServiceInstances collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceInstances for ServiceOffering\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}/service_offering_nodes\":\n    get:\n      description: Returns an array of ServiceOfferingNode objects\n      operationId: listServiceOfferingServiceOfferingNodes\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingNodesCollection\"\n          description: ServiceOfferingNodes collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceOfferingNodes for ServiceOffering\n      tags:\n        - ServiceOffering\n  \"/service_offerings/{id}/service_plans\":\n    get:\n      description: Returns an array of ServicePlan objects\n      operationId: listServiceOfferingServicePlans\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicePlansCollection\"\n          description: ServicePlans collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServicePlans for ServiceOffering\n      tags:\n        - ServiceOffering\n  /service_plans:\n    get:\n      description: Returns an array of ServicePlan objects\n      operationId: listServicePlans\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicePlansCollection\"\n          description: ServicePlans collection\n      summary: List ServicePlans\n      tags:\n        - ServicePlan\n  \"/service_plans/{id}\":\n    get:\n      description: Returns a ServicePlan object\n      operationId: showServicePlan\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicePlan\"\n          description: ServicePlan info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing ServicePlan\n      tags:\n        - ServicePlan\n  /sources:\n    get:\n      description: Returns an array of Source objects\n      operationId: listSources\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SourcesCollection\"\n          description: Sources collection\n      summary: List Sources\n      tags:\n        - Source\n  \"/sources/{id}\":\n    get:\n      description: Returns a Source object\n      operationId: showSource\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Source\"\n          description: Source info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing Source\n      tags:\n        - Source\n  \"/sources/{id}/incremental_refresh\":\n    patch:\n      description: Incremental Refresh a source object\n      operationId: incrementalRefreshSource\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"204\":\n          description: Updated, no content\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"429\":\n          description: Too many requests\n      summary: Incremental Refresh an existing Source\n      tags:\n        - Source\n  \"/sources/{id}/refresh\":\n    patch:\n      description: Refresh a source object\n      operationId: refreshSource\n      parameters:\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"204\":\n          description: Updated, no content\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n        \"429\":\n          description: Too many requests\n      summary: \" Refresh an existing Source\"\n      tags:\n        - Source\n  \"/sources/{id}/service_instances\":\n    get:\n      description: Returns an array of ServiceInstance objects\n      operationId: listSourceServiceInstances\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInstancesCollection\"\n          description: ServiceInstances collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceInstances for Source\n      tags:\n        - Source\n  \"/sources/{id}/service_inventories\":\n    get:\n      description: Returns an array of ServiceInventory objects\n      operationId: listSourceServiceInventories\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceInventoriesCollection\"\n          description: ServiceInventories collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceInventories for Source\n      tags:\n        - Source\n  \"/sources/{id}/service_offering_nodes\":\n    get:\n      description: Returns an array of ServiceOfferingNode objects\n      operationId: listSourceServiceOfferingNodes\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingNodesCollection\"\n          description: ServiceOfferingNodes collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceOfferingNodes for Source\n      tags:\n        - Source\n  \"/sources/{id}/service_offerings\":\n    get:\n      description: Returns an array of ServiceOffering objects\n      operationId: listSourceServiceOfferings\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceOfferingsCollection\"\n          description: ServiceOfferings collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServiceOfferings for Source\n      tags:\n        - Source\n  \"/sources/{id}/service_plans\":\n    get:\n      description: Returns an array of ServicePlan objects\n      operationId: listSourceServicePlans\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServicePlansCollection\"\n          description: ServicePlans collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List ServicePlans for Source\n      tags:\n        - Source\n  \"/sources/{id}/tasks\":\n    get:\n      description: Returns an array of Task objects\n      operationId: listSourceTasks\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n        - $ref: \"#/components/parameters/ID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TasksCollection\"\n          description: Tasks collection\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: List Tasks for Source\n      tags:\n        - Source\n  /tags:\n    get:\n      description: Returns an array of Tag objects\n      operationId: listTags\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagsCollection\"\n          description: Tags collection\n      summary: List Tags\n      tags:\n        - Tags\n  /tasks:\n    get:\n      description: Returns an array of Task objects\n      operationId: listTasks\n      parameters:\n        - $ref: \"#/components/parameters/QueryLimit\"\n        - $ref: \"#/components/parameters/QueryOffset\"\n        - $ref: \"#/components/parameters/QueryFilter\"\n        - $ref: \"#/components/parameters/QuerySortBy\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TasksCollection\"\n          description: Tasks collection\n      summary: List Tasks\n      tags:\n        - Task\n  \"/tasks/{id}\":\n    get:\n      description: Returns a Task object\n      operationId: showTask\n      parameters:\n        - $ref: \"#/components/parameters/UUID\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Task info\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Show an existing Task\n      tags:\n        - Task\n    patch:\n      description: Updates a Task object\n      operationId: updateTask\n      parameters:\n        - $ref: \"#/components/parameters/UUID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Task\"\n        description: Task attributes to update\n        required: true\n      responses:\n        \"204\":\n          description: Updated, no content\n        \"400\":\n          description: Bad request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorNotFound\"\n          description: Not found\n      summary: Update an existing Task\n      tags:\n        - Task\ncomponents:\n  parameters:\n    ID:\n      description: ID of the resource\n      in: path\n      name: id\n      required: true\n      schema:\n        pattern: ^\\d+$\n        type: string\n    QueryFilter:\n      description: Filter for querying collections.\n      explode: true\n      in: query\n      name: filter\n      required: false\n      schema:\n        type: object\n      style: deepObject\n    QueryLimit:\n      description: The numbers of items to return per page.\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 100\n        maximum: 1000\n        minimum: 1\n        type: integer\n    QueryOffset:\n      description: The number of items to skip before starting to collect the result set.\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        minimum: 0\n        type: integer\n    QuerySortBy:\n      description: The list of attribute and order to sort the result set by.\n      explode: true\n      in: query\n      name: sort_by\n      required: false\n      schema:\n        type: object\n      style: deepObject\n    UUID:\n      description: UUID of task\n      in: path\n      name: id\n      required: true\n      schema:\n        pattern: \"[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\"\n        type: string\n  schemas:\n    AppliedInventoriesParametersServicePlan:\n      additionalProperties: false\n      properties:\n        service_parameters:\n          description: The provider specific parameters needed to compute list of used service inventories\n          type: object\n      type: object\n    CheckAvailabilityTask:\n      $ref: \"#/components/schemas/Task\"\n    CollectionLinks:\n      properties:\n        first:\n          type: string\n        last:\n          type: string\n        next:\n          type: string\n        prev:\n          type: string\n      type: object\n    CollectionMetadata:\n      properties:\n        count:\n          type: integer\n        limit:\n          type: integer\n        offset:\n          type: integer\n      type: object\n    ErrorNotFound:\n      properties:\n        errors:\n          items:\n            properties:\n              detail:\n                example: Record not found\n                type: string\n              status:\n                example: \"404\"\n                type: string\n            type: object\n          type: array\n      type: object\n    FullRefreshPersisterTask:\n      $ref: \"#/components/schemas/Task\"\n    FullRefreshUploadTask:\n      $ref: \"#/components/schemas/Task\"\n    GraphQLRequest:\n      properties:\n        operationName:\n          default: \"\"\n          description: If the Query contains several named operations, the operationName controls which one should be executed\n          type: string\n        query:\n          default: \"{}\"\n          description: The GraphQL query\n          type: string\n        variables:\n          description: Optional Query variables\n          nullable: true\n          type: object\n      required:\n        - query\n      type: object\n    GraphQLResponse:\n      properties:\n        data:\n          description: Results from the GraphQL query\n          type: object\n        errors:\n          description: Errors resulting from the GraphQL query\n          items:\n            type: object\n          type: array\n      type: object\n    ID:\n      description: ID of the resource\n      pattern: ^\\d+$\n      readOnly: true\n      type: string\n    IncrementalRefreshUploadTask:\n      $ref: \"#/components/schemas/Task\"\n    LaunchJobTask:\n      $ref: \"#/components/schemas/Task\"\n    OrderParametersServiceOffering:\n      additionalProperties: false\n      properties:\n        provider_control_parameters:\n          description: The provider specific parameters needed to provision this service. This might include namespaces, special keys\n          type: object\n        service_parameters:\n          description: JSON object with provisioning parameters\n          type: object\n        service_plan_id:\n          $ref: \"#/components/schemas/ID\"\n      type: object\n    OrderParametersServicePlan:\n      additionalProperties: false\n      properties:\n        provider_control_parameters:\n          description: The provider specific parameters needed to provision this service. This might include namespaces, special keys\n          type: object\n        service_parameters:\n          description: JSON object with provisioning parameters\n          type: object\n      type: object\n    ServiceCredential:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          readOnly: true\n          type: string\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          readOnly: true\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        service_credential_type_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          readOnly: true\n          type: string\n        source_updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        type_name:\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceCredentialType:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          readOnly: true\n          type: string\n        id:\n          $ref: \"#/components/schemas/ID\"\n        kind:\n          readOnly: true\n          type: string\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          readOnly: true\n          type: string\n        namespace:\n          readOnly: true\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_deleted_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceCredentialTypesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceCredentialType\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceCredentialsCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceCredential\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceInstance:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        external_url:\n          readOnly: true\n          type: string\n        extra:\n          description: Extra information about this object in JSON format\n          readOnly: true\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          example: Sample ServiceInstance\n          readOnly: true\n          title: Name\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        root_service_instance_id:\n          $ref: \"#/components/schemas/ID\"\n        service_inventory_id:\n          $ref: \"#/components/schemas/ID\"\n        service_offering_id:\n          $ref: \"#/components/schemas/ID\"\n        service_plan_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_deleted_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          format: uuid\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceInstanceNode:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        extra:\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        root_service_instance_id:\n          $ref: \"#/components/schemas/ID\"\n        service_instance_id:\n          $ref: \"#/components/schemas/ID\"\n        service_inventory_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          type: string\n        source_updated_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceInstanceNodesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceInstanceNode\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceInstancesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceInstance\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceInventoriesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceInventory\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceInventory:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          readOnly: true\n          type: string\n        extra:\n          readOnly: true\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          readOnly: true\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          readOnly: true\n          type: string\n        source_updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceOffering:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          example: This is a short description\n          readOnly: true\n          title: Description\n          type: string\n        display_name:\n          example: MariaDB (Ephemeral)\n          readOnly: true\n          title: Display Name\n          type: string\n        distributor:\n          example: Red Hat, Inc.\n          readOnly: true\n          title: Distributor\n          type: string\n        documentation_url:\n          example: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md\n          readOnly: true\n          title: Documentation URL\n          type: string\n        extra:\n          description: Extra information about this object in JSON format\n          readOnly: true\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        long_description:\n          example: This template provides a standalone MariaDB server with a database created...\n          readOnly: true\n          title: Long Description\n          type: string\n        name:\n          example: Sample Service Offering\n          readOnly: true\n          title: Name\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        service_inventory_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_deleted_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          description: The native reference used by the Source to refer to this object\n          example: object-12345_67890\n          readOnly: true\n          title: Source reference\n          type: string\n        support_url:\n          example: https://access.redhat.com\n          readOnly: true\n          title: Support URL\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceOfferingIcon:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        data:\n          description: Raw icon data\n          readOnly: true\n          title: Icon Data\n          type: string\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          example: icon-mariadb\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceOfferingIconsCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceOfferingIcon\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceOfferingNode:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        extra:\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        root_service_offering_id:\n          $ref: \"#/components/schemas/ID\"\n        service_inventory_id:\n          $ref: \"#/components/schemas/ID\"\n        service_offering_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          type: string\n        source_updated_at:\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServiceOfferingNodesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceOfferingNode\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServiceOfferingsCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServiceOffering\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    ServicePlan:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        create_json_schema:\n          readOnly: true\n          type: object\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          example: This is a sample description for a provider\n          readOnly: true\n          title: Description\n          type: string\n        extra:\n          description: Extra information about this object in JSON format\n          readOnly: true\n          type: object\n        id:\n          $ref: \"#/components/schemas/ID\"\n        last_seen_at:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          example: Sample Provider\n          readOnly: true\n          title: Name\n          type: string\n        refresh_state_part_id:\n          $ref: \"#/components/schemas/ID\"\n        resource_version:\n          readOnly: true\n          type: string\n        service_offering_id:\n          $ref: \"#/components/schemas/ID\"\n        source_created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_deleted_at:\n          format: date-time\n          readOnly: true\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        source_ref:\n          format: uuid\n          readOnly: true\n          type: string\n        update_json_schema:\n          readOnly: true\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    ServicePlansCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/ServicePlan\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    Source:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          title: Archived\n          type: string\n        availability_message:\n          readOnly: true\n          title: Availability Message\n          type: string\n        availability_status:\n          example: The availability status of source\n          title: Availability Status\n          type: string\n        cloud_connector_id:\n          example: The GUID of the RedHat connect client being used\n          readOnly: true\n          title: RedHat Connect Client Id\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          title: Created\n          type: string\n        enabled:\n          default: false\n          readOnly: true\n          title: Enabled\n          type: boolean\n        id:\n          $ref: \"#/components/schemas/ID\"\n        info:\n          example: The version of Tower being used\n          readOnly: true\n          title: Info\n          type: object\n        last_available_at:\n          format: date-time\n          readOnly: true\n          title: Last available\n          type: string\n        last_checked_at:\n          format: date-time\n          readOnly: true\n          title: Last checked\n          type: string\n        last_refresh_message:\n          readOnly: true\n          title: Last refresh message\n          type: string\n        last_successful_refresh_at:\n          format: date-time\n          readOnly: true\n          title: Last successful refresh\n          type: string\n        name:\n          example: The Source Name\n          readOnly: true\n          title: Name\n          type: string\n        previous_sha:\n          readOnly: true\n          title: SHA of previous uploaded files\n          type: string\n        previous_size:\n          readOnly: true\n          title: Size of previous uploaded files\n          type: integer\n        refresh_finished_at:\n          format: date-time\n          readOnly: true\n          title: Refresh finished\n          type: string\n        refresh_started_at:\n          format: date-time\n          readOnly: true\n          title: Refresh started\n          type: string\n        refresh_state:\n          title: Refresh state\n          type: string\n        refresh_task_id:\n          format: uuid\n          readOnly: true\n          title: Refresh task\n          type: string\n        uid:\n          readOnly: true\n          title: Unique ID of the inventory source installation\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          title: Updated\n          type: string\n      type: object\n    SourcesCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Source\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    Tag:\n      additionalProperties: false\n      properties:\n        tag:\n          example: /namespace/architecture=x86_64\n          type: string\n      type: object\n    TagsCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    Task:\n      additionalProperties: false\n      properties:\n        archived_at:\n          format: date-time\n          readOnly: true\n          type: string\n        child_task_id:\n          format: uuid\n          readOnly: true\n          type: string\n        completed_at:\n          format: date-time\n          type: string\n        controller_message_id:\n          format: uuid\n          readOnly: true\n          type: string\n        created_at:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          $ref: \"#/components/schemas/UUID\"\n        input:\n          example: Task payload input content\n          readOnly: true\n          title: Content\n          type: object\n        message:\n          example: received message starting inventory collection\n          title: Message\n          type: string\n        name:\n          example: Order Service Plan\n          title: Name\n          type: string\n        output:\n          example: Result of Task Execution\n          title: Result\n          type: object\n        owner:\n          example: jdoe\n          readOnly: true\n          title: Owner\n          type: string\n        source_id:\n          $ref: \"#/components/schemas/ID\"\n        state:\n          enum:\n            - pending\n            - queued\n            - running\n            - timedout\n            - completed\n          example: running\n          title: State\n          type: string\n        status:\n          enum:\n            - ok\n            - warn\n            - unchanged\n            - error\n          example: error\n          title: Status\n          type: string\n        target_source_ref:\n          type: string\n        target_type:\n          type: string\n        type:\n          example: CloudConnectorTask\n          title: Type\n          type: string\n        updated_at:\n          format: date-time\n          readOnly: true\n          type: string\n      type: object\n    TasksCollection:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Task\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/CollectionLinks\"\n        meta:\n          $ref: \"#/components/schemas/CollectionMetadata\"\n      type: object\n    Tenant:\n      properties:\n        description:\n          example: Description of the Tenant\n          readOnly: true\n          type: string\n        external_tenant:\n          example: External tenant identifier\n          readOnly: true\n          type: string\n        id:\n          $ref: \"#/components/schemas/ID\"\n        name:\n          example: Sample Tenant\n          readOnly: true\n          type: string\n      type: object\n    TowingTask:\n      $ref: \"#/components/schemas/Task\"\n    UUID:\n      description: UUID of task\n      format: uuid\n      readOnly: true\n      type: string\n  securitySchemes:\n    UserSecurity:\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/redhat.com/catalog_inventory/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/redhat.com/catalog_inventory/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}