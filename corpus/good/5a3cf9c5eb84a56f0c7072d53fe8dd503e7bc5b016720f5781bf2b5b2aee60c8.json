{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/convictional/engineering-interview"
		},
		"file": {
			"name": "contract.yaml",
			"size": 0,
			"path": "contract.yaml",
			"byteSize": 4074,
			"content": "openapi: 3.0.1\ninfo:\n  title: Convictional Interview API Contract\n  description: This is the required output for the Convictional Eng Challenge\n  contact:\n    email: samuel@convictional.com\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about Convictional\n  url: https://convictional.com\ntags:\n- name: product\n  description: Representation of a seller's products\n- name: store\n  description: Representation of a seller's storefront\n\n# API Paths\npaths:\n  /products:\n    get:\n        tags:\n        - product\n        summary: List Products\n        description: Returns a list of products\n        operationId: getAllProducts\n        responses:\n          \"200\":\n            description: Successful operation\n            content:\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/product'\n  /products/{productId}:\n    get:\n      tags:\n      - product\n      summary: Find product by ID\n      description: Returns a single product\n      operationId: getProductById\n      parameters:\n      - name: productId\n        in: path\n        description: ID of product to return\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        \"400\":\n          description: Invalid ID supplied\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n        \"404\":\n          description: Product not found\n          content: \n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /store/inventory:\n    get:\n      tags:\n      - store\n      summary: Returns product inventories\n      description: Returns an array of inventory objects for each variant\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/inventory'\n\n # API Objects\ncomponents:\n  schemas:\n    inventory:\n      properties:\n        productId:\n          type: string\n        variantId:\n          type: string\n        stock:\n          type: integer\n          format: int64\n    product:\n      required:\n      - code\n      type: object\n      properties:\n        code:\n          type: string\n        title:\n          type: string\n          description: Product title\n        vendor:\n          type: string\n          description: Product vendor\n        bodyHtml:\n          type: string\n          description: HTML description of a product\n        variants:\n          type: array\n          items:\n            $ref: '#/components/schemas/variant'\n        images:\n          type: array\n          items:\n            $ref: '#/components/schemas/image'\n    variant:\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        sku:\n          type: string\n        available:\n          type: boolean\n          description: True if inventory \u003e 0, false otherwise\n        inventory_quantity:\n          type: integer\n          format: int64\n          description: Inventory for given variant. Should be 0 if no information provided\n        weight:\n          $ref: '#/components/schemas/weight'\n    weight:\n      type: object\n      properties:\n        value:\n          type: integer\n          format: int64\n        unit:\n          type: string\n    image:\n      required:\n      - source\n      - variantId\n      type: object\n      properties:\n        source:\n          type: string\n        variantId:\n          type: string\n          description: ID for the variant the image relates to\n    error:\n        required:\n        - message\n        type: object\n        properties:\n          message:\n            type: string\n",
			"canonicalURL": "/github.com/convictional/engineering-interview@31aad432ffd3b972ef5de1f91a91513b7800d512/-/blob/contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/convictional/engineering-interview/blob/31aad432ffd3b972ef5de1f91a91513b7800d512/contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}