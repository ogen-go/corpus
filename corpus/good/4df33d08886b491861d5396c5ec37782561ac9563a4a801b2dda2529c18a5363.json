{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ykjam/bpchack"
		},
		"file": {
			"name": "open_api.yaml",
			"size": 0,
			"path": "api/open_api.yaml",
			"byteSize": 7833,
			"content": "openapi: 3.0.1\ninfo:\n  title: BPC Hack HTTP Proxy API\n  version: 0.1.0\n  description: API for BPC Hack HTTP Proxy, used to hack the crappy \"BPC\" eCommerce products used in local banks\ntags:\n  - name: \"public\"\n    description: \"public utility methods\"\n  - name: \"workflow\"\n    description: \"workflow for eCommerce processing of transaction\"\npaths:\n  '/api/epoch':\n    get:\n      tags:\n        - public\n      summary: 'return server epoch time'\n      description: 'used for checking time difference between client and server'\n      operationId: 'epoch'\n      responses:\n        200:\n          description: 'return server epoch time in seconds'\n\n  '/api/ip':\n    get:\n      tags:\n        - public\n      summary: 'return client ip address'\n      description: 'return ip address of client seen by server'\n      operationId: 'echo-ip'\n      responses:\n        200:\n          description: 'return remote address seen by server'\n\n  '/api/v1/start-hack':\n    post:\n      tags:\n        - workflow\n      summary: Start BPC Hack\n      description: \u003e-\n        Start processing of order registered in BPC eCommerce module, first step\n      operationId: 'start-hack'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/StartHackRequest'\n      responses:\n        200:\n          description: 'ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartHackResponse'\n        400:\n          description: 'request parameters did not pass validation'\n        default:\n          description: 'server error'\n\n  '/api/v1/submit-card':\n    post:\n      tags:\n        - workflow\n      summary: Submit Card\n      description: \u003e-\n        Submit card information for BPC hack, second step\n      operationId: 'submit-card'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubmitCardRequest'\n      responses:\n        200:\n          description: 'ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmitCardResponse'\n        400:\n          description: 'request parameters did not pass validation'\n        default:\n          description: 'server error'\n\n  '/api/v1/resend-code':\n    post:\n      tags:\n        - workflow\n      summary: Resend code\n      description: \u003e-\n        Resend code for payment authorization, third step\n      operationId: 'resend-code'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResendCodeRequest'\n      responses:\n        200:\n          description: 'ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResendCodeResponse'\n        400:\n          description: 'request parameters did not pass validation'\n        default:\n          description: 'server error'\n\n  '/api/v1/confirm-payment':\n    post:\n      tags:\n        - workflow\n      summary: Confirm payment\n      description: \u003e-\n        Confirm payment with authorization code, fourth step\n      operationId: 'confirm-payment'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ConfirmPaymentRequest'\n      responses:\n        200:\n          description: 'ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfirmPaymentResponse'\n        400:\n          description: 'request parameters did not pass validation'\n        default:\n          description: 'server error'\n\ncomponents:\n  schemas:\n    HackResponseStatus:\n      type: string\n      description: response status\n      enum:\n        - ok\n        - network-error\n        - already-processed\n        - wrong-otp\n        - operation-cancelled\n        - specify-cvc\n        - other-error\n\n    ApplicationName:\n      type: string\n      description: for informative purposes only, name of application trying to use bpc hack.\n      pattern: '^[a-z0-9]{3,16}$'\n\n    UserIdentity:\n      type: string\n      description: for informative purposes only, user id of application trying to use bpc hack\n      pattern: '^[a-z0-9]{3,64}$'\n\n    StartHackRequest:\n      type: object\n      properties:\n        app:\n          $ref: '#/components/schemas/ApplicationName'\n        id:\n          $ref: '#/components/schemas/UserIdentity'\n        url:\n          description: payment url you received to redirect user to (during https://{crappy_bpc_server}/register.do request)\n          type: string\n\n    StartHackResponse:\n      type: object\n      required: [status]\n      properties:\n        status:\n          $ref: '#/components/schemas/HackResponseStatus'\n        md-order:\n          description: mdOrder id\n          type: string\n        remaining-time:\n          description: time in seconds remaining for order to expire\n        expiration-ts:\n          description: epoch for order to expire\n          type: integer\n        is-cvc-required:\n          description: is cvc needed in SubmitCard info\n          type: boolean\n        amount-info:\n          description: amount with currency\n          type: string\n\n    SubmitCardRequest:\n      type: object\n      properties:\n        app:\n          $ref: '#/components/schemas/ApplicationName'\n        id:\n          $ref: '#/components/schemas/UserIdentity'\n        md-order:\n          type: string\n          description: mdOrder id obtained in start hack\n        card-number:\n          type: string\n          description: payment card number\n          pattern: '^[0-9]{16}$'\n        card-expiry:\n          type: string\n          description: payment card expiration date in YYYYMM format\n          pattern: '^[0-9]{6}$'\n        name-on-card:\n          type: string\n          description: 'name on payment card, length: min 4, maximum 32'\n        card-cvc:\n          type: string\n          description: can be empty, 3 digits\n          pattern: '^[0-9]{3}$'\n\n    SubmitCardResponse:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/HackResponseStatus'\n        acs-request-id:\n          type: string\n        acs-session-url:\n          type: string\n        three-d-secure-number:\n          type: string\n        resend-attempts-left:\n          type: integer\n        terminate-url:\n          type: string\n\n    ResendCodeRequest:\n      type: object\n      properties:\n        app:\n          $ref: '#/components/schemas/ApplicationName'\n        id:\n          $ref: '#/components/schemas/UserIdentity'\n        acs-req-id:\n          type: string\n        acs-session-url:\n          type: string\n\n    ResendCodeResponse:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/HackResponseStatus'\n        resend-attempts-left:\n          type: integer\n\n    ConfirmPaymentRequest:\n      type: object\n      properties:\n        app:\n          $ref: '#/components/schemas/ApplicationName'\n        id:\n          $ref: '#/components/schemas/UserIdentity'\n        md-order:\n          type: string\n          description: mdOrder id obtained in start hack\n        acs-req-id:\n          type: string\n        acs-session-url:\n          type: string\n        otp:\n          type: string\n          description: one time password send by sms from bank\n        term-url: \n          type: string\n          description: terminate url\n\n    ConfirmPaymentResponse:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/HackResponseStatus'\n        current-attempt:\n          type: integer\n        total-attempts:\n          type: integer\n        final-url:\n          type: string\n",
			"canonicalURL": "/github.com/ykjam/bpchack@7baf7bf0e9fd8037fb56e0431c0e459321f26383/-/blob/api/open_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ykjam/bpchack/blob/7baf7bf0e9fd8037fb56e0431c0e459321f26383/api/open_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}