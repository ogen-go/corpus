{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/andylockran/spectral-aws-apigateway-ruleset"
		},
		"file": {
			"name": "petstore_aws.yaml",
			"size": 0,
			"path": "examples/petstore_aws.yaml",
			"byteSize": 4891,
			"content": "openapi: \"3.0.1\"\ninfo:\n  version: 1.0.0\n  contact: \n    email: andy@zrmt.com\n  title: AWS APi Gateway Petstore\n  license:\n    name: MIT\n  description: An example API Gateway for AWS API Gateway\nservers:\n  - url: https://petstoreapi.example.com\n    variables:\n      basePath:\n        default: /\n    description: Main\ntags:\n  - name: Example\n    description: An example tag\n  - name: pets\n    description: Endpoints related to pets\n\nx-amazon-apigateway-request-validators:\n  all:\n    validateRequestBody: true\n    validateRequestParameters: true\nx-amazon-apigateway-request-validator: all\n\npaths:\n  /pets:\n    get:\n      description: List all pets\n      operationId: \"listPets\"\n      tags:\n        - pets\n      parameters:\n      - name: \"limit\"\n        in: \"query\"\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\n    post:\n      description: Updated Pet\n      tags:\n        - pets\n      operationId: \"createPets\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n        required: true\n      responses:\n        \"404\":\n          description: \"404 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"200\":\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"201\":\n          description: \"201 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ArrayOfError\"\n        \"400\":\n          description: \"400 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"401\":\n          description: \"401 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"403\":\n          description: \"403 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"never\"\n        type: \"mock\"\n  /pets/{petId}:\n    get:\n      description: Upload pet\n      tags:\n        - pets\n      operationId: \"showPetById\"\n      parameters:\n      - name: \"petId\"\n        in: \"path\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        \"200\":\n          description: \"200 response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n      x-amazon-apigateway-integration:\n        responses:\n          default:\n            statusCode: \"200\"\n            responseTemplates:\n              application/json: \"{\\\"statusCode\\\": 200}\"\n        passthroughBehavior: \"when_no_match\"\n        type: \"mock\"\ncomponents:\n  schemas:\n    Pet:\n      type: \"object\"\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        tag:\n          type: string\n      additionalProperties: true\n    Pets:\n      type: array\n      items:\n        $ref: '#/components/schemas/Pet'\n    Error:\n      type: \"object\"\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n    ArrayOfError:\n      type: \"array\"\n      items: \n        $ref: \"#/components/schemas/Error\"\n  responses:\n    BadRequest:\n      description: The request was badly formed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: The item was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorised:\n      description: Unauthorised. The client lacks authentication credentials for this request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Forbidden:\n      description: Forbidden. The authenticated client is not allowed to perform the request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'",
			"canonicalURL": "/github.com/andylockran/spectral-aws-apigateway-ruleset@11899fedc4f5d16adcc47df87c122110d9d932e5/-/blob/examples/petstore_aws.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/andylockran/spectral-aws-apigateway-ruleset/blob/11899fedc4f5d16adcc47df87c122110d9d932e5/examples/petstore_aws.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}