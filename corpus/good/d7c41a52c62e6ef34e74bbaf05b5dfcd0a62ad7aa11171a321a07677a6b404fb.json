{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Jean85/symfony-openapi-example"
		},
		"file": {
			"name": "openapi.v1.yaml",
			"size": 0,
			"path": "reference/openapi.v1.yaml",
			"byteSize": 5488,
			"content": "openapi: 3.0.0\ninfo:\n  title: Symfony + OpenAPI example\n  version: '1.0'\n  contact:\n    name: Alessandro Lai\n    email: alessandro.lai85@gmail.com\n    url: 'https://alessandrolai.dev'\n  license:\n    name: MIT\n    url: 'https://github.com/Jean85/symfony-openapi-example/blob/main/LICENSE'\n  description: An example repository demonstrating the usage of an OpenAPI spec in the code of a Symfony web API application\nservers:\n  - url: 'http://localhost:80'\n    description: Local\npaths:\n  '/api/users/{userId}':\n    parameters:\n      - schema:\n          type: integer\n        name: userId\n        in: path\n        required: true\n        description: Id of an existing user.\n    get:\n      summary: Get User Info by User ID\n      responses:\n        '200':\n          description: User Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n              examples:\n                Get User Alice Smith:\n                  value:\n                    id: 142\n                    firstName: Alice\n                    lastName: Smith\n                    email: alice.smith@gmail.com\n                    dateOfBirth: '1997-10-31'\n                    emailVerified: true\n                    createDate: '2019-08-24'\n        '404':\n          description: User Not Found\n      operationId: get-users-userId\n      description: Retrieve the information of the user with the matching user ID.\n      tags:\n        - user\n    patch:\n      summary: Update User Information\n      operationId: patch-users-userId\n      responses:\n        '200':\n          description: User Updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n              examples:\n                Updated User Rebecca Baker:\n                  value:\n                    id: 13\n                    firstName: Rebecca\n                    lastName: Baker\n                    email: rebecca@gmail.com\n                    dateOfBirth: '1985-10-02'\n                    emailVerified: false\n                    createDate: '2019-08-24'\n        '404':\n          description: User Not Found\n        '409':\n          description: Email Already Taken\n      description: Update the infromation of an existing user.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n            examples:\n              Update First Name:\n                value:\n                  firstName: Rebecca\n              Update Email:\n                value:\n                  id: 123\n                  email: rebecca@gmail.com\n              Update Last Name \u0026 Date of Birth:\n                value:\n                  lastName: Baker\n                  dateOfBirth: '1985-10-02'\n        description: Patch user properties to update.\n      tags:\n        - user\n  /api/user:\n    post:\n      summary: Create New User\n      operationId: post-user\n      responses:\n        '201':\n          description: User Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n              examples:\n                New User Bob Fellow:\n                  value:\n                    id: 12\n                    firstName: Bob\n                    lastName: Fellow\n                    email: bob.fellow@gmail.com\n                    dateOfBirth: '1996-08-24'\n                    emailVerified: false\n                    createDate: '2020-11-18'\n        '400':\n          description: Missing Required Information\n        '409':\n          description: Email Already Taken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n            examples:\n              Create User Bob Fellow:\n                value:\n                  firstName: Bob\n                  lastName: Fellow\n                  email: bob.fellow@gmail.com\n                  dateOfBirth: '1996-08-24'\n        description: Post the necessary fields for the API to create a new user.\n      description: Create a new user.\n      tags:\n        - user\ncomponents:\n  schemas:\n    User:\n      title: User\n      type: object\n      description: ''\n      x-examples:\n        Alice Smith:\n          id: 142\n          firstName: Alice\n          lastName: Smith\n          email: alice.smith@gmail.com\n          dateOfBirth: '1997-10-31'\n          emailVerified: true\n          signUpDate: '2019-08-24'\n      properties:\n        id:\n          type: integer\n          description: Unique identifier for the given user.\n          minimum: 1\n          readOnly: true\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n          format: email\n        dateOfBirth:\n          type: string\n          format: date\n          pattern: '^\\d{4}-\\d{2}-\\d{2}$'\n          example: '1997-10-31'\n        emailVerified:\n          type: boolean\n          description: Set to true if the user's email has been verified.\n          readOnly: true\n        createDate:\n          type: string\n          format: date\n          pattern: '^\\d{4}-\\d{2}-\\d{2}$'\n          description: The date that the user was created.\n          readOnly: true\n      required:\n        - id\n        - firstName\n        - lastName\n        - email\n        - emailVerified\n        - createDate\ntags:\n  - name: user\n    description: Operations over users\n",
			"canonicalURL": "/github.com/Jean85/symfony-openapi-example@c76ddcc3733c2f8fd900b2d58164561cdecacc0e/-/blob/reference/openapi.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Jean85/symfony-openapi-example/blob/c76ddcc3733c2f8fd900b2d58164561cdecacc0e/reference/openapi.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}