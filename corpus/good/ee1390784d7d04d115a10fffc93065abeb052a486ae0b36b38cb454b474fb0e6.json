{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kshitijyelpale/blockchain-hyperledger-fabric-electronic-patient-records"
		},
		"file": {
			"name": "TeamLithium.yaml",
			"size": 0,
			"path": "docs/API/TeamLithium.yaml",
			"byteSize": 8194,
			"content": "---\nopenapi: 3.0.0\n\n################################################################################\n#                              API Information                                 #\n################################################################################\ninfo:\n  version: v1\n  title: Team Lithium Fabris SDK API's\n  description: |\n    The first version of the backend routes of the Fabric SDK available.\n################################################################################\n#                  Host, Base Path, Schemes and Content Types                  #\n################################################################################\nservers:\n  - url: http://localhost:3001\n    description: Localhost\n\n################################################################################\n#                                   Tags                                       #\n################################################################################\ntags:\n  - name: Patients\n  - name: Doctors\n\n################################################################################\n#                                           Paths                              #\n################################################################################\npaths:\n  /patients/register:\n    post:\n      tags:\n        - Patients\n      security:\n        - bearerAuth: []\n      description: Register a Patient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Patient'\n      responses:\n        '200':\n          description: Patient created\n        '403':\n          description: Forbidden\n\n  /doctors/register:\n    post:\n      tags:\n        - Doctors\n      security:\n        - bearerAuth: []\n      description: Register a Doctor\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hospitalID:\n                  type: integer\n                doctorID:\n                  type: string\n      responses:\n        '200':\n          description: Doctor created\n        '403':\n          description: Forbidden\n\n  /login:\n    post:\n      description: Admin/Doctor/Patient Login.\n      requestBody:\n        description: Credentials enclosed in the body.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/credentials'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/token'\n        '400':\n          description: Bad request. Incorrect Credentials\n\n  /patients/_all:\n    get:\n      tags:\n        - Patients\n      description: Get all patients data.\n      responses:\n        '200':\n          description: All Patients object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Patient'\n\n  /patients/{patient-id}:\n    parameters:\n      - in: path\n        name: patient-id\n        schema:\n          type: string\n        description: Patient ID\n        required: true\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - Patients\n      description: Get basic information about a patient.\n      responses:\n        200:\n          description: The patient object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Patient'\n\n  /patients/{patient-id}/history:\n    parameters:\n      - in: path\n        name: patient-id\n        schema:\n          type: string\n        description: Patient ID\n        required: true\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - Patients\n      description: Get history of a patient.\n      responses:\n        200:\n          description: The patient object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Patient'\n\n  /patients/{patient-id}/details/personal:\n    parameters:\n      - in: path\n        name: patient-id\n        schema:\n          type: string\n        description: Patient ID\n        required: true\n    patch:\n      security:\n        - bearerAuth: []\n      tags:\n        - Patients\n      description: Update personal information about a patient.\n      requestBody:\n        description: New Personal Information enclosed in the body.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientPersonal'\n      responses:\n        200:\n          description: Patient Updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: string\n        500:\n          description: Failed Request\n\n  /patients/{patient-id}/details/medical:\n    parameters:\n      - in: path\n        name: patient-id\n        schema:\n          type: string\n        description: Patient ID\n        required: true\n    patch:\n      security:\n        - bearerAuth: []\n      tags:\n        - Patients\n      description: Update medical information about a patient.\n      requestBody:\n        description: New Personal Information enclosed in the body.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatientMedical'\n      responses:\n        200:\n          description: Patient Updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: string\n        500:\n          description: Failed Request\n\n\n################################################################################\n#                                 Definitions                                  #\n################################################################################\ncomponents:\n  responses:\n    UnauthorizedError:\n      description: Authentication information is missing or invalid\n      headers:\n        WWW_Authenticate:\n          schema:\n            type: string\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Doctor:\n      title: Doctor\n      type: object\n      properties:\n        address:\n          type: string\n        age:\n          type: string\n        docType:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n      required:\n        - address\n        - age\n        - docType\n        - firstName\n        - lastName\n\n    PatientMedical:\n      title: Patient medical details\n      type: object\n      properties:\n        newDiagnosis:\n          type: string\n        newFollowUp:\n          type: string\n        newSymptoms:\n          type: string\n        newTreatment:\n          type: string\n      \n    PatientPersonal:\n      title: Patient personal details\n      type: object\n      properties:\n        newAddress:\n          type: string\n        newAllergies:\n          type: string\n        newEmergPhoneNumber:\n          type: string\n        newPhoneNumber:\n          type: string\n\n    Patient:\n      title: Patient\n      type: object\n      properties:\n        address:\n          type: string\n        age:\n          type: string\n        docType:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n      required:\n        - address\n        - age\n        - docType\n        - firstName\n        - lastName\n\n    credentials:\n      title: credentials\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n      required:\n        - username\n        - password\n    \n    token:\n      type: object\n      properties:\n        accessToken:\n          type: string\n\n    ErrorTransaction:\n      title: Error Transaction\n      type: object\n      properties:\n        message:\n          type: string\n        stack:\n          type: string",
			"canonicalURL": "/github.com/kshitijyelpale/blockchain-hyperledger-fabric-electronic-patient-records@7148a78b6a22127c9d2e28996035bf8702be01e1/-/blob/docs/API/TeamLithium.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kshitijyelpale/blockchain-hyperledger-fabric-electronic-patient-records/blob/7148a78b6a22127c9d2e28996035bf8702be01e1/docs/API/TeamLithium.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}