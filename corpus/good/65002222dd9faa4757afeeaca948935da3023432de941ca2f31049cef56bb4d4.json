{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ryan-mars/workers-queue-demo"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "schema.yaml",
			"byteSize": 8748,
			"content": "openapi: 3.0.0\ninfo:\n  title: Workers Queue Demo\n  version: '1.0'\n  description: 'Edge queue REST API implemented on Cloudflare Workers.'\n  contact: {}\n  license:\n    name: MIT\nservers:\n  - description: Dev\n    url: 'https://workers-queue-demo.your-account.workers.dev'\npaths:\n  '/queues':\n    get:\n      description: 'Lists queues. If you have more than 1,000 queues 1,000 will be returned plus a cursor. The cursor may be used to fetch the next 1,000 queues'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  queues:\n                    type: array\n                    description: Array of queues\n                    items:\n                      $ref: '#/components/schemas/Queue'\n                  cursor:\n                    type: string\n                    example: 06779da6940b431db6e566b4846d64db\n                    description: 'If you have more than 1,000 queues only 1,000 will be returned. Additionally, a cursor will be returned. In this case, you can call this operation again with the cursor value to get the next 1,000 queues.'\n                required:\n                  - queues\n      operationId: list-queues\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: cursor\n          description: 'String used to fetch the next 1,000 queues'\n    post:\n      description: Creates a queue\n      operationId: create-queue\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Queue'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Optional name\n                  example: things todo someday...\n                visibility_timeout:\n                  type: integer\n                  description: Default is 30 seconds\n                  default: 30\n                  minimum: 0\n                  maximum: 43200\n  '/queues/{queue_id}':\n    parameters:\n      - schema:\n          type: string\n        name: queue_id\n        in: path\n        required: true\n        description: 'queue id '\n    get:\n      description: Describes a queue\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Queue'\n        '404':\n          description: Not Found\n      operationId: get-queue\n    delete:\n      description: Deletes a queue and all messages in it.\n      operationId: delete-queue\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n  '/queues/{queue_id}/messages':\n    parameters:\n      - schema:\n          type: string\n        name: queue_id\n        in: path\n        required: true\n        description: 'Queue identifier'\n    get:\n      description: Gets messages from a queue\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  messages:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PoppedMessage'\n                required:\n                  - messages\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n      operationId: get-messages\n      parameters:\n        - schema:\n            type: integer\n            default: 1\n          in: query\n          name: limit\n          description: Maximum number of messages to fetch.\n        - schema:\n            type: integer\n            default: 30\n            minimum: 0\n            maximum: 43200\n          in: query\n          name: visibility_timeout\n          description: Number of seconds to hide returned messages from other clients. Overrides the queue's visibility timeout for this call.\n      summary: ''\n    post:\n      description: Adds a message to a queue\n      operationId: create-message\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageMetadata'\n        '400':\n          description: Bad Request\n        '404':\n          description: Not Found\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message_body:\n                  type: string\n                  description: Your message body\n                  example: A love letter perhaps...\n                ttl:\n                  type: number\n                  description: Seconds to leave the message in the queue before expiring. Default is message never expires. NOT IMPLEMENTED!\n                  minimum: 1\n              required:\n                - message_body\n        description: ''\n  '/queues/{queue_id}/messages/{message_id}':\n    parameters:\n      - schema:\n          type: string\n        name: queue_id\n        in: path\n        required: true\n        description: Queue identifier\n      - schema:\n          type: string\n        name: message_id\n        in: path\n        required: true\n        description: Message identifier\n    delete:\n      description: Deletes a message from a queue\n      operationId: delete-message\n      responses:\n        '200':\n          description: OK\n        '400':\n          description: Bad Request\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: pop_receipt\n          description: Token proving prior receipt of the message\n          required: true\ncomponents:\n  schemas:\n    Message:\n      title: Message\n      allOf:\n        - $ref: '#/components/schemas/MessageMetadata'\n        - $ref: '#/components/schemas/MessageBody'\n    Queue:\n      title: Queue\n      type: object\n      description: Metadata about a queue\n      properties:\n        queue_id:\n          type: string\n          description: Queue identifier\n          example: 01FMBTJ88TSBVDWGEPWANRK8ZR\n        name:\n          type: string\n          description: Optional name metadata\n          example: WOPR Tasks\n        created_time:\n          type: string\n          description: ISO 8601 formatted date string\n          example: '2021-11-13T04:55:03.808Z'\n        visibility_timeout:\n          type: integer\n          description: 'Length of time (in seconds) delivered messages will be invisible to other clients. '\n          example: 30\n          default: 30\n      required:\n        - queue_id\n        - created_time\n        - visibility_timeout\n    MessageBody:\n      title: MessageBody\n      description: The body of the message.\n      type: object\n      properties:\n        message_body:\n          type: string\n          description: Your message body as a raw string or perhaps base64 encoded if you'd like\n          example: SHALL WE PLAY A GAME?\n      required:\n        - message_body\n    MessageMetadata:\n      title: MessageMetadata\n      type: object\n      description: 'Necessary metadata about a message in the queue. Returned when adding a new message to a queue. '\n      properties:\n        queue_id:\n          type: string\n          example: 01FM074SR6ZEM89Z91WH1MZTDX\n          description: Queue identifier for this message\n        message_id:\n          type: string\n          description: Message identifier\n          example: 01FMBT32NYPA2FASH9REZZ3DBV\n        inserted_time:\n          type: string\n          description: 'When the message was added to the queue, ISO 8601 formatted'\n          example: '2021-11-13T04:55:03.808Z'\n      required:\n        - queue_id\n        - message_id\n        - inserted_time\n    PoppedMessage:\n      title: PoppedMessage\n      allOf:\n        - $ref: '#/components/schemas/MessageMetadata'\n        - type: object\n          properties:\n            pop_receipt:\n              type: string\n              description: Token certifying receipt of the message\n              example: 01FMBT0ZCBNMYWV320FBMPGZJ9\n            visibility_timeout:\n              type: number\n              minimum: 0\n              maximum: 43200\n              default: 0\n              example: 30\n              description: Seconds this message will remain hidden from other clients.\n          required:\n            - pop_receipt\n            - visibility_timeout\n        - $ref: '#/components/schemas/MessageBody'\n      description: A message returned from the get-messages operation\n",
			"canonicalURL": "/github.com/ryan-mars/workers-queue-demo@d0ea3800c18eeecb512d7844974a9e8d643bfda0/-/blob/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ryan-mars/workers-queue-demo/blob/d0ea3800c18eeecb512d7844974a9e8d643bfda0/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}