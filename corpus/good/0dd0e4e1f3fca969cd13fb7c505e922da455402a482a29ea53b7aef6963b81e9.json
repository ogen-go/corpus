{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ASCOMInitiative/ASCOMRemote"
		},
		"file": {
			"name": "ASCOMInitiative_ASCOMDeviceAPI_1.0.1-oas3_swagger.yaml",
			"size": 0,
			"path": "Swagger/ASCOMInitiative_ASCOMDeviceAPI_1.0.1-oas3_swagger.yaml",
			"byteSize": 311763,
			"content": "openapi: 3.0.0\ninfo:\n  title: ASCOM Remote Device Server - Access API\n  description: \u003e\n    This restful API provides access to ASCOM devices remotely over the web\n    through the ASCOM Remote Device Server. \n\n\n    ## Parameters and Returned values\n\n    For GET operations, parameters should be placed in the URI string and for\n    PUT operations they should be placed in the body of the message.\n\n\n    Responses, as described below, are returned in JSON format and always\n    include a common set of values including: the client's \n\n    identity number, the client's transaction number, the server's transaction\n    number, the error message, error number and serialised Windows exception.\n\n    The ErrorMessage field will be an empty string, the ErrorNumber field will\n    be zero and the DriverException field will be null if the device driver\n    method executes successfully.\n\n\n    ## HTTP Status Codes and ASCOM Error codes\n\n    The returned HTTP status code refers to the status of the transaction from\n    the perspective of the web application server. \n\n    Under most circumstances you will receive an http return status code of\n    `200`, indicating that the \n\n    operation completed successfully within the web application server at the\n    remote location. This does not necessarily mean\n\n    that the operation completed as expected and you must always check one of\n    the ErrorMessage, ErrorNumber or DriverException fields to confirm that the \n    returned result is valid. \n    \n    \n    An HTTP status code of `400` indicates that the web application server\n    received a bad URI path or parameter value that it cannot \n\n    understand and thus cannot forward the command to the device. Check the body\n    of the response for an error message.\n\n\n    An HTTP status code of `500` indicates an unexpected error within the\n    application server itself, from which it could not recover. Check \n\n    the body of the response for an error message.\n    \n    \n    Version 1.0.1 - Change ClientID and ClientTransactionID from string to \n    integer when supplied as body parameters to match use as query parameters.\n  version: \"1.0.1-oas3\"\npaths:\n  '/{DeviceType}/{DeviceNumber}/Action':\n    put:\n      summary: Invokes the specified device-specific action.\n      description: Invokes the specified device-specific action.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Action:\n                  description: \u003e-\n                    A well known name that represents the action to be carried\n                    out.\n                  type: string\n                Parameters:\n                  description: \u003e-\n                    List of required parameters or an Empty String if none are\n                    required\n                  type: string\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Action\n                - Parameters\n  '/{DeviceType}/{DeviceNumber}/CommandBlind':\n    put:\n      summary: Transmits an arbitrary string to the device\n      description: \u003e-\n        Transmits an arbitrary string to the device and does not wait for a\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{DeviceType}/{DeviceNumber}/CommandBool':\n    put:\n      summary: \u003e-\n        Transmits an arbitrary string to the device and returns a boolean value\n        from the device.\n      description: \u003e-\n        Transmits an arbitrary string to the device and waits for a boolean\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{DeviceType}/{DeviceNumber}/CommandString':\n    put:\n      summary: \u003e-\n        Transmits an arbitrary string to the device and returns a string value\n        from the device.\n      description: \u003e-\n        Transmits an arbitrary string to the device and waits for a string\n        response. Optionally, protocol framing characters may be added to the\n        string before transmission.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/put_devicetype_Devicenumber_commandblind'\n  '/{DeviceType}/{DeviceNumber}/Connected':\n    get:\n      summary: Retrieves the connected state of the device\n      description: Retrieves the connected state of the device\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the connected state of the device\n      description: Sets the connected state of the device\n      tags:\n        - ASCOM Methods Common To All Devices\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Connected:\n                  description: \u003e-\n                    Set True to connect to the device hardware, set False to\n                    disconnect from the device hardware\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Connected\n  '/{DeviceType}/{DeviceNumber}/Description':\n    get:\n      summary: Device description\n      description: The description of the device\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/{DeviceType}/{DeviceNumber}/Driverinfo':\n    get:\n      summary: Device driver description\n      description: The description of the driver\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/{DeviceType}/{DeviceNumber}/DriverVersion':\n    get:\n      summary: Driver Version\n      description: A string containing only the major and minor version of the driver.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/{DeviceType}/{DeviceNumber}/Name':\n    get:\n      summary: Device name\n      description: The name of the device\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/{DeviceType}/{DeviceNumber}/SupportedActions':\n    get:\n      summary: Returns the list of action names supported by this driver.\n      description: Returns the list of action names supported by this driver.\n      parameters:\n        - $ref: '#/components/parameters/DeviceType'\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ASCOM Methods Common To All Devices\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/MaxSwitch':\n    get:\n      summary: The number of switch devices managed by this driver\n      description: \u003e-\n        Returns the number of switch devices managed by this driver. Devices are\n        numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/CanWrite':\n    get:\n      summary: Indicates whether the specified switch device can be written to\n      description: \u003e-\n        Reports if the specified switch device can be written to, default true.\n        This is false if the device cannot be written to, for example a limit\n        switch or a sensor.  Devices are numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/GetSwitch':\n    get:\n      summary: Return the state of switch device id as a boolean\n      description: \u003e-\n        Return the state of switch device id as a boolean.  Devices are numbered\n        from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/GetSwitchDescription':\n    get:\n      summary: Gets the description of the specified switch device\n      description: \u003e-\n        Gets the description of the specified switch device. This is to allow a\n        fuller description of the device to be returned, for example for a tool\n        tip. Devices are numbered from 0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/GetSwitchName':\n    get:\n      summary: Gets the name of the specified switch device\n      description: \u003e-\n        Gets the name of the specified switch device. Devices are numbered from\n        0 to MaxSwitch - 1\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/GetSwitchValue':\n    get:\n      summary: Gets the value of the specified switch device as a double\n      description: \u003e-\n        Gets the value of the specified switch device as a double. Devices are\n        numbered from 0 to MaxSwitch - 1, The value of this switch is expected\n        to be between MinSwitchValue and MaxSwitchValue.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/MinSwitchValue':\n    get:\n      summary: Gets the minimum value of the specified switch device as a double\n      description: \u003e-\n        Gets the minimum value of the specified switch device as a double.\n        Devices are numbered from 0 to MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/MaxSwitchValue':\n    get:\n      summary: Gets the maximum value of the specified switch device as a double\n      description: \u003e-\n        Gets the maximum value of the specified switch device as a double.\n        Devices are numbered from 0 to MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Switch/{DeviceNumber}/SetSwitch':\n    put:\n      summary: 'Sets a switch controller device to the specified state, true or false'\n      description: 'Sets a switch controller device to the specified state, true or false.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                  format: int32\n                State:\n                  description: The required control state (True or False)\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Id\n                - State\n  '/Switch/{DeviceNumber}/SetSwitchName':\n    put:\n      summary: Sets a switch device name to the specified value\n      description: Sets a switch device name to the specified value.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                Name:\n                  description: The name of the device\n                  type: string\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Id\n                - Name\n  '/Switch/{DeviceNumber}/SetSwitchValue':\n    put:\n      summary: Sets a switch device value to the specified value\n      description: Sets a switch device value to the specified value.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Id:\n                  description: The device number (0 to MaxSwitch - 1)\n                  type: integer\n                  format: int32\n                Value:\n                  description: \u003e-\n                    The value to be set, between MinSwitchValue and\n                    MaxSwitchValue\n                  type: number\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Id\n                - Value\n  '/Switch/{DeviceNumber}/SwitchStep':\n    get:\n      summary: \u003e-\n        Returns the step size that this device supports (the difference between\n        successive values of the device).\n      description: \u003e-\n        Returns the step size that this device supports (the difference between\n        successive values of the device). Devices are numbered from 0 to\n        MaxSwitch - 1.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/SwitchNumberQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Switch Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/SafetyMonitor/{DeviceNumber}/IsSafe':\n    get:\n      summary: Indicates whether the monitored state is safe for use.\n      description: \u003e-\n        Indicates whether the monitored state is safe for use. True if the state\n        is safe, False if it is unsafe.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - SafetyMonitor Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/Altitude':\n    get:\n      summary: The dome altitude\n      description: \u003e-\n        The dome altitude (degrees, horizon zero and increasing positive to 90\n        zenith).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/AtHome':\n    get:\n      summary: Indicates whether the dome is in the home position.\n      description: \u003e-\n        Indicates whether the dome is in the home position. This is normally\n        used following a FindHome()  operation. The value is reset with any\n        azimuth slew operation that moves the dome away from the home position.\n        AtHome may also become true durng normal slew operations, if the dome\n        passes through the home position and the dome controller hardware is\n        capable of detecting that; or at the end of a slew operation if the dome\n        comes to rest at the home position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/AtPark':\n    get:\n      summary: Indicates whether the telescope is at the park position\n      description: \u003e-\n        True if the dome is in the programmed park position. Set only following\n        a Park() operation and reset with any slew operation.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/Azimuth':\n    get:\n      summary: The dome azimuth\n      description: \u003e-\n        Returns the dome azimuth (degrees, North zero and increasing clockwise,\n        i.e., 90 East, 180 South, 270 West)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanFindHome':\n    get:\n      summary: Indicates whether the dome can find the home position.\n      description: True if the dome can move to the home position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanPark':\n    get:\n      summary: Indicates whether the dome can be parked.\n      description: True if the dome is capable of programmed parking (Park() method)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSetAltitude':\n    get:\n      summary: Indicates whether the dome altitude can be set\n      description: True if driver is capable of setting the dome altitude.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSetAzimuth':\n    get:\n      summary: Indicates whether the dome azimuth can be set\n      description: True if driver is capable of setting the dome azimuth.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSetPark':\n    get:\n      summary: Indicates whether the dome park position can be set\n      description: True if driver is capable of setting the dome park position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSetShutter':\n    get:\n      summary: Indicates whether the dome shutter can be opened\n      description: True if driver is capable of automatically operating shutter\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSlave':\n    get:\n      summary: Indicates whether the dome supports slaving to a telescope\n      description: True if driver is capable of slaving to a telescope.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/CanSyncAzimuth':\n    get:\n      summary: Indicates whether the dome azimuth position can be synched\n      description: \u003e-\n        True if driver is capable of synchronizing the dome azimuth position\n        using the SyncToAzimuth(Double) method.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/ShutterStatus':\n    get:\n      summary: Status of the dome shutter or roll-off roof\n      description: \u003e-\n        Returns the status of the dome shutter or roll-off roof. 0 = Open, 1 =\n        Closed, 2 = Opening, 3 = Closing, 4 = Shutter status error\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/Slaved':\n    get:\n      summary: Indicates whether the dome is slaved to the telescope\n      description: 'True if the dome is slaved to the telescope in its hardware, else False.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets whether the dome is slaved to the telescope\n      description: Sets the current subframe height.\n      tags:\n        - Dome Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Slaved:\n                  description: 'True if telescope is slaved to dome, otherwise false'\n                  type: boolean\n                  default: false\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Slaved\n  '/Dome/{DeviceNumber}/Slewing':\n    get:\n      summary: Indicates whether the any part of the dome is moving\n      description: \u003e-\n        True if any part of the dome is currently moving, False if all dome\n        components are steady.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Dome/{DeviceNumber}/AbortSlew':\n    put:\n      summary: Immediately cancel current dome operation.\n      description: \u003e-\n        Calling this method will immediately disable hardware slewing (Slaved\n        will become False).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/CloseShutter':\n    put:\n      summary: Close the shutter or otherwise shield telescope from the sky.\n      description: Close the shutter or otherwise shield telescope from the sky.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/FindHome':\n    put:\n      summary: Start operation to search for the dome home position.\n      description: \u003e-\n        After Home position is established initializes Azimuth to the default\n        value and sets the AtHome flag.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/OpenShutter':\n    put:\n      summary: Open shutter or otherwise expose telescope to the sky.\n      description: Open shutter or otherwise expose telescope to the sky.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/Park':\n    put:\n      summary: Rotate dome in azimuth to park position.\n      description: 'After assuming programmed park position, sets AtPark flag.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/SetPark':\n    put:\n      summary: \u003e-\n        Set the current azimuth, altitude position of dome to be the park\n        position\n      description: \u003e-\n        Set the current azimuth, altitude position of dome to be the park\n        position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Dome/{DeviceNumber}/SlewToAltitude':\n    put:\n      summary: Slew the dome to the given altitude position.\n      description: Slew the dome to the given altitude position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Altitude:\n                  description: \u003e-\n                    Target dome altitude (degrees, horizon zero and increasing\n                    positive to 90 zenith)\n                  type: number\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Altitude\n  '/Dome/{DeviceNumber}/SlewToAzimuth':\n    put:\n      summary: Slew the dome to the given azimuth position.\n      description: Slew the dome to the given azimuth position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'\n  '/Dome/{DeviceNumber}/SyncToAzimuth':\n    put:\n      summary: Synchronize the current position of the dome to the given azimuth.\n      description: Synchronize the current position of the dome to the given azimuth.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Dome Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_slewtoazimuth'\n  '/Camera/{DeviceNumber}/BayerOffsetX':\n    get:\n      summary: Returns the X offset of the Bayer matrix.\n      description: 'Returns the X offset of the Bayer matrix, as defined in SensorType.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/BayerOffsetY':\n    get:\n      summary: Returns the Y offset of the Bayer matrix.\n      description: 'Returns the Y offset of the Bayer matrix, as defined in SensorType.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/BinX':\n    get:\n      summary: Returns the binning factor for the X axis.\n      description: Returns the binning factor for the X axis.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the binning factor for the X axis.\n      description: Sets the binning factor for the X axis.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                BinX:\n                  description: The X binning value\n                  type: integer\n                  format: int32\n                  default: 1\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - BinX\n  '/Camera/{DeviceNumber}/BinY':\n    get:\n      summary: Returns the binning factor for the Y axis.\n      description: Returns the binning factor for the Y axis.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the binning factor for the Y axis.\n      description: Sets the binning factor for the Y axis.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                BinY:\n                  description: The Y binning value\n                  type: integer\n                  format: int32\n                  default: 1\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - BinY\n  '/Camera/{DeviceNumber}/CameraState':\n    get:\n      summary: Returns the camera operational state.\n      description: \u003e-\n        Returns the current camera operational state as an integer. 0 =\n        CameraIdle , 1 = CameraWaiting , 2 = CameraExposing , 3 = CameraReading\n        , 4 = CameraDownload , 5 = CameraError\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CameraXSize':\n    get:\n      summary: Returns the width of the CCD camera chip.\n      description: Returns the width of the CCD camera chip in unbinned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CameraYSize':\n    get:\n      summary: Returns the height of the CCD camera chip.\n      description: Returns the height of the CCD camera chip in unbinned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanAbortExposure':\n    get:\n      summary: Indicates whether the camera can abort exposures.\n      description: Returns true if the camera can abort exposures; false if not.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanAsymmetricBin':\n    get:\n      summary: Indicates whether the camera supports asymmetric binning\n      description: Returns a flag showing whether this camera supports asymmetric binning\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanFastReadout':\n    get:\n      summary: Indicates whether the camera has a fast readout mode.\n      description: Indicates whether the camera has a fast readout mode.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanGetCoolerPower':\n    get:\n      summary: Indicates whether the camera's cooler power setting can be read.\n      description: 'If true, the camera''s cooler power setting can be read.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanPulseGuide':\n    get:\n      summary: Returns a flag indicating whether this camera supports pulse guiding\n      description: Returns a flag indicating whether this camera supports pulse guiding.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanSetCCDTemperature':\n    get:\n      summary: \u003e-\n        Returns a flag indicating whether this camera supports setting the CCD\n        temperature\n      description: \u003e-\n        Returns a flag indicatig whether this camera supports setting the CCD\n        temperature\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CanStopExposure':\n    get:\n      summary: \u003e-\n        Returns a flag indicating whether this camera can stop an exposure that\n        is in progress\n      description: \u003e-\n        Returns a flag indicating whether this camera can stop an exposure that\n        is in progress\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CCDTemperature':\n    get:\n      summary: Returns the current CCD temperature\n      description: Returns the current CCD temperature in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/CoolerOn':\n    get:\n      summary: Returns the current cooler on/off state.\n      description: Returns the current cooler on/off state.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Turns the camera cooler on and off\n      description: 'Turns on and off the camera cooler. True = cooler on, False = cooler off'\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                CoolerOn:\n                  description: Cooler state\n                  type: boolean\n                  default: true\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - CoolerOn\n  '/Camera/{DeviceNumber}/CoolerPower':\n    get:\n      summary: Returns the present cooler power level\n      description: 'Returns the present cooler power level, in percent.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ElectronsPerADU':\n    get:\n      summary: Returns the gain of the camera\n      description: Returns the gain of the camera in photoelectrons per A/D unit.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ExposureMax':\n    get:\n      summary: Returns the maximum exposure time supported by StartExposure.\n      description: Returns the maximum exposure time supported by StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ExposureMin':\n    get:\n      summary: Returns the Minimium exposure time\n      description: \u003e-\n        Returns the Minimium exposure time in seconds that the camera supports\n        through StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ExposureResolution':\n    get:\n      summary: \u003e-\n        Returns the smallest increment in exposure time supported by\n        StartExposure.\n      description: \u003e-\n        Returns the smallest increment in exposure time supported by\n        StartExposure.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/FastReadout':\n    get:\n      summary: Returns whenther Fast Readout Mode is enabled.\n      description: Returns whenther Fast Readout Mode is enabled.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets whether Fast Readout Mode is enabled.\n      description: Sets whether Fast Readout Mode is enabled.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                FastReadout:\n                  description: True to enable fast readout mode\n                  type: boolean\n                  default: false\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - FastReadout\n  '/Camera/{DeviceNumber}/FullWellCapacity':\n    get:\n      summary: Reports the full well capacity of the camera\n      description: \u003e-\n        Reports the full well capacity of the camera in electrons, at the\n        current camera settings (binning, SetupDialog settings, etc.).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/Gain':\n    get:\n      summary: Returns an index into the Gains array\n      description: Returns an index into the Gains array for the selected camera gain.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the binning factor for the X axis.\n      description: Sets the binning factor for the X axis.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Gain:\n                  description: Index of the current camera gain in the Gains string array.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Gain\n  '/Camera/{DeviceNumber}/GainMax':\n    get:\n      summary: Maximum value of Gain\n      description: Returns the maximum value of Gain.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/GainMin':\n    get:\n      summary: Minimum value of Gain\n      description: Returns the Minimum value of Gain.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/Gains':\n    get:\n      summary: Gains supported by the camera\n      description: Returns the Gains supported by the camera.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/HasShutter':\n    get:\n      summary: Indicates whether the camera has a mechanical shutter\n      description: Returns a flag indicating whether this camera has a mechanical shutter.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/HeatSinkTemperature':\n    get:\n      summary: Returns the current heat sink temperature.\n      description: \u003e-\n        Returns the current heat sink temperature (called \"ambient temperature\"\n        by some manufacturers) in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ImageArray':\n    get:\n      summary: Returns an array of int containing the exposure pixel values\n      description: \u003e\n        Returns an array of int(32bit) containing the pixel values from the last\n        exposure. This call can return either a 2 dimension (monochrome images)\n        or 3 dimension (colour or multi-plane images) array of size NumX \\*\n        NumY  or NumX \\* NumY \\* NumPlanes. Where applicable, the size of\n        NumPlanes has to be determined by inspection of the returned Array.\n\n\n        Since 32bit integers are always returned by this call, the returned Type\n        value (0 = Unknown, 1 = short(16bit), 2 = int(32bit), 3 = Double) is\n        always 2. The number of planes is given in the returned Rank value.\n\n\n        When deserialising to an object it helps enormously to know the array\n        Rank beforehand so that the correct data class can be used. This can be\n        achieved through a regular expression or by direct parsing of the\n        returned JSON string to extract the Type and Rank values before\n        deserialising.\n\n\n        This regular expression accomplishes the extraction into two named\n        groups: Type and Rank:\n\n\n        __^*\"Type\":(?\\d*),\"Rank\":(?\\d*)__\n\n\n        which can then be used to select the correct deserialisation data class.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ImageArrayVariant':\n    get:\n      summary: Returns an array of int containing the exposure pixel values\n      description: \u003e\n        Returns an array containing the pixel values from the last exposure.\n        This call can return either a 2 dimension (monochrome images) or 3\n        dimension (colour or multi-plane images) array of size NumX \\* NumY  or\n        NumX \\* NumY \\* NumPlanes. Where applicable, the size of NumPlanes has\n        to be determined by inspection of the returned Array.\n\n\n        This call can return values as short(16bit) integers, int(32bit)\n        integers or double floating point values. The nature of the returned\n        values is given in the Type parameter: 0 = Unknown, 1 = short(16bit), 2\n        = int(32bit), 3 = Double. The number of planes is given in the returned\n        Rank value.\n\n\n        When deserialising to an object it helps enormously to know the Type and\n        Rank beforehand so that the correct data class can be used. This can be\n        achieved through a regular expression or by direct parsing of the\n        returned JSON string to extract the Type and Rank values before\n        deserialising.\n\n\n        This regular expression accomplishes the extraction into two named\n        groups: Type and Rank:\n\n\n        __^*\"Type\":(?\\d*),\"Rank\":(?\\d*)__\n\n\n        which can then be used to select the correct deserialisation data class.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImageArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ImageReady':\n    get:\n      summary: Indicates that an image is ready to be downloaded\n      description: \u003e-\n        Returns a flag indicating whether the image is ready to be downloaded\n        from the camera.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/IsPulseGuiding':\n    get:\n      summary: Indicates that the camera is pulse guideing.\n      description: \u003e-\n        Returns a flag indicating whether the camera is currrently in a\n        PulseGuide operation.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/LastExposureDuration':\n    get:\n      summary: Duration of the last exposure\n      description: \u003e-\n        Reports the actual exposure duration in seconds (i.e. shutter open\n        time).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/LastExposureStartTime':\n    get:\n      summary: Start time of the last exposure in FITS standard format.\n      description: \u003e-\n        Reports the actual exposure start in the FITS-standard\n        CCYY-MM-DDThh:mm:ss[.sss...] format.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/MaxADU':\n    get:\n      summary: Camera's maximum ADU value\n      description: Reports the maximum ADU value the camera can produce.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/MaxBinX':\n    get:\n      summary: Maximum  binning for the camera X axis\n      description: Returns the maximum allowed binning for the X camera axis\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/MaxBinY':\n    get:\n      summary: Maximum  binning for the camera Y axis\n      description: Returns the maximum allowed binning for the Y camera axis\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/NumX':\n    get:\n      summary: Returns the current subframe width\n      description: \u003e-\n        Returns the current subframe width, if binning is active, value is in\n        binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the current subframe width\n      description: Sets the current subframe width.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                NumX:\n                  description: \u003e-\n                    Sets the subframe width, if binning is active, value is in\n                    binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - NumX\n  '/Camera/{DeviceNumber}/NumY':\n    get:\n      summary: Returns the current subframe height\n      description: \u003e-\n        Returns the current subframe height, if binning is active, value is in\n        binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the current subframe height\n      description: Sets the current subframe height.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                NumY:\n                  description: \u003e-\n                    Sets the subframe height, if binning is active, value is in\n                    binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - NumY\n  '/Camera/{DeviceNumber}/PercentCompleted':\n    get:\n      summary: Indicates percentage completeness of the current operation\n      description: \u003e-\n        Returns the percentage of the current operation that is complete. If\n        valid, returns an integer between 0 and 100, where 0 indicates 0%\n        progress (function just started) and 100 indicates 100% progress (i.e.\n        completion).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/PixelSizeX':\n    get:\n      summary: Width of CCD chip pixels (microns)\n      description: Returns the width of the CCD chip pixels in microns.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/PixelSizeY':\n    get:\n      summary: Height of CCD chip pixels (microns)\n      description: Returns the Height of the CCD chip pixels in microns.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/ReadoutMode':\n    get:\n      summary: \u003e-\n        Indicates the canera's readout mode as an index into the array\n        ReadoutModes\n      description: \u003e-\n        ReadoutMode is an index into the array ReadoutModes and returns the\n        desired readout mode for the camera. Defaults to 0 if not set.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Set the camera's readout mode\n      description: Sets the ReadoutMode as an index into the array ReadoutModes.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                ReadoutMode:\n                  description: \u003e-\n                    Index into the ReadoutModes array of string readout mode\n                    names indicating the camera's current readout mode.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - ReadoutMode\n  '/Camera/{DeviceNumber}/ReadoutModes':\n    get:\n      summary: List of available readout modes\n      description: \u003e-\n        This property provides an array of strings, each of which describes an\n        available readout mode of the camera. At least one string must be\n        present in the list.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/SensorName':\n    get:\n      summary: Sensor name\n      description: The name of the sensor used within the camera.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/SensorType':\n    get:\n      summary: \u003e-\n        Type of information returned by the the camera sensor (monochrome or\n        colour)\n      description: \u003e\n        Returns a value indicating whether the sensor is monochrome, or what\n        Bayer matrix it encodes. Where: \n\n        - 0 = Monochrome,\n\n        - 1 = Colour not requiring Bayer decoding\n\n        - 2 = RGGB Bayer encoding\n\n        - 3 = CMYG Bayer encoding\n\n        - 4 = CMYG2 Bayer encoding\n\n        - 5 = LRGB TRUESENSE Bayer encoding.\n\n\n        Please see the ASCOM Help fie for more informaiton on the SensorType.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Camera/{DeviceNumber}/SetCCDTemperature':\n    get:\n      summary: Returns the current camera cooler setpoint in degrees Celsius.\n      description: Returns the current camera cooler setpoint in degrees Celsius.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Set the camera's cooler setpoint (degrees Celsius).\n      description: Set's the camera's cooler setpoint in degrees Celsius.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SetCCDTemperature:\n                  description: Temperature set point (degrees Celsius).\n                  type: number\n                  default: -10\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SetCCDTemperature\n  '/Camera/{DeviceNumber}/StartX':\n    get:\n      summary: Return the current subframe X axis start position\n      description: \u003e-\n        Sets the subframe start position for the X axis (0 based) and returns\n        the current value. If binning is active, value is in binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the current subframe X axis start position\n      description: Sets the current subframe X axis start position in binned pixels.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                StartX:\n                  description: The subframe X axis start position in binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - StartX\n  '/Camera/{DeviceNumber}/StartY':\n    get:\n      summary: Return the current subframe Y axis start position\n      description: \u003e-\n        Sets the subframe start position for the Y axis (0 based) and returns\n        the current value. If binning is active, value is in binned pixels.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the current subframe Y axis start position\n      description: Sets the current subframe Y axis start position in binned pixels.\n      tags:\n        - Camera Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                StartY:\n                  description: The subframe Y axis start position in binned pixels.\n                  type: integer\n                  format: int32\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - StartY\n  '/Camera/{DeviceNumber}/AbortExposure':\n    put:\n      summary: Aborts the current exposure\n      description: \u003e-\n        Aborts the current exposure, if any, and returns the camera to Idle\n        state.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Camera/{DeviceNumber}/PulseGuide':\n    put:\n      summary: Pulse guide in the specified direction for the specified time.\n      description: \u003e-\n        Activates the Camera's mount control sytem to instruct the mount to move\n        in a particular direction for a given period of time\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Direction:\n                  description: \u003e-\n                    Direction of movement (0 = North, 1 = South, 2 = East, 3 =\n                    West)\n                  type: integer\n                  format: int32\n                Duration:\n                  description: Duration of movement in milli-seconds\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Direction\n                - Duration\n  '/Camera/{DeviceNumber}/StartExposure':\n    put:\n      summary: Starts an exposure\n      description: \u003e-\n        Starts an exposure. Use ImageReady to check when the exposure is\n        complete.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Duration:\n                  description: Duration of exposure in seconds\n                  type: integer\n                  format: int32\n                Light:\n                  description: 'True if light frame, false if dark frame.'\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Duration\n                - Light\n  '/Camera/{DeviceNumber}/StopExposure':\n    put:\n      summary: Stops the current exposure\n      description: \u003e-\n        Stops the current exposure, if any. If an exposure is in progress, the\n        readout process is initiated. Ignored if readout is already in process.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Camera Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/ObservingConditions/{DeviceNumber}/AveragePeriod':\n    get:\n      summary: Returns the time period over which observations will be averaged\n      description: Gets the time period over which observations will be averaged\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the time period over which observations will be averaged\n      description: Sets the time period over which observations will be averaged\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                AveragePeriod:\n                  description: Time period (hours) over which to average sensor readings\n                  type: number\n                  default: 0.15\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - AveragePeriod\n  '/ObservingConditions/{DeviceNumber}/CloudCover':\n    get:\n      summary: Returns the amount of sky obscured by cloud\n      description: Gets the percentage of the sky obscured by cloud\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/DewPoint':\n    get:\n      summary: Returns the atmospheric dew point at the observatory\n      description: Gets the atmospheric dew point at the observatory reported in °C.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/Humidity':\n    get:\n      summary: Returns the atmospheric humidity at the observatory\n      description: Gets the atmospheric  humidity (%) at the observatory\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/Pressure':\n    get:\n      summary: Returns the atmospheric pressure at the observatory.\n      description: \u003e-\n        Gets the atmospheric pressure in hectoPascals at the observatory's\n        altitude - NOT reduced to sea level.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/RainRate':\n    get:\n      summary: Returns the rain rate at the observatory.\n      description: Gets the rain rate (mm/hour) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/SkyBrightness':\n    get:\n      summary: Returns the sky brightness at the observatory\n      description: Gets the sky brightness at the observatory (Lux)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/SkyQuality':\n    get:\n      summary: Returns the sky quality at the observatory\n      description: \u003e-\n        Gets the sky quality at the observatory (magnitudes per square arc\n        second)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/SkyTemperature':\n    get:\n      summary: Returns the sky temperature at the observatory\n      description: Gets the sky temperature(°C) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/StarFWHM':\n    get:\n      summary: Returns the seeing at the observatory\n      description: \u003e-\n        Gets the seeing at the observatory measured as star full width half\n        maximum (FWHM) in arc secs.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/Temperature':\n    get:\n      summary: Returns the temperature at the observatory\n      description: Gets the temperature(°C) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/WindDirection':\n    get:\n      summary: Returns the wind direction at the observatory\n      description: \u003e-\n        Gets the wind direction. The returned value must be between 0.0 and\n        360.0, interpreted according to the metereological standard, where a\n        special value of 0.0 is returned when the wind speed is 0.0. Wind\n        direction is measured clockwise from north, through east, where\n        East=90.0, South=180.0, West=270.0 and North=360.0.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/WindGust':\n    get:\n      summary: \u003e-\n        Returns the peak 3 second wind gust at the observatory over the last 2\n        minutes\n      description: \u003e-\n        Gets the peak 3 second wind gust(m/s) at the observatory over the last 2\n        minutes.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/WindSpeed':\n    get:\n      summary: Returns the wind speed at the observatory.\n      description: Gets the wind speed(m/s) at the observatory.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/Refresh':\n    put:\n      summary: Refreshes sensor values from hardware.\n      description: \u003e-\n        Forces the driver to immediately query its attached hardware to refresh\n        sensor values.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/ObservingConditions/{DeviceNumber}/SensorDescription':\n    get:\n      summary: Return a sensor description\n      description: \u003e-\n        Gets a description of the sensor with the name specified in the\n        PropertyName parameter\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - name: SensorName\n          description: Name of the sensor whose description is required\n          in: query\n          required: true\n          schema:\n            type: string\n            default: Pressure\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/ObservingConditions/{DeviceNumber}/TimeSinceLastUpdate':\n    get:\n      summary: Return the time since the sensor value was last updated\n      description: \u003e-\n        Gets the time since the sensor specified in the TimeSinceLastUpdate\n        parameter was last updated\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - name: SensorName\n          description: Name of the sensor whose description is required\n          in: query\n          required: true\n          schema:\n            type: string\n            default: Pressure\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - ObservingConditions Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/FilterWheel/{DeviceNumber}/FocusOffsets':\n    get:\n      summary: Filter focus offsets\n      description: An integer array of filter focus offsets.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/FilterWheel/{DeviceNumber}/Names':\n    get:\n      summary: Filter wheel filter names\n      description: The names of the filters\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/FilterWheel/{DeviceNumber}/Position':\n    get:\n      summary: Returns the current filter wheel position\n      description: Returns the current filter wheel position\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - FilterWheel Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the filter wheel position\n      description: Sets the filter wheel position\n      tags:\n        - FilterWheel Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Position:\n                  description: The number of the filter wheel position to select\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/Focuser/{DeviceNumber}/Absolute':\n    get:\n      summary: Indicates whether the focuser is capable of absolute position.\n      description: \u003e-\n        True if the focuser is capable of absolute position; that is, being\n        commanded to a specific step location.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/IsMoving':\n    get:\n      summary: Indicates whether the focuser is currently moving.\n      description: \u003e-\n        True if the focuser is currently moving to a new position. False if the\n        focuser is stationary.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/MaxIncrement':\n    get:\n      summary: Returns the focuser's maximum increment size.\n      description: \u003e-\n        Maximum increment size allowed by the focuser; i.e. the maximum number\n        of steps allowed in one move operation.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/MaxStep':\n    get:\n      summary: Returns the focuser's maximum step size.\n      description: Maximum step position permitted.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/Position':\n    get:\n      summary: Returns the focuser's current position.\n      description: 'Current focuser position, in steps.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/StepSize':\n    get:\n      summary: Returns the focuser's step size.\n      description: Step size (microns) for the focuser.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/TempComp':\n    get:\n      summary: Retrieves the state of temperature compensation mode\n      description: \u003e-\n        Gets the state of temperature compensation mode (if available), else\n        always False.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the device's temperature compensation mode.\n      description: Sets the state of temperature compensation mode.\n      tags:\n        - Focuser Specific Methods\n      parameters:\n        - name: DeviceNumber\n          description: Zero based device number as set on the server\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                TempComp:\n                  description: \u003e-\n                    Set true to enable the focuser's temperature compensation\n                    mode, otherwise false for normal operation.\n                  type: boolean\n                Client:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionIDForm:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - TempComp\n  '/Focuser/{DeviceNumber}/TempCompAvailable':\n    get:\n      summary: Indicates whether the focuser has temperature compensation.\n      description: True if focuser has temperature compensation available.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/Temperature':\n    get:\n      summary: Returns the focuser's current temperature.\n      description: Current ambient temperature as measured by the focuser.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Focuser/{DeviceNumber}/Halt':\n    put:\n      summary: Immediatley stops focuser motion.\n      description: \u003e-\n        Immediately stop any focuser motion due to a previous Move(Int32) method\n        call.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Focuser/{DeviceNumber}/Move':\n    put:\n      summary: Moves the focuser to a new position.\n      description: \u003e-\n        Moves the focuser by the specified amount or to the specified position\n        depending on the value of the Absolute property.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Focuser Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Position:\n                  description: \u003e-\n                    Step distance or absolute position, depending on the value\n                    of the Absolute property\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/Rotator/{DeviceNumber}/CanReverse':\n    get:\n      summary: IIndicates whether the Rotator supports the Reverse method.\n      description: True if the Rotator supports the Reverse method.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Rotator/{DeviceNumber}/IsMoving':\n    get:\n      summary: Indicates whether the rotator is currently moving.\n      description: \u003e-\n        True if the rotator is currently moving to a new position. False if the\n        focuser is stationary.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Rotator/{DeviceNumber}/Position':\n    get:\n      summary: Returns the rotator's current position.\n      description: 'Current instantaneous Rotator position, in degrees.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Rotator/{DeviceNumber}/Reverse':\n    get:\n      summary: Returns the rotator’s Reverse state.\n      description: Returns the rotator’s Reverse state.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the rotator’s Reverse state.\n      description: Sets the rotator’s Reverse state.\n      tags:\n        - Rotator Specific Methods\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Reverse:\n                  description: \u003e-\n                    True if the rotation and angular direction must be reversed\n                    to match the optical characteristcs\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Reverse\n  '/Rotator/{DeviceNumber}/StepSize':\n    get:\n      summary: Returns the minimum StepSize\n      description: 'The minimum StepSize, in degrees.'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Rotator/{DeviceNumber}/TargetPosition':\n    get:\n      summary: Returns the destination position angle.\n      description: The destination position angle for Move() and MoveAbsolute().\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Rotator/{DeviceNumber}/Halt':\n    put:\n      summary: Immediatley stops rotator motion.\n      description: \u003e-\n        Immediately stop any Rotator motion due to a previous Move or\n        MoveAbsolute method call.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Rotator/{DeviceNumber}/Move':\n    put:\n      summary: Moves the rotator to a new relative position.\n      description: \u003e-\n        Causes the rotator to move Position degrees relative to the current\n        Position value.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Position:\n                  description: Relative position to move in degrees from current Position.\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/Rotator/{DeviceNumber}/MoveAbsolute':\n    put:\n      summary: Moves the rotator to a new absolute position.\n      description: Causes the rotator to move the absolute position of Position degrees.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Rotator Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Position:\n                  description: Absolute position in degrees.\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Position\n  '/Telescope/{DeviceNumber}/AlignmentMode':\n    get:\n      summary: Returns the current mount alignment mode\n      description: \u003e-\n        Returns the alignment mode of the mount (Alt/Az, Polar, German Polar). \n        The alignment mode is specified as an integer value from the\n        AlignmentModes Enum.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/Altitude':\n    get:\n      summary: Returns the mount's Altitude above the horizon.\n      description: \u003e-\n        The Altitude above the local horizon of the telescope's current position\n        (degrees, positive up)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/ApertureArea':\n    get:\n      summary: Returns the telescope's aperture.\n      description: \u003e-\n        The area of the telescope's aperture, taking into account any\n        obstructions (square meters)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/ApertureDiameter':\n    get:\n      summary: Returns the telescope's effective aperture.\n      description: The telescope's effective aperture diameter (meters)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/AtHome':\n    get:\n      summary: Indicates whether the mount is at the home position.\n      description: \u003e-\n        True if the mount is stopped in the Home position. Set only following a\n        FindHome()  operation, and reset with any slew operation. This property\n        must be False if the telescope does not support homing.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/AtPark':\n    get:\n      summary: Indicates whether the telescope is at the park position.\n      description: \u003e-\n        True if the telescope has been put into the parked state by the seee\n        Park()  method. Set False by calling the Unpark() method.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/Azimuth':\n    get:\n      summary: Returns the telescope's aperture.\n      description: \u003e-\n        The azimuth at the local horizon of the telescope's current position\n        (degrees, North-referenced, positive East/clockwise).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanFindHome':\n    get:\n      summary: Indicates whether the mount can find the home position.\n      description: \u003e-\n        True if this telescope is capable of programmed finding its home\n        position (FindHome()  method).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanPark':\n    get:\n      summary: Indicates whether the telescope can be parked.\n      description: True if this telescope is capable of programmed parking (Park() method)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanPulseGuide':\n    get:\n      summary: Indicates whether the telescope can be pulse guided.\n      description: \u003e-\n        True if this telescope is capable of software-pulsed guiding (via the\n        PulseGuide(GuideDirections, Int32) method)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetDeclinationRate':\n    get:\n      summary: Indicates whether the DeclinationRate property can be changed.\n      description: \u003e-\n        True if the DeclinationRate property can be changed to provide offset\n        tracking in the declination axis.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetGuideRates':\n    get:\n      summary: Indicates whether the DeclinationRate property can be changed.\n      description: \u003e-\n        True if the guide rate properties used for PulseGuide(GuideDirections,\n        Int32) can ba adjusted.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetPark':\n    get:\n      summary: Indicates whether the telescope park position can be set.\n      description: \u003e-\n        True if this telescope is capable of programmed setting of its park\n        position (SetPark() method)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetPierSide':\n    get:\n      summary: Indicates whether the telescope SideOfPier can be set.\n      description: \u003e-\n        True if the SideOfPier property can be set, meaning that the mount can\n        be forced to flip.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetRightAscensionRate':\n    get:\n      summary: Indicates whether the RightAscensionRate property can be changed.\n      description: \u003e-\n        True if the RightAscensionRate property can be changed to provide offset\n        tracking in the right ascension axis. .\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSetTracking':\n    get:\n      summary: Indicates whether the Tracking property can be changed.\n      description: \u003e-\n        True if the Tracking property can be changed, turning telescope sidereal\n        tracking on and off.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSlew':\n    get:\n      summary: Indicates whether the telescope can slew synchronously.\n      description: \u003e-\n        True if this telescope is capable of programmed slewing (synchronous or\n        asynchronous) to equatorial coordinates\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSlewAltAz':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can slew synchronously to AltAz\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed slewing (synchronous or\n        asynchronous) to local horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSlewAltAzAsync':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can slew asynchronously to AltAz\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed asynchronous slewing to\n        local horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSlewAsync':\n    get:\n      summary: Indicates whether the telescope can slew asynchronously.\n      description: \u003e-\n        True if this telescope is capable of programmed asynchronous slewing to\n        equatorial coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSync':\n    get:\n      summary: Indicates whether the telescope can sync to equatorial coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed synching to equatorial\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanSyncAltAz':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope can sync to local horizontal\n        coordinates.\n      description: \u003e-\n        True if this telescope is capable of programmed synching to local\n        horizontal coordinates\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/Declination':\n    get:\n      summary: Returns the telescope's declination.\n      description: \u003e-\n        The declination (degrees) of the telescope's current equatorial\n        coordinates, in the coordinate system given by the EquatorialSystem\n        property. Reading the property will raise an error if the value is\n        unavailable.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/DeclinationRate':\n    get:\n      summary: Returns the telescope's declination tracking rate.\n      description: 'The declination tracking rate (arcseconds per second, default = 0.0)'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the telescope's declination tracking rate.\n      description: Sets the declination tracking rate (arcseconds per second)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                DeclinationRate:\n                  description: Declination tracking rate (arcseconds per second)\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - DeclinationRate\n  '/Telescope/{DeviceNumber}/DoesRefraction':\n    get:\n      summary: Indicates whether atmospheric refraction is applied to coordinates.\n      description: \u003e-\n        True if the telescope or driver applies atmospheric refraction to\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Determines whether atmospheric refraction is applied to coordinates.\n      description: \u003e-\n        Causes the rotator to move Position degrees relative to the current\n        Position value.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                DoesRefraction:\n                  description: \u003e-\n                    Set True to make the telescope or driver applie atmospheric\n                    refraction to coordinates.\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - DoesRefraction\n  '/Telescope/{DeviceNumber}/EquatorialSystem':\n    get:\n      summary: Returns the current equatorial coordinate system used by this telescope.\n      description: \u003e-\n        Returns the current equatorial coordinate system used by this telescope\n        (e.g. Topocentric or J2000).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/FocalLength':\n    get:\n      summary: Returns the telescope's focal length in meters.\n      description: The telescope's focal length in meters\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/GuideRateDeclination':\n    get:\n      summary: Returns the  current Declination rate offset for telescope guiding\n      description: \u003e-\n        The current Declination movement rate offset for telescope guiding\n        (degrees/sec)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the  current Declination rate offset for telescope guiding.\n      description: \u003e-\n        Sets the current Declination movement rate offset for telescope guiding\n        (degrees/sec).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                GuideRateDeclination:\n                  description: Declination movement rate offset degrees/sec).\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - GuideRateDeclination\n  '/Telescope/{DeviceNumber}/GuideRateRightAscension':\n    get:\n      summary: Returns the  current RightAscension rate offset for telescope guiding\n      description: \u003e-\n        The current RightAscension movement rate offset for telescope guiding\n        (degrees/sec)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the  current RightAscension rate offset for telescope guiding.\n      description: \u003e-\n        Sets the current RightAscension movement rate offset for telescope\n        guiding (degrees/sec).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                GuideRateRightAscension:\n                  description: RightAscension movement rate offset degrees/sec).\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - GuideRateRightAscension\n  '/Telescope/{DeviceNumber}/IsPulseGuiding':\n    get:\n      summary: \u003e-\n        Indicates whether the telescope is currently executing a PulseGuide\n        command\n      description: \u003e-\n        True if a PulseGuide(GuideDirections, Int32) command is in progress,\n        False otherwise\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/RightAscension':\n    get:\n      summary: Returns the telescope's right ascension coordinate.\n      description: \u003e-\n        The right ascension (hours) of the telescope's current equatorial\n        coordinates, in the coordinate system given by the EquatorialSystem\n        property\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/RightAscensionRate':\n    get:\n      summary: Returns the telescope's right ascension tracking rate.\n      description: 'The right ascension tracking rate (arcseconds per second, default = 0.0)'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the telescope's right ascension tracking rate.\n      description: Sets the right ascension tracking rate (arcseconds per second)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                RightAscensionRate:\n                  description: Right ascension tracking rate (arcseconds per second)\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - RightAscensionRate\n  '/Telescope/{DeviceNumber}/SideOfPier':\n    get:\n      summary: Returns the mount's pointing state.\n      description: \u003e-\n        Indicates the pointing state of the mount. 0 = pierEast, 1 = pierWest,\n        -1= pierUnknown\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the mount's pointing state.\n      description: 'Sets the pointing state of the mount. 0 = pierEast, 1 = pierWest'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SideOfPier:\n                  description: New pointing state.\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SideOfPier\n  '/Telescope/{DeviceNumber}/SiderealTime':\n    get:\n      summary: Returns the local apparent sidereal time.\n      description: \u003e-\n        The local apparent sidereal time from the telescope's internal clock\n        (hours, sidereal).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/SiteElevation':\n    get:\n      summary: Returns the observing site's elevation above mean sea level.\n      description: \u003e-\n        The elevation above mean sea level (meters) of the site at which the\n        telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the observing site's elevation above mean sea level.\n      description: \u003e-\n        Sets the elevation above mean sea level (metres) of the site at which\n        the telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SiteElevation:\n                  description: Elevation above mean sea level (metres).\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SiteElevation\n  '/Telescope/{DeviceNumber}/SiteLatitude':\n    get:\n      summary: Returns the observing site's latitude.\n      description: \u003e-\n        The geodetic(map) latitude (degrees, positive North, WGS84) of the site\n        at which the telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the observing site's latitude.\n      description: Sets the observing site's latitude (degrees).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SiteLatitude:\n                  description: Site latitude (degrees)\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SiteLatitude\n  '/Telescope/{DeviceNumber}/SiteLongitude':\n    get:\n      summary: Returns the observing site's longitude.\n      description: \u003e-\n        The longitude (degrees, positive East, WGS84) of the site at which the\n        telescope is located.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the observing site's longitude.\n      description: 'Sets the observing site''s longitude (degrees, positive East, WGS84).'\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SiteLongitude:\n                  description: 'Site longitude (degrees, positive East, WGS84)'\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SiteLongitude\n  '/Telescope/{DeviceNumber}/Slewing':\n    get:\n      summary: Indicates whether the telescope is currently slewing.\n      description: \u003e-\n        True if telescope is currently moving in response to one of the Slew\n        methods or the MoveAxis(TelescopeAxes, Double) method, False at all\n        other times.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/SlewSettleTime':\n    get:\n      summary: Returns the post-slew settling time.\n      description: Returns the post-slew settling time (sec.).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the post-slew settling time.\n      description: Sets the  post-slew settling time (integer sec.).\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                SlewSettleTime:\n                  description: Settling time (integer sec.).\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - SlewSettleTime\n  '/Telescope/{DeviceNumber}/TargetDeclination':\n    get:\n      summary: Returns the current target declination.\n      description: \u003e-\n        The declination (degrees, positive North) for the target of an\n        equatorial slew or sync operation\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the target declination of a slew or sync.\n      description: \u003e-\n        Sets the declination (degrees, positive North) for the target of an\n        equatorial slew or sync operation\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                TargetDeclination:\n                  description: Target declination(degrees)\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - TargetDeclination\n  '/Telescope/{DeviceNumber}/TargetRightAscension':\n    get:\n      summary: Returns the current target right ascension.\n      description: \u003e-\n        The right ascension (hours) for the target of an equatorial slew or sync\n        operation\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoubleResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the target right ascension of a slew or sync.\n      description: \u003e-\n        Sets the right ascension (hours) for the target of an equatorial slew or\n        sync operation\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                TargetRightAscension:\n                  description: Target right ascension(hours)\n                  type: number\n                  format: double\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - TargetRightAscension\n  '/Telescope/{DeviceNumber}/Tracking':\n    get:\n      summary: Indicates whether the telescope is tracking.\n      description: Returns the state of the telescope's sidereal tracking drive.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Enables or disables telescope tracking.\n      description: Sets the state of the telescope's sidereal tracking drive.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Tracking:\n                  description: Tracking enabled / disabled\n                  type: boolean\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Tracking\n  '/Telescope/{DeviceNumber}/TrackingRate':\n    get:\n      summary: Returns the current tracking rate.\n      description: The current tracking rate of the telescope's sidereal drive.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the mount's tracking rate.\n      description: \u003e-\n        Sets the tracking rate of the telescope's sidereal drive. 0 =\n        driveSidereal, 1 = driveLunar, 2 = driveSolar, 3 = driveKing\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                TrackingRate:\n                  description: New tracking rate\n                  type: integer\n                  format: int32\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - TrackingRate\n  '/Telescope/{DeviceNumber}/TrackingRates':\n    get:\n      summary: Returns an array of supported DriveRates values.\n      description: \u003e-\n        Returns an array of supported DriveRates values that describe the\n        permissible values of the TrackingRate property for this telescope type.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntArrayResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/UTCDate':\n    get:\n      summary: Returns the UTC date/time of the telescope's internal clock.\n      description: \u003e-\n        The UTC date/time of the telescope's internal clock in ISO 8601 format\n        including fractional seconds. The general format (in Microsoft custom\n        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.\n        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note\n        the compulsary trailing Z indicating the 'Zulu', UTC time zone.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      summary: Sets the UTC date/time of the telescope's internal clock.\n      description: \u003e-\n        The UTC date/time of the telescope's internal clock in ISO 8601 format\n        including fractional seconds. The general format (in Microsoft custom\n        date format style) is yyyy-MM-ddTHH:mm:ss.fffffffZ E.g.\n        2016-03-04T17:45:31.1234567Z or 2016-11-14T07:03:08.1234567Z Please note\n        the compulsary trailing Z indicating the 'Zulu', UTC time zone.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                UTCDate:\n                  description: UTC date/time in ISO 8601 format.\n                  type: string\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - UTCDate\n  '/Telescope/{DeviceNumber}/AbortSlew':\n    put:\n      summary: Immediatley stops a slew in progress.\n      description: Immediately Stops a slew in progress.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/AxisRates':\n    get:\n      summary: \u003e-\n        Returns the rates at which the telescope may be moved about the\n        specified axis.\n      description: \u003e-\n        The rates at which the telescope may be moved about the specified axis\n        by the MoveAxis(TelescopeAxes, Double) method.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n        - $ref: '#/components/parameters/AxisQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AxisRatesResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/CanMoveAxis':\n    get:\n      summary: Indicates whether the telescope can move the requested axis.\n      description: True if this telescope can move the requested axis.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/AxisQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BoolResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/DestinationSideOfPier':\n    get:\n      summary: \u003e-\n        Predicts the pointing state after a German equatorial mount slews to\n        given coordinates.\n      description: \u003e-\n        Predicts the pointing state that a German equatorial mount will be in if\n        it slews to the given coordinates. The  return value will be one of - 0\n        = pierEast, 1 = pierWest, -1 = pierUnknown\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/RightAscensionQuery'\n        - $ref: '#/components/parameters/DeclinationQuery'\n        - $ref: '#/components/parameters/ClientIDQuery'\n        - $ref: '#/components/parameters/ClientTransactionIDQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Driver response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n  '/Telescope/{DeviceNumber}/FindHome':\n    put:\n      summary: Moves the mount to the \"home\" position.\n      description: Locates the telescope's \"home\" position (synchronous)\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/MoveAxis':\n    put:\n      summary: Moves a telescope axis at the given rate.\n      description: Move the telescope in one axis at the given rate.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n        - $ref: '#/components/parameters/AxisQuery'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Rate:\n                  description: The rate of motion (deg/sec) about the specified axis\n                  type: number\n                  default: 0\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Rate\n  '/Telescope/{DeviceNumber}/Park':\n    put:\n      summary: Park the mount\n      description: \u003e-\n        Move the telescope to its park position, stop all motion (or restrict to\n        a small safe range), and set AtPark to True. )\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/PulseGuide':\n    put:\n      summary: Moves the scope in the given direction for the given time.\n      description: \u003e-\n        Moves the scope in the given direction for the given interval or time at\n        the rate given by the corresponding guide rate property\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Direction:\n                  description: \u003e-\n                    The direction in which the guide-rate motion is to be made.\n                    0 = guideNorth, 1 = guideSouth, 2 = guideEast, 3 = guideWest\n                  type: integer\n                  format: int32\n                  default: 0\n                Duration:\n                  description: The duration of the guide-rate motion (milliseconds)\n                  type: integer\n                  format: int32\n                  default: 5\n                ClientID:\n                  description: Client's unique ID.\n                  type: integer\n                  format: int32\n                ClientTransactionID:\n                  description: Client's transaction ID.\n                  type: integer\n                  format: int32\n              required:\n                - Direction\n                - Duration\n  '/Telescope/{DeviceNumber}/SetPark':\n    put:\n      summary: Sets the telescope's park position\n      description: Sets the telescope's park position to be its current position.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/SlewToAltAz':\n    put:\n      summary: Synchronously slew to the given local horizontal coordinates.\n      description: \u003e-\n        Move the telescope to the given local horizontal coordinates, return\n        when slew is complete\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/Telescope/{DeviceNumber}/SlewToAltAzAsync':\n    put:\n      summary: Asynchronously slew to the given local horizontal coordinates.\n      description: \u003e-\n        Move the telescope to the given local horizontal coordinates, return\n        immediatley after the slew starts. The client can poll the Slewing\n        method to determine when the mount reaches the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/Telescope/{DeviceNumber}/SlewToCoordinates':\n    put:\n      summary: Synchronously slew to the given equatorial coordinates.\n      description: \u003e-\n        Move the telescope to the given equatorial coordinates, return when slew\n        is complete\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/Telescope/{DeviceNumber}/SlewToCoordinatesAsync':\n    put:\n      summary: Asynchronously slew to the given equatorial coordinates.\n      description: \u003e-\n        Move the telescope to the given equatorial coordinates, return\n        immediatley after the slew starts. The client can poll the Slewing\n        method to determine when the mount reaches the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/Telescope/{DeviceNumber}/SlewToTarget':\n    put:\n      summary: \u003e-\n        Synchronously slew to the TargetRightAscension and TargetDeclination\n        coordinates.\n      description: \u003e-\n        Move the telescope to the TargetRightAscension and TargetDeclination\n        equatorial coordinates, return when slew is complete\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/SlewToTargetAsync':\n    put:\n      summary: \u003e-\n        Asynchronously slew to the TargetRightAscension and TargetDeclination\n        coordinates.\n      description: \u003e-\n        Move the telescope to the TargetRightAscension and TargetDeclination\n        equatorial coordinates, return immediatley after the slew starts. The\n        client can poll the Slewing method to determine when the mount reaches\n        the intended coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/SyncToAltAz':\n    put:\n      summary: Syncs to the given local horizontal coordinates.\n      description: \u003e-\n        Matches the scope's local horizontal coordinates to the given local\n        horizontal coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtoaltaz'\n  '/Telescope/{DeviceNumber}/SyncToCoordinates':\n    put:\n      summary: Syncs to the given equatorial coordinates.\n      description: \u003e-\n        Matches the scope's equatorial coordinates to the given equatorial\n        coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putTelescope_devicenumber_slewtocoordinates'\n  '/Telescope/{DeviceNumber}/SyncToTarget':\n    put:\n      summary: Syncs to the TargetRightAscension and TargetDeclination coordinates.\n      description: \u003e-\n        Matches the scope's equatorial coordinates to the TargetRightAscension\n        and TargetDeclination equatorial coordinates.\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\n  '/Telescope/{DeviceNumber}/UnPark':\n    put:\n      summary: Unparks the mount.\n      description: Takes telescope out of the Parked state. )\n      parameters:\n        - $ref: '#/components/parameters/DeviceNumber'\n      tags:\n        - Telescope Specific Methods\n      responses:\n        '200':\n          description: Transaction complete or exception\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MethodResponse'\n        '400':\n          description: 'Method or parameter value error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n        '500':\n          description: 'Server internal error, check error message'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n      requestBody:\n        $ref: '#/components/requestBodies/putDome_devicenumber_abortslew'\nservers:\n# Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/ASCOMInitiative/ASCOMDeviceAPI/1.0.1-oas3\ncomponents:\n  parameters:\n    DeviceType:\n      name: DeviceType\n      description: One of the recognised ASCOM device types e.g. Telescope\n      in: path\n      required: true\n      schema:\n        type: string\n        default: Telescope\n    DeviceNumber:\n      name: DeviceNumber\n      description: Zero based device number as set on the server\n      in: path\n      required: true\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    ClientIDQuery:\n      name: ClientID\n      description: Client's unique ID.\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 1\n    ClientTransactionIDQuery:\n      name: ClientTransactionID\n      description: Client's transaction ID.\n      in: query\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 1234\n    RightAscensionQuery:\n      name: RightAscension\n      description: Right Ascension coordinate (hours)\n      in: query\n      required: true\n      schema:\n        type: number\n        default: 3\n    DeclinationQuery:\n      name: Declination\n      description: Declination coordinate (degrees)\n      in: query\n      required: true\n      schema:\n        type: number\n        default: 0\n    AxisQuery:\n      name: Axis\n      description: \u003e-\n        The axis about which rate information is desired. 0 = axisPrimary, 1 =\n        axisSecondary, 2 = axisTertiary.\n      in: query\n      required: true\n      schema:\n        type: integer\n        format: int32\n        default: 0\n    SwitchNumberQuery:\n      name: Id\n      description: The device number (0 to MaxSwitch - 1)\n      in: query\n      required: true\n      schema:\n        type: integer\n        format: int32\n        default: 0\n  requestBodies:\n    put_devicetype_Devicenumber_commandblind:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              Command:\n                description: The literal command string to be transmitted.\n                type: string\n              Raw:\n                description: \u003e-\n                  If set to true the string is transmitted 'as-is', if set to\n                  false then protocol framing characters may be added prior to\n                  transmission\n                type: string\n              ClientID:\n                description: Client's unique ID.\n                type: integer\n                format: int32\n              ClientTransactionID:\n                description: Client's transaction ID.\n                type: integer\n                format: int32\n            required:\n              - Command\n              - Raw\n    putDome_devicenumber_abortslew:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              ClientID:\n                description: Client's unique ID.\n                type: integer\n                format: int32\n              ClientTransactionID:\n                description: Client's transaction ID.\n                type: integer\n                format: int32\n    putDome_devicenumber_slewtoazimuth:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              Azimuth:\n                description: \u003e-\n                  Target dome azimuth (degrees, North zero and increasing\n                  clockwise. i.e., 90 East, 180 South, 270 West)\n                type: number\n              ClientID:\n                description: Client's unique ID.\n                type: integer\n                format: int32\n              ClientTransactionID:\n                description: Client's transaction ID.\n                type: integer\n                format: int32\n            required:\n              - Azimuth\n    putTelescope_devicenumber_slewtoaltaz:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              Azimuth:\n                description: \u003e-\n                  Azimuth coordinate (degrees, North-referenced, positive\n                  East/clockwise)\n                type: number\n              Altitude:\n                description: 'Altitude coordinate (degrees, positive up)'\n                type: number\n              ClientID:\n                description: Client's unique ID.\n                type: integer\n                format: int32\n              ClientTransactionID:\n                description: Client's transaction ID.\n                type: integer\n                format: int32\n            required:\n              - Azimuth\n              - Altitude\n    putTelescope_devicenumber_slewtocoordinates:\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              RightAscension:\n                description: Right Ascension coordinate (hours)\n                type: number\n              Declination:\n                description: Declination coordinate (degrees)\n                type: number\n              ClientID:\n                description: Client's unique ID.\n                type: integer\n                format: int32\n              ClientTransactionID:\n                description: Client's transaction ID.\n                type: integer\n                format: int32\n            required:\n              - RightAscension\n              - Declination\n  schemas:\n    ImageArrayResponse:\n      type: object\n      properties:\n        ArrayType:\n          type: integer\n          format: int32\n          description: \u003e-\n            0 = Unknown, 1 = Short(Int16), 2 = Int (Int32), 3 = Double (Double\n            precision real number).\n          minimum: 0\n          maximum: 3\n        Rank:\n          type: integer\n          format: int32\n          description: \u003e-\n            The array's rank, will be 2 (single plane image (monochrome))or 3\n            (multi-plane image).\n        Value:\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n              description: Returned integer value\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    ErrorMessage:\n      type: string\n      properties:\n        Value:\n          type: string\n          description: Error message\n    BoolResponse:\n      type: object\n      properties:\n        Value:\n          type: boolean\n          description: True or False value\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    DoubleResponse:\n      type: object\n      properties:\n        Value:\n          type: number\n          format: double\n          description: Returned double value\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    IntResponse:\n      type: object\n      properties:\n        Value:\n          type: integer\n          format: int32\n          description: Returned integer value\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    IntArrayResponse:\n      type: object\n      properties:\n        Value:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: Array of integer values.\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    MethodResponse:\n      type: object\n      properties:\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    StringResponse:\n      type: object\n      properties:\n        Value:\n          type: string\n          description: String response from the device.\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    StringArrayResponse:\n      type: object\n      properties:\n        Value:\n          type: array\n          items:\n            type: string\n          description: Array of string values.\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    AxisRatesResponse:\n      type: object\n      properties:\n        Value:\n          description: Array of rate objects\n          type: array\n          items:\n            $ref: '#/components/schemas/AxisRate'\n        ClientTransactionIDForm:\n          type: integer\n          format: int32\n          description: Client's transaction ID.\n        ServerTransactionID:\n          type: integer\n          format: int32\n          description: Server's transaction ID.\n        Method:\n          type: string\n          description: Name of the calling method.\n        ErrorNumber:\n          type: integer\n          format: int32\n          description: Error number from device.\n        ErrorMessage:\n          type: string\n          description: Error message description from device.\n        DriverException:\n          type: object\n          description: \u003e-\n            Windows error exception object (only of value if client is Windows\n            in which case deserialise to a .NET Exception object).\n    AxisRate:\n      description: Rate object\n      type: object\n      properties:\n        Maximum:\n          description: \u003e-\n            The maximum rate (degrees per second) This must always be a positive\n            number. It indicates the maximum rate in either direction about the\n            axis.\n          type: number\n        Minimum:\n          description: \u003e-\n            The minimum rate (degrees per second) This must always be a positive\n            number. It indicates the maximum rate in either direction about the\n            axis.\n          type: number\n      required:\n        - Maximum\n        - Minimum",
			"canonicalURL": "/github.com/ASCOMInitiative/ASCOMRemote@cf6d9876f63734fdddd19fa109af4c7b986a6533/-/blob/Swagger/ASCOMInitiative_ASCOMDeviceAPI_1.0.1-oas3_swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ASCOMInitiative/ASCOMRemote/blob/cf6d9876f63734fdddd19fa109af4c7b986a6533/Swagger/ASCOMInitiative_ASCOMDeviceAPI_1.0.1-oas3_swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}