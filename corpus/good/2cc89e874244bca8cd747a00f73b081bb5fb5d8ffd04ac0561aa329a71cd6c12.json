{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/cloudmersive.validate/openapi.yaml",
			"byteSize": 139410,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: Cloudmersive Validate\n    iconPath: \"icon.png\"\n  title: validateapi\n  description: 'This is a generated connector from [Cloudmersive](https://account.cloudmersive.com) OpenAPI specification. \n  \n  The Cloudmersive Validation APIs help you validate data. Check if an E-mail address is real.\n  Check if a domain is real. Check up on an IP address, and even where it is located. \n  All this and much more is available in the validation API.'\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    \n    Create a [Cloudmersive account](https://account.cloudmersive.com/login) and obtain tokens following [this guide](https://account.cloudmersive.com/keys).\n  version: v1\nservers:\n- url: https://testapi.cloudmersive.com/\npaths:\n  /validate/address/parse:\n    post:\n      tags:\n      - Address\n      summary: Parse an unstructured input text string into an international, formatted\n        address\n      description: Uses machine learning and Natural Language Processing (NLP) to\n        handle a wide array of cases, including non-standard and unstructured address\n        strings across a wide array of countries and address formatting norms.\n      operationId: Address_Parse String\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ParseAddressRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ParseAddressRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParseAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ParseAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ParseAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ParseAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/street-address:\n    post:\n      tags:\n      - Address\n      summary: Validate a street address\n      description: Determines if an input structured street address is valid or invalid.  If\n        the address is valid, also returns the latitude and longitude of the address.  Supports\n        all major international addresses.\n      operationId: Address_Validate Address\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/street-address/normalize:\n    post:\n      tags:\n      - Address\n      summary: Normalize a street address\n      description: Normalizes an input structured street address is valid or invalid.  If\n        the address is valid, also returns the latitude and longitude of the address.  Supports\n        all major international addresses.\n      operationId: Address_Normalize Address\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NormalizeAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/NormalizeAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/NormalizeAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/NormalizeAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/city:\n    post:\n      tags:\n      - Address\n      summary: Validate a City and State/Province combination, get location information\n        about it\n      description: Checks if the input city and state name or code is valid, and returns\n        information about it such as normalized City name, State name and more.  Supports\n        all major international addresses.\n      operationId: Address_Validate City\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCityRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCityRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCityResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCityResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCityResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCityResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/state:\n    post:\n      tags:\n      - Address\n      summary: Validate a state or province, name or abbreviation, get location information\n        about it\n      description: Checks if the input state name or code is valid, and returns information\n        about it such as normalized State name and more.  Supports all major countries.\n      operationId: Address_Validate State\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateStateRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateStateRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateStateResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateStateResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateStateResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateStateResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/postal-code:\n    post:\n      tags:\n      - Address\n      summary: Validate a postal code, get location information about it\n      description: Checks if the input postal code is valid, and returns information\n        about it such as City, State and more.  Supports all major countries.\n      operationId: Address_Validate Postal Code\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidatePostalCodeRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidatePostalCodeRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidatePostalCodeResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidatePostalCodeResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidatePostalCodeResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidatePostalCodeResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/country:\n    post:\n      tags:\n      - Address\n      summary: Validate and normalize country information, return ISO 3166-1 country\n        codes and country name\n      description: Validates and normalizes country information, and returns key information\n        about a country, as well as whether it is a member of the European Union.  Also\n        returns distinct time zones in the country.\n      operationId: Address_Country\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/country/list:\n    post:\n      tags:\n      - Address\n      summary: Get a list of ISO 3166-1 countries\n      description: Enumerates the list of ISO 3166-1 countries, including name, country\n        codes, and more.\n      operationId: Address_Country List\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CountryListResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CountryListResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CountryListResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CountryListResult'\n      security:\n      - Apikey: []\n  /validate/address/country/check-eu-membership:\n    post:\n      tags:\n      - Address\n      summary: Check if a country is a member of the European Union (EU)\n      description: Checks if the input country is a member of the European Union or\n        not.\n      operationId: Address_Check EUMembership\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/country/get-currency:\n    post:\n      tags:\n      - Address\n      summary: Get the currency of the input country\n      description: Gets the currency information for the input country, including\n        the ISO three-letter country code, currency symbol, and English currency name.\n      operationId: Address_Get Country Currency\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/country/get-region:\n    post:\n      tags:\n      - Address\n      summary: Get the region, subregion and continent of the country\n      description: Gets the continent information including region and subregion for\n        the input country.\n      operationId: Address_Get Country Region\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateCountryRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateCountryResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/country/get-timezones:\n    post:\n      tags:\n      - Address\n      summary: Gets IANA/Olsen time zones for a country\n      description: Gets the IANA/Olsen time zones for a country.\n      operationId: Address_Get Timezone\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetTimezonesRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GetTimezonesRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTimezonesResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GetTimezonesResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GetTimezonesResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetTimezonesResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/geocode:\n    post:\n      tags:\n      - Address\n      summary: Geocode a street address into latitude and longitude\n      description: Geocodes a street address into latitude and longitude.\n      operationId: Address_Geocode\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateAddressRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/address/geocode/reverse:\n    post:\n      tags:\n      - Address\n      summary: Reverse geocode a lattitude and longitude into an address\n      description: Converts lattitude and longitude coordinates into an address through\n        reverse-geocoding.\n      operationId: Address_Reverse Geocode Address\n      requestBody:\n        description: Input reverse geocoding request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReverseGeocodeAddressRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ReverseGeocodeAddressRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReverseGeocodeAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ReverseGeocodeAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ReverseGeocodeAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ReverseGeocodeAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/date-time/get/now:\n    get:\n      tags:\n      - DateTime\n      summary: Get current date and time as of now\n      description: Gets the current date and time.  Response time is syncronized with\n        atomic clocks, and represents a monotonic, centrally available, consistent\n        clock.\n      operationId: Date Time_Get Now Simple\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeNowResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeNowResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeNowResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeNowResult'\n      security:\n      - Apikey: []\n  /validate/date-time/get/holidays:\n    post:\n      tags:\n      - DateTime\n      summary: Get public holidays in the specified country and year\n      description: Enumerates all public holidays in a given country for a given year.  Supports\n        over 100 countries.\n      operationId: Date Time_Get Public Holidays\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetPublicHolidaysRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GetPublicHolidaysRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicHolidaysResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/PublicHolidaysResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PublicHolidaysResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PublicHolidaysResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/date-time/parse/date-time/structured:\n    post:\n      tags:\n      - DateTime\n      summary: Parses a standardized date and time string into a date and time\n      description: Parses a structured date and time string into a date time object.  This\n        is intended for standardized date strings that adhere to formatting conventions,\n        rather than natural language input.\n      operationId: Date Time_Parse Standard Date Time\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DateTimeStandardizedParseRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DateTimeStandardizedParseRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/date-time/parse/date-time/natural-language:\n    post:\n      tags:\n      - DateTime\n      summary: Parses a free-form natural language date and time string into a date\n        and time\n      description: Parses an unstructured, free-form, natural language date and time\n        string into a date time object.  This is intended for lightweight human-entered\n        input, such as \"tomorrow at 3pm\" or \"tuesday\".\n      operationId: Date Time_Parse Natural Language Date Time\n      requestBody:\n        description: Input request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DateTimeNaturalLanguageParseRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DateTimeNaturalLanguageParseRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DateTimeStandardizedParseResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/domain/check:\n    post:\n      tags:\n      - Domain\n      summary: Validate a domain name\n      description: Check whether a domain name is valid or not.  API performs a live\n        validation by contacting DNS services to validate the existence of the domain\n        name.\n      operationId: Domain_Check\n      requestBody:\n        description: Domain name to check, for example \"cloudmersive.com\".  The input\n          is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/CheckResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CheckResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/CheckResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: domain\n  /validate/domain/quality-score:\n    post:\n      tags:\n      - Domain\n      summary: Validate a domain name's quality score\n      description: Check the quality of a domain name.  Supports over 9 million domain\n        names.  Higher quality scores indicate more trust and authority in the domain\n        name, with values ranging from 0.0 (low quality) to 10.0 (maximum quality).\n      operationId: Domain_Quality Score\n      requestBody:\n        description: Domain name to check, for example \"cloudmersive.com\".\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainQualityResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DomainQualityResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/DomainQualityResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/DomainQualityResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: domain\n  /validate/domain/whois:\n    post:\n      tags:\n      - Domain\n      summary: Get WHOIS information for a domain\n      description: Validate whether a domain name exists, and also return the full\n        WHOIS record for that domain name.  WHOIS records include all the registration\n        details of the domain name, such as information about the domain's owners.\n      operationId: Domain_Post\n      requestBody:\n        description: Domain name to check, for example \"cloudmersive.com\".   The input\n          is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WhoisResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/WhoisResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/WhoisResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/WhoisResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: domain\n  /validate/domain/url/syntax-only:\n    post:\n      tags:\n      - Domain\n      summary: Validate a URL syntactically\n      description: Validate whether a URL is syntactically valid (does not check endpoint\n        for validity).  Accepts various types of input and produces a well-formed\n        URL as output.\n      operationId: Domain_Url Syntax Only\n      requestBody:\n        description: Input URL information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestSyntaxOnly'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestSyntaxOnly'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/full:\n    post:\n      tags:\n      - Domain\n      summary: Validate a URL fully\n      description: Validate whether a URL is syntactically valid (does not check endpoint\n        for validity), whether it exists, and whether the endpoint is up and passes\n        virus scan checks.  Accepts various types of input and produces a well-formed\n        URL as output.\n      operationId: Domain_Url Full\n      requestBody:\n        description: Input URL request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestFull'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestFull'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseFull'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseFull'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseFull'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseFull'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/get-top-level-domain:\n    post:\n      tags:\n      - Domain\n      summary: Get top-level domain name from URL\n      description: Gets the top-level domain name from a URL, such as mydomain.com.\n      operationId: Domain_Get Top Level Domain From Url\n      requestBody:\n        description: Input URL information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestSyntaxOnly'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateUrlRequestSyntaxOnly'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateUrlResponseSyntaxOnly'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/phishing-threat-check:\n    post:\n      tags:\n      - Domain\n      summary: Check a URL for Phishing threats\n      description: Checks if an input URL is at risk of being an Phishing (fake login\n        page, or other page designed to collect information via social engineering)\n        threat or attack.\n      operationId: Domain_Phishing Check\n      requestBody:\n        description: Input URL request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PhishingCheckRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PhishingCheckRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PhishingCheckResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/PhishingCheckResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PhishingCheckResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PhishingCheckResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/is-admin-path:\n    post:\n      tags:\n      - Domain\n      summary: Check if path is a high-risk or vulnerable server administration path\n      description: Check if the input URL or relative path is a server Administration\n        Path, and therefore a risk or vulnerability for remote access.\n      operationId: Domain_Is Admin Path\n      requestBody:\n        description: URL or relative path to check, e.g. \"/admin/login\".  The input\n          is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IsAdminPathResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/IsAdminPathResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IsAdminPathResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/IsAdminPathResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/domain/url/safety-threat-check:\n    post:\n      tags:\n      - Domain\n      summary: Check a URL for safety threats\n      description: Checks if an input URL is at risk of being a safety threat through\n        malware, unwanted software, or social engineering threats.\n      operationId: Domain_Safety Check\n      requestBody:\n        description: Input URL request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlSafetyCheckRequestFull'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UrlSafetyCheckRequestFull'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UrlSafetyCheckResponseFull'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UrlSafetyCheckResponseFull'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSafetyCheckResponseFull'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSafetyCheckResponseFull'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/ssrf-threat-check:\n    post:\n      tags:\n      - Domain\n      summary: Check a URL for SSRF threats\n      description: Checks if an input URL is at risk of being an SSRF (Server-side\n        request forgery) threat or attack.\n      operationId: Domain_Ssrf Check\n      requestBody:\n        description: Input URL request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlSsrfRequestFull'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UrlSsrfRequestFull'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseFull'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseFull'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseFull'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseFull'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/ssrf-threat-check/batch:\n    post:\n      tags:\n      - Domain\n      summary: Check a URL for SSRF threats in batches\n      description: Batch-checks if input URLs are at risk of being an SSRF (Server-side\n        request forgery) threat or attack.\n      operationId: Domain_Ssrf Check Batch\n      requestBody:\n        description: Input URL request as a batch of multiple URLs\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlSsrfRequestBatch'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UrlSsrfRequestBatch'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseBatch'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseBatch'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseBatch'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UrlSsrfResponseBatch'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/domain/url/ssrf-threat-check/html-embedded:\n    post:\n      tags:\n      - Domain\n      summary: Check a URL for HTML embedded SSRF threats\n      description: Checks if an input URL HTML is at risk of containing one or more\n        embedded SSRF (Server-side request forgery) threats or attacks.\n      operationId: Domain_Url Html Ssrf Check\n      requestBody:\n        description: Input URL request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlHtmlSsrfRequestFull'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UrlHtmlSsrfRequestFull'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UrlHtmlSsrfResponseFull'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UrlHtmlSsrfResponseFull'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UrlHtmlSsrfResponseFull'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UrlHtmlSsrfResponseFull'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/email/address/syntaxOnly:\n    post:\n      tags:\n      - Email\n      summary: Validate email adddress for syntactic correctness only\n      description: Validate whether a given email address is syntactically correct\n        via a limited local-only check.  Use the address/full API to do a full validation.\n      operationId: Email_Post\n      requestBody:\n        description: Email address to validate, e.g. \"support@cloudmersive.com\".    The\n          input is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddressVerifySyntaxOnlyResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AddressVerifySyntaxOnlyResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AddressVerifySyntaxOnlyResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AddressVerifySyntaxOnlyResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/email/address/servers:\n    post:\n      tags:\n      - Email\n      summary: Partially check whether an email address is valid\n      description: Validate an email address by identifying whether its parent domain\n        has email servers defined.  This call is less limited than syntaxOnly but\n        not as comprehensive as address/full.\n      operationId: Email_Address Get Servers\n      requestBody:\n        description: Email address to validate, e.g. \"support@cloudmersive.com\".    The\n          input is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddressGetServersResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AddressGetServersResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AddressGetServersResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/AddressGetServersResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: email\n  /validate/email/address/full:\n    post:\n      tags:\n      - Email\n      summary: Fully validate an email address\n      description: Performs a full validation of the email address.  Checks for syntactic\n        correctness, identifies the mail server in question if any, and then contacts\n        the email server to validate the existence of the account - without sending\n        any emails.\n      operationId: Email_Full Validation\n      requestBody:\n        description: Email address to validate, e.g. \"support@cloudmersive.com\".    The\n          input is a string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullEmailValidationResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FullEmailValidationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/FullEmailValidationResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FullEmailValidationResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: email\n  /validate/ip/intelligence:\n    post:\n      tags:\n      - IPAddress\n      summary: Get intelligence on an IP address\n      description: Identify key intelligence about an IP address, including if it\n        is a known threat IP, known bot, Tor exit node, as well as the location of\n        the IP address.\n      operationId: IPAddress_Ip Intelligence\n      requestBody:\n        description: IP address to process, e.g. \"55.55.55.55\".  The input is a string\n          so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IPIntelligenceResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/IPIntelligenceResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IPIntelligenceResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/IPIntelligenceResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/geolocate:\n    post:\n      tags:\n      - IPAddress\n      summary: Geolocate an IP address\n      description: Identify an IP address Country, State/Provence, City, Zip/Postal\n        Code, etc.  Useful for security and UX applications.\n      operationId: IPAddress_Post\n      requestBody:\n        description: IP address to geolocate, e.g. \"55.55.55.55\".  The input is a\n          string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeolocateResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeolocateResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GeolocateResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GeolocateResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/geolocate/street-address:\n    post:\n      tags:\n      - IPAddress\n      summary: Geolocate an IP address to a street address\n      description: Identify an IP address's street address.  Useful for security and\n        UX applications.\n      operationId: IPAddress_Geolocate Street Address\n      requestBody:\n        description: IP address to geolocate, e.g. \"55.55.55.55\".  The input is a\n          string so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeolocateStreetAddressResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeolocateStreetAddressResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GeolocateStreetAddressResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GeolocateStreetAddressResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/is-threat:\n    post:\n      tags:\n      - IPAddress\n      summary: Check if IP address is a known threat\n      description: Check if the input IP address is a known threat IP address.  Checks\n        against known bad IPs, botnets, compromised servers, and other lists of threats.\n      operationId: IPAddress_Is Threat\n      requestBody:\n        description: IP address to check, e.g. \"55.55.55.55\".  The input is a string\n          so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IPThreatResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/IPThreatResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IPThreatResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/IPThreatResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/is-tor-node:\n    post:\n      tags:\n      - IPAddress\n      summary: Check if IP address is a Tor node server\n      description: Check if the input IP address is a Tor exit node server.  Tor servers\n        are a type of privacy-preserving technology that can hide the original IP\n        address who makes a request.\n      operationId: IPAddress_Is Tor Node\n      requestBody:\n        description: IP address to check, e.g. \"55.55.55.55\".  The input is a string\n          so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TorNodeResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TorNodeResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/TorNodeResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/TorNodeResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/is-bot:\n    post:\n      tags:\n      - IPAddress\n      summary: Check if IP address is a Bot client\n      description: Check if the input IP address is a Bot, robot, or otherwise a non-user\n        entity.  Leverages real-time signals to check against known high-probability\n        bots..\n      operationId: IPAddress_Is Bot\n      requestBody:\n        description: IP address to check, e.g. \"55.55.55.55\".  The input is a string\n          so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BotCheckResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/BotCheckResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/BotCheckResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/BotCheckResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/ip/reverse-domain-lookup:\n    post:\n      tags:\n      - IPAddress\n      summary: Perform a reverse domain name (DNS) lookup on an IP address\n      description: Gets the domain name, if any, associated with the IP address.\n      operationId: IPAddress_Reverse Domain Lookup\n      requestBody:\n        description: IP address to check, e.g. \"55.55.55.55\".  The input is a string\n          so be sure to enclose it in double-quotes.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IPReverseDNSLookupResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/IPReverseDNSLookupResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/IPReverseDNSLookupResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/IPReverseDNSLookupResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/lead-enrichment/lead/enrich:\n    post:\n      tags:\n      - LeadEnrichment\n      summary: Enrich an input lead with additional fields of data\n      operationId: Lead Enrichment_Enrich Lead\n      requestBody:\n        description: Input lead with known fields set, and unknown fields left blank\n          (null)\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeadEnrichmentRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/LeadEnrichmentRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeadEnrichmentResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/LeadEnrichmentResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LeadEnrichmentResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/LeadEnrichmentResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/name/full-name:\n    post:\n      tags:\n      - Name\n      summary: Parse and validate a full name\n      description: Parses a full name string (e.g. \"Mr. Jon van der Waal Jr.\") into\n        its component parts (and returns these component parts), and then validates\n        whether it is a valid name string or not\n      operationId: Name_Validate Full Name\n      requestBody:\n        description: Validation request information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FullNameValidationRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FullNameValidationRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FullNameValidationResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FullNameValidationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/FullNameValidationResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FullNameValidationResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/name/first:\n    post:\n      tags:\n      - Name\n      summary: Validate a first name\n      description: Determines if a string is a valid first name (given name)\n      operationId: Name_Validate First Name\n      requestBody:\n        description: Validation request information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FirstNameValidationRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FirstNameValidationRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FirstNameValidationResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FirstNameValidationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/FirstNameValidationResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/FirstNameValidationResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/name/last:\n    post:\n      tags:\n      - Name\n      summary: Validate a last name\n      description: Determines if a string is a valid last name (surname)\n      operationId: Name_Validate Last Name\n      requestBody:\n        description: Validation request information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LastNameValidationRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/LastNameValidationRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastNameValidationResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/LastNameValidationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LastNameValidationResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/LastNameValidationResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/name/get-gender:\n    post:\n      tags:\n      - Name\n      summary: Get the gender of a first name\n      description: Determines the gender of a first name (given name)\n      operationId: Name_Get Gender\n      requestBody:\n        description: Gender request information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetGenderRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GetGenderRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGenderResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GetGenderResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/GetGenderResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/GetGenderResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/name/identifier:\n    post:\n      tags:\n      - Name\n      summary: Validate a code identifier\n      description: Determines if the input name is a valid technical / code identifier.  Configure\n        input rules such as whether whitespace, hyphens, underscores, etc. are allowed.  For\n        example, a valid identifier might be \"helloWorld\" but not \"hello*World\".\n      operationId: Name_Identifier\n      requestBody:\n        description: Identifier validation request information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidateIdentifierRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ValidateIdentifierRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateIdentifierResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ValidateIdentifierResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateIdentifierResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/ValidateIdentifierResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\n  /validate/phonenumber/basic:\n    post:\n      tags:\n      - PhoneNumber\n      summary: Validate phone number (basic)\n      description: Validate a phone number by analyzing the syntax\n      operationId: Phone Number_Syntax Only\n      requestBody:\n        description: Phone number to validate in a PhoneNumberValidateRequest object.  Try\n          a phone number such as \"1.800.463.3339\", and either leave DefaultCountryCode\n          blank or use \"US\".\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PhoneNumberValidateRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PhoneNumberValidateRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PhoneNumberValidationResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/PhoneNumberValidationResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/PhoneNumberValidationResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/PhoneNumberValidationResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check/sql-injection:\n    post:\n      tags:\n      - TextInput\n      summary: Check text input for SQL Injection (SQLI) attacks\n      description: Detects SQL Injection (SQLI) attacks from text input.\n      operationId: Text Input_Check Sql Injection\n      parameters:\n      - name: detectionLevel\n        in: header\n        description: Set to Normal to target a high-security SQL Injection detection\n          level with a very low false positive rate; select High to target a very-high\n          security SQL Injection detection level with higher false positives.  Default\n          is Normal (recommended).\n        schema:\n          type: string\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionDetectionResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionDetectionResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionDetectionResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionDetectionResult'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check/sql-injection/batch:\n    post:\n      tags:\n      - TextInput\n      summary: Check and protect multiple text inputs for SQL Injection (SQLI) attacks\n        in batch\n      description: Detects SQL Injection (SQLI) attacks from multiple text inputs.  Output\n        preverses order of input items.\n      operationId: Text Input_Check Sql Injection Batch\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SqlInjectionCheckBatchRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/SqlInjectionCheckBatchRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionCheckBatchResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionCheckBatchResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionCheckBatchResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/SqlInjectionCheckBatchResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check/xss:\n    post:\n      tags:\n      - TextInput\n      summary: Check text input for Cross-Site-Scripting (XSS) attacks\n      description: Detects XSS (Cross-Site-Scripting) attacks from text input.\n      operationId: Text Input_Check Xss\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/protect/xss:\n    post:\n      tags:\n      - TextInput\n      summary: Protect text input from Cross-Site-Scripting (XSS) attacks through\n        normalization\n      description: Detects and removes XSS (Cross-Site-Scripting) attacks from text\n        input through normalization.  Returns the normalized result, as well as information\n        on whether the original input contained an XSS risk.\n      operationId: Text Input_Protect Xss\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionResult'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check-and-protect/xss/batch:\n    post:\n      tags:\n      - TextInput\n      summary: Check and protect multiple text inputs for Cross-Site-Scripting (XSS)\n        attacks in batch\n      description: Detects XSS (Cross-Site-Scripting) attacks from multiple text inputs.  Output\n        preverses order of input items.\n      operationId: Text Input_Check Xss Batch\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/XssProtectionBatchRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/XssProtectionBatchRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionBatchResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/XssProtectionBatchResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionBatchResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/XssProtectionBatchResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/html/check/ssrf:\n    post:\n      tags:\n      - TextInput\n      summary: Protect html input from Server-side Request Forgery (SSRF) attacks\n      description: Detects SSRF (Server-side request forgery) attacks and unsafe URL\n        attacks from HTML text input, where attackers can attempt to access unsafe\n        local or network paths in the server environment by injecting them into HTML.\n      operationId: Text Input_Check Html Ssrf\n      requestBody:\n        description: User-facing HTML input.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HtmlSsrfDetectionResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/HtmlSsrfDetectionResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/HtmlSsrfDetectionResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/HtmlSsrfDetectionResult'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check/xxe:\n    post:\n      tags:\n      - TextInput\n      summary: Protect text input from XML External Entity (XXE) attacks\n      description: Detects XXE (XML External Entity) attacks from text input.\n      operationId: Text Input_Check Xxe\n      parameters:\n      - name: allowInternetUrls\n        in: header\n        description: 'Optional: Set to true to allow Internet-based dependency URLs\n          for DTDs and other XML External Entitites, set to false to block.  Default\n          is false.'\n        schema:\n          type: boolean\n      - name: knownSafeUrls\n        in: header\n        description: 'Optional: Comma separated list of fully-qualified URLs that\n          will automatically be considered safe.'\n        schema:\n          type: string\n      - name: knownUnsafeUrls\n        in: header\n        description: 'Optional: Comma separated list of fully-qualified URLs that\n          will automatically be considered unsafe.'\n        schema:\n          type: string\n      requestBody:\n        description: User-facing text input.\n        content:\n          application/json:\n            schema:\n              type: string\n          text/json:\n            schema:\n              type: string\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionResult'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionResult'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionResult'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: value\n  /validate/text-input/check/xxe/batch:\n    post:\n      tags:\n      - TextInput\n      summary: Protect text input from XML External Entity (XXE) attacks\n      description: Detects XXE (XML External Entity) attacks from text input.\n      operationId: Text Input_Check Xxe Batch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/XxeDetectionBatchRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/XxeDetectionBatchRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionBatchResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionBatchResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionBatchResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/XxeDetectionBatchResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/useragent/parse:\n    post:\n      tags:\n      - UserAgent\n      summary: Parse an HTTP User-Agent string, identify robots\n      description: Uses a parsing system and database to parse the User-Agent into\n        its structured component parts, such as Browser, Browser Version, Browser\n        Engine, Operating System, and importantly, Robot identification.\n      operationId: User Agent_Parse\n      requestBody:\n        description: Input parse request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAgentValidateRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UserAgentValidateRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAgentValidateResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserAgentValidateResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserAgentValidateResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/UserAgentValidateResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: request\n  /validate/vat/lookup:\n    post:\n      tags:\n      - Vat\n      summary: Validate a VAT number\n      description: Checks if a VAT code is valid, and if it is, returns more information\n        about it.  The first two letters of the VAT number must be letters that indicate\n        the country, such as LU20260743.  Possible country codes include Austria (AT),\n        Belgium (BE), Bulgaria (BG), Cyprus (CY), Czech Republic (CZ), Germany (DE),\n        Denmark (DK), Estonia (EE), Greece (EL), Spain (ES), Finland (FI), France\n        (FR), United Kingdom (GB), Croatia (HR), Hungary (HU), Ireland (IE), Italy\n        (IT), Lithuania (LT), Luxembourg (LU), Latvia (LV), Malta (MT), The Netherlands\n        (NL), Poland (PL), Portugal (PT), Romania (RO), Sweden (SE), Slovenia (SI),\n        Slovakia (SK).\n      operationId: Vat_Vat Lookup\n      requestBody:\n        description: Input VAT code\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VatLookupRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/VatLookupRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VatLookupResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/VatLookupResponse'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/VatLookupResponse'\n            text/xml:\n              schema:\n                $ref: '#/components/schemas/VatLookupResponse'\n      security:\n      - Apikey: []\n      x-codegen-request-body-name: input\ncomponents:\n  schemas:\n    ParseAddressRequest:\n      type: object\n      properties:\n        AddressString:\n          type: string\n          description: A mailing address or street address formatted as a single text\n            string; this will be parsed into its components\n        CapitalizationMode:\n          type: string\n          description: 'Optional; indicates how the parsed output should be capitalized;\n            default is Title Case; possible values are: \"Uppercase\" will set the capitalization\n            to UPPER CASE; \"Lowercase\" will set the capitalization to lower case;\n            \"Titlecase\" will set the capitalization to Title Case; and \"Originalcase\"\n            will preserve the original casing as much as possible'\n      description: Request to parse an address formatted as a string/free text into\n        a structured address\n    ParseAddressResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the parsing operation was successful, false otherwise\n        Building:\n          type: string\n          description: The name of the building, house or structure if applicable,\n            such as \"Cloudmersive Building 2\".  This will often by null.\n          nullable: true\n        StreetNumber:\n          type: string\n          description: The street number or house number of the address.  For example,\n            in the address \"1600 Pennsylvania Avenue NW\" the street number would be\n            \"1600\".  This value will typically be populated for most addresses.\n        Street:\n          type: string\n          description: The name of the street or road of the address.  For example,\n            in the address \"1600 Pennsylvania Avenue NW\" the street number would be\n            \"Pennsylvania Avenue NW\".\n        City:\n          type: string\n          description: The city of the address.\n        StateOrProvince:\n          type: string\n          description: The state or province of the address.\n        PostalCode:\n          type: string\n          description: The postal code or zip code of the address.\n        CountryFullName:\n          type: string\n          description: Country of the address, if present in the address.  If not\n            included in the address it will be null.\n          nullable: true\n        ISOTwoLetterCode:\n          type: string\n          description: Two-letter ISO 3166-1 country code\n          nullable: true\n      description: Result of parsing an address into its component parts\n    ValidateAddressRequest:\n      type: object\n      properties:\n        StreetAddress:\n          type: string\n          description: Required; Street address to validate, such as '2950 Buskirk\n            Ave.'\n        City:\n          type: string\n          description: Required; City part of the addrerss to validate, such as 'Walnut\n            Creek'\n        StateOrProvince:\n          type: string\n          description: Required; State or province of the address to validate, such\n            as 'CA' or 'California'\n        PostalCode:\n          type: string\n          description: Optional (recommended); Zip code or postal code of the address\n            to validate, such as '94597'\n        CountryFullName:\n          type: string\n          description: Optional (recommended); Name of the country, such as 'United\n            States'.  If left blank, and CountryCode is also left blank, will default\n            to United States.  Global countries are supported.\n        CountryCode:\n          type: string\n          description: Optional; two-letter country code (Two-letter ISO 3166-1 country\n            code) of the country.  If left blank, and CountryFullName is also left\n            blank, will default to United States.  Global countries are supported.\n      description: Request to Validate a Street Address\n    ValidateAddressResponse:\n      type: object\n      properties:\n        ValidAddress:\n          type: boolean\n          description: True if the address is valid, false otherwise\n        Latitude:\n          type: number\n          description: If the address is valid, the degrees latitude of the validated\n            address, null otherwise\n          format: double\n          nullable: true\n        Longitude:\n          type: number\n          description: If the address is valid, the degrees longitude of the validated\n            address, null otherwise\n          format: double\n          nullable: true\n      description: Result of validating a street address\n    NormalizeAddressResponse:\n      type: object\n      properties:\n        ValidAddress:\n          type: boolean\n          description: True if the address is valid, false otherwise\n        Building:\n          type: string\n          description: The name of the building, house or structure if applicable,\n            such as \"Cloudmersive Building 2\".  This will often by null.\n          nullable: true\n        StreetNumber:\n          type: string\n          description: The street number or house number of the address.  For example,\n            in the address \"1600 Pennsylvania Avenue NW\" the street number would be\n            \"1600\".  This value will typically be populated for most addresses.\n        Street:\n          type: string\n          description: The name of the street or road of the address.  For example,\n            in the address \"1600 Pennsylvania Avenue NW\" the street number would be\n            \"Pennsylvania Avenue NW\".\n        City:\n          type: string\n          description: The city of the address.\n        StateOrProvince:\n          type: string\n          description: The state or province of the address.\n        PostalCode:\n          type: string\n          description: The postal code or zip code of the address.\n        CountryFullName:\n          type: string\n          description: Country of the address, if present in the address.  If not\n            included in the address it will be null.\n          nullable: true\n        ISOTwoLetterCode:\n          type: string\n          description: Two-letter ISO 3166-1 country code\n        Latitude:\n          type: number\n          description: If the address is valid, the degrees latitude of the validated\n            address, null otherwise\n          format: double\n          nullable: true\n        Longitude:\n          type: number\n          description: If the address is valid, the degrees longitude of the validated\n            address, null otherwise\n          format: double\n          nullable: true\n      description: Result of validating a street address\n    ValidateCityRequest:\n      type: object\n      properties:\n        City:\n          type: string\n          description: 'Required: City of the address to validate, such as ''San Francisco''\n            or ''London'''\n        StateOrProvince:\n          type: string\n          description: 'Required: State or province of the address to validate, such\n            as ''California'' or ''CA'''\n        CountryFullName:\n          type: string\n          description: Optional (recommended); Name of the country, such as 'United\n            States'.  If left blank, and CountryCode is also left blank, will default\n            to United States.  Global countries are supported.\n        CountryCode:\n          type: string\n          description: Optional; two-letter country code (Two-letter ISO 3166-1 country\n            code) of the country.  If left blank, and CountryFullName is also left\n            blank, will default to United States.  Global countries are supported.\n      description: Request to Validate a City and State or Province in a country\n    ValidateCityResponse:\n      type: object\n      properties:\n        ValidCity:\n          type: boolean\n          description: True if the city is valid, false otherwise\n        City:\n          type: string\n          description: If valid, City corresponding to the input postal code, such\n            as 'Walnut Creek'\n        StateOrProvince:\n          type: string\n          description: If valid; State or province corresponding to the input state\n            name, such as 'CA' or 'California'\n        Latitude:\n          type: number\n          description: If the postal code is valid, the degrees latitude of the centroid\n            of the state, null otherwise\n          format: double\n          nullable: true\n        Longitude:\n          type: number\n          description: If the postal code is valid, the degrees longitude of the centroid\n            of the state, null otherwise\n          format: double\n          nullable: true\n      description: Result of validating a city\n    ValidateStateRequest:\n      type: object\n      properties:\n        StateOrProvince:\n          type: string\n          description: 'Required: State or province of the address to validate, such\n            as ''California'' or ''CA'''\n        CountryFullName:\n          type: string\n          description: Optional (recommended); Name of the country, such as 'United\n            States'.  If left blank, and CountryCode is also left blank, will default\n            to United States.  Global countries are supported.\n        CountryCode:\n          type: string\n          description: Optional; two-letter country code (Two-letter ISO 3166-1 country\n            code) of the country.  If left blank, and CountryFullName is also left\n            blank, will default to United States.  Global countries are supported.\n      description: Request to Validate a State or Province in a country\n    ValidateStateResponse:\n      type: object\n      properties:\n        ValidState:\n          type: boolean\n          description: True if the address is valid, false otherwise\n        StateOrProvince:\n          type: string\n          description: If valid; State or province corresponding to the input state\n            name, such as 'CA' or 'California'\n        Latitude:\n          type: number\n          description: If the postal code is valid, the degrees latitude of the centroid\n            of the state, null otherwise\n          format: double\n          nullable: true\n        Longitude:\n          type: number\n          description: If the postal code is valid, the degrees longitude of the centroid\n            of the state, null otherwise\n          format: double\n          nullable: true\n      description: Result of validating a state\n    ValidatePostalCodeRequest:\n      type: object\n      properties:\n        PostalCode:\n          type: string\n          description: 'Required: Zip code or postal code of the address to validate,\n            such as ''94597'''\n        CountryFullName:\n          type: string\n          description: Optional (recommended); Name of the country, such as 'United\n            States'.  If left blank, and CountryCode is also left blank, will default\n            to United States.  Global countries are supported.\n        CountryCode:\n          type: string\n          description: Optional; two-letter country code (Two-letter ISO 3166-1 country\n            code) of the country.  If left blank, and CountryFullName is also left\n            blank, will default to United States.  Global countries are supported.\n      description: Request to Validate a Postal Code\n    ValidatePostalCodeResponse:\n      type: object\n      properties:\n        ValidPostalCode:\n          type: boolean\n          description: True if the Postal Code is valid, false otherwise\n        City:\n          type: string\n          description: If valid, City corresponding to the input postal code, such\n            as 'Walnut Creek'\n        StateOrProvince:\n          type: string\n          description: If valid; State or province corresponding to the input postal\n            code, such as 'CA' or 'California'\n        Latitude:\n          type: number\n          description: If the postal code is valid, the degrees latitude of the centroid\n            of the postal code, null otherwise\n          format: double\n          nullable: true\n        Longitude:\n          type: number\n          description: If the postal code is valid, the degrees longitude of the centroid\n            of the postal code, null otherwise\n          format: double\n          nullable: true\n      description: Result of validating a postal code\n    ValidateCountryRequest:\n      type: object\n      properties:\n        RawCountryInput:\n          type: string\n          description: Raw country input - can be a two-letter code (FIPS 10-4 or\n            ISO 3166-1), three-letter code (ISO 3166-1) or country name\n      description: Input parameter to a country validation request\n    ValidateCountryResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        CountryFullName:\n          type: string\n          description: Full name of the country\n        ISOTwoLetterCode:\n          type: string\n          description: Two-letter ISO 3166-1 country code\n        FIPSTwoLetterCode:\n          type: string\n          description: Two-letter FIPS 10-4 country code\n        ThreeLetterCode:\n          type: string\n          description: Three-letter ISO 3166-1 country code\n        IsEuropeanUnionMember:\n          type: boolean\n          description: True if this country is currently a member of the European\n            Union (EU), false otherwise\n        Timezones:\n          type: array\n          description: Time zones (IANA/Olsen) in the country\n          items:\n            $ref: '#/components/schemas/Timezone'\n        ISOCurrencyCode:\n          type: string\n          description: ISO 4217 currency three-letter code associated with the country\n        CurrencySymbol:\n          type: string\n          description: Symbol associated with the currency\n        CurrencyEnglishName:\n          type: string\n          description: Full name of the currency\n        Region:\n          type: string\n          description: Region (continent) in which the country is located; possible\n            values are None, Europe, Americas, Asia, Africa, Oceania\n        Subregion:\n          type: string\n          description: Subregion in which the country is located; possible values\n            are None, NorthernEurope, WesternEurope, SouthernEurope, EasternEurope,\n            CentralAmerica, NorthernAmerica, SouthAmerica, EasternAfrica, MiddleAfrica,\n            NorthernAfrica , SouthernAfrica , WesternAfrica , CentralAsia , EasternAsia\n            , SouthernAsia , SouthEasternAsia , WesternAsia , Southern , Middle ,\n            AustraliaandNewZealand , Melanesia , Polynesia , Micronesia , Caribbean,\n      description: Result of performing a country validation operation\n    Timezone:\n      type: object\n      properties:\n        Name:\n          type: string\n          description: Name of the Time Zone\n        BaseUTCOffset:\n          type: string\n          description: UTC offset for this time zone\n        Now:\n          type: string\n          description: The current time (Now) in this time zone\n          format: date-time\n      description: IANA/Olsen time zone\n    CountryListResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        Countries:\n          type: array\n          description: List of current ISO 3166-1 countries in the world\n          items:\n            $ref: '#/components/schemas/CountryDetails'\n      description: Result of enumerating available countries\n    CountryDetails:\n      type: object\n      properties:\n        CountryName:\n          type: string\n          description: Name of the country\n        ThreeLetterCode:\n          type: string\n          description: Three-letter ISO 3166-1 country code\n        ISOTwoLetterCode:\n          type: string\n          description: Two-letter ISO 3166-1 country code\n        IsEuropeanUnionMember:\n          type: boolean\n          description: True if this country is currently a member of the European\n            Union (EU), false otherwise\n        ISOCurrencyCode:\n          type: string\n          description: ISO 4217 currency three-letter code associated with the country\n        CurrencySymbol:\n          type: string\n          description: Symbol associated with the currency\n        CurrencyEnglishName:\n          type: string\n          description: Full name of the currency\n        Region:\n          type: string\n          description: Region (continent) in which the country is located; possible\n            values are None, Europe, Americas, Asia, Africa, Oceania\n        Subregion:\n          type: string\n          description: Subregion in which the country is located; possible values\n            are None, NorthernEurope, WesternEurope, SouthernEurope, EasternEurope,\n            CentralAmerica, NorthernAmerica, SouthAmerica, EasternAfrica, MiddleAfrica,\n            NorthernAfrica , SouthernAfrica , WesternAfrica , CentralAsia , EasternAsia\n            , SouthernAsia , SouthEasternAsia , WesternAsia , Southern , Middle ,\n            AustraliaandNewZealand , Melanesia , Polynesia , Micronesia , Caribbean,\n      description: Details of one country\n    GetTimezonesRequest:\n      type: object\n      properties:\n        CountryCodeOrName:\n          type: string\n          description: Can be the two-letter, three-letter country codes or country\n            name\n      description: Request to get time zones for a country\n    GetTimezonesResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        CountryFullName:\n          type: string\n          description: Full name of the country\n        ISOTwoLetterCode:\n          type: string\n          description: Two-letter ISO 3166-1 country code\n        FIPSTwoLetterCode:\n          type: string\n          description: Two-letter FIPS 10-4 country code\n        ThreeLetterCode:\n          type: string\n          description: Three-letter ISO 3166-1 country code\n        Timezones:\n          type: array\n          description: Time zones (IANA/Olsen) in the country\n          items:\n            $ref: '#/components/schemas/Timezone'\n      description: Result of performing a get time zones operation\n    ReverseGeocodeAddressRequest:\n      type: object\n      properties:\n        Latitude:\n          type: number\n          description: Latitude coordinate in WGS84 format\n          format: double\n        Longitude:\n          type: number\n          description: Longitude coordinate in WGS84 format\n          format: double\n      description: Request to reverse geocode a Street Address\n    ReverseGeocodeAddressResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the address operation was successful, false otherwise\n        StreetAddress:\n          type: string\n          description: Street address to validate, such as '2950 Buskirk Ave.'\n        City:\n          type: string\n          description: City part of the addrerss to validate, such as 'Walnut Creek'\n        StateOrProvince:\n          type: string\n          description: State or province of the address to validate, such as 'CA'\n            or 'California'\n        PostalCode:\n          type: string\n          description: Zip code or postal code of the address to validate, such as\n            '94597'\n        CountryFullName:\n          type: string\n          description: Name of the country, such as 'United States'.  Global countries\n            are supported.\n        CountryCode:\n          type: string\n          description: Three-letter ISO 3166-1 country code\n      description: Result of reverse geocoding a street address\n    DateTimeNowResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        Now:\n          type: string\n          description: Current date, time, and time zone in standard JSON date format\n          format: date-time\n        NowGmt:\n          type: string\n          description: Current GMT-time-zone date, time, and time zone in standard\n            JSON date format\n          format: date-time\n      description: Current date and time response\n    GetPublicHolidaysRequest:\n      type: object\n      properties:\n        RawCountryInput:\n          type: string\n          description: Two-letter code (FIPS 10-4 or ISO 3166-1) of the country; if\n            not specified, defaults to United States\n        Year:\n          type: integer\n          description: Optional - the year in which to retrieve the holidays; if left\n            blank (0) it will default to the current year\n          format: int32\n      description: Input parameter to a country validation request\n    PublicHolidaysResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        PublicHolidays:\n          type: array\n          description: Public holidays in the requested country and year\n          items:\n            $ref: '#/components/schemas/PublicHolidayOccurrence'\n      description: Result of performing a get public holidays request operation\n    PublicHolidayOccurrence:\n      type: object\n      properties:\n        EnglishName:\n          type: string\n          description: Name of the holiday in English\n        LocalName:\n          type: string\n          description: Local name of the holiday\n        OccurrenceDate:\n          type: string\n          description: Date of the holiday (start time)\n          format: date-time\n        HolidayType:\n          type: string\n          description: 'Type of the holiday; possible values are: Public, Bank, School,\n            Authorities, Optional, Observance'\n        Nationwaide:\n          type: boolean\n          description: True if the holiday is celebrated in all locales in the country,\n            false otherwise\n      description: Public holiday occurrence\n    DateTimeStandardizedParseRequest:\n      type: object\n      properties:\n        RawDateTimeInput:\n          type: string\n          description: Raw string input of a standard-formatted date and time for\n            parsing\n        CountryCode:\n          type: string\n          description: 'Optional: specify the two-letter country code to optimzie\n            date formatting; default is US'\n      description: Input parameter to a date time parsing request\n    DateTimeStandardizedParseResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        ParsedDateResult:\n          type: string\n          description: Result of performing a date time parsing\n          format: date-time\n        Year:\n          type: integer\n          description: Year of the parsed date time result\n          format: int32\n        Month:\n          type: integer\n          description: Month of the parsed date time result\n          format: int32\n        Day:\n          type: integer\n          description: Day of the parsed date time result\n          format: int32\n        Hour:\n          type: integer\n          description: Hour of the parsed date time result (24-hour)\n          format: int32\n        Minute:\n          type: integer\n          description: Minute of the parsed date time result\n          format: int32\n        Second:\n          type: integer\n          description: Second of the parsed date time result\n          format: int32\n        DayOfWeek:\n          type: string\n          description: Day of week\n      description: Result of performing a date time parsing\n    DateTimeNaturalLanguageParseRequest:\n      type: object\n      properties:\n        RawDateTimeInput:\n          type: string\n          description: Raw string input of a natural language-formatted date and time\n            for parsing\n      description: Input parameter to a date time parsing request\n    CheckResponse:\n      type: object\n      properties:\n        ValidDomain:\n          type: boolean\n          description: True if the domain name was valid, false if it is not\n      description: Result of a validation operation\n    DomainQualityResponse:\n      type: object\n      properties:\n        DomainQualityScore:\n          type: number\n          description: The quality score of the domain name; possible values are 0.0\n            to 10.0 with 10.0 being the highest and 0.0 being the lowest quality.\n          format: double\n      description: Result of performing a domain quality score operation\n    WhoisResponse:\n      type: object\n      properties:\n        ValidDomain:\n          type: boolean\n          description: True if the domain is valid, false if it is not\n        RegistrantName:\n          type: string\n          description: Name of the domain registrant\n        RegistrantOrganization:\n          type: string\n          description: Organization name of the domain registrant\n        RegistrantEmail:\n          type: string\n          description: Email address of the domain registrant\n        RegistrantStreetNumber:\n          type: string\n          description: Street number of the address of the domain registrant, if available\n        RegistrantStreet:\n          type: string\n          description: Street name of the address of the domain registrant, if available\n        RegistrantCity:\n          type: string\n          description: City of the domain registrant, if available\n        RegistrantStateOrProvince:\n          type: string\n          description: State or Province of the address of the domain registrant,\n            if available\n        RegistrantPostalCode:\n          type: string\n          description: Postal code of the address of the domain registrant, if available\n        RegistrantCountry:\n          type: string\n          description: Country of the address of the domain registrant, if available\n        RegistrantRawAddress:\n          type: string\n          description: Raw address string of the domain registrant, if available\n        RegistrantTelephone:\n          type: string\n          description: Telephone number of the address of the domain registrant\n        WhoisServer:\n          type: string\n          description: Server used to lookup WHOIS information (may change based on\n            lookup).\n        RawTextRecord:\n          type: string\n          description: WHOIS raw text record\n        CreatedDt:\n          type: string\n          description: Creation date for the record\n          format: date-time\n      description: Result of a WHOIS operation\n    ValidateUrlRequestSyntaxOnly:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n      description: Request to determine if a URL is valid\n    ValidateUrlResponseSyntaxOnly:\n      type: object\n      properties:\n        ValidURL:\n          type: boolean\n          description: True if the URL is valid, false otherwise\n        WellFormedURL:\n          type: string\n          description: Well-formed version of the URL\n        TopLevelDomainName:\n          type: string\n          description: The top-level domain name of the URL, e.g. mydomain.com\n      description: Result of validating a URL with syntax only\n    ValidateUrlRequestFull:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n      description: Request to determine if a URL is valid\n    ValidateUrlResponseFull:\n      type: object\n      properties:\n        ValidURL:\n          type: boolean\n          description: True if the URL has valid syntax, a valid domain, a valid endpoint,\n            and passes virus scan checks; false otherwise\n        Valid_Syntax:\n          type: boolean\n          description: True if the URL has valid syntax, false otherwise\n        Valid_Domain:\n          type: boolean\n          description: True if the domain name is valid and exists, false otherwise\n        Valid_Endpoint:\n          type: boolean\n          description: True if the endpoint is up and responsive and passes a virus\n            scan check, false otherwise\n        WellFormedURL:\n          type: string\n          description: Well-formed version of the URL\n      description: Result of validating a URL with full validation\n    PhishingCheckRequest:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n      description: Request to determine if a URL is a Phishing threat\n    PhishingCheckResponse:\n      type: object\n      properties:\n        CleanURL:\n          type: boolean\n          description: True if the URL is clean, false if it is at risk of containing\n            a Phishing threat or attack\n        ThreatType:\n          type: string\n          description: Threat type of the Phishing threat; possible values are VerifiedPhishingURL,\n            UnverifiedPhishingURL, or VerifiedPhishingDomain\n      description: Result of checking a URL for Phishing threats\n    IsAdminPathResponse:\n      type: object\n      properties:\n        IsAdminPathNode:\n          type: boolean\n          description: True if the input IP address is an Admin Path, and false otherwise\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n      description: Result of performing an Admin Path operation\n    UrlSafetyCheckRequestFull:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n      description: Request to determine if a URL is a safety threat check\n    UrlSafetyCheckResponseFull:\n      type: object\n      properties:\n        CleanURL:\n          type: boolean\n          description: True if the URL is clean, false if it is at risk of containing\n            a safety threat or attack\n        ThreatType:\n          type: string\n          description: Threat type identified, if any; possible values are \"ForcedDownload\",\n            \"VirusesAndMalware\", \"Phishing\"\n      description: Result of checking a URL for safety threats\n    UrlSsrfRequestFull:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n        BlockedDomains:\n          type: array\n          description: Top level domains that you do not want to allow access to,\n            e.g. mydomain.com - will block all subdomains as well\n          items:\n            type: string\n      description: Request to determine if a URL is an SSRF threat check\n    UrlSsrfResponseFull:\n      type: object\n      properties:\n        CleanURL:\n          type: boolean\n          description: True if the URL is clean, false if it is at risk of containing\n            an SSRF threat or attack\n        ThreatLevel:\n          type: string\n          description: Threat level of the URL; possible values are High, Medium,\n            Low and None\n      description: Result of checking a URL for SSRF threats\n    UrlSsrfRequestBatch:\n      type: object\n      properties:\n        InputItems:\n          type: array\n          description: Input URLs to check for SSRF threats\n          items:\n            $ref: '#/components/schemas/UrlSsrfRequestFull'\n      description: Batch operation to perform SSRF threat checks on multiple URLs\n    UrlSsrfResponseBatch:\n      type: object\n      properties:\n        OutputItems:\n          type: array\n          description: Results of the operation, with indexes matched to input values\n          items:\n            $ref: '#/components/schemas/UrlSsrfResponseFull'\n      description: Result of performing SSRF threat checks on multiple URLs\n    UrlHtmlSsrfRequestFull:\n      type: object\n      properties:\n        URL:\n          type: string\n          description: URL to validate\n      description: Request to determine if a URL contains HTML-embedded SSRF threats\n    UrlHtmlSsrfResponseFull:\n      type: object\n      properties:\n        CleanURL:\n          type: boolean\n          description: True if the URL is clean, false if it is at risk of containing\n            an SSRF threat or attack\n        HttpResponseCode:\n          type: integer\n          description: HTTP response code from the URL\n          format: int32\n      description: Result of checking a URL for HTML-embedded SSRF threats\n    AddressVerifySyntaxOnlyResponse:\n      type: object\n      properties:\n        ValidAddress:\n          type: boolean\n          description: True if the email address is syntactically valid, false if\n            it is not\n        Domain:\n          type: string\n          description: Domain name of the email address\n        IsFreeEmailProvider:\n          type: boolean\n          description: True if the email domain name is a free provider (typically\n            a free to sign up web email provider for consumers / personal use), false\n            otherwise.\n        IsDisposable:\n          type: boolean\n          description: True if the email address is a disposable email address, false\n            otherwise; these disposable providers are not typically used to receive\n            email and so will have a low likelihood of opening mail sent there.\n      description: Syntactic validity of email address\n    AddressGetServersResponse:\n      type: object\n      properties:\n        Success:\n          type: boolean\n          description: True if partial address validation was successufl, false otherwise\n        Servers:\n          type: array\n          description: Email servers for this email address\n          items:\n            type: string\n      description: Result of a partial email address validation\n    FullEmailValidationResponse:\n      type: object\n      properties:\n        ValidAddress:\n          type: boolean\n          description: True if the email address is valid overall, false otherwise\n        MailServerUsedForValidation:\n          type: string\n          description: Email server connected to for verification\n        Valid_Syntax:\n          type: boolean\n          description: True if the syntax of the email address is valid, false otherwise.  This\n            is one component of ValidAddress, but not the only one.\n        Valid_Domain:\n          type: boolean\n          description: True if the domain name of the email address is valid, false\n            otherwise.  This is one component of ValidAddress, but not the only one.\n        Valid_SMTP:\n          type: boolean\n          description: True if the email address was verified by the remote server,\n            false otherwise.  This is one component of ValidAddress, but not the only\n            one.\n        IsCatchallDomain:\n          type: boolean\n          description: True if the domain is a catch-all domain name, false otherwise.  Catch-all\n            domain names, while rare, always accept inbound email to ensure they do\n            not lose any potentially useful emails.  Catch-all domain names can occassionally\n            be configured to first accept and store all inbound email, but then later\n            send a bounce email back to the sender after a delayed period of time.\n        Domain:\n          type: string\n          description: Domain name of the email address\n        IsFreeEmailProvider:\n          type: boolean\n          description: True if the email domain name is a free provider (typically\n            a free to sign up web email provider for consumers / personal use), false\n            otherwise.\n        IsDisposable:\n          type: boolean\n          description: True if the email address is a disposable email address, false\n            otherwise; these disposable providers are not typically used to receive\n            email and so will have a low likelihood of opening mail sent there.\n      description: Full email addresss validation result\n    IPIntelligenceResponse:\n      type: object\n      properties:\n        IsBot:\n          type: boolean\n          description: True if the IP address is a known bot, otherwise false\n        IsTorNode:\n          type: boolean\n          description: True if the IP address is a known Tor exit node, otherwise\n            false\n        IsThreat:\n          type: boolean\n          description: True if the IP address is a known threat IP, otherwise false\n        IsEU:\n          type: boolean\n          description: True if the IP address is in the European Union, otherwise\n            false\n        Location:\n          $ref: '#/components/schemas/GeolocateResponse'\n        CurrencyCode:\n          type: string\n          description: ISO 4217 currency code for the IP address location\n        CurrencyName:\n          type: string\n          description: Name of the currency in English\n        RegionArea:\n          type: string\n          description: Region (continent) in which the country is located; possible\n            values are None, Europe, Americas, Asia, Africa, Oceania\n        SubregionArea:\n          type: string\n          description: Subregion in which the country is located; possible values\n            are None, NorthernEurope, WesternEurope, SouthernEurope, EasternEurope,\n            CentralAmerica, NorthernAmerica, SouthAmerica, EasternAfrica, MiddleAfrica,\n            NorthernAfrica , SouthernAfrica , WesternAfrica , CentralAsia , EasternAsia\n            , SouthernAsia , SouthEasternAsia , WesternAsia , Southern , Middle ,\n            AustraliaandNewZealand , Melanesia , Polynesia , Micronesia , Caribbean,\n      description: IP address intelligence result\n    GeolocateResponse:\n      type: object\n      properties:\n        CountryCode:\n          type: string\n          description: Two-letter country code of IP address\n        CountryName:\n          type: string\n          description: Country name of IP address\n        City:\n          type: string\n          description: City of IP address\n        RegionCode:\n          type: string\n          description: State/region code of IP address\n        RegionName:\n          type: string\n          description: State/region of IP address\n        ZipCode:\n          type: string\n          description: Zip or postal code of IP address\n        TimezoneStandardName:\n          type: string\n          description: Timezone of IP address\n        Latitude:\n          type: number\n          description: Latitude of IP address\n          format: double\n        Longitude:\n          type: number\n          description: Longitude of IP address\n          format: double\n      description: Geolocation result of performing an IP address geolocation operation.  This\n        product includes GeoLite2 data created by MaxMind, available from www.maxmind.com.\n    GeolocateStreetAddressResponse:\n      type: object\n      properties:\n        CountryCode:\n          type: string\n          description: Two-letter country code of IP address\n        CountryName:\n          type: string\n          description: Country name of IP address\n        StreetAddress:\n          type: string\n          description: Street address of IP address\n        City:\n          type: string\n          description: City of IP address\n        RegionName:\n          type: string\n          description: State/region of IP address\n        ZipCode:\n          type: string\n          description: Zip or postal code of IP address\n      description: Geolocation street address result\n    IPThreatResponse:\n      type: object\n      properties:\n        IsThreat:\n          type: boolean\n          description: True if the input IP address is a threat, false otherwise\n        ThreatType:\n          type: string\n          description: Specifies the type of IP threat; possible values include Blocklist,\n            Botnet, WebBot\n      description: Result of performing a IP threat check on an IP address\n    TorNodeResponse:\n      type: object\n      properties:\n        IsTorNode:\n          type: boolean\n          description: True if the input IP address is a Tor exit node, false otherwise\n      description: Result of performing a Tor node check on an IP address\n    BotCheckResponse:\n      type: object\n      properties:\n        IsBot:\n          type: boolean\n          description: True if the input IP address is a Bot or Robot, false otherwise\n      description: Result of performing a Bot check on an IP address\n    IPReverseDNSLookupResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if a domain was found, false otherwise\n        HostName:\n          type: string\n          description: Host name (fully-qualified) associated with the IP address,\n            if any\n      description: Result of performing a Reverse Domain (DNS) lookup on an IP address\n    LeadEnrichmentRequest:\n      type: object\n      properties:\n        ContactBusinessEmail:\n          type: string\n          description: The person's business email address for the lead\n        ContactFirstName:\n          type: string\n          description: The person's first name for the lead\n        ContactLastName:\n          type: string\n          description: The person's last name for the lead\n        CompanyName:\n          type: string\n          description: Name of the company for the lead\n        CompanyDomainName:\n          type: string\n          description: Domain name / website for the lead\n        CompanyHouseNumber:\n          type: string\n          description: House number of the address of the company for the lead\n        CompanyStreet:\n          type: string\n          description: Street name of the address of the company for the lead\n        CompanyCity:\n          type: string\n          description: City of the address of the company for the lead\n        CompanyStateOrProvince:\n          type: string\n          description: State or Province of the address of the company for the lead\n        CompanyPostalCode:\n          type: string\n          description: Postal Code of the address of the company for the lead\n        CompanyCountry:\n          type: string\n          description: Country of the address of the company for the lead\n        CompanyCountryCode:\n          type: string\n          description: Country Code (2-letter ISO 3166-1) of the address of the company\n            for the lead\n        CompanyTelephone:\n          type: string\n          description: Telephone of the company office for the lead\n        CompanyVATNumber:\n          type: string\n          description: VAT number of the company for the lead\n      description: Input lead contact; fill in known fields to extend them with matched\n        field values\n    LeadEnrichmentResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        LeadType:\n          type: string\n          description: The type of the lead; possible types are Junk (a single individual\n            using a disposable/throwaway email address); Individual (a single individual,\n            typically a consumer, not purchasing on behalf of a business); SmallBusiness\n            (a small business, typically with fewer than 100 employees); MediumBusiness\n            (a medium business, larger than 100 employees but fewer than 1000 employees);\n            Enterprise (a large business with greater than 1000 employees); Business\n            (a business customer of unknown size)\n        ContactBusinessEmail:\n          type: string\n          description: The person's business email address for the lead\n        ContactFirstName:\n          type: string\n          description: The person's first name for the lead\n        ContactLastName:\n          type: string\n          description: The person's last name for the lead\n        ContactGender:\n          type: string\n          description: Gender for contact name; possible values are Male, Female,\n            and Neutral (can be applied to Male or Female).  Requires ContactFirstName.\n        CompanyName:\n          type: string\n          description: Name of the company for the lead\n        CompanyDomainName:\n          type: string\n          description: Domain name / website for the lead\n        CompanyHouseNumber:\n          type: string\n          description: House number of the address of the company for the lead\n        CompanyStreet:\n          type: string\n          description: Street name of the address of the company for the lead\n        CompanyCity:\n          type: string\n          description: City of the address of the company for the lead\n        CompanyStateOrProvince:\n          type: string\n          description: State or Province of the address of the company for the lead\n        CompanyPostalCode:\n          type: string\n          description: Postal Code of the address of the company for the lead\n        CompanyCountry:\n          type: string\n          description: Country Name of the address of the company for the lead\n        CompanyCountryCode:\n          type: string\n          description: Country Code (2-letter ISO 3166-1) of the address of the company\n            for the lead\n        CompanyTelephone:\n          type: string\n          description: Telephone of the company office for the lead\n        CompanyVATNumber:\n          type: string\n          description: VAT number of the company for the lead\n        EmployeeCount:\n          type: integer\n          description: Count of employees at the company (estimated), if available\n          format: int32\n      description: Result of the lead enrichment process\n    FullNameValidationRequest:\n      type: object\n      properties:\n        FullNameString:\n          type: string\n          description: Full name to process as a free-form string; supports many components\n            such as First Name, Middle Name, Last Name, Title, Nickname, Suffix, and\n            Display Name\n      description: Request to validate a full name string\n    FullNameValidationResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the validation operation was successful, false otherwise\n        ValidationResult_FirstName:\n          type: string\n          description: 'Possible values are: ValidFirstName, ValidUnknownFirstName,\n            InvalidSpamInput, InvalidCharacters, InvalidEmpty'\n        ValidationResult_LastName:\n          type: string\n          description: 'Possible values are: ValidLastName, ValidUnknownLastName,\n            InvalidSpamInput, InvalidCharacters, InvalidEmpty'\n        Title:\n          type: string\n          description: The person's title (if supplied), e.g. \"Mr.\" or \"Ms.\"\n        FirstName:\n          type: string\n          description: The first name (given name)\n        MiddleName:\n          type: string\n          description: The middle name(s); if there are multiple names they will be\n            separated by spaces\n        LastName:\n          type: string\n          description: The last name (surname)\n        NickName:\n          type: string\n          description: Nickname (if supplied)\n        Suffix:\n          type: string\n          description: Suffix to the name, e.g. \"Jr.\" or \"Sr.\"\n        DisplayName:\n          type: string\n          description: The full display name of the name\n      description: Result of a full name validation operation\n    FirstNameValidationRequest:\n      type: object\n      properties:\n        FirstName:\n          type: string\n          description: First name to process\n      description: Request to validate a first name\n    FirstNameValidationResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the validation operation was successful, false otherwise\n        ValidationResult:\n          type: string\n          description: 'Possible values are: ValidFirstName, ValidUnknownFirstName,\n            InvalidSpamInput, InvalidCharacters, InvalidEmpty'\n      description: Result of a first name validation operation\n    LastNameValidationRequest:\n      type: object\n      properties:\n        LastName:\n          type: string\n          description: Last name to process\n      description: Request to validate a last name\n    LastNameValidationResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the validation operation was successful, false otherwise\n        ValidationResult:\n          type: string\n          description: 'Possible values are: ValidLastName, ValidUnknownLastName,\n            InvalidSpamInput, InvalidCharacters, InvalidEmpty'\n      description: Result of a last name validation operation\n    GetGenderRequest:\n      type: object\n      properties:\n        FirstName:\n          type: string\n          description: Input first name (given name) to get the gender of\n        CountryCode:\n          type: string\n          description: Optional; the country for this name, possible values are \"US\",\n            \"LY\", \"NI\", \"TT\", \"MK\", \"KZ\", \"BO\", \"UG\", \"TZ\", \"CL\", \"SI\", \"MA\", \"RW\",\n            \"VN\", \"AW\", \"CY\", \"BH\", \"SG\", \"ZA\", \"MU\", \"BR\", \"TN\", \"KH\", \"US\", \"TH\",\n            \"TW\", \"UY\", \"DO\", \"CO\", \"UA\", \"QA\", \"BY\", \"SN\", \"SD\", \"FJ\", \"LB\", \"BE\",\n            \"ML\", \"LV\", \"FR\", \"TM\", \"NG\", \"EC\", \"NO\", \"SL\", \"CR\", \"PA\", \"GE\", \"CH\",\n            \"KR\", \"RS\", \"ZM\", \"FI\", \"BF\", \"MC\", \"AU\", \"GA\", \"LS\", \"RU\", \"IN\", \"SE\",\n            \"LK\", \"BZ\", \"MX\", \"GH\", \"AF\", \"TJ\", \"BN\", \"DZ\", \"CM\", \"GR\", \"MD\", \"HN\",\n            \"AT\", \"NZ\", \"SV\", \"GW\", \"NA\", \"AR\", \"MZ\", \"PK\", \"MN\", \"IQ\", \"BW\", \"VE\",\n            \"PT\", \"BS\", \"AL\", \"TG\", \"ID\", \"ET\", \"CF\", \"JP\", \"BB\", \"PH\", \"CU\", \"BD\",\n            \"AO\", \"SM\", \"LC\", \"ME\", \"RO\", \"DA\"  \"NI\", \"LO\", \"ES\", \"EE\", \"IL\", \"ZW\",\n            \"MW\", \"LU\", \"IR\", \"SC\", \"NL\", \"JO\", \"AM\", \"DE\", \"GL\", \"OM\", \"DK\", \"HR\",\n            \"LI\", \"TD\", \"KM\", \"BA\", \"GM\", \"GD\", \"CA\", \"CZ\", \"MR\", \"ST\", \"IS\", \"LR\",\n            \"IE\", \"VC\", \"AE\", \"KG\", \"DJ\", \"TR\", \"KE\", \"NE\", \"UZ\", \"CN\", \"GQ\", \"SK\",\n            \"BJ\", \"MG\", \"BT\", \"EG\", \"PL\", \"IT\", \"SA\", \"MY\", \"CI\", \"AG\", \"AD\", \"KS\",\n            \"HU\", \"CG\", \"KP\", \"DM\", \"GN\", \"GT\", \"NP\", \"JM\", \"LA\", \"GB\", \"BG\", \"HT\",\n            \"PE\", \"AZ\", \"LT\", \"SZ\", \"PY\", \"MT\", \"VA\", \"SY\"\n      description: Request to get the gender from a first name\n    GetGenderResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if successful, false otherwise\n        Gender:\n          type: string\n          description: Gender for this name; possible values are Male, Female, and\n            Neutral (can be applied to Male or Female)\n      description: Result of the GetGender operation\n    ValidateIdentifierRequest:\n      type: object\n      properties:\n        Input:\n          type: string\n          description: Text string identifier input\n        AllowWhitespace:\n          type: boolean\n          description: True if whitespace is allowed in the identifier, false otherwise\n        AllowHyphens:\n          type: boolean\n          description: True if hyphens are allowd in the identifier, false otherwise\n        AllowUnderscore:\n          type: boolean\n          description: True if underscores are allowed in the identifier, false otherwise\n        AllowNumbers:\n          type: boolean\n          description: True if numbers are allowed in the identifier, false otherwise\n        AllowPeriods:\n          type: boolean\n          description: True if periods are allowed in the identifier, false otherwise\n        MaxLength:\n          type: integer\n          description: Optional; maximum length, if any, of the identifier\n          format: int32\n        MinLength:\n          type: integer\n          description: Optional; minimum length, if any, of the identifier\n          format: int32\n      description: Identifier validation request, including the input identifier as\n        well as various identifier rules\n    ValidateIdentifierResponse:\n      type: object\n      properties:\n        ValidIdentifier:\n          type: boolean\n          description: True if the input identifier is valid, false otherwise\n        Error:\n          type: string\n          description: 'Resulting error from the identifier validation; possible errors\n            are: \"InputIsEmpty\", \"ContainsWhitespace\", \"ContainsNumbers\", \"ContainsHyphen\",\n            \"ContainsUnderscore\", \"ContainsPeriod\", \"TooShort\", \"TooLong\", \"ContainsSpecialCharacters\"'\n      description: Result of performing an identifier validation operation\n    PhoneNumberValidateRequest:\n      type: object\n      properties:\n        PhoneNumber:\n          type: string\n          description: Raw phone number string to parse as input for validation\n        DefaultCountryCode:\n          type: string\n          description: Optional, default country code.  If left blank, will default\n            to \"US\".\n      description: Request to validate a phone number\n    PhoneNumberValidationResponse:\n      type: object\n      properties:\n        IsValid:\n          type: boolean\n          description: True if the phone number is valid, false otherwise\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false if there was an\n            error during validation.  See IsValid for validation result.\n        PhoneNumberType:\n          type: string\n          description: \"Type of phone number; possible values are: FixedLine, Mobile,\\\n            \\ FixedLineOrMobile, TollFree, PremiumRate, \\r\\nSharedCost, Voip, PersonalNumber,\\\n            \\ Pager, Uan, Voicemail, Unknown\"\n        E164Format:\n          type: string\n          description: E.164 format of the phone number\n        InternationalFormat:\n          type: string\n          description: Internaltional format of the phone number\n        NationalFormat:\n          type: string\n          description: National format of the phone number\n        CountryCode:\n          type: string\n          description: Two digit country code of the phone number\n        CountryName:\n          type: string\n          description: User-friendly long name of the country for the phone number\n      description: Result from validating a phone number\n    SqlInjectionDetectionResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        ContainedSqlInjectionAttack:\n          type: boolean\n          description: True if the input contained SQL Injection attacks, false otherwise\n        OriginalInput:\n          type: string\n          description: Original input string\n      description: Result of performing an SQL Injection protection operation\n    SqlInjectionCheckBatchRequest:\n      type: object\n      properties:\n        RequestItems:\n          type: array\n          description: Multiple items to detect for SQL Injection\n          items:\n            $ref: '#/components/schemas/SqlInjectionCheckRequestItem'\n        DetectionLevel:\n          type: string\n          description: Set to Normal to target a high-security SQL Injection detection\n            level with a very low false positive rate; select High to target a very-high\n            security SQL Injection detection level with higher false positives.  Default\n            is Normal (recommended).\n      description: Input to a batch SQL Injection detection operation\n    SqlInjectionCheckRequestItem:\n      type: object\n      properties:\n        InputText:\n          type: string\n          description: Individual input text item to check for SQL Injection\n      description: Individual item to protect for SQL Injection\n    SqlInjectionCheckBatchResponse:\n      type: object\n      properties:\n        ResultItems:\n          type: array\n          description: Results from performing a batch SQL Injection detection operation;\n            order is preserved from input data\n          items:\n            $ref: '#/components/schemas/SqlInjectionDetectionResult'\n      description: Result of performing a batch XSS protection operation\n    XssProtectionResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        ContainedXss:\n          type: boolean\n          description: True if the input contained XSS scripting, false otherwise\n        OriginalInput:\n          type: string\n          description: Original input string\n        NormalizedResult:\n          type: string\n          description: Normalized string result, with XSS removed\n      description: Result of performing an XSS protection operation\n    XssProtectionBatchRequest:\n      type: object\n      properties:\n        RequestItems:\n          type: array\n          description: Multiple items to protect for XSS\n          items:\n            $ref: '#/components/schemas/XssProtectionRequestItem'\n      description: Input to a batch XSS protection operation\n    XssProtectionRequestItem:\n      type: object\n      properties:\n        InputText:\n          type: string\n          description: Individual input text item to protect from XSS\n      description: Individual item to protect for XSS\n    XssProtectionBatchResponse:\n      type: object\n      properties:\n        ResultItems:\n          type: array\n          description: Results from performing a batch XSS protection operation\n          items:\n            $ref: '#/components/schemas/XssProtectionResult'\n      description: Result of performing a batch XSS protection operation\n    HtmlSsrfDetectionResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        ContainedThreats:\n          type: boolean\n          description: True if the input contained SSRF threats, false otherwise\n      description: Result of performing an XXE threat detection operation\n    XxeDetectionResult:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        ContainedXxe:\n          type: boolean\n          description: True if the input contained XXE threats, false otherwise\n      description: Result of performing an XXE threat detection operation\n    XxeDetectionBatchRequest:\n      type: object\n      properties:\n        RequestItems:\n          type: array\n          description: Multiple items to protect for XXE\n          items:\n            $ref: '#/components/schemas/XxeDetectionRequestItem'\n      description: Input to a batch XXE detection operation\n    XxeDetectionRequestItem:\n      type: object\n      properties:\n        InputText:\n          type: string\n          description: Individual input text item to protect from XXE\n        AllowInternetUrls:\n          type: boolean\n          description: 'Optional: Set to true to allow Internet-based dependency URLs\n            for DTDs and other XML External Entitites, set to false to block.  Default\n            is false.'\n        KnownSafeUrls:\n          type: array\n          description: 'Optional: Comma separated list of fully-qualified URLs that\n            will automatically be considered safe.'\n          items:\n            type: string\n        KnownUnsafeUrls:\n          type: array\n          description: 'Optional: Comma separated list of fully-qualified URLs that\n            will automatically be considered unsafe.'\n          items:\n            type: string\n      description: Individual item to detect for XXE\n    XxeDetectionBatchResponse:\n      type: object\n      properties:\n        ResultItems:\n          type: array\n          description: Results from performing a batch XSS protection operation\n          items:\n            $ref: '#/components/schemas/XxeDetectionResult'\n      description: Result of performing a batch XXE detection operation\n    UserAgentValidateRequest:\n      type: object\n      properties:\n        UserAgentString:\n          type: string\n          description: The user agent string you wish to parse and validate\n      description: User-Agent parse and validation request\n    UserAgentValidateResponse:\n      type: object\n      properties:\n        Successful:\n          type: boolean\n          description: True if the operation was successful, false otherwise\n        IsBot:\n          type: boolean\n          description: True if the request is a known robot, false otherwise\n        BotName:\n          type: string\n          description: Optional; name of the robot if the request was from a known\n            robot, otherwise null\n          nullable: true\n        BotURL:\n          type: string\n          description: Optional; if available, the URL to the robot\n        OperatingSystem:\n          type: string\n          description: Operating System of the User-Agent (e.g. Windows)\n        OperatingSystemCPUPlatform:\n          type: string\n          description: The CPU platform of the User-Agent (e.g. x64)\n        OperatingSystemVersion:\n          type: string\n          description: The version of the operating system of the User-Agent (e.g.\n            \"10\" for Windows 10)\n        DeviceType:\n          type: string\n          description: Device type of the User-Agent; possible values are \"DESKTOP\",\n            \"SMARTPHONE\", \"TABLET\"\n        DeviceBrandName:\n          type: string\n          description: Brand name of the User-Agent\n        DeviceModel:\n          type: string\n          description: Model name or number of the User-Agent\n        BrowserName:\n          type: string\n          description: Name of the Browser\n        BrowserVersion:\n          type: string\n          description: Version of the Browser\n        BrowserEngineName:\n          type: string\n          description: Name of the Browser Engine\n        BrowserEngineVersion:\n          type: string\n          description: Version of the Browser Engine\n      description: The result of a User-Agent validation request\n    VatLookupRequest:\n      type: object\n      properties:\n        VatCode:\n          type: string\n          description: VAT code to lookup; example \"CZ25123891\"\n      description: Input to a VAT lookup request\n    VatLookupResponse:\n      type: object\n      properties:\n        CountryCode:\n          type: string\n          description: Two-letter country code\n        VatNumber:\n          type: string\n          description: VAT number\n        IsValid:\n          type: boolean\n          description: True if the VAT code is valid, false otherwise\n        BusinessName:\n          type: string\n          description: Name of the business\n        BusinessAddress:\n          type: string\n          description: Business address as a single string\n        BusinessBuilding:\n          type: string\n          description: For the business address, the name of the building, house or\n            structure if applicable, such as \"Cloudmersive Building 2\".  This will\n            often by null.\n          nullable: true\n        BusinessStreetNumber:\n          type: string\n          description: For the business address, the street number or house number\n            of the address.  For example, in the address \"1600 Pennsylvania Avenue\n            NW\" the street number would be \"1600\".  This value will typically be populated\n            for most addresses.\n        BusinessStreet:\n          type: string\n          description: For the business address, the name of the street or road of\n            the address.  For example, in the address \"1600 Pennsylvania Avenue NW\"\n            the street number would be \"Pennsylvania Avenue NW\".\n        BusinessCity:\n          type: string\n          description: For the business address, the city of the address.\n        BusinessStateOrProvince:\n          type: string\n          description: For the business address, the state or province of the address.\n        BusinessPostalCode:\n          type: string\n          description: For the business address, the postal code or zip code of the\n            address.\n        BusinessCountry:\n          type: string\n          description: For the business address, country of the address, if present\n            in the address.  If not included in the address it will be null.\n          nullable: true\n  securitySchemes:\n    Apikey:\n      type: apiKey\n      description: Represents API Key `Apikey`\n      name: Apikey\n      in: header\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/cloudmersive.validate/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/cloudmersive.validate/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}