{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nramos0/fluent-reader"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "backend/api.yml",
			"byteSize": 20551,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.0\n  title: Fluent Reader Server\nservers:\n  - url: \"http://localhost\"\npaths:\n  /user:\n    get:\n      summary: \"Returns a list of at most 10 users ordered by ascending id\"\n      operationId: getUserList\n      tags:\n        - user\n      parameters:\n        - name: offset\n          in: query\n          description: The number of users to skip in the database list\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"Successful fetch of user list\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  users:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/SimpleUser\"\n                  count:\n                    type: integer\n                    format: int32\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      summary: \"Update a user's information\"\n      operationId: updateUser\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  description: A new username\n                password:\n                  type: string\n                  description: A new password\n                study_lang:\n                  type: string\n                  description: A new study language setting\n                display_lang:\n                  type: string\n                  description: A new display language setting\n      responses:\n        \"200\":\n          description: \"User updated successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\n  /user/log:\n    post:\n      summary: \"Log into the system and get a token\"\n      operationId: login\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - username\n                - password\n              properties:\n                username:\n                  type: string\n                  description: The username to login with\n                password:\n                  type: string\n                  description: The password to login with\n      responses:\n        \"200\":\n          description: \"Login successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n                  refresh_token:\n                    type: string\n        \"401\":\n          description: \"Login unsuccessful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/reg:\n    post:\n      summary: \"Register for an account\"\n      operationId: register\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - username\n                - password\n                - study_lang\n                - display_lang\n              properties:\n                username:\n                  type: string\n                  description: The username to register with\n                password:\n                  type: string\n                  description: The password to register with\n                study_lang:\n                  type: string\n                  description: The user's study language code\n                display_lang:\n                  type: string\n                  description: The user's preferred display language code\n      responses:\n        \"201\":\n          description: \"Registration successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  user:\n                    $ref: \"#/components/schemas/SimpleUser\"\n        \"400\":\n          description: \"Registration unsuccessful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"409\":\n          description: \"Registration unsuccessful: User with username exists\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/refresh:\n    post:\n      summary: \"Refresh a user's token using the previous token and a refresh token\"\n      operationId: refresh\n      tags:\n        - user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - token\n                - refresh_token\n              properties:\n                token:\n                  type: string\n                  description: An expired token that matches the user to login\n                refresh_token:\n                  type: string\n                  description: The user's current unique refresh token\n      responses:\n        \"200\":\n          description: \"Login successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n        \"401\":\n          description: \"Login unsuccessful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /user/data:\n    get:\n      summary: \"Get user's word status and word definition data\"\n      operationId: getWordData\n      tags:\n        - userData\n      responses:\n        \"200\":\n          description: \"Fetch successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/WordData\"\n\n        \"401\":\n          description: \"Login unsuccessful\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user/data/status:\n    put:\n      summary: \"Update a word's status\"\n      operationId: updateWordStatus\n      tags:\n        - userData\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - lang\n                - word\n                - status\n              properties:\n                lang:\n                  type: string\n                word:\n                  type: string\n                status:\n                  type: string\n      responses:\n        \"200\":\n          description: \"Update successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Message\"\n  /user/data/definition:\n    put:\n      summary: \"Update a word's definition\"\n      operationId: updateWordDefinition\n      tags:\n        - userData\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - lang\n                - word\n                - definition\n              properties:\n                lang:\n                  type: string\n                word:\n                  type: string\n                definition:\n                  type: string\n      responses:\n        \"200\":\n          description: \"Update successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \"#/components/schemas/Message\"\n  /article:\n    post:\n      summary: \"Post an article\"\n      operationId: postArticle\n      tags:\n        - article\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - title\n                - content\n                - language\n                - is_private\n              properties:\n                title:\n                  type: string\n                  description: The article's title\n                author:\n                  type: string\n                  description: The article's author\n                content:\n                  type: string\n                  description: The article's content\n                language:\n                  type: string\n                  description: The language the article is written in\n                tags:\n                  type: array\n                  items:\n                    type: string\n                is_private:\n                  type: boolean\n      responses:\n        \"201\":\n          description: \"Article creation successful\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  article:\n                    $ref: \"#/components/schemas/SimpleArticle\"\n  /article/system/list:\n    get:\n      summary: \"Returns a list of system library articles\"\n      operationId: getSystemArticleList\n      tags:\n        - article\n      parameters:\n        - name: offset\n          in: query\n          description: The number of articles to skip in the database list\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: lang\n          in: query\n          description: The language of the returned articles, either zh or en\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: A search query to query the articles by title/tag. If this parameter is specified, lang must also be specified\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"Successful fetch of article list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleArticleList\"\n  /article/system/single/{article_id}:\n    get:\n      summary: \"Returns all data for a single system article with the given id\"\n      operationId: getFullSystemArticle\n      tags:\n        - article\n      parameters:\n        - name: article_id\n          in: path\n          description: The id of the article to fetch\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"Successful fetch of single system article\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Article\"\n  /article/user/list:\n    get:\n      summary: \"Returns a list of articles uploaded by a given user\"\n      operationId: getUserUploadedArticleList\n      tags:\n        - article\n      parameters:\n        - name: user_id\n          in: query\n          description: The id of the user to fetch all uploaded articles from. Defaults to the user id of the auth token's user\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: The number of articles to skip in the database list\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: lang\n          in: query\n          description: The language of the returned articles, either zh or en\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: A search query to query the articles by title/tag. If this parameter is specified, lang must also be specified\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"Successful fetch of article list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleArticleList\"\n  /article/user/all/list:\n    get:\n      summary: \"Returns a list of all user-uploaded articles (non-system articles)\"\n      operationId: getAllUserUploadedArticleList\n      tags:\n        - article\n      parameters:\n        - name: offset\n          in: query\n          description: The number of articles to skip in the database list\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: lang\n          in: query\n          description: The language of the returned articles, either zh or en\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: A search query to query the articles by title/tag. If this parameter is specified, lang must also be specified\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"Successful fetch of article list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleArticleList\"\n  /article/user/single/{article_id}:\n    get:\n      summary: \"Returns all data for a single user article with the given id\"\n      operationId: getFullUserArticle\n      tags:\n        - article\n      parameters:\n        - name: article_id\n          in: path\n          description: The id of the article to fetch\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: \"Successful fetch of single user article\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Article\"\n  /article/user/saved/list:\n    get:\n      summary: \"Returns a list of all articles saved by the authenticated user\"\n      operationId: getSavedArticleList\n      tags:\n        - article\n      parameters:\n        - name: offset\n          in: query\n          description: The number of articles to skip in the database list\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: lang\n          in: query\n          description: The language of the returned articles, either zh or en\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: A search query to query the articles by title/tag. If this parameter is specified, lang must also be specified\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"Successful fetch of article list\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SimpleArticleList\"\n  /article/user/saved/single:\n    put:\n      summary: \"Save an article to the user's saved list\"\n      operationId: saveArticle\n      tags:\n        - article\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - article_id\n              properties:\n                article_id:\n                  type: integer\n                  format: int32\n                  description: The id of the article to save\n      responses:\n        \"200\":\n          description: \"Article saved successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\n    delete:\n      summary: \"Delete an article from the user's saved list\"\n      operationId: deleteSavedArticle\n      tags:\n        - article\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - article_id\n              properties:\n                article_id:\n                  type: integer\n                  format: int32\n                  description: The id of the article to remove from the user's saved list\n      responses:\n        \"200\":\n          description: \"Article deleted successfully\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\ncomponents:\n  schemas:\n    User:\n      type: object\n      required:\n        - id\n        - username\n        - pass\n        - created_on\n        - study_lang\n        - display_lang\n        - refresh_token\n      properties:\n        id:\n          type: integer\n          format: int32\n        username:\n          type: string\n        pass:\n          type: string\n        created_on:\n          $ref: \"#/components/schemas/Timestamp\"\n        study_lang:\n          type: string\n        display_lang:\n          type: string\n        refresh_token:\n          type: string\n    SimpleUser:\n      type: object\n      required:\n        - id\n        - username\n      properties:\n        id:\n          type: integer\n          format: int32\n        username:\n          type: string\n    Timestamp:\n      type: object\n      required:\n        - secs_since_epoch\n        - nanos_since_epoch\n      properties:\n        secs_since_epoch:\n          type: integer\n          format: int64\n        nanos_since_epoch:\n          type: integer\n          format: int64\n    Error:\n      type: object\n      required:\n        - error\n      properties:\n        error:\n          type: string\n    Message:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n    Article:\n      type: object\n      required:\n        - id\n        - title\n        - content\n        - content_length\n        - created_on\n        - is_system\n        - uploader_id\n        - tags\n        - is_private\n      properties:\n        id:\n          type: integer\n          format: int32\n        title:\n          type: string\n        author:\n          type: string\n        content:\n          type: string\n        content_length:\n          type: integer\n          format: int32\n        created_on:\n          $ref: \"#/components/schemas/Timestamp\"\n        is_system:\n          type: boolean\n        uploader_id:\n          type: integer\n          format: int32\n        tags:\n          type: array\n          items:\n            type: string\n        is_private:\n          type: boolean\n    SimpleArticle:\n      type: object\n      required:\n        - id\n        - title\n        - content_length\n        - created_on\n        - is_system\n      properties:\n        id:\n          type: integer\n          format: int32\n        title:\n          type: string\n        author:\n          type: string\n        content_length:\n          type: integer\n          format: int32\n        created_on:\n          $ref: \"#/components/schemas/Timestamp\"\n        is_system:\n          type: boolean\n        tags:\n          type: array\n          items:\n            type: string\n    SimpleArticleList:\n      type: object\n      properties:\n        articles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SimpleArticle\"\n        count:\n          type: integer\n          format: int32\n\n    WordStatusInnerLangData:\n      type: object\n      required:\n        - known\n        - learning\n      properties:\n        known:\n          type: object\n        learning:\n          type: object\n    WordStatusData:\n      type: object\n      required:\n        - en\n        - zh\n      properties:\n        en:\n          $ref: \"#/components/schemas/WordStatusInnerLangData\"\n        zh:\n          $ref: \"#/components/schemas/WordStatusInnerLangData\"\n    WordDefinitionData:\n      type: object\n      required:\n        - en\n        - zh\n      properties:\n        en:\n          type: object\n        zh:\n          type: object\n    WordData:\n      type: object\n      required:\n        - word_status_data\n        - word_definition_data\n      properties:\n        word_status_data:\n          $ref: \"#/components/schemas/WordStatusData\"\n        word_definition_data:\n          $ref: \"#/components/schemas/WordDefinitionData\"\n",
			"canonicalURL": "/github.com/nramos0/fluent-reader@a9932852679cd66075f4d90ad24d178cb70fc775/-/blob/backend/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/nramos0/fluent-reader/blob/a9932852679cd66075f4d90ad24d178cb70fc775/backend/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}