{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kyma-project/rafter"
		},
		"file": {
			"name": "upload-service-openapi.yaml",
			"size": 0,
			"path": "docs/assets/upload-service-openapi.yaml",
			"byteSize": 5099,
			"content": "openapi: 3.0.0\ninfo:\n  description: This application provides an API to enable a file hosting service for Rafter, without the need to rely on external providers.\n  title: Upload Service\n  contact:\n    name: Kyma project authors\n    url: http://slack.kyma-project.io\n    email: kyma-sig-core@googlegroups.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 0.0.1\npaths:\n  /upload:\n    post:\n      description: Uploads files to Minio from `multipart/form-data` form.\n      tags:\n        - upload\n      summary: Uploads files to Minio.\n      operationId: uploadReq\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                public:\n                  description: Files to upload to a public system bucket\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n                private:\n                  description: Files to upload to a private system bucket\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n                directory:\n                  description: The directory for storing the uploaded files. If you do not specify it, the service creates a directory with a random name. If the directory and files already exist, the service overwrites them.\n                  type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/uploadSuccess\"\n        \"207\":\n          $ref: \"#/components/responses/uploadMultiStatus\"\n        \"400\":\n          $ref: \"#/components/responses/badRequest\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n        \"502\":\n          $ref: \"#/components/responses/badGateway\"\nservers:\n  - url: http://localhost:3000/v1\ncomponents:\n  responses:\n    badRequest:\n      description: Bad request response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                description: Array of error messages\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RequestError\"\n    badGateway:\n      description: Bad gateway response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                description: Array of error messages\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FileUploadError\"\n    internalServerError:\n      description: Internal server error response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                description: Array of error messages\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RequestError\"\n    uploadMultiStatus:\n      description: A multi-status response. Only some files have been uploaded successfully.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              errors:\n                description: Array of error messages\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FileUploadError\"\n              uploadedFiles:\n                description: Files that were uploaded successfully.\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FileUploadResult\"\n    uploadSuccess:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              uploadedFiles:\n                description: Files that were uploaded successfully.\n                type: array\n                items:\n                  $ref: \"#/components/schemas/FileUploadResult\"\n  schemas:\n    FileUploadResult:\n      description: \"It represents a single file successful upload result.\"\n      type: object\n      properties:\n        bucket:\n          description: \"The name of the bucket with the uploaded file.\"\n          type: string\n        fileName:\n          description: \"File name\"\n          type: string\n        remotePath:\n          description: \"A full remote path to the file. If the bucket is public, you can access it with a simple GET request.\"\n          type: string\n        size:\n          description: \"File size\"\n          type: integer\n          format: int64\n    FileUploadError:\n      description: \"It represents a single file upload failure.\"\n      type: object\n      properties:\n        fileName:\n          description: \"The name of the file which the service failed to upload.\"\n          type: string\n        message:\n          description: \"Error message\"\n          type: string\n    RequestError:\n      description: \"It represents a request failure.\"\n      type: object\n      properties:\n        message:\n          description: \"Error message\"\n          type: string\n",
			"canonicalURL": "/github.com/kyma-project/rafter@eb6ac3212d87bca0328757c3be44af577244378a/-/blob/docs/assets/upload-service-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kyma-project/rafter/blob/eb6ac3212d87bca0328757c3be44af577244378a/docs/assets/upload-service-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}