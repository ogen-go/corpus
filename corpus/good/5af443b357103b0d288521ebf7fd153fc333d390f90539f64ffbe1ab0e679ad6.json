{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/designapis/farmstall"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 6713,
			"content": "openapi: 3.0.0\ninfo:\n  version: v1\n  title: FarmtStall API\n\n# servers:\n# - url: 'https://farmstall.designapis.com/v1'\n# - url: 'http://localhost:8080/v1'\n\npaths:\n  /reviews:\n    get:\n      description: Get a list of reviews\n      parameters:\n      - name: maxRating\n        in: query\n        schema:\n          type: number\n      responses:\n        '200':\n          description: A bunch of reviews\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    rating:\n                      type: integer\n                      minimum: 1\n                      maximum: 5\n                    message:\n                      type: string\n                    uuid:\n                      type: string\n                      pattern: '^[0-9a-fA-F\\-]{36}$'\n                    userId:\n                      type: string\n                      pattern: '^[0-9a-fA-F\\-]{36}$'\n                      nullable: true\n    post:\n      description: Create a new Review\n      security:\n      - Token: []\n      - {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                message:\n                  type: string\n                  example: An awesome time for the whole family.\n                rating:\n                  type: integer\n                  minimum: 1\n                  maximum: 5\n                  example: 5\n      responses:\n        '201':\n          description: Successfully created a new Review\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: An awesome time for the whole family.\n                  rating:\n                    type: integer\n                    minimum: 1\n                    maximum: 5\n                    example: 5\n                  userId:\n                    type: string\n                    nullable: true\n                    pattern: '[a-zA-Z-.0-9]{36}'\n                    example: f7f680a8-d111-421f-b6b3-493ebf905078\n                  uuid:\n                    type: string\n                    pattern: '[a-zA-Z-.0-9]{36}'\n                    example: f7f680a8-d111-421f-b6b3-493ebf905078\n\n  /reviews/{reviewId}:\n    get:\n      description: Get a single review\n      security:\n      - Token: []\n      - {}\n      parameters:\n      - name: reviewId\n        in: path\n        required: true\n        schema:\n          type: string\n          minLength: 36\n          maxLength: 36\n          pattern: '[a-zA-Z0-9-]+'\n      responses:\n        '200':\n          description: A single review\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    example: An awesome time for the whole family.\n                  rating:\n                    type: integer\n                    minimum: 1\n                    maximum: 5\n                    example: 5\n                  userId:\n                    minLength: 36\n                    maxLength: 36\n                    pattern: '^[a-zA-Z0-9-]+$'\n                    nullable: true\n                    example: f7f680a8-d111-421f-b6b3-493ebf905078\n                  uuid:\n                    minLength: 36\n                    maxLength: 36\n                    pattern: '^[a-zA-Z0-9-]+$'\n                    example: f7f680a8-d111-421f-b6b3-493ebf905078\n        '404':\n          description: Review not found\n\n  /users:\n    post:\n      description: Create a new user\n      requestBody:\n        description: User details\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  example: ponelat\n                password:\n                  type: string\n                  format: password\n                fullName:\n                  type: string\n                  example: Josh Ponelat\n      responses:\n        '201':\n          description: Successfully created a new user\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                    example: ponelat\n                  uuid:\n                    type: string\n                    example: f7f680a8-d111-421f-b6b3-493ebf905078\n        '400':\n          description: Invalid request body\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: https://farmstall.designapis.com/probs/invalid-body\n                  title:\n                    type: string\n                    example: Request body failed validation\n                  invalid-fields:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        path:\n                          type: string\n                          example: '#/message'\n                          description: A path representing the field, from the root of the document\n                        expected:\n                          type: string\n                          description: Human readble message describing what the expected value of the field was\n                          example: must be a string\n                        actual:\n                          type: string\n                          description: The actual value that was received by the server\n                          example: '12'\n\n  /tokens:\n    post:\n      description: Create a new token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  example: ponelat\n                password:\n                  type: string\n                  format: password\n\n      responses:\n        '201':\n          description: Create a new token for gaining authenticated access to resources\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n\n\ncomponents:\n  securitySchemes:\n    Token:\n      name: Authorization\n      type: apiKey\n      in: header\n",
			"canonicalURL": "/github.com/designapis/farmstall@b2248e81a7aa64aa2a763e6c56ebdebf54baaf19/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/designapis/farmstall/blob/b2248e81a7aa64aa2a763e6c56ebdebf54baaf19/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}