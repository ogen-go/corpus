{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/apideck.com/connector/8.32.6/openapi.yaml",
			"byteSize": 67660,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://unify.apideck.com\ninfo:\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: |+\n    Welcome to the Connector API.\n\n    You can use this API to access all Connector API endpoints.\n\n    ## Base URL\n\n    The base URL for all API requests is `https://unify.apideck.com`\n\n    ## GraphQL\n\n    Use the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.\n\n    ## Headers\n\n    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n    | Name                  | Type    | Required | Description                                                                                                                                                    |\n    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n    | x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n    | x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n    | Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n    ## Authorization\n\n    You can interact with the API through the authorization methods below.\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n    ## Pagination\n\n    All API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\n    To fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\n    In the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n    ### Query Parameters\n\n    | Name   | Type   | Required | Description                                                                                                        |\n    | ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n    | cursor | String | No       | Cursor to start from. You can find cursors for next \u0026 previous pages in the meta.cursors property of the response. |\n    | limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n    ### Response Body\n\n    | Name                  | Type   | Description                                                        |\n    | --------------------- | ------ | ------------------------------------------------------------------ |\n    | meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n    | meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n    | meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n    | meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n    | links.previous        | String | Link to navigate to the previous page of results through the API   |\n    | links.current         | String | Link to navigate to the current page of results through the API    |\n    | links.next            | String | Link to navigate to the next page of results through the API       |\n\n    ⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n    ## SDKs and API Clients\n\n    Upcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n    ## Debugging\n\n    Because of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n    ## Errors\n\n    The API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n    | Code | Title                | Description                                                                                                                                                                                              |\n    | ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n    | 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n    | 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n    | 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n    | 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n    | 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n    | 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n    | 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n    | 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n    | 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n    | 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n    | 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n    ### Handling errors\n\n    The Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n    ### Error Types\n\n    #### RequestValidationError\n\n    Request is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n    #### UnsupportedFiltersError\n\n    Filters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n    #### UnsupportedSortFieldError\n\n    Sort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n    #### InvalidCursorError\n\n    Pagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n    #### ConnectorExecutionError\n\n    A Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n    #### UnauthorizedError\n\n    We were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n    #### ConnectorCredentialsError\n\n    A request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n    #### ConnectorDisabledError\n\n    A request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n    #### ConnectorRateLimitError\n\n    You sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n    #### RequestLimitError\n\n    You have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n    #### EntityNotFoundError\n\n    You've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n    #### OAuthCredentialsNotFoundError\n\n    When adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n    #### IntegrationNotFoundError\n\n    The requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n    #### ConnectionNotFoundError\n\n    A valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n    #### ConnectionSettingsError\n\n    The connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n    #### ConnectorNotFoundError\n\n    A request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n    #### OAuthRedirectUriError\n\n    A request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n    #### OAuthInvalidStateError\n\n    The state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n    #### OAuthCodeExchangeError\n\n    When attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n    #### OAuthConnectorError\n\n    It seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### MappingError\n\n    There was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n    #### ConnectorMappingNotFoundError\n\n    It seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorResponseMappingNotFoundError\n\n    We were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorOperationMappingNotFoundError\n\n    Connector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorWorkflowMappingError\n\n    The composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    #### ConnectorOperationUnsupportedError\n\n    You're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n    #### PaginationNotSupportedError\n\n    Pagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n    ## API Design\n\n    ### API Styles and data formats\n\n    #### REST API\n\n    The API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n    ##### Available HTTP methods\n\n    The Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n    ```\n    POST /messages\n    GET /messages\n    GET /messages/{messageId}\n    PATCH /messages/{messageId}\n    DELETE /messages/{messageId}\n    ```\n\n    Response bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n    ### Schema\n\n    All API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n    ### Meta\n\n    Meta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n    ### Idempotence (upcoming)\n\n    To prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\n    Uniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n    ### Request IDs\n\n    Each API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n    ### Fixed field types\n\n    #### Dates\n\n    The dates returned by the API are all represented in UTC (ISO8601 format).\n\n    This example `2019-11-14T00:55:31.820Z` is defined by the ISO 8601 standard. The T in the middle separates the year-month-day portion from the hour-minute-second portion. The Z on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The Z is pronounced \"Zulu\" per military/aviation tradition.\n\n    The ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n    #### Prices and Currencies\n\n    All prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\n    For zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\n    All currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n    ## Support\n\n    If you have problems or need help with your case, you can always reach out to our Support.\n\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Connector API\n  version: 8.32.6\n  x-apideck-api: connector\n  x-apideck-sdk-support: true\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/connector.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: connector\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\ntags:\n  - description: \"\"\n    name: Connectors\n    x-apideck-model:\n      $ref: \"#/components/schemas/Connector\"\n  - description: \"\"\n    name: Connector Docs\n    x-apideck-model:\n      $ref: \"#/components/schemas/ConnectorDoc\"\n  - description: \"\"\n    name: APIs\n    x-apideck-model:\n      $ref: \"#/components/schemas/Api\"\n  - description: \"\"\n    name: Connector Resources\n    x-apideck-model:\n      $ref: \"#/components/schemas/ConnectorResource\"\n  - description: \"\"\n    name: API Resources\n    x-apideck-model:\n      $ref: \"#/components/schemas/ApiResource\"\npaths:\n  /connector/apis:\n    get:\n      description: List APIs\n      operationId: apisAll\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/apis_filter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetApisResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List APIs\n      tags:\n        - APIs\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.connector.apisAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: APIs\n  \"/connector/apis/{id}\":\n    get:\n      description: Get API\n      operationId: apisOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetApiResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get API\n      tags:\n        - APIs\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.connector.apisOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/connector/apis/{id}/resources/{resource_id}\":\n    get:\n      description: Get API Resource\n      operationId: apiResourcesOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/resourceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetApiResourceResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get API Resource\n      tags:\n        - API Resources\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              resourceId: 'resource_id_example'\n            }\n\n            try {\n              const { data } = await apideck.connector.apiResourcesOne(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/connector/apis/{id}/resources/{resource_id}/coverage\":\n    get:\n      description: Get API Resource Coverage\n      operationId: apiResourceCoverageOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/resourceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetApiResourceCoverageResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get API Resource Coverage\n      tags:\n        - API Resources\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              resourceId: 'resource_id_example'\n            }\n\n            try {\n              const { data } = await apideck.connector.apiResourceCoverageOne(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  /connector/connectors:\n    get:\n      description: List Connectors\n      operationId: connectorsAll\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/connectors_filter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectorsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: List Connectors\n      tags:\n        - Connectors\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.connector.connectorsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: connectors\n  \"/connector/connectors/{id}\":\n    get:\n      description: Get Connector\n      operationId: connectorsOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Connector\n      tags:\n        - Connectors\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.connector.connectorsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/connector/connectors/{id}/docs/{doc_id}\":\n    get:\n      description: Get Connector Doc content\n      operationId: connectorDocsOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/doc_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Connector Doc content\n      tags:\n        - Connector Docs\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.connector.connectorDocsOne({\n                id: 'id_example',\n                docId: 'doc_id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  \"/connector/connectors/{id}/resources/{resource_id}\":\n    get:\n      description: Get Connector Resource\n      operationId: connectorResourcesOne\n      parameters:\n        - $ref: \"#/components/parameters/applicationId\"\n        - $ref: \"#/components/parameters/id\"\n        - $ref: \"#/components/parameters/resourceId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectorResourceResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Connector Resource\n      tags:\n        - Connector Resources\n      x-apideck-api: connector\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              resourceId: 'resource_id_example'\n            }\n\n            try {\n              const { data } = await apideck.connector.connectorResourcesOne(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\ncomponents:\n  parameters:\n    apis_filter:\n      description: Apply filters\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/ApisFilter\"\n      style: deepObject\n    applicationId:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    connectors_filter:\n      description: Apply filters\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/ConnectorsFilter\"\n      style: deepObject\n    cursor:\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      in: query\n      name: cursor\n      schema:\n        nullable: true\n        type: string\n    doc_id:\n      description: ID of the Doc\n      in: path\n      name: doc_id\n      required: true\n      schema:\n        type: string\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    limit:\n      description: Number of records to return\n      in: query\n      name: limit\n      schema:\n        default: 20\n        maximum: 200\n        minimum: 1\n        type: integer\n    resourceId:\n      description: ID of the resource you are acting upon.\n      in: path\n      name: resource_id\n      required: true\n      schema:\n        type: string\n  responses:\n    BadRequestResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequestResponse\"\n      description: Bad Request\n    GetApiResourceCoverageResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetApiResourceCoverageResponse\"\n      description: ApiResources\n    GetApiResourceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetApiResourceResponse\"\n      description: ApiResources\n    GetApiResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetApiResponse\"\n      description: Apis\n    GetApisResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetApisResponse\"\n      description: Apis\n    GetConnectorDocResponse:\n      content:\n        text/markdown:\n          schema:\n            format: markdown\n            type: string\n      description: Connectors\n    GetConnectorResourceResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConnectorResourceResponse\"\n      description: ConnectorResources\n    GetConnectorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConnectorResponse\"\n      description: Connectors\n    GetConnectorsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConnectorsResponse\"\n      description: Connectors\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundResponse\"\n      description: The specified resource was not found\n    PaymentRequiredResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaymentRequiredResponse\"\n      description: Payment Required\n    TooManyRequestsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TooManyRequestsResponse\"\n      description: Too Many Requests\n    UnauthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnauthorizedResponse\"\n      description: Unauthorized\n    UnexpectedErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnexpectedErrorResponse\"\n      description: Unexpected error\n  schemas:\n    Api:\n      properties:\n        api_reference_url:\n          description: Link to the API reference of the API.\n          example: https://developers.apideck.com/apis/file-storage/reference\n          type: string\n        categories:\n          description: List of categories the API belongs to.\n          example:\n            - files\n            - file-storage\n            - cloud-storage\n            - object-storage\n          items:\n            type: string\n          type: array\n        description:\n          description: Description of the API.\n          example: Manage API keys, access tokens, OAuth flows and integrations.\n          nullable: true\n          type: string\n        events:\n          description: List of event types this API supports.\n          example:\n            - crm.contact.updated\n            - accounting.invoice.created\n          items:\n            type: string\n          type: array\n        id:\n          description: ID of the API.\n          example: file-storage\n          readOnly: true\n          type: string\n        name:\n          description: Name of the API.\n          example: File Storage API\n          type: string\n        postman_collection_id:\n          description: ID of the Postman collection of the API.\n          example: 1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f\n          nullable: true\n          type: string\n        resources:\n          description: List of resources supported in this API.\n          items:\n            properties:\n              excluded_from_coverage:\n                description: Exclude from mapping coverage\n                example: false\n                type: boolean\n              id:\n                description: ID of the resource, typically a lowercased version of its name.\n                example: companies\n                type: string\n              name:\n                description: Name of the resource (plural)\n                example: Companies\n                type: string\n              status:\n                $ref: \"#/components/schemas/ResourceStatus\"\n            type: object\n          type: array\n        spec_url:\n          description: Link to the latest OpenAPI specification of the API.\n          example: https://specs.apideck.com/file-storage.yml\n          type: string\n        status:\n          $ref: \"#/components/schemas/ApiStatus\"\n        type:\n          description: Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.\n          enum:\n            - platform\n            - unified\n          type: string\n      type: object\n    ApiResource:\n      properties:\n        id:\n          description: ID of the resource, typically a lowercased version of name.\n          example: companies\n          type: string\n        linked_resources:\n          description: List of linked resources.\n          items:\n            properties:\n              id:\n                $ref: \"#/components/schemas/ResourceId\"\n              unified_property:\n                $ref: \"#/components/schemas/UnifiedProperty\"\n            type: object\n          type: array\n        name:\n          description: Name of the resource (plural)\n          example: Companies\n          type: string\n        schema:\n          description: JSON Schema of the resource in our Unified API\n          example:\n            additionalProperties: false\n            properties:\n              created_at:\n                example: 2020-09-30T07:43:32.000Z\n                readOnly: true\n                type: string\n              id:\n                example: \"12345\"\n                readOnly: true\n                type: string\n              name:\n                example: Elon Musk\n                minLength: 1\n                type: string\n              updated_at:\n                example: 2020-09-30T07:43:32.000Z\n                readOnly: true\n                type: string\n            required:\n              - name\n              - company_name\n            x-pii:\n              - name\n              - email\n              - first_name\n              - last_name\n          type: object\n          x-json-schema: true\n        status:\n          $ref: \"#/components/schemas/ResourceStatus\"\n      type: object\n    ApiResourceCoverage:\n      properties:\n        coverage:\n          items:\n            properties:\n              downstream_id:\n                description: ID of the resource in the Connector's API (downstream)\n                example: accounts\n                type: string\n              downstream_name:\n                description: Name of the resource in the Connector's API (downstream)\n                example: Accounts\n                type: string\n              pagination_supported:\n                description: Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.\n                type: boolean\n              supported_fields:\n                description: Supported fields.\n                items:\n                  properties:\n                    unified_property:\n                      $ref: \"#/components/schemas/UnifiedProperty\"\n                  type: object\n                type: array\n              supported_filters:\n                description: Supported filters on the list endpoint of the resource.\n                example:\n                  - name\n                  - email\n                items:\n                  type: string\n                type: array\n              supported_operations:\n                description: List of supported operations on the resource.\n                example:\n                  - all\n                  - one\n                  - add\n                  - update\n                  - delete\n                items:\n                  type: string\n                type: array\n              supported_sort_by:\n                description: Supported sorting properties on the list endpoint of the resource.\n                example:\n                  - updated_at\n                  - created_at\n                  - name\n                items:\n                  type: string\n                type: array\n            type: object\n          type: array\n        id:\n          description: ID of the resource, typically a lowercased version of name.\n          example: companies\n          type: string\n        name:\n          description: Name of the resource (plural)\n          example: Companies\n          type: string\n        status:\n          $ref: \"#/components/schemas/ResourceStatus\"\n      type: object\n    ApiStatus:\n      description: Status of the API. APIs with status live or beta are callable.\n      enum:\n        - live\n        - beta\n        - development\n        - considering\n      type: string\n    ApisFilter:\n      additionalProperties: false\n      example:\n        status: beta\n      properties:\n        status:\n          $ref: \"#/components/schemas/ApiStatus\"\n      type: object\n      x-graphql-type-name: ApisFilter\n    BadRequestResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Missing property foobar\n              type: string\n            - example:\n                missing:\n                  - foobar: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestvalidationerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestValidationError\n          type: string\n    Connector:\n      properties:\n        auth_only:\n          description: Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API\n          example: true\n          readOnly: true\n          type: boolean\n        auth_type:\n          description: Type of authorization used by the connector\n          enum:\n            - oauth2\n            - apiKey\n            - basic\n            - custom\n            - none\n          example: oauth2\n          readOnly: true\n          type: string\n          x-apideck-enum-id: auth_types\n        configurable_resources:\n          description: List of resources that have settings that can be configured.\n          example:\n            - leads\n            - companies\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          type: array\n        description:\n          example: A description\n          nullable: true\n          title: Description\n          type: string\n        docs:\n          items:\n            $ref: \"#/components/schemas/ConnectorDoc\"\n          type: array\n        has_sandbox_credentials:\n          description: Indicates whether Apideck Sandbox OAuth credentials are available.\n          example: true\n          type: boolean\n        icon_url:\n          description: Link to a small square icon for the connector.\n          example: https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\n          format: uri\n          type: string\n        id:\n          description: ID of the connector.\n          example: crm+salesforce\n          readOnly: true\n          type: string\n        logo_url:\n          description: Link to the full logo for the connector.\n          example: https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\n          format: uri\n          type: string\n        name:\n          description: Name of the connector.\n          example: Salesforce\n          type: string\n        oauth_credentials_source:\n          description: Location of the OAuth client credentials. For most connectors the OAuth client credentials are stored on integration and managed by the application owner. For others they are stored on connection and managed by the consumer in Vault.\n          enum:\n            - integration\n            - connection\n          example: integration\n          readOnly: true\n          type: string\n          x-apideck-enum-id: oauth_credentials_source\n        oauth_grant_type:\n          description: \"OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types\"\n          enum:\n            - authorization_code\n            - client_credentials\n          example: authorization_code\n          readOnly: true\n          type: string\n          x-apideck-enum-id: oauth_grant_types\n        oauth_scopes:\n          description: List of OAuth Scopes available for this connector.\n          items:\n            properties:\n              default_apis:\n                description: List of Unified APIs that request this OAuth Scope by default. Application owners can customize the requested scopes.\n                items:\n                  description: ID of the Unified API.\n                  example: crm\n                  type: string\n                type: array\n              id:\n                description: ID of the OAuth scope.\n                example: contacts:all\n                type: string\n              label:\n                description: Label of the OAuth scope.\n                example: Read/write on the Contacts resource\n                type: string\n            type: object\n          type: array\n        service_id:\n          description: Service provider identifier\n          example: close\n          type: string\n        settings:\n          items:\n            $ref: \"#/components/schemas/ConnectorSetting\"\n          type: array\n        status:\n          $ref: \"#/components/schemas/ConnectorStatus\"\n        supported_events:\n          description: List of events that are supported on the connector. Events are delivered via Webhooks.\n          items:\n            properties:\n              downstream_event_type:\n                type: string\n              event_type:\n                type: string\n              resource_id:\n                $ref: \"#/components/schemas/ResourceId\"\n            type: object\n          type: array\n        supported_resources:\n          description: List of resources that are supported on the connector.\n          items:\n            properties:\n              downstream_id:\n                description: ID of the resource in the Connector's API (downstream)\n                example: accounts\n                type: string\n              downstream_name:\n                description: Name of the resource in the Connector's API (downstream)\n                example: Accounts\n                type: string\n              id:\n                $ref: \"#/components/schemas/ResourceId\"\n              name:\n                description: Name of the resource (plural)\n                example: Companies\n                type: string\n              status:\n                $ref: \"#/components/schemas/ResourceStatus\"\n            type: object\n          type: array\n        unified_apis:\n          description: List of Unified APIs that feature this connector.\n          items:\n            properties:\n              id:\n                $ref: \"#/components/schemas/UnifiedApiId\"\n              oauth_scopes:\n                items:\n                  description: OAuth scopes required for the connector. Add these scopes to your OAuth app.\n                  example:\n                    id: contacts:all\n                    label: Read/write on the Contacts resource\n                  properties:\n                    id:\n                      description: ID of the OAuth scope.\n                      example: contacts:all\n                      type: string\n                    label:\n                      description: Label of the OAuth scope.\n                      example: Read/write on the Contacts resource\n                      type: string\n                  type: object\n                type: array\n            type: object\n          type: array\n        website_url:\n          description: Link to the connector's website.\n          example: https://www.salesforce.com\n          format: uri\n          type: string\n      type: object\n    ConnectorDoc:\n      properties:\n        audience:\n          description: Audience for the doc.\n          enum:\n            - application_owner\n            - consumer\n          type: string\n        format:\n          description: Format of the doc.\n          enum:\n            - markdown\n          type: string\n        id:\n          $ref: \"#/components/schemas/Id\"\n        name:\n          description: Name of the doc.\n          example: connection\n          type: string\n        url:\n          description: Link to fetch the content of the doc.\n          example: https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection\n          format: uri\n          type: string\n      type: object\n    ConnectorResource:\n      properties:\n        downstream_id:\n          description: ID of the resource in the Connector's API (downstream)\n          example: accounts\n          type: string\n        downstream_name:\n          description: Name of the resource in the Connector's API (downstream)\n          example: Accounts\n          type: string\n        id:\n          $ref: \"#/components/schemas/ResourceId\"\n        name:\n          description: Name of the resource (plural)\n          example: Companies\n          type: string\n        pagination_supported:\n          description: Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.\n          type: boolean\n        status:\n          $ref: \"#/components/schemas/ResourceStatus\"\n        supported_fields:\n          description: Supported fields.\n          items:\n            properties:\n              unified_property:\n                $ref: \"#/components/schemas/UnifiedProperty\"\n            type: object\n          type: array\n        supported_filters:\n          description: Supported filters on the list endpoint of the resource.\n          example:\n            - name\n            - email\n          items:\n            type: string\n          type: array\n        supported_operations:\n          description: List of supported operations on the resource.\n          example:\n            - all\n            - one\n            - add\n            - update\n            - delete\n          items:\n            type: string\n          type: array\n        supported_sort_by:\n          description: Supported sorting properties on the list endpoint of the resource.\n          example:\n            - updated_at\n            - created_at\n            - name\n          items:\n            type: string\n          type: array\n      type: object\n    ConnectorSetting:\n      properties:\n        id:\n          example: pipeline_id\n          type: string\n        label:\n          example: Pipeline\n          type: string\n        type:\n          enum:\n            - text\n            - checkbox\n            - tel\n            - email\n            - url\n            - textarea\n            - select\n            - filtered-select\n            - multi-select\n            - datetime\n            - date\n            - time\n            - number\n          example: select\n      type: object\n    ConnectorStatus:\n      description: Status of the connector. Connectors with status live or beta are callable.\n      enum:\n        - live\n        - beta\n        - development\n        - considering\n      type: string\n    ConnectorsFilter:\n      additionalProperties: false\n      example:\n        unified_api: file-storage\n      properties:\n        status:\n          $ref: \"#/components/schemas/ConnectorStatus\"\n        unified_api:\n          $ref: \"#/components/schemas/UnifiedApiId\"\n      type: object\n      x-graphql-type-name: ConnectorsFilter\n    GetApiResourceCoverageResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ApiResourceCoverage\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetApiResourceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ApiResource\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetApiResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Api\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetApisResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Api\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: ApiList\n    GetConnectorResourceResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ConnectorResource\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetConnectorResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Connector\"\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetConnectorsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Connector\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: ConnectorList\n    Id:\n      example: \"12345\"\n      readOnly: true\n      type: string\n    Links:\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        current:\n          description: Link to navigate to the current page through the API\n          example: https://unify.apideck.com/crm/companies\n          type: string\n        next:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\n          nullable: true\n          type: string\n        previous:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\n          nullable: true\n          type: string\n      type: object\n    Meta:\n      description: Response metadata\n      properties:\n        cursors:\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            current:\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n              type: string\n            next:\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n              type: string\n            previous:\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n              type: string\n          type: object\n        items_on_page:\n          description: Number of items returned in the data property of the response\n          example: 50\n          type: integer\n      type: object\n    NotFoundResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Could not find widget with id: '123'\"\n              type: string\n            - example:\n                not_found:\n                  entity: widget\n                  id: \"123\"\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#entitynotfounderror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 404\n          type: number\n        type_name:\n          description: The type of error returned\n          example: EntityNotFoundError\n          type: string\n    PaymentRequiredResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: You have reached your limit of 2000\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestlimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 402\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestLimitError\n          type: string\n    ResourceId:\n      description: ID of the resource, typically a lowercased version of name.\n      example: companies\n      type: string\n    ResourceStatus:\n      description: Status of the resource. Resources with status live or beta are callable.\n      enum:\n        - live\n        - beta\n        - development\n        - upcoming\n        - considering\n      type: string\n    TooManyRequestsResponse:\n      properties:\n        detail:\n          properties:\n            context:\n              type: string\n            error:\n              additionalProperties: true\n              type: object\n          type: object\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)\n          example: Too Many Requests\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Connector Rate Limit Error\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#connectorratelimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 429\n          type: number\n        type_name:\n          description: The type of error returned\n          example: ConnectorRateLimitError\n          type: string\n    UnauthorizedResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 401\n          type: number\n        type_name:\n          description: The type of error returned\n          example: UnauthorizedError\n          type: string\n    UnexpectedErrorResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Missing Header: x-apideck-consumer-id\"\n              type: string\n            - example:\n                missing:\n                  - x-apideck-consumer-id: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestHeadersValidationError\n          type: string\n    UnifiedApiId:\n      description: Name of Apideck Unified API\n      enum:\n        - vault\n        - lead\n        - crm\n        - accounting\n        - file-storage\n        - spreadsheet\n        - email\n        - script\n        - sms\n        - team-messaging\n        - ecommerce\n        - payroll\n        - customer-support\n        - time-registration\n        - transactional-email\n        - hcm\n        - form\n        - csp\n        - email-marketing\n        - ats\n        - hris\n        - pos\n      example: crm\n      type: string\n      x-apideck-enum-id: unifies_api\n    UnifiedProperty:\n      description: Name of the property in our Unified API.\n      example: owner_id\n      type: string\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/apideck.com/connector/8.32.6/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/apideck.com/connector/8.32.6/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}