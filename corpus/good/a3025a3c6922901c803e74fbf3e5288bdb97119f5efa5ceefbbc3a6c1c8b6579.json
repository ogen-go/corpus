{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rametta/rapini"
		},
		"file": {
			"name": "example-openapi.yaml",
			"size": 0,
			"path": "example-openapi.yaml",
			"byteSize": 5266,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        200:\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        description: Create a new pet\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        201:\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        200:\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        201:\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    RandomThing:\n      required:\n        - id\n        - something\n      properties:\n        id:\n          type: integer\n          format: int64\n        something:\n          properties:\n            hello:\n              properties:\n                one:\n                  type: string\n                two:\n                  type: integer\n                  format: int64\n            world:\n              type: string\n            bla:\n              type: array\n              items:\n                properties:\n                  prop:\n                    type: string\n                  erty:\n                    type: string\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n          nullable: true\n        petType:\n          type: string\n          nullable: true\n          enum:\n            - cat\n            - doge\n        nicknames:\n          type: array\n          items:\n            properties:\n              name:\n                type: string\n              thing:\n                type: array\n                items:\n                  type: string\n        random:\n          $ref: \"#/components/schemas/RandomThing\"\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Animal:\n      properties:\n        home:\n          type: string\n        pet:\n          $ref: \"#/components/schemas/Pet\"\n    Cat:\n      allOf:\n        - $ref: \"#/components/schemas/Pet\"\n        - type: object\n          # all other properties specific to a `Cat`\n          properties:\n            name:\n              type: string\n    Dog:\n      allOf:\n        - $ref: \"#/components/schemas/Pet\"\n        - type: object\n          # all other properties specific to a `Dog`\n          properties:\n            bark:\n              type: string\n            fur:\n              type: array\n              items:\n                type: array\n                items:\n                  type: string\n    MyResponseType:\n      oneOf:\n        - $ref: \"#/components/schemas/Cat\"\n        - $ref: \"#/components/schemas/Dog\"\n    MyResponseTypeTwo:\n      anyOf:\n        - $ref: \"#/components/schemas/Cat\"\n        - $ref: \"#/components/schemas/Dog\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The user ID.\n        username:\n          type: string\n          description: The user name.\n",
			"canonicalURL": "/github.com/rametta/rapini@07b54d797db5dda180c398a99bd74e4dfc94d757/-/blob/example-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rametta/rapini/blob/07b54d797db5dda180c398a99bd74e4dfc94d757/example-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}