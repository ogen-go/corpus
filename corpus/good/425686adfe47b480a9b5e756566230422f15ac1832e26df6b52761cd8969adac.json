{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "users.yaml",
			"size": 0,
			"path": "providers/src/github/v0.3.1/services/users.yaml",
			"byteSize": 96479,
			"content": "paths:\n  /user:\n    get:\n      summary: Get the authenticated user\n      description: |-\n        If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.\n\n        If the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information.\n      tags:\n        - users\n      operationId: users/get-authenticated\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#get-the-authenticated-user\n      parameters: []\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/private-user'\n                  - $ref: '#/components/schemas/public-user'\n              examples:\n                response-with-public-and-private-profile-information:\n                  $ref: '#/components/examples/private-user-response-with-public-and-private-profile-information'\n                response-with-public-profile-information:\n                  $ref: '#/components/examples/private-user-response-with-public-profile-information'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: null\n    patch:\n      summary: Update the authenticated user\n      description: '**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.'\n      tags:\n        - users\n      operationId: users/update-authenticated\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users/#update-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The new name of the user.\n                  type: string\n                  example: Omar Jahandar\n                email:\n                  description: The publicly visible email address of the user.\n                  type: string\n                  example: omar@example.com\n                blog:\n                  description: The new blog URL of the user.\n                  type: string\n                  example: blog.example.com\n                twitter_username:\n                  description: The new Twitter username of the user.\n                  type: string\n                  example: therealomarj\n                  nullable: true\n                company:\n                  description: The new company of the user.\n                  type: string\n                  example: Acme corporation\n                location:\n                  description: The new location of the user.\n                  type: string\n                  example: Berlin, Germany\n                hireable:\n                  description: The new hiring availability of the user.\n                  type: boolean\n                bio:\n                  description: The new short biography of the user.\n                  type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/private-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/private-user'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: null\n  /user/blocks:\n    get:\n      summary: List users blocked by the authenticated user\n      description: List the users you've blocked on your personal account.\n      tags:\n        - users\n      operationId: users/list-blocked-by-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user\n      parameters: []\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: blocking\n  /user/blocks/{username}:\n    get:\n      summary: Check if a user is blocked by the authenticated user\n      description: ''\n      tags:\n        - users\n      operationId: users/check-blocked\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: 'If the user is blocked:'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          description: 'If the user is not blocked:'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: blocking\n    put:\n      summary: Block a user\n      description: ''\n      tags:\n        - users\n      operationId: users/block\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#block-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: blocking\n    delete:\n      summary: Unblock a user\n      description: ''\n      tags:\n        - users\n      operationId: users/unblock\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#unblock-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: blocking\n  /user/email/visibility:\n    patch:\n      summary: Set primary email visibility for the authenticated user\n      description: Sets the visibility for your primary email addresses.\n      tags:\n        - users\n      operationId: users/set-primary-email-visibility-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                visibility:\n                  description: Denotes whether an email is publicly visible.\n                  type: string\n                  enum:\n                    - public\n                    - private\n              required:\n                - visibility\n              type: object\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/email'\n              examples:\n                default:\n                  $ref: '#/components/examples/email-items-3'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: emails\n  /user/emails:\n    get:\n      summary: List email addresses for the authenticated user\n      description: Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.\n      tags:\n        - users\n      operationId: users/list-emails-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-email-addresses-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/email'\n              examples:\n                default:\n                  $ref: '#/components/examples/email-items-2'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: emails\n    post:\n      summary: Add an email address for the authenticated user\n      description: This endpoint is accessible with the `user` scope.\n      tags:\n        - users\n      operationId: users/add-email-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#add-an-email-address-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    emails:\n                      description: Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.\n                      type: array\n                      items:\n                        type: string\n                        example: username@example.com\n                        minItems: 1\n                      example: []\n                  required:\n                    - emails\n                  example:\n                    emails:\n                      - octocat@github.com\n                      - mona@github.com\n                - type: array\n                  items:\n                    type: string\n                    example: username@example.com\n                    minItems: 1\n                - type: string\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/email'\n              examples:\n                default:\n                  $ref: '#/components/examples/email-items'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: emails\n    delete:\n      summary: Delete an email address for the authenticated user\n      description: This endpoint is accessible with the `user` scope.\n      tags:\n        - users\n      operationId: users/delete-email-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#delete-an-email-address-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  description: Deletes one or more email addresses from your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.\n                  properties:\n                    emails:\n                      description: Email addresses associated with the GitHub user account.\n                      type: array\n                      items:\n                        type: string\n                        example: username@example.com\n                        minItems: 1\n                  example:\n                    emails:\n                      - octocat@github.com\n                      - mona@github.com\n                  required:\n                    - emails\n                - type: array\n                  items:\n                    type: string\n                    example: username@example.com\n                    minItems: 1\n                - type: string\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: emails\n  /user/followers:\n    get:\n      summary: List followers of the authenticated user\n      description: Lists the people following the authenticated user.\n      tags:\n        - users\n      operationId: users/list-followers-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-followers-of-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: followers\n  /user/following:\n    get:\n      summary: List the people the authenticated user follows\n      description: Lists the people who the authenticated user follows.\n      tags:\n        - users\n      operationId: users/list-followed-by-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-the-people-the-authenticated-user-follows\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: followers\n  /user/following/{username}:\n    get:\n      summary: Check if a person is followed by the authenticated user\n      description: ''\n      tags:\n        - users\n      operationId: users/check-person-is-followed-by-authenticated\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#check-if-a-person-is-followed-by-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: if the person is followed by the authenticated user\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          description: if the person is not followed by the authenticated user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/basic-error'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: followers\n    put:\n      summary: Follow a user\n      description: |-\n        Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n        Following a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.\n      tags:\n        - users\n      operationId: users/follow\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#follow-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: followers\n    delete:\n      summary: Unfollow a user\n      description: Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.\n      tags:\n        - users\n      operationId: users/unfollow\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#unfollow-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: followers\n  /user/gpg_keys:\n    get:\n      summary: List GPG keys for the authenticated user\n      description: Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/list-gpg-keys-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-gpg-keys-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/gpg-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/gpg-key-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: gpg-keys\n    post:\n      summary: Create a GPG key for the authenticated user\n      description: Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      operationId: users/create-gpg-key-for-authenticated-user\n      tags:\n        - users\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#create-a-gpg-key-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                armored_public_key:\n                  description: A GPG key in ASCII-armored format.\n                  type: string\n              type: object\n              required:\n                - armored_public_key\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gpg-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/gpg-key'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: gpg-keys\n  /user/gpg_keys/{gpg_key_id}:\n    get:\n      summary: Get a GPG key for the authenticated user\n      description: View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/get-gpg-key-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#get-a-gpg-key-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/gpg-key-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gpg-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/gpg-key'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: gpg-keys\n    delete:\n      summary: Delete a GPG key for the authenticated user\n      description: Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/delete-gpg-key-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#delete-a-gpg-key-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/gpg-key-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: gpg-keys\n  /user/keys:\n    get:\n      summary: List public SSH keys for the authenticated user\n      description: Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/list-public-ssh-keys-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-public-ssh-keys-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/key'\n              examples:\n                default:\n                  $ref: '#/components/examples/key-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: keys\n    post:\n      summary: Create a public SSH key for the authenticated user\n      description: Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      operationId: users/create-public-ssh-key-for-authenticated-user\n      tags:\n        - users\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#create-a-public-ssh-key-for-the-authenticated-user\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                title:\n                  description: A descriptive name for the new key.\n                  type: string\n                  example: Personal MacBook Air\n                key:\n                  description: The public SSH key to add to your GitHub account.\n                  type: string\n                  pattern: '^ssh-(rsa|dss|ed25519) |^ecdsa-sha2-nistp(256|384|521) '\n              required:\n                - key\n              type: object\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/key'\n              examples:\n                default:\n                  $ref: '#/components/examples/key'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: keys\n  /user/keys/{key_id}:\n    get:\n      summary: Get a public SSH key for the authenticated user\n      description: View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/get-public-ssh-key-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#get-a-public-ssh-key-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/key-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/key'\n              examples:\n                default:\n                  $ref: '#/components/examples/key'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: keys\n    delete:\n      summary: Delete a public SSH key for the authenticated user\n      description: Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n      tags:\n        - users\n      operationId: users/delete-public-ssh-key-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#delete-a-public-ssh-key-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/key-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: keys\n  /user/public_emails:\n    get:\n      summary: List public email addresses for the authenticated user\n      description: Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.\n      tags:\n        - users\n      operationId: users/list-public-emails-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-public-email-addresses-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/email'\n              examples:\n                default:\n                  $ref: '#/components/examples/email-items-2'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: emails\n  /users:\n    get:\n      summary: List users\n      description: |-\n        Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\n        Note: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.\n      tags:\n        - users\n      operationId: users/list\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-users\n      parameters:\n        - $ref: '#/components/parameters/since-user'\n        - $ref: '#/components/parameters/per-page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              example: \u003chttps://api.github.com/users?since=135\u003e; rel=\"next\"\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: null\n  /users/{username}:\n    get:\n      summary: Get a user\n      description: |-\n        Provides publicly available information about someone with a GitHub account.\n\n        GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub plan information' below\"\n\n        The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication).\n\n        The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/rest/reference/users#emails)\".\n      tags:\n        - users\n      operationId: users/get-by-username\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#get-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/private-user'\n                  - $ref: '#/components/schemas/public-user'\n              examples:\n                default-response:\n                  $ref: '#/components/examples/public-user-default-response'\n                response-with-git-hub-plan-information:\n                  $ref: '#/components/examples/public-user-response-with-git-hub-plan-information'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: null\n  /users/{username}/followers:\n    get:\n      summary: List followers of a user\n      description: Lists the people following the specified user.\n      tags:\n        - users\n      operationId: users/list-followers-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-followers-of-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: followers\n  /users/{username}/following:\n    get:\n      summary: List the people a user follows\n      description: Lists the people who the specified user follows.\n      tags:\n        - users\n      operationId: users/list-following-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-the-people-a-user-follows\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/simple-user'\n              examples:\n                default:\n                  $ref: '#/components/examples/simple-user-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: followers\n  /users/{username}/following/{target_user}:\n    get:\n      summary: Check if a user follows another user\n      description: ''\n      tags:\n        - users\n      operationId: users/check-following-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#check-if-a-user-follows-another-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - name: target_user\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: if the user follows the target user\n        '404':\n          description: if the user does not follow the target user\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: followers\n  /users/{username}/gpg_keys:\n    get:\n      summary: List GPG keys for a user\n      description: Lists the GPG keys for a user. This information is accessible by anyone.\n      tags:\n        - users\n      operationId: users/list-gpg-keys-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-gpg-keys-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/gpg-key'\n              examples:\n                default:\n                  $ref: '#/components/examples/gpg-key-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: gpg-keys\n  /users/{username}/hovercard:\n    get:\n      summary: Get contextual information for a user\n      description: |-\n        Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\n        The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:\n\n        ```shell\n         curl -u username:token\n          https://api.github.com/users/octocat/hovercard?subject_type=repository\u0026subject_id=1300192\n        ```\n      tags:\n        - users\n      operationId: users/get-context-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#get-contextual-information-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - name: subject_type\n          description: Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - organization\n              - repository\n              - issue\n              - pull_request\n        - name: subject_id\n          description: Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/hovercard'\n              examples:\n                default:\n                  $ref: '#/components/examples/hovercard'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: users\n        subcategory: null\n  /users/{username}/keys:\n    get:\n      summary: List public keys for a user\n      description: Lists the _verified_ public SSH keys for a user. This is accessible by anyone.\n      tags:\n        - users\n      operationId: users/list-public-keys-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/users#list-public-keys-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/key-simple'\n              examples:\n                default:\n                  $ref: '#/components/examples/key-simple-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: users\n        subcategory: keys\ncomponents:\n  schemas:\n    private-user:\n      title: Private User\n      description: Private User\n      type: object\n      properties:\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        name:\n          type: string\n          example: monalisa octocat\n          nullable: true\n        company:\n          type: string\n          example: GitHub\n          nullable: true\n        blog:\n          type: string\n          example: https://github.com/blog\n          nullable: true\n        location:\n          type: string\n          example: San Francisco\n          nullable: true\n        email:\n          type: string\n          format: email\n          example: octocat@github.com\n          nullable: true\n        hireable:\n          type: boolean\n          nullable: true\n        bio:\n          type: string\n          example: There once was...\n          nullable: true\n        twitter_username:\n          type: string\n          example: monalisa\n          nullable: true\n        public_repos:\n          type: integer\n          example: 2\n        public_gists:\n          type: integer\n          example: 1\n        followers:\n          type: integer\n          example: 20\n        following:\n          type: integer\n          example: 0\n        created_at:\n          type: string\n          format: date-time\n          example: '2008-01-14T04:33:35Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2008-01-14T04:33:35Z'\n        private_gists:\n          type: integer\n          example: 81\n        total_private_repos:\n          type: integer\n          example: 100\n        owned_private_repos:\n          type: integer\n          example: 100\n        disk_usage:\n          type: integer\n          example: 10000\n        collaborators:\n          type: integer\n          example: 8\n        two_factor_authentication:\n          type: boolean\n          example: true\n        plan:\n          type: object\n          properties:\n            collaborators:\n              type: integer\n            name:\n              type: string\n            space:\n              type: integer\n            private_repos:\n              type: integer\n          required:\n            - collaborators\n            - name\n            - space\n            - private_repos\n        suspended_at:\n          type: string\n          format: date-time\n          nullable: true\n        business_plus:\n          type: boolean\n        ldap_dn:\n          type: string\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n        - bio\n        - blog\n        - company\n        - email\n        - followers\n        - following\n        - hireable\n        - location\n        - name\n        - public_gists\n        - public_repos\n        - created_at\n        - updated_at\n        - collaborators\n        - disk_usage\n        - owned_private_repos\n        - private_gists\n        - total_private_repos\n        - two_factor_authentication\n    public-user:\n      title: Public User\n      description: Public User\n      type: object\n      properties:\n        login:\n          type: string\n        id:\n          type: integer\n        node_id:\n          type: string\n        avatar_url:\n          type: string\n          format: uri\n        gravatar_id:\n          type: string\n          nullable: true\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        followers_url:\n          type: string\n          format: uri\n        following_url:\n          type: string\n        gists_url:\n          type: string\n        starred_url:\n          type: string\n        subscriptions_url:\n          type: string\n          format: uri\n        organizations_url:\n          type: string\n          format: uri\n        repos_url:\n          type: string\n          format: uri\n        events_url:\n          type: string\n        received_events_url:\n          type: string\n          format: uri\n        type:\n          type: string\n        site_admin:\n          type: boolean\n        name:\n          type: string\n          nullable: true\n        company:\n          type: string\n          nullable: true\n        blog:\n          type: string\n          nullable: true\n        location:\n          type: string\n          nullable: true\n        email:\n          type: string\n          format: email\n          nullable: true\n        hireable:\n          type: boolean\n          nullable: true\n        bio:\n          type: string\n          nullable: true\n        twitter_username:\n          type: string\n          nullable: true\n        public_repos:\n          type: integer\n        public_gists:\n          type: integer\n        followers:\n          type: integer\n        following:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        plan:\n          type: object\n          properties:\n            collaborators:\n              type: integer\n            name:\n              type: string\n            space:\n              type: integer\n            private_repos:\n              type: integer\n          required:\n            - collaborators\n            - name\n            - space\n            - private_repos\n        suspended_at:\n          type: string\n          format: date-time\n          nullable: true\n        private_gists:\n          type: integer\n          example: 1\n        total_private_repos:\n          type: integer\n          example: 2\n        owned_private_repos:\n          type: integer\n          example: 2\n        disk_usage:\n          type: integer\n          example: 1\n        collaborators:\n          type: integer\n          example: 3\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n        - bio\n        - blog\n        - company\n        - email\n        - followers\n        - following\n        - hireable\n        - location\n        - name\n        - public_gists\n        - public_repos\n        - created_at\n        - updated_at\n      additionalProperties: false\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    email:\n      title: Email\n      description: Email\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          example: octocat@github.com\n        primary:\n          type: boolean\n          example: true\n        verified:\n          type: boolean\n          example: true\n        visibility:\n          type: string\n          example: public\n          nullable: true\n      required:\n        - email\n        - primary\n        - verified\n        - visibility\n    gpg-key:\n      title: GPG Key\n      description: A unique encryption key\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 3\n        primary_key_id:\n          type: integer\n          nullable: true\n        key_id:\n          type: string\n          example: 3262EFF25BA0D270\n        public_key:\n          type: string\n          example: xsBNBFayYZ...\n        emails:\n          type: array\n          example:\n            - email: mastahyeti@users.noreply.github.com\n              verified: true\n          items:\n            type: object\n            properties:\n              email:\n                type: string\n              verified:\n                type: boolean\n        subkeys:\n          type: array\n          example:\n            - id: 4\n              primary_key_id: 3\n              key_id: 4A595D4C72EE49C7\n              public_key: zsBNBFayYZ...\n              emails: []\n              subkeys: []\n              can_sign: false\n              can_encrypt_comms: true\n              can_encrypt_storage: true\n              can_certify: false\n              created_at: '2016-03-24T11:31:04-06:00'\n              expires_at: null\n          items:\n            type: object\n            properties:\n              id:\n                type: integer\n              primary_key_id:\n                type: integer\n              key_id:\n                type: string\n              public_key:\n                type: string\n              emails:\n                type: array\n                items: {}\n              subkeys:\n                type: array\n                items: {}\n              can_sign:\n                type: boolean\n              can_encrypt_comms:\n                type: boolean\n              can_encrypt_storage:\n                type: boolean\n              can_certify:\n                type: boolean\n              created_at:\n                type: string\n              expires_at:\n                type: string\n                nullable: true\n              raw_key:\n                type: string\n                nullable: true\n        can_sign:\n          type: boolean\n          example: true\n        can_encrypt_comms:\n          type: boolean\n        can_encrypt_storage:\n          type: boolean\n        can_certify:\n          type: boolean\n          example: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2016-03-24T11:31:04-06:00'\n        expires_at:\n          type: string\n          format: date-time\n          nullable: true\n        raw_key:\n          type: string\n          nullable: true\n      required:\n        - id\n        - primary_key_id\n        - key_id\n        - raw_key\n        - public_key\n        - created_at\n        - expires_at\n        - can_sign\n        - can_encrypt_comms\n        - can_encrypt_storage\n        - can_certify\n        - emails\n        - subkeys\n    key:\n      title: Key\n      description: Key\n      type: object\n      properties:\n        key:\n          type: string\n        id:\n          type: integer\n        url:\n          type: string\n        title:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        verified:\n          type: boolean\n        read_only:\n          type: boolean\n      required:\n        - key\n        - id\n        - url\n        - title\n        - created_at\n        - verified\n        - read_only\n    hovercard:\n      title: Hovercard\n      description: Hovercard\n      type: object\n      properties:\n        contexts:\n          type: array\n          items:\n            type: object\n            properties:\n              message:\n                type: string\n              octicon:\n                type: string\n            required:\n              - message\n              - octicon\n      required:\n        - contexts\n    key-simple:\n      title: Key Simple\n      description: Key Simple\n      type: object\n      properties:\n        id:\n          type: integer\n        key:\n          type: string\n      required:\n        - key\n        - id\n  parameters:\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    gpg-key-id:\n      name: gpg_key_id\n      description: gpg_key_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    key-id:\n      name: key_id\n      description: key_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    since-user:\n      name: since\n      description: A user ID. Only return users with an ID greater than this ID.\n      in: query\n      required: false\n      schema:\n        type: integer\n  responses:\n    not_modified:\n      description: Not modified\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    private-user-response-with-public-and-private-profile-information:\n      summary: Response with public and private profile information\n      value:\n        login: octocat\n        id: 1\n        node_id: MDQ6VXNlcjE=\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        gravatar_id: ''\n        url: https://api.github.com/users/octocat\n        html_url: https://github.com/octocat\n        followers_url: https://api.github.com/users/octocat/followers\n        following_url: https://api.github.com/users/octocat/following{/other_user}\n        gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url: https://api.github.com/users/octocat/subscriptions\n        organizations_url: https://api.github.com/users/octocat/orgs\n        repos_url: https://api.github.com/users/octocat/repos\n        events_url: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url: https://api.github.com/users/octocat/received_events\n        type: User\n        site_admin: false\n        name: monalisa octocat\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        hireable: false\n        bio: There once was...\n        twitter_username: monatheoctocat\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2008-01-14T04:33:35Z'\n        private_gists: 81\n        total_private_repos: 100\n        owned_private_repos: 100\n        disk_usage: 10000\n        collaborators: 8\n        two_factor_authentication: true\n        plan:\n          name: Medium\n          space: 400\n          private_repos: 20\n          collaborators: 0\n    private-user-response-with-public-profile-information:\n      summary: Response with public profile information\n      value:\n        login: octocat\n        id: 1\n        node_id: MDQ6VXNlcjE=\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        gravatar_id: ''\n        url: https://api.github.com/users/octocat\n        html_url: https://github.com/octocat\n        followers_url: https://api.github.com/users/octocat/followers\n        following_url: https://api.github.com/users/octocat/following{/other_user}\n        gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url: https://api.github.com/users/octocat/subscriptions\n        organizations_url: https://api.github.com/users/octocat/orgs\n        repos_url: https://api.github.com/users/octocat/repos\n        events_url: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url: https://api.github.com/users/octocat/received_events\n        type: User\n        site_admin: false\n        name: monalisa octocat\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        hireable: false\n        bio: There once was...\n        twitter_username: monatheoctocat\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2008-01-14T04:33:35Z'\n    private-user:\n      value:\n        login: octocat\n        id: 1\n        node_id: MDQ6VXNlcjE=\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        gravatar_id: ''\n        url: https://api.github.com/users/octocat\n        html_url: https://github.com/octocat\n        followers_url: https://api.github.com/users/octocat/followers\n        following_url: https://api.github.com/users/octocat/following{/other_user}\n        gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url: https://api.github.com/users/octocat/subscriptions\n        organizations_url: https://api.github.com/users/octocat/orgs\n        repos_url: https://api.github.com/users/octocat/repos\n        events_url: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url: https://api.github.com/users/octocat/received_events\n        type: User\n        site_admin: false\n        name: monalisa octocat\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        hireable: false\n        bio: There once was...\n        twitter_username: monatheoctocat\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2008-01-14T04:33:35Z'\n        private_gists: 81\n        total_private_repos: 100\n        owned_private_repos: 100\n        disk_usage: 10000\n        collaborators: 8\n        two_factor_authentication: true\n        plan:\n          name: Medium\n          space: 400\n          private_repos: 20\n          collaborators: 0\n    simple-user-items:\n      value:\n        - login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n    email-items-3:\n      value:\n        - email: octocat@github.com\n          primary: true\n          verified: true\n          visibility: private\n    email-items-2:\n      value:\n        - email: octocat@github.com\n          verified: true\n          primary: true\n          visibility: public\n    email-items:\n      value:\n        - email: octocat@octocat.org\n          primary: false\n          verified: false\n          visibility: public\n        - email: octocat@github.com\n          primary: false\n          verified: false\n          visibility: null\n        - email: mona@github.com\n          primary: false\n          verified: false\n          visibility: null\n    gpg-key-items:\n      value:\n        - id: 3\n          primary_key_id: 2\n          key_id: 3262EFF25BA0D270\n          public_key: xsBNBFayYZ...\n          emails:\n            - email: mastahyeti@users.noreply.github.com\n              verified: true\n          subkeys:\n            - id: 4\n              primary_key_id: 3\n              key_id: 4A595D4C72EE49C7\n              public_key: zsBNBFayYZ...\n              emails: []\n              subkeys: []\n              can_sign: false\n              can_encrypt_comms: true\n              can_encrypt_storage: true\n              can_certify: false\n              created_at: '2016-03-24T11:31:04-06:00'\n              expires_at: '2016-03-24T11:31:04-07:00'\n          can_sign: true\n          can_encrypt_comms: false\n          can_encrypt_storage: false\n          can_certify: true\n          created_at: '2016-03-24T11:31:04-06:00'\n          expires_at: '2016-03-24T11:31:04-07:00'\n          raw_key: string\n    gpg-key:\n      value:\n        id: 3\n        primary_key_id: 2\n        key_id: 3262EFF25BA0D270\n        public_key: xsBNBFayYZ...\n        emails:\n          - email: mastahyeti@users.noreply.github.com\n            verified: true\n        subkeys:\n          - id: 4\n            primary_key_id: 3\n            key_id: 4A595D4C72EE49C7\n            public_key: zsBNBFayYZ...\n            emails: []\n            subkeys: []\n            can_sign: false\n            can_encrypt_comms: true\n            can_encrypt_storage: true\n            can_certify: false\n            created_at: '2016-03-24T11:31:04-06:00'\n            expires_at: '2016-03-24T11:31:04-07:00'\n        can_sign: true\n        can_encrypt_comms: false\n        can_encrypt_storage: false\n        can_certify: true\n        created_at: '2016-03-24T11:31:04-06:00'\n        expires_at: '2016-03-24T11:31:04-07:00'\n        raw_key: '\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\nVersion: GnuPG v2\\n\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\nIts/HFYRLiFgDLmTlxo=\\n=+OzK\\n-----END PGP PUBLIC KEY BLOCK-----\"'\n    key-items:\n      value:\n        - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\n          id: 2\n          url: https://api.github.com/user/keys/2\n          title: ssh-rsa AAAAB3NzaC1yc2EAAA\n          created_at: '2020-06-11T21:31:57Z'\n          verified: false\n          read_only: false\n        - key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234\n          id: 3\n          url: https://api.github.com/user/keys/3\n          title: ssh-rsa AAAAB3NzaC1yc2EAAB\n          created_at: '2020-07-11T21:31:57Z'\n          verified: false\n          read_only: false\n    key:\n      value:\n        key: 2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\n        id: 2\n        url: https://api.github.com/user/keys/2\n        title: ssh-rsa AAAAB3NzaC1yc2EAAA\n        created_at: '2020-06-11T21:31:57Z'\n        verified: false\n        read_only: false\n    public-user-default-response:\n      summary: Default response\n      value:\n        login: octocat\n        id: 1\n        node_id: MDQ6VXNlcjE=\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        gravatar_id: ''\n        url: https://api.github.com/users/octocat\n        html_url: https://github.com/octocat\n        followers_url: https://api.github.com/users/octocat/followers\n        following_url: https://api.github.com/users/octocat/following{/other_user}\n        gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url: https://api.github.com/users/octocat/subscriptions\n        organizations_url: https://api.github.com/users/octocat/orgs\n        repos_url: https://api.github.com/users/octocat/repos\n        events_url: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url: https://api.github.com/users/octocat/received_events\n        type: User\n        site_admin: false\n        name: monalisa octocat\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        hireable: false\n        bio: There once was...\n        twitter_username: monatheoctocat\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2008-01-14T04:33:35Z'\n    public-user-response-with-git-hub-plan-information:\n      summary: Response with GitHub plan information\n      value:\n        login: octocat\n        id: 1\n        node_id: MDQ6VXNlcjE=\n        avatar_url: https://github.com/images/error/octocat_happy.gif\n        gravatar_id: ''\n        url: https://api.github.com/users/octocat\n        html_url: https://github.com/octocat\n        followers_url: https://api.github.com/users/octocat/followers\n        following_url: https://api.github.com/users/octocat/following{/other_user}\n        gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url: https://api.github.com/users/octocat/subscriptions\n        organizations_url: https://api.github.com/users/octocat/orgs\n        repos_url: https://api.github.com/users/octocat/repos\n        events_url: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url: https://api.github.com/users/octocat/received_events\n        type: User\n        site_admin: false\n        name: monalisa octocat\n        company: GitHub\n        blog: https://github.com/blog\n        location: San Francisco\n        email: octocat@github.com\n        hireable: false\n        bio: There once was...\n        twitter_username: monatheoctocat\n        public_repos: 2\n        public_gists: 1\n        followers: 20\n        following: 0\n        created_at: '2008-01-14T04:33:35Z'\n        updated_at: '2008-01-14T04:33:35Z'\n        plan:\n          name: pro\n          space: 976562499\n          collaborators: 0\n          private_repos: 9999\n    hovercard:\n      value:\n        contexts:\n          - message: Owns this repository\n            octicon: repo\n    key-simple-items:\n      value:\n        - id: 1\n          key: ssh-rsa AAA...\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    context:\n      id: github.users.context\n      name: context\n      title: Context for User\n      methods:\n        get_context_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1hovercard/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/context/methods/get_context_for_user'\n        insert: []\n        update: []\n        delete: []\n    users:\n      id: github.users.users\n      name: users\n      title: Users\n      methods:\n        get_authenticated:\n          operation:\n            $ref: '#/paths/~1user/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_authenticated:\n          operation:\n            $ref: '#/paths/~1user/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1users/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_by_username:\n          operation:\n            $ref: '#/paths/~1users~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/users/methods/get_by_username'\n          - $ref: '#/components/x-stackQL-resources/users/methods/get_authenticated'\n        insert: []\n        update: []\n        delete: []\n    blocking:\n      id: github.users.blocking\n      name: blocking\n      title: Blocking\n      methods:\n        list_blocked_by_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1blocks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_blocked:\n          operation:\n            $ref: '#/paths/~1user~1blocks~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        block:\n          operation:\n            $ref: '#/paths/~1user~1blocks~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        unblock:\n          operation:\n            $ref: '#/paths/~1user~1blocks~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/blocking/methods/list_blocked_by_authenticated_user'\n        insert: []\n        update: []\n        delete: []\n    public_emails:\n      id: github.users.public_emails\n      name: public_emails\n      title: Public Emails\n      methods:\n        list_public_emails_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1public_emails/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/public_emails/methods/list_public_emails_for_authenticated_user'\n        insert: []\n        update: []\n        delete: []\n    emails:\n      id: github.users.emails\n      name: emails\n      title: Emails\n      methods:\n        set_primary_email_visibility_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1email~1visibility/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_emails_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1emails/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        add_email_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1emails/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_email_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1emails/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/emails/methods/list_emails_for_authenticated_user'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/emails/methods/add_email_for_authenticated_user'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/emails/methods/delete_email_for_authenticated_user'\n    following:\n      id: github.users.following\n      name: following\n      title: Following\n      methods:\n        list_followed_by_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1following/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_person_is_followed_by_authenticated:\n          operation:\n            $ref: '#/paths/~1user~1following~1{username}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_following_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1following/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        check_following_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1following~1{target_user}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        follow:\n          operation:\n            $ref: '#/paths/~1user~1following~1{username}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        unfollow:\n          operation:\n            $ref: '#/paths/~1user~1following~1{username}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/following/methods/list_following_for_user'\n          - $ref: '#/components/x-stackQL-resources/following/methods/list_followed_by_authenticated_user'\n        insert: []\n        update: []\n        delete: []\n    followers:\n      id: github.users.followers\n      name: followers\n      title: Followers\n      methods:\n        list_followers_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1followers/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list_followers_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1followers/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/followers/methods/list_followers_for_user'\n          - $ref: '#/components/x-stackQL-resources/followers/methods/list_followers_for_authenticated_user'\n        insert: []\n        update: []\n        delete: []\n    gpg_keys:\n      id: github.users.gpg_keys\n      name: gpg_keys\n      title: Gpg_keys\n      methods:\n        list_gpg_keys_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1gpg_keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_gpg_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1gpg_keys/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_gpg_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1gpg_keys~1{gpg_key_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_gpg_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1gpg_keys~1{gpg_key_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_gpg_keys_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1gpg_keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/get_gpg_key_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/list_gpg_keys_for_user'\n          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/list_gpg_keys_for_authenticated_user'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/create_gpg_key_for_authenticated_user'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/gpg_keys/methods/delete_gpg_key_for_authenticated_user'\n    keys:\n      id: github.users.keys\n      name: keys\n      title: Keys\n      methods:\n        list_public_ssh_keys_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_public_ssh_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1keys/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_public_ssh_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1keys~1{key_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_public_ssh_key_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1keys~1{key_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_public_keys_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1keys/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/get_public_ssh_key_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/keys/methods/list_public_keys_for_user'\n          - $ref: '#/components/x-stackQL-resources/keys/methods/list_public_ssh_keys_for_authenticated_user'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/create_public_ssh_key_for_authenticated_user'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/keys/methods/delete_public_ssh_key_for_authenticated_user'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - users\n  description: Interact with and view information about users and also current user.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.3.1/services/users.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.3.1/services/users.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}