{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/ronin/openapi.yml",
			"byteSize": 41231,
			"content": "openapi: 3.0.0\ninfo:\n  title: Ronin API\n  description: |\n    This is a generated connector for [Ronin API v1](https://www.roninapp.com/api) OpenAPI specification.\n    Ronin is a full featured time tracking and invoicing application. It allows you to easily manage almost all aspects of your online projects, though it has a focus on the billing side.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Ronin account](https://www.roninapp.com) and obtain tokens by following [this guide](https://www.roninapp.com/api).\n  x-ballerina-display:\n    label: Ronin\n    iconPath: \"icon.png\"\n  version: \"v2\"\nsecurity:\n- basicAuth: []\ntags:\n  - name: clients\n  - name: contacts\n  - name: estimates\n  - name: invoices\n  - name: projects\n  - name: tasks\npaths:\n  /api/v2/clients.json:\n    post:\n      summary: \"Creates a new client. Clients represent companies, groups, organizations or other contact containers. All contacts must belong to a client. Clients are also the main containers for Projects and Invoices.\"\n      description: \"https://www.roninapp.com/api/clients\"\n      parameters: []\n      requestBody:\n        description: The data required to create a client. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateClientRequest'\n      tags:\n        - \"clients\"\n      responses:\n        201:\n          description: \"Created client\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/ClientObject'\n      operationId: \"create_client\"\n    get:\n      summary: \"Get all clients\"\n      description: \"https://www.roninapp.com/api/clients\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of clients to retrieve.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"updated_since\"\n          description: \"Filter by update time for clients.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"sort\"\n          description: \"You can get the most recently created clients by date, rather than the default sort which is based on client name.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"clients\"\n      responses:\n        200:\n          description: \"An object with a property clients which is an array of Client objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Clients'\n      operationId: \"list_clients\"\n  /api/v2/clients/{id}.json:\n    get:\n      summary: \"Get a client.\"\n      description: \"https://www.roninapp.com/api/clients\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The client ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"clients\"\n      responses:\n        200:\n          description: \"A client object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/ClientObject'\n      operationId: \"get_client\"\n  /api/v2/clients/{client_id}/contacts.json:\n    post:\n      summary: \"Creates a new contact. Contacts represent individuals belonging to Clients. In many cases, if a Contact is a Client, the Contact is where the email and other important information for the client whereas the Client is just a shell container.\"\n      description: \"https://www.roninapp.com/api/contacts\"\n      parameters: \n        - in: \"path\"\n          name: \"client_id\"\n          description: \"The client ID\"\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: The data required to create a contact. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateContactRequest'\n      tags:\n        - \"contacts\"\n      responses:\n        201:\n          description: \"Created contact\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Contact'\n      operationId: \"create_contact\"\n    get:\n      summary: \"Get all contacts specific to a client\"\n      description: \"https://www.roninapp.com/api/contacts\"\n      parameters:\n        - in: \"path\"\n          name: \"client_id\"\n          description: \"The client ID\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of contacts to retrieve.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"page_size\"\n          description: \"You may also use a different page_size parameter. The maximum allowed page_size is 100.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"contacts\"\n      responses:\n        200:\n          description: \"An object with a property contacts which is an array of Contact objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Contacts'\n      operationId: \"list_contacts_by_client\"\n  /api/v2/contacts.json:\n    get:\n      summary: \"Get all contacts\"\n      description: \"https://www.roninapp.com/api/contacts\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of contacts to retrieve.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"page_size\"\n          description: \"You may also use a different page_size parameter. The maximum allowed page_size is 100.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"contacts\"\n      responses:\n        200:\n          description: \"An object with a property contacts which is an array of Contact objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Contacts'\n      operationId: \"list_contacts\"\n  /api/v2/contacts/{id}.json:\n    get:\n      summary: \"Get a contact.\"\n      description: \"https://www.roninapp.com/api/contacts\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The contact ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"contacts\"\n      responses:\n        200:\n          description: \"A contact object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Contact'\n      operationId: \"get_contact\"\n  /api/v2/estimates.json:\n    post:\n      summary: \"Creates a new estimate. Estimates serve as proposals or quotes to be sent to Clients.\"\n      description: \"https://www.roninapp.com/api/estimates\"\n      parameters: []\n      requestBody:\n        description: The data required to create an estimate. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateEstimateRequest'\n      tags:\n        - \"estimates\"\n      responses:\n        201:\n          description: \"Created estimate\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Estimate'\n      operationId: \"create_estimate\"\n    get:\n      summary: \"Get all estimates\"\n      description: \"https://www.roninapp.com/api/estimates\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of clients to retrieve.\"\n          schema:\n            type: integer\n          required: false\n      tags:\n        - \"estimates\"\n      responses:\n        200:\n          description: \"An object with a property estimates which is an array of Estimate objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Estimates'\n      operationId: \"list_estimates\"\n  /api/v2/estimates/{id}.json:\n    get:\n      summary: \"Get an estimate.\"\n      description: \"https://www.roninapp.com/api/estimates\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The estimate ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"estimates\"\n      responses:\n        200:\n          description: \"An estimate object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Estimate'\n      operationId: \"get_estimate\"\n  /api/v2/invoices.json:\n    post:\n      summary: \"Creates a new invoice. Ronin provides programmatic access to invoices and invoice items.\"\n      description: \"https://www.roninapp.com/api/invoices\"\n      parameters: []\n      requestBody:\n        description: The data required to create an invoice. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateInvoiceRequest'\n      tags:\n        - \"invoices\"\n      responses:\n        201:\n          description: \"Created invoice\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Invoice'\n      operationId: \"create_invoice\"\n    get:\n      summary: \"Get all invoices\"\n      description: \"https://www.roninapp.com/api/invoices\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of invoices to retrieve.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"updated_since\"\n          description: \"Filter by update time for invoices.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"invoices\"\n      responses:\n        200:\n          description: \"An object with a property invoices which is an array of Invoice objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Invoices'\n      operationId: \"list_invoices\"\n  /api/v2/invoices/{id}.json:\n    get:\n      summary: \"Get a invoice.\"\n      description: \"https://www.roninapp.com/api/invoices\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The invoice ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"invoices\"\n      responses:\n        200:\n          description: \"An invoice object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Invoice'\n      operationId: \"get_invoice\"\n  /api/v2/projects.json:\n    post:\n      summary: \"Creates a new project. Projects represent hubs of work, tasks, logged hours, expenses, and invoices related to a Client.\"\n      description: \"https://www.roninapp.com/api/projects\"\n      parameters: []\n      requestBody:\n        description: The data required to create a project. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateProjectRequest'\n      tags:\n        - \"projects\"\n      responses:\n        201:\n          description: \"Created project\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Project'\n      operationId: \"create_project\"\n    get:\n      summary: \"Get all projects\"\n      description: \"https://www.roninapp.com/api/projects\"\n      parameters:\n        - in: \"query\"\n          name: \"page\"\n          description: \"Specifies the page of projects to retrieve.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"filter\"\n          description: \"By default, this end point will only return active and billable projects. To also retrieve closed projects, use the filter parameter with value all.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"projects\"\n      responses:\n        200:\n          description: \"An object with a property projects which is an array of Project objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Projects'\n      operationId: \"list_projects\"\n  /api/v2/projects/{id}.json:\n    get:\n      summary: \"Get a project.\"\n      description: \"https://www.roninapp.com/api/projects\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The project ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"projects\"\n      responses:\n        200:\n          description: \"An project object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Projects'\n      operationId: \"get_project\"\n  /api/v2/task.json:\n    post:\n      summary: \"Creates a new task. Tasks are TODO items that can be added to projects and assigned to staff members.\"\n      description: \"https://www.roninapp.com/api/tasks\"\n      parameters: []\n      requestBody:\n        description: The data required to create a task. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/CreateTaskRequest'\n      tags:\n        - \"tasks\"\n      responses:\n        201:\n          description: \"Created task\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Task'\n      operationId: \"create_task\"\n    get:\n      summary: \"Get all tasks\"\n      description: \"https://www.roninapp.com/api/tasks\"\n      parameters: []\n      tags:\n        - \"tasks\"\n      responses:\n        200:\n          description: \"An object with a property tasks which is an array of Task objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Tasks'\n      operationId: \"list_tasks\"\n  /api/v2/tasks/{id}.json:\n    get:\n      summary: \"Get a task.\"\n      description: \"https://www.roninapp.com/api/tasks\"\n      parameters:\n        - in: \"path\"\n          name: \"id\"\n          description: \"The task ID\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"tasks\"\n      responses:\n        200:\n          description: \"An task object\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Task'\n      operationId: \"get_task\"\n    put:\n      summary: \"Updates a new task. Tasks are TODO items that can be added to projects and assigned to staff members.\"\n      description: \"https://www.roninapp.com/api/tasks\"\n      parameters: \n        - in: \"path\"\n          name: \"id\"\n          description: \"The task ID\"\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: The data required to update a task. \n        content:\n          application/json:\n            schema: \n              $ref: '#/components/schemas/UpdateTaskRequest'\n      tags:\n        - \"tasks\"\n      responses:\n        204:\n          description: \"An empty body if the task was successfully updated.\"\n      operationId: \"update_task\"\n\ncomponents:\n  schemas:\n    CreateClientRequest:\n      type: object\n      properties:\n        client:\n          $ref: '#/components/schemas/ClientRequest'\n      description: The data required to create a client.\n    ClientRequest:\n      type: object\n      required:\n        - \"name\"\n      properties:\n        number:\n          type: string\n          description: The unique number for the client\n        name:\n          type: string\n          description: The name of the client\n        city:\n          type: string\n          description: The city of the client\n        address:\n          type: string\n          description: The address of the client\n        zip:\n          type: string\n          description: The zip code of the client\n        country:\n          type: string\n          description: The country of the client\n        website:\n          type: string\n          description: The website of the client\n        address_2:\n          type: string\n          description: The address2 of the client\n        description:\n          type: string\n          description: The description about the client\n        state:\n          type: string\n          description: The state of the client\n      description: Clients represent companies, groups, organizations or other contact containers. All contacts must belong to a client. Clients are also the main containers for Projects and Invoices.\n    ClientObject:\n      type: object\n      properties:\n        number:\n          type: string\n          description: The unique number for the client\n        name:\n          type: string\n          description: The name of the client\n        city:\n          type: string\n          description: The city of the client\n        address:\n          type: string\n          description: The address of the client\n        zip:\n          type: string\n          description: The zip code of the client\n        country:\n          type: string\n          description: The country of the client\n        id:\n          type: integer\n          description: Client ID\n        website:\n          type: string\n          description: The website of the client\n        address_2:\n          type: string\n          description: The address2 of the client\n        description:\n          type: string\n          description: The description about the client\n        state:\n          type: string\n          description: The state of the client\n      description: Clients represent companies, groups, organizations or other contact containers. All contacts must belong to a client. Clients are also the main containers for Projects and Invoices.\n    Clients:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        clients:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClientObject'\n          description: An array of Client objects.\n      description: An object with a property clients which is an array of Client objects.\n    CreateContactRequest:\n      type: object\n      properties:\n        client_user:\n          $ref: '#/components/schemas/ContactRequest'\n      description: The data required to create a contact.\n    ContactRequest:\n      type: object\n      required:\n        - \"name\"\n        - \"email\"\n      properties:\n        name:\n          type: string\n          description: The name of the contact\n        ext:\n          type: string\n          description: The ext number of the contact\n        title:\n          type: string\n          description: The title of the contact\n        client_id:\n          type: integer\n          description: The ID of the client which the contact belongs\n        mobile:\n          type: string\n          description: The mobile number of the contact\n        phone:\n          type: string\n          description: The phone number of the contact\n        avatar:\n          type: string\n          description: The avatar\n        email:\n          type: string\n          description: The e-mail address of the contact\n      description: Contacts represent individuals belonging to Clients. In many cases, if a Contact is a Client, the Contact is where the email and other important information for the client whereas the Client is just a shell container.\n    Contact:\n      type: object\n      required:\n        - \"name\"\n        - \"email\"\n      properties:\n        name:\n          type: string\n          description: The name of the contact\n        ext:\n          type: string\n          description: The ext number of the contact\n        title:\n          type: string\n          description: The title of the contact\n        id:\n          type: integer\n          description: Contact ID\n        client_id:\n          type: integer\n          description: The ID of the client which the contact belongs\n        mobile:\n          type: string\n          description: The mobile number of the contact\n        phone:\n          type: string\n          description: The phone number of the contact\n        avatar:\n          type: string\n          description: The avatar\n        email:\n          type: string\n          description: The e-mail address of the contact\n      description: Contacts represent individuals belonging to Clients. In many cases, if a Contact is a Client, the Contact is where the email and other important information for the client whereas the Client is just a shell container.\n    Contacts:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/Contact'\n          description: An array of Contact objects.\n      description: An object with a property contacts which is an array of Contact objects.\n    CreateEstimateRequest:\n      type: object\n      properties:\n        estimate:\n          $ref: '#/components/schemas/EstimateRequest'\n      description: The data required to create an estimate.\n    EstimateRequest:\n      type: object\n      required:\n        - \"date\"\n        - \"currency_code\"\n      properties:\n        tax:\n          type: number\n          description: Tax\n        number:\n          type: string\n          description: Invoice number\n        total_cost:\n          type: number\n          description: Total cost\n        subtotal:\n          type: number\n          description: Subtotal\n        title:\n          type: string\n          description: Title\n        tax_label:\n          type: string\n          description: Tax label\n        compound_tax:\n          type: boolean\n          description: Compound tax\n        date:\n          type: string\n          description: Date\n        client_id:\n          type: integer\n          description: Client ID\n        note:\n          type: string\n          description: Note\n        estimate_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateItem'\n          description: Estimate items\n        tax2_label:\n          type: string\n          description: Secondary tax label\n        summary:\n          type: string\n          description: Summary\n        tax2:\n          type: number\n          description: Secondary tax\n        status:\n          type: number\n          description: Status\n        currency_code:\n          type: string\n          description: Currency code\n        tax3_label:\n          type: string\n          description: Tertiary tax label\n        tax3:\n          type: number\n          description: Tertiary tax\n        estimate_items_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateItemAttribute'\n          description: Estimate items attributes. estimate_items_attributes.title, estimate_items_attributes.quantity, estimate_items_attributes.price must be provided if any items are added.\n      description: Estimates serve as proposals or quotes to be sent to Clients.\n    Estimate:\n      type: object\n      required:\n        - \"date\"\n        - \"currency_code\"\n      properties:\n        tax:\n          type: number\n          description: Tax\n        number:\n          type: string\n          description: Invoice number\n        total_cost:\n          type: number\n          description: Total cost\n        subtotal:\n          type: number\n          description: Subtotal\n        title:\n          type: string\n          description: Title\n        tax_label:\n          type: string\n          description: Tax label\n        compound_tax:\n          type: boolean\n          description: Compound tax\n        id:\n          type: integer\n          description: Invoice ID\n        date:\n          type: string\n          description: Date\n        client_id:\n          type: integer\n          description: Client ID\n        note:\n          type: string\n          description: Note\n        estimate_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateItem'\n          description: Estimate items\n        tax2_label:\n          type: string\n          description: Secondary tax label\n        summary:\n          type: string\n          description: Summary\n        tax2:\n          type: number\n          description: Secondary tax\n        status:\n          type: number\n          description: Status\n        currency_code:\n          type: string\n          description: Currency code\n        tax3_label:\n          type: string\n          description: Tertiary tax label\n        tax3:\n          type: number\n          description: Tertiary tax\n        estimate_items_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/EstimateItemAttribute'\n          description: Estimate items attributes. estimate_items_attributes.title, estimate_items_attributes.quantity, estimate_items_attributes.price must be provided if any items are added.\n      description: Estimates serve as proposals or quotes to be sent to Clients.\n    EstimateItem:\n      type: object\n      properties:\n        price:\n          type: number\n          description: Price\n        title:\n          type: string\n          description: Title\n        quantity:\n          type: integer\n          description: Quantity\n        taxable:\n          type: boolean\n          description: Taxable\n        id:\n          type: integer\n          description: Estimate Item ID\n      description: Estimate item\n    EstimateItemAttribute:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title\n        quantity:\n          type: integer\n          description: Quantity\n        price:\n          type: number\n          description: Price\n      description: Estimate item attribute\n    Estimates:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        Estimates:\n          type: array\n          items:\n            $ref: '#/components/schemas/Estimate'\n          description: An array of Estimate objects.\n      description: An object with a property estimates which is an array of Estimate objects.\n    CreateInvoiceRequest:\n      type: object\n      properties:\n        invoice:\n          $ref: '#/components/schemas/InvoiceRequest'\n      description: The data required to create an invoice.\n    InvoiceRequest:\n      type: object\n      required:\n        - \"date\"\n        - \"currency_code\"\n        - \"due_date\"\n      properties:\n        tax:\n          type: number\n          description: Tax\n        number:\n          type: string\n          description: Invoice number\n        total_cost:\n          type: number\n          description: Total cost\n        balance:\n          type: number\n          description: Balance\n        subtotal:\n          type: number\n          description: Sub total\n        title:\n          type: string\n          description: Title\n        tax_label:\n          type: string\n          description: Tax label\n        compound_tax:\n          type: boolean\n          description: Compound tax\n        date:\n          type: string\n          description: Date\n        client_id:\n          type: integer\n          description: Client ID\n        note:\n          type: string\n          description: A note about payment\n        due_date:\n          type: string\n          description: Due date\n        invoice_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceItem'\n          description: Invoice items\n        tax2_label:\n          type: string\n          description: Secondary tax label\n        summary:\n          type: string\n          description: Summary\n        total_payments:\n          type: number\n          description: Total payments\n        tax2:\n          type: number\n          description: Secondary tax\n        status:\n          type: number\n          description: Status\n        po:\n          type: string\n          description: PO\n        currency_code:\n          type: string\n          description: Currency code\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n          description: Payments\n        tax3_label:\n          type: string\n          description: Tertiary tax label\n        tax3:\n          type: number\n          description: Tertiary tax\n        invoice_items_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceItemAttribute'\n          description: Invoice items attributes. invoice_item_attributes.title, invoice_item_attributes.quantity, invoice_item_attributes.price must be provided if any items are added.\n      description: Ronin provides programmatic access to invoices and invoice items.\n    Invoices:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        invoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/Invoice'\n          description: An array of Invoice objects.\n      description: An object with a property invoices which is an array of Invoice objects.\n    Invoice:\n      type: object\n      required:\n        - \"date\"\n        - \"currency_code\"\n        - \"due_date\"\n      properties:\n        tax:\n          type: number\n          description: Tax\n        number:\n          type: string\n          description: Invoice number\n        total_cost:\n          type: number\n          description: Total cost\n        balance:\n          type: number\n          description: Balance\n        subtotal:\n          type: number\n          description: Sub total\n        title:\n          type: string\n          description: Title\n        tax_label:\n          type: string\n          description: Tax label\n        compound_tax:\n          type: boolean\n          description: Compound tax\n        id:\n          type: integer\n          description: Invoice ID\n        date:\n          type: string\n          description: Date\n        client_id:\n          type: integer\n          description: Client ID\n        note:\n          type: string\n          description: A note about payment\n        due_date:\n          type: string\n          description: Due date\n        invoice_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceItem'\n          description: Invoice items\n        tax2_label:\n          type: string\n          description: Secondary tax label\n        summary:\n          type: string\n          description: Summary\n        total_payments:\n          type: number\n          description: Total payments\n        tax2:\n          type: number\n          description: Secondary tax\n        status:\n          type: number\n          description: Status\n        po:\n          type: string\n          description: PO\n        currency_code:\n          type: string\n          description: Currency code\n        payments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Payment'\n          description: Payments\n        tax3_label:\n          type: string\n          description: Tertiary tax label\n        tax3:\n          type: number\n          description: Tertiary tax\n        invoice_items_attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/InvoiceItemAttribute'\n          description: Invoice items attributes. invoice_item_attributes.title, invoice_item_attributes.quantity, invoice_item_attributes.price must be provided if any items are added.\n      description: Ronin provides programmatic access to invoices and invoice items.\n    InvoiceItem:\n      type: object\n      properties:\n        price:\n          type: string\n          description: Price\n        title:\n          type: string\n          description: Title\n        quantity:\n          type: integer\n          description: Quantity\n        taxable:\n          type: boolean\n          description: Taxable\n        id:\n          type: integer\n          description: Invoice Item ID\n      description: Invoice item\n    Payment:\n      type: object\n      properties:\n        received_on:\n          type: string\n          description: Payment received on\n        updated_at:\n          type: string\n          description: Payment updated at\n        invoice_id:\n          type: integer\n          description: Invoice ID\n        amount:\n          type: number\n          description: Payment amount\n        id:\n          type: integer\n          description: Payment ID\n        note:\n          type: string\n          description: Payment note\n      description: Payment details\n    InvoiceItemAttribute:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title\n        quantity:\n          type: integer\n          description: Quantity\n        price:\n          type: number\n          description: Price\n      description: Invoice item attribute\n    CreateProjectRequest:\n      type: object\n      properties:\n        project:\n          $ref: '#/components/schemas/ProjectRequest'\n      description: The data required to create a project.\n    ProjectRequest:\n      type: object\n      required:\n        - \"name\"\n        - \"rate\"\n      properties:\n        number:\n          type: string\n          description: The unique identifier for the project\n        name:\n          type: string\n          description: The name for the project\n        budget_type:\n          type: number\n          description: The budget type of the project\n        client:\n          $ref: '#/components/schemas/ClientObject'\n        project_type:\n          type: number\n          description: The type of the project\n        worked_hours:\n          type: number\n          description: Worked hours\n        rate:\n          type: number\n          description: The billing rate for the project\n        unbilled_hours:\n          type: number\n          description: Unbilled hours\n        cost:\n          type: number\n          description: Cost\n        description:\n          type: string\n          description: The description about the project\n        status:\n          type: number\n          description: The status of the project\n        end_date:\n          type: string\n          description: The end date of the project\n        currency_code:\n          type: string\n          description: The currency code of the project\n        budget:\n          type: number\n          description: Budget\n      description: Projects represent hubs of work, tasks, logged hours, expenses, and invoices related to a Client. budget_type can be 0 (total budgeted hours) or 1 (total budgeted amount). project_type can be 0 (hourly rate project) or 2 (fixed amount project). Rate the total cost of the project in the latter case.\n    Projects:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        projects:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n          description: An array of Project objects.\n      description: An object with a property projects which is an array of Project objects.\n    Project:\n      type: object\n      required:\n        - \"name\"\n        - \"rate\"\n      properties:\n        number:\n          type: string\n          description: The unique identifier for the project\n        name:\n          type: string\n          description: The name for the project\n        budget_type:\n          type: number\n          description: The budget type of the project\n        client:\n          $ref: '#/components/schemas/ClientObject'\n        project_type:\n          type: number\n          description: The type of the project\n        worked_hours:\n          type: number\n          description: Worked hours\n        rate:\n          type: number\n          description: The billing rate for the project\n        unbilled_hours:\n          type: number\n          description: Unbilled hours\n        id:\n          type: integer\n          description: Project ID\n        cost:\n          type: number\n          description: Cost\n        description:\n          type: string\n          description: The description about the project\n        status:\n          type: number\n          description: The status of the project\n        end_date:\n          type: string\n          description: The end date of the project\n        currency_code:\n          type: string\n          description: The currency code of the project\n        budget:\n          type: number\n          description: Budget\n      description: Projects represent hubs of work, tasks, logged hours, expenses, and invoices related to a Client. budget_type can be 0 (total budgeted hours) or 1 (total budgeted amount). project_type can be 0 (hourly rate project) or 2 (fixed amount project). Rate the total cost of the project in the latter case. \n    CreateTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: '#/components/schemas/TaskRequest'\n      description: The data required to create a task.\n    UpdateTaskRequest:\n      type: object\n      properties:\n        task:\n          $ref: '#/components/schemas/TaskRequest'\n      description: The data required to update a task.\n    TaskRequest:\n      type: object\n      required:\n        - \"title\"\n      properties:\n        completed_at:\n          type: string\n          description: Completed at\n        created_at:\n          type: string\n          description: Created at\n        title:\n          type: string\n          description: The title of the task\n        assignee_id:\n          type: integer\n          description: The assignee ID of the task\n        updated_at:\n          type: string\n          description: Updated at\n        project_id:\n          type: integer\n          description: The project ID of the task\n        user_id:\n          type: integer\n          description: The user ID\n        client_id:\n          type: integer\n          description: The client ID of the task\n        due_date:\n          type: string\n          description: The due date of the task\n        complete:\n          type: boolean\n          description: The boolean flag to indicate that, task is completed or not\n        description:\n          type: string\n          description: The description\n      description: Tasks are TODO items that can be added to projects and assigned to staff members.\n    Task:\n      type: object\n      required:\n        - \"title\"\n      properties:\n        completed_at:\n          type: string\n          description: Completed at\n        created_at:\n          type: string\n          description: Created at\n        title:\n          type: string\n          description: The title of the task\n        assignee_id:\n          type: integer\n          description: The assignee ID of the task\n        updated_at:\n          type: string\n          description: Updated at\n        project_id:\n          type: integer\n          description: The project ID of the task\n        id:\n          type: integer\n          description: The task ID\n        user_id:\n          type: integer\n          description: The user ID\n        client_id:\n          type: integer\n          description: The client ID of the task\n        due_date:\n          type: string\n          description: The due date of the task\n        complete:\n          type: boolean\n          description: The boolean flag to indicate that, task is completed or not\n        description:\n          type: string\n          description: The description\n      description: Tasks are TODO items that can be added to projects and assigned to staff members.\n    Tasks:\n      type: object\n      properties:\n        page_count:\n          type: integer\n          description: The page count\n        page_size:\n          type: integer\n          description: The page size\n        total_count:\n          type: integer\n          description: The total count\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n          description: An array of Task objects.\n      description: An object with a property tasks which is an array of Task objects.\n    \n\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/ronin/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/ronin/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}