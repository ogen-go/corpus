{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-cognitiveservices-LUIS-Runtime-v2.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-cognitiveservices-LUIS-Runtime-v2.0-swagger.yaml",
			"byteSize": 12519,
			"content": "openapi: 3.0.0\ninfo:\n  title: Language Understanding Intelligent Service (LUIS) Endpoint API for running\n    predictions and extracting user intentions and entities from utterances.\n  version: v2.0\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/LUIS/Runtime/stable/v2.0/LUIS-Runtime.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: cognitiveservices-LUIS-Runtime\n  x-tags:\n    - Azure\n    - Microsoft\nsecurity:\n  - apiKeyHeader: []\npaths:\n  \"/{appId}\":\n    get:\n      description: Gets predictions for a given utterance, in the form of intents and\n        entities. The current maximum query size is 500 characters.\n      operationId: Prediction_Resolve2\n      parameters:\n        - description: The LUIS application ID (guid).\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n          examples:\n            Successful Get Predictions From Endpoint Via Get request:\n              value: \"{Application Id}\"\n        - description: The utterance to predict.\n          in: query\n          name: q\n          required: true\n          x-ms-client-name: query\n          schema:\n            type: string\n            maxLength: 500\n          examples:\n            Successful Get Predictions From Endpoint Via Get request:\n              value: forward to frank 30 dollars through HSBC\n        - description: The timezone offset for the location of the request.\n          in: query\n          name: timezoneOffset\n          schema:\n            type: number\n        - description: If true, return all intents instead of just the top scoring intent.\n          in: query\n          name: verbose\n          schema:\n            type: boolean\n        - description: Use the staging endpoint slot.\n          in: query\n          name: staging\n          schema:\n            type: boolean\n        - description: Enable spell checking.\n          in: query\n          name: spellCheck\n          schema:\n            type: boolean\n        - description: The subscription key to use when enabling bing spell check\n          in: query\n          name: bing-spell-check-subscription-key\n          schema:\n            type: string\n        - description: Log query (default is true)\n          in: query\n          name: log\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Prediction, based on the input query, containing intent(s) and\n            entities.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LuisResult\"\n              examples:\n                Successful Get Predictions From Endpoint Via Get request:\n                  $ref: \"#/components/examples/Successful_Get_Predictions_From_Endp\\\n                    oint_Via_Get_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\n    post:\n      description: Gets predictions for a given utterance, in the form of intents and\n        entities. The current maximum query size is 500 characters.\n      operationId: Prediction_Resolve\n      parameters:\n        - description: The LUIS application ID (Guid).\n          in: path\n          name: appId\n          required: true\n          schema:\n            type: string\n          examples:\n            Successful Get Predictions From Endpoint Via Post request:\n              value: \"{Application Id}\"\n        - description: The timezone offset for the location of the request.\n          in: query\n          name: timezoneOffset\n          schema:\n            type: number\n        - description: If true, return all intents instead of just the top scoring intent.\n          in: query\n          name: verbose\n          schema:\n            type: boolean\n        - description: Use the staging endpoint slot.\n          in: query\n          name: staging\n          schema:\n            type: boolean\n        - description: Enable spell checking.\n          in: query\n          name: spellCheck\n          schema:\n            type: boolean\n        - description: The subscription key to use when enabling bing spell check\n          in: query\n          name: bing-spell-check-subscription-key\n          schema:\n            type: string\n        - description: Log query (default is true)\n          in: query\n          name: log\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Q\"\n        description: The utterance to predict.\n        required: true\n        x-ms-client-name: query\n      responses:\n        \"200\":\n          description: Prediction, based on the input query, containing intent(s) and\n            entities.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LuisResult\"\n              examples:\n                Successful Get Predictions From Endpoint Via Post request:\n                  $ref: \"#/components/examples/Successful_Get_Predictions_From_Endp\\\n                    oint_Via_Post_request\"\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIError\"\nservers:\n  - url: https://azure.local/luis/v2.0/apps\n  - url: https://{AzureRegion}.api.cognitive.microsoft.com/luis/v2.0/apps\n    variables:\n      AzureRegion:\n        description: Supported Azure regions for Cognitive Services endpoints\n        enum:\n          - westus\n          - westeurope\n          - southeastasia\n          - eastus2\n          - westcentralus\n          - westus2\n          - eastus\n          - southcentralus\n          - northeurope\n          - eastasia\n          - australiaeast\n          - brazilsouth\n        x-ms-enum:\n          modelAsString: false\n          name: AzureRegions\n        x-ms-parameter-location: client\n        x-ms-skip-url-encoding: true\n        default: westus\ncomponents:\n  examples:\n    Successful_Get_Predictions_From_Endpoint_Via_Get_request:\n      value:\n        entities:\n          - endIndex: 18\n            entity: \"30\"\n            resolution:\n              value: \"30\"\n            startIndex: 17\n            type: builtin.number\n          - endIndex: 15\n            entity: frank\n            score: 0.935219169\n            startIndex: 11\n            type: frank\n          - endIndex: 26\n            entity: 30 dollars\n            resolution:\n              unit: Dollar\n              value: \"30\"\n            startIndex: 17\n            type: builtin.currency\n          - endIndex: 39\n            entity: hsbc\n            resolution:\n              values:\n                - BankeName\n            startIndex: 36\n            type: Bank\n        query: forward to frank 30 dollars through HSBC\n        topScoringIntent:\n          intent: give\n          score: 0.3964121\n    Successful_Get_Predictions_From_Endpoint_Via_Post_request:\n      value:\n        entities:\n          - endIndex: 18\n            entity: \"30\"\n            resolution:\n              value: \"30\"\n            startIndex: 17\n            type: builtin.number\n          - endIndex: 15\n            entity: frank\n            score: 0.935219169\n            startIndex: 11\n            type: frank\n          - endIndex: 26\n            entity: 30 dollars\n            resolution:\n              unit: Dollar\n              value: \"30\"\n            startIndex: 17\n            type: builtin.currency\n          - endIndex: 39\n            entity: hsbc\n            resolution:\n              values:\n                - BankeName\n            startIndex: 36\n            type: Bank\n        query: forward to frank 30 dollars through HSBC\n        topScoringIntent:\n          intent: give\n          score: 0.3964121\n  securitySchemes:\n    apiKeyHeader:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n  schemas:\n    APIError:\n      description: Error information returned by the API\n      properties:\n        message:\n          description: Cause of the error.\n          type: string\n        statusCode:\n          description: HTTP Status code\n          type: string\n      type: object\n    CompositeChildModel:\n      description: Child entity in a LUIS Composite Entity.\n      properties:\n        type:\n          description: Type of child entity.\n          type: string\n        value:\n          description: Value extracted by LUIS.\n          type: string\n      required:\n        - type\n        - value\n      type: object\n    CompositeEntityModel:\n      description: LUIS Composite Entity.\n      properties:\n        children:\n          description: Child entities.\n          items:\n            $ref: \"#/components/schemas/CompositeChildModel\"\n          type: array\n        parentType:\n          description: Type/name of parent entity.\n          type: string\n        value:\n          description: Value for composite entity extracted by LUIS.\n          type: string\n      required:\n        - parentType\n        - value\n        - children\n      type: object\n    EntityModel:\n      additionalProperties:\n        description: \"List of additional properties. E.g.: score and resolution values for\n          pre-built LUIS entities.\"\n        type: object\n      description: An entity extracted from the utterance.\n      properties:\n        endIndex:\n          description: The position of the last character of the matched entity within the\n            utterance.\n          type: number\n        entity:\n          description: Name of the entity, as defined in LUIS.\n          type: string\n        startIndex:\n          description: The position of the first character of the matched entity within the\n            utterance.\n          type: number\n        type:\n          description: Type of the entity, as defined in LUIS.\n          type: string\n      required:\n        - entity\n        - type\n        - startIndex\n        - endIndex\n      type: object\n    EntityWithResolution:\n      allOf:\n        - $ref: \"#/components/schemas/EntityModel\"\n        - properties:\n            resolution:\n              description: Resolution values for pre-built LUIS entities.\n              type: object\n          required:\n            - resolution\n          type: object\n    EntityWithScore:\n      allOf:\n        - $ref: \"#/components/schemas/EntityModel\"\n        - properties:\n            score:\n              description: Associated prediction score for the intent (float).\n              maximum: 1\n              minimum: 0\n              type: number\n          required:\n            - score\n          type: object\n    IntentModel:\n      description: An intent detected from the utterance.\n      properties:\n        intent:\n          description: Name of the intent, as defined in LUIS.\n          type: string\n        score:\n          description: Associated prediction score for the intent (float).\n          maximum: 1\n          minimum: 0\n          type: number\n      type: object\n    LuisResult:\n      description: Prediction, based on the input query, containing intent(s) and entities.\n      properties:\n        alteredQuery:\n          description: The corrected utterance (when spell checking was enabled).\n          type: string\n        compositeEntities:\n          description: The composite entities extracted from the utterance.\n          items:\n            $ref: \"#/components/schemas/CompositeEntityModel\"\n          type: array\n        entities:\n          description: The entities extracted from the utterance.\n          items:\n            $ref: \"#/components/schemas/EntityModel\"\n          type: array\n        intents:\n          description: All the intents (and their score) that were detected from utterance.\n          items:\n            $ref: \"#/components/schemas/IntentModel\"\n          type: array\n        query:\n          description: The input utterance that was analized.\n          type: string\n        topScoringIntent:\n          $ref: \"#/components/schemas/IntentModel\"\n      type: object\n    Q:\n      description: The utterance to predict.\n      example: '\"forward to frank 30 dollars through HSBC\"'\n      maxLength: 500\n      type: string\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-cognitiveservices-LUIS-Runtime-v2.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-cognitiveservices-LUIS-Runtime-v2.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}