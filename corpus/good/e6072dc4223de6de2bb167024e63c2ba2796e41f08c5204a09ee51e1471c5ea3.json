{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Budibase/budibase"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "packages/server/specs/openapi.yaml",
			"byteSize": 65711,
			"content": "openapi: 3.0.0\ninfo:\n  title: Budibase API\n  description: The public API for Budibase apps and its services.\n  version: 1.0.0\nservers:\n  - url: https://budibase.app/api/public/v1\n    description: Budibase Cloud API\n  - url: \"{protocol}://{hostname}/api/public/v1\"\n    description: Budibase self hosted API\n    variables:\n      protocol:\n        default: http\n        description: Whether HTTP or HTTPS should be used to communicate with your\n          Budibase instance.\n      hostname:\n        default: localhost:10000\n        description: The URL of your Budibase instance.\ncomponents:\n  parameters:\n    tableId:\n      in: path\n      name: tableId\n      required: true\n      description: The ID of the table which this request is targeting.\n      schema:\n        type: string\n    rowId:\n      in: path\n      name: rowId\n      required: true\n      description: The ID of the row which this request is targeting.\n      schema:\n        type: string\n    appId:\n      in: header\n      name: x-budibase-app-id\n      required: true\n      description: The ID of the app which this request is targeting.\n      schema:\n        type: string\n    appIdUrl:\n      in: path\n      name: appId\n      required: true\n      description: The ID of the app which this request is targeting.\n      schema:\n        type: string\n    queryId:\n      in: path\n      name: queryId\n      required: true\n      description: The ID of the query which this request is targeting.\n      schema:\n        type: string\n    userId:\n      in: path\n      name: userId\n      required: true\n      description: The ID of the user which this request is targeting.\n      schema:\n        type: string\n  examples:\n    application:\n      value:\n        data:\n          _id: app_metadata\n          appId: app_dev_957b12f943d348faa61db7e18e088d0f\n          version: 1.0.58-alpha.0\n          name: App name\n          url: /app-url\n          tenantId: default\n          updatedAt: 2022-02-22T13:00:54.035Z\n          createdAt: 2022-02-11T18:02:26.961Z\n          status: development\n    applications:\n      value:\n        data:\n          - _id: app_metadata\n            appId: app_dev_957b12f943d348faa61db7e18e088d0f\n            version: 1.0.58-alpha.0\n            name: App name\n            url: /app-url\n            tenantId: default\n            updatedAt: 2022-02-22T13:00:54.035Z\n            createdAt: 2022-02-11T18:02:26.961Z\n            status: development\n    inputRow:\n      value:\n        _id: ro_ta_5b1649e42a5b41dea4ef7742a36a7a70_e6dc7e38cf1343b2b56760265201cda4\n        type: row\n        tableId: ta_5b1649e42a5b41dea4ef7742a36a7a70\n        name: Mike\n        age: 30\n        relationship:\n          - ro_ta_...\n    row:\n      value:\n        data:\n          _id: ro_ta_5b1649e42a5b41dea4ef7742a36a7a70_e6dc7e38cf1343b2b56760265201cda4\n          type: row\n          tableId: ta_5b1649e42a5b41dea4ef7742a36a7a70\n          name: Mike\n          age: 30\n          relationship:\n            - primaryDisplay: Joe\n              _id: ro_ta_...\n    enrichedRow:\n      value:\n        data:\n          _id: ro_ta_5b1649e42a5b41dea4ef7742a36a7a70_e6dc7e38cf1343b2b56760265201cda4\n          name: eg\n          tableId: ta_5b1649e42a5b41dea4ef7742a36a7a70\n          type: row\n          relationship:\n            - _id: ro_ta_users_us_8f3d717147d74d759d8cef5b6712062f\n              name: Joe\n              tableId: ta_users\n              internal:\n                - _id: ro_ta_5b1649e42a5b41dea4ef7742a36a7a70_e6dc7e38cf1343b2b56760265201cda4\n                  primaryDisplay: eg\n    rows:\n      value:\n        data:\n          - _id: ro_ta_5b1649e42a5b41dea4ef7742a36a7a70_e6dc7e38cf1343b2b56760265201cda4\n            type: row\n            tableId: ta_5b1649e42a5b41dea4ef7742a36a7a70\n            name: Mike\n            age: 30\n            relationship:\n              - primaryDisplay: Joe\n                _id: ro_ta_...\n        hasNextPage: true\n        bookmark: 10\n    table:\n      value:\n        data:\n          _id: ta_5b1649e42a5b41dea4ef7742a36a7a70\n          name: People\n          schema:\n            name:\n              type: string\n              name: name\n            age:\n              type: number\n              name: age\n            relationship:\n              type: link\n              name: relationship\n              tableId: ta_...\n              fieldName: relatedColumn\n              relationshipType: many-to-many\n    tables:\n      value:\n        data:\n          - _id: ta_5b1649e42a5b41dea4ef7742a36a7a70\n            name: People\n            schema:\n              name:\n                type: string\n                name: name\n              age:\n                type: number\n                name: age\n              relationship:\n                type: link\n                name: relationship\n                tableId: ta_...\n                fieldName: relatedColumn\n                relationshipType: many-to-many\n    query:\n      value:\n        data:\n          _id: query_datasource_plus_4d8be0c506b9465daf4bf84d890fdab6_454854487c574d45bc4029b1e153219e\n          datasourceId: datasource_plus_4d8be0c506b9465daf4bf84d890fdab6\n          parameters: []\n          fields:\n            sql: select * from persons\n          queryVerb: read\n          name: Help\n          schema:\n            personid:\n              name: personid\n              type: string\n            lastname:\n              name: lastname\n              type: string\n            firstname:\n              name: firstname\n              type: string\n            address:\n              name: address\n              type: string\n            city:\n              name: city\n              type: string\n          transformer: return data\n          readable: true\n    queries:\n      value:\n        data:\n          - _id: query_datasource_plus_4d8be0c506b9465daf4bf84d890fdab6_454854487c574d45bc4029b1e153219e\n            datasourceId: datasource_plus_4d8be0c506b9465daf4bf84d890fdab6\n            parameters: []\n            fields:\n              sql: select * from persons\n            queryVerb: read\n            name: Help\n            schema:\n              personid:\n                name: personid\n                type: string\n              lastname:\n                name: lastname\n                type: string\n              firstname:\n                name: firstname\n                type: string\n              address:\n                name: address\n                type: string\n              city:\n                name: city\n                type: string\n            transformer: return data\n            readable: true\n    restResponse:\n      value:\n        data:\n          - value: \u003chtml lang='en-GB'\u003e\u003c/html\u003e\n        pagination:\n          cursor: \"2\"\n        raw: \u003chtml lang='en-GB'\u003e\u003c/html\u003e\n        headers:\n          content-type: text/html; charset=ISO-8859-1\n    sqlResponse:\n      value:\n        data:\n          - personid: 1\n            lastname: Hughes\n            firstname: Mike\n            address: 123 Fake Street\n            city: Belfast\n          - personid: 2\n            lastname: Smith\n            firstname: John\n            address: 64 Updown Road\n            city: Dublin\n    user:\n      value:\n        data:\n          _id: us_693a73206518477283a8d5ae31103252\n          email: test@test.com\n          roles:\n            app_957b12f943d348faa61db7e18e088d0f: BASIC\n          builder:\n            global: false\n          admin:\n            global: true\n          tenantId: default\n          status: active\n          budibaseAccess: true\n          csrfToken: 9c70291d-7137-48f9-9166-99ab5473a3d4\n          userId: us_693a73206518477283a8d5ae31103252\n          roleId: ADMIN\n          role:\n            _id: ADMIN\n            name: Admin\n            permissionId: admin\n            inherits: POWER\n    users:\n      value:\n        data:\n          - _id: us_693a73206518477283a8d5ae31103252\n            email: test@test.com\n            roles:\n              app_957b12f943d348faa61db7e18e088d0f: BASIC\n            builder:\n              global: false\n            admin:\n              global: true\n            tenantId: default\n            status: active\n            budibaseAccess: true\n            csrfToken: 9c70291d-7137-48f9-9166-99ab5473a3d4\n            userId: us_693a73206518477283a8d5ae31103252\n            roleId: ADMIN\n            role:\n              _id: ADMIN\n              name: Admin\n              permissionId: admin\n              inherits: POWER\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-budibase-api-key\n      description: Your individual API key, this will provide access based on the\n        configured RBAC settings of your user.\n  schemas:\n    application:\n      type: object\n      properties:\n        name:\n          description: The name of the app.\n          type: string\n        url:\n          description: The URL by which the app is accessed, this must be URL encoded.\n          type: string\n      required:\n        - name\n    applicationOutput:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            name:\n              description: The name of the app.\n              type: string\n            url:\n              description: The URL by which the app is accessed, this must be URL encoded.\n              type: string\n            _id:\n              description: The ID of the app.\n              type: string\n            status:\n              description: The status of the app, stating it if is the development or\n                published version.\n              type: string\n              enum:\n                - development\n                - published\n            createdAt:\n              description: States when the app was created, will be constant. Stored in ISO\n                format.\n              type: string\n            updatedAt:\n              description: States the last time the app was updated - stored in ISO format.\n              type: string\n            version:\n              description: States the version of the Budibase client this app is currently\n                based on.\n              type: string\n            tenantId:\n              description: In a multi-tenant environment this will state the tenant this app\n                is within.\n              type: string\n            lockedBy:\n              description: The user this app is currently being built by.\n              type: object\n          required:\n            - _id\n            - name\n            - url\n            - status\n            - createdAt\n            - updatedAt\n            - version\n      required:\n        - data\n    applicationSearch:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                description: The name of the app.\n                type: string\n              url:\n                description: The URL by which the app is accessed, this must be URL encoded.\n                type: string\n              _id:\n                description: The ID of the app.\n                type: string\n              status:\n                description: The status of the app, stating it if is the development or\n                  published version.\n                type: string\n                enum:\n                  - development\n                  - published\n              createdAt:\n                description: States when the app was created, will be constant. Stored in ISO\n                  format.\n                type: string\n              updatedAt:\n                description: States the last time the app was updated - stored in ISO format.\n                type: string\n              version:\n                description: States the version of the Budibase client this app is currently\n                  based on.\n                type: string\n              tenantId:\n                description: In a multi-tenant environment this will state the tenant this app\n                  is within.\n                type: string\n              lockedBy:\n                description: The user this app is currently being built by.\n                type: object\n            required:\n              - _id\n              - name\n              - url\n              - status\n              - createdAt\n              - updatedAt\n              - version\n      required:\n        - data\n    row:\n      description: The row to be created/updated, based on the table schema.\n      type: object\n      additionalProperties:\n        description: Key value properties of any type, depending on the table schema.\n    searchOutput:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          description: An array of rows, these will each contain an _id field which can be\n            used to update or delete them.\n          type: array\n          items:\n            type: object\n        bookmark:\n          description: If pagination in use, this should be provided.\n          oneOf:\n            - type: string\n            - type: integer\n        hasNextPage:\n          description: If pagination in use, this will determine if there is another page\n            to fetch.\n          type: boolean\n    rowOutput:\n      type: object\n      properties:\n        data:\n          description: The row to be created/updated, based on the table schema.\n          type: object\n          additionalProperties:\n            description: Key value properties of any type, depending on the table schema.\n          properties:\n            _id:\n              description: The ID of the row.\n              type: string\n            tableId:\n              description: The ID of the table this row comes from.\n              type: string\n          required:\n            - tableId\n            - _id\n      required:\n        - data\n    table:\n      description: The table to be created/updated.\n      type: object\n      required:\n        - name\n        - schema\n      properties:\n        name:\n          description: The name of the table.\n          type: string\n        primaryDisplay:\n          type: string\n          description: The name of the column which should be used in relationship tags\n            when relating to this table.\n        schema:\n          type: object\n          additionalProperties:\n            oneOf:\n              - type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - link\n                    description: A relationship column.\n                  constraints:\n                    type: object\n                    description: A constraint can be applied to the column which will be validated\n                      against when a row is saved.\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - string\n                          - number\n                          - object\n                          - boolean\n                      presence:\n                        type: boolean\n                        description: Defines whether the column is required or not.\n                  name:\n                    type: string\n                    description: The name of the column.\n                  autocolumn:\n                    type: boolean\n                    description: Defines whether the column is automatically generated.\n                  fieldName:\n                    type: string\n                    description: The name of the column which a relationship column is related to in\n                      another table.\n                  tableId:\n                    type: string\n                    description: The ID of the table which a relationship column is related to.\n                  relationshipType:\n                    type: string\n                    enum:\n                      - one-to-many\n                      - many-to-one\n                      - many-to-many\n                    description: Defines the type of relationship that this column will be used for.\n                  through:\n                    type: string\n                    description: When using a SQL table that contains many to many relationships\n                      this defines the table the relationships are linked\n                      through.\n                  foreignKey:\n                    type: string\n                    description: When using a SQL table that contains a one to many relationship\n                      this defines the foreign key.\n                  throughFrom:\n                    type: string\n                    description: When using a SQL table that utilises a through table, this defines\n                      the primary key in the through table for this table.\n                  throughTo:\n                    type: string\n                    description: When using a SQL table that utilises a through table, this defines\n                      the primary key in the through table for the related\n                      table.\n              - type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - formula\n                    description: A formula column.\n                  constraints:\n                    type: object\n                    description: A constraint can be applied to the column which will be validated\n                      against when a row is saved.\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - string\n                          - number\n                          - object\n                          - boolean\n                      presence:\n                        type: boolean\n                        description: Defines whether the column is required or not.\n                  name:\n                    type: string\n                    description: The name of the column.\n                  autocolumn:\n                    type: boolean\n                    description: Defines whether the column is automatically generated.\n                  formula:\n                    type: string\n                    description: Defines a Handlebars or JavaScript formula to use, note that\n                      Javascript formulas are expected to be provided in the\n                      base64 format.\n                  formulaType:\n                    type: string\n                    enum:\n                      - static\n                      - dynamic\n                    description: Defines whether this is a static or dynamic formula.\n              - type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - string\n                      - longform\n                      - options\n                      - number\n                      - boolean\n                      - array\n                      - datetime\n                      - attachment\n                      - link\n                      - formula\n                      - auto\n                      - json\n                      - internal\n                    description: Defines the type of the column, most explain themselves, a link\n                      column is a relationship.\n                  constraints:\n                    type: object\n                    description: A constraint can be applied to the column which will be validated\n                      against when a row is saved.\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - string\n                          - number\n                          - object\n                          - boolean\n                      presence:\n                        type: boolean\n                        description: Defines whether the column is required or not.\n                  name:\n                    type: string\n                    description: The name of the column.\n                  autocolumn:\n                    type: boolean\n                    description: Defines whether the column is automatically generated.\n    tableOutput:\n      type: object\n      properties:\n        data:\n          description: The table to be created/updated.\n          type: object\n          required:\n            - name\n            - schema\n            - _id\n          properties:\n            name:\n              description: The name of the table.\n              type: string\n            primaryDisplay:\n              type: string\n              description: The name of the column which should be used in relationship tags\n                when relating to this table.\n            schema:\n              type: object\n              additionalProperties:\n                oneOf:\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - link\n                        description: A relationship column.\n                      constraints:\n                        type: object\n                        description: A constraint can be applied to the column which will be validated\n                          against when a row is saved.\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - string\n                              - number\n                              - object\n                              - boolean\n                          presence:\n                            type: boolean\n                            description: Defines whether the column is required or not.\n                      name:\n                        type: string\n                        description: The name of the column.\n                      autocolumn:\n                        type: boolean\n                        description: Defines whether the column is automatically generated.\n                      fieldName:\n                        type: string\n                        description: The name of the column which a relationship column is related to in\n                          another table.\n                      tableId:\n                        type: string\n                        description: The ID of the table which a relationship column is related to.\n                      relationshipType:\n                        type: string\n                        enum:\n                          - one-to-many\n                          - many-to-one\n                          - many-to-many\n                        description: Defines the type of relationship that this column will be used for.\n                      through:\n                        type: string\n                        description: When using a SQL table that contains many to many relationships\n                          this defines the table the relationships are linked\n                          through.\n                      foreignKey:\n                        type: string\n                        description: When using a SQL table that contains a one to many relationship\n                          this defines the foreign key.\n                      throughFrom:\n                        type: string\n                        description: When using a SQL table that utilises a through table, this defines\n                          the primary key in the through table for this table.\n                      throughTo:\n                        type: string\n                        description: When using a SQL table that utilises a through table, this defines\n                          the primary key in the through table for the related\n                          table.\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - formula\n                        description: A formula column.\n                      constraints:\n                        type: object\n                        description: A constraint can be applied to the column which will be validated\n                          against when a row is saved.\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - string\n                              - number\n                              - object\n                              - boolean\n                          presence:\n                            type: boolean\n                            description: Defines whether the column is required or not.\n                      name:\n                        type: string\n                        description: The name of the column.\n                      autocolumn:\n                        type: boolean\n                        description: Defines whether the column is automatically generated.\n                      formula:\n                        type: string\n                        description: Defines a Handlebars or JavaScript formula to use, note that\n                          Javascript formulas are expected to be provided in the\n                          base64 format.\n                      formulaType:\n                        type: string\n                        enum:\n                          - static\n                          - dynamic\n                        description: Defines whether this is a static or dynamic formula.\n                  - type: object\n                    properties:\n                      type:\n                        type: string\n                        enum:\n                          - string\n                          - longform\n                          - options\n                          - number\n                          - boolean\n                          - array\n                          - datetime\n                          - attachment\n                          - link\n                          - formula\n                          - auto\n                          - json\n                          - internal\n                        description: Defines the type of the column, most explain themselves, a link\n                          column is a relationship.\n                      constraints:\n                        type: object\n                        description: A constraint can be applied to the column which will be validated\n                          against when a row is saved.\n                        properties:\n                          type:\n                            type: string\n                            enum:\n                              - string\n                              - number\n                              - object\n                              - boolean\n                          presence:\n                            type: boolean\n                            description: Defines whether the column is required or not.\n                      name:\n                        type: string\n                        description: The name of the column.\n                      autocolumn:\n                        type: boolean\n                        description: Defines whether the column is automatically generated.\n            _id:\n              description: The ID of the table.\n              type: string\n      required:\n        - data\n    tableSearch:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            description: The table to be created/updated.\n            type: object\n            required:\n              - name\n              - schema\n              - _id\n            properties:\n              name:\n                description: The name of the table.\n                type: string\n              primaryDisplay:\n                type: string\n                description: The name of the column which should be used in relationship tags\n                  when relating to this table.\n              schema:\n                type: object\n                additionalProperties:\n                  oneOf:\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - link\n                          description: A relationship column.\n                        constraints:\n                          type: object\n                          description: A constraint can be applied to the column which will be validated\n                            against when a row is saved.\n                          properties:\n                            type:\n                              type: string\n                              enum:\n                                - string\n                                - number\n                                - object\n                                - boolean\n                            presence:\n                              type: boolean\n                              description: Defines whether the column is required or not.\n                        name:\n                          type: string\n                          description: The name of the column.\n                        autocolumn:\n                          type: boolean\n                          description: Defines whether the column is automatically generated.\n                        fieldName:\n                          type: string\n                          description: The name of the column which a relationship column is related to in\n                            another table.\n                        tableId:\n                          type: string\n                          description: The ID of the table which a relationship column is related to.\n                        relationshipType:\n                          type: string\n                          enum:\n                            - one-to-many\n                            - many-to-one\n                            - many-to-many\n                          description: Defines the type of relationship that this column will be used for.\n                        through:\n                          type: string\n                          description: When using a SQL table that contains many to many relationships\n                            this defines the table the relationships are linked\n                            through.\n                        foreignKey:\n                          type: string\n                          description: When using a SQL table that contains a one to many relationship\n                            this defines the foreign key.\n                        throughFrom:\n                          type: string\n                          description: When using a SQL table that utilises a through table, this defines\n                            the primary key in the through table for this table.\n                        throughTo:\n                          type: string\n                          description: When using a SQL table that utilises a through table, this defines\n                            the primary key in the through table for the related\n                            table.\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - formula\n                          description: A formula column.\n                        constraints:\n                          type: object\n                          description: A constraint can be applied to the column which will be validated\n                            against when a row is saved.\n                          properties:\n                            type:\n                              type: string\n                              enum:\n                                - string\n                                - number\n                                - object\n                                - boolean\n                            presence:\n                              type: boolean\n                              description: Defines whether the column is required or not.\n                        name:\n                          type: string\n                          description: The name of the column.\n                        autocolumn:\n                          type: boolean\n                          description: Defines whether the column is automatically generated.\n                        formula:\n                          type: string\n                          description: Defines a Handlebars or JavaScript formula to use, note that\n                            Javascript formulas are expected to be provided in\n                            the base64 format.\n                        formulaType:\n                          type: string\n                          enum:\n                            - static\n                            - dynamic\n                          description: Defines whether this is a static or dynamic formula.\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - string\n                            - longform\n                            - options\n                            - number\n                            - boolean\n                            - array\n                            - datetime\n                            - attachment\n                            - link\n                            - formula\n                            - auto\n                            - json\n                            - internal\n                          description: Defines the type of the column, most explain themselves, a link\n                            column is a relationship.\n                        constraints:\n                          type: object\n                          description: A constraint can be applied to the column which will be validated\n                            against when a row is saved.\n                          properties:\n                            type:\n                              type: string\n                              enum:\n                                - string\n                                - number\n                                - object\n                                - boolean\n                            presence:\n                              type: boolean\n                              description: Defines whether the column is required or not.\n                        name:\n                          type: string\n                          description: The name of the column.\n                        autocolumn:\n                          type: boolean\n                          description: Defines whether the column is automatically generated.\n              _id:\n                description: The ID of the table.\n                type: string\n      required:\n        - data\n    executeQuery:\n      description: The parameters required for executing a query.\n      type: object\n      properties:\n        parameters:\n          type: object\n          description: This contains the required parameters for the query, this depends\n            on query type, setup and bindings.\n          additionalProperties:\n            description: Key value properties of any type, depending on the query output\n              schema.\n        pagination:\n          type: object\n          description: For supported query types (currently on REST) pagination can be\n            performed using these properties.\n          properties:\n            page:\n              type: string\n              description: The page which has been returned from a previous query.\n            limit:\n              type: number\n              description: The number of rows to return per page.\n    executeQueryOutput:\n      type: object\n      properties:\n        data:\n          description: The data response from the query.\n          type: array\n          items:\n            type: object\n        extra:\n          description: Extra information that is not part of the main data, e.g. headers.\n          type: object\n          properties:\n            headers:\n              description: If carrying out a REST request, this will contain the response\n                headers.\n              type: object\n            raw:\n              description: The raw query response, as a string.\n              type: string\n        pagination:\n          description: If pagination is supported, this will contain the bookmark/anchor\n            information for it.\n          type: object\n      required:\n        - data\n    query:\n      type: object\n      properties:\n        _id:\n          description: The ID of the query.\n          type: string\n        datasourceId:\n          description: The ID of the data source the query belongs to.\n          type: string\n        parameters:\n          description: The bindings which are required to perform this query.\n          type: array\n          items:\n            type: string\n        fields:\n          description: The fields that are used to perform this query, e.g. the sql\n            statement\n          type: object\n        queryVerb:\n          description: The verb that describes this query.\n          enum:\n            - create\n            - read\n            - update\n            - delete\n        name:\n          description: The name of the query.\n          type: string\n        schema:\n          description: The schema of the data returned when the query is executed.\n          type: object\n        transformer:\n          description: The JavaScript transformer function, applied after the query\n            responds with data.\n          type: string\n        readable:\n          description: Whether the query has readable data.\n          type: boolean\n      required:\n        - name\n        - schema\n        - _id\n    querySearch:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              _id:\n                description: The ID of the query.\n                type: string\n              datasourceId:\n                description: The ID of the data source the query belongs to.\n                type: string\n              parameters:\n                description: The bindings which are required to perform this query.\n                type: array\n                items:\n                  type: string\n              fields:\n                description: The fields that are used to perform this query, e.g. the sql\n                  statement\n                type: object\n              queryVerb:\n                description: The verb that describes this query.\n                enum:\n                  - create\n                  - read\n                  - update\n                  - delete\n              name:\n                description: The name of the query.\n                type: string\n              schema:\n                description: The schema of the data returned when the query is executed.\n                type: object\n              transformer:\n                description: The JavaScript transformer function, applied after the query\n                  responds with data.\n                type: string\n              readable:\n                description: Whether the query has readable data.\n                type: boolean\n            required:\n              - name\n              - schema\n              - _id\n      required:\n        - data\n    user:\n      type: object\n      properties:\n        email:\n          description: The email address of the user, this must be unique.\n          type: string\n        password:\n          description: The password of the user if using password based login - this will\n            never be returned. This can be left out of subsequent requests\n            (updates) and will be enriched back into the user structure.\n          type: string\n        status:\n          description: The status of the user, if they are active.\n          type: string\n          enum:\n            - active\n        firstName:\n          description: The first name of the user\n          type: string\n        lastName:\n          description: The last name of the user\n          type: string\n        forceResetPassword:\n          description: If set to true forces the user to reset their password on first\n            login.\n          type: boolean\n        builder:\n          description: Describes if the user is a builder user or not.\n          type: object\n          properties:\n            global:\n              description: If set to true the user will be able to build any app in the\n                system.\n              type: boolean\n        admin:\n          description: Describes if the user is an admin user or not.\n          type: object\n          properties:\n            global:\n              description: If set to true the user will be able to administrate the system.\n              type: boolean\n        roles:\n          description: Contains the roles of the user per app (assuming they are not a\n            builder user).\n          type: object\n          additionalProperties:\n            type: string\n            description: A map of app ID (production app ID, minus the _dev component) to a\n              role ID, e.g. ADMIN.\n      required:\n        - email\n        - roles\n    userOutput:\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            email:\n              description: The email address of the user, this must be unique.\n              type: string\n            password:\n              description: The password of the user if using password based login - this will\n                never be returned. This can be left out of subsequent requests\n                (updates) and will be enriched back into the user structure.\n              type: string\n            status:\n              description: The status of the user, if they are active.\n              type: string\n              enum:\n                - active\n            firstName:\n              description: The first name of the user\n              type: string\n            lastName:\n              description: The last name of the user\n              type: string\n            forceResetPassword:\n              description: If set to true forces the user to reset their password on first\n                login.\n              type: boolean\n            builder:\n              description: Describes if the user is a builder user or not.\n              type: object\n              properties:\n                global:\n                  description: If set to true the user will be able to build any app in the\n                    system.\n                  type: boolean\n            admin:\n              description: Describes if the user is an admin user or not.\n              type: object\n              properties:\n                global:\n                  description: If set to true the user will be able to administrate the system.\n                  type: boolean\n            roles:\n              description: Contains the roles of the user per app (assuming they are not a\n                builder user).\n              type: object\n              additionalProperties:\n                type: string\n                description: A map of app ID (production app ID, minus the _dev component) to a\n                  role ID, e.g. ADMIN.\n            _id:\n              description: The ID of the user.\n              type: string\n          required:\n            - email\n            - roles\n            - _id\n      required:\n        - data\n    userSearch:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              email:\n                description: The email address of the user, this must be unique.\n                type: string\n              password:\n                description: The password of the user if using password based login - this will\n                  never be returned. This can be left out of subsequent requests\n                  (updates) and will be enriched back into the user structure.\n                type: string\n              status:\n                description: The status of the user, if they are active.\n                type: string\n                enum:\n                  - active\n              firstName:\n                description: The first name of the user\n                type: string\n              lastName:\n                description: The last name of the user\n                type: string\n              forceResetPassword:\n                description: If set to true forces the user to reset their password on first\n                  login.\n                type: boolean\n              builder:\n                description: Describes if the user is a builder user or not.\n                type: object\n                properties:\n                  global:\n                    description: If set to true the user will be able to build any app in the\n                      system.\n                    type: boolean\n              admin:\n                description: Describes if the user is an admin user or not.\n                type: object\n                properties:\n                  global:\n                    description: If set to true the user will be able to administrate the system.\n                    type: boolean\n              roles:\n                description: Contains the roles of the user per app (assuming they are not a\n                  builder user).\n                type: object\n                additionalProperties:\n                  type: string\n                  description: A map of app ID (production app ID, minus the _dev component) to a\n                    role ID, e.g. ADMIN.\n              _id:\n                description: The ID of the user.\n                type: string\n            required:\n              - email\n              - roles\n              - _id\n      required:\n        - data\n    nameSearch:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name to be used when searching - this will be used in a case\n            insensitive starts with match.\n      required:\n        - name\nsecurity:\n  - ApiKeyAuth: []\npaths:\n  /applications:\n    post:\n      summary: Create an application\n      tags:\n        - applications\n      parameters:\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/application\"\n      responses:\n        \"200\":\n          description: Returns the created application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/applicationOutput\"\n              examples:\n                application:\n                  $ref: \"#/components/examples/application\"\n  \"/applications/{appId}\":\n    put:\n      summary: Update an application\n      tags:\n        - applications\n      parameters:\n        - $ref: \"#/components/parameters/appIdUrl\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/application\"\n      responses:\n        \"200\":\n          description: Returns the updated application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/applicationOutput\"\n              examples:\n                application:\n                  $ref: \"#/components/examples/application\"\n    delete:\n      summary: Delete an application\n      tags:\n        - applications\n      parameters:\n        - $ref: \"#/components/parameters/appIdUrl\"\n      responses:\n        \"200\":\n          description: Returns the deleted application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/applicationOutput\"\n              examples:\n                application:\n                  $ref: \"#/components/examples/application\"\n    get:\n      summary: Retrieve an application\n      tags:\n        - applications\n      parameters:\n        - $ref: \"#/components/parameters/appIdUrl\"\n      responses:\n        \"200\":\n          description: Returns the retrieved application.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/applicationOutput\"\n              examples:\n                application:\n                  $ref: \"#/components/examples/application\"\n  /applications/search:\n    post:\n      summary: Search for applications\n      description: Based on application properties (currently only name) search for\n        applications.\n      tags:\n        - applications\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/nameSearch\"\n      responses:\n        \"200\":\n          description: Returns the applications that were found based on the search\n            parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/applicationSearch\"\n              examples:\n                applications:\n                  $ref: \"#/components/examples/applications\"\n  \"/queries/{queryId}\":\n    post:\n      summary: Execute a query\n      description: Queries which have been created within a Budibase app can be\n        executed using this,\n      tags:\n        - queries\n      parameters:\n        - $ref: \"#/components/parameters/queryId\"\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/executeQuery\"\n      responses:\n        \"200\":\n          description: Returns the result of the query execution.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/executeQueryOutput\"\n              examples:\n                REST:\n                  $ref: \"#/components/examples/restResponse\"\n                SQL:\n                  $ref: \"#/components/examples/sqlResponse\"\n  /queries/search:\n    post:\n      summary: Search for queries\n      description: Based on query properties (currently only name) search for queries.\n      tags:\n        - queries\n      parameters:\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/nameSearch\"\n      responses:\n        \"200\":\n          description: Returns the queries found based on the search parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/querySearch\"\n              examples:\n                queries:\n                  $ref: \"#/components/examples/queries\"\n  \"/tables/{tableId}/rows\":\n    post:\n      summary: Create a row\n      description: Creates a row within the specified table.\n      tags:\n        - rows\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/row\"\n            examples:\n              row:\n                $ref: \"#/components/examples/inputRow\"\n      responses:\n        \"200\":\n          description: Returns the created row, including the ID which has been generated\n            for it. This can be found in the Budibase portal, viewed under the\n            developer information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rowOutput\"\n              examples:\n                row:\n                  $ref: \"#/components/examples/row\"\n  \"/tables/{tableId}/rows/{rowId}\":\n    put:\n      summary: Update a row\n      description: Updates a row within the specified table.\n      tags:\n        - rows\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/rowId\"\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/row\"\n            examples:\n              row:\n                $ref: \"#/components/examples/inputRow\"\n      responses:\n        \"200\":\n          description: Returns the created row, including the ID which has been generated\n            for it.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rowOutput\"\n              examples:\n                row:\n                  $ref: \"#/components/examples/row\"\n    delete:\n      summary: Delete a row\n      description: Deletes a row within the specified table.\n      tags:\n        - rows\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/rowId\"\n        - $ref: \"#/components/parameters/appId\"\n      responses:\n        \"200\":\n          description: Returns the deleted row, including the ID which has been generated\n            for it.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rowOutput\"\n              examples:\n                row:\n                  $ref: \"#/components/examples/row\"\n    get:\n      summary: Retrieve a row\n      description: This gets a single row, it will be enriched with the full related\n        rows, rather than the squashed \"primaryDisplay\" format returned by the\n        search endpoint.\n      tags:\n        - rows\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/rowId\"\n        - $ref: \"#/components/parameters/appId\"\n      responses:\n        \"200\":\n          description: Returns the retrieved row.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rowOutput\"\n              examples:\n                enrichedRow:\n                  $ref: \"#/components/examples/enrichedRow\"\n  \"/tables/{tableId}/rows/search\":\n    post:\n      summary: Search for rows\n      tags:\n        - rows\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - query\n              properties:\n                query:\n                  type: object\n                  properties:\n                    string:\n                      type: object\n                      example:\n                        columnName1: value\n                        columnName2: value\n                      description: A map of field name to the string to search for, this will look for\n                        rows that have a value starting with the string value.\n                      additionalProperties:\n                        type: string\n                        description: The value to search for in the column.\n                    fuzzy:\n                      type: object\n                      description: A fuzzy search, only supported by internal tables.\n                    range:\n                      type: object\n                      description: Searches within a range, the format of this must be columnName -\u003e\n                        [low, high].\n                      example:\n                        columnName1:\n                          - 10\n                          - 20\n                    equal:\n                      type: object\n                      description: Searches for rows that have a column value that is exactly the\n                        value set.\n                    notEqual:\n                      type: object\n                      description: Searches for any row which does not contain the specified column\n                        value.\n                    empty:\n                      type: object\n                      description: Searches for rows which do not contain the specified column. The\n                        object should simply contain keys of the column names,\n                        these can map to any value.\n                      example:\n                        columnName1: \"\"\n                    notEmpty:\n                      type: object\n                      description: Searches for rows which have the specified column.\n                    oneOf:\n                      type: object\n                      description: Searches for rows which have a column value that is any of the\n                        specified values. The format of this must be columnName\n                        -\u003e [value1, value2].\n                paginate:\n                  type: boolean\n                  description: Enables pagination, by default this is disabled.\n                bookmark:\n                  oneOf:\n                    - type: string\n                    - type: integer\n                  description: If retrieving another page, the bookmark from the previous request\n                    must be supplied.\n                limit:\n                  type: integer\n                  description: The maximum number of rows to return, useful when paginating, for\n                    internal tables this will be limited to 1000, for SQL tables\n                    it will be 5000.\n                sort:\n                  type: object\n                  description: A set of parameters describing the sort behaviour of the search.\n                  properties:\n                    order:\n                      type: string\n                      enum:\n                        - ascending\n                        - descending\n                      description: The order of the sort, by default this is ascending.\n                    column:\n                      type: string\n                      description: The name of the column by which the rows will be sorted.\n                    type:\n                      type: string\n                      enum:\n                        - string\n                        - number\n                      description: Defines whether the column should be treated as a string or as\n                        numbers when sorting.\n      responses:\n        \"200\":\n          description: The response will contain an array of rows that match the search\n            parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/searchOutput\"\n              examples:\n                search:\n                  $ref: \"#/components/examples/rows\"\n  /tables:\n    post:\n      summary: Create a table\n      description: Create a table, this could be internal or external.\n      tags:\n        - tables\n      parameters:\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/table\"\n            examples:\n              table:\n                $ref: \"#/components/examples/table\"\n      responses:\n        \"200\":\n          description: Returns the created table, including the ID which has been\n            generated for it. This can be internal or external data sources.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tableOutput\"\n              examples:\n                table:\n                  $ref: \"#/components/examples/table\"\n  \"/tables/{tableId}\":\n    put:\n      summary: Update a table\n      description: Update a table, this could be internal or external.\n      tags:\n        - tables\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/table\"\n            examples:\n              table:\n                $ref: \"#/components/examples/table\"\n      responses:\n        \"200\":\n          description: Returns the updated table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tableOutput\"\n              examples:\n                table:\n                  $ref: \"#/components/examples/table\"\n    delete:\n      summary: Delete a table\n      description: Delete a table, this could be internal or external.\n      tags:\n        - tables\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/appId\"\n      responses:\n        \"200\":\n          description: Returns the deleted table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tableOutput\"\n              examples:\n                table:\n                  $ref: \"#/components/examples/table\"\n    get:\n      summary: Retrieve a table\n      description: Lookup a table, this could be internal or external.\n      tags:\n        - tables\n      parameters:\n        - $ref: \"#/components/parameters/tableId\"\n        - $ref: \"#/components/parameters/appId\"\n      responses:\n        \"200\":\n          description: Returns the retrieved table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tableOutput\"\n              examples:\n                table:\n                  $ref: \"#/components/examples/table\"\n  /tables/search:\n    post:\n      summary: Search for tables\n      description: Based on table properties (currently only name) search for tables.\n        This could be an internal or an external table.\n      tags:\n        - tables\n      parameters:\n        - $ref: \"#/components/parameters/appId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/nameSearch\"\n      responses:\n        \"200\":\n          description: Returns the found tables, based on the search parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tableSearch\"\n              examples:\n                tables:\n                  $ref: \"#/components/examples/tables\"\n  /users:\n    post:\n      summary: Create a user\n      tags:\n        - users\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/user\"\n      responses:\n        \"200\":\n          description: Returns the created user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userOutput\"\n              examples:\n                user:\n                  $ref: \"#/components/examples/user\"\n  \"/users/{userId}\":\n    put:\n      summary: Update a user\n      tags:\n        - users\n      parameters:\n        - $ref: \"#/components/parameters/userId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/user\"\n      responses:\n        \"200\":\n          description: Returns the updated user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userOutput\"\n              examples:\n                user:\n                  $ref: \"#/components/examples/user\"\n    delete:\n      summary: Delete a user\n      tags:\n        - users\n      parameters:\n        - $ref: \"#/components/parameters/userId\"\n      responses:\n        \"200\":\n          description: Returns the deleted user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userOutput\"\n              examples:\n                user:\n                  $ref: \"#/components/examples/user\"\n    get:\n      summary: Retrieve a user\n      tags:\n        - users\n      parameters:\n        - $ref: \"#/components/parameters/userId\"\n      responses:\n        \"200\":\n          description: Returns the retrieved user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userOutput\"\n              examples:\n                user:\n                  $ref: \"#/components/examples/user\"\n  /users/search:\n    post:\n      summary: Search for users\n      description: Based on user properties (currently only name) search for users.\n      tags:\n        - users\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/nameSearch\"\n      responses:\n        \"200\":\n          description: Returns the found users based on search parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/userSearch\"\n              examples:\n                users:\n                  $ref: \"#/components/examples/users\"\ntags: []\n",
			"canonicalURL": "/github.com/Budibase/budibase@00888d4572da3a8ebdf824a9e8e9c1d5a1579611/-/blob/packages/server/specs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Budibase/budibase/blob/00888d4572da3a8ebdf824a9e8e9c1d5a1579611/packages/server/specs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}