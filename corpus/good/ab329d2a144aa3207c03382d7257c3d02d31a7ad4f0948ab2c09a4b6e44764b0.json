{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kekskurse/go-mail-admin"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "docs/openapi.yml",
			"byteSize": 12281,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.3\n  title: go-mail-admin\n  description: API Documentation for go-mail-admin.\npaths:\n  /api/v1/domain:\n    get:\n      tags:\n      - Domain\n      summary: Return all Domains\n      description: Return all Domains           \n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Domain'\n    post:\n      tags:\n      - Domain\n      summary: Add a new Domain\n      description: Add a new Domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: string\n                  example: example.com\n      responses:\n        '200':\n          description: \"Domain created\"\n    delete:\n      tags:\n      - Domain\n      description: Remove a Domain\n      summary: Remove a Domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: string\n                  example: example.com\n      responses:\n        '200':\n          description: \"Domain removed\"\n  /api/v1/alias:\n    get:\n      tags:\n      - Alias\n      description: Return all Aliases  \n      summary: Return all Aliases\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Alias'\n    post:\n      tags:\n      - Alias\n      description: Create a new Alias\n      summary: Create a new Alias\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                source_username:\n                  type: string\n                  example: mail\n                source_domain:\n                  type: string\n                  example: example.com\n                destination_username:\n                  type: string\n                  example: something\n                destination_domain:\n                  type: string\n                  example: example.de\n                enabled:\n                  type: boolean\n                  example: true\n      responses:\n        '200':\n          description: Successful response\n    put:\n      tags:\n      - Alias\n      description: Update a Alias\n      summary: Update a Alias\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1 \n                  description: ID of the Alias to update\n                source_username:\n                  type: string\n                  example: mail\n                source_domain:\n                  type: string\n                  example: example.com\n                destination_username:\n                  type: string\n                  example: something\n                destination_domain:\n                  type: string\n                  example: example.de\n                enabled:\n                  type: boolean\n                  example: true\n      responses:\n        '200':\n          description: Successful response\n    delete:\n      tags:\n      - Alias\n      description: Remove a Alias\n      summary: Remove a Alias\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: integer\n                  example: 1\n      responses:\n        '200':\n          description: \"Alias removed\"\n  /api/v1/account:\n    get:\n      tags:\n      - Account\n      description: Return all Accounts           \n      summary: Return all Accounts \n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n    post:\n      tags:\n      - Account\n      description: Create a new Account\n      summary: Create a new Account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  example: admin\n                domain:\n                  type: string\n                  example: example.com\n                password:\n                  type: string\n                quota:\n                  type: integer\n                  example: 0\n                enabled:\n                  type: boolean\n                  example: true\n                sendonly:\n                  type: boolean\n                  example: false\n      responses:\n        '200':\n          description: Successful response\n    delete:\n      tags:\n      - Account\n      description: Remove a Account\n      summary: Remove a Account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: integer\n                  example: 1\n      responses:\n        '200':\n          description: \"Alias removed\"\n    put:\n      tags:\n      - Account\n      description: Update a Account\n      summary: Update a Account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1 \n                  description: ID of the Alias to update\n                quota:\n                  type: integer\n                  example: 0\n                enabled:\n                  type: boolean\n                  example: true\n                sendonly:\n                  type: boolean\n                  example: false\n      responses:\n        '200':\n          description: Successful response\n  /api/v1/account/password:\n    put:\n      tags:\n      - Account\n      description: Update a Account Password\n      summary: Update a Account Password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1 \n                  description: ID of the Alias to update\n                password:\n                  type: string\n      responses:\n        '200':\n          description: Password changed\n  /api/v1/tlspolicy:\n    get:\n      tags:\n      - TLSPolicy\n      description: Return all TLSPolicies\n      summary: Return all TLSPolicies\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TLSpolicy'\n    post:\n      tags:\n      - TLSPolicy\n      description: Create a new TLSPolicy\n      summary: Create a new TLSPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: string\n                  example: example.com\n                policy:\n                  type: string\n                  example: \"dane\"\n                params:\n                  type: string\n                  example: \"match=*.example.com\"\n      responses:\n        '200':\n          description: Successful response\n    delete:\n      tags:\n      - TLSPolicy\n      description: Remove a Policy\n      summary: Remove a Policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domain:\n                  type: integer\n                  example: 1\n      responses:\n        '200':\n          description: \"Policy removed\"\n    put:\n      tags:\n      - TLSPolicy\n      description: Update a Policy\n      summary: Update a Policy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1 \n                  description: ID of the Policy to update\n                domain:\n                  type: string\n                  example: example.com\n                policy:\n                  type: string\n                  example: \"dane\"\n                params:\n                  type: string\n                  example: \"match=*.example.com\"\n      responses:\n        '200':\n          description: Successful response\n  /public/v1/login/username:\n    post:\n      tags:\n      - Auth\n      description: Login and get a Token\n      summary: Login and get a Token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                  example: test\n                  description: Your username\n                password:\n                  type: string\n                  example: test\n                  description: Your Password\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Auth'\n  /public/v1/features:\n    get:\n      tags:\n      - Config\n      description: Return FEature Toggles   \n      summary: Return FEature Toggles\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Features'\n                  \ncomponents:\n  schemas:\n    Domain:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        domain:\n          type: string\n          example: example.com\n    Account:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        username:\n          type: string\n          example: admin\n        domain:\n          type: string\n          example: example.de\n        quota:\n          type: integer\n          example: 0\n        enabled:\n          type: boolean\n          example: true\n        sendonly:\n          type: boolean\n          example: false\n        print:\n          type: string\n          example: admin@example.com\n          description: Just to print in gui\n    Alias:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        source_username:\n          type: string\n          example: mail\n        source_domain:\n          type: string\n          example: example.com\n        destination_username:\n          type: string\n          example: something\n        destination_domain:\n          type: string\n          example: example.com\n        enabled:\n          type: boolean\n          example: true\n        print_source:\n          type: string\n          example: \"mail@example.com\"\n        print_destination:\n          type: string\n          example: \"something@example.com\"\n    Features:\n      type: object\n      properties:\n        catchall:\n          type: boolean\n          example: false\n          description: Catchall can be add to the Database with value NULL\n    Auth:\n      type: object\n      properties:\n        login:\n          type: boolean\n          example: true\n          description: Login successfull or not\n        token:\n          type: string\n          example: XVlBzgbaiCMRAjWwhTHctcuA\n          description: Token to send as X-APITOKEN with each request, valide for 15 minutes\n    TLSpolicy:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        domain:\n          type: string\n          example: example.com\n        policy:\n          type: string\n          example: dane\n        params:\n          type: string\n          example: \"match=*.example.com\"",
			"canonicalURL": "/github.com/kekskurse/go-mail-admin@3aa428043467cf9a33bcfe7a8076d69c00462809/-/blob/docs/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/kekskurse/go-mail-admin/blob/3aa428043467cf9a33bcfe7a8076d69c00462809/docs/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}