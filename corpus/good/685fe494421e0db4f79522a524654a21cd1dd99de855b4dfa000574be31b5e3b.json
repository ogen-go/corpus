{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LogoFX/Samples.AspNetCore.v6.OpenAPI"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/api.yaml",
			"byteSize": 3900,
			"content": "openapi: 3.1.0\ninfo:\n  title: Samples.AspNetCore.v6.Facade\n  version: '1.0'\n  description: The sample API definition\n  contact:\n    name: David Kossoglyad\n    email: david@logoui.co.il\ntags:\n  - name: WeatherForecast\n    description: TBD\npaths:\n  /WeatherForecast:\n    get:\n      tags:\n        - WeatherForecast\n      operationId: GetWeatherForecast\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WeatherForecast'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WeatherForecast'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/WeatherForecast'\n      summary: The Weather Forecast\n      description: Represents the short weather update message\n    post:\n      description: Creates new forecast record\n      tags:\n        - WeatherForecast\n      operationId: post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n        description: ''\n      responses:\n        '201':\n          description: Success\n    put:\n      description: Replaces the whole forecast message\n      tags:\n        - WeatherForecast\n      operationId: PutWeatherForecast\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/WeatherForecast'\n      responses:\n        '200':\n          description: Success\n  '/WeatherForecast/{date}':\n    get:\n      description: Searches for the forecast on a date\n      tags:\n        - WeatherForecast\n      operationId: GetWeatherForecastByDate\n      parameters:\n        - name: date\n          in: path\n          required: true\n          schema:\n            type: string\n            format: date\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/WeatherForecast'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WeatherForecast'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/WeatherForecast'\n      summary: Searches for the forecast on a date\n    delete:\n      tags:\n        - WeatherForecast\n      summary: Delete the whole forecast message\n      operationId: delete\n      responses:\n        '200':\n          description: OK\n        '204':\n          description: No Content\n      description: Deletes the forecast.\n    parameters:\n      - schema:\n          type: string\n          format: date\n        name: date\n        in: path\n        required: true\ncomponents:\n  schemas:\n    WeatherForecast:\n      type: object\n      additionalProperties: false\n      properties:\n        date:\n          type: string\n          format: date\n        temperatureC:\n          type: integer\n          format: int32\n          minimum: -100\n          maximum: 100\n        temperatureF:\n          type: integer\n          format: int32\n        summary:\n          type: string\n          nullable: true\n          maxLength: 256\n      required:\n        - date\n        - temperatureC\nservers:\n  - url: 'http://127.0.0.1:3000'\n    description: Local host\n",
			"canonicalURL": "/github.com/LogoFX/Samples.AspNetCore.v6.OpenAPI@a0a6fce08cfe3ad0c071c550f41d18885c10a125/-/blob/src/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/LogoFX/Samples.AspNetCore.v6.OpenAPI/blob/a0a6fce08cfe3ad0c071c550f41d18885c10a125/src/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}