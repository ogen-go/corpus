{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "samples/openapi3/server/petstore/spring-boot-oneof/src/main/resources/openapi.yaml",
			"byteSize": 5789,
			"content": "openapi: 3.0.1\ninfo:\n  description: |\n    This tests for a oneOf interface representation\n  title: ByRefOrValue\n  version: 0.0.1\nservers:\n- url: http://localhost:8080\ntags:\n- name: Foo\n- name: Bar\npaths:\n  /foo:\n    get:\n      operationId: getAllFoos\n      responses:\n        \"200\":\n          content:\n            application/json;charset=utf-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FooRefOrValue'\n                type: array\n          description: Success\n      summary: GET all Foos\n      tags:\n      - Foo\n      x-accepts: application/json;charset=utf-8\n      x-tags:\n      - tag: Foo\n    post:\n      operationId: createFoo\n      requestBody:\n        $ref: '#/components/requestBodies/Foo'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FooRefOrValue'\n          description: Error\n      summary: Create a Foo\n      tags:\n      - Foo\n      x-content-type: application/json;charset=utf-8\n      x-accepts: application/json\n      x-tags:\n      - tag: Foo\n  /bar:\n    post:\n      operationId: createBar\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Bar_Create'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Bar'\n          description: Bar created\n      summary: Create a Bar\n      tags:\n      - Bar\n      x-content-type: application/json\n      x-accepts: application/json\n      x-tags:\n      - tag: Bar\ncomponents:\n  requestBodies:\n    Foo:\n      content:\n        application/json;charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/Foo'\n      description: The Foo to be created\n  responses:\n    \"204\":\n      content: {}\n      description: Deleted\n    \"201Foo\":\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FooRefOrValue'\n      description: Error\n    \"200FooArray\":\n      content:\n        application/json;charset=utf-8:\n          schema:\n            items:\n              $ref: '#/components/schemas/FooRefOrValue'\n            type: array\n      description: Success\n  schemas:\n    Addressable:\n      description: Base schema for adressable entities\n      properties:\n        href:\n          description: Hyperlink reference\n          type: string\n        id:\n          description: unique identifier\n          type: string\n      type: object\n    Extensible:\n      properties:\n        '@schemaLocation':\n          description: A URI to a JSON-Schema file that defines additional attributes\n            and relationships\n          type: string\n        '@baseType':\n          description: \"When sub-classing, this defines the super-class\"\n          type: string\n        '@type':\n          description: \"When sub-classing, this defines the sub-class Extensible name\"\n          type: string\n      required:\n      - '@type'\n      type: object\n    Entity:\n      allOf:\n      - $ref: '#/components/schemas/Addressable'\n      - $ref: '#/components/schemas/Extensible'\n      discriminator:\n        propertyName: '@type'\n      type: object\n    EntityRef:\n      allOf:\n      - $ref: '#/components/schemas/Addressable'\n      - $ref: '#/components/schemas/Extensible'\n      description: Entity reference schema to be use for all entityRef class.\n      discriminator:\n        propertyName: '@type'\n      properties:\n        name:\n          description: Name of the related entity.\n          type: string\n        '@referredType':\n          description: The actual type of the target instance when needed for disambiguation.\n          type: string\n      type: object\n    FooRefOrValue:\n      discriminator:\n        propertyName: '@type'\n      oneOf:\n      - $ref: '#/components/schemas/Foo'\n      - $ref: '#/components/schemas/FooRef'\n      type: object\n      x-one-of-name: FooRefOrValue\n    Foo:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      example:\n        fooPropA: fooPropA\n        fooPropB: fooPropB\n      properties:\n        fooPropA:\n          type: string\n        fooPropB:\n          type: string\n      type: object\n    FooRef:\n      allOf:\n      - $ref: '#/components/schemas/EntityRef'\n      properties:\n        foorefPropA:\n          type: string\n      type: object\n    BarRef:\n      allOf:\n      - $ref: '#/components/schemas/EntityRef'\n      type: object\n    Bar_Create:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      properties:\n        barPropA:\n          type: string\n        fooPropB:\n          type: string\n        foo:\n          $ref: '#/components/schemas/FooRefOrValue'\n      type: object\n    Bar:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      example:\n        foo: null\n        id: id\n        fooPropB: fooPropB\n        barPropA: barPropA\n      properties:\n        id:\n          type: string\n        barPropA:\n          type: string\n        fooPropB:\n          type: string\n        foo:\n          $ref: '#/components/schemas/FooRefOrValue'\n      required:\n      - id\n      type: object\n    BarRefOrValue:\n      oneOf:\n      - $ref: '#/components/schemas/Bar'\n      - $ref: '#/components/schemas/BarRef'\n      type: object\n      x-one-of-name: BarRefOrValue\n    Pizza:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      properties:\n        pizzaSize:\n          type: number\n      type: object\n    Pasta:\n      allOf:\n      - $ref: '#/components/schemas/Entity'\n      properties:\n        vendor:\n          type: string\n      type: object\n    PizzaSpeziale:\n      allOf:\n      - $ref: '#/components/schemas/Pizza'\n      properties:\n        toppings:\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/-/blob/samples/openapi3/server/petstore/spring-boot-oneof/src/main/resources/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/3a2bbbb8501f7238dba0dc124234e9e0459cdd9e/samples/openapi3/server/petstore/spring-boot-oneof/src/main/resources/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}