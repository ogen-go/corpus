{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JopiterApp/USP-Restaurant-API"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 11827,
			"content": "openapi: 3.0.0\ninfo:\n  title: USP Restaurants API\n  version: 1.0.0\n  description: \u003e-\n    API definition for USP's restaurants.  This isn't an official resource. It\n    was created by the Jopiter team as a tool to help integration with USP's\n    poor and unopened API. We did a lot of digging on how it works so you don't\n    have to. \u003cbr /\u003e \u003cbr /\u003e The original API was extracted from USP's\n    Restaurant's APP ([Cardápio\n    USP](https://play.google.com/store/apps/details?id=br.usp.cardapio_usp)).\n    \u003cbr /\u003e At the current version, the decompiled `HASH` is\n    `596df9effde6f877717b4e81fdb2ca9f`.  It's used for all authentication within\n    USP's APIs. Whenever (and if) it's changed, this page will be updated\n    accordingly.\n  license:\n    name: Apache-2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0'\nservers:\n  - url: 'https://uspdigital.usp.br/rucard/servicos'\n    variables: {}\n    description: USP Prod. Server\npaths:\n  /restaurants:\n    post:\n      summary: Lists all restaurants\n      requestBody:\n        $ref: '#/components/requestBodies/USPAuthBody'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Restaurant'\n              examples:\n                Example1:\n                  $ref: '#/components/examples/RestaurantExample'\n        '500':\n          description: Error if a bad hash was passed on request\n  '/menu/{restaurant_id}':\n    post:\n      parameters:\n        - in: path\n          name: restaurant_id\n          schema:\n            type: integer\n          required: true\n          description: Numeric ID for a specific restaurant. Can be found in /restaurants\n      summary: Fetch menus by Restaurant ID\n      description: \u003e-\n        The {restaurant_id} can be found in the /restaurants API path, which\n        contains all IDs for all restaurants from each campus.\n      requestBody:\n        $ref: '#/components/requestBodies/USPAuthBody'\n      responses:\n        '200':\n          description: Default response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Menu'\n              examples:\n                Example1:\n                  $ref: '#/components/examples/MenuExample'\n        '500':\n          description: Error if a bad hash was passed on request\ncomponents:\n  schemas:\n    USPAuthForm:\n      type: object\n      properties:\n        hash:\n          type: string\n      required:\n        - hash\n    Restaurant:\n      type: object\n      properties:\n        name:\n          type: string\n        restaurants:\n          type: array\n          items:\n            type: object\n            properties:\n              alias:\n                type: string\n              address:\n                type: string\n              name:\n                type: string\n              phones:\n                type: string\n              id:\n                type: string\n              latitude:\n                type: string\n              longitude:\n                type: string\n              photourl:\n                type: string\n              workinghours:\n                type: object\n                properties:\n                  sunday:\n                    type: object\n                    properties:\n                      lunch:\n                        type: string\n                      dinner:\n                        type: string\n                      breakfast:\n                        type: string\n                  saturday:\n                    type: object\n                    properties:\n                      lunch:\n                        type: string\n                      dinner:\n                        type: string\n                      breakfast:\n                        type: string\n                  weekdays:\n                    type: object\n                    properties:\n                      lunch:\n                        type: string\n                      dinner:\n                        type: string\n                      breakfast:\n                        type: string\n              cashiers:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    address:\n                      type: string\n                    prices:\n                      type: object\n                      properties:\n                        special:\n                          type: object\n                          properties:\n                            lunch:\n                              type: string\n                            dinner:\n                              type: string\n                            breakfast:\n                              type: string\n                        students:\n                          type: object\n                          properties:\n                            lunch:\n                              type: string\n                            dinner:\n                              type: string\n                            breakfast:\n                              type: string\n                        visiting:\n                          type: object\n                          properties:\n                            lunch:\n                              type: string\n                            dinner:\n                              type: string\n                            breakfast:\n                              type: string\n                        employees:\n                          type: object\n                          properties:\n                            lunch:\n                              type: string\n                            dinner:\n                              type: string\n                            breakfast:\n                              type: string\n                    longitude:\n                      type: string\n                    latitude:\n                      type: string\n                    workinghours:\n                      type: string\n              hasCashier:\n                type: boolean\n    Menu:\n      type: object\n      properties:\n        message:\n          type: object\n          properties:\n            message:\n              type: string\n            error:\n              type: boolean\n        meals:\n          type: array\n          items:\n            type: object\n            properties:\n              dinner:\n                type: object\n                properties:\n                  menu:\n                    type: string\n                  calories:\n                    type: string\n                    nullable: true\n              lunch:\n                type: object\n                properties:\n                  menu:\n                    type: string\n                  calories:\n                    type: string\n                    nullable: true\n              date:\n                type: string\n                format: date\n                pattern: '^\\d{2}\\/\\d{2}\\/\\d{4}$'\n        observation:\n          type: object\n          properties:\n            observation:\n              type: string\n  requestBodies:\n    USPAuthBody:\n      description: USP request body for authentication\n      required: true\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            $ref: '#/components/schemas/USPAuthForm'\n  examples:\n    RestaurantExample:\n      summary: Restaurant Example\n      value:\n        name: Cidade Universitária\n        restaurants:\n          - alias: Central\n            address: \u003e-\n              Praça do Relógio Solar, travessa 8, no 300, Campus Butantã, São\n              Paulo - SP\n            name: Central\n            phones: (11) 3091-3318\n            id: '6'\n            latitude: '-23.5602110'\n            longitude: '-46.7218170'\n            photourl: 'https://uspdigital.usp.br/comumwebdev/imagens/cardapio/central.jpg'\n            workinghours:\n              sunday:\n                lunch: ''\n                breakfast: ''\n                dinner: ''\n              saturday:\n                lunch: '11:15 às 14:15'\n                breakfast: '07:30 às 09:00'\n                dinner: ''\n              weekdays:\n                lunch: '11:15 às 14:15'\n                breakfast: '07:00 às 08:30'\n                dinner: '17:30 às 19:45'\n            cashiers:\n              - address: \u003e-\n                  Rua do Anfiteatro, nº 295 - Cidade Universitária - São Paulo -\n                  CEP 05508-060\n                prices:\n                  special:\n                    dinner: '10,00'\n                    lunch: '10,00'\n                    breakfast: ''\n                  students:\n                    dinner: '2,00'\n                    lunch: '2,00'\n                    breakfast: ''\n                  visiting:\n                    dinner: '15,00'\n                    lunch: '15,00'\n                    breakfast: ''\n                  employees:\n                    dinner: '15,00'\n                    lunch: '15,00'\n                    breakfast: ''\n                longitude: '-46.7216980'\n                latitude: '-23.5594340'\n                workinghours: Segunda à Sexta - 7h as 19h45\n            hasCashier: 'false'\n    MenuExample:\n      summary: Menu Example\n      value:\n        message:\n          error: false\n          message: ''\n        meals:\n          - dinner:\n              menu: |-\n                Acompanhamentos: Arroz / Feijão / Arroz Integral\n                Prato principal: Isca de Carne à Moda Chinesa\n                Prato principal Vegetariano: Cuscuz de Lentilha\n                Guarnição: Macarrão Alho e Óleo\n                Saladas: Alface, Tomate, Beterraba Cozida\n                Sobremesa: Laranja / Suco: Maracujá\n              calories: '1056'\n            lunch:\n              menu: |-\n                Acompanhamentos: Arroz / Feijão / Arroz Integral\n                Prato principal: Frango Assado\n                Prato principal Vegetariano: Ovo Frito\n                Guarnição: Polenta\n                Saladas: Alface, Pepino com Cenoura, Soja em Grãos\n                Sobremesa: Laranja / Suco: Maracujá\n              calories: '1219'\n            date: 09/03/2020\n          - dinner:\n              menu: |-\n                Acompanhamentos: Arroz / Feijão / Arroz Integral\n                Prato principal: Hambúrguer Assado\n                Prato principal Vegetariano: Hambúrguer de PTS (Contém Glúten)\n                Guarnição: Cebola Agridoce\n                Saladas: Alface, Pepino, Tomate \n                Sobremesa: Doce de Abobora Industrializado / Suc\n              calories: '895'\n            lunch:\n              menu: |-\n                Acompanhamentos: Arroz / Feijão / Arroz Integral\n                Prato principal: Fricassê de Frango (Contém Lactose)\n                Prato principal Vegetariano: Ovo Cozido\n                Guarnição: Cenoura Sauté\n                Saladas: Alface, Rabanete Agridoce, Abobrinha Cozida\n                Sobremesa: Doce de Abobora Industri\n              calories: '1145'\n            date: 13/03/2020\n          - dinner:\n              menu: ''\n              calories: '0'\n            lunch:\n              menu: |-\n                Acompanhamentos: Arroz / Feijão / Arroz Integral\n                Prato principal: Bisteca Suína\n                Prato principal Vegetariano: Ovo Frito\n                Guarnição: Farofa de Couve\n                Saladas: Alface, Repolho, Berinjela Cozida\n                Sobremesa: Mamão / Suco: Caju\n              calories: '1236'\n            date: 14/03/2020\n          - dinner:\n              menu: ''\n              calories: '0'\n            lunch:\n              menu: ''\n              calories: '0'\n            date: 15/03/2020\n        observation:\n          observation: Cardápio sujeito a alteração sem aviso prévio\n",
			"canonicalURL": "/github.com/JopiterApp/USP-Restaurant-API@1e9863bdf19e5067011c3908a31ff487bfbfc3d7/-/blob/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JopiterApp/USP-Restaurant-API/blob/1e9863bdf19e5067011c3908a31ff487bfbfc3d7/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}