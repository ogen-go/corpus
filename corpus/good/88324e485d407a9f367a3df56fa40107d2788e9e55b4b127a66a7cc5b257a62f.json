{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dabit3/architect-with-react-and-aws-amplify"
		},
		"file": {
			"name": "sam.yaml",
			"size": 0,
			"path": "infra/sam.yaml",
			"byteSize": 9377,
			"content": "AWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: Exported by architect/package@4.0.1 on 2020-11-20T22:46:43.884Z\nResources:\n  HTTP:\n    Type: AWS::Serverless::HttpApi\n    Properties:\n      StageName: $default\n      DefinitionBody:\n        openapi: 3.0.1\n        info:\n          title:\n            Ref: AWS::StackName\n        paths:\n          /:\n            get:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetIndex.Arn}/invocations\n                connectionType: INTERNET\n          /posts:\n            get:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPosts.Arn}/invocations\n                connectionType: INTERNET\n            post:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostPosts.Arn}/invocations\n                connectionType: INTERNET\n          /posts/{postID}:\n            get:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetPostsPostID.Arn}/invocations\n                connectionType: INTERNET\n            delete:\n              x-amazon-apigateway-integration:\n                payloadFormatVersion: '2.0'\n                type: aws_proxy\n                httpMethod: POST\n                uri:\n                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeletePostsPostID.Arn}/invocations\n                connectionType: INTERNET\n  GetIndex:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://react-arc-cfn-deployments-70ddc/6a2d3fa2d320d2f61d892f300d7d00dd\n      Runtime: nodejs12.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: react-arc\n          ARC_HTTP: aws_proxy\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetIndexEvent:\n          Type: HttpApi\n          Properties:\n            Path: /\n            Method: GET\n            ApiId:\n              Ref: HTTP\n  GetPosts:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://react-arc-cfn-deployments-70ddc/c0e95470e42b8db9d96c7e530d05dd2a\n      Runtime: nodejs12.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: react-arc\n          ARC_HTTP: aws_proxy\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetPostsEvent:\n          Type: HttpApi\n          Properties:\n            Path: /posts\n            Method: GET\n            ApiId:\n              Ref: HTTP\n  GetPostsPostID:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://react-arc-cfn-deployments-70ddc/ab4ec9def4fd32eba432f9f79adab24e\n      Runtime: nodejs12.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: react-arc\n          ARC_HTTP: aws_proxy\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        GetPostsPostIDEvent:\n          Type: HttpApi\n          Properties:\n            Path: /posts/{postID}\n            Method: GET\n            ApiId:\n              Ref: HTTP\n  PostPosts:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://react-arc-cfn-deployments-70ddc/2cb28b0dd0dbb6fbef95c9ea7a9f062f\n      Runtime: nodejs12.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: react-arc\n          ARC_HTTP: aws_proxy\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        PostPostsEvent:\n          Type: HttpApi\n          Properties:\n            Path: /posts\n            Method: POST\n            ApiId:\n              Ref: HTTP\n  DeletePostsPostID:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      CodeUri: s3://react-arc-cfn-deployments-70ddc/6a2d3fa2d320d2f61d892f300d7d00dd\n      Runtime: nodejs12.x\n      MemorySize: 1152\n      Timeout: 5\n      Environment:\n        Variables:\n          ARC_ROLE:\n            Ref: Role\n          ARC_CLOUDFORMATION:\n            Ref: AWS::StackName\n          ARC_APP_NAME: react-arc\n          ARC_HTTP: aws_proxy\n          NODE_ENV: staging\n          SESSION_TABLE_NAME: jwe\n      Role:\n        Fn::Sub:\n        - arn:aws:iam::${AWS::AccountId}:role/${roleName}\n        - roleName:\n            Ref: Role\n      Events:\n        DeletePostsPostIDEvent:\n          Type: HttpApi\n          Properties:\n            Path: /posts/{postID}\n            Method: DELETE\n            ApiId:\n              Ref: HTTP\n  PostsTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      KeySchema:\n      - AttributeName: postID\n        KeyType: HASH\n      AttributeDefinitions:\n      - AttributeName: postID\n        AttributeType: S\n      - AttributeName: type\n        AttributeType: S\n      BillingMode: PAY_PER_REQUEST\n      GlobalSecondaryIndexes:\n      - IndexName: type-index\n        KeySchema:\n        - AttributeName: type\n          KeyType: HASH\n        Projection:\n          ProjectionType: ALL\n  Role:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service: lambda.amazonaws.com\n          Action: sts:AssumeRole\n      Policies:\n      - PolicyName: ArcGlobalPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n            - logs:DescribeLogStreams\n            Resource: arn:aws:logs:*:*:*\n      - PolicyName: ArcDynamoPolicy\n        PolicyDocument:\n          Statement:\n          - Effect: Allow\n            Action:\n            - dynamodb:BatchGetItem\n            - dynamodb:BatchWriteItem\n            - dynamodb:PutItem\n            - dynamodb:DeleteItem\n            - dynamodb:GetItem\n            - dynamodb:Query\n            - dynamodb:Scan\n            - dynamodb:UpdateItem\n            - dynamodb:GetRecords\n            - dynamodb:GetShardIterator\n            - dynamodb:DescribeStream\n            - dynamodb:ListStreams\n            Resource:\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}\n              - tablename:\n                  Ref: PostsTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*\n              - tablename:\n                  Ref: PostsTable\n            - Fn::Sub:\n              - arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/stream/*\n              - tablename:\n                  Ref: PostsTable\n  PostsParam:\n    Type: AWS::SSM::Parameter\n    Properties:\n      Type: String\n      Name:\n        Fn::Sub:\n        - /${AWS::StackName}/tables/${tablename}\n        - tablename: posts\n      Value:\n        Ref: PostsTable\n  ParameterStorePolicy:\n    Type: AWS::IAM::Policy\n    DependsOn: Role\n    Properties:\n      PolicyName: ArcParameterStorePolicy\n      PolicyDocument:\n        Statement:\n        - Effect: Allow\n          Action: ssm:GetParametersByPath\n          Resource:\n            Fn::Sub:\n            - arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}\n            - {}\n      Roles:\n      - Ref: Role\nOutputs:\n  API:\n    Description: API Gateway (HTTP)\n    Value:\n      Fn::Sub:\n      - https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com\n      - ApiId:\n          Ref: HTTP\n  ApiId:\n    Description: API ID (ApiId)\n    Value:\n      Ref: HTTP\n",
			"canonicalURL": "/github.com/dabit3/architect-with-react-and-aws-amplify@380087dc11eb6c60b1efe7e53f0755494f37df18/-/blob/infra/sam.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dabit3/architect-with-react-and-aws-amplify/blob/380087dc11eb6c60b1efe7e53f0755494f37df18/infra/sam.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}