{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "versioneye.com-2.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/versioneye.com-2.0-swagger.yaml",
			"byteSize": 40662,
			"content": "openapi: 3.0.0\ninfo:\n  description: VersionEye is a cross-platform search engine for free/libre/open source\n    software libraries.\n  title: Available API endpoints\n  version: \"2.0\"\n  x-apisguru-categories:\n    - open_data\n    - search\n  x-logo:\n    url: https://versioneye.files.wordpress.com/2015/05/versioneyetransparent.png\n  x-origin:\n    - format: swagger\n      url: https://www.versioneye.com/api/v2/swagger_doc.json\n      version: \"2.0\"\n  x-providerName: versioneye.com\ntags:\n  - description: Operations about sessions\n    name: sessions\n  - description: Operations about services\n    name: services\n  - description: Operations about products\n    name: products\n  - description: Operations about projects\n    name: projects\n  - description: Operations about organisations\n    name: organisations\n  - description: Operations about mes\n    name: me\n  - description: Operations about users\n    name: users\n  - description: Operations about githubs\n    name: github\n  - description: Operations about securities\n    name: security\npaths:\n  /github:\n    get:\n      description: \u003e-\n        \n        This endpoint shows all imported repositories from your Github account.\n\n\n        This enpoint expects that you have a GitHub account connected and the token\n\n        is still valid. If that is not the case please visit **https://www.versioneye.com/settings/connect**.\n\n        to update your GitHub credentials.\n\n\n        If it shows no or old data, then you can use the `github/sync` endpoint\n\n        to update your account with the current meta data from GitHub.\n      operationId: getGithub\n      parameters:\n        - description: Filter by language\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n        - description: Filter by visibility\n          in: query\n          name: private\n          required: false\n          schema:\n            type: boolean\n        - description: Filter by name of organization\n          in: query\n          name: org_name\n          required: false\n          schema:\n            type: string\n        - description: Filter by type of organization\n          in: query\n          name: org_type\n          required: false\n          schema:\n            type: string\n        - description: Number of page\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Show only imported repositories\n          in: query\n          name: only_imported\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: lists your's github repos\n      summary: lists your's github repos\n      tags:\n        - github\n  \"/github/hook/{project_id}\":\n    post:\n      description: \"This endpoint is registered as service hook on GitHub. It triggers a\n        project re-parse on each git push. \"\n      operationId: postGithubHookProjectId\n      parameters:\n        - description: Project ID\n          in: path\n          name: project_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: github service hook\n      summary: github service hook\n      tags:\n        - github\n  /github/sync:\n    get:\n      description: \u003e-\n        \n        Reimports ALL GitHub Repositories. This Endpoint fetches meta information to all\n\n        repositories in your GitHub account. Meta information such as repo name, branches and\n\n        supported project files.\n\n\n        This endpoint works asynchronously and returns a status code. The status code is either\n\n        **running** or **done**.\n      operationId: getGithubSync\n      responses:\n        \"200\":\n          description: re-load github data\n      summary: re-load github data\n      tags:\n        - github\n  \"/github/{repo_key}\":\n    delete:\n      description: \u003e-\n        \n        This Endpoint deletes a project on VersionEye!\n\n\n        Due the limits of our current API framework, the repo key has to be\n\n        encoded as url-safe string. That means all '/' has to be replaced with\n\n        colons ':' and '.' has to be replaced with '~'.\n\n\n        For example,  repository with fullname `versioneye/veye` has to transformed\n\n        to `versioneye:veye`.\n      operationId: deleteGithubRepoKey\n      parameters:\n        - description: encoded repo-key\n          in: path\n          name: repo_key\n          required: true\n          schema:\n            type: string\n        - description: the name of the branch\n          in: query\n          name: branch\n          required: false\n          schema:\n            type: string\n            default: master\n      responses:\n        \"204\":\n          description: remove imported project\n      summary: remove imported project\n      tags:\n        - github\n    get:\n      description: \u003e-\n        \n        This Endpoint returns detailed information about a GitHub repository.\n\n\n        Due the limits of our current API framework, the repo key has to be\n\n        encoded as url-safe string. That means all '/' has to be replaced with\n\n        colons ':' and '.' has to be replaced with '~'.\n\n\n        For example,  repository with fullname `versioneye/veye` has to transformed\n\n        to `versioneye:veye`.\n      operationId: getGithubRepoKey\n      parameters:\n        - description: encoded repo name with optional branch info.\n          in: path\n          name: repo_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: shows the detailed information for the repository\n      summary: shows the detailed information for the repository\n      tags:\n        - github\n    post:\n      description: \u003e-\n        \n        Use this Endpoint to import a project file from GitHub. This will create a new project on VersionEye.\n\n\n        Due the limits of our current API framework, the repo key has to be\n\n        encoded as url-safe string. That means all '/' has to be replaced with\n\n        colons ':' and '.' has to be replaced with '~'.\n\n\n        For example,  repository with fullname `versioneye/veye` has to transformed\n\n        to `versioneye:veye`.\n      operationId: postGithubRepoKey\n      parameters:\n        - description: encoded repo name\n          in: path\n          name: repo_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                branch:\n                  description: the name of the branch\n                  type: string\n                  default: master\n                file:\n                  description: the project file (default is Gemfile)\n                  type: string\n                  default: Gemfile\n      responses:\n        \"201\":\n          description: imports project file from github\n      summary: imports project file from github\n      tags:\n        - github\n  /me:\n    get:\n      description: On Swagger, you can create session by adding additional parameter\n        :api_key.\n      operationId: getMe\n      responses:\n        \"200\":\n          description: shows profile of authorized user\n      summary: shows profile of authorized user\n      tags:\n        - me\n  /me/comments:\n    get:\n      description: shows comments of authorized user\n      operationId: getMeComments\n      parameters:\n        - description: page number for pagination\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: shows comments of authorized user\n      summary: shows comments of authorized user\n      tags:\n        - me\n  /me/favorites:\n    get:\n      description: shows the packages you are following\n      operationId: getMeFavorites\n      parameters:\n        - description: page number for pagination\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: shows the packages you are following\n      summary: shows the packages you are following\n      tags:\n        - me\n  /me/notifications:\n    get:\n      description: \u003e-\n        \n        This Endpoint returns the 30 latest notifications.\n\n\n        If there are new versions out there for software packages you follow directly on VersionEye, then\n\n        each new version is a new **notification** for your account.\n      operationId: getMeNotifications\n      parameters:\n        - description: Specify page for paging\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: shows unread notifications of authorized user\n      summary: shows unread notifications of authorized user\n      tags:\n        - me\n  /organisations:\n    get:\n      description: \u003e-\n        \n        This endpoint requires the API key from a user. The result is a set of organisations and their API keys.\n      operationId: getOrganisations\n      responses:\n        \"200\":\n          description: Returns the list of organisations you have access to\n      summary: Returns the list of organisations you have access to\n      tags:\n        - organisations\n  \"/organisations/{orga_name}/inventory\":\n    get:\n      description: \u003e-\n        \n        Find a detailed description here: https://github.com/versioneye/versioneye-api/blob/master/docs/api/v2/organisation.md\n      operationId: getOrganisationsOrgaNameInventory\n      parameters:\n        - description: Filter by team name\n          in: query\n          name: team_name\n          required: false\n          schema:\n            type: string\n        - description: Filter by programming language\n          in: query\n          name: language\n          required: false\n          schema:\n            type: string\n        - description: Filter down by project version\n          in: query\n          name: project_version\n          required: false\n          schema:\n            type: string\n        - description: Post processing filter. Possible values are 'ALL',\n            'duplicates_only', 'show_duplicates'\n          in: query\n          name: post_filter\n          required: false\n          schema:\n            type: string\n        - in: path\n          name: orga_name\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Returns the inventory list of the organisation\n      summary: Returns the inventory list of the organisation\n      tags:\n        - organisations\n  \"/organisations/{orga_name}/inventory_diff\":\n    get:\n      operationId: getOrganisationsOrgaNameInventoryDiff\n      parameters:\n        - description: ID of the inventory diff object\n          in: query\n          name: inventory_diff_id\n          required: false\n          schema:\n            type: string\n        - in: path\n          name: orga_name\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Returns the inventory diff object\n      summary: Returns the inventory diff object\n      tags:\n        - organisations\n    post:\n      description: \u003e-\n        \n        This Endpoint takes 2 inventory filters and calculates the difference between them.\n\n        The diff object contains wich items have been removed and/or added compared to the inventory1 filter.\n\n        The response of this Endpoint is the ID of the diff object, which is calculated async in the background.\n      operationId: postOrganisationsOrgaNameInventoryDiff\n      parameters:\n        - in: path\n          name: orga_name\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                f1_team_name:\n                  description: Inventory1, filter by team name\n                  type: string\n                f1_language:\n                  description: Inventory1, filter by programming language\n                  type: string\n                f1_project_version:\n                  description: Inventory1, filter down by project version\n                  type: string\n                f1_post_filter:\n                  description: Inventory1, post processing filter. Possible values are\n                    'ALL', 'duplicates_only', 'show_duplicates'\n                  type: string\n                f2_team_name:\n                  description: Inventory2, filter by team name\n                  type: string\n                f2_language:\n                  description: Inventory2, filter by programming language\n                  type: string\n                f2_project_version:\n                  description: Inventory2, filter down by project version\n                  type: string\n                f2_post_filter:\n                  description: Inventory2, post processing filter. Possible values are\n                    'ALL', 'duplicates_only', 'show_duplicates'\n                  type: string\n      responses:\n        \"201\":\n          description: Creates an inventory diff object\n      summary: Creates an inventory diff object\n      tags:\n        - organisations\n  \"/organisations/{orga_name}/projects\":\n    get:\n      description: Returns the list of projects\n      operationId: getOrganisationsOrgaNameProjects\n      parameters:\n        - in: path\n          name: orga_name\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Returns the list of projects\n      summary: Returns the list of projects\n      tags:\n        - organisations\n  \"/organisations/{orga_name}/teams\":\n    get:\n      description: Returns the list of teams\n      operationId: getOrganisationsOrgaNameTeams\n      parameters:\n        - in: path\n          name: orga_name\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: Returns the list of teams\n      summary: Returns the list of teams\n      tags:\n        - organisations\n  \"/products/search/{q}\":\n    get:\n      description: \u003e-\n        \n        This resource returns same results as our web application. But you get it as JSON objects -\n\n        the result is an JSON array of product objects.\n\n\n        When there's no match for the query, the result array will be empty.\n      operationId: getProductsSearchQ\n      parameters:\n        - description: Query string. At least 2 characters.\n          in: path\n          name: q\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            Filter results by programming languages;\n                                              For filtering multiple languages submit a comma separated list of language strings.\n          in: query\n          name: lang\n          required: false\n          schema:\n            type: string\n        - description: Filter by GroupID. This is Java/Maven specific\n          in: query\n          name: g\n          required: false\n          schema:\n            type: string\n        - description: Specify page for paging\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: search packages\n      summary: search packages\n      tags:\n        - products\n  \"/products/sha/{sha}\":\n    get:\n      description: \u003e-\n        \n        This Endpoint expects a SHA value and returns the corresponding product to it, if available.\n      operationId: getProductsShaSha\n      parameters:\n        - in: path\n          name: sha\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: search by SHA value\n      summary: search by SHA value\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}\":\n    get:\n      description: \u003e-\n        \n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n          * API returns 404, when the product with given product key doesnt exists.\n\n          * Response 302 means that you didnt encode prod_key correctly.* (Replace all dots \u0026 slashes ) *\n      operationId: getProductsLangProdKey\n      parameters:\n        - description: '\"Name of programming language\"'\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: '\"Encoded product key, replace all `/` and `.`'\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n        - description: '\"Version string\"'\n          in: query\n          name: prod_version\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: detailed information for specific package\n      summary: detailed information for specific package\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}/follow\":\n    delete:\n      description: \u003e-\n        \n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Response codes\n\n          * 400 - bad request; you used wrong product key;\n          * 401 - unauthorized - please append api_key\n          * 403 - forbidden; you are not authorized; or just missed api_key;\n      operationId: deleteProductsLangProdKeyFollow\n      parameters:\n        - description: Programming language\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: Package specifier\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: unfollow given software package\n      summary: unfollow given software package\n      tags:\n        - products\n    get:\n      description: \u003e-\n        \n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n\n        This resource will returns the status code 404 if there is no product\n\n        for the given prod_key.\n      operationId: getProductsLangProdKeyFollow\n      parameters:\n        - description: '\"Name of programming language\"'\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: Package specifier\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: check your following status\n      summary: check your following status\n      tags:\n        - products\n    post:\n      description: \u003e-\n        \n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n\n        It will respond 404, when you are using wrong product key or encode it uncorrectly.\n      operationId: postProductsLangProdKeyFollow\n      parameters:\n        - description: Programming language\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: \" Package product key. \"\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: follow your favorite software package\n      summary: follow your favorite software package\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}/references\":\n    get:\n      description: \u003e-\n        \n        It returns the references of a package.\n\n\n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n\n        This resource will return the status code 404 if there is no product for\n\n        the given prod_key or the product has 0 references.\n      operationId: getProductsLangProdKeyReferences\n      parameters:\n        - description: Language\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: Product Key\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n        - description: Page for paging\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: references\n      summary: references\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}/versions\":\n    get:\n      description: \u003e-\n        \n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n          * API returns 404, when the product with given product key doesnt exists.\n\n          * Response 302 means that you didnt encode prod_key correctly.* (Replace all dots \u0026 slashes ) *\n      operationId: getProductsLangProdKeyVersions\n      parameters:\n        - description: '\"Name of programming language\"'\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: '\"Encoded product key, replace all `/` and `.`'\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: list versions of a package\n      summary: list versions of a package\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}/{prod_version}/license\":\n    post:\n      description: With this endpoint users can suggest a license for an artifact.\n      operationId: postProductsLangProdKeyProdVersionLicense\n      parameters:\n        - description: \" programming language \"\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: \" product key \"\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n        - description: \" product version \"\n          in: path\n          name: prod_version\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                license_name:\n                  description: \" name of the license \"\n                  type: string\n                license_source:\n                  description: \" source of the license. Where did you find it? \"\n                  type: string\n                comments:\n                  description: \" you wanna say anyting important to this license? \"\n                  type: string\n              required:\n                - license_name\n                - license_source\n      responses:\n        \"201\":\n          description: suggest a license for an artifact\n      summary: suggest a license for an artifact\n      tags:\n        - products\n  \"/products/{lang}/{prod_key}/{prod_version}/scm_changes\":\n    post:\n      description: \u003e-\n        \n        This resource can parse a changelog.xml from the maven-changelog-plugin, assign\n\n        it to a specific artifact and display the changelog infos on the product page.\n\n\n        Please replace all slashes `/` through colons `:` and all dots `.` through `~`!\n\n\n        Example: The clojure package `yummy.json/json` has to be transformed to  `yummy~json:json`.\n\n\n        #### Notes about status codes\n\n\n        It will respond 404, when you are using wrong product key or encode it uncorrectly.\n      operationId: postProductsLangProdKeyProdVersionScmChanges\n      parameters:\n        - description: \" programming language \"\n          in: path\n          name: lang\n          required: true\n          schema:\n            type: string\n        - description: \" product key \"\n          in: path\n          name: prod_key\n          required: true\n          schema:\n            type: string\n        - description: \" product version \"\n          in: path\n          name: prod_version\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: upload scm changelogs to an artifact\n      summary: upload scm changelogs to an artifact\n      tags:\n        - products\n  /projects:\n    get:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjects\n      parameters:\n        - description: The name of the organisation the project is assigned to.\n          in: query\n          name: orga_name\n          required: false\n          schema:\n            type: string\n        - description: The name of the team in the organisation this project is assigned to.\n          in: query\n          name: team_name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: list of projects\n      summary: list of projects\n      tags:\n        - projects\n    post:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: postProjects\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                upload:\n                  description: Project file - [maven.pom, Gemfile ...]\n                  type: string\n                  format: binary\n                visibility:\n                  description: By default 'public'. If 'public' everybody can see the\n                    project.\n                  type: string\n                name:\n                  description: The name of the VersionEye project. By default it is the\n                    filename.\n                  type: string\n                orga_name:\n                  description: The name of the organisation this project should be assigned\n                    to.\n                  type: string\n                team_name:\n                  description: The name of the team in the organisation this project should\n                    be assigned to.\n                  type: string\n                temp:\n                  description: If 'true' this project will not show up in the UI and gets\n                    removed later.\n                  type: string\n              required:\n                - upload\n      responses:\n        \"201\":\n          description: upload project file and create a new project\n      summary: upload project file and create a new project\n      tags:\n        - projects\n  \"/projects/{group_id}/{artifact_id}/merge_ga/{child_id}\":\n    get:\n      description: \u003e-\n        \n        This endpoint merges a project (child_id) into another project (group_id/artifact_id).\n\n        This endpoint is specially for Maven based projects!\n\n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjectsGroupIdArtifactIdMergeGaChildId\n      parameters:\n        - description: GroupId of the parent project\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: ArtifactId of the parent project\n          in: path\n          name: artifact_id\n          required: true\n          schema:\n            type: string\n        - description: Project ID of the child\n          in: path\n          name: child_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: merge a project into another one\n      summary: merge a project into another one\n      tags:\n        - projects\n  \"/projects/{parent_id}/merge/{child_id}\":\n    get:\n      description: \u003e-\n        \n        This endpoint merges a project (child_id) into another project (parent_id).\n\n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjectsParentIdMergeChildId\n      parameters:\n        - description: Project ID of the parent\n          in: path\n          name: parent_id\n          required: true\n          schema:\n            type: string\n        - description: Project ID of the child\n          in: path\n          name: child_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: merge a project into another one\n      summary: merge a project into another one\n      tags:\n        - projects\n  \"/projects/{parent_id}/unmerge/{child_id}\":\n    get:\n      description: \u003e-\n        \n        This endpoint unmerges a project (child_id) from another project (parent_id). It makes the\n\n        chilld again a separate project!\n\n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjectsParentIdUnmergeChildId\n      parameters:\n        - description: Project ID of the parent\n          in: path\n          name: parent_id\n          required: true\n          schema:\n            type: string\n        - description: Project ID of the child\n          in: path\n          name: child_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: unmerge a project\n      summary: unmerge a project\n      tags:\n        - projects\n  \"/projects/{project_key}\":\n    delete:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: deleteProjectsProjectKey\n      parameters:\n        - description: Delete project with given project ID.\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: delete given project\n      summary: delete given project\n      tags:\n        - projects\n    get:\n      description: \" It shows detailed info of your project. \"\n      operationId: getProjectsProjectKey\n      parameters:\n        - description: Project ID\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: shows the project's information\n      summary: shows the project's information\n      tags:\n        - projects\n    post:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: postProjectsProjectKey\n      parameters:\n        - description: Project ID\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                project_file:\n                  description: Project file - [maven.pom, Gemfile ...]\n                  type: string\n                  format: binary\n              required:\n                - project_file\n      responses:\n        \"201\":\n          description: update project with new file\n      summary: update project with new file\n      tags:\n        - projects\n    put:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n\n\n        With this Endpoint an existing project can be updated. This are the fields which \n\n        can be updated: \n\n\n        ```\n\n        {\n          public: false,\n          name: \"toto\",\n          description: \"beschreibung\",\n          license: \"Lizenz\",\n          version: \"Versionio\"\n        }\n\n        ```\n      operationId: putProjectsProjectKey\n      parameters:\n        - description: Project ID\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: update project properites\n      summary: update project properites\n      tags:\n        - projects\n  \"/projects/{project_key}/dependencies\":\n    get:\n      description: \u003e-\n        \n        This Endpoint returns a list of ALL dependencies of the project. This list includes\n\n        dependencies of child projects as well.\n\n\n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjectsProjectKeyDependencies\n      parameters:\n        - description: Project ID or project_key\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: get a list of ALL dependencies\n      summary: get a list of ALL dependencies\n      tags:\n        - projects\n  \"/projects/{project_key}/licenses\":\n    get:\n      description: \u003e-\n        \n        To use this resource you need either an active session or you have to append\n\n        your API Key to the URL as parameter. For example: \"?api_key=666_your_api_key_666\"\n      operationId: getProjectsProjectKeyLicenses\n      parameters:\n        - description: Project ID or project_key\n          in: path\n          name: project_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: get grouped view of licences for dependencies\n      summary: get grouped view of licences for dependencies\n      tags:\n        - projects\n  /security:\n    get:\n      description: Security Vulnerabilities\n      operationId: getSecurity\n      parameters:\n        - description: Filter by programming languages\n          in: query\n          name: language\n          required: true\n          schema:\n            type: string\n        - description: prod_key of the package\n          in: query\n          name: prod_key\n          required: false\n          schema:\n            type: string\n        - description: Specify page for paging\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Asc sort by value\n          in: query\n          name: asc_sort\n          required: false\n          schema:\n            type: string\n        - description: Desc sort by value\n          in: query\n          name: desc_sort\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security Vulnerabilities\n      summary: Security Vulnerabilities\n      tags:\n        - security\n  /services/ping:\n    get:\n      description: check is the service up and running\n      operationId: getServicesPing\n      responses:\n        \"200\":\n          description: Answers to request with basic pong.\n      summary: Answers to request with basic pong.\n      tags:\n        - services\n  /sessions:\n    delete:\n      description: Close current session. It's very handy method when you re-generated your\n        current API-key.\n      operationId: deleteSessions\n      responses:\n        \"204\":\n          description: delete current session aka log out.\n      summary: delete current session aka log out.\n      tags:\n        - sessions\n    get:\n      description: |-\n        \n        If current user has active session, then this\n        method will return 200 with short user profile.\n        For othercase, it will return error message with status code 401.\n      operationId: getSessions\n      responses:\n        \"200\":\n          description: returns session info for authorized users\n      summary: returns session info for authorized users\n      tags:\n        - sessions\n    post:\n      description: \" You need to append your api_key to request. \"\n      operationId: postSessions\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                api_key:\n                  description: your personal token for API.\n                  type: string\n              required:\n                - api_key\n      responses:\n        \"201\":\n          description: creates new sessions\n      summary: creates new sessions\n      tags:\n        - sessions\n  /sessions/login:\n    post:\n      description: \" You need to append your api_key to request. \"\n      operationId: postSessionsLogin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  description: email or username\n                  type: string\n                password:\n                  description: password\n                  type: string\n              required:\n                - username\n                - password\n      responses:\n        \"201\":\n          description: creates new sessions\n      summary: creates new sessions\n      tags:\n        - sessions\n  \"/users/{username}\":\n    get:\n      description: shows profile of given user_id\n      operationId: getUsersUsername\n      parameters:\n        - description: username\n          in: path\n          name: username\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: shows profile of given user_id\n      summary: shows profile of given user_id\n      tags:\n        - users\n  \"/users/{username}/comments\":\n    get:\n      description: shows user's comments\n      operationId: getUsersUsernameComments\n      parameters:\n        - description: VersionEye users' nickname\n          in: path\n          name: username\n          required: true\n          schema:\n            type: string\n        - description: pagination number\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: shows user's comments\n      summary: shows user's comments\n      tags:\n        - users\n  \"/users/{username}/favorites\":\n    get:\n      description: shows user's favorite packages\n      operationId: getUsersUsernameFavorites\n      parameters:\n        - description: username\n          in: path\n          name: username\n          required: true\n          schema:\n            type: string\n        - description: Pagination number\n          in: query\n          name: page\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: shows user's favorite packages\n      summary: shows user's favorite packages\n      tags:\n        - users\nservers:\n  - url: https://www.versioneye.com/api/v2\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/versioneye.com-2.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/versioneye.com-2.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}