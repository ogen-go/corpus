{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "implicit_http_api_with_many_conditions.json",
			"size": 0,
			"path": "tests/translator/output/implicit_http_api_with_many_conditions.json",
			"byteSize": 41792,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\", \n  \"Conditions\": {\n    \"Cond5\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond4\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond7\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond6\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond1\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond3\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond2\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"ServerlessHttpApiCondition\": {\n      \"Fn::Or\": [\n        {\n          \"Condition\": \"MyCondition\"\n        }, \n        {\n          \"Condition\": \"ServerlessHttpApiCondition1\"\n        }\n      ]\n    }, \n    \"Cond9\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond8\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"Cond\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }, \n    \"ServerlessHttpApiCondition1\": {\n      \"Fn::Or\": [\n        {\n          \"Condition\": \"Cond\"\n        }, \n        {\n          \"Condition\": \"Cond1\"\n        }, \n        {\n          \"Condition\": \"Cond2\"\n        }, \n        {\n          \"Condition\": \"Cond3\"\n        }, \n        {\n          \"Condition\": \"Cond4\"\n        }, \n        {\n          \"Condition\": \"Cond5\"\n        }, \n        {\n          \"Condition\": \"Cond6\"\n        }, \n        {\n          \"Condition\": \"Cond7\"\n        }, \n        {\n          \"Condition\": \"Cond8\"\n        }, \n        {\n          \"Condition\": \"Cond9\"\n        }\n      ]\n    }, \n    \"MyCondition\": {\n      \"Fn::Equals\": [\n        true, \n        false\n      ]\n    }\n  }, \n  \"Description\": \"A template to test for implicit HttpApi condition handling.\", \n  \"Resources\": {\n    \"helloworld9HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld9\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub9\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond9\"\n    }, \n    \"helloworld9Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond9\"\n    }, \n    \"helloworld2HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld2\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub2\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond2\"\n    }, \n    \"ServerlessHttpApi\": {\n      \"Type\": \"AWS::ApiGatewayV2::Api\", \n      \"Properties\": {\n        \"Body\": {\n          \"info\": {\n            \"version\": \"1.0\", \n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            }\n          }, \n          \"paths\": {\n            \"/hello/again\": {\n              \"Fn::If\": [\n                \"Cond\", \n                {\n                  \"get\": {\n                    \"Fn::If\": [\n                      \"Cond\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1099.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub\": {\n              \"Fn::If\": [\n                \"MyCondition\", \n                {\n                  \"get\": {\n                    \"Fn::If\": [\n                      \"MyCondition\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"MyCondition\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${hello.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub8\": {\n              \"Fn::If\": [\n                \"Cond8\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond8\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond8\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld8.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub9\": {\n              \"Fn::If\": [\n                \"Cond9\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond9\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond9\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld9.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"$default\": {\n              \"Fn::If\": [\n                \"Cond\", \n                {\n                  \"x-amazon-apigateway-any-method\": {\n                    \"Fn::If\": [\n                      \"Cond\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1099.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"isDefaultRoute\": true, \n                        \"security\": [\n                          {\n                            \"oauth2\": [\n                              \"scope4\"\n                            ]\n                          }\n                        ], \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub1\": {\n              \"Fn::If\": [\n                \"Cond1\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond1\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond1\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld1.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub2\": {\n              \"Fn::If\": [\n                \"Cond2\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond2\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond2\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld2.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub3\": {\n              \"Fn::If\": [\n                \"Cond3\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond3\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond3\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld3.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub4\": {\n              \"Fn::If\": [\n                \"Cond4\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond4\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond4\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld4.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub5\": {\n              \"Fn::If\": [\n                \"Cond5\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond5\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond5\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld5.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub6\": {\n              \"Fn::If\": [\n                \"Cond6\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond6\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond6\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld6.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }, \n            \"/sub7\": {\n              \"Fn::If\": [\n                \"Cond7\", \n                {\n                  \"post\": {\n                    \"Fn::If\": [\n                      \"Cond7\", \n                      {\n                        \"x-amazon-apigateway-integration\": {\n                          \"httpMethod\": \"POST\", \n                          \"type\": \"aws_proxy\", \n                          \"uri\": {\n                            \"Fn::If\": [\n                              \"Cond7\", \n                              {\n                                \"Fn::Sub\": \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld7.Arn}/invocations\"\n                              }, \n                              {\n                                \"Ref\": \"AWS::NoValue\"\n                              }\n                            ]\n                          }, \n                          \"payloadFormatVersion\": \"2.0\"\n                        }, \n                        \"responses\": {}\n                      }, \n                      {\n                        \"Ref\": \"AWS::NoValue\"\n                      }\n                    ]\n                  }\n                }, \n                {\n                  \"Ref\": \"AWS::NoValue\"\n                }\n              ]\n            }\n          }, \n          \"openapi\": \"3.0.1\", \n          \"components\": {\n            \"securitySchemes\": {\n              \"oauth2\": {\n                \"type\": \"oauth2\", \n                \"x-amazon-apigateway-authorizer\": {\n                  \"identitySource\": \"$request.querystring.param\", \n                  \"type\": \"jwt\", \n                  \"jwtConfiguration\": {\n                    \"audience\": [\n                      \"MyApi\"\n                    ], \n                    \"issuer\": \"https://www.example.com/v1/connect/oidc\"\n                  }\n                }\n              }\n            }\n          }, \n          \"tags\": [\n            {\n              \"name\": \"httpapi:createdBy\", \n              \"x-amazon-apigateway-tag-value\": \"SAM\"\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"ServerlessHttpApiCondition\"\n    }, \n    \"helloworld6HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld6\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub6\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond6\"\n    }, \n    \"helloworld1Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond1\"\n    }, \n    \"helloworld7\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld7Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond7\"\n    }, \n    \"helloworld6\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld6Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond6\"\n    }, \n    \"helloworld5\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld5Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond5\"\n    }, \n    \"helloworld1099Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond\"\n    }, \n    \"helloworld3\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld3Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond3\"\n    }, \n    \"helloworld2\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld2Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond2\"\n    }, \n    \"helloworld1\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld1Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond1\"\n    }, \n    \"helloworld9\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld9Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond9\"\n    }, \n    \"hello\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloRole\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"MyCondition\"\n    }, \n    \"helloRole\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"MyCondition\"\n    }, \n    \"helloworld7HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld7\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub7\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond7\"\n    }, \n    \"helloHttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"hello\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/sub\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"MyCondition\"\n    }, \n    \"helloworld1HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld1\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub1\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond1\"\n    }, \n    \"helloworld5Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond5\"\n    }, \n    \"helloworld4Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond4\"\n    }, \n    \"helloworld1099HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld1099\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond\"\n    }, \n    \"helloworld5HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld5\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub5\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond5\"\n    }, \n    \"helloworld7Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond7\"\n    }, \n    \"helloworld2Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond2\"\n    }, \n    \"helloworld8Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond8\"\n    }, \n    \"helloworld4\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld4Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond4\"\n    }, \n    \"helloworld1099\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld1099Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond\"\n    }, \n    \"helloworld8HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld8\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub8\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond8\"\n    }, \n    \"ServerlessHttpApiApiGatewayDefaultStage\": {\n      \"Type\": \"AWS::ApiGatewayV2::Stage\", \n      \"Properties\": {\n        \"AutoDeploy\": true, \n        \"ApiId\": {\n          \"Ref\": \"ServerlessHttpApi\"\n        }, \n        \"RouteSettings\": {\n          \"GET /sub\": {\n            \"Fn::If\": [\n              \"MyCondition\", \n              {\n                \"ThrottlingBurstLimit\": 200\n              }, \n              {\n                \"Ref\": \"AWS::NoValue\"\n              }\n            ]\n          }, \n          \"$default\": {\n            \"Fn::If\": [\n              \"Cond\", \n              {\n                \"ThrottlingBurstLimit\": 200\n              }, \n              {\n                \"Ref\": \"AWS::NoValue\"\n              }\n            ]\n          }\n        }, \n        \"StageName\": \"$default\", \n        \"Tags\": {\n          \"httpapi:createdBy\": \"SAM\"\n        }\n      }, \n      \"Condition\": \"ServerlessHttpApiCondition\"\n    }, \n    \"helloworld3Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond3\"\n    }, \n    \"helloworld8\": {\n      \"Type\": \"AWS::Lambda::Function\", \n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async () =\u003e \\u2018Hello World!'\\n\"\n        }, \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ], \n        \"MemorySize\": 128, \n        \"Handler\": \"index.handler\", \n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"helloworld8Role\", \n            \"Arn\"\n          ]\n        }, \n        \"Timeout\": 3, \n        \"Runtime\": \"nodejs12.x\"\n      }, \n      \"Condition\": \"Cond8\"\n    }, \n    \"helloworld4HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld4\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub4\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond4\"\n    }, \n    \"helloworld6Role\": {\n      \"Type\": \"AWS::IAM::Role\", \n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Version\": \"2012-10-17\", \n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ], \n              \"Effect\": \"Allow\", \n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ]\n        }, \n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ], \n        \"Tags\": [\n          {\n            \"Value\": \"SAM\", \n            \"Key\": \"lambda:createdBy\"\n          }\n        ]\n      }, \n      \"Condition\": \"Cond6\"\n    }, \n    \"helloworld3HttpApiEventPermission\": {\n      \"Type\": \"AWS::Lambda::Permission\", \n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\", \n        \"Principal\": \"apigateway.amazonaws.com\", \n        \"FunctionName\": {\n          \"Ref\": \"helloworld3\"\n        }, \n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/sub3\", \n            {\n              \"__Stage__\": \"*\", \n              \"__ApiId__\": {\n                \"Ref\": \"ServerlessHttpApi\"\n              }\n            }\n          ]\n        }\n      }, \n      \"Condition\": \"Cond3\"\n    }\n  }\n}",
			"canonicalURL": "/github.com/aws/serverless-application-model@30f206a677fb8080750de88c255ad09b24071873/-/blob/tests/translator/output/implicit_http_api_with_many_conditions.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/30f206a677fb8080750de88c255ad09b24071873/tests/translator/output/implicit_http_api_with_many_conditions.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}