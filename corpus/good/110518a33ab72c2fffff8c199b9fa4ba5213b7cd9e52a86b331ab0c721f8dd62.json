{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "app_create_api.yaml",
			"size": 0,
			"path": "specs/app_create_api.yaml",
			"byteSize": 17346,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Create App Api\npaths:\n  /orchestrator/core/v1beta1/application/{appId}:\n    get:\n      description: Get all details of an app by appId. These details include - metadata(appName, projectNamr, labels), gitMaterials, docker config, templates, workflows, configMaps, secrets, environment override configurations.\n      operationId: GetAppAllDetail\n      parameters:\n        - name: appId\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successfully return all details of the app.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppDetail'\n        '400':\n          description: Bad Request. Input Validation error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /orchestrator/core/v1beta1/application:\n    post:\n      description: Creates a new app for the configurations provided. The input json object is the same we get in response of GET method for fetching all details of an app\n      operationId: CreateApp\n      requestBody:\n        description: A JSON object containing the app configuration\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppDetail'\n      responses:\n        '200':\n          description: Successfully return a message stating the operation is successful.\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Bad Request. Validation error/wrong request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '403':\n          description: Unauthorized User\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    AppDetail:\n      type: object\n      properties:\n        metadata:\n          $ref : '#/components/schemas/AppMetadata'\n        gitMaterials:\n          type: array\n          items:\n            $ref: '#/components/schemas/GitMaterial'\n        dockerConfig:\n          $ref: '#/components/schemas/DockerConfig'\n        globalDeploymentTemplate:\n          $ref: '#/components/schemas/DeploymentTemplate'\n        appWorkflows:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppWorkflow'\n        globalConfigMaps:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigMap'\n        globalSecrets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Secret'\n        environmentOverrides:\n          type: array\n          items:\n            type: object\n            properties:\n              Name:\n                type: string\n                description: Name of environment\n              Values:\n                $ref: '#/components/schemas/EnvironmentOverride'\n      example:\n        appMetadata:\n          appName: example-app-2\n          projectName: devtron-demo\n          labels: [\"key1\":\"value1\", \"key2\":\"value2\"]\n        gitMaterials:\n          - gitProviderUrl: \"https://github.com\"\n            gitRepoUrl: \"https://github.com/user1/example-repo\"\n            checkoutPath: \"./\"\n            fetchSubmodules: true\n          - gitProviderUrl: \"https://gitlab.com\"\n            gitRepoUrl: \"https://gitlab.com/user2/new-repo\"\n            checkoutPath: \"./a\"\n            fetchSubmodules: false\n        dockerConfig:\n          dockerRegistry: \"my-dockerhub\"\n          dockerRepository: \"user/test\"\n          dockerBuildConfig:\n            gitCheckoutPath: \"./a\"\n            dockerfileRelativePath: \"Dockerfile\"\n            args: [\"File\":\"*\"]\n        globalDeploymentTemplate:\n          chartRefId: 13\n          showAppMetrics: true\n          isOverride: false\n          template:\n            ContainerPort:\n              envoyPort: 8799\n              idleTimeout: 1800s\n              name: app\n              port: 8080\n              servicePort: 80\n              supportStreaming: true\n              useHTTP2: true\n            EnvVariables: []\n            GracePeriod: 30\n            LivenessProbe:\n              Path: \"\"\n              command: []\n              failureThreshold: 3\n              httpHeader:\n                name: \"\"\n                value: \"\"\n              initialDelaySeconds: 20\n              periodSeconds: 10\n              port: 8080\n              scheme: \"\"\n              successThreshold: 1\n              tcp: false\n              timeoutSeconds: 5\n        appWorkflows:\n          - name: \"workflow-1\"\n            ciPipeline:\n              name: \"ci-pipeline-1\"\n              isManual: true\n              vulnerabilityScanEnabled: false\n              isExternal: fale\n              ciPipelineMaterialsConfig:\n                - type: \"SOURCE_TYPE_BRANCH_FIXED\"\n                  value: \"master\"\n                  checkoutPath: \"./\"\n                - type: \"SOURCE_TYPE_BRANCH_FIXED\"\n                  value: \"main\"\n                  checkoutPath: \"./a\"\n              dockerBuildArgs: [\"File\":\"*\"]\n            cdPipelines:\n              - name: \"cd-pipeline-1\"\n                environmentName: \"devtron-demo\"\n                triggerType: \"AUTOMATIC\"\n                deploymentStrategies:\n                  - name: \"BLUE-GREEN\"\n                    config:\n                      deployment:\n                        strategy:\n                          blueGreen:\n                            autoPromotionSeconds: 30\n                            \"scaleDownDelaySeconds\": 30\n                            \"previewReplicaCount\": 1\n                            \"autoPromotionEnabled\": false\n                    isDefault: false\n                  - name: \"ROLLING\"\n                    config:\n                      deployment:\n                        strategy:\n                          blueGreen:\n                            autoPromotionSeconds: 30\n                            \"maxSurge\": \"25%\"\n                            \"maxUnavailable\": 1\n                    isDefault: true\n                preStage:\n                  name: \"cd-1-pre\"\n                  triggerType: \"MANUAL\"\n                  config: \"version: 0.0.1\\ncdPipelineConf:\\n- beforeStages:\\n- name: test-1\\n script: |\\n date \u003e test.report\\necho 'hello'\\noutputLocation: ./test.report\\n - name: test-2\\nscript: |\\n date \u003e test2.report\\n outputLocation: ./test2.report;\"\n                postStage:\n                  name: \"cd-1-post\"\n                  triggerType: \"AUTO\"\n                  config: \"version: 0.0.1\\ncdPipelineConf:\\n- afterStages:\\n- name: test-1\\n script: |\\n date \u003e test.report\\necho 'hello'\\noutputLocation: ./test.report\\n - name: test-2\\nscript: |\\n date \u003e test2.report\\n outputLocation: ./test2.report;\"\n                preStageConfigMapSecretNames:\n                  - configMaps: [\"cm-1\"]\n                  - secrets: [\"secret-env-1\"]\n                postStageConfigMapSecretNames:\n                  - configMaps: [\"cm-env-1\"]\n                  - secrets: [\"secret-1\"]\n                runPreStageInEnv: true\n                runPostStageInEnv: true\n                isClusterCdActive: true\n        globalConfigMaps:\n          - name: \"cm-1\"\n            isExternal: false\n            usageType: \"volume\"\n            data: [\"abc\":\"xyz\"]\n            dataVolumeUsageConfig:\n              mountPath: \"/cm\"\n              filePermission: \"600\"\n              subPath: true\n        globalSecrets:\n          - name: \"secret-1\"\n            isExternal: false\n            usageType: \"environment\"\n            data: [\"user1\":\"password1\"]\n        environmentOverrides:\n          - name: \"devtron-demo\"\n            values:\n              deploymentTemplate:\n                chartRefId: 13\n                showAppMetrics: false\n                isOverride: true\n                template:\n                  ContainerPort:\n                    envoyPort: 8799\n                    idleTimeout: 1800s\n                    name: app\n                    port: 8080\n                    servicePort: 80\n                    supportStreaming: true\n                    useHTTP2: true\n                  EnvVariables: []\n                  GracePeriod: 35\n                  LivenessProbe:\n                    Path: \"\"\n                    command: []\n                    failureThreshold: 4\n                    httpHeader:\n                      name: \"\"\n                      value: \"\"\n                    initialDelaySeconds: 21\n                    periodSeconds: 11\n                    port: 8080\n                    scheme: \"\"\n                    successThreshold: 1\n                    tcp: false\n                    timeoutSeconds: 10\n              configMaps:\n                - name: \"cm-env-1\"\n                  isExternal: false\n                  usageType: \"environment\"\n                  data: [\"userName\":\"new-user\"]\n              secrets:\n                - name: \"secret-env-1\"\n                  isExternal: false\n                  usageType: \"volume\"\n                  data: [\"new-user\":\"devtron123\"]\n                  dataVolumeUsageConfig:\n                    mountPath: \"/secret\"\n                    filePermission: \"400\"\n                    subPath: false\n    AppMetadata:\n      type: object\n      properties:\n        appName:\n          type: string\n        projectName:\n          type: string\n        labels:\n          type: array\n          items:\n            $ref: '#/components/schemas/AppLabel'\n    AppLabel:\n      type: object\n      properties:\n        Key:\n          type: string\n        Value:\n          type: string\n    GitMaterial:\n      type: object\n      properties:\n        gitProviderUrl:\n          type: string\n        gitRepoUrl:\n          type: string\n        checkoutPath:\n          type: string\n        fetchSubmodules:\n          type: boolean\n    DockerConfig:\n      type: object\n      properties:\n        dockerRegistry:\n          type: string\n        dockerRepository:\n          type: string\n        dockerBuildConfig:\n          $ref: '#/components/schemas/DockerBuildConfig'\n    DockerBuildConfig:\n      type: object\n      properties:\n        gitCheckoutPath:\n          type: string\n        dockerfileRelativePath:\n          type: string\n        args:\n          type: array\n          items:\n            type: object\n            properties:\n              Key:\n                type: string\n              Value:\n                type: string\n          description: map of docker arguments, i.e. key-value pairs\n    DeploymentTemplate:\n      type: object\n      properties:\n        chartRefId:\n          type: integer\n        showAppMetrics:\n          type: boolean\n        isOverride:\n          type: boolean\n        template:\n          type: array\n          items:\n            type: object\n            properties:\n              Fields:\n                type: string\n              Values:\n                type: object\n                description: interface{}\n            description: map of template fields and values\n    AppWorkflow:\n      type: object\n      properties:\n        name:\n          type: string\n        ciPipeline:\n          $ref: '#/components/schemas/CiPipelineDetails'\n        cdPipelines:\n          type: array\n          items:\n            $ref: '#/components/schemas/CdPipelineDetails'\n    CiPipelineDetails:\n      type: object\n      properties:\n        name:\n          type: string\n        isManual:\n          type: boolean\n        vulnerabilityScanEnabled:\n          type: boolean\n        isExternal:\n          type: boolean\n        ciPipelineMaterialsConfig:\n          type: array\n          items:\n            $ref: '#/components/schemas/CiPipelineMaterialConfig'\n        dockerBuildArgs:\n          type: array\n          items:\n            type: object\n            properties:\n              Key:\n                type: string\n              Value:\n                type: string\n          description: map of docker arguments, i.e. key-value pairs\n        beforeDockerBuildScripts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BuildScript'\n        afterDockerbuildScripts:\n          type: array\n          items:\n            $ref: '#/components/schemas/BuildScript'\n    CiPipelineMaterialConfig:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: string\n        checkoutPath:\n          type: string\n    BuildScript:\n      type: object\n      properties:\n        index:\n          type: integer\n        name:\n          type: string\n        script:\n          type: string\n        reportDirectoryPath:\n          type: string\n    CdPipelineDetails:\n      type: object\n      properties:\n        name:\n          type: string\n        environmentName:\n          type: string\n        triggerType:\n          type: string\n        deploymentType:\n          type: string\n        deploymentStrategies:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeploymentStrategy'\n        preStage:\n          $ref: '#/components/schemas/CdStage'\n        postStage:\n          $ref: '#/components/schemas/CdStage'\n        preStageConfigMapSecretNames:\n          $ref: '#/components/schemas/CdStageConfigMapSecretNames'\n        postStageConfigMapSecretNames:\n          $ref: '#/components/schemas/CdStageConfigMapSecretNames'\n        runPreStageInEnv:\n          type: boolean\n        runPostStageInEnv:\n          type: boolean\n        isClusterCdActive:\n          type: boolean\n    DeploymentStrategy:\n      type: object\n      properties:\n        deploymentType:\n          type: string\n        isDefault:\n          type: boolean\n        config:\n          type: array\n          items:\n            type: object\n            properties:\n              Key:\n                type: string\n              Values:\n                type: object\n                description: interface{}\n    CdStage:\n      type: object\n      properties:\n        name:\n          type: string\n        triggerType:\n          type: string\n        config:\n          type: string\n    CdStageConfigMapSecretNames:\n      type: object\n      properties:\n        configMaps:\n          type: array\n          items:\n            properties:\n              ConfigMap:\n                type: string\n        secrets:\n          type: array\n          items:\n            properties:\n              Secret:\n                type: string\n    ConfigMap:\n      type: object\n      properties:\n        name:\n          type: string\n        isExtetrnal:\n          type: boolean\n        usageType:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              Key:\n                type: string\n              Values:\n                type: object\n                description: interface{}\n        dataVolumeUsageConfig:\n          $ref: '#/components/schemas/ConfigMapSecretDataVolumeUsageConfig'\n    Secret:\n      type: object\n      properties:\n        name:\n          type: string\n        isExternal:\n          type: boolean\n        externalType:\n          type: string\n        roleArn:\n          type: string\n        usageType:\n          type: string\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              Key:\n                type: string\n              Values:\n                type: object\n                description: interface{}\n        dataVolumeUsageConfig:\n          $ref: '#/components/schemas/ConfigMapSecretDataVolumeUsageConfig'\n        externalSecretData:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExternalSecret'\n    ConfigMapSecretDataVolumeUsageConfig:\n      type: object\n      properties:\n        mountPath:\n          type: string\n        subPath:\n          type: boolean\n        filePermission:\n          type: string\n    ExternalSecret:\n      type: object\n      properties:\n        key:\n          type: string\n        name:\n          type: string\n        property:\n          type: string\n        isBinary:\n          type: boolean\n    EnvironmentOverride:\n      type: object\n      properties:\n        deploymentTemplate:\n          $ref: '#/components/schemas/DeploymentTemplate'\n        configMaps:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConfigMap'\n        secrets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Secret'\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: Error code\n        message:\n          type: string\n          description: Error message",
			"canonicalURL": "/github.com/devtron-labs/devtron@62f6101b37819e1ac319a744bbf3438184f0c8d5/-/blob/specs/app_create_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/devtron-labs/devtron/blob/62f6101b37819e1ac319a744bbf3438184f0c8d5/specs/app_create_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}