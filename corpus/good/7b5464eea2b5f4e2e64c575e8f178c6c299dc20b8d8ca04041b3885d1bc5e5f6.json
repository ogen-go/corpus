{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oracle-quickstart/oci-cloudnative"
		},
		"file": {
			"name": "user-api.yaml",
			"size": 0,
			"path": "src/user/api-spec/user-api.yaml",
			"byteSize": 15154,
			"content": "openapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: User Service\n  description: 'Provide Customer login, register, retrieval, as well as card and address retrieval.'\n  license:\n    name: UPL-1.0\n    url: https://github.com/oracle/oci-quickstart-cloudnative/blob/master/LICENSE\nexternalDocs:\n  description: Find out more about MuShop\n  url: https://oracle-quickstart.github.io/oci-cloudnative/\nservers:\n- url: http://localhost:8080\n- url: https://mushop_basic_lb_host/api\n- url: https://mushop.ateam.cloud/api\ntags:\n- name: User\n  description: Login, Registration, Cards and Addresses\n  externalDocs:\n    description: Find out more\n    url: https://github.com/oracle-quickstart/oci-cloudnative/tree/master/src/user\npaths:\n  /login:\n    get:\n      tags:\n      - User\n      summary: Logged user details\n      description: Return logged in user with details\n      operationId: getLogin\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/customerDetail'\n  /register:\n    post:\n      tags:\n      - User\n      summary: Register new user\n      description: Register a new user and Returns confirmation\n      operationId: setUser\n      requestBody:\n        description: Request to register a new user\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/registerUser'\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/postResponse'\n  /customers:\n    get:\n      tags:\n      - User\n      summary: Get Customers details\n      description: Returns all customers with details\n      operationId: listCustomers\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/customerDetail'\n\n  /customers/{id}:\n    get:\n      tags:\n      - User\n      summary: Get customer by ID\n      description: Returns a single customer\n      operationId: getCustomerById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830af\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/customerDetail'\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Customer not found\n          content: {}\n    delete:\n      tags:\n      - User\n      summary: Delete customer by ID\n      description: Deletes a single customer\n      operationId: deleteCustomerById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830b5\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/deleteResponse'\n  /customers/{id}/cards:\n    get:\n      tags:\n      - User\n      summary: Get customer cards by ID\n      description: Returns cards from a single customer\n      operationId: getCustomerCardsById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830af\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/cards'\n  /customers/{id}/addresses:\n    get:\n      tags:\n      - User\n      summary: Get customer addresses by ID\n      description: Returns addresses from a single customer\n      operationId: getCustomerAddressesById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830af\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/addresses'\n  /cards:\n    get:\n      tags:\n      - User\n      summary: Get all customer cards\n      description: Returns all cards\n      operationId: getAllCustomerCards\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/cards'\n    post:\n      tags:\n      - User\n      summary: Creates new card\n      description: Creates a New Card and Returns confirmation\n      operationId: setCard\n      requestBody:\n        description: Request to create a new card\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createCard'\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/postResponse'\n  /cards/{id}:\n    get:\n      tags:\n      - User\n      summary: Get cards by ID\n      description: Returns a card\n      operationId: getCardById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830ae\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/cardDetail'\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Card not found\n          content: {}\n    delete:\n      tags:\n      - User\n      summary: Delete card by ID\n      description: Deletes card\n      operationId: deleteCardById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830ae\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/deleteResponse'\n  /addresses:\n    get:\n      tags:\n      - User\n      summary: Get all addresses\n      description: Returns all customer addresses\n      operationId: getAllCustomerAddresses\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/cards'\n    post:\n      tags:\n      - User\n      summary: Creates new address\n      description: Creates a New Address and Returns confirmation\n      operationId: setAddress\n      requestBody:\n        description: Request to create a new address\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/createAddress'\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/postResponse'\n  /addresses/{id}:\n    get:\n      tags:\n      - User\n      summary: Get addresses by ID\n      description: Returns address\n      operationId: getAddressById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830ae\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/addressDetail'\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Address not found\n          content: {}\n    delete:\n      tags:\n      - User\n      summary: Delete address by ID\n      description: Deletes address\n      operationId: deleteAddressdById\n      parameters:\n      - name: id\n        in: path\n        description: ID of customer to return\n        required: true\n        schema:\n            type: string\n            example: 57a98d98e4b00679b4a830ae\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/deleteResponse'\n\n\ncomponents:\n  schemas:\n    customerDetail:\n        type: object\n        properties:\n            firstName:\n                type: string\n            lastName:\n                type: string\n            username:\n                type: string\n            _links:\n                type: object\n                properties:\n                    self:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                    customer:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                    addresses:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                    cards:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                required:\n                - self\n                - customer\n        required:\n        - firstName\n        - lastName\n        - username\n        - _links\n    registerUser:\n        title: Register\n        type: object\n        properties:\n            username:\n                description: Username\n                type: string\n            password:\n                description: Password\n                type: string\n            email:\n                description: Email\n                type: string\n        required:\n        - username\n        - password\n    postResponse:\n        title: Post status response\n        type: object\n        properties:\n            id:\n                type: string\n        required:\n        - id\n    deleteResponse:\n        title: Delete status response\n        type: object\n        properties:\n            status:\n                type: string\n        required:\n        - status\n    cardDetail:\n        type: object\n        properties:\n            longNum:\n                type: string\n            expires:\n                type: string\n            ccv:\n                type: string\n            _links:\n                type: object\n                properties:\n                    self:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                    card:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                required:\n                - self\n                - card\n        required:\n        - longNum\n        - expires\n        - ccv\n        - _links\n    cards:\n        title: Get cards response\n        type: object\n        properties:\n            _embedded:\n                type: object\n                properties:\n                    card:\n                        type: array\n                        items:\n                        $ref: '#/components/schemas/cardDetail'\n            _links:\n                type: object\n            page:\n                type: object\n        required:\n        - _embedded\n    addressDetail:\n        type: object\n        properties:\n            number:\n                type: string\n            street:\n                type: string\n            city:\n                type: string\n            postcode:\n                type: string\n            country:\n                type: string\n            _links:\n                type: object\n                properties:\n                    self:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                    address:\n                        type: object\n                        properties:\n                            href:\n                                type: string\n                        required:\n                        - href\n                required:\n                - self\n                - address\n        required:\n        - number\n        - street\n        - city\n        - postcode\n        - country\n        - _links\n    addresses:\n        title: Get cards response\n        type: object\n        properties:\n            _embedded:\n                type: object\n                properties:\n                    card:\n                        type: array\n                        items:\n                        $ref: '#/components/schemas/addressDetail'\n            _links:\n                type: object\n            page:\n                type: object\n        required:\n        - _embedded\n    createCard:\n        title: Post Card\n        type: object\n        properties:\n            longNum:\n                description: Credit card number\n                type: string\n            expires:\n                description: Card expiration\n                type: string\n            ccv:\n                description: Card ccv\n                type: string\n            userID:\n                description: User to attach this card to.\n                type: string\n    createAddress:\n        title: Post Address\n        type: object\n        properties:\n            street:\n                type: string\n            number:\n                type: string\n            country:\n                type: string\n            city:\n                type: string\n            postcode:\n                type: string\n            userID:\n                description: User to attach this card to.\n                type: string\n\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n\nsecurity:\n    - {}\n    - BasicAuth: []",
			"canonicalURL": "/github.com/oracle-quickstart/oci-cloudnative@8fb9b9151eedad0dad06706cbc4d974ce51bab0a/-/blob/src/user/api-spec/user-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/oracle-quickstart/oci-cloudnative/blob/8fb9b9151eedad0dad06706cbc4d974ce51bab0a/src/user/api-spec/user-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}