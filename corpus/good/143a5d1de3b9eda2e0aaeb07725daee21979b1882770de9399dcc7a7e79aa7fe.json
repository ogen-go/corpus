{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lowes/auditor"
		},
		"file": {
			"name": "auditor-v1-entities.yaml",
			"size": 0,
			"path": "specs/auditor-v1-entities.yaml",
			"byteSize": 10668,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    Auditor-v1 Entities. Refer [here](//todo) for more information\n    This document contains `Entities` for auditor-v1 api.\n    When [3.1.0](https://github.com/OAI/OpenAPI-Specification/releases/tag/3.1.0-rc1) gets released, paths will become optional.\n    Hence Paths, Request, Response, Errors components can be removed thereafter.\n  version: 1.0.0\n  title: Auditor-v1 Entities\n  contact:\n    email: lowesopensource@lowes.com\n    name: Lowe's Companies, Inc.\ntags: []\n### When [3.1.0](https://github.com/OAI/OpenAPI-Specification/releases/tag/3.1.0-rc1) gets released, paths will become optional\npaths:\n  /logs:\n    post:\n      tags:\n        - Logs\n      summary: Filter logs by request body parameters\n      description: 'Fetch audit logs by request body parameters'\n      operationId: Fetch audit logs\n      parameters:\n        - name: X-Application-Name\n          in: header\n          description: application name that is calling the auditor api\n          required: true\n          explode: true\n          schema:\n            type: string\n          deprecated: false\n        - name: X-Request-Id\n          in: header\n          description: Unique request id tied to request\n          schema:\n            type: string\n            format: uuid\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuditEventLogRequest'\n      responses:\n        '200':\n          description: Fetches and displays the audit event log\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuditEventLogResponse'\n        '400':\n          description: Bad request error like REQUEST_VALIDATION_ERROR\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: Unauthorized error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          description: Not found error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '424':\n          description: Dependent service error like INFRASTRUCTURE_ERROR\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '500':\n          description: Internal server error like UNHANDLED_ERROR\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\nexternalDocs:\n  url: '//todo'\n\ncomponents:\n  schemas:\n    AuditEventLogRequest:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EventIdRequest'\n        applicationName:\n          $ref: '#/components/schemas/SourceApplicationNameRequest'\n        timestamp:\n          $ref: '#/components/schemas/EventTimeStampRequest'\n        type:\n          $ref: '#/components/schemas/EventTypeRequest'\n        subType:\n          $ref: '#/components/schemas/EventSubTypeRequest'\n        source:\n          $ref: '#/components/schemas/EventSourceRequest'\n        metadata:\n          $ref: '#/components/schemas/EventMetadataRequest'\n      required:\n        - id\n        - applicationName\n        - timestamp\n        - type\n        - source\n    AuditEventLogResponse:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EventIdResponse'\n        applicationName:\n          $ref: '#/components/schemas/SourceApplicationNameResponse'\n        timestamp:\n          $ref: '#/components/schemas/EventTimeStampResponse'\n        type:\n          $ref: '#/components/schemas/EventTypeResponse'\n        subType:\n          $ref: '#/components/schemas/EventSubTypeResponse'\n        source:\n          $ref: '#/components/schemas/EventSourceResponse'\n        metadata:\n          $ref: '#/components/schemas/EventMetadataResponse'\n        elements:\n          $ref: '#/components/schemas/ElementsResponse'\n        log:\n          $ref: '#/components/schemas/EvenLogResponse'\n      required:\n        - id\n        - applicationName\n        - timestamp\n        - type\n        - source\n\n    EventIdRequest:\n      $ref: '#/components/schemas/EventId'\n    SourceApplicationNameRequest:\n      $ref: '#/components/schemas/SourceApplicationName'\n    EventTimeStampRequest:\n      $ref: '#/components/schemas/EventTimeStamp'\n    EventTypeRequest:\n      $ref: '#/components/schemas/EventType'\n    EventSubTypeRequest:\n      $ref: '#/components/schemas/EventSubType'\n    EventSourceRequest:\n      $ref: '#/components/schemas/EventSource'\n    EventMetadataRequest:\n      $ref: '#/components/schemas/EventMetadata'\n\n    EventIdResponse:\n      $ref: '#/components/schemas/EventId'\n    SourceApplicationNameResponse:\n      $ref: '#/components/schemas/SourceApplicationName'\n    EventTimeStampResponse:\n      $ref: '#/components/schemas/EventTimeStamp'\n    EventTypeResponse:\n      $ref: '#/components/schemas/EventType'\n    EventSubTypeResponse:\n      $ref: '#/components/schemas/EventSubType'\n    EventSourceResponse:\n      $ref: '#/components/schemas/EventSource'\n    EventMetadataResponse:\n      $ref: '#/components/schemas/EventMetadata'\n    ElementsResponse:\n      $ref: '#/components/schemas/Elements'\n    EvenLogResponse:\n      $ref: '#/components/schemas/EventLog'\n\n    AuditEvent:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EventId'\n        applicationName:\n          $ref: '#/components/schemas/SourceApplicationName'\n        timestamp:\n          $ref: '#/components/schemas/EventTimeStamp'\n        type:\n          $ref: '#/components/schemas/EventType'\n        subType:\n          $ref: '#/components/schemas/EventSubType'\n        source:\n          $ref: '#/components/schemas/EventSource'\n        metadata:\n          $ref: '#/components/schemas/EventMetadata'\n        elements:\n          $ref: '#/components/schemas/Elements'\n        log:\n          $ref: '#/components/schemas/EventLog'\n      required:\n        - id\n        - applicationName\n        - timestamp\n        - type\n        - source\n\n    EventId:\n      type: string\n      format: uuid\n      description: Transaction ID of the audit event\n    SourceApplicationName:\n      type: string\n      description: Name of the Application generating the audit event\n    EventTimeStamp:\n      type: string\n      format: date-time\n      description: UTC timestamp of the audit event\n    EventType:\n      type: string\n      description: Type of the audit event\n      enum:\n        - CREATED\n        - UPDATED\n        - DELETED\n      default: UPDATED\n    EventSubType:\n      type: string\n      description: subtype of the audit event, a free form field. Additional type metadata that can be used to query the specific the event.\n    EventSource:\n      type: object\n      description: Details of the source who created the event.\n      properties:\n        type:\n          $ref: '#/components/schemas/EventSourceType'\n        metadata:\n          $ref: '#/components/schemas/EventSourceMetadata'\n      required:\n        - type\n    EventSourceType:\n      type: string\n      description: Source type of the audit event\n      enum:\n        - SYSTEM\n        - USER\n    EventSourceMetadata:\n      type: object\n      description: a map of the metadata describing source of the event\n      properties:\n        id:\n          type: string\n          description: id of the system/user causing the event (if available)\n        email:\n          type: string\n          description: email of the sysem/user causing the event (if available)\n        name:\n          type: string\n          description: name of the system/user causing the event (if available)\n    EventMetadata:\n      type: object\n      description: a free form map of the event metadata\n      additionalProperties:\n        type: string\n    Elements:\n      type: array\n      description: an array containing all elements constituting the audit event\n      items:\n        $ref: '#/components/schemas/Element'\n    Element:\n      type: object\n      description: Each individual element constituting the audit event\n      properties:\n        name:\n          type: string\n          description: Name of the element (attribute/items) that is created/updated/deleted\n        updatedValue:\n          type: string\n          description: new value of the element (if available)\n        previousValue:\n          type: string\n          description: old value of the element (if available)\n        metadata:\n          $ref: '#/components/schemas/ElementMetadata'\n    ElementMetadata:\n      type: object\n      description: a map of the metadata describing element.\n      properties:\n        fqdn:\n          type: string\n          description: fully qualified domain name of the attribute/item containing domain and subdomain, separated by a dot.\n        identifiers:\n          $ref: '#/components/schemas/ElementIdentifiers'\n    ElementIdentifiers:\n      type: object\n      description: free form map to uniquely identify each domain under which the attribute/item  belongs.\n      additionalProperties:\n        type: string\n    EventLog:\n      type: string\n      description: Captures the textual representation of the entity being logged\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: 'All possible Error codes'\n          enum:\n            - REQUEST_VALIDATION_ERROR\n            - UNAUTHORIZED_ERROR\n            - INFRASTRUCTURE_ERROR\n            - UNHANDLED_ERROR\n          default:\n            UNHANDLED_ERROR\n        message:\n          type: string\n          description: 'Human readable error message'\n        errors:\n          type: array\n          description: 'All possible Errors/Exception that led to the gven error'\n          items:\n            type: object\n            properties:\n              reason:\n                type: string\n                description: 'All possible reason for each error'\n                enum:\n                  - REQUIRED_FIELD\n                  - INVALID_FORMAT\n              element:\n                type: string\n                description: 'An option element for each error, like field name for REQUEST_VALIDATION_ERROR'\n              message:\n                type: string\n                description: 'Human readable error message'\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-Application-Key\n\nsecurity:\n  - ApiKeyAuth: []",
			"canonicalURL": "/github.com/lowes/auditor@9d242d195b79bf43477f3bcb7de2b2f23b9ec8ad/-/blob/specs/auditor-v1-entities.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/lowes/auditor/blob/9d242d195b79bf43477f3bcb7de2b2f23b9ec8ad/specs/auditor-v1-entities.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}