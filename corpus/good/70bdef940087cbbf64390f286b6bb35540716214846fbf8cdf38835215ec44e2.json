{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "repo_reactions.yaml",
			"size": 0,
			"path": "providers/src/github/v0.2.0/services/repo_reactions.yaml",
			"byteSize": 41885,
			"content": "paths:\n  /repos/{owner}/{repo}/comments/{comment_id}/reactions:\n    get:\n      summary: List reactions for a commit comment\n      description: List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments).\n      tags:\n        - reactions\n      operationId: reactions/list-for-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#list-reactions-for-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - name: content\n          description: Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a commit comment.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - '+1'\n              - '-1'\n              - laugh\n              - confused\n              - heart\n              - hooray\n              - rocket\n              - eyes\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n    post:\n      summary: Create reaction for a commit comment\n      description: Create a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.\n      tags:\n        - reactions\n      operationId: reactions/create-for-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#create-reaction-for-a-commit-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n                  description: The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the commit comment.\n                  enum:\n                    - '+1'\n                    - '-1'\n                    - laugh\n                    - confused\n                    - heart\n                    - hooray\n                    - rocket\n                    - eyes\n              required:\n                - content\n            example:\n              content: heart\n      responses:\n        '200':\n          description: Reaction exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '201':\n          description: Reaction created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '415':\n          $ref: '#/components/responses/preview_header_missing'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}:\n    delete:\n      summary: Delete a commit comment reaction\n      description: |-\n        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.\n\n        Delete a reaction to a [commit comment](https://docs.github.com/rest/reference/repos#comments).\n      tags:\n        - reactions\n      operationId: reactions/delete-for-commit-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#delete-a-commit-comment-reaction\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - $ref: '#/components/parameters/reaction-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions:\n    get:\n      summary: List reactions for an issue comment\n      description: List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments).\n      tags:\n        - reactions\n      operationId: reactions/list-for-issue-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#list-reactions-for-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - name: content\n          description: Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue comment.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - '+1'\n              - '-1'\n              - laugh\n              - confused\n              - heart\n              - hooray\n              - rocket\n              - eyes\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n    post:\n      summary: Create reaction for an issue comment\n      description: Create a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments). A response with an HTTP `200` status means that you already added the reaction type to this issue comment.\n      tags:\n        - reactions\n      operationId: reactions/create-for-issue-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#create-reaction-for-an-issue-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n                  description: The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue comment.\n                  enum:\n                    - '+1'\n                    - '-1'\n                    - laugh\n                    - confused\n                    - heart\n                    - hooray\n                    - rocket\n                    - eyes\n              required:\n                - content\n            example:\n              content: heart\n      responses:\n        '200':\n          description: Reaction exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '201':\n          description: Reaction created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}:\n    delete:\n      summary: Delete an issue comment reaction\n      description: |-\n        **Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.\n\n        Delete a reaction to an [issue comment](https://docs.github.com/rest/reference/issues#comments).\n      tags:\n        - reactions\n      operationId: reactions/delete-for-issue-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#delete-an-issue-comment-reaction\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - $ref: '#/components/parameters/reaction-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/issues/{issue_number}/reactions:\n    get:\n      summary: List reactions for an issue\n      description: List the reactions to an [issue](https://docs.github.com/rest/reference/issues).\n      tags:\n        - reactions\n      operationId: reactions/list-for-issue\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#list-reactions-for-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - name: content\n          description: Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to an issue.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - '+1'\n              - '-1'\n              - laugh\n              - confused\n              - heart\n              - hooray\n              - rocket\n              - eyes\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n        '410':\n          $ref: '#/components/responses/gone'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n    post:\n      summary: Create reaction for an issue\n      description: Create a reaction to an [issue](https://docs.github.com/rest/reference/issues/). A response with an HTTP `200` status means that you already added the reaction type to this issue.\n      tags:\n        - reactions\n      operationId: reactions/create-for-issue\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#create-reaction-for-an-issue\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n                  description: The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the issue.\n                  enum:\n                    - '+1'\n                    - '-1'\n                    - laugh\n                    - confused\n                    - heart\n                    - hooray\n                    - rocket\n                    - eyes\n              required:\n                - content\n            example:\n              content: heart\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}:\n    delete:\n      summary: Delete an issue reaction\n      description: |-\n        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.\n\n        Delete a reaction to an [issue](https://docs.github.com/rest/reference/issues/).\n      tags:\n        - reactions\n      operationId: reactions/delete-for-issue\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#delete-an-issue-reaction\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/issue-number'\n        - $ref: '#/components/parameters/reaction-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions:\n    get:\n      summary: List reactions for a pull request review comment\n      description: List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).\n      tags:\n        - reactions\n      operationId: reactions/list-for-pull-request-review-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#list-reactions-for-a-pull-request-review-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - name: content\n          description: Returns a single [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a pull request review comment.\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - '+1'\n              - '-1'\n              - laugh\n              - confused\n              - heart\n              - hooray\n              - rocket\n              - eyes\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n    post:\n      summary: Create reaction for a pull request review comment\n      description: Create a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#comments). A response with an HTTP `200` status means that you already added the reaction type to this pull request review comment.\n      tags:\n        - reactions\n      operationId: reactions/create-for-pull-request-review-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#create-reaction-for-a-pull-request-review-comment\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n                  description: The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the pull request review comment.\n                  enum:\n                    - '+1'\n                    - '-1'\n                    - laugh\n                    - confused\n                    - heart\n                    - hooray\n                    - rocket\n                    - eyes\n              required:\n                - content\n            example:\n              content: heart\n      responses:\n        '200':\n          description: Reaction exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '201':\n          description: Reaction created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}:\n    delete:\n      summary: Delete a pull request comment reaction\n      description: |-\n        **Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`\n\n        Delete a reaction to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).\n      tags:\n        - reactions\n      operationId: reactions/delete-for-pull-request-comment\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions#delete-a-pull-request-comment-reaction\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/comment-id'\n        - $ref: '#/components/parameters/reaction-id'\n      responses:\n        '204':\n          description: Response\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\n  /repos/{owner}/{repo}/releases/{release_id}/reactions:\n    post:\n      summary: Create reaction for a release\n      description: 'Create a reaction to a [release](https://docs.github.com/rest/reference/repos#releases). A response with a `Status: 200 OK` means that you already added the reaction type to this release.'\n      tags:\n        - reactions\n      operationId: reactions/create-for-release\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/reactions/#create-reaction-for-a-release\n      parameters:\n        - $ref: '#/components/parameters/owner'\n        - $ref: '#/components/parameters/repo'\n        - $ref: '#/components/parameters/release-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                content:\n                  type: string\n                  description: The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the release.\n                  enum:\n                    - '+1'\n                    - laugh\n                    - heart\n                    - hooray\n                    - rocket\n                    - eyes\n              required:\n                - content\n            example:\n              content: heart\n      responses:\n        '200':\n          description: Reaction exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '201':\n          description: Reaction created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/reaction'\n              examples:\n                default:\n                  $ref: '#/components/examples/reaction'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: true\n        category: reactions\n        subcategory: null\ncomponents:\n  schemas:\n    reaction:\n      title: Reaction\n      description: Reactions to conversations provide a way to help people express their feelings more simply and effectively.\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDg6UmVhY3Rpb24x\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        content:\n          description: The reaction to use\n          example: heart\n          type: string\n          enum:\n            - '+1'\n            - '-1'\n            - laugh\n            - confused\n            - heart\n            - hooray\n            - rocket\n            - eyes\n        created_at:\n          type: string\n          format: date-time\n          example: '2016-05-20T20:09:31Z'\n      required:\n        - id\n        - node_id\n        - user\n        - content\n        - created_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n  parameters:\n    owner:\n      name: owner\n      in: path\n      required: true\n      schema:\n        type: string\n    repo:\n      name: repo\n      in: path\n      required: true\n      schema:\n        type: string\n    comment-id:\n      name: comment_id\n      description: comment_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    reaction-id:\n      name: reaction_id\n      in: path\n      required: true\n      schema:\n        type: integer\n    issue-number:\n      name: issue_number\n      description: issue_number parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    release-id:\n      name: release_id\n      description: release_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n  responses:\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    preview_header_missing:\n      description: Preview header missing\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - message\n              - documentation_url\n            properties:\n              message:\n                type: string\n              documentation_url:\n                type: string\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n    gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    reaction-items:\n      value:\n        - id: 1\n          node_id: MDg6UmVhY3Rpb24x\n          user:\n            login: octocat\n            id: 1\n            node_id: MDQ6VXNlcjE=\n            avatar_url: https://github.com/images/error/octocat_happy.gif\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: false\n          content: heart\n          created_at: '2016-05-20T20:09:31Z'\n    reaction:\n      value:\n        id: 1\n        node_id: MDg6UmVhY3Rpb24x\n        user:\n          login: octocat\n          id: 1\n          node_id: MDQ6VXNlcjE=\n          avatar_url: https://github.com/images/error/octocat_happy.gif\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: false\n        content: heart\n        created_at: '2016-05-20T20:09:31Z'\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    repos_comments_reactions:\n      id: github.repo_reactions.repos_comments_reactions\n      name: repos_comments_reactions\n      title: Repos_comments_reactions\n      methods:\n        list_for_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}~1reactions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}~1reactions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_for_commit_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1comments~1{comment_id}~1reactions~1{reaction_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_comments_reactions/methods/list_for_commit_comment'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_comments_reactions/methods/create_for_commit_comment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos_comments_reactions/methods/delete_for_commit_comment'\n    repos_issues_comments_reactions:\n      id: github.repo_reactions.repos_issues_comments_reactions\n      name: repos_issues_comments_reactions\n      title: Repos_issues_comments_reactions\n      methods:\n        list_for_issue_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}~1reactions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_issue_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}~1reactions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_for_issue_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1comments~1{comment_id}~1reactions~1{reaction_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_comments_reactions/methods/list_for_issue_comment'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_comments_reactions/methods/create_for_issue_comment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_comments_reactions/methods/delete_for_issue_comment'\n    repos_issues_reactions:\n      id: github.repo_reactions.repos_issues_reactions\n      name: repos_issues_reactions\n      title: Repos_issues_reactions\n      methods:\n        list_for_issue:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1reactions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_issue:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1reactions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_for_issue:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1issues~1{issue_number}~1reactions~1{reaction_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_reactions/methods/list_for_issue'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_reactions/methods/create_for_issue'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos_issues_reactions/methods/delete_for_issue'\n    repos_pulls_comments_reactions:\n      id: github.repo_reactions.repos_pulls_comments_reactions\n      name: repos_pulls_comments_reactions\n      title: Repos_pulls_comments_reactions\n      methods:\n        list_for_pull_request_review_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pulls~1comments~1{comment_id}~1reactions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_for_pull_request_review_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pulls~1comments~1{comment_id}~1reactions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        delete_for_pull_request_comment:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pulls~1comments~1{comment_id}~1reactions~1{reaction_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/repos_pulls_comments_reactions/methods/list_for_pull_request_review_comment'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_pulls_comments_reactions/methods/create_for_pull_request_review_comment'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/repos_pulls_comments_reactions/methods/delete_for_pull_request_comment'\n    repos_releases_reactions:\n      id: github.repo_reactions.repos_releases_reactions\n      name: repos_releases_reactions\n      title: Repos_releases_reactions\n      methods:\n        create_for_release:\n          operation:\n            $ref: '#/paths/~1repos~1{owner}~1{repo}~1releases~1{release_id}~1reactions/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n      sqlVerbs:\n        select: []\n        insert:\n          - $ref: '#/components/x-stackQL-resources/repos_releases_reactions/methods/create_for_release'\n        update: []\n        delete: []\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - repo_reactions\n  description: Interact with reactions to various GitHub entities.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.2.0/services/repo_reactions.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.2.0/services/repo_reactions.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}