{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/snowplow/snowplow-mini"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "provisioning/resources/configs/openapi.yaml",
			"byteSize": 11456,
			"content": "openapi: \"3.0.3\"\ninfo:\n  title: \"Snowplow Mini\"\n  description: |\n    Snowplow Mini is a small, single instance version of Snowplow that primarily serves as a development sandbox which gives you a quick way to debug tracker updates and changes to your schema and pipeline configuration.\n  version: \"0.14.1\"\n  license:\n    name: \"Apache 2.0\"\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\ntags:\n- name: \"configuration\"\n  description: \"Configure the services running on your Mini\"\n  #externalDocs:\n  #  description: \"Find out more\"\n  #  url: \"http://swagger.io\"\n- name: \"actions\"\n  description: \"Actions to take on your Mini's running services\"\n- name: \"meta\"\n\nservers:\n- url: \"/control-plane\"\n\nsecurity:\n- basic: []\n#schemes:\n#- \"https\"\n#- \"http\"\npaths:\n  /enrichments:\n    post:\n      tags:\n      - \"configuration\"\n      summary: \"Upload enrichment configuration\"\n      description: \"Upload enrichment json file to enrichments directory and restart the enrich service to activate the new enrichment.\"\n      operationId: \"uploadEnrichments\"\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required: [\"enrichmentjson\"]\n              properties:\n                enrichmentjson:\n                  type: string\n                  description: A file containing the enrichment JSON\n                  format: binary\n      responses:\n        \"200\":\n          description: \"The enrichment configuration has been placed in the enrichments directory and the enrich service has been restarted\"\n        \"401\":\n          description: \"Unauthorized\"\n  /iglu-config:\n    post:\n      tags:\n      - \"configuration\"\n      summary: \"Upload Iglu Server configuration\"\n      description: \"Upload Iglu Server configuration file and restart Iglu Server to activate the new configuration.\"\n      operationId: \"uploadIgluConfig\"\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required: [\"igluserverhocon\"]\n              properties:\n                igluserverhocon:\n                  type: string\n                  description: A file containing the configuration HOCON\n                  format: binary\n      responses:\n        \"200\":\n          description: \"The configuration has been uploaded and the Iglu Server has been restarted\"\n        \"401\":\n          description: \"Unauthorized\"\n  /external-iglu:\n    put:\n      tags:\n      - \"configuration\"\n      summary: \"Amend Enrich's Iglu resolver with external Iglu details\"\n      description: \"Adds given pieces of information about an external Iglu Server to the Iglu Resolver JSON file used by Enrich\"\n      operationId: \"addExternalIgluServer\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"vendor_prefix\", \"uri\", \"name\", \"priority\"]\n              properties:\n                vendor_prefix:\n                  description: \"Schema vendor prefixes for which this external Iglu should be prioritized\"\n                  type: string\n                  example: \"com.snowplowanalytics\"\n                uri:\n                  description: \"Location of the external Iglu server\"\n                  type: \"string\"\n                  format: \"uri\"\n                  example: \"https://\u003cyour-domain\u003e\"\n                apiKey:\n                  description: \"Api Key for authorization to the Iglu Server\"\n                  type: \"string\"\n                name:\n                  description: \"Name to use for this Iglu server\"\n                  example: \"my custom iglu\"\n                  type: \"string\"\n                priority:\n                  description: \"Priority of this Iglu server used during schema resolution\"\n                  type: \"number\"\n                  example: 100\n      responses:\n        \"200\":\n          description: \"Iglu Server configuration has been added to Iglu resolver, and Enrich has been restarted successfully.\"\n        \"401\":\n          description: \"Unauthorized\"\n  /local-iglu-apikey:\n    post:\n      tags:\n      - \"configuration\"\n      summary: \"Amend Enrich's Iglu resolver with local Iglu api key\"\n      description: \"Adds api key for the local Iglu Server to the Iglu resolver JSON file used by Enrich\"\n      operationId: \"addLocalIgluApiKey\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"local_iglu_apikey\"]\n              properties:\n                local_iglu_apikey:\n                  description: \"Api key of the local Iglu Server\"\n                  type: string\n                  format: \"uuid\"\n      responses:\n        \"200\":\n          description: \"Iglu Server configuration has been added to Iglu resolver, and Enrich has been restarted successfully.\"\n        \"401\":\n          description: \"Unauthorized\"\n  /credentials:\n    post:\n      tags:\n      - \"configuration\"\n      summary: \"Reset the admin credentials\"\n      description: \"Reset the Mini admin's username and password\"\n      operationId: \"changeUsernameAndPassword\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"new_username\", \"new_password\"]\n              properties:\n                new_username:\n                  description: \"New username for the Mini admin\"\n                  type: \"string\"\n                new_password:\n                  description: \"New password for the Mini admin\"\n                  type: \"string\"\n      responses:\n        \"200\":\n          description: \"The Mini admin username and password have been reset\"\n        \"401\":\n          description: \"Unauthorized\"\n  /domain-name:\n    post:\n      tags:\n      - \"configuration\"\n      summary: \"Secure Mini with a TLS certificate on this domain\"\n      description: \"Adds domain name for your Snowplow Mini.  After adding the domain name, your http listener will be secured with TLS.  Make sure that the given domain name is resolving to the Snowplow Mini instance IP address. This feature only works if Mini is running on a AWS EC2 instance with a public IP address.\"\n      operationId: \"addDomainName\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"domain_name\"]\n              properties:\n                domain_name:\n                  description: \"The domain name that resolves to your Mini\"\n                  type: \"string\"\n      responses:\n        \"default\":\n          description: \"You will always get empty reply from the server because Caddy server will be restarted after the domain name is submitted, and the connection will be lost until Caddy server is back up and running.\"\n        \"401\":\n          description: \"Unauthorized\"\n  /telemetry:\n    get:\n      tags:\n      - \"configuration\"\n      summary: \"Get the current telemetry configuration\"\n      description: \"Discover whether [Snowplow telemetry](https://docs.snowplowanalytics.com/docs/open-source-quick-start/what-is-the-quick-start-for-open-source/telemetry-principles/) is currently turned on or off\"\n      operationId: \"getTelemetry\"\n      responses:\n        \"200\":\n          description: \"The current telemetry configuration\"\n        \"401\":\n          description: \"Unauthorized\"\n    put:\n      tags:\n      - \"configuration\"\n      summary: \"Change the telemetry configuration\"\n      description: \"Set whether [Snowplow telemetry](https://docs.snowplowanalytics.com/docs/open-source-quick-start/what-is-the-quick-start-for-open-source/telemetry-principles/) is turned on or off\"\n      operationId: \"setTelemetry\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"disable\"]\n              properties:\n                disable:\n                  description: \"Whether to disable telemetry\"\n                  type: \"boolean\"\n      responses:\n        \"200\":\n          description: \"Telemetry has been reconfigured\"\n        \"401\":\n          description: \"Unauthorized\"\n      \n      \n      \n      \n  /restart-services:\n    put:\n      tags:\n      - \"actions\"\n      summary: \"Restart all services running on the Snowplow Mini\"\n      description: \"Restarted services include the collector, enrich, and elasticsearch loaders.  This API call blocks until all the services have been restarted.\"\n      operationId: \"restartServices\"\n      responses:\n        \"200\":\n          description: \"Services have been restarted\"\n        \"401\":\n          description: \"Unauthorized\"\n  /restart-service:\n    put:\n      tags:\n      - \"actions\"\n      summary: \"Restart a service running on the Snowplow Mini\"\n      description: \"Restart a single service, such as the collector, enrich, or elasticsearch loaders.  This API call blocks until the service has been restarted.\"\n      operationId: \"restartService\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"service_name\"]\n              properties:\n                service_name:\n                  description: \"The service to be restarted\"\n                  type: string\n                  enum:\n                  - \"collector\"\n                  - \"enrich\"\n                  - \"esLoaderGood\"\n                  - \"esLoaderBad\"\n                  - \"iglu\"\n                  - \"kibana\"\n                  - \"elasticsearch\"\n                  - \"caddy\"\n      responses:\n        \"200\":\n          description: \"Service has been restarted\"\n        \"401\":\n          description: \"Unauthorized\"\n  /reset-service:\n    post:\n      tags:\n      - \"actions\"\n      summary: \"Reset Elasticsearch indices\"\n      description: \"It is possible to reset Elasticsearch indices, along with the corresponding index patterns in Kibana. Note, this action deletes not only indices and patterns, but also all events stored in Elasticsearch so far.\"\n      operationId: \"resetService\"\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required: [\"service_name\"]\n              properties:\n                service_name:\n                  description: \"The service to be reset\"\n                  type: string\n                  enum:\n                  - \"elasticsearch\"\n      responses:\n        \"200\":\n          description: \"Service has been reset\"\n        \"401\":\n          description: \"Unauthorized\"\n  /version:\n    get:\n      tags:\n      - \"meta\"\n      summary: \"Snowplow Mini version\"\n      description: \"Snowplow Mini version\"\n      operationId: \"version\"\n      responses:\n        \"200\":\n          description: \"The Snowplow Mini version number\"\n        \"401\":\n          description: \"Unauthorized\"\ncomponents:\n  securitySchemes:\n    basic:\n      type: \"http\"\n      description: \"admin's username and password\"\n      scheme: \"basic\"\n\nexternalDocs:\n  description: \"Find out more about Snowplow Mini\"\n  url: \"https://docs.snowplowanalytics.com/docs/pipeline-components-and-applications/snowplow-mini/\"\n",
			"canonicalURL": "/github.com/snowplow/snowplow-mini@852ad475792dd145add24857acda4773752423c7/-/blob/provisioning/resources/configs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/snowplow/snowplow-mini/blob/852ad475792dd145add24857acda4773752423c7/provisioning/resources/configs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}