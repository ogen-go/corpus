{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CharlieDigital/dn6-mongo-react-valtio"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "web/src/services/schemas/schema.yaml",
			"byteSize": 10746,
			"content": "openapi: 3.0.1\ninfo:\n  title: 'Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\n  version: '1.0'\npaths:\n  /api/admin/reset:\n    delete:\n      tags:\n        - Admin\n      summary: Resets the environment by dropping the collections.\n      operationId: ResetEnv\n      responses:\n        '200':\n          description: Success\n  '/api/company/list/{start}/{pageSize}':\n    get:\n      tags:\n        - Company\n      summary: Gets the list of companies matching a specific page sorted by the title.\n      operationId: GetAllCompanies\n      parameters:\n        - name: start\n          in: path\n          description: The starting index of companies to retrieve.  Optional; 0 if not specified.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: pageSize\n          in: path\n          description: The number of entries to retrieve.  Optional; 25 if not specified.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 25\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Company'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Company'\n  /api/company/add:\n    post:\n      tags:\n        - Company\n      summary: \"Adds a new company to the database.  Set the ID to the empty string \\\"\\\"\\r\\nand a new ID will be assigned automatically.  The returned entity will\\r\\nhave the new ID.\"\n      operationId: AddCompany\n      requestBody:\n        description: The company instance to add.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Company'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Company'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/Company'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Company'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n  '/api/company/delete/{id}':\n    delete:\n      tags:\n        - Company\n      summary: \"Deletes a Company given an ID.  Deletes all Employees that reference the\\r\\nCompany as well.\"\n      operationId: DeleteCompany\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n  '/api/company/{id}/{full}':\n    get:\n      tags:\n        - Company\n      summary: Gets a Company by ID\n      operationId: GetCompany\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the company to retrieve.\n          required: true\n          schema:\n            type: string\n        - name: full\n          in: path\n          description: 'When specified, returns the rich object'\n          required: true\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Company'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n  /api/employee/add:\n    post:\n      tags:\n        - Employee\n      summary: \"Adds a new Employee to the database.  Set the ID to the empty string \\\"\\\"\\r\\nand a new ID will be assigned automatically.  The returned entity will\\r\\nhave the new ID.\"\n      operationId: AddEmployee\n      requestBody:\n        description: The Employee instance to add.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/Employee'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Employee'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Employee'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Employee'\n  '/api/employee/delete/{id}':\n    delete:\n      tags:\n        - Employee\n      summary: Deletes a Employee given an ID.\n      operationId: DeleteEmployee\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DeleteResult'\n  '/api/employee/{id}':\n    get:\n      tags:\n        - Employee\n      summary: Gets a Employee by ID\n      operationId: GetEmployee\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the Employee to retrieve.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Employee'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Employee'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Employee'\n  '/api/employee/company/{companyId}/{start}/{pageSize}':\n    get:\n      tags:\n        - Employee\n      summary: Gets the list of Employees by the company ID.\n      operationId: GetByCompany\n      parameters:\n        - name: companyId\n          in: path\n          description: The ID of the company to retrieve employees for.\n          required: true\n          schema:\n            type: string\n        - name: start\n          in: path\n          description: The starting index of companies to retrieve.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - name: pageSize\n          in: path\n          description: The number of companies to retrieve.\n          required: true\n          schema:\n            type: integer\n            format: int32\n            default: 25\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Employee'\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Employee'\n            text/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Employee'\ncomponents:\n  schemas:\n    Company:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the entity in the MongoDB\n          nullable: true\n        label:\n          type: string\n          description: The name associated with the entity in the MongoDB\n          nullable: true\n        address:\n          type: string\n          description: The address of the company.\n          nullable: true\n        webUrl:\n          type: string\n          description: The URL of the website for the given company.\n          nullable: true\n        employees:\n          type: array\n          items:\n            $ref: '#/components/schemas/Employee'\n          description: The list of Employees associated with this Company.\n          nullable: true\n      additionalProperties: false\n      description: Models a Company entity.\n    DeleteResult:\n      type: object\n      properties:\n        deletedCount:\n          type: integer\n          format: int64\n          readOnly: true\n        isAcknowledged:\n          type: boolean\n          readOnly: true\n      additionalProperties: false\n    Employee:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the entity in the MongoDB\n          nullable: true\n        label:\n          type: string\n          description: The name associated with the entity in the MongoDB\n          nullable: true\n        firstName:\n          type: string\n          description: The first name of the employee.\n          nullable: true\n        lastName:\n          type: string\n          description: The last name of the employee.\n          nullable: true\n        salary:\n          type: integer\n          description: The salary assigned to the employee.\n          format: int32\n        company:\n          $ref: '#/components/schemas/EntityRef'\n      additionalProperties: false\n      description: Core data model for an employee.\n    EntityRef:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the entity in the MongoDB\n          nullable: true\n        label:\n          type: string\n          description: The name associated with the entity in the MongoDB\n          nullable: true\n        collection:\n          type: string\n          description: The collection that the entity exists in.\n          nullable: true\n      additionalProperties: false\n      description: \"Represents an entity reference from one entity to another.  It inherits\\r\\nthe base properties of ID and Label from the base entities which allows\\r\\nfor efficient display of the relationship in the UI.\"",
			"canonicalURL": "/github.com/CharlieDigital/dn6-mongo-react-valtio@6a84b01ae3a7356d8dbc6a2794edd42e557144e2/-/blob/web/src/services/schemas/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CharlieDigital/dn6-mongo-react-valtio/blob/6a84b01ae3a7356d8dbc6a2794edd42e557144e2/web/src/services/schemas/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}