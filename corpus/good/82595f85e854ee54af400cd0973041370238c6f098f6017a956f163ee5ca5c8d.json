{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "traccar.org-4.6-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/traccar.org-4.6-swagger.yaml",
			"byteSize": 42604,
			"content": "openapi: 3.0.0\ninfo:\n  description: Open Source GPS Tracking Platform\n  title: traccar\n  version: \"4.6\"\n  x-apisguru-categories:\n    - location\n  x-logo:\n    url: https://pbs.twimg.com/profile_images/590395195268538368/oScd6DxA_400x400.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/tananaev/traccar/master/swagger.json\n      version: \"2.0\"\n  x-providerName: traccar.org\nsecurity:\n  - basicAuth: []\npaths:\n  /attributes/computed:\n    get:\n      description: Without params, it returns a list of Attributes the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attribute\"\n                type: array\n      summary: Fetch a list of Attributes\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Attribute\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n      summary: Create an Attribute\n  \"/attributes/computed/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete an Attribute\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Attribute\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n      summary: Update an Attribute\n  /calendars:\n    get:\n      description: Without params, it returns a list of Calendars the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Calendar\"\n                type: array\n      summary: Fetch a list of Calendars\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Calendar\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Calendar\"\n      summary: Create a Calendar\n  \"/calendars/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Calendar\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Calendar\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Calendar\"\n      summary: Update a Calendar\n  /commands:\n    get:\n      description: Without params, it returns a list of Drivers the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Command\"\n                type: array\n      summary: Fetch a list of Saved Commands\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Command\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n      summary: Create a Saved Command\n  /commands/send:\n    get:\n      description: Return a list of saved commands linked to Device and its groups,\n        filtered by current Device protocol support\n      parameters:\n        - $ref: \"#/components/parameters/deviceId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Command\"\n                type: array\n        \"400\":\n          description: Could happen when the user doesn't have permission for the device\n      summary: Fetch a list of Saved Commands supported by Device at the moment\n    post:\n      description: Dispatch a new command or Saved Command if _body.id_ set\n      requestBody:\n        $ref: \"#/components/requestBodies/Command\"\n      responses:\n        \"200\":\n          description: Command sent\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n        \"202\":\n          description: Command queued\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n        \"400\":\n          description: Could happen when the user doesn't have permission or an incorrect\n            command _type_ for the device\n      summary: Dispatch commands to device\n  /commands/types:\n    get:\n      parameters:\n        - description: Internal device identifier. Only works if device has already\n            reported some locations\n          in: query\n          name: deviceId\n          required: false\n          schema:\n            type: integer\n        - description: Protocol name. Can be used instead of device id\n          in: query\n          name: protocol\n          required: false\n          schema:\n            type: string\n        - description: When `true` return SMS commands. If not specified or `false` return\n            data commands\n          in: query\n          name: textChannel\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CommandType\"\n                type: array\n        \"400\":\n          description: Could happen when trying to fetch from a device the user does not\n            have permission\n      summary: Fetch a list of available Commands for the Device or all possible\n        Commands if Device ommited\n  \"/commands/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Saved Command\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Command\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Command\"\n      summary: Update a Saved Command\n  /devices:\n    get:\n      description: Without any params, returns a list of the user's devices\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - description: To fetch one or more devices. Multiple params can be passed like\n            `id=31\u0026id=42`\n          in: query\n          name: id\n          required: false\n          schema:\n            type: integer\n        - description: To fetch one or more devices. Multiple params can be passed like\n            `uniqueId=333331\u0026uniqieId=44442`\n          in: query\n          name: uniqueId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Device\"\n                type: array\n        \"400\":\n          description: No permission\n      summary: Fetch a list of Devices\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Device\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n      summary: Create a Device\n  \"/devices/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Device\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Device\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Device\"\n      summary: Update a Device\n  \"/devices/{id}/accumulators\":\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceAccumulators\"\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n      summary: Update total distance and hours of the Device\n  /drivers:\n    get:\n      description: Without params, it returns a list of Drivers the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Driver\"\n                type: array\n      summary: Fetch a list of Drivers\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Driver\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Driver\"\n      summary: Create a Driver\n  \"/drivers/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Driver\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Driver\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Driver\"\n      summary: Update a Driver\n  \"/events/{id}\":\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Event\"\n  /geofences:\n    get:\n      description: Without params, it returns a list of Geofences the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Geofence\"\n                type: array\n      summary: Fetch a list of Geofences\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Geofence\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Geofence\"\n      summary: Create a Geofence\n  \"/geofences/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Geofence\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Geofence\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Geofence\"\n      summary: Update a Geofence\n  /groups:\n    get:\n      description: Without any params, returns a list of the Groups the user belongs to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Group\"\n                type: array\n      summary: Fetch a list of Groups\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Group\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        \"400\":\n          description: No permission\n      summary: Create a Group\n  \"/groups/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Group\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Group\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n      summary: Update a Group\n  /maintenance:\n    get:\n      description: Without params, it returns a list of Maintenance the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Maintenance\"\n                type: array\n      summary: Fetch a list of Maintenance\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Maintenance\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Maintenance\"\n      summary: Create a Maintenance\n  \"/maintenance/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Maintenance\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Maintenance\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Maintenance\"\n      summary: Update a Maintenance\n  /notifications:\n    get:\n      description: Without params, it returns a list of Notifications the user has access to\n      parameters:\n        - $ref: \"#/components/parameters/all\"\n        - $ref: \"#/components/parameters/userId\"\n        - $ref: \"#/components/parameters/deviceId\"\n        - $ref: \"#/components/parameters/groupId\"\n        - $ref: \"#/components/parameters/refresh\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Notification\"\n                type: array\n      summary: Fetch a list of Notifications\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Notification\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n      summary: Create a Notification\n  /notifications/test:\n    post:\n      responses:\n        \"204\":\n          description: Successful sending\n        \"400\":\n          description: Could happen if sending has failed\n      summary: Send test notification to current user via Email and SMS\n  /notifications/types:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/NotificationType\"\n                type: array\n      summary: Fetch a list of available Notification types\n  \"/notifications/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a Notification\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Notification\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Notification\"\n      summary: Update a Notification\n  /permissions:\n    delete:\n      requestBody:\n        $ref: \"#/components/requestBodies/Permission\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Unlink an Object from another Object\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/Permission\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Permission\"\n        \"400\":\n          description: No permission\n      summary: Link an Object to another Object\n  /positions:\n    get:\n      description: Without any params, it returns a list of last known positions for all\n        the user's Devices. _from_ and _to_ fields are not required with _id_\n      parameters:\n        - description: _deviceId_ is optional, but requires the _from_ and _to_ parameters\n            when used\n          in: query\n          name: deviceId\n          required: false\n          schema:\n            type: integer\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: To fetch one or more positions. Multiple params can be passed like\n            `id=31\u0026id=42`\n          in: query\n          name: id\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            application/gpx+xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n      summary: Fetches a list of Positions\n  /reports/events:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdArray\"\n        - $ref: \"#/components/parameters/groupIdArray\"\n        - description: \"% can be used to return events of all types\"\n          in: query\n          name: type\n          schema:\n            type: array\n            items:\n              type: string\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Event\"\n                type: array\n      summary: Fetch a list of Events within the time period for the Devices or Groups\n  /reports/route:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdArray\"\n        - $ref: \"#/components/parameters/groupIdArray\"\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Position\"\n                type: array\n      summary: Fetch a list of Positions within the time period for the Devices or\n        Groups\n  /reports/stops:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdArray\"\n        - $ref: \"#/components/parameters/groupIdArray\"\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportStops\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportStops\"\n                type: array\n      summary: Fetch a list of ReportStops within the time period for the Devices or\n        Groups\n  /reports/summary:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdArray\"\n        - $ref: \"#/components/parameters/groupIdArray\"\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportSummary\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportSummary\"\n                type: array\n      summary: Fetch a list of ReportSummary within the time period for the Devices or\n        Groups\n  /reports/trips:\n    get:\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      parameters:\n        - $ref: \"#/components/parameters/deviceIdArray\"\n        - $ref: \"#/components/parameters/groupIdArray\"\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportTrips\"\n                type: array\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ReportTrips\"\n                type: array\n      summary: Fetch a list of ReportTrips within the time period for the Devices or\n        Groups\n  /server:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n      summary: Fetch Server information\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Server\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Server\"\n      summary: Update Server information\n  /session:\n    delete:\n      responses:\n        \"204\":\n          description: No Content\n      summary: Close the Session\n    get:\n      parameters:\n        - in: query\n          name: token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"404\":\n          description: Not Found\n      summary: Fetch Session information\n    post:\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                  format: password\n              required:\n                - email\n                - password\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Unauthorized\n      summary: Create a new Session\n  /statistics:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/fromTime\"\n        - $ref: \"#/components/parameters/toTime\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Statistics\"\n                type: array\n      summary: Fetch server Statistics\n  /users:\n    get:\n      parameters:\n        - description: Can only be used by admin or manager users\n          in: query\n          name: userId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/User\"\n                type: array\n        \"400\":\n          description: No Permission\n      summary: Fetch a list of Users\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      summary: Create a User\n  \"/users/{id}\":\n    delete:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      responses:\n        \"204\":\n          description: No Content\n      summary: Delete a User\n    put:\n      parameters:\n        - $ref: \"#/components/parameters/entityId\"\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n      summary: Update a User\nservers:\n  - url: http://demo.traccar.org/api\ncomponents:\n  parameters:\n    all:\n      description: Can only be used by admins or managers to fetch all entities\n      in: query\n      name: all\n      schema:\n        type: boolean\n    deviceId:\n      description: Standard users can use this only with _deviceId_s, they have access to\n      in: query\n      name: deviceId\n      schema:\n        type: integer\n    deviceIdArray:\n      in: query\n      name: deviceId\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    entityId:\n      in: path\n      name: id\n      required: true\n      schema:\n        type: integer\n    fromTime:\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      in: query\n      name: from\n      required: true\n      schema:\n        type: string\n        format: date-time\n    groupId:\n      description: Standard users can use this only with _groupId_s, they have access to\n      in: query\n      name: groupId\n      schema:\n        type: integer\n    groupIdArray:\n      in: query\n      name: groupId\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    refresh:\n      in: query\n      name: refresh\n      required: false\n      schema:\n        type: boolean\n    toTime:\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      in: query\n      name: to\n      required: true\n      schema:\n        type: string\n        format: date-time\n    userId:\n      description: Standard users can use this only with their own _userId_\n      in: query\n      name: userId\n      schema:\n        type: integer\n  requestBodies:\n    Calendar:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Calendar\"\n      required: true\n    Geofence:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Geofence\"\n      required: true\n    Device:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Device\"\n      required: true\n    Command:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Command\"\n      required: true\n    Notification:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Notification\"\n      required: true\n    Permission:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Permission\"\n      required: true\n    Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attribute\"\n      required: true\n    Driver:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Driver\"\n      required: true\n    Group:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Group\"\n      required: true\n    Maintenance:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Maintenance\"\n      required: true\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/User\"\n      required: true\n  securitySchemes:\n    basicAuth:\n      description: Basic HTTP authorization with _email_ and _password_\n      type: http\n      scheme: basic\n  schemas:\n    Attribute:\n      properties:\n        attribute:\n          type: string\n        description:\n          type: string\n        expression:\n          type: string\n        id:\n          type: integer\n        type:\n          description: String|Number|Boolean\n          type: string\n    Calendar:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        data:\n          description: base64 encoded in iCalendar format\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n    Command:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        description:\n          type: string\n        deviceId:\n          type: integer\n        id:\n          type: integer\n        type:\n          type: string\n    CommandType:\n      properties:\n        type:\n          type: string\n    Device:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        category:\n          type: string\n        contact:\n          type: string\n        disabled:\n          type: boolean\n        geofenceIds:\n          items:\n            type: integer\n          type: array\n        groupId:\n          type: integer\n        id:\n          type: integer\n        lastUpdate:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        model:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        positionId:\n          type: integer\n        status:\n          type: string\n        uniqueId:\n          type: string\n    DeviceAccumulators:\n      properties:\n        deviceId:\n          type: integer\n        hours:\n          type: number\n        totalDistance:\n          description: in meters\n          type: number\n    Driver:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n    Event:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        deviceId:\n          type: integer\n        geofenceId:\n          type: integer\n        id:\n          type: integer\n        maintenanceId:\n          type: integer\n        positionId:\n          type: integer\n        serverTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        type:\n          type: string\n    Geofence:\n      properties:\n        area:\n          type: string\n        attributes:\n          additionalProperties: true\n          type: object\n        calendarId:\n          type: integer\n        description:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n    Group:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        groupId:\n          type: integer\n        id:\n          type: integer\n        name:\n          type: string\n    Maintenance:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        id:\n          type: integer\n        name:\n          type: string\n        period:\n          type: number\n        start:\n          type: number\n        type:\n          type: string\n    Notification:\n      properties:\n        always:\n          type: boolean\n        attributes:\n          additionalProperties: true\n          type: object\n        calendarId:\n          type: integer\n        id:\n          type: integer\n        mail:\n          type: boolean\n        sms:\n          type: boolean\n        type:\n          type: string\n        web:\n          type: boolean\n    NotificationType:\n      properties:\n        type:\n          type: string\n    Permission:\n      description: \"This is a permission map that contain two object indexes. It is used to\n        link/unlink objects. Order is important. Example: { deviceId:8,\n        geofenceId: 16 }\"\n      properties:\n        attributeId:\n          description: Computed Attribute Id, can be second parameter only\n          type: integer\n        calendarId:\n          description: Calendar Id, can be second parameter only and only in combination\n            with userId\n          type: integer\n        deviceId:\n          description: Device Id, can be first parameter or second only in combination with\n            userId\n          type: integer\n        driverId:\n          description: Driver Id, can be second parameter only\n          type: integer\n        geofenceId:\n          description: Geofence Id, can be second parameter only\n          type: integer\n        groupId:\n          description: Group Id, can be first parameter or second only in combination with\n            userId\n          type: integer\n        managedUserId:\n          description: User Id, can be second parameter only and only in combination with\n            userId\n          type: integer\n        userId:\n          description: User Id, can be only first parameter\n          type: integer\n    Position:\n      properties:\n        accuracy:\n          type: number\n        address:\n          type: string\n        altitude:\n          type: number\n        attributes:\n          additionalProperties: true\n          type: object\n        course:\n          type: number\n        deviceId:\n          type: integer\n        deviceTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        fixTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        id:\n          type: integer\n        latitude:\n          type: number\n        longitude:\n          type: number\n        network:\n          type: string\n        outdated:\n          type: boolean\n        protocol:\n          type: string\n        serverTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        speed:\n          description: in knots\n          type: number\n        valid:\n          type: boolean\n    ReportStops:\n      properties:\n        address:\n          type: string\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        duration:\n          type: integer\n        endTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        engineHours:\n          type: integer\n        lat:\n          type: number\n        lon:\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n        startTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n    ReportSummary:\n      properties:\n        averageSpeed:\n          description: in knots\n          type: number\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        distance:\n          description: in meters\n          type: number\n        engineHours:\n          type: integer\n        maxSpeed:\n          description: in knots\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n    ReportTrips:\n      properties:\n        averageSpeed:\n          description: in knots\n          type: number\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        distance:\n          description: in meters\n          type: number\n        driverName:\n          type: string\n        driverUniqueId:\n          type: integer\n        duration:\n          type: integer\n        endAddress:\n          type: string\n        endLat:\n          type: number\n        endLon:\n          type: number\n        endTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        maxSpeed:\n          description: in knots\n          type: number\n        spentFuel:\n          description: in liters\n          type: number\n        startAddress:\n          type: string\n        startLat:\n          type: number\n        startLon:\n          type: number\n        startTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n    Server:\n      properties:\n        attributes:\n          additionalProperties: true\n          type: object\n        bingKey:\n          type: string\n        coordinateFormat:\n          type: string\n        deviceReadonly:\n          type: boolean\n        forceSettings:\n          type: boolean\n        id:\n          type: integer\n        latitude:\n          type: number\n        limitCommands:\n          type: boolean\n        longitude:\n          type: number\n        map:\n          type: string\n        mapUrl:\n          type: string\n        poiLayer:\n          type: string\n        readonly:\n          type: boolean\n        registration:\n          type: boolean\n        twelveHourFormat:\n          type: boolean\n        version:\n          type: string\n        zoom:\n          type: integer\n    Statistics:\n      properties:\n        activeDevices:\n          type: integer\n        activeUsers:\n          type: integer\n        captureTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        messagesReceived:\n          type: integer\n        messagesStored:\n          type: integer\n        requests:\n          type: integer\n    User:\n      properties:\n        administrator:\n          type: boolean\n        attributes:\n          additionalProperties: true\n          type: object\n        coordinateFormat:\n          type: string\n        deviceLimit:\n          type: integer\n        deviceReadonly:\n          type: boolean\n        disabled:\n          type: boolean\n        email:\n          type: string\n        expirationTime:\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          type: string\n        id:\n          type: integer\n        latitude:\n          type: number\n        limitCommands:\n          type: boolean\n        longitude:\n          type: number\n        map:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n        poiLayer:\n          type: string\n        readonly:\n          type: boolean\n        token:\n          type: string\n        twelveHourFormat:\n          type: boolean\n        userLimit:\n          type: integer\n        zoom:\n          type: integer\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/traccar.org-4.6-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/traccar.org-4.6-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}