{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Adyen/adyen-go-api-library"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/disputes/api/openapi.yaml",
			"byteSize": 15379,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@adyen.com\n    name: Adyen Support\n    url: https://support.adyen.com/\n  description: |-\n    This API provides endpoints for dispute management. You can use the API to retrieve defense reasons, supply defense ducoments, delete defense documents, upload chargebacks or accept disputes.\n\n    For more information on using the APIs, refer to [Dispute service](https://docs.adyen.com/risk-management/disputes-api).\n\n    ## Authentication\n    Each request to the Dispute API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:\n\n    ```\n    curl\n    -H \"Content-Type: application/json\" \\\n    -H \"X-API-Key: Your_API_key\" \\\n    ...\n    ```\n    Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).\n\n    ```\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Dispute service API\n  version: \"1\"\nservers:\n- url: /\npaths:\n  /defendDispute:\n    post:\n      description: Defend the dispute with the given reason code.\n      operationId: post-defendDispute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefendDisputeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefendDisputeResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Defend dispute\n      x-groupName: General\n      x-sortIndex: 1\n  /deleteDisputeDefenseDocument:\n    post:\n      description: Delete a dispute defense document.\n      operationId: post-deleteDisputeDefenseDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDefenseDocumentRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDefenseDocumentResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Delete dispute defense document\n      x-groupName: General\n      x-sortIndex: 1\n  /downloadDisputeDefenseDocument:\n    get:\n      description: Download a dispute defense document.\n      operationId: get-downloadDisputeDefenseDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadDefenseDocumentRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadDefenseDocumentResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Download Dispute defense document\n      x-groupName: General\n      x-sortIndex: 1\n  /retrieveApplicableDefenseReasons:\n    get:\n      description: Retrieve a list of possible defense reasons with required documents\n        for the given dispute.\n      operationId: get-retrieveApplicableDefenseReasons\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefenseReasonsRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefenseReasonsResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Retrieve applicable defense reasons\n      x-groupName: General\n      x-sortIndex: 1\n  /supplyDefenseDocument:\n    post:\n      description: Supply a dispute defense document.\n      operationId: post-supplyDefenseDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SupplyDefenseDocumentRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupplyDefenseDocumentResponse'\n          description: OK - the request has succeeded.\n        \"400\":\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          description: Unauthorized - authentication required.\n        \"403\":\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          description: Internal Server Error - the server could not process the request.\n      summary: Supply defense document\n      x-groupName: General\n      x-sortIndex: 1\ncomponents:\n  schemas:\n    DefendDisputeRequest:\n      example:\n        merchantAccountCode: merchantAccountCode\n        defenseReasonCode: defenseReasonCode\n        disputePspReference: disputePspReference\n      properties:\n        defenseReasonCode:\n          description: The reasoncode for this dispute\n          type: string\n        disputePspReference:\n          description: The psp reference of the dispute\n          type: string\n        merchantAccountCode:\n          description: The merchant account identifier\n          type: string\n      required:\n      - defenseReasonCode\n      - disputePspReference\n      - merchantAccountCode\n    DefendDisputeResponse:\n      example:\n        disputeServiceResult:\n          success: true\n          errorMessage: errorMessage\n      properties:\n        disputeServiceResult:\n          $ref: '#/components/schemas/DisputeServiceResult'\n      required:\n      - disputeServiceResult\n    DefenseDocument:\n      example:\n        defenseDocumentTypeCode: defenseDocumentTypeCode\n        contentType: contentType\n        content: content\n      properties:\n        content:\n          description: The content of the defense document\n          format: byte\n          type: string\n        contentType:\n          description: The content type of the defense document\n          type: string\n        defenseDocumentTypeCode:\n          description: The typecode for the defense document type\n          type: string\n      required:\n      - content\n      - contentType\n      - defenseDocumentTypeCode\n    DefenseDocumentType:\n      example:\n        requirementLevel: requirementLevel\n        available: true\n        defenseDocumentTypeCode: defenseDocumentTypeCode\n      properties:\n        available:\n          description: Indicates if this document type is available\n          type: boolean\n        defenseDocumentTypeCode:\n          description: The typecode for the defense document type\n          type: string\n        requirementLevel:\n          description: The requirement level for the defense document type\n          type: string\n      required:\n      - available\n      - defenseDocumentTypeCode\n      - requirementLevel\n    DefenseReason:\n      example:\n        defenseReasonCode: defenseReasonCode\n        defenseDocumentTypes:\n        - requirementLevel: requirementLevel\n          available: true\n          defenseDocumentTypeCode: defenseDocumentTypeCode\n        - requirementLevel: requirementLevel\n          available: true\n          defenseDocumentTypeCode: defenseDocumentTypeCode\n        satisfied: true\n      properties:\n        defenseDocumentTypes:\n          description: Defense ducoment types\n          items:\n            $ref: '#/components/schemas/DefenseDocumentType'\n          type: array\n        defenseReasonCode:\n          description: The reason code for this specific defense\n          type: string\n        satisfied:\n          description: Indicates if this defense reason is satisfied\n          type: boolean\n      required:\n      - defenseReasonCode\n      - satisfied\n    DefenseReasonsRequest:\n      example:\n        merchantAccountCode: merchantAccountCode\n        disputePspReference: disputePspReference\n      properties:\n        disputePspReference:\n          description: The psp reference of the dispute\n          type: string\n        merchantAccountCode:\n          description: The merchant account identifier\n          type: string\n      required:\n      - disputePspReference\n      - merchantAccountCode\n    DefenseReasonsResponse:\n      example:\n        defenseReasons:\n        - defenseReasonCode: defenseReasonCode\n          defenseDocumentTypes:\n          - requirementLevel: requirementLevel\n            available: true\n            defenseDocumentTypeCode: defenseDocumentTypeCode\n          - requirementLevel: requirementLevel\n            available: true\n            defenseDocumentTypeCode: defenseDocumentTypeCode\n          satisfied: true\n        - defenseReasonCode: defenseReasonCode\n          defenseDocumentTypes:\n          - requirementLevel: requirementLevel\n            available: true\n            defenseDocumentTypeCode: defenseDocumentTypeCode\n          - requirementLevel: requirementLevel\n            available: true\n            defenseDocumentTypeCode: defenseDocumentTypeCode\n          satisfied: true\n        disputeServiceResult:\n          success: true\n          errorMessage: errorMessage\n      properties:\n        defenseReasons:\n          description: Defense reasons\n          items:\n            $ref: '#/components/schemas/DefenseReason'\n          type: array\n        disputeServiceResult:\n          $ref: '#/components/schemas/DisputeServiceResult'\n      required:\n      - disputeServiceResult\n    DeleteDefenseDocumentRequest:\n      example:\n        merchantAccountCode: merchantAccountCode\n        disputePspReference: disputePspReference\n        defenseDocumentType: defenseDocumentType\n      properties:\n        defenseDocumentType:\n          description: The specific type of the defense document\n          type: string\n        disputePspReference:\n          description: The psp reference of the dispute\n          type: string\n        merchantAccountCode:\n          description: The merchant account identifier\n          type: string\n      required:\n      - defenseDocumentType\n      - disputePspReference\n      - merchantAccountCode\n    DeleteDefenseDocumentResponse:\n      example:\n        disputeServiceResult:\n          success: true\n          errorMessage: errorMessage\n      properties:\n        disputeServiceResult:\n          $ref: '#/components/schemas/DisputeServiceResult'\n      required:\n      - disputeServiceResult\n    DisputeServiceResult:\n      example:\n        success: true\n        errorMessage: errorMessage\n      properties:\n        errorMessage:\n          description: error message, empty if request was successfull\n          type: string\n        success:\n          description: Indicates whether or not the request succeeded\n          type: boolean\n      required:\n      - success\n    DownloadDefenseDocumentRequest:\n      example:\n        merchantAccountCode: merchantAccountCode\n        disputePspReference: disputePspReference\n        defenseDocumentType: defenseDocumentType\n      properties:\n        defenseDocumentType:\n          description: The specific type of the defense document\n          type: string\n        disputePspReference:\n          description: The psp reference of the dispute\n          type: string\n        merchantAccountCode:\n          description: The merchant account identifier\n          type: string\n      required:\n      - defenseDocumentType\n      - disputePspReference\n      - merchantAccountCode\n    DownloadDefenseDocumentResponse:\n      example:\n        disputeServiceResult:\n          success: true\n          errorMessage: errorMessage\n        contentType: contentType\n        content: content\n      properties:\n        content:\n          description: The content of the dispute defense document\n          format: byte\n          type: string\n        contentType:\n          description: The content type of the dispute defense document\n          type: string\n        disputeServiceResult:\n          $ref: '#/components/schemas/DisputeServiceResult'\n      required:\n      - disputeServiceResult\n    SupplyDefenseDocumentRequest:\n      example:\n        merchantAccountCode: merchantAccountCode\n        disputePspReference: disputePspReference\n        defenseDocuments:\n        - defenseDocumentTypeCode: defenseDocumentTypeCode\n          contentType: contentType\n          content: content\n        - defenseDocumentTypeCode: defenseDocumentTypeCode\n          contentType: contentType\n          content: content\n      properties:\n        defenseDocuments:\n          description: The defense documents to be supplied\n          items:\n            $ref: '#/components/schemas/DefenseDocument'\n          type: array\n        disputePspReference:\n          description: The psp reference of the dispute\n          type: string\n        merchantAccountCode:\n          description: The merchant account identifier\n          type: string\n      required:\n      - defenseDocuments\n      - disputePspReference\n      - merchantAccountCode\n    SupplyDefenseDocumentResponse:\n      example:\n        disputeServiceResult:\n          success: true\n          errorMessage: errorMessage\n      properties:\n        disputeServiceResult:\n          $ref: '#/components/schemas/DisputeServiceResult'\n      required:\n      - disputeServiceResult\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n- General\n",
			"canonicalURL": "/github.com/Adyen/adyen-go-api-library@c686d3f8b29d214d117df7ef1e55b22b122a38f7/-/blob/src/disputes/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Adyen/adyen-go-api-library/blob/c686d3f8b29d214d117df7ef1e55b22b122a38f7/src/disputes/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}