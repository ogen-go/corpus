{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/microcks/microcks"
		},
		"file": {
			"name": "query-param-refs-openapi.yaml",
			"size": 0,
			"path": "webapp/src/test/resources/io/github/microcks/util/openapi/query-param-refs-openapi.yaml",
			"byteSize": 3877,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: API-Template\n  version: 1.0.0\n\nservers:\n  - url: https://dev-api.openfinance.es/api-name/v1\n    description: Development server\n  - url: https://api.openfinance.es/api-name/v1\n    description: Production server\ntags:\n  - name: examples\n    description: 'Examples for Microcks.io'\n\npaths:\n  # Example with only one query parameter\n  /resources:\n    get:\n      tags: [examples]\n      summary: Get resources by query\n      description: Get a list of resources by query\n      operationId: queryOp\n      parameters:\n        - name: resourceType\n          in: query\n          description: Get a list of resources by type\n          schema:\n            type: string\n            enum:  [standard, premium]\n          examples:\n            standard_example:\n              value: 'standard'\n            premium_example:\n              value: 'premium'\n      responses:\n        '200':\n          description: List of resources\n          content:\n            application/json:\n              schema:\n                properties:\n                  name:\n                    type: string\n                  resourceType:\n                    type: string\n                    enum: [standard, premium]\n              examples:\n                standard_example:\n                  value:\n                    - name: 'Resource One'\n                      resourceType: 'standard'\n                premium_example:\n                  value:\n                    - name: 'Resource Two'\n                      resourceType: 'premium'\n                all_example:\n                  value:\n                    - name: 'Resource One'\n                      resourceType: 'standard'\n                    - name: 'Resource Two'\n                      resourceType: 'premium'\n  # Example with problem in URI_PARAMS\n  /accounts:\n    get:\n      tags: [examples]\n      summary: Get resources by multiple query params\n      description: Get a list of resources by multiple query params\n      operationId: dobleQueryOp\n      parameters:\n        - $ref: '#/components/parameters/levelQueryParam'\n      responses:\n        '200':\n          description: List of accounts\n          content:\n            application/json:\n              schema:\n                properties:\n                  accountID:\n                    type: string\n                  level:\n                    type: string\n                    enum: [bronze, golden]\n              examples:\n                bronze_example:\n                  value:\n                    - accountID: AC001\n                      level: bronze\n                      region: national\n                    - accountID: AC002\n                      level: bronze\n                      region: international\n                golden_example:\n                  value:\n                    - accountID: AC003\n                      level: golden\n                      region: national\n                    - accountID: AC004\n                      level: golden\n                      region: international\n                all_example:\n                  value:\n                    - accountID: AC001\n                      level: bronze\n                      region: national\n                    - accountID: AC002\n                      level: bronze\n                      region: international\n                    - accountID: AC003\n                      level: golden\n                      region: national\n                    - accountID: AC004\n                      level: golden\n                      region: international\n\ncomponents:\n  parameters:\n    levelQueryParam:\n      name: level\n      in: query\n      description: Account level\n      schema:\n        type: string\n        enum: [bronze, golden]\n      examples:\n        bronze_example:\n          value: 'bronze'\n        golden_example:\n          value: 'golden'\n        all_example:\n          value: 'all'\n",
			"canonicalURL": "/github.com/microcks/microcks@073200620b3f9b1525985cb0492dd8995738119b/-/blob/webapp/src/test/resources/io/github/microcks/util/openapi/query-param-refs-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/microcks/microcks/blob/073200620b3f9b1525985cb0492dd8995738119b/webapp/src/test/resources/io/github/microcks/util/openapi/query-param-refs-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}