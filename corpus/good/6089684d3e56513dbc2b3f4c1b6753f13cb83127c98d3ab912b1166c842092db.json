{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/aws-parallelcluster"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "cli/src/pcluster/api/openapi/openapi.yaml",
			"byteSize": 112667,
			"content": "openapi: 3.0.2\ninfo:\n  description: ParallelCluster API\n  title: ParallelCluster\n  version: 3.0.0\nservers:\n- url: /\n# security:\n# - aws.auth.sigv4: []\npaths:\n  /v3/clusters:\n    get:\n      description: Retrieve the list of existing clusters.\n      operationId: list_clusters\n      parameters:\n      - description: List clusters deployed to a given AWS Region.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: List clusters deployed to a given AWS Region.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      - description: Filter by cluster status. (Defaults to all clusters.)\n        explode: true\n        in: query\n        name: clusterStatus\n        required: false\n        schema:\n          description: Filter by cluster status. (Defaults to all clusters.)\n          items:\n            $ref: '#/components/schemas/ClusterStatusFilteringOption'\n          type: array\n          uniqueItems: true\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListClustersResponseContent'\n          description: ListClusters 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_operations_controller\n    post:\n      description: Create a managed cluster in a given region.\n      operationId: create_cluster\n      parameters:\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: \"Identifies one or more config validators to suppress. Format:\\\n          \\ (ALL|type:[A-Za-z0-9]+)\"\n        explode: true\n        in: query\n        name: suppressValidators\n        required: false\n        schema:\n          description: \"Identifies one or more config validators to suppress. Format:\\\n            \\ (ALL|type:[A-Za-z0-9]+)\"\n          items:\n            pattern: \"^(ALL|type:[A-Za-z0-9]+)$\"\n            type: string\n          type: array\n          uniqueItems: true\n        style: form\n      - description: Min validation level that will cause the creation to fail. (Defaults\n          to 'ERROR'.)\n        explode: true\n        in: query\n        name: validationFailureLevel\n        required: false\n        schema:\n          $ref: '#/components/schemas/ValidationLevel'\n        style: form\n      - description: Only perform request validation without creating any resource.\n          May be used to validate the cluster configuration. (Defaults to 'false'.)\n        explode: true\n        in: query\n        name: dryrun\n        required: false\n        schema:\n          description: Only perform request validation without creating any resource.\n            May be used to validate the cluster configuration. (Defaults to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      - description: When set it automatically initiates a cluster stack rollback\n          on failures. (Defaults to 'true'.)\n        explode: true\n        in: query\n        name: rollbackOnFailure\n        required: false\n        schema:\n          description: When set it automatically initiates a cluster stack rollback\n            on failures. (Defaults to 'true'.)\n          nullable: true\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: create_cluster_request_content\n              $ref: '#/components/schemas/CreateClusterRequestContent'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClusterResponseContent'\n          description: CreateCluster 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClusterBadRequestExceptionResponseContent'\n          description: CreateClusterBadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictExceptionResponseContent'\n          description: ConflictException 409 response\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DryrunOperationExceptionResponseContent'\n          description: DryrunOperationException 412 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_operations_controller\n  /v3/clusters/{clusterName}:\n    delete:\n      description: Initiate the deletion of a cluster.\n      operationId: delete_cluster\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteClusterResponseContent'\n          description: DeleteCluster 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_operations_controller\n    get:\n      description: Get detailed information about an existing cluster.\n      operationId: describe_cluster\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeClusterResponseContent'\n          description: DescribeCluster 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_operations_controller\n    put:\n      description: Update a cluster managed in a given region.\n      operationId: update_cluster\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: \"Identifies one or more config validators to suppress. Format:\\\n          \\ (ALL|type:[A-Za-z0-9]+)\"\n        explode: true\n        in: query\n        name: suppressValidators\n        required: false\n        schema:\n          description: \"Identifies one or more config validators to suppress. Format:\\\n            \\ (ALL|type:[A-Za-z0-9]+)\"\n          items:\n            pattern: \"^(ALL|type:[A-Za-z0-9]+)$\"\n            type: string\n          type: array\n          uniqueItems: true\n        style: form\n      - description: Min validation level that will cause the update to fail. (Defaults\n          to 'ERROR'.)\n        explode: true\n        in: query\n        name: validationFailureLevel\n        required: false\n        schema:\n          $ref: '#/components/schemas/ValidationLevel'\n        style: form\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Only perform request validation without creating any resource.\n          May be used to validate the cluster configuration and update requirements.\n          (Defaults to 'false'.)\n        explode: true\n        in: query\n        name: dryrun\n        required: false\n        schema:\n          description: Only perform request validation without creating any resource.\n            May be used to validate the cluster configuration and update requirements.\n            (Defaults to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      - description: Force update by ignoring the update validation errors. (Defaults\n          to 'false'.)\n        explode: true\n        in: query\n        name: forceUpdate\n        required: false\n        schema:\n          description: Force update by ignoring the update validation errors. (Defaults\n            to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: update_cluster_request_content\n              $ref: '#/components/schemas/UpdateClusterRequestContent'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateClusterResponseContent'\n          description: UpdateCluster 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateClusterBadRequestExceptionResponseContent'\n          description: UpdateClusterBadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictExceptionResponseContent'\n          description: ConflictException 409 response\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DryrunOperationExceptionResponseContent'\n          description: DryrunOperationException 412 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_operations_controller\n  /v3/clusters/{clusterName}/computefleet:\n    get:\n      description: Describe the status of the compute fleet.\n      operationId: describe_compute_fleet\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeComputeFleetResponseContent'\n          description: DescribeComputeFleet 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster ComputeFleet\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_compute_fleet_controller\n    patch:\n      description: Update the status of the cluster compute fleet.\n      operationId: update_compute_fleet\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: update_compute_fleet_request_content\n              $ref: '#/components/schemas/UpdateComputeFleetRequestContent'\n        required: true\n      responses:\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateComputeFleetResponseContent'\n          description: UpdateComputeFleet 204 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster ComputeFleet\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_compute_fleet_controller\n  /v3/clusters/{clusterName}/instances:\n    delete:\n      description: Initiate the forced termination of all cluster compute nodes. Does\n        not work with AWS Batch clusters.\n      operationId: delete_cluster_instances\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Force the deletion also when the cluster with the given name\n          is not found. (Defaults to 'false'.)\n        explode: true\n        in: query\n        name: force\n        required: false\n        schema:\n          description: Force the deletion also when the cluster with the given name\n            is not found. (Defaults to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          description: DeleteClusterInstances 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Instances\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_instances_controller\n    get:\n      description: Describe the instances belonging to a given cluster.\n      operationId: describe_cluster_instances\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      - description: Filter the instances by node type.\n        explode: true\n        in: query\n        name: nodeType\n        required: false\n        schema:\n          $ref: '#/components/schemas/NodeType'\n        style: form\n      - description: Filter the instances by queue name.\n        explode: true\n        in: query\n        name: queueName\n        required: false\n        schema:\n          description: Filter the instances by queue name.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeClusterInstancesResponseContent'\n          description: DescribeClusterInstances 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Instances\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_instances_controller\n  /v3/clusters/{clusterName}/logstreams:\n    get:\n      description: Retrieve the list of log streams associated with a cluster.\n      operationId: list_cluster_log_streams\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: Region that the given cluster belongs to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: Region that the given cluster belongs to.\n          type: string\n        style: form\n      - description: \"Filter the log streams. Format: 'Name=a,Values=1 Name=b,Values=2,3'.\\n\\\n          Accepted filters are:\\nprivate-dns-name - The short form of the private\\\n          \\ DNS name of the instance (e.g. ip-10-0-0-101).\\nnode-type - The node type,\\\n          \\ the only accepted value for this filter is HeadNode.\"\n        explode: true\n        in: query\n        name: filters\n        required: false\n        schema:\n          description: \"Filter the log streams. Format: 'Name=a,Values=1 Name=b,Values=2,3'.\\n\\\n            Accepted filters are:\\nprivate-dns-name - The short form of the private\\\n            \\ DNS name of the instance (e.g. ip-10-0-0-101).\\nnode-type - The node\\\n            \\ type, the only accepted value for this filter is HeadNode.\"\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListClusterLogStreamsResponseContent'\n          description: ListClusterLogStreams 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_logs_controller\n  /v3/clusters/{clusterName}/logstreams/{logStreamName}:\n    get:\n      description: Retrieve the events associated with a log stream.\n      operationId: get_cluster_log_events\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: Name of the log stream.\n        explode: false\n        in: path\n        name: logStreamName\n        required: true\n        schema:\n          description: Name of the log stream.\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      - description: \"If the value is true, the earliest log events are returned first.\\\n          \\ If the value is false, the latest log events are returned first. (Defaults\\\n          \\ to 'false'.)\"\n        explode: true\n        in: query\n        name: startFromHead\n        required: false\n        schema:\n          description: \"If the value is true, the earliest log events are returned\\\n            \\ first. If the value is false, the latest log events are returned first.\\\n            \\ (Defaults to 'false'.)\"\n          nullable: true\n          type: boolean\n        style: form\n      - description: \"The maximum number of log events returned. If you don't specify\\\n          \\ a value, the maximum is as many log events as can fit in a response size\\\n          \\ of 1 MB, up to 10,000 log events.\"\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          description: \"The maximum number of log events returned. If you don't specify\\\n            \\ a value, the maximum is as many log events as can fit in a response\\\n            \\ size of 1 MB, up to 10,000 log events.\"\n          format: int32\n          nullable: true\n          type: integer\n        style: form\n      - description: \"The start of the time range, expressed in ISO 8601 format (e.g.\\\n          \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to this time or\\\n          \\ later than this time are included.\"\n        explode: true\n        in: query\n        name: startTime\n        required: false\n        schema:\n          description: \"The start of the time range, expressed in ISO 8601 format\\\n            \\ (e.g. '2021-01-01T20:00:00Z'). Events with a timestamp equal to this\\\n            \\ time or later than this time are included.\"\n          format: date-time\n          type: string\n        style: form\n      - description: \"The end of the time range, expressed in ISO 8601 format (e.g.\\\n          \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to or later than\\\n          \\ this time are not included.\"\n        explode: true\n        in: query\n        name: endTime\n        required: false\n        schema:\n          description: \"The end of the time range, expressed in ISO 8601 format (e.g.\\\n            \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to or later than\\\n            \\ this time are not included.\"\n          format: date-time\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetClusterLogEventsResponseContent'\n          description: GetClusterLogEvents 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_logs_controller\n  /v3/clusters/{clusterName}/stackevents:\n    get:\n      description: Retrieve the events associated with the stack for a given cluster.\n      operationId: get_cluster_stack_events\n      parameters:\n      - description: Name of the cluster\n        explode: false\n        in: path\n        name: clusterName\n        required: true\n        schema:\n          description: Name of the cluster\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetClusterStackEventsResponseContent'\n          description: GetClusterStackEvents 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Cluster Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.cluster_logs_controller\n  /v3/images/custom:\n    get:\n      description: Retrieve the list of existing custom images.\n      operationId: list_images\n      parameters:\n      - description: List images built in a given AWS Region.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: List images built in a given AWS Region.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      - description: Filter images by the status provided.\n        explode: true\n        in: query\n        name: imageStatus\n        required: true\n        schema:\n          $ref: '#/components/schemas/ImageStatusFilteringOption'\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImagesResponseContent'\n          description: ListImages 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_operations_controller\n    post:\n      description: Create a custom ParallelCluster image in a given region.\n      operationId: build_image\n      parameters:\n      - description: \"Identifies one or more config validators to suppress. Format:\\\n          \\ (ALL|type:[A-Za-z0-9]+)\"\n        explode: true\n        in: query\n        name: suppressValidators\n        required: false\n        schema:\n          description: \"Identifies one or more config validators to suppress. Format:\\\n            \\ (ALL|type:[A-Za-z0-9]+)\"\n          items:\n            pattern: \"^(ALL|type:[A-Za-z0-9]+)$\"\n            type: string\n          type: array\n          uniqueItems: true\n        style: form\n      - description: Min validation level that will cause the creation to fail. (Defaults\n          to 'ERROR'.)\n        explode: true\n        in: query\n        name: validationFailureLevel\n        required: false\n        schema:\n          $ref: '#/components/schemas/ValidationLevel'\n        style: form\n      - description: Only perform request validation without creating any resource.\n          It can be used to validate the image configuration. (Defaults to 'false'.)\n        explode: true\n        in: query\n        name: dryrun\n        required: false\n        schema:\n          description: Only perform request validation without creating any resource.\n            It can be used to validate the image configuration. (Defaults to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      - description: \"When set, will automatically initiate an image stack rollback\\\n          \\ on failure. (Defaults to 'false'.)\"\n        explode: true\n        in: query\n        name: rollbackOnFailure\n        required: false\n        schema:\n          description: \"When set, will automatically initiate an image stack rollback\\\n            \\ on failure. (Defaults to 'false'.)\"\n          nullable: true\n          type: boolean\n        style: form\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              x-body-name: build_image_request_content\n              $ref: '#/components/schemas/BuildImageRequestContent'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildImageResponseContent'\n          description: BuildImage 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildImageBadRequestExceptionResponseContent'\n          description: BuildImageBadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictExceptionResponseContent'\n          description: ConflictException 409 response\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DryrunOperationExceptionResponseContent'\n          description: DryrunOperationException 412 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_operations_controller\n  /v3/images/custom/{imageId}:\n    delete:\n      description: Initiate the deletion of the custom ParallelCluster image.\n      operationId: delete_image\n      parameters:\n      - description: Id of the image.\n        explode: false\n        in: path\n        name: imageId\n        required: true\n        schema:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Force deletion in case there are instances using the AMI or in\n          case the AMI is shared. (Defaults to 'false'.)\n        explode: true\n        in: query\n        name: force\n        required: false\n        schema:\n          description: Force deletion in case there are instances using the AMI or\n            in case the AMI is shared. (Defaults to 'false'.)\n          nullable: true\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteImageResponseContent'\n          description: DeleteImage 202 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_operations_controller\n    get:\n      description: Get detailed information about an existing image.\n      operationId: describe_image\n      parameters:\n      - description: Id of the image.\n        explode: false\n        in: path\n        name: imageId\n        required: true\n        schema:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeImageResponseContent'\n          description: DescribeImage 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_operations_controller\n  /v3/images/custom/{imageId}/logstreams:\n    get:\n      description: Retrieve the list of log streams associated with an image.\n      operationId: list_image_log_streams\n      parameters:\n      - description: Id of the image.\n        explode: false\n        in: path\n        name: imageId\n        required: true\n        schema:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: Region that the given image belongs to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: Region that the given image belongs to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListImageLogStreamsResponseContent'\n          description: ListImageLogStreams 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_logs_controller\n  /v3/images/custom/{imageId}/logstreams/{logStreamName}:\n    get:\n      description: Retrieve the events associated with an image build.\n      operationId: get_image_log_events\n      parameters:\n      - description: Id of the image.\n        explode: false\n        in: path\n        name: imageId\n        required: true\n        schema:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: Name of the log stream.\n        explode: false\n        in: path\n        name: logStreamName\n        required: true\n        schema:\n          description: Name of the log stream.\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      - description: \"If the value is true, the earliest log events are returned first.\\\n          \\ If the value is false, the latest log events are returned first. (Defaults\\\n          \\ to 'false'.)\"\n        explode: true\n        in: query\n        name: startFromHead\n        required: false\n        schema:\n          description: \"If the value is true, the earliest log events are returned\\\n            \\ first. If the value is false, the latest log events are returned first.\\\n            \\ (Defaults to 'false'.)\"\n          nullable: true\n          type: boolean\n        style: form\n      - description: \"The maximum number of log events returned. If you don't specify\\\n          \\ a value, the maximum is as many log events as can fit in a response size\\\n          \\ of 1 MB, up to 10,000 log events.\"\n        explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          description: \"The maximum number of log events returned. If you don't specify\\\n            \\ a value, the maximum is as many log events as can fit in a response\\\n            \\ size of 1 MB, up to 10,000 log events.\"\n          format: int32\n          nullable: true\n          type: integer\n        style: form\n      - description: \"The start of the time range, expressed in ISO 8601 format (e.g.\\\n          \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to this time or\\\n          \\ later than this time are included.\"\n        explode: true\n        in: query\n        name: startTime\n        required: false\n        schema:\n          description: \"The start of the time range, expressed in ISO 8601 format\\\n            \\ (e.g. '2021-01-01T20:00:00Z'). Events with a timestamp equal to this\\\n            \\ time or later than this time are included.\"\n          format: date-time\n          type: string\n        style: form\n      - description: \"The end of the time range, expressed in ISO 8601 format (e.g.\\\n          \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to or later than\\\n          \\ this time are not included.\"\n        explode: true\n        in: query\n        name: endTime\n        required: false\n        schema:\n          description: \"The end of the time range, expressed in ISO 8601 format (e.g.\\\n            \\ '2021-01-01T20:00:00Z'). Events with a timestamp equal to or later than\\\n            \\ this time are not included.\"\n          format: date-time\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImageLogEventsResponseContent'\n          description: GetImageLogEvents 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_logs_controller\n  /v3/images/custom/{imageId}/stackevents:\n    get:\n      description: Retrieve the events associated with the stack for a given image\n        build.\n      operationId: get_image_stack_events\n      parameters:\n      - description: Id of the image.\n        explode: false\n        in: path\n        name: imageId\n        required: true\n        schema:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        style: simple\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Token to use for paginated requests.\n        explode: true\n        in: query\n        name: nextToken\n        required: false\n        schema:\n          description: Token to use for paginated requests.\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetImageStackEventsResponseContent'\n          description: GetImageStackEvents 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotFoundExceptionResponseContent'\n          description: NotFoundException 404 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Logs\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_logs_controller\n  /v3/images/official:\n    get:\n      description: List Official ParallelCluster AMIs.\n      operationId: list_official_images\n      parameters:\n      - description: AWS Region that the operation corresponds to.\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          description: AWS Region that the operation corresponds to.\n          type: string\n        style: form\n      - description: Filter by OS distribution (Default is to not filter.)\n        explode: true\n        in: query\n        name: os\n        required: false\n        schema:\n          description: Filter by OS distribution (Default is to not filter.)\n          type: string\n        style: form\n      - description: Filter by architecture (Default is to not filter.)\n        explode: true\n        in: query\n        name: architecture\n        required: false\n        schema:\n          description: Filter by architecture (Default is to not filter.)\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOfficialImagesResponseContent'\n          description: ListOfficialImages 200 response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequestExceptionResponseContent'\n          description: BadRequestException 400 response\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedClientErrorResponseContent'\n          description: UnauthorizedClientError 401 response\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededExceptionResponseContent'\n          description: LimitExceededException 429 response\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceExceptionResponseContent'\n          description: InternalServiceException 500 response\n      tags:\n      - Image Operations\n      x-amazon-apigateway-integration:\n        credentials:\n          Fn::Sub: \"${APIGatewayExecutionRole.Arn}\"\n        httpMethod: POST\n        payloadFormatVersion: \"2.0\"\n        type: aws_proxy\n        uri:\n          Fn::Sub: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ParallelClusterFunction.Arn}/invocations\"\n      x-openapi-router-controller: pcluster.api.controllers.image_operations_controller\ncomponents:\n  schemas:\n    AmiInfo:\n      example:\n        amiId: amiId\n        os: os\n        name: name\n        version: version\n        architecture: architecture\n      properties:\n        amiId:\n          title: amiId\n          type: string\n        os:\n          title: os\n          type: string\n        name:\n          title: name\n          type: string\n        version:\n          title: version\n          type: string\n        architecture:\n          title: architecture\n          type: string\n      required:\n      - amiId\n      - architecture\n      - name\n      - os\n      - version\n      title: AmiInfo\n      type: object\n    BadRequestExceptionResponseContent:\n      description: This exception is thrown when a client calls an API with wrong\n        parameters.\n      properties:\n        message:\n          title: message\n          type: string\n      title: BadRequestExceptionResponseContent\n      type: object\n    BuildImageBadRequestExceptionResponseContent:\n      description: This exception is thrown when a client calls the BuildImage API\n        with an invalid request. This includes an error due to invalid image configuration.\n      properties:\n        configurationValidationErrors:\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: configurationValidationErrors\n          type: array\n        message:\n          title: message\n          type: string\n      title: BuildImageBadRequestExceptionResponseContent\n      type: object\n    BuildImageRequestContent:\n      example:\n        imageConfiguration: imageConfiguration\n        imageId: imageId\n      properties:\n        imageConfiguration:\n          description: Image configuration as a YAML document.\n          type: string\n        imageId:\n          description: Id of the Image that will be built.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n      required:\n      - imageConfiguration\n      - imageId\n      type: object\n    BuildImageResponseContent:\n      example:\n        image:\n          imageId: imageId\n          imageBuildStatus: null\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          ec2AmiInfo:\n            amiId: amiId\n          region: region\n          version: version\n        validationMessages:\n        - level: null\n          id: id\n          type: type\n          message: message\n        - level: null\n          id: id\n          type: type\n          message: message\n      properties:\n        image:\n          $ref: '#/components/schemas/ImageInfoSummary'\n        validationMessages:\n          description: List of messages collected during image config validation whose\n            level is lower than the 'validationFailureLevel' set by the user.\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: validationMessages\n          type: array\n      required:\n      - image\n      title: BuildImageResponseContent\n      type: object\n    Change:\n      example:\n        parameter: parameter\n        requestedValue: requestedValue\n        currentValue: currentValue\n      properties:\n        parameter:\n          title: parameter\n          type: string\n        requestedValue:\n          title: requestedValue\n          type: string\n        currentValue:\n          title: currentValue\n          type: string\n      title: Change\n      type: object\n    CloudFormationResourceStatus:\n      enum:\n      - CREATE_IN_PROGRESS\n      - CREATE_FAILED\n      - CREATE_COMPLETE\n      - DELETE_IN_PROGRESS\n      - DELETE_FAILED\n      - DELETE_COMPLETE\n      - DELETE_SKIPPED\n      - UPDATE_IN_PROGRESS\n      - UPDATE_FAILED\n      - UPDATE_COMPLETE\n      - IMPORT_FAILED\n      - IMPORT_COMPLETE\n      - IMPORT_IN_PROGRESS\n      - IMPORT_ROLLBACK_IN_PROGRESS\n      - IMPORT_ROLLBACK_FAILED\n      - IMPORT_ROLLBACK_COMPLETE\n      title: CloudFormationResourceStatus\n      type: string\n    CloudFormationStackStatus:\n      enum:\n      - CREATE_IN_PROGRESS\n      - CREATE_FAILED\n      - CREATE_COMPLETE\n      - ROLLBACK_IN_PROGRESS\n      - ROLLBACK_FAILED\n      - ROLLBACK_COMPLETE\n      - DELETE_IN_PROGRESS\n      - DELETE_FAILED\n      - DELETE_COMPLETE\n      - UPDATE_IN_PROGRESS\n      - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS\n      - UPDATE_COMPLETE\n      - UPDATE_ROLLBACK_IN_PROGRESS\n      - UPDATE_ROLLBACK_FAILED\n      - UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS\n      - UPDATE_ROLLBACK_COMPLETE\n      title: CloudFormationStackStatus\n      type: string\n    ClusterConfigurationStructure:\n      example:\n        url: url\n      properties:\n        url:\n          description: URL of the cluster configuration file.\n          title: url\n          type: string\n      title: ClusterConfigurationStructure\n      type: object\n    ClusterInfoSummary:\n      example:\n        clusterName: clusterName\n        cloudformationStackStatus: null\n        cloudformationStackArn: cloudformationStackArn\n        region: region\n        version: version\n        clusterStatus: null\n      properties:\n        clusterName:\n          description: Name of the cluster.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          title: clusterName\n          type: string\n        cloudformationStackStatus:\n          $ref: '#/components/schemas/CloudFormationStackStatus'\n        cloudformationStackArn:\n          description: ARN of the main CloudFormation stack.\n          title: cloudformationStackArn\n          type: string\n        region:\n          description: AWS region where the cluster is created.\n          title: region\n          type: string\n        version:\n          description: ParallelCluster version used to create the cluster.\n          title: version\n          type: string\n        clusterStatus:\n          $ref: '#/components/schemas/ClusterStatus'\n      required:\n      - cloudformationStackArn\n      - cloudformationStackStatus\n      - clusterName\n      - clusterStatus\n      - region\n      - version\n      title: ClusterInfoSummary\n      type: object\n    ClusterInstance:\n      example:\n        launchTime: 2000-01-23T04:56:07.000+00:00\n        instanceId: instanceId\n        queueName: queueName\n        publicIpAddress: publicIpAddress\n        instanceType: instanceType\n        state: null\n        nodeType: null\n        privateIpAddress: privateIpAddress\n      properties:\n        launchTime:\n          format: date-time\n          title: launchTime\n          type: string\n        instanceId:\n          title: instanceId\n          type: string\n        queueName:\n          title: queueName\n          type: string\n        publicIpAddress:\n          title: publicIpAddress\n          type: string\n        instanceType:\n          title: instanceType\n          type: string\n        state:\n          $ref: '#/components/schemas/InstanceState'\n        nodeType:\n          $ref: '#/components/schemas/NodeType'\n        privateIpAddress:\n          title: privateIpAddress\n          type: string\n      required:\n      - instanceId\n      - instanceType\n      - launchTime\n      - nodeType\n      - privateIpAddress\n      - state\n      title: ClusterInstance\n      type: object\n    ClusterStatus:\n      enum:\n      - CREATE_IN_PROGRESS\n      - CREATE_FAILED\n      - CREATE_COMPLETE\n      - DELETE_IN_PROGRESS\n      - DELETE_FAILED\n      - DELETE_COMPLETE\n      - UPDATE_IN_PROGRESS\n      - UPDATE_COMPLETE\n      - UPDATE_FAILED\n      title: ClusterStatus\n      type: string\n    ClusterStatusFilteringOption:\n      enum:\n      - CREATE_IN_PROGRESS\n      - CREATE_FAILED\n      - CREATE_COMPLETE\n      - DELETE_IN_PROGRESS\n      - DELETE_FAILED\n      - UPDATE_IN_PROGRESS\n      - UPDATE_COMPLETE\n      - UPDATE_FAILED\n      title: ClusterStatusFilteringOption\n      type: string\n    ComputeFleetStatus:\n      enum:\n      - START_REQUESTED\n      - STARTING\n      - RUNNING\n      - PROTECTED\n      - STOP_REQUESTED\n      - STOPPING\n      - STOPPED\n      - UNKNOWN\n      - ENABLED\n      - DISABLED\n      title: ComputeFleetStatus\n      type: string\n    ConfigValidationMessage:\n      example:\n        level: null\n        id: id\n        type: type\n        message: message\n      properties:\n        level:\n          $ref: '#/components/schemas/ValidationLevel'\n        id:\n          description: Id of the validator.\n          title: id\n          type: string\n        type:\n          description: Type of the validator.\n          title: type\n          type: string\n        message:\n          description: Validation message\n          title: message\n          type: string\n      title: ConfigValidationMessage\n      type: object\n    ConflictExceptionResponseContent:\n      description: This exception is thrown when a client request to create/modify\n        content would result in a conflict.\n      properties:\n        message:\n          title: message\n          type: string\n      title: ConflictExceptionResponseContent\n      type: object\n    CreateClusterBadRequestExceptionResponseContent:\n      description: This exception is thrown when a client calls the CreateCluster\n        API with an invalid request. This includes an error due to invalid cluster\n        configuration.\n      properties:\n        configurationValidationErrors:\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: configurationValidationErrors\n          type: array\n        message:\n          title: message\n          type: string\n      title: CreateClusterBadRequestExceptionResponseContent\n      type: object\n    CreateClusterRequestContent:\n      example:\n        clusterName: clusterName\n        clusterConfiguration: clusterConfiguration\n      properties:\n        clusterName:\n          description: Name of the cluster that will be created.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          type: string\n        clusterConfiguration:\n          description: Cluster configuration as a YAML document.\n          type: string\n      required:\n      - clusterConfiguration\n      - clusterName\n      type: object\n    CreateClusterResponseContent:\n      example:\n        cluster:\n          clusterName: clusterName\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          region: region\n          version: version\n          clusterStatus: null\n        validationMessages:\n        - level: null\n          id: id\n          type: type\n          message: message\n        - level: null\n          id: id\n          type: type\n          message: message\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ClusterInfoSummary'\n        validationMessages:\n          description: List of messages collected during cluster config validation\n            whose level is lower than the 'validationFailureLevel' set by the user.\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: validationMessages\n          type: array\n      required:\n      - cluster\n      title: CreateClusterResponseContent\n      type: object\n    DeleteClusterResponseContent:\n      example:\n        cluster:\n          clusterName: clusterName\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          region: region\n          version: version\n          clusterStatus: null\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ClusterInfoSummary'\n      required:\n      - cluster\n      title: DeleteClusterResponseContent\n      type: object\n    DeleteImageResponseContent:\n      example:\n        image:\n          imageId: imageId\n          imageBuildStatus: null\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          ec2AmiInfo:\n            amiId: amiId\n          region: region\n          version: version\n      properties:\n        image:\n          $ref: '#/components/schemas/ImageInfoSummary'\n      required:\n      - image\n      title: DeleteImageResponseContent\n      type: object\n    DescribeClusterInstancesResponseContent:\n      example:\n        instances:\n        - launchTime: 2000-01-23T04:56:07.000+00:00\n          instanceId: instanceId\n          queueName: queueName\n          publicIpAddress: publicIpAddress\n          instanceType: instanceType\n          state: null\n          nodeType: null\n          privateIpAddress: privateIpAddress\n        - launchTime: 2000-01-23T04:56:07.000+00:00\n          instanceId: instanceId\n          queueName: queueName\n          publicIpAddress: publicIpAddress\n          instanceType: instanceType\n          state: null\n          nodeType: null\n          privateIpAddress: privateIpAddress\n        nextToken: nextToken\n      properties:\n        instances:\n          items:\n            $ref: '#/components/schemas/ClusterInstance'\n          title: instances\n          type: array\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n      required:\n      - instances\n      title: DescribeClusterInstancesResponseContent\n      type: object\n    DescribeClusterResponseContent:\n      example:\n        creationTime: 2000-01-23T04:56:07.000+00:00\n        version: version\n        clusterConfiguration:\n          url: url\n        tags:\n        - value: value\n          key: key\n        - value: value\n          key: key\n        cloudFormationStackStatus: null\n        clusterName: clusterName\n        computeFleetStatus: null\n        failureReason: failureReason\n        cloudformationStackArn: cloudformationStackArn\n        lastUpdatedTime: 2000-01-23T04:56:07.000+00:00\n        region: region\n        clusterStatus: null\n        headNode:\n          launchTime: 2000-01-23T04:56:07.000+00:00\n          instanceId: instanceId\n          publicIpAddress: publicIpAddress\n          instanceType: instanceType\n          state: null\n          privateIpAddress: privateIpAddress\n      properties:\n        creationTime:\n          description: Timestamp representing the cluster creation time.\n          format: date-time\n          title: creationTime\n          type: string\n        version:\n          description: ParallelCluster version used to create the cluster.\n          title: version\n          type: string\n        clusterConfiguration:\n          $ref: '#/components/schemas/ClusterConfigurationStructure'\n        tags:\n          description: Tags associated with the cluster.\n          items:\n            $ref: '#/components/schemas/Tag'\n          title: tags\n          type: array\n        cloudFormationStackStatus:\n          $ref: '#/components/schemas/CloudFormationStackStatus'\n        clusterName:\n          description: Name of the cluster.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          title: clusterName\n          type: string\n        computeFleetStatus:\n          $ref: '#/components/schemas/ComputeFleetStatus'\n        failureReason:\n          description: \"Reason of the failure when the stack is in CREATE_FAILED,\\\n            \\ UPDATE_FAILED or DELETE_FAILED status.\"\n          title: failureReason\n          type: string\n        cloudformationStackArn:\n          description: ARN of the main CloudFormation stack.\n          title: cloudformationStackArn\n          type: string\n        lastUpdatedTime:\n          description: Timestamp representing the last cluster update time.\n          format: date-time\n          title: lastUpdatedTime\n          type: string\n        region:\n          description: AWS region where the cluster is created.\n          title: region\n          type: string\n        clusterStatus:\n          $ref: '#/components/schemas/ClusterStatus'\n        headNode:\n          $ref: '#/components/schemas/EC2Instance'\n      required:\n      - cloudFormationStackStatus\n      - cloudformationStackArn\n      - clusterConfiguration\n      - clusterName\n      - clusterStatus\n      - computeFleetStatus\n      - creationTime\n      - lastUpdatedTime\n      - region\n      - tags\n      - version\n      title: DescribeClusterResponseContent\n      type: object\n    DescribeComputeFleetResponseContent:\n      example:\n        status: null\n        lastStatusUpdatedTime: 2000-01-23T04:56:07.000+00:00\n      properties:\n        lastStatusUpdatedTime:\n          description: Timestamp representing the last status update time.\n          format: date-time\n          title: lastStatusUpdatedTime\n          type: string\n        status:\n          $ref: '#/components/schemas/ComputeFleetStatus'\n      required:\n      - status\n      title: DescribeComputeFleetResponseContent\n      type: object\n    DescribeImageResponseContent:\n      example:\n        cloudformationStackStatusReason: cloudformationStackStatusReason\n        imageConfiguration:\n          url: url\n        imagebuilderImageStatusReason: imagebuilderImageStatusReason\n        imageId: imageId\n        cloudformationStackTags:\n        - value: value\n          key: key\n        - value: value\n          key: key\n        imagebuilderImageStatus: null\n        creationTime: 2000-01-23T04:56:07.000+00:00\n        version: version\n        imageBuildStatus: null\n        cloudformationStackStatus: null\n        imageBuildLogsArn: imageBuildLogsArn\n        cloudformationStackArn: cloudformationStackArn\n        region: region\n        cloudformationStackCreationTime: 2000-01-23T04:56:07.000+00:00\n        ec2AmiInfo:\n          amiName: amiName\n          amiId: amiId\n          description: description\n          state: null\n          tags:\n          - value: value\n            key: key\n          - value: value\n            key: key\n          architecture: architecture\n      properties:\n        cloudformationStackStatusReason:\n          description: Reason for the CloudFormation stack status.\n          title: cloudformationStackStatusReason\n          type: string\n        imageConfiguration:\n          $ref: '#/components/schemas/ImageConfigurationStructure'\n        imagebuilderImageStatusReason:\n          description: Reason for the ImageBuilder Image status.\n          title: imagebuilderImageStatusReason\n          type: string\n        imageId:\n          description: Id of the Image to retrieve detailed information for.\n          title: imageId\n          type: string\n        imagebuilderImageStatus:\n          $ref: '#/components/schemas/ImageBuilderImageStatus'\n        creationTime:\n          description: Timestamp representing the image creation time.\n          format: date-time\n          title: creationTime\n          type: string\n        imageBuildStatus:\n          $ref: '#/components/schemas/ImageBuildStatus'\n        cloudformationStackStatus:\n          $ref: '#/components/schemas/CloudFormationStackStatus'\n        cloudformationStackArn:\n          description: ARN of the main CloudFormation stack.\n          title: cloudformationStackArn\n          type: string\n        imageBuildLogsArn:\n          description: ARN of the logs for the image build process.\n          title: imageBuildLogsArn\n          type: string\n        cloudformationStackCreationTime:\n          description: Timestamp representing the CloudFormation stack creation time.\n          format: date-time\n          title: cloudformationStackCreationTime\n          type: string\n        cloudformationStackTags:\n          description: Tags for the CloudFormation stack.\n          items:\n            $ref: '#/components/schemas/Tag'\n          title: cloudformationStackTags\n          type: array\n        region:\n          description: AWS region where the image is created.\n          title: region\n          type: string\n        ec2AmiInfo:\n          $ref: '#/components/schemas/Ec2AmiInfo'\n        version:\n          description: ParallelCluster version used to build the image.\n          title: version\n          type: string\n      required:\n      - imageBuildStatus\n      - imageConfiguration\n      - imageId\n      - region\n      - version\n      title: DescribeImageResponseContent\n      type: object\n    DryrunOperationExceptionResponseContent:\n      description: Communicates that the operation would have succeeded without the\n        dryrun flag.\n      properties:\n        validationMessages:\n          description: List of messages collected during cluster config validation\n            whose level is lower than the 'validationFailureLevel' set by the user.\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: validationMessages\n          type: array\n        message:\n          title: message\n          type: string\n        changeSet:\n          description: List of configuration changes requested by the operation.\n          items:\n            $ref: '#/components/schemas/Change'\n          title: changeSet\n          type: array\n      title: DryrunOperationExceptionResponseContent\n      type: object\n    EC2Instance:\n      example:\n        launchTime: 2000-01-23T04:56:07.000+00:00\n        instanceId: instanceId\n        publicIpAddress: publicIpAddress\n        instanceType: instanceType\n        state: null\n        privateIpAddress: privateIpAddress\n      properties:\n        launchTime:\n          format: date-time\n          title: launchTime\n          type: string\n        instanceId:\n          title: instanceId\n          type: string\n        publicIpAddress:\n          title: publicIpAddress\n          type: string\n        instanceType:\n          title: instanceType\n          type: string\n        state:\n          $ref: '#/components/schemas/InstanceState'\n        privateIpAddress:\n          title: privateIpAddress\n          type: string\n      required:\n      - instanceId\n      - instanceType\n      - launchTime\n      - privateIpAddress\n      - state\n      title: EC2Instance\n      type: object\n    Ec2AmiInfo:\n      example:\n        amiName: amiName\n        amiId: amiId\n        description: description\n        state: null\n        tags:\n        - value: value\n          key: key\n        - value: value\n          key: key\n        architecture: architecture\n      properties:\n        amiName:\n          description: EC2 AMI name\n          title: amiName\n          type: string\n        amiId:\n          description: EC2 AMI id\n          title: amiId\n          type: string\n        description:\n          description: EC2 AMI description\n          title: description\n          type: string\n        state:\n          $ref: '#/components/schemas/Ec2AmiState'\n        tags:\n          description: EC2 AMI Tags\n          items:\n            $ref: '#/components/schemas/Tag'\n          title: tags\n          type: array\n        architecture:\n          description: EC2 AMI architecture\n          title: architecture\n          type: string\n      required:\n      - amiId\n      title: Ec2AmiInfo\n      type: object\n    Ec2AmiInfoSummary:\n      example:\n        amiId: amiId\n      properties:\n        amiId:\n          description: EC2 AMI id\n          title: amiId\n          type: string\n      required:\n      - amiId\n      title: Ec2AmiInfoSummary\n      type: object\n    Ec2AmiState:\n      enum:\n      - PENDING\n      - AVAILABLE\n      - INVALID\n      - DEREGISTERED\n      - TRANSIENT\n      - FAILED\n      - ERROR\n      title: Ec2AmiState\n      type: string\n    GetClusterLogEventsResponseContent:\n      example:\n        nextToken: nextToken\n        prevToken: prevToken\n        events:\n        - message: message\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        - message: message\n          timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n        prevToken:\n          description: Token to use for paginated requests.\n          title: prevToken\n          type: string\n        events:\n          items:\n            $ref: '#/components/schemas/LogEvent'\n          title: events\n          type: array\n      title: GetClusterLogEventsResponseContent\n      type: object\n    GetClusterStackEventsResponseContent:\n      example:\n        nextToken: nextToken\n        events:\n        - eventId: eventId\n          physicalResourceId: physicalResourceId\n          resourceStatus: null\n          resourceStatusReason: resourceStatusReason\n          clientRequestToken: clientRequestToken\n          resourceProperties: resourceProperties\n          stackId: stackId\n          stackName: stackName\n          logicalResourceId: logicalResourceId\n          resourceType: resourceType\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        - eventId: eventId\n          physicalResourceId: physicalResourceId\n          resourceStatus: null\n          resourceStatusReason: resourceStatusReason\n          clientRequestToken: clientRequestToken\n          resourceProperties: resourceProperties\n          stackId: stackId\n          stackName: stackName\n          logicalResourceId: logicalResourceId\n          resourceType: resourceType\n          timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n        events:\n          items:\n            $ref: '#/components/schemas/StackEvent'\n          title: events\n          type: array\n      title: GetClusterStackEventsResponseContent\n      type: object\n    GetImageLogEventsResponseContent:\n      example:\n        nextToken: nextToken\n        prevToken: prevToken\n        events:\n        - message: message\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        - message: message\n          timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n        prevToken:\n          description: Token to use for paginated requests.\n          title: prevToken\n          type: string\n        events:\n          items:\n            $ref: '#/components/schemas/LogEvent'\n          title: events\n          type: array\n      title: GetImageLogEventsResponseContent\n      type: object\n    GetImageStackEventsResponseContent:\n      example:\n        nextToken: nextToken\n        events:\n        - eventId: eventId\n          physicalResourceId: physicalResourceId\n          resourceStatus: null\n          resourceStatusReason: resourceStatusReason\n          clientRequestToken: clientRequestToken\n          resourceProperties: resourceProperties\n          stackId: stackId\n          stackName: stackName\n          logicalResourceId: logicalResourceId\n          resourceType: resourceType\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        - eventId: eventId\n          physicalResourceId: physicalResourceId\n          resourceStatus: null\n          resourceStatusReason: resourceStatusReason\n          clientRequestToken: clientRequestToken\n          resourceProperties: resourceProperties\n          stackId: stackId\n          stackName: stackName\n          logicalResourceId: logicalResourceId\n          resourceType: resourceType\n          timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n        events:\n          items:\n            $ref: '#/components/schemas/StackEvent'\n          title: events\n          type: array\n      title: GetImageStackEventsResponseContent\n      type: object\n    ImageBuildStatus:\n      enum:\n      - BUILD_IN_PROGRESS\n      - BUILD_FAILED\n      - BUILD_COMPLETE\n      - DELETE_IN_PROGRESS\n      - DELETE_FAILED\n      - DELETE_COMPLETE\n      title: ImageBuildStatus\n      type: string\n    ImageBuilderImageStatus:\n      enum:\n      - PENDING\n      - CREATING\n      - BUILDING\n      - TESTING\n      - DISTRIBUTING\n      - INTEGRATING\n      - AVAILABLE\n      - CANCELLED\n      - FAILED\n      - DEPRECATED\n      - DELETED\n      title: ImageBuilderImageStatus\n      type: string\n    ImageConfigurationStructure:\n      example:\n        url: url\n      properties:\n        url:\n          description: URL of the image configuration file.\n          title: url\n          type: string\n      title: ImageConfigurationStructure\n      type: object\n    ImageInfoSummary:\n      example:\n        imageId: imageId\n        imageBuildStatus: null\n        cloudformationStackStatus: null\n        cloudformationStackArn: cloudformationStackArn\n        ec2AmiInfo:\n          amiId: amiId\n        region: region\n        version: version\n      properties:\n        imageId:\n          description: Id of the image.\n          pattern: \"^[a-zA-Z][a-zA-Z0-9-]+$\"\n          title: imageId\n          type: string\n        imageBuildStatus:\n          $ref: '#/components/schemas/ImageBuildStatus'\n        cloudformationStackStatus:\n          $ref: '#/components/schemas/CloudFormationStackStatus'\n        cloudformationStackArn:\n          description: ARN of the main CloudFormation stack.\n          title: cloudformationStackArn\n          type: string\n        ec2AmiInfo:\n          $ref: '#/components/schemas/Ec2AmiInfoSummary'\n        region:\n          description: AWS region where the image is built.\n          title: region\n          type: string\n        version:\n          description: ParallelCluster version used to build the image.\n          title: version\n          type: string\n      required:\n      - imageBuildStatus\n      - imageId\n      - region\n      - version\n      title: ImageInfoSummary\n      type: object\n    ImageStatusFilteringOption:\n      enum:\n      - AVAILABLE\n      - PENDING\n      - FAILED\n      title: ImageStatusFilteringOption\n      type: string\n    InstanceState:\n      enum:\n      - pending\n      - running\n      - shutting-down\n      - terminated\n      - stopping\n      - stopped\n      title: InstanceState\n      type: string\n    InternalServiceExceptionResponseContent:\n      description: This exception is thrown on an unhandled service error.\n      properties:\n        message:\n          title: message\n          type: string\n      title: InternalServiceExceptionResponseContent\n      type: object\n    LimitExceededExceptionResponseContent:\n      description: The client is sending more than the allowed number of requests\n        per unit of time.\n      properties:\n        message:\n          title: message\n          type: string\n      title: LimitExceededExceptionResponseContent\n      type: object\n    ListClusterLogStreamsResponseContent:\n      example:\n        nextToken: nextToken\n        logStreams:\n        - logStreamArn: logStreamArn\n          creationTime: 2000-01-23T04:56:07.000+00:00\n          logStreamName: logStreamName\n          firstEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastIngestionTime: 2000-01-23T04:56:07.000+00:00\n          uploadSequenceToken: uploadSequenceToken\n        - logStreamArn: logStreamArn\n          creationTime: 2000-01-23T04:56:07.000+00:00\n          logStreamName: logStreamName\n          firstEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastIngestionTime: 2000-01-23T04:56:07.000+00:00\n          uploadSequenceToken: uploadSequenceToken\n      properties:\n        logStreams:\n          items:\n            $ref: '#/components/schemas/LogStream'\n          title: logStreams\n          type: array\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n      required:\n      - logStreams\n      title: ListClusterLogStreamsResponseContent\n      type: object\n    ListClustersResponseContent:\n      example:\n        nextToken: nextToken\n        clusters:\n        - clusterName: clusterName\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          region: region\n          version: version\n          clusterStatus: null\n        - clusterName: clusterName\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          region: region\n          version: version\n          clusterStatus: null\n      properties:\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n        clusters:\n          items:\n            $ref: '#/components/schemas/ClusterInfoSummary'\n          title: clusters\n          type: array\n      required:\n      - clusters\n      title: ListClustersResponseContent\n      type: object\n    ListImageLogStreamsResponseContent:\n      example:\n        logStreams:\n        - logStreamArn: logStreamArn\n          creationTime: 2000-01-23T04:56:07.000+00:00\n          logStreamName: logStreamName\n          firstEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastIngestionTime: 2000-01-23T04:56:07.000+00:00\n          uploadSequenceToken: uploadSequenceToken\n        - logStreamArn: logStreamArn\n          creationTime: 2000-01-23T04:56:07.000+00:00\n          logStreamName: logStreamName\n          firstEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastEventTimestamp: 2000-01-23T04:56:07.000+00:00\n          lastIngestionTime: 2000-01-23T04:56:07.000+00:00\n          uploadSequenceToken: uploadSequenceToken\n        nextToken: nextToken\n      properties:\n        logStreams:\n          items:\n            $ref: '#/components/schemas/LogStream'\n          title: logStreams\n          type: array\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n      required:\n      - logStreams\n      title: ListImageLogStreamsResponseContent\n      type: object\n    ListImagesResponseContent:\n      example:\n        nextToken: nextToken\n        images:\n        - imageId: imageId\n          imageBuildStatus: null\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          ec2AmiInfo:\n            amiId: amiId\n          region: region\n          version: version\n        - imageId: imageId\n          imageBuildStatus: null\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          ec2AmiInfo:\n            amiId: amiId\n          region: region\n          version: version\n      properties:\n        images:\n          items:\n            $ref: '#/components/schemas/ImageInfoSummary'\n          title: images\n          type: array\n        nextToken:\n          description: Token to use for paginated requests.\n          title: nextToken\n          type: string\n      required:\n      - images\n      title: ListImagesResponseContent\n      type: object\n    ListOfficialImagesResponseContent:\n      example:\n        images:\n        - amiId: amiId\n          os: os\n          name: name\n          version: version\n          architecture: architecture\n        - amiId: amiId\n          os: os\n          name: name\n          version: version\n          architecture: architecture\n      properties:\n        images:\n          items:\n            $ref: '#/components/schemas/AmiInfo'\n          title: images\n          type: array\n      required:\n      - images\n      title: ListOfficialImagesResponseContent\n      type: object\n    LogEvent:\n      example:\n        message: message\n        timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        message:\n          title: message\n          type: string\n        timestamp:\n          format: date-time\n          title: timestamp\n          type: string\n      required:\n      - message\n      - timestamp\n      title: LogEvent\n      type: object\n    LogStream:\n      example:\n        logStreamArn: logStreamArn\n        creationTime: 2000-01-23T04:56:07.000+00:00\n        logStreamName: logStreamName\n        firstEventTimestamp: 2000-01-23T04:56:07.000+00:00\n        lastEventTimestamp: 2000-01-23T04:56:07.000+00:00\n        lastIngestionTime: 2000-01-23T04:56:07.000+00:00\n        uploadSequenceToken: uploadSequenceToken\n      properties:\n        logStreamArn:\n          description: The Amazon Resource Name (ARN) of the log stream.\n          title: logStreamArn\n          type: string\n        creationTime:\n          description: The creation time of the stream.\n          format: date-time\n          title: creationTime\n          type: string\n        logStreamName:\n          description: Name of the log stream.\n          title: logStreamName\n          type: string\n        firstEventTimestamp:\n          description: The time of the first event of the stream.\n          format: date-time\n          title: firstEventTimestamp\n          type: string\n        lastEventTimestamp:\n          description: \"The time of the last event of the stream. The lastEventTime\\\n            \\ value updates on an eventual consistency basis. It typically updates\\\n            \\ in less than an hour from ingestion, but in rare situations might take\\\n            \\ longer.\"\n          format: date-time\n          title: lastEventTimestamp\n          type: string\n        lastIngestionTime:\n          description: The last ingestion time.\n          format: date-time\n          title: lastIngestionTime\n          type: string\n        uploadSequenceToken:\n          description: The sequence token.\n          title: uploadSequenceToken\n          type: string\n      required:\n      - creationTime\n      - firstEventTimestamp\n      - lastEventTimestamp\n      - lastIngestionTime\n      - logStreamArn\n      - logStreamName\n      - uploadSequenceToken\n      title: LogStream\n      type: object\n    NodeType:\n      enum:\n      - HeadNode\n      - ComputeNode\n      title: NodeType\n      type: string\n    NotFoundExceptionResponseContent:\n      description: This exception is thrown when the requested entity is not found.\n      properties:\n        message:\n          title: message\n          type: string\n      title: NotFoundExceptionResponseContent\n      type: object\n    RequestedComputeFleetStatus:\n      enum:\n      - START_REQUESTED\n      - STOP_REQUESTED\n      - ENABLED\n      - DISABLED\n      title: RequestedComputeFleetStatus\n      type: string\n    StackEvent:\n      example:\n        eventId: eventId\n        physicalResourceId: physicalResourceId\n        resourceStatus: null\n        resourceStatusReason: resourceStatusReason\n        clientRequestToken: clientRequestToken\n        resourceProperties: resourceProperties\n        stackId: stackId\n        stackName: stackName\n        logicalResourceId: logicalResourceId\n        resourceType: resourceType\n        timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        eventId:\n          description: The unique ID of this event.\n          title: eventId\n          type: string\n        physicalResourceId:\n          description: The name or unique identifier associated with the physical\n            instance of the resource.\n          title: physicalResourceId\n          type: string\n        resourceStatus:\n          $ref: '#/components/schemas/CloudFormationResourceStatus'\n        resourceStatusReason:\n          description: Success/failure message associated with the resource.\n          title: resourceStatusReason\n          type: string\n        clientRequestToken:\n          description: The token passed to the operation that generated this event.\n          title: clientRequestToken\n          type: string\n        resourceProperties:\n          description: BLOB of the properties used to create the resource.\n          title: resourceProperties\n          type: string\n        stackId:\n          description: The unique ID name of the instance of the stack.\n          title: stackId\n          type: string\n        stackName:\n          description: The name associated with a stack.\n          title: stackName\n          type: string\n        logicalResourceId:\n          description: The logical name of the resource specified in the template.\n          title: logicalResourceId\n          type: string\n        resourceType:\n          description: Type of resource.\n          title: resourceType\n          type: string\n        timestamp:\n          description: Time the status was updated.\n          format: date-time\n          title: timestamp\n          type: string\n      required:\n      - eventId\n      - logicalResourceId\n      - physicalResourceId\n      - resourceStatus\n      - resourceType\n      - stackId\n      - stackName\n      - timestamp\n      title: StackEvent\n      type: object\n    Tag:\n      example:\n        value: value\n        key: key\n      properties:\n        value:\n          description: Tag value\n          title: value\n          type: string\n        key:\n          description: Tag name\n          title: key\n          type: string\n      title: Tag\n      type: object\n    UnauthorizedClientErrorResponseContent:\n      description: This exception is thrown when the client is not authorized to perform\n        an action.\n      properties:\n        message:\n          title: message\n          type: string\n      title: UnauthorizedClientErrorResponseContent\n      type: object\n    UpdateClusterBadRequestExceptionResponseContent:\n      description: This exception is thrown when a client calls the UpdateCluster\n        API with an invalid request. This includes an error due to invalid cluster\n        configuration and unsupported update.\n      properties:\n        configurationValidationErrors:\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: configurationValidationErrors\n          type: array\n        message:\n          title: message\n          type: string\n        updateValidationErrors:\n          items:\n            $ref: '#/components/schemas/UpdateError'\n          title: updateValidationErrors\n          type: array\n        changeSet:\n          items:\n            $ref: '#/components/schemas/Change'\n          title: changeSet\n          type: array\n      title: UpdateClusterBadRequestExceptionResponseContent\n      type: object\n    UpdateClusterRequestContent:\n      example:\n        clusterConfiguration: clusterConfiguration\n      properties:\n        clusterConfiguration:\n          description: Cluster configuration as a YAML document.\n          type: string\n      required:\n      - clusterConfiguration\n      type: object\n    UpdateClusterResponseContent:\n      example:\n        cluster:\n          clusterName: clusterName\n          cloudformationStackStatus: null\n          cloudformationStackArn: cloudformationStackArn\n          region: region\n          version: version\n          clusterStatus: null\n        validationMessages:\n        - level: null\n          id: id\n          type: type\n          message: message\n        - level: null\n          id: id\n          type: type\n          message: message\n        changeSet:\n        - parameter: parameter\n          requestedValue: requestedValue\n          currentValue: currentValue\n        - parameter: parameter\n          requestedValue: requestedValue\n          currentValue: currentValue\n      properties:\n        cluster:\n          $ref: '#/components/schemas/ClusterInfoSummary'\n        validationMessages:\n          description: List of messages collected during cluster config validation\n            whose level is lower than the 'validationFailureLevel' set by the user.\n          items:\n            $ref: '#/components/schemas/ConfigValidationMessage'\n          title: validationMessages\n          type: array\n        changeSet:\n          description: List of configuration changes requested by the update operation.\n          items:\n            $ref: '#/components/schemas/Change'\n          title: changeSet\n          type: array\n      required:\n      - changeSet\n      - cluster\n      title: UpdateClusterResponseContent\n      type: object\n    UpdateComputeFleetRequestContent:\n      example:\n        status: null\n      properties:\n        status:\n          $ref: '#/components/schemas/RequestedComputeFleetStatus'\n      required:\n      - status\n      type: object\n    UpdateComputeFleetResponseContent:\n      example:\n        status: null\n        lastStatusUpdatedTime: 2000-01-23T04:56:07.000+00:00\n      properties:\n        status:\n          $ref: '#/components/schemas/ComputeFleetStatus'\n        lastStatusUpdatedTime:\n          description: Timestamp representing the last status update time.\n          format: date-time\n          title: lastStatusUpdatedTime\n          type: string\n      required:\n      - status\n      title: UpdateComputeFleetResponseContent\n      type: object\n    UpdateError:\n      properties:\n        parameter:\n          title: parameter\n          type: string\n        requestedValue:\n          title: requestedValue\n          type: string\n        message:\n          title: message\n          type: string\n        currentValue:\n          title: currentValue\n          type: string\n      title: UpdateError\n      type: object\n    ValidationLevel:\n      enum:\n      - INFO\n      - WARNING\n      - ERROR\n      title: ValidationLevel\n      type: string\n  # securitySchemes:\n  #   aws.auth.sigv4:\n  #     description: AWS Signature Version 4 authentication\n  #     in: header\n  #     name: Authorization\n  #     type: apiKey\n  #     x-amazon-apigateway-authtype: awsSigv4\n  #     x-apikeyInfoFunc: pcluster.api.controllers.security_controller_.info_from_aws.auth.sigv4\n",
			"canonicalURL": "/github.com/aws/aws-parallelcluster@6303aab8e87244152d515cee5746f1d03a60402d/-/blob/cli/src/pcluster/api/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aws/aws-parallelcluster/blob/6303aab8e87244152d515cee5746f1d03a60402d/cli/src/pcluster/api/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}