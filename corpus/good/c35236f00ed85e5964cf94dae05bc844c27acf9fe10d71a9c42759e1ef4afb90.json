{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vippsas/vipps-recurring-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 82633,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    # Recurring payments\n\n    Recurring payments is used for subscription payments such as weekly dues for newspaper access, monthly dues for public transportation, etc.\n\n    1. A draft agreement is initialized and the user is redirected for approval.\n    2. The user approves the agreement and the merchant can call GET on the agreement to verify the status.\n    3. The merchant can start sending charges which will be charged the user in the future.\n\n    The merchant is responsible for checking the status of charges, and cancelling any user access if charges are failing (or contacting the user).\n\n    ## Authentication\n    See \u003ca href=\"#/Authorization%20Service/getAccessToken\" target=\"_blank\"\u003eFetch authorization token\u003c/a\u003e\n\n    For information regarding authentication please read [our guide](https://github.com/vippsas/vipps-recurring-api/blob/master/vipps-recurring-api.md#authentication)\n  version: 2.6.4\n  title: Recurring Payments Merchant API\ntags:\n  - name: Authorization Service\n  - name: Agreement V2 Endpoints\n  - name: Coming soon - Agreement V3 Endpoints\n  - name: Charge Endpoints\n  - name: Userinfo Endpoint\npaths:\n  /accesstoken/get:\n    post:\n      servers:\n        - url: https://api.vipps.no\n        - url: https://apitest.vipps.no\n      tags:\n        - Authorization Service\n      summary: Fetch authorization token\n      operationId: getAccessToken\n      description: \u003e-\n        The access token endpoint is used to get the JWT (JSON Web Token) that\n        must be passed in every API request in the Authorization header.\n        The access token is a base64-encoded string value that must be\n        acquired first before making any Vipps API calls.\n        The access token is valid for 1 hour in the test environment\n        and 24 hours in the production environment.\n      parameters:\n        - name: client_id\n          in: header\n          required: true\n          description: \u003e-\n            The `client_id` is available on portal.vipps.no, under the 'Utvikler' tab.\n          schema:\n            type: string\n          example: fb492b5e-7907-4d83-ba20-c7fb60ca35de\n        - name: client_secret\n          in: header\n          required: true\n          description: \u003e-\n            The `client_secret` is available on portal.vipps.no, under the 'Utvikler' tab.\n            Keep it secret.\n          schema:\n            type: string\n          example: Y8Kteew6GE2ZmeycEt6egg==\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessTokenResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n\n  \"/recurring/v2/agreements\":\n    get:\n      tags:\n        - Agreement V2 Endpoints\n      summary: List Agreements\n      operationId: listAgreements\n      description: \u003e-\n        The API call allows merchant to fetch all agreements.\n        If no query status is supplied it will default to only retrieving active agreements.\n        There is no way to list all Agreements with all statuses, this is due to performance.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - name: status\n          in: query\n          required: false\n          description: Filter by status of the agreement.\n          schema:\n            $ref: \"#/components/schemas/AgreementStatus\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Agreement\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n    post:\n      tags:\n        - Agreement V2 Endpoints\n      summary: Create a new Agreement, to be confirmed in Vipps\n      operationId: draftAgreement\n      description: \u003e-\n        The API call allows merchants to create agreements for a user to accept. Once the agreement is drafted you will receive a `vippsConfirmationUrl`. This is used to redirect the user to the Vipps landing page, or to the Vipps app if `\"isApp\":true` is used.\n          \u003c/br\u003e\n          If the user accepts or rejects the agreement, the user will be redirected back to whichever URL has been passed in `merchantRedirectUrl`. We **strongly** recommend that you implement polling on the agreement to check when the status changes to active instead of relaying on the redirect back to the `merchantRedirectUrl`. We have no control over if a user is actually redirected back or not, this depends on what browser the user came from.\n          \u003c/br\u003e\n          Please note the different use cases for `initialCharge` and `campaign`. And when to use `RESERVE_CAPTURE` instead of `DIRECT_CAPTURE` as transactionType. More information about this can be found in the API documentation.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgreementRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AgreementReference\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/UnsupportedFeatureError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n  \"/recurring/v2/agreements/{agreementId}\":\n    get:\n      tags:\n        - Agreement V2 Endpoints\n      summary: Fetch an Agreement\n      operationId: getAgreement\n      description: \u003e-\n        Fetch a single agreement for a user. Recommended to use when polling for status changes after sending an agreement to a user.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Agreement\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n    patch:\n      tags:\n        - Agreement V2 Endpoints\n      summary: Update an Agreement\n      operationId: updateAgreement\n      description: \u003e-\n        Updates the agreement. Note that when updating the status to \"STOPPED\", you can not re-activate it. If you want to pause an agreement, we suggest leaving the agreement active and skipping the creation of charges as long as the agreement is paused in your systems.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgreementUpdate\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AgreementUpdateReference\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n\n  \"/v3/agreements\":\n    get:\n      tags:\n        - Coming soon - Agreement V3 Endpoints\n      summary: List Agreements\n      operationId: ListAgreementsV3\n      description: \u003e-\n        Lists agreements filtered by query parameters.\n        If no query status is supplied it will default to only retrieving active agreements.\n        There is no way to list all Agreements with all statuses, this is due to performance.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - name: status\n          in: query\n          required: false\n          description: Filter by status of the agreement.\n          schema:\n            $ref: \"#/components/schemas/AgreementStatus\"\n        - name: createdAfter\n          in: query\n          description: Filter by agreement start date in milliseconds.\n          required: false\n          allowEmptyValue: false\n          schema:\n            type: integer\n          example: 1644572442944\n\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AgreementResponseV3'\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/UnsupportedFeatureError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n      deprecated: false\n    post:\n      tags:\n        - Coming soon - Agreement V3 Endpoints\n      summary: Create a new Agreement, to be confirmed in Vipps\n      operationId: DraftAgreementV3\n      description: \u003e-\n        The API call allows merchants to create agreements for a user to accept. Once the agreement is drafted you will receive a `vippsConfirmationUrl`. This is used to redirect the user to the Vipps landing page, or to the Vipps app if `\"isApp\":true` is used.\n          \u003c/br\u003e\n          If the user accepts or rejects the agreement, the user will be redirected back to whichever URL has been passed in `merchantRedirectUrl`. We **strongly** recommend that you implement polling on the agreement to check when the status changes to active instead of relying on the redirect back to the `merchantRedirectUrl`. We have no control over if a user is actually redirected back or not, this depends on what browser the user came from.\n          \u003c/br\u003e\n          Please note the different use cases for `initialCharge` and `campaign`. And when to use `RESERVE_CAPTURE` instead of `DIRECT_CAPTURE` as transactionType. More information about this can be found in the API documentation.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AgreementRequestV3'\n            examples:\n              Minimal:\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://example.com/redirected-from-vipps\n                  merchantAgreementUrl: https://example.com/agreement/1234\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n              With Initial Charge:\n                description: If you want the customer to pay to activate the agreement, you should add an initial charge. If the amount on the initial charge is not the same as the agreement/campaign price, it will show up as a separate payment bubble in the app.\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  initialCharge:\n                    amount: 100\n                    currency: NOK\n                    description: Initial Charge\n                    transactionType: DIRECT_CAPTURE\n              With Price Campaign:\n                description: A price campaign allows you to communicate that the agreement price is rebated until a given date, ie. \"1kr per week until 04.05.2022, then 39 per week\".\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  campaign:\n                    type: PRICE_CAMPAIGN\n                    price: 100\n                    end: 2022/02/28T00:00:00Z\n              With Period Campaign:\n                description: A period campaign allows you to communicate a campaign where the user pays a fixed price for a given period before the normal agreement starts, ie. \"4 weeks for 1 kr\". Should be combined with an initial charge to get money on activation.\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  campaign:\n                    type: PERIOD_CAMPAIGN\n                    price: 100\n                    period:\n                      unit: \"WEEK\"\n                      count: 4\n                  initialCharge:\n                    amount: 100\n                    currency: NOK\n                    description: Activation Charge\n                    transactionType: DIRECT_CAPTURE\n              With Event Campaign:\n                description: An event campaign allows you to communicate a campaign where the user pays a fixed price until a given event before the normal agreement starts, ie. \"Until Christmas for 1 kr\". Should be combined with an initial charge to get money on activation.\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  campaign:\n                    type: EVENT_CAMPAIGN\n                    price: 100\n                    eventDate: '2022-12-25T00:00:00Z'\n                    eventText: Until Christmas\n                  initialCharge:\n                    amount: 100\n                    currency: NOK\n                    description: Activation Charge\n                    transactionType: DIRECT_CAPTURE\n              With Full Flex Campaign:\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  campaign:\n                    type: FULL_FLEX_CAMPAIGN\n                    price: 100\n                    end: '2022-03-13T00:00:00Z'\n                    interval:\n                      unit: \"WEEK\"\n                      count: 2\n              With Variable Amount:\n                description: An agreement where the price can vary and the user choose a max amount they can be charged each interval.\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  productName: MyNews Digital\n                  skipLandingPage: true\n                  variableAmount:\n                    suggestedMaxAmount: 3000\n              With Profile Flow:\n                description: User consents to sharing data that can be retrieved after they accept the agreement.\n                value:\n                  currency: NOK\n                  interval:\n                    unit: \"MONTH\"\n                    count: 1\n                  isApp: true\n                  merchantRedirectUrl: https://merchant.redirect.url.no\n                  merchantAgreementUrl: https://merchant.agreement.url.no\n                  customerPhoneNumber: '45678272'\n                  price: 2500\n                  productName: MyNews Digital\n                  scope: address name email birthDate phoneNumber\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgreementReference'\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/UnsupportedFeatureError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n      deprecated: false\n  /v3/agreements/{agreementId}:\n    get:\n      tags:\n        - Coming soon - Agreement V3 Endpoints\n      summary: Fetch an Agreement\n      operationId: FetchAgreementV3\n      description: \u003e-\n        Fetch a single agreement for a user. Recommended to use when polling for status changes after sending an agreement to a user.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgreementResponseV3'\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/UnsupportedFeatureError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n      deprecated: false\n    patch:\n      tags:\n        - Coming soon - Agreement V3 Endpoints\n      summary: Update an Agreement\n      operationId: UpdateAgreementPatchV3\n      description: \u003e-\n        Updates the agreement. Note that when updating the status to \"STOPPED\", you can not re-activate it. If you want to pause an agreement, we suggest leaving the agreement active and skipping the creation of charges as long as the agreement is paused in your systems.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchAgreementV3'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AgreementReference'\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"403\":\n          $ref: \"#/components/responses/UnsupportedFeatureError\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n      deprecated: false\n\n  \"/v3/agreements/{agreementId}/accept\":\n    patch:\n      tags:\n        - Coming soon - Agreement V3 Endpoints\n      summary: Force accept an Agreement (Only available in test environment)\n      operationId: acceptUsingPATCHV3\n      description: \u003e-\n        Forces an agreement to be accepted by the given customer phone number. This endpoint\n        can only be used in the test environment.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgreementForceAccept\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n      deprecated: false\n\n  \"/recurring/v2/agreements/{agreementId}/charges\":\n    get:\n      tags:\n        - Charge Endpoints\n      summary: List Charges\n      operationId: listCharges\n      description: \u003e-\n        Fetches all charges for a single agreement, including the optional initial charge.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n        - name: chargeStatus\n          in: query\n          required: false\n          description: Filter by status of the charge.\n          schema:\n            $ref: \"#/components/schemas/ChargeStatus\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Charge\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n    post:\n      tags:\n        - Charge Endpoints\n      summary: Create a new charge\n      operationId: createCharge\n      description: \u003e-\n        Creates a new recurring charge *(payment)* that will charge the user on the date specified. If the payment fails, the charge will be retried based on `retryDays`.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - name: Idempotency-Key\n          in: header\n          required: true\n          description: Idempotency-Key\n          example: aGFoYWhhaGFoYWhhaGFoYWhoYWhhYWhhaGEK\n          schema:\n            $ref: \"#/components/schemas/IdempotencyKeyFormat\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChargeRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChargeReference\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n  \"/recurring/v2/agreements/{agreementId}/accept\":\n    patch:\n      tags:\n        - Agreement V2 Endpoints\n      summary: Force accept an agreement (Only available in test environment)\n      operationId: forceAcceptAgreement\n      description: \u003e-\n        Forces an agreement to be accepted by the given customer phone number. This endpoint\n        can only be used in the test environment.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AgreementForceAccept\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n\n  \"/recurring/v2/agreements/{agreementId}/charges/{chargeId}\":\n    get:\n      tags:\n        - Charge Endpoints\n      summary: Fetch a Charge\n      operationId: getCharge\n      description: \u003e-\n        Fetch a single charge for a user.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n        - $ref: \"#/components/parameters/ChargeId\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Charge\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n    delete:\n      tags:\n        - Charge Endpoints\n      summary: Cancel a Charge\n      operationId: cancelCharge\n      description: \u003e-\n        Cancels a due or reserved charge. Note if you cancels an agreement, there is no need to cancel the charges that belongs to the agreement. This will be done automatically by Vipps.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - name: Idempotency-Key\n          in: header\n          required: false\n          description: Idempotency key\n          example: aGFoYWhhaGFoYWhhaGFoYWhoYWhhYWhhaGEK\n          schema:\n            $ref: \"#/components/schemas/IdempotencyKeyFormat\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n        - $ref: \"#/components/parameters/ChargeId\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"409\":\n          $ref: \"#/components/responses/ConflictError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n  \"/recurring/v2/agreements/{agreementId}/charges/{chargeId}/refund\":\n    post:\n      tags:\n        - Charge Endpoints\n      summary: Refund a charge\n      operationId: refundCharge\n      description: \u003e-\n        Refunds a charge, can also do a partial refund (refunding a smaller part of the payment).\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - name: Idempotency-Key\n          in: header\n          required: true\n          description: Idempotency key\n          example: aGFoYWhhaGFoYWhhaGFoYWhoYWhhYWhhaGEK\n          schema:\n            $ref: \"#/components/schemas/IdempotencyKeyFormat\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n        - $ref: \"#/components/parameters/ChargeId\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RefundRequest\"\n        required: true\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n        \"429\":\n          $ref: \"#/components/responses/RateLimitError\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n        \"503\":\n          $ref: \"#/components/responses/UnavailableError\"\n        \"504\":\n          $ref: \"#/components/responses/TimeoutError\"\n  \"/recurring/v2/agreements/{agreementId}/charges/{chargeId}/capture\":\n    post:\n      tags:\n        - Charge Endpoints\n      summary: Capture a reserved charge\n      operationId: captureCharge\n      description: \u003e-\n        Captures an `initialCharge` with type `RESERVE_CAPTURE`.\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/Ocp-Apim-Subscription-Key\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - name: Idempotency-Key\n          in: header\n          required: true\n          description: Idempotency key\n          example: aGFoYWhhaGFoYWhhaGFoYWhoYWhhYWhhaGEK\n          schema:\n            $ref: \"#/components/schemas/IdempotencyKeyFormat\"\n        - $ref: \"#/components/parameters/Merchant-Serial-Number\"\n        - $ref: \"#/components/parameters/Vipps-System-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Version\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Name\"\n        - $ref: \"#/components/parameters/Vipps-System-Plugin-Version\"\n        - $ref: \"#/components/parameters/AgreementId\"\n        - $ref: \"#/components/parameters/ChargeId\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          $ref: \"#/components/responses/BadRequestError\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundError\"\n\n  \"/vipps-userinfo-api/userinfo/{sub}\":\n    get:\n      tags:\n        - Userinfo Endpoint\n      summary: Get Userinfo\n      description: \u003e-\n        This endpoint returns the payload with the information that the user has consented to share. Find more info on the `/userinfo` endpoint at the OIDC Standard https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n      operationId: getUserinfo\n      parameters:\n        - name: sub\n          in: path\n          description: The `sub` is specified when fetching the agreement\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: Authorization\n          description: \u003e-\n            The access token is a base64-encoded string that is required for all API calls.\n            It is a JWT (JSON Web Token).\n            The access token is fetched from the `POST:/accesstoken/get` endpoint.\n            It is valid for 1 hour in the test environment and 24 hours in the production environment.\n          required: true\n          schema:\n            type: string\n          example: \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1Ni...\"\n      responses:\n        \"200\":\n          description: Get Userinfo\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Userinfo\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserinfoError\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserinfoError\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserinfoError\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserinfoError\"\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserinfoError\"\n\nservers:\n  - url: https://api.vipps.no\n    description: Production environment\n  - url: https://apitest.vipps.no\n    description: Merchant Test environment\ncomponents:\n  parameters:\n    AgreementId:\n      name: agreementId\n      in: path\n      required: true\n      description: The agreement identifier (id)\n      schema:\n        type: string\n      example: agr_5kSeqzFAMkfBbc\n    ChargeId:\n      name: chargeId\n      in: path\n      required: true\n      description: The charge identifier (id)\n      schema:\n        type: string\n      example: chr-123abc456\n    Ocp-Apim-Subscription-Key:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      description: \u003e-\n        The subscription key for your API product is available on portal.vipps.no, under the 'Utvikler' tab.\n        Keep it secret.\n      required: true\n      schema:\n        type: string\n      example: 0f14ebcab0ec4b29ae0cb90d91b4a84a\n    Authorization:\n      in: header\n      name: Authorization\n      description: \u003e-\n        The access token is a base64-encoded string that is required for all API calls.\n        It is a JWT (JSON Web Token).\n        The access token is fetched from the `POST:/accesstoken/get` endpoint.\n        It is valid for 1 hour in the test environment and 24 hours in the production environment.\n      required: true\n      schema:\n        type: string\n    Merchant-Serial-Number:\n      name: Merchant-Serial-Number\n      in: header\n      description: \u003e-\n        The Merchant Serial Number (MSN) is a unique id for the sale unit\n        that this payment is made for.\n        This is a required parameter if you are a Vipps Recurring partner\n        making payments on behalf of a merchant.\n        The partner must use the merchant's MSN (not the partner's MSN).\n        This parameter is optional, and recommended, for regular Vipps\n        merchants making payments for themselves.\n      schema:\n        type: string\n      example: 123456\n    Vipps-System-Name:\n      name: Vipps-System-Name\n      in: header\n      description: The name of the ecommerce solution. One word in lowercase letters is good.\n      schema:\n        type: string\n      example: woocommerce\n    Vipps-System-Version:\n      name: Vipps-System-Version\n      in: header\n      description: The version number of the ecommerce solution.\n      schema:\n        type: string\n      example: \"5.4\"\n    Vipps-System-Plugin-Name:\n      name: Vipps-System-Plugin-Name\n      in: header\n      description: The name of the ecommerce plugin (if applicable). One word in lowercase letters is good.\n      schema:\n        type: string\n      example: \"vipps-woocommerce\"\n    Vipps-System-Plugin-Version:\n      name: Vipps-System-Plugin-Version\n      in: header\n      description: The version number of the ecommerce plugin (if applicable).\n      schema:\n        type: string\n      example: \"1.2.1\"\n    Content-Type:\n      in: header\n      name: Content-Type\n      description: \"The content type must be `application/json`\"\n      schema:\n        type: string\n      example: application/json\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      description: Bearer 'auth token', from /accesstoken/get\n      bearerFormat: JWT\n  responses:\n    BadRequestError: #400\n      description: Invalid request, check your parameters\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    UnauthorizedError: #401\n      description: Access token is missing or invalid\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    ConflictError: #409\n      description: There is a conflict with the server\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    NotFoundError: #404\n      description: Item does not exist (and never has)\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    UnprocessableError: #422\n      description: Unprocessable Entity (invalid json)\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    ServerError: #500\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    UnavailableError: #503\n      description: Service unavailable\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    TimeoutError: #504\n      description: Timeout\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    RateLimitError: #429\n      description: Too Many Requests\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    UnsupportedFeatureError:\n      description: Feature is not supported for the given sale unit\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/VippsApiError\"\n    ProblemErrorResponse:\n      description: \"Problem JSON error response\"\n      content:\n        application/problem+json:\n          schema:\n            type: object\n            $ref: \"#/components/schemas/ProblemErrorResponse\"\n\n  schemas:\n    AgreementRequest:\n      type: object\n      required:\n        - currency\n        - interval\n        - intervalCount\n        - isApp\n        - merchantAgreementUrl\n        - merchantRedirectUrl\n        - price\n        - productDescription\n        - productName\n      properties:\n        variableAmount:\n          $ref: \"#/components/schemas/VariableAmountRequest\"\n        campaign:\n          $ref: \"#/components/schemas/CampaignRequest\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        customerPhoneNumber:\n          type: string\n          description: \"Customers phone number (if available). Used to simplify the\n            following Vipps interaction. MSISDN: https://www.msisdn.org\"\n          maxLength: 15\n          example: \"4791234567\"\n        initialCharge:\n          $ref: \"#/components/schemas/InitialCharge\"\n        interval:\n          $ref: '#/components/schemas/Interval'\n        intervalCount:\n          type: integer\n          format: int32\n          description: \"Number of intervals between charges. Example: interval=week,\n            intervalCount=2 to be able to charge every two weeks. Charges should\n            occur at least once a year\"\n          minimum: 1\n          maximum: 31\n          example: 2\n        isApp:\n          type: boolean\n          description: If merchant is redirecting user from an app or a mobile device.\n          example: true\n        merchantAgreementUrl:\n          type: string\n          description: URL where Vipps can send the customer to view/manage their\n            subscription. Typically a \"My page\" where the user can change, pause, cancel, etc.\n            We recommend letting users log in with Vipps, not with username and password.\n            We do not have any specific requirements for the security of the page.\n          example: https://www.example.com/vipps-subscriptions/1234/\n        merchantRedirectUrl:\n          type: string\n          description: URL where customer should be redirected after the agreement has been\n            approved/rejected in the Vipps mobile application.\n          example: https://api.example.com/vipps-landing\n        price:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          minimum: 100\n          example: 39900\n        productName:\n          type: string\n          description: Product name (short)\n          maxLength: 45\n          example: Premier League subscription\n        productDescription:\n          type: string\n          description: Product description (longer)\n          maxLength: 100\n          example: Access to all games of English top football\n        scope:\n          type: string\n          description: Space separated list of the user profile-data scope to require for the agreement.\n          example: address name email birthDate phoneNumber\n        skipLandingPage:\n          type: boolean\n          description: \u003e-\n            If the property is set to `true`, it will cause a push notification to be sent to the given phone number immediately, without loading the landing page.\n            This feature has to be specially enabled by Vipps for eligible sale units: The sale units must be whitelisted by Vipps. If the sale unit is not whitelisted,\n            the request will fail and an error message will be returned (statusCode=403).\n          example: false\n    AgreementUpdate:\n      type: object\n      properties:\n        campaign:\n          $ref: \"#/components/schemas/Campaign\"\n        price:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          minimum: 0\n          example: 39900\n        productName:\n          type: string\n          description: Product name (short)\n          maxLength: 45\n          example: Premier League subscription\n        productDescription:\n          type: string\n          description: Product description (longer)\n          maxLength: 100\n          example: Access to all games of English top football\n        merchantAgreementUrl:\n          type: string\n          description: URL where Vipps can send the customer to view/manage their\n            subscription. Typically a \"My page\" where the user can change, pause, cancel, etc.\n            We recommend letting users log in with Vipps, not with username and password.\n            We do not have any specific requirements for the security of the page.\n          example: https://www.example.com/vipps-subscriptions/1234/\n        status:\n          $ref: \"#/components/schemas/AgreementStatus\"\n    AgreementForceAccept:\n      type: object\n      required:\n        - customerPhoneNumber\n      properties:\n        customerPhoneNumber:\n          type: string\n          description: \"Customer's phone number\"\n          minLength: 8\n          maxLength: 16\n          example: \"91234567\"\n    Agreement:\n      type: object\n      required:\n        - interval\n        - intervalCount\n        - price\n        - productDescription\n        - productName\n        - status\n      properties:\n        variableAmount:\n          $ref: \"#/components/schemas/VariableAmount\"\n        campaign:\n          $ref: \"#/components/schemas/Campaign\"\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        id:\n          type: string\n          description: Uniquely identifies this agreement\n          maxLength: 36\n          example: agr_5kSeqzFAMkfBbc\n        interval:\n          $ref: \"#/components/schemas/Interval\"\n        intervalCount:\n          type: integer\n          format: int32\n          description: \"Number of intervals between charges. Example: interval=week,\n            intervalCount=2 to be able to charge every two weeks. Charges should\n            occur at least once a year.\"\n          default: 1\n          minimum: 1\n          maximum: 31\n          example: 1\n        price:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          minimum: 100\n          example: 39900\n        productName:\n          type: string\n          description: Product name (short)\n          maxLength: 45\n          example: Premier League subscription\n        productDescription:\n          type: string\n          description: Product description (longer)\n          maxLength: 100\n          example: Access to all games of English top football\n        start:\n          type: string\n          format: date-time\n          description: Date when agreement was started in ISO 8601 format.\n          example: \"2019-01-01T00:00:00Z\"\n        stop:\n          type: string\n          format: date-time\n          description: Date when agreement was stopped in ISO 8601 format.\n          nullable: true\n          example: null\n        status:\n          $ref: \"#/components/schemas/AgreementStatus\"\n        sub:\n          type: string\n          format: uuid\n          description: User identifier (subject). Will be null if profile data was not requested.\n          nullable: true\n          example: 8d7de74e-0243-11eb-adc1-0242ac120002\n        userinfoUrl:\n          type: string\n          format: uri\n          description: The full path of the URL for the userinfo endpoint where the user data can be retrieved. Will be null if profile data was not requested.\n          nullable: true\n          example: https://api.vipps.no/vipps-userinfo-api/userinfo/8d7de74e-0243-11eb-adc1-0242ac120002\n        merchantAgreementUrl:\n          type: string\n          description: URL where Vipps can send the customer to view/manage their\n            subscription. Typically a \"My page\" where the user can change, pause, cancel, etc.\n            We recommend letting users log in with Vipps, not with username and password.\n            We do not have any specific requirements for the security of the page.\n          example: https://www.example.com/vipps-subscriptions/1234/\n\n    AgreementRequestV3:\n      type: object\n      required:\n        - currency\n        - interval\n        - intervalCount\n        - isApp\n        - merchantAgreementUrl\n        - merchantRedirectUrl\n        - price\n        - productName\n      properties:\n        campaign:\n          description: A campaign is a way to make a temporary alteration in the agreement to make it more tempting for a customer. Like a given period for a set price before the normal agreement starts, a period of rebated price, etc.\n          $ref: '#/components/schemas/CampaignV3'\n        currency:\n          type: string\n          example: NOK\n          enum:\n            - NOK\n        customerPhoneNumber:\n          type: string\n          example: '+4740000000'\n          description: Customers phone number (if available). Used to simplify the following Vipps interaction\n        initialCharge:\n          $ref: '#/components/schemas/InitialCharge'\n        interval:\n          description: Interval for subscription\n          $ref: '#/components/schemas/TimePeriod'\n        isApp:\n          type: boolean\n          example: true\n          description: If merchant is redirecting user from an app.\n        merchantAgreementUrl:\n          type: string\n          example: https://www.merchant.no/subscriptions/1234/\n          description: URL where Vipps can redirect the customer to view/administer their subscription.\n        merchantRedirectUrl:\n          type: string\n          example: https://api.merchant.no/landing\n          description: URL where customer should be redirected after the agreement has been approved/rejected in the Vipps mobile application.\n        price:\n          type: integer\n          format: int32\n          example: 7900\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n        productName:\n          type: string\n          example: Pluss-abonnement\n          description: Name of the product being subscribed to.\n        scope:\n          type: string\n          example: name nin birthDate email phoneNumber address\n          description: Space separated list of scopes for retrieving userdata after user has accepted an agreement.\n        variableAmount:\n          $ref: '#/components/schemas/VariableAmount'\n\n    AgreementResponseV3:\n      type: object\n      properties:\n        campaign:\n          description: A campaign is a temporary lowering of the agreement price. The end user will only see the campaign if today's date is between the start and end date\n          $ref: '#/components/schemas/CampaignV3'\n        currency:\n          type: string\n          example: NOK\n          enum:\n            - NOK\n        id:\n          type: string\n          example: agr_5kSeqzFAMkfBbc\n          description: Uniquely identifies this agreement\n          readOnly: true\n        interval:\n          description: Interval for subscription\n          $ref: '#/components/schemas/TimePeriod'\n        price:\n          type: integer\n          format: int32\n          example: 7900\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n        productName:\n          type: string\n          example: Pluss-abonnement\n          description: Name of the product being subscribed to.\n        start:\n          type: string\n          example: '2019-01-01T00:00:00Z'\n          description: Date when agreement was started.\n          readOnly: true\n        status:\n          type: string\n          example: ACTIVE\n          description: Status of the agreement.\n          enum:\n            - PENDING\n            - ACTIVE\n            - STOPPED\n            - EXPIRED\n        stop:\n          type: string\n          example: '2019-01-01T00:00:00Z'\n          description: Date when agreement was stopped.\n          readOnly: true\n        merchantAgreementUrl:\n          type: string\n          example: https://www.merchant.no/subscriptions/1234/\n          description: URL where Vipps can redirect the customer to view/administer their subscription.\n        sub:\n          type: string\n          example: 8d7de74e-0243-11eb-adc1-0242ac120002\n          description: User identifier (subject). Will be null if profile data was not requested.\n        userinfoUrl:\n          type: string\n          example: https://api.vipps.no/vipps-userinfo-api/userinfo/8d7de74e-0243-11eb-adc1-0242ac120002\n          description: The full path of the URL for the userinfo endpoint where the user data can be retrieved. Will be null if profile data was not requested.\n        variableAmount:\n          $ref: \"#/components/schemas/VariableAmount\"\n      title: Agreement V3\n\n    PatchAgreementV3:\n      type: object\n      properties:\n        suggestedMaxAmount:\n          type: integer\n          format: int32\n          example: 7900\n          minimum: 100\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n        productName:\n          type: string\n          example: Pluss-abonnement\n          description: Name of the product being subscribed to.\n        merchantAgreementUrl:\n          type: string\n          example: https://www.merchant.no/subscriptions/1234/\n          description: URL where Vipps can redirect the customer to view/administer their subscription.\n        status:\n          type: string\n          example: ACTIVE\n          description: Status of the agreement.\n          enum:\n            - STOPPED\n      title: PatchAgreement\n\n    AgreementReference:\n      type: object\n      required:\n        - agreementId\n        - agreementResource\n        - vippsConfirmationUrl\n        - chargeId\n      properties:\n        agreementResource:\n          type: string\n          description: Reference to Agreement which user may agree to. Initially the\n            Agreement is in a pendingUserApproval state, and it enters active\n            state once user has approved in the Vipps application.\n          example: https://api.vipps.no/v2/agreements/agr_5kSeqzFAMkfBbc\n        agreementId:\n          type: string\n          description: Id of a Agreement which user may agree to. Initially the Agreement\n            is in a pendingUserApproval state, and it enters active state once\n            user has approved in the Vipps application.\n          example: agr_5kSeqzFAMkfBbc\n        vippsConfirmationUrl:\n          type: string\n          description: The `vippsConfirmationUrl` should be used to redirect the\n            user to the Vipps landing page in a desktop flow (with `https://`),\n            or to the Vipps app in a mobile flow (with `vipps://`), where the\n            user can then approve the agreement.\n          example: https://api.vipps.no/v2/register/U6JUjQXq8HQmmV\n        chargeId:\n          type: string\n          description: The Id of the initialCharge if given, otherwise `null`.\n            If an `orderId` is specified this is used as the `chargeId` otherwise it is auto generated.\n          example: chr-123abc456\n          pattern: '^[a-zA-Z0-9-]{1,50}$'\n    AgreementUpdateReference:\n      type: object\n      required:\n        - agreementId\n      properties:\n        agreementId:\n          type: string\n          description: Id of a Agreement which user may agree to. Initially the Agreement\n            is in a pendingUserApproval state, and it enters active state once\n            user has approved in the Vipps application.\n          example: agr_5kSeqzFAMkfBbc\n    VariableAmountRequest:\n      type: object\n      required:\n        - suggestedMaxAmount\n      description: VariableAmount can not be used together with campaign. See the documentation for more information about agreement with variable amount.\n      properties:\n        suggestedMaxAmount:\n          type: integer\n          format: int32\n          description: The suggested max amount of a charge each interval.\n          minimum: 100\n          maximum: 2000000\n          example: 40000\n    CampaignRequest:\n      type: object\n      required:\n        - campaignPrice\n        - end\n      properties:\n        campaignPrice:\n          type: integer\n          format: int32\n          description: The price of the agreement in the discount period. The lowering of\n            the price will be displayed in-app.\n          minimum: 0\n          example: 1500\n        end:\n          type: string\n          format: date-time\n          description: The date and time the campaign ends in ISO 8601 format. Needs to be UTC\n          example: \"2019-06-01T00:00:00Z\"\n    VariableAmount:\n      allOf:\n        - $ref: \"#/components/schemas/VariableAmountRequest\"\n        - type: object\n          required:\n            - maxAmount\n          properties:\n            maxAmount:\n              type: integer\n              format: int32\n              description: The user chosen maximum amount that they allow to be charged each interval.\n              example: 40000\n    Campaign:\n      allOf:\n        - $ref: \"#/components/schemas/CampaignRequest\"\n        - type: object\n          required:\n            - start\n          properties:\n            start:\n              type: string\n              format: date-time\n              description: The date and time the campaign starts in ISO 8601 format. Needs to be UTC.\n              example: \"2019-06-01T00:00:00Z\"\n    CampaignV3:\n      title: Campaign V3\n      type: object\n      required:\n        - type\n        - price\n      properties:\n        type:\n          type: string\n          description: The type of campaign. This decides which properties are required\n          enum:\n            - PRICE_CAMPAIGN\n            - PERIOD_CAMPAIGN\n            - EVENT_CAMPAIGN\n            - FULL_FLEX_CAMPAIGN\n        price:\n          type: integer\n          format: int32\n          example: 1500\n          description: The price of the agreement in the discount period. The lowering of the price will be displayed in-app.\n        end:\n          type: string\n          example: '2019-06-01T00:00:00Z'\n          description: The date and time the campaign ends. Needs to be UTC\n        eventDate:\n          type: string\n          example: '2019-06-01T00:00:00Z'\n          description: The date and time the campaign ends. Needs to be UTC\n        eventText:\n          type: string\n          example: Until Christmas\n          description: A short text that describes the event\n        interval:\n          description: Interval for subscription in the campaign period\n          $ref: '#/components/schemas/TimePeriod'\n        period:\n          description: The period that the campaign price pays for\n          $ref: '#/components/schemas/TimePeriod'\n        explanation:\n          description: The text displayed in the Vipps app to explain the campaign to the user\n          type: string\n          example : 'Ordinary price 399 kr starts 6/12/2022'\n    TimePeriod:\n      type: object\n      required:\n        - unit\n        - count\n      properties:\n        unit:\n          type: string\n          example: WEEK\n          description: Unit for time period\n          enum:\n            - YEAR\n            - MONTH\n            - WEEK\n            - DAY\n        count:\n          type: integer\n          format: int32\n          example: 2\n          description: 'Number of \"units\" in the time period. Example: unit=WEEK, count=2 to say two weeks'\n          minimum: 1\n          maximum: 31\n          exclusiveMinimum: false\n          exclusiveMaximum: false\n        text:\n          type: string\n          example: 'To uker'\n          description: 'Textual representation used in VIPPS of the time period. This is a read-only field.'\n    InitialCharge:\n      type: object\n      required:\n        - amount\n        - currency\n        - description\n        - transactionType\n      properties:\n        amount:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          example: 49900\n          minimum: 100\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        description:\n          type: string\n          description: This field is visible to the end user in-app\n          example: Premier League subscription\n          maxLength: 45\n        transactionType:\n          $ref: \"#/components/schemas/TransactionType\"\n        orderId:\n          type: string\n          description: Optional orderId, will be auto generated if not provided\n          example: acmeshop123order123abc\n          maxLength: 50\n          pattern: '^[a-zA-Z0-9-]{1,50}$'\n      description: An initial charge for a new agreement. The charge will be executed\n        immediately when the user approves the agreement.\n    ChargeRequest:\n      type: object\n      required:\n        - amount\n        - description\n        - due\n      properties:\n        amount:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          example: 49900\n          minimum: 100\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        description:\n          type: string\n          description: This field is visible to the end user in-app\n          example: Premier League subscription\n          maxLength: 45\n        due:\n          type: string\n          format: date\n          description: YYYY-MM-DD. Each specific charge on an agreement must\n            be scheduled by the merchant, a minimum of two days before the\n            payment will occur (it is minimum one day in the test environment).\n          example: \"2030-12-31\"\n        retryDays:\n          type: integer\n          format: int32\n          description: The service will attempt to charge the customer for N days [non\n            inclusive], must be null or contain a value \u003e= 0. If zero, no\n            retries will be performed\n          default: 0\n          minimum: 0\n          maximum: 14\n          example: 5\n        orderId:\n          type: string\n          description: Optional orderId, will be auto generated if not provided\n          example: acmeshop123order123abc\n          maxLength: 50\n          pattern: '^[a-zA-Z0-9-]{1,50}$'\n    ChargeReference:\n      type: object\n      required:\n        - chargeId\n      properties:\n        chargeId:\n          type: string\n          description: ID of the created charge\n          example: chr-123abc456\n    Charge:\n      type: object\n      required:\n        - transactionId\n        - description\n        - type\n        - amount\n        - amountRefunded\n        - due\n        - id\n        - status\n      properties:\n        amount:\n          type: integer\n          format: int32\n          description: \"Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\"\n          example: 39900\n        amountRefunded:\n          type: integer\n          format: int32\n          description: \u003e-\n            The total amount which has been refunded, in case of status\n            refund/partial refund.\n\n            Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\n          example: 39900\n        description:\n          type: string\n          description: Description of the charge\n          example: \"Premier League subscription: September\"\n        due:\n          type: string\n          format: date-time\n          description: The due date for this charge\n          example: \"2019-06-01T00:00:00Z\"\n        id:\n          type: string\n          description: Identifier for this charge (for this customer's subscription).\n          default: NOT_SET\n          maxLength: 15\n          example: chg_WCVbcAbRCmu2zk\n        status:\n          $ref: \"#/components/schemas/ChargeStatus\"\n        transactionId:\n          type: string\n          description: Contains null until the status has reached CHARGED\n          maxLength: 36\n          example: \"5001419121\"\n        type:\n          $ref: \"#/components/schemas/ChargeType\"\n        failureReason:\n          type: string\n          enum:\n            - user_action_required\n            - charge_amount_too_high\n            - non_technical_error\n            - technical_error\n          example: \"user_action_required\"\n          description: \u003e\n            Identifies the reason why the charged has been marked as `FAILED`:\n              * `user_action_required` - The users card can not fulfil the payment, user needs to take action in Vipps.\n                 Examples: Card is blocked for ecommerce, insufficient funds, expired card.\n\n              * `charge_amount_too_high` - The users max amount is to low, user needs to update their max amount in Vipps.\n\n              * `non_technical_error` - Something went wrong with charging the user.\n                 Examples: User has deleted their Vipps Profile.\n\n              * `technical_error` - Something went wrong in Recurring while performing the payment.\n                 Examples: Failure in Recurring, failure in downstream services.\n        failureDescription:\n          type: string\n          description: Description for the failure reason\n          example: \"User action required\"\n\n    ProblemErrorResponse:\n      type: object\n      properties:\n        type:\n          type: string\n          example: \"https://vipps.no/problems/recurring/validation-error\"\n        title:\n          type: string\n          example: \"Bad Request\"\n        status:\n          type: integer\n          example: 400\n        detail:\n          type: string\n          example: \"Input validation failed\"\n        instance:\n          type: string\n          example: \"/v3/agreements\"\n        contextId:\n          type: string\n          example: \"0b7a2d85-8233-4a0f-867b-fa77a8cdf8de\"\n        extraDetails:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/ExtraDetails\"\n    ExtraDetails:\n      type: object\n      properties:\n        key:\n          type: string\n          example: \"campaign\"\n        value:\n          type: string\n          example: \"'type' cannot be null\"\n    VippsApiError:\n      type: object\n      required:\n        - contextId\n        - message\n      properties:\n        code:\n          type: string\n        field:\n          type: string\n        message:\n          type: string\n          example: Description of the error\n        contextId:\n          type: string\n          example: 0b7a2d85-8233-4a0f-867b-fa77a8cdf8de\n    RefundRequest:\n      type: object\n      required:\n        - amount\n        - description\n      properties:\n        amount:\n          type: integer\n          format: int32\n          description: \u003e-\n            The total amount which has been refunded, in case of status\n            refund/partial refund.\n\n            Amounts are specified in minor units. For Norwegian kroner (NOK) that means 1 kr = 100 øre. Example: 499 kr = 49900 øre.\n          minimum: 100\n          example: 49900\n        description:\n          type: string\n          description: A textual description of the operation, which will be displayed in\n            the users app.\n          maxLength: 45\n          example: Forgot to apply discount, refunding 50%\n    AgreementStatus:\n      type: string\n      description: Status of the agreement.\n      default: ACTIVE\n      example: ACTIVE\n      enum:\n        - PENDING\n        - ACTIVE\n        - STOPPED\n        - EXPIRED\n    ChargeStatus:\n      type: string\n      example: PENDING\n      enum:\n        - PENDING\n        - DUE\n        - RESERVED\n        - CHARGED\n        - FAILED\n        - CANCELLED\n        - PARTIALLY_REFUNDED\n        - REFUNDED\n        - PROCESSING\n    Currency:\n      type: string\n      description: \"ISO-4217: https://www.iso.org/iso-4217-currency-codes.html\"\n      default: NOK\n      enum:\n        - NOK\n      minLength: 3\n      maxLength: 3\n      pattern: ^[A-Z]{3}$\n      example: NOK\n    TransactionType:\n      type: string\n      description: Type of transaction, either direct capture or reserve capture\n      enum:\n        - DIRECT_CAPTURE\n        - RESERVE_CAPTURE\n      example: DIRECT_CAPTURE\n    ChargeType:\n      type: string\n      default: RECURRING\n      enum:\n        - INITIAL\n        - RECURRING\n      example: RECURRING\n    Interval:\n      type: string\n      description: Interval for subscription\n      default: MONTH\n      pattern: ^(YEAR|MONTH|WEEK|DAY)$\n      enum:\n        - YEAR\n        - MONTH\n        - WEEK\n        - DAY\n      example: MONTH\n    IdempotencyKeyFormat:\n      type: string\n      maxLength: 40\n      pattern: ^[a-zA-Z0-9]*$\n      example: kRk3uEeiogxLu1yGSZRlNgsIv3TuNS\n    AccessTokenResponse:\n      type: object\n      properties:\n        token_type:\n          type: string\n          example: Bearer\n        expires_in:\n          type: string\n          example: \"3600\"\n        ext_expires_in:\n          type: string\n          example: \"3600\"\n        expires_on:\n          type: string\n          example: \"1569831424\"\n        not_before:\n          type: string\n          example: \"1569827524\"\n        resource:\n          type: string\n          example: 00000003-0000-0000-d000-000000000000\n        access_token:\n          type: string\n          example: \"aGFoYWhhaGFoYWhhaGFoYWhoYWhhYWhhaGEK...\"\n    Userinfo:\n      type: object\n      properties:\n        accounts:\n          description: 'Contains an array with the end user''s accounts registered in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/UserinfoAccountInfo'\n        address:\n          description: 'Contains the end user''s preferred addresses.'\n          items:\n            $ref: '#/components/schemas/UserinfoAddress'\n        other_addresses:\n          description: 'Contains an array with the end user''s none default addresses, if any. This list can contain an address with the address_type home, work, and/or other, if the user has registered them in the Vipps app'\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        birthdate:\n          description: 'End-User''s birthday formatted as YYYY-MM-DD'\n          type: string\n          example: '1985-12-31'\n        email:\n          description: 'End user''s email address.'\n          example: 'user@example.com'\n          type: string\n        email_verified:\n          description: 'Boolean value if the End user''s email address is verified.'\n          example: true\n          type: boolean\n        family_name:\n          description: 'Surname(s) or last name(s) of the end user.'\n          example: 'Garborg'\n          type: string\n        given_name:\n          description: 'Given name(s) or first name(s) of the end user. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'\n          example: 'Rune'\n          type: string\n        name:\n          description: 'End user''s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User''s locale and preferences.'\n          example: 'Rune Garborg'\n          type: string\n        nin:\n          description: 'National identity number'\n          type: string\n          example: '09057517287'\n          pattern: '^\\d{11}$'\n        phone_number:\n          description: 'End-User''s telephone number on MSISDN format, up to 15 digits.'\n          type: string\n          example: '47912345678'\n          pattern: '^\\d{15}$'\n        sid:\n          description: 'Session identifier - This represents a Session of a User Agent or device. Currently not in use'\n          type: string\n          example: '7d78a726-af92-499e-b857-de263ef9a969'\n        sub:\n          description: 'Subject - Identifier for the end user'\n          type: string\n          example: 'c06c4afe-d9e1-4c5d-939a-177d752a0944'\n    UserinfoAccountInfo:\n      type: object\n      properties:\n        account_name:\n          description: \"User''s defined name for account\"\n          type: string\n        account_number:\n          description: \"User''s account number\"\n          type: string\n        bank_name:\n          description: \"Bank connected to the account number\"\n          type: string\n    UserinfoAddress:\n      type: object\n      properties:\n        address_type:\n          description: 'Address type is either home, work or other'\n          type: string\n        country:\n          description: 'Two letter country code'\n          type: string\n        default:\n          description: 'If this is default address'\n          type: boolean\n        formatted:\n          description: 'End user address as a formatted string'\n          type: string\n        postal_code:\n          description: 'Postal code'\n          type: string\n        region:\n          description: 'End user region'\n          type: string\n        street_address:\n          description: 'End user street address'\n          type: string\n    Address:\n      type: object\n      required:\n        - addressLine1\n        - city\n        - country\n        - postCode\n      properties:\n        addressLine1:\n          type: string\n          description: Address Line 1\n          example: Robert Levins gate 5\n        addressLine2:\n          type: string\n          description: Address Line 2\n          example: 'Att: Rune Garborg'\n        city:\n          type: string\n          description: City\n          example: Oslo\n        country:\n          type: string\n          description: 'Country'\n          example: 'Norway'\n          enum:\n            - Norway\n        postCode:\n          type: string\n          description: Post Code\n          example: '0154'\n    UserinfoError:\n      type: object\n      properties:\n        type:\n          type: string\n        title:\n          type: string\n        status:\n          type: string\n        detail:\n          type: string\n        instance:\n          type: string\n        extraInfo:\n          type: object\n          additionalProperties:\n            type: object\n",
			"canonicalURL": "/github.com/vippsas/vipps-recurring-api@2a737c8774d12719f8f61c552cb4a20fccd1019e/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/vippsas/vipps-recurring-api/blob/2a737c8774d12719f8f61c552cb4a20fccd1019e/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}