{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dascr/dascr-board"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 16620,
			"content": "openapi: 3.0.0\ninfo:\n  description: 'DaSCR-board API specification'\n  version: 'v1'\n  title: 'DaSCR-Board API'\nservers:\n  - url: 'http://localhost:8000/api'\n    variables: {}\n    description: Default Config or Docker\ntags:\n  - name: Debug\n    description: 'Will only run if DEBUG=TRUE'\n  - name: Game\n    description: 'Manage Games'\n  - name: Player\n    description: 'Manage Player'\npaths:\n  '/debug/{id}/redirect':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      tags:\n        - Debug\n      summary: Trigger websocket redirect\n      responses:\n        '200':\n          description: successful operation\n  '/debug/{id}/update':\n    get:\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      tags:\n        - Debug\n      summary: Trigger websocket update\n      responses:\n        '200':\n          description: successful operation\n  '/debug/{id}/display':\n    get:\n      tags:\n        - Debug\n      summary: Get a specific game by id (not stripped with full data)\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Base'\n        \"404\":\n          description: game with id not found\n  '/game':\n    get:\n      tags:\n        - Game\n      summary: Get all games running\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Game'\n  '/game/{id}':\n    get:\n      tags:\n        - Game\n      summary: Get a specific game by id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Base'\n        \"404\":\n          description: game with id not found\n    post:\n      tags:\n        - Game\n      summary: Create a new game with id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateGame\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Game'\n        \"400\":\n          description: bad combination of body parameters\n        \"500\":\n          description: game could not be created\n    delete:\n      tags:\n        - Game\n      summary: Delete a game by id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"204\":\n         description: successful operation\n        \"404\":\n          description: game with id not found\n  '/game/{id}/display':\n    get:\n      tags:\n        - Game\n      summary: Get a specific game by id (stripped output for less data size, missing UndoLog and ThrowRounds)\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Base'\n        \"404\":\n          description: game with id not found\n  '/game/{id}/throw/{number}/{modifier}':\n    post:\n      tags:\n        - Game\n      summary: Send a throw to the game with id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n        - $ref: '#/components/parameters/Number'\n        - $ref: '#/components/parameters/Modifier'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Base'\n        \"404\":\n          description: game with id not found\n        \"400\":\n          description: throw was not added\n  '/game/{id}/nextPlayer':\n    post:\n      tags:\n        - Game\n      summary: Switch to next player in game with id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/GameObject'\n        \"404\":\n          description: game with id not found\n  '/game/{id}/undo':\n    post:\n      tags:\n        - Game\n      summary: Undo last action in game with id\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n        \"404\":\n          description: game with id not found\n  '/game/{id}/rematch':\n    post:\n      tags:\n        - Game\n      summary: Start game with id from the beginning\n      parameters:\n        - $ref: '#/components/parameters/GameID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Base'\n        \"404\":\n          description: game with id not found\n  '/player':\n    get:\n      tags:\n        - Player\n      summary: Get all players in DB\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Player'\n    post:\n      tags:\n        - Player\n      summary: Create a player in DB\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePlayer\"\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Player'\n  '/player/{id}':\n    get:\n      tags:\n        - Player\n      summary: Get a specific player by id\n      parameters:\n        - $ref: '#/components/parameters/PlayerID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Player'\n        \"404\":\n          description: player with id not found\n    patch:\n      tags:\n        - Player\n      summary: Get a specific player by id\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Player\"\n      parameters:\n        - $ref: '#/components/parameters/PlayerID'\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                $ref: '#/components/schemas/Player'\n        \"404\":\n          description: player with id not found\n    delete:\n      tags:\n        - Player\n      summary: Delete a player by id\n      parameters:\n        - $ref: '#/components/parameters/PlayerID'\n      responses:\n        \"204\":\n         description: successful operation\n        \"404\":\n          description: player with id not found\n  '/player/{id}/image':\n    post:\n      tags:\n        - Player\n      summary: Upload an image for player with id\n      parameters:\n        - $ref: '#/components/parameters/PlayerID'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePlayerImage\"\n      responses:\n        \"200\":\n          description: successful operation\n        \"400\":\n          description: bad request\n        \"500\":\n          description: unable to decode player image\n\n\ncomponents:\n  schemas:\n    Game:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: \"dascr\"\n        player:\n          type: array\n          items:\n            type: integer\n            example: [1, 2, 3, 4]\n        game:\n          type: string\n          example: \"x01\"\n        variant:\n          type: string\n          example: \"501\"\n        in:\n          type: string\n          example: \"straight\"\n        out:\n          type: string\n          example: \"double\"\n        sound:\n          type: boolean\n          example: true\n        podium:\n          type: boolean\n          example: false\n        autoswitch:\n          type: boolean\n          example: false\n        cricketrandom:\n          type: boolean\n          example: false\n        cricketghost:\n          type: boolean\n          example: false\n        GameObject:\n          type: object\n          $ref: \"#/components/schemas/GameObject\"\n\n    Player:\n      type: object\n      properties:\n        UID:\n          type: integer\n          example: 1\n        Name:\n          type: string\n          example: \"Patrick\"\n        Nickname:\n          type: string\n          example: \"The l33t c0der\"\n        Image:\n          type: string\n          example: \"images/static_7.png\"\n        ThrowRounds:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ThrowRound\"\n        TotalThrowCount:\n          type: integer\n          example: 6\n        Score:\n          type: object\n          $ref: \"#/components/schemas/Score\"\n        LastThrows:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Throw\"\n        ThrowSum:\n          type: integer\n          example: 81\n        Average:\n          type: number\n          example: 45.89\n\n\n    GameObject:\n      type: object\n      $ref: \"#/components/schemas/Base\"\n\n    Base:\n      type: object\n      properties:\n        Base:\n          type: object\n          properties:\n            UID:\n              type: string\n              example: \"dascr\"\n            Game:\n              type: string\n              example: \"x01\"\n            Player:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Player\"\n            Variant:\n              type: string\n              example: \"501\"\n            In:\n              type: string\n              example: \"straight\"\n            Out:\n              type: string\n              example: \"double\"\n            ActivePlayer:\n              type: integer\n              example: 1\n            ThrowRound:\n              type: integer\n              example: 2\n            GameState:\n              type: string\n              example: \"THROW\"\n            Message:\n              type: string\n              example: \"-\"\n            Settings:\n              type: object\n              properties:\n                Sound:\n                  type: boolean\n                  example: true\n                Podium:\n                  type: boolean\n                  example: false\n                Autoswitch:\n                  type: boolean\n                  example: false\n                Punisher:\n                  type: boolean\n                  example: false\n            UndoLog:\n              type: array\n              $ref: \"#/components/schemas/Sequence\"\n            Podium:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Player\"\n            CricketController:\n              type: object\n              properties:\n                NumberClosed:\n                  type: array\n                  example: [false, false, false, false, false, false, false]\n                Numbers:\n                  type: array\n                  example: [15,16,17,18,19,20,25]\n                NumberRevealed:\n                  type: array\n                  example: [false, false, false, false, false, false, false]\n                Random:\n                  type: boolean\n                  example: false\n                Ghost:\n                  type: boolean\n                  example: false\n\n    ThrowRound:\n      type: object\n      properties:\n        Round:\n          type: integer\n          example: 1\n        Done:\n          type: boolean\n          example: false\n        Throws:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Throw\"\n\n    Score:\n      type: object\n      properties:\n        Score:\n          type: integer\n          example: 321\n        ParkScore:\n          type: integer\n          example: 381\n        InitialScore:\n          type: integer\n          example: 501\n        Numbers:\n          type: array\n          example: [0, 0, 0, 0, 0, 0, 0]\n        Closed:\n          type: array\n          example: [false, false, false, false, false, false, false]\n        CurrentNumber:\n          type: integer\n          example: 15\n        Split:\n          type: boolean\n          example: false\n        Hit:\n          type: boolean\n          example: false\n\n    Throw:\n      type: object\n      properties:\n        Number:\n          type: integer\n          example: 20\n        Modifier:\n          type: integer\n          example: 3\n\n    Sequence:\n      type: object\n      properties:\n        Sequence:\n          type: integer\n          example: 1\n        Action:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Action\"\n\n    Action:\n      type: object\n      properties:\n        Number:\n          type: integer\n          example: 1\n        Action:\n          type: string\n          example: \"CREATEGAME\"\n        Points:\n          type: integer\n          example: 0\n        RoundNumber:\n          type: integer\n          example: 0\n        Player:\n          type: object\n          $ref: \"#/components/schemas/Player\"\n        GameID:\n          type: string\n          example: \"\"\n        NumberIndex:\n          type: integer\n          example: 0\n        Modifier:\n          type: integer\n          example: 0\n        PreviousGameState:\n          type: string\n          example: \"\"\n        PreviousScore:\n          type: integer\n          example: 0\n        PreviousParkScore:\n          type: integer\n          example: 0\n        PreviousPlayerIndex:\n          type: integer\n          example: 0\n        PreviousThrowSum:\n          type: integer\n          example: 0\n        PreviousAverage:\n          type: integer\n          example: 0\n        PreviousLastThree:\n          type: array\n          $ref: \"#/components/schemas/Throw\"\n        PreviousMessage:\n          type: string\n          example: \"\"\n        PreviousNumberToHit:\n          type: integer\n          example: 0\n\n    CreateGame:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: \"dascr\"\n        player:\n          type: array\n          example: [1,2]\n        game:\n          type: string\n          example: \"x01\"\n        variant:\n          type: string\n          example: \"501\"\n        in:\n          type: string\n          example: \"straight\"\n        out:\n          type: string\n          example: \"double\"\n        sound:\n          type: boolean\n          example: true\n        podium:\n          type: boolean\n          example: false\n        autoswitch:\n          type: boolean\n          example: false\n        cricketrandom:\n          type: boolean\n          example: false\n        cricketghost:\n          type: boolean\n          example: false\n\n    CreatePlayer:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"Patrick\"\n        nickname:\n          type: string\n          example: \"L33t C0der\"\n\n    CreatePlayerImage:\n      type: object\n      properties:\n        b64:\n          type: string\n          description: base64 encoded image\n\n  parameters:\n    GameID:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n      description: 'Unique Game ID'\n    PlayerID:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n      description: 'Unique Player ID'\n    Number:\n      name: number\n      in: path\n      required: true\n      schema:\n        type: integer\n      description: 'Number which was hit 0-20 or 25'\n    Modifier:\n      name: modifier\n      in: path\n      required: true\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 3\n      description: 'Which segment was hit: 1 - single, 2 - double, 3 - triple'",
			"canonicalURL": "/github.com/dascr/dascr-board@e0903b9a097f3248c727f93d2b1c63de428f2fc5/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dascr/dascr-board/blob/e0903b9a097f3248c727f93d2b1c63de428f2fc5/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}