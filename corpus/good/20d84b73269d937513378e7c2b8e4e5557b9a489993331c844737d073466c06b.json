{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gematik/api-vzd"
		},
		"file": {
			"name": "DirectoryApplicationMaintenance.yaml",
			"size": 0,
			"path": "src/openapi/DirectoryApplicationMaintenance.yaml",
			"byteSize": 39955,
			"content": "openapi: 3.0.1\ninfo:\n  title: I_Directory_Application_Maintenance\n  description: |\n   # REST Schnittstelle zur Pflege der Fachanwendungsdaten der Verzeichniseinträge\n     Über diese Schnittstelle können Fachanwendungsdaten der Verzeichniseinträge erzeugt, aktualisiert und gelöscht werden. \n  version: 1.1.6\n  # Änderungen in Version 1.1.6\n  #  - Fehlerbehandlung verbessert:\n  #    o Schema Error: Optionale Fehlernachricht hinzugefügt\n  #                    Struktur angepasst (mehrere Fehlermeldungen ermöglicht)\n  #    o Für alle Fehler HTTP Status Kodes das Error Schema aufgenommen\n  #    o Fehlercode 400 für Operationen read_Directory_Entry, read_Directory_Certificates, get_Directory_FA-Attributes ergänzt\n  #\n  # Änderungen in Version 1.1.5\n  #  - Parameter \"fad\" in Operation add_Directory_FA-Attributes gestrichen. Die FAD des Clients wird auf Basis des TLS Client Zertifikats ermittelt.\n  #  - Im Schema FAD1 das \"required: - dn\" gestrichen, da es Probleme mit einem Code-Generator verursacht hat\n  #\n  # Änderungen in Version 1.1.4\n  #  - KOM-LE_Version wurde durch komLeData ersetzt. Dies erlaubt die Angabe von KIM-Versionen für einzelne KIM-Adressen. \n  #  - Die Client Authentisierung wurde auf mutualTLS angepasst (OAuth2 wurde gestrichen)\n  #  - Server URLs hinzugefügt  \n  # Änderungen in Version 1.1.3\n  #  - Filtermöglichkeiten in Leseoperationen read_Directory_Entry \n  #    (Wildcard \"*\" \u0026 Vorhandensein \\00) aufgenommen.\n  #  - Suchparameter in Leseoperationen read_Directory_Entry aufgenommen:\n  #    maxKOMLEadr, changeDateTimeFrom, changeDateTimeTo\n  # Änderungen in Version 1.1.2\n  #  - Fehlerbehandlung für Operation modify_Directory_FA-Attributes in den Kommentaren dieser Operation ausführlicher beschrieben.\n  #  - Im Datenmodell für DirectoryEntry Attribut \"userCertificates\" maxItems auf 50 gesetzt\n  #\n  # Änderungen in Version 1.1.1\n  #  - Im Datenmodell für Attribut \"changeDateTime\" den Format String \"date-time\" auskommentiert. Mit dieser Format Vorgabe ist kein Code mehr generierbar. Es soll sich aber weiterhin an das Format gehalten werden.\n  #\n  # Änderungen in Version 1.1.0\n  #  - getInfo Operation - inklusive den dazugehörenden Schema Objekten \"InfoObject\", \"Contact\" und \"License\" - hinzugefügt.\n  #  - Attribute professionOID und entryType zusätzlich in die Basisdaten - als Kopie aus den Zertifikatsdaten (userCertificate) aufgenommen. Diese Attribute wurden ebenfalls in die read_Directory_Entry Operation als Suchparameter aufgenommen.\n  #\n  # initiale Version\n \nexternalDocs:\n  description: Weitere Dokumentationen\n  url: http://www.gematik.de\nservers:\n- url: https://directory.vzd.telematik:9643/\n  description: Production server (PU)\n- url: https://directory-test.vzd.telematik-test:9643/\n  description: Test server (TU)\n- url: https://directory-ref.vzd.telematik-test:9643/\n  description: Reference server (RU)\n\n\ntags:\n- name: getInfo Directory Application Maintenance\n  description: Diese Operation liefert Metadaten über diese Schnittstelle\n- name: DirectoryEntry Administration\n  description: Pflege der Verzeichniseinträge (Basiseinträge)\n- name: Certificate Administration\n  description: Pflege der Zertifikatseinträge \n- name: Application Data Administration\n  description: Pflege der Fachdaten\n\npaths:\n  /:\n    get:\n      tags:\n      - getInfo Directory Application Maintenance\n      summary: Diese Operation liefert Metadaten über Schnittstelle Directory Application Maintenance\n      description: Liefert die Metadaten aus dem Info Object diese OpenAPI Spezifikation und ergänzt sie.\n      operationId: getInfo\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/InfoObject'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  /DirectoryEntries:\n    get:\n      tags:\n      - DirectoryEntry Administration\n      summary: Gesamten Verzeichniseintrag lesen\n      description: |\n       Liefert alle zum Filter passenden Verzeichniseinträge (maximal 100 Einträge). Die angegebenen Parameter werden mit logischen UND verknüpft.\n       \n        Für die Leseoperationen read_Directory_Entry read_Directory_Entry_for_Sync der Schnittstellen I_Directory_Administration und I_Directory_Application_Maintenanc werden die folgenden Filtermöglichkeiten unterstützt: \n          - Suche mit Wildcard \"*\" in den Parametern\n                  - givenName\n                  - sn\n                  - cn\n                  - displayName\n                  - streetAddress\n                  - postalCode\n                  - countryCode\n                  - localityName\n                  - stateOrProvinceName\n                  - title\n                  - organization\n                  - otherName\n                  - telematikID\n                  - specialization\n                  - domainID\n                  - holder\n                  - professionOID\n          - Suche nach Vorhandensein oder leerem Inhalt eines Attributs des VZD Datensatzes mit dem Kode \\00 in den Parametern\n                  - givenName\n                  - sn\n                  - cn\n                  - displayName\n                  - streetAddress\n                  - postalCode\n                  - countryCode\n                  - localityName\n                  - stateOrProvinceName\n                  - title\n                  - organization\n                  - otherName\n                  - specialization\n                  - domainID\n                  - holder\n                  - professionOID\n                  - changeDateTimeFrom\n                  - changeDateTimeTo\n\n            Diese Suche findet sowohl Datensätze mit nicht vorhandenem Attribut wie auch vorhandenem aber leerem Attribut.\n            Der Suchparameter darf nur den Kode \\00 enthalten, keine weiteren Zeichen.\n            Alle Filterparameter einer Leseoperationen werden mit einem UND (\u0026) verknüpft.      \n      operationId: read_Directory_Entry\n      parameters:\n      - name: uid\n        in: query\n        description: ID von dem Verzeichniseintrag (distinguishedName.uid)\n        schema:\n          type: string  \n      - name: givenName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs givenName.\n        schema:\n          type: string  \n      - name: sn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs sn.\n        schema:\n          type: string  \n      - name: cn\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs cn.\n        schema:\n          type: string  \n      - name: displayName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs displayName.\n        schema:\n          type: string  \n      - name: streetAddress\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs streetAddress.\n        schema:\n          type: string  \n      - name: postalCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs postalCode.\n        schema:\n          type: string  \n      - name: countryCode\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs countryCode.\n        schema:\n          type: string    \n      - name: localityName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs localityName.\n        schema:\n          type: string  \n      - name: stateOrProvinceName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs stateOrProvinceName.\n        schema:\n          type: string  \n      - name: title\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs title.\n        schema:\n          type: string  \n      - name: organization\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs organization.\n        schema:\n          type: string  \n      - name: otherName\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs otherName.\n        schema:\n          type: string  \n      - name: telematikID\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs telematikID (die telematikID in den Basisdaten).\n        schema:\n          type: string  \n      - name: telematikID-SubStr\n        in: query\n        description: |\n         Erlaubt die Suche nach einem Substring am Anfang der telematikID (die telematikID in den Basisdaten).\n         Entspricht der LDAP Filters Substring Assertion vom Typ \"subInitial Component\".\n        schema:\n          type: string  \n      - name: specialization\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs specialization. \n         Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: domainID\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs domainID. \n         Der Verzeichniseintrag wird selektiert, wenn die angegebene domainID im Attribut domainID (array) des Verzeichniseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: holder\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs holder. \n         Der Verzeichniseintrag wird selektiert, wenn der angegebene holder im Attribut holder (array) des Verzeichniseintrags enthalten ist.\n          Wenn der Parameter mit dem eigenen Wert des Clients belegt wird, werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).\n          Zur Suche nach Einträge ohne holder ist der Parameter mit dem einem leeren String \"\" zu belegen. Auch in diesem Fall werden alle gefundenen Einträge zurückgegeben (maximal 100 Einträge).\n        schema:\n          type: string  \n      - name: personalEntry\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs personalEntry. \n        schema:\n          type: string  \n      - name: dataFromAuthority\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs dataFromAuthority. \n        schema:\n          type: string  \n      - name: professionOID\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs professionOID. \n         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den professionOID's (array) des Basiseintrags vorhanden ist. \n        schema:\n          type: string  \n      - name: entryType\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs entryType. \n         Selektiert der Verzeichniseintrag, wenn der angegebene Wert in den entryType's (array) des Basiseintrags vorhanden ist. \n        schema:\n          type: string  \n      - name: maxKOMLEadr\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs maxKOMLEadr. \n        schema:\n          type: string  \n      - name: changeDateTimeFrom\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n          Selektiert alle Datensätze mit \n           changeDateTime \u003e= changeDateTimeFrom\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2017-07-21T17:32:28Z\"          \n      - name: changeDateTimeTo\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs changeDateTime. \n          Selektiert alle Datensätze mit \n           changeDateTime \u003c= changeDateTimeTo\n        schema:\n          type: string  \n          # format: date-time\n          example: \"2018-07-21T17:32:28Z\"\n      - name: baseEntryOnly\n        in: query\n        description: |\n         Mit baseEntryOnly = \"true\" wird nur der Basiseintrag (baseDirectoryEntry) im Response zurückgegeben. Falls nicht angegeben oder mit \"false\" belegt, wird der gesamte Verzeichniseintrag mit Zertifikaten und Fachdaten im Response zurückgegeben.\n        schema:\n          type: boolean\n          example: true\n          \n      responses:\n        200:\n          description: |\n           OK\n           Es werden alle zu dem Filter Parametern passenden Verzeichniseinträge - inklusive Zertifikaten und Fachdaten - zurückgegeben.\n           Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.   \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/DirectoryEntries'\n        400:\n          description: Bad Request\n                    #  Invalid uid supplied\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /DirectoryEntries/Certificates:\n  \n    get:\n      tags:\n      - Certificate Administration\n      summary: Zertifikat lesen\n      description: Liefert alle Zertifikate, die dem Filter (siehe 'parameters') entsprechen.\n      operationId: read_Directory_Certificates\n      parameters:\n      - name: uid\n        in: query\n        description: ID vom übergeordneten Verzeichniseintrag\n        schema:\n          type: string\n      - name: certificateEntryID\n        in: query\n        description: |\n         ID von dem Zertifikat (dn.cn vom Zertifikatseintrag)\n         - Wenn angegeben wird das adressierte (certificateEntryID) Zertifikat geliefert.\n         - Wenn nicht angegeben werden alle Zertifikate des übergeordneten Verzeichniseintrags geliefert.\n        schema:\n          type: string\n      - name: entryType\n        in: query\n        description: Erlaubt die Suche mit Hilfe des Attributs entryType.\n        schema:\n          type: string\n      - name: telematikID\n        in: query\n        description: |\n         telematikID von dem Zertifikat \n         Erlaubt die Suche nach Zertifikatseinträgen einer telematikID.\n        schema:\n          type: string\n      - name: professionOID\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs professionOID. \n         Der Verzeichniseintrag wird selektiert, wenn die angegebene professionOID im Attribut professionOID (array) des Zertifikatseintrags enthalten ist.\n        schema:\n          type: string  \n      - name: usage\n        in: query\n        description: |\n         Erlaubt die Suche mit Hilfe des Attributs usage. \n         Der Verzeichniseintrag wird selektiert, wenn die angegebene usage im Attribut usage (array) des Zertifikatseintrags enthalten ist.\n        schema:\n          type: string  \n\n      responses:\n        200:\n          description: |\n           OK\n           Es werden alle gefundenen Zertifikatseinträge zurückgegeben.\n           Bei mehr als 100 gefundenen Einträgen nur 100 gefundenen Einträge zurückgegeben.                                                                                                         \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/userCertificates'\n        400:\n          description: Bad Request\n                # Allgemeiner Fehler im Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: |\n           Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: |\n           Not Found\n           Certificate not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /DirectoryEntries/{telematikID}/KOM-LE_Fachdaten:\n    post:\n      tags:\n      - Application Data Administration\n      summary: Fachdateneintrag erzeugen\n      description: Erzeugt einen neuen Fachdateneintrag\n      operationId: add_Directory_FA-Attributes\n      parameters:\n       - name: telematikID\n         in: path\n         description: telematikID von dem Verzeichniseintrag \n         schema:\n          type: string\n         required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n             $ref: '#/components/schemas/FAD1'\n   \n      responses:\n        201:\n          description: |\n           Created\n           Der Fachdateneintrag wurde erfolgreich angelegt.\n          content: {}\n        400:\n          description: |\n           Bad Request\n           Fehler in dem Request Body\n          content: \n            application/json:\n             schema:\n              $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n                    #  telematikID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n  /DirectoryEntries/{telematikID}/KOM-LE_Fachdaten/{fad}:\n  \n    get:\n      tags:\n      - Application Data Administration\n      summary: Fachdateneintrag lesen\n      description: Liefert den adressierten Fachdateneintrag.\n      operationId: get_Directory_FA-Attributes\n      parameters:\n      - name: telematikID\n        in: path\n        description: telematikID von dem Verzeichniseintrag\n        schema:\n          type: string\n        required: true  \n      - name: fad\n        in: path\n        description: FAD vom aufrufenden Fachdienst Anbieter\n        schema:\n          type: string\n        required: true  \n\n      responses:\n        200:\n          description: OK\n                    #  Der Fachdateneintrag wird zurückgegeben.\n \n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/FAD1'\n        400:\n          description: Bad Request\n                # Allgemeiner Fehler im Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n                    #  telematikID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n    put:\n      tags:\n      - Application Data Administration\n      summary: Fachdateneintrag ändern\n      description: Ändert den adressierten Fachdateneintrag.\n      operationId: modify_Directory_FA-Attributes\n      parameters:\n      - name: telematikID\n        in: path\n        description: telematikID von dem Verzeichniseintrag\n        schema:\n          type: string\n        required: true  \n      - name: fad\n        in: path\n        description: FAD vom aufrufenden Fachdienst Anbieter\n        schema:\n          type: string\n        required: true  \n      requestBody:\n        content:\n          application/json:\n            schema:\n             $ref: '#/components/schemas/FAD1'\n   \n      responses:\n        200:\n          description: |\n           OK\n           Der Fachdateneintrag wurde erfolgreich geändert.\n          content: {}\n        400:\n          description: | \n           Bad Request\n           Fehler in dem Request Body\n           \n           Beispiele für Fehlerfälle:\n            \n             - Anzahl der zulässigen Mail Adressen (maxKOMLEadr) überschritten \n               Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben\n               ```\n                {\n                    \"attributeName\": \"mail\",\n                    \"attributeError\": \"maxKOMLEadr wurde überschritten\"\n                  }\n            - Unzulässiger Wert von Attribut KOM-LE_Version im Request\n              Ein Response mit HTTP Status Kode 400 und folgenden Werten im Body wird zurück gegeben\n              ```\n                 {\n                    \"attributeName\": \"KOM-LE_Version\",\n                    \"attributeError\": \"Unzulässiger Wert\"\n                   }\n                       \n          content: \n            application/json:\n             schema:\n              $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n                    #  telematikID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n    delete:\n      tags:\n      - Application Data Administration\n      summary: Fachdateneintrag löschen\n      description: Löscht den adressierten Fachdateneintrag.\n      operationId: delete_Directory_FA-Attributes\n      parameters:\n      - name: telematikID\n        in: path\n        description: telematikID von dem Verzeichniseintrag\n        schema:\n          type: string\n        required: true  \n      - name: fad\n        in: path\n        description: FAD vom aufrufenden Fachdienst Anbieter\n        schema:\n          type: string\n        required: true  \n\n      responses:\n        200:\n          description: OK\n                    #  Der Fachdateneintrag wurde erfolgreich gelöscht.\n          content: {}\n        400:\n          description: Bad Request\n                    #  Fehler in dem Request Body\n          content: \n            application/json:\n             schema:\n              $ref: '#/components/schemas/Error'\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        403:\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        404:\n          description: Not Found\n                    #  telematikID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\ncomponents:\n\n  schemas:\n  \n    userCertificate:\n      description: Jeder Verzeichniseintrag muss mindestens ein Zertifikat enthalten.\n      required:\n      - dn\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        entryType:\n          type: string\n          description: |\n           Eintragstyp Wird vom VZD anhand der in dem Zertifikat enthaltenen OID (Extension Admission, Attribut ProfessionOID) und der Spalte Eintragstyp in Tab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch eingetragen. \n           Siehe auch [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403'\n          readOnly: true\n        telematikID:\n          type: string\n          description: |\n           Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).\n           Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.\n           Damit ist der Verzeichniseintrag bereits über die telematikID auffindbar.\n        professionOID:\n          maxItems: 100\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: |\n             Profession OID / Wird vom VZD anhand der in den Zertifikaten enthaltenen OIDs (Extension Admission, Attribut ProfessionOID) und dem Mapping in ab_VZD_Mapping_Eintragstyp_und_ProfessionOID automatisch eingetragen.\n             Siehe [gemSpecOID]# Tab_PKI_402 und Tab_PKI_403. \n             Kann mehrfach vorkommen (0..100)\n        usage:\n          maxItems: 100\n          minItems: 0\n          type: array\n          description: |\n           Nutzungskennzeichnung kann pro Zertifikat mehrfach\n            vergeben werden. Vorgegebener Wertebereich [KOM-LE, ePA].\n           Obligatorisch für LEI und KTR mit vorgegebenem Wert usage=ePA'\n          items:\n            type: string\n            enum:\n            - KOM-LE\n            - ePA\n        userCertificate:\n          type: string\n          description: |\n           Zertifikat im DER Format. Base64 kodiert.\n           Die pflegende Stelle erhält das Zertifikat vom TSP oder falls das nicht möglich ist wird ein Ersatzverfahren abgestimmt.\n        description:\n          type: string\n          description: Dieses Attribut ermöglicht das Zertifikat zu beschreiben, um\n             die Administration des VZD Eintrags zu vereinfachen.\n\n    userCertificates:\n      type: array\n      items:\n        $ref: '#/components/schemas/userCertificate'\n            \n    Fachdaten:\n      required:\n      - dn\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        FAD1:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/FAD1'\n\n    FAD1:\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        mail:\n          type: array\n          items:\n            type: string\n            description: 'E-Mail-Adresse'\n        komLeData:\n          type: array\n          items:\n            type: object\n            properties:\n              mail:\n                type: string\n                description: 'E-Mail-Adresse'\n              version:\n                type: string\n                example: 1.5\n                description: |\n                 Die höchste KOM-LE_Version der KIM Clientmodule für die KIM Mail Adresse\n                 Für jede Mail Adresse aus dem \"mail\" Attribut darf es nur einen Eintrag in Attribut KOM-LE_Version geben. Es dürfen in KOM-LE_Version keine Mail Adressen referenziert werden, die nicht im zugehörigen \"mail\" Attribut enthalten sind.\n                 Wenn eine Mail Adresse gelöscht wird, muss auch ihre KOM-LE_Version gelöscht werden.\n                 Geschrieben wird immer die gesamte Liste. Für Änderungen muss erst der aktuelle Eintrag gelesen werden und nach Änderung in der Liste der gesamte Eintrag wieder geschrieben werden.\n\n\n    distinguishedName:\n      required:\n      - uid\n      readOnly: true\n      type: object\n      properties:\n        uid:\n          type: string\n          description: |\n           entryID: Name/ID, den den Eintrag eindeutig identifiziert. \n           Hat für den Verzeichnisdienst_Eintrag, Certificate, KOM-LE_Fachdaten und FAD1 eines Verzeichniseintrags den gleichen Wert.\n        dc:\n          type: array\n          items:\n            type: string\n            description: Domain Component\n        ou:\n          type: array\n          items:\n            type: string\n            description: Organizational Unit\n        cn:\n          type: string\n          description: Common Name\n\n    baseDirectoryEntry:\n      required:\n      - cn\n      - dn\n      type: object\n      properties:\n        dn:\n          $ref: '#/components/schemas/distinguishedName'\n        givenName:\n          type: string\n          description: |\n            HBA: Vorname, obligatorisch, wird aus dem Zertifikat übernommen\n            SMC-B: nicht verwendet\n          readOnly: true\n          example:  Vorname\n        sn:\n          type: string\n          description: |\n            HBA: Name, obligatorisch, wird aus dem Zertifikat übernommen\n            SMC-B: nicht verwendet\n          readOnly: true\n          example:  Nachname\n        cn:\n          type: string\n          description: |\n           HBA: Vorname und Nachname\n           SMC-B: Bezeichner: Name Wird vom VZD aus dem Zertifikatsattribut commonName übernommen.\n          readOnly: true\n          example:  Vorname Nachname  \n        displayName:\n          type: string\n          description: |\n           Anzeigename, kann geändert werden. \n           Dieses Attribut wird genutzt um den Namen der Organisation gegenüber dem Anwender darzustellen (Verwendung als Filter-Attribut um die Suche einzuschränken und bei der Darstellung des Ergebnisses).\n              Der Wert wird von der pflegenden Stelle festgelegt.\n              Konvention für HBA Einträge: Name, Vorname\n          example:  Name, Vorname\n        streetAddress:\n          type: string\n          description: |\n           Straße und Hausnummer\n           Der Wert wird von der pflegenden Stelle festgelegt\n          example: Friedrichstraße 136\n        postalCode:\n          type: string\n          description: |\n           Postleitzahl\n           Der Wert wird von der pflegenden Stelle festgelegt'\n          example: 10117\n        countryCode:\n          type: string\n          maxLength: 2\n          description: |\n           Ländercode\n           Entsprechend ISO-3166-1 ALPHA-2\n           Falls das Attribut beim Anlegen des Datensatzes nicht beölegt wird, ergänzt der VZD den Code für Deutschland (Defaultwert).\n          example: DE        \n        localityName:\n          type: string\n          description: |\n           Ort\n           Der Wert wird von der pflegenden Stelle festgelegt\n          example: Berlin\n        stateOrProvinceName:\n          type: string\n          description: |\n           Bundesland\n           Der Wert wird von der pflegenden Stelle festgelegt\n          example: Berlin\n        title:\n          type: string\n          description: |\n           HBA: Titel, optional\n           SMC-B: nicht verwendet\n        organization:\n          type: string\n          example: 12345670\n          description: |\n           Organisation\n           Der Wert wird von der pflegenden Stelle festgelegt\n        otherName:\n          type: string\n          description: |\n           Anderer Name \n           Wird vom VZD aus dem Zertifikatsattribut otherName übernommen.\n        telematikID:\n          type: string\n          description: |\n           Wird beim Anlegen des Eintrags vom VZD aus dem Zertifikat übernommen (Feld registrationNumber der Extension Admission).\n           Falls der Basiseintrag (baseDirectoryEntry) ohne Zertifikat angelegt wird, kann in Operation add_Directory_Entry die telematikID angegeben werden.\n           Damit ist der Verzeichniseintrag bereits über die telematikID im baseDirectoryEntry auffindbar. Diese telematikID muss mit der telematikID aus dem Zertifikatseintrag (userCertificate) übereinstimmen. Simmten die telematikIDs nicht überein, wird die Operation mit Fehlercode 422 abgelehnt\n        specialization:\n          maxItems: 100\n          type: array\n          description: |\n           Fachgebiet\n           Der Wert wird von der pflegenden Stelle festgelegt\n          items:\n            type: string\n        domainID:\n          maxItems: 100\n          type: array\n          description: |\n           Ärzte-\u003e Betriebsstättennummer\n           Der Wert wird aus dem Zertifikat übernommen (Attribut organizationName)\n          items:\n            type: string\n            example: 345678975\n        holder:\n          maxItems: 100\n          type: array\n          description: |\n           Identifiziert den Eigentümer dieses Verzeichniseintrags, der Änderungen an ihm vornehmen darf.\n           Hat keinen Einfluss auf Fachdaten und Zertifikatsdaten.\n           Beim Anlegen eines neuen Verzeichniseintrags (add_Directory_Entry)\n              - Ist im add_Directory_Entry Request das Attribut \"holder\" nicht vorhanden oder enthält keine Werte\n                 o Wird vom VZD aus dem ID_TOKEN claim scope der Wert entnommen und als \"holder\" in dieses Attribut eingetragen. \n              - Ist im add_Directory_Entry Request das Attribut \"holder\" vorhanden und mit Inhalten gefüllt\n                 o Übernimmt der VZD die Werte aus dem Request und trägt sie - nach Prüfung ihrer Gültigkeit - in den Verzeuichniseintrag ein. \n                   Ist ein Wert aus dem Request nicht gültig, weist der VZD die Operation mit HTTP-Status-Code 422 ab.\n            Beim Ändern eines neuen Verzeichniseintrags (modify_Directory_Entry)\n              - Ist im modify_Directory_Entry Request das Attribut \"holder\" nicht vorhanden oder enthält keine Werte\n                 o Die Werte im aktuellen \"holder\" Attribut des Verzeichniseintrags bleiben erhalten.\n              - Ist im add_Directory_Entry Request das Attribut \"holder\" vorhanden und mit Inhalten gefüllt\n                 o Übernimmt der VZD die Werte aus dem Request und trägt sie - nach Prüfung ihrer Gültigkeit - in den Verzeuichniseintrag ein. \n                   Ist ein Wert aus dem Request nicht gültig, weist der VZD die Operation mit HTTP-Status-Code 422 ab.\n          items:\n            type: string\n            example: KartenHerausgeberABC\n        maxKOMLEadr:\n          type: string\n          description: |\n           Maximale Anzahl von mail Adressen in den KOM-LE Fachdaten. \n           Falls kein Wert eingetragen wurde, können beliebig viele mail Adressen in den KOM-LE Fachdaten eingetragen werden. Falls ein Wert eingetragen wurde, können maximal so viele mail Adressen in den KOM-LE Fachdaten eingetragen werden.\n          example: 1\n        personalEntry:\n          type: boolean\n          description: |\n           Wird vom VZD eingetragen \n           Wert == TRUE, wenn alle Zertifikate den entryType 1 haben (Berufsgruppe), \n           Wert == FALSE sonst\n          readOnly: true\n          example: true\n        dataFromAuthority:\n          type: boolean\n          description: |\n           Wird vom VZD eingetragen\n           Wert == TRUE, wenn der Verzeichnisdienst_Eintrag von dem Kartenherausgeber geschrieben wurde, \n           Wert == FALSE sonst \n          readOnly: true\n          example: true\n        changeDateTime:\n          type: string\n#          format: date-time Mit dieser Format Vorgabe ist kein Code mehr generierbar, deshalb auskommentiert. Es soll sich aber weiterhin an das Format gehalten werden.\n          description: |\n           Der VZD setzt dieses Attribut bei jeder Schreiboperation für den Datensatz (Basisdaten) auf die aktuelle Zeit. Format entsprechend RFC 3339, section 5.6.\n          readOnly: true\n          example: \"2017-07-21T17:32:28Z\"\n        professionOID:\n          maxItems: 100\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: Erlaubt die Suche nach professionOID (als Kopie des Attributs aus dem Zertifikatseintrags).\n        entryType:\n          maxItems: 10\n          minItems: 0\n          type: array\n          readOnly: true\n          items:\n            type: string\n            description: Erlaubt die Suche nach entryType (als Kopie des Attributs aus dem Zertifikatseintrags).\n\n\n    DirectoryEntry:\n      type: object\n      properties:\n        DirectoryEntryBase:\n          $ref: '#/components/schemas/baseDirectoryEntry'\n        userCertificates:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/userCertificate'\n        Fachdaten:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/Fachdaten'\n\n    DirectoryEntries:\n      type: array\n      items:\n        $ref: '#/components/schemas/DirectoryEntry'\n\n            \n    Error:\n      type: object\n      properties:\n        message: \n          type: string\n          description: (optionale) Fehlernachricht\n        errors:\n          maxItems: 50\n          minItems: 0\n          type: array\n          items:\n            $ref: '#/components/schemas/InnerError'\n\n    InnerError:\n      type: object\n      properties:\n        attributeName:\n          description: Name des Attributs, in dem ein Fehler erkannt wurde\n          type: string\n        attributeError:\n          description: Beschreibung des erkannten Fehlers\n          type: string\n\n    InfoObject:\n      required:\n      - title\n      - version\n      readOnly: true\n      type: object\n      properties:\n        title:\n          type: string\n          description: Der Titel der Anwendung\n          example: \"I_Directory_Application_Maintenance\"\n        description:\n          type: string\n          description: Eine kurze Beschreibung der Anwendung\n          example: \"REST Schnittstelle zur Pflege der Fachanwendungsdaten der Verzeichniseinträge.\n              Über diese Schnittstelle können Fachanwendungsdaten der Verzeichniseinträge erzeugt, aktualisiert und gelöscht werden.\"\n        termsOfService:\n          type: string\n          format: uri\n          description: Eine URL zu den Terms of Service für dieses API.\n          example: \"http://example.com/terms/\"\n        contact:\n          $ref: '#/components/schemas/Contact'\n        license:\n          $ref: '#/components/schemas/License'\n        version:\n          type: string\n          description: Die Version von dem OpenAPI Document (YAML Datei)\n          example: \"1.1.0\"\n\n    Contact:\n      readOnly: true\n      description: Die Kontaktinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Name von der Kontaktperson / -Organisation\n          example: \"Firma 123\"\n        url:\n          type: string\n          format: uri\n          description: | \n            Eine URL zu den Kontaktinformationen für dieses API.\n            In dem Dokument unter dieser URL muss ein Link zum Download der aktuell genutzten YAML Datei dieser Schnittstelle hinterlegt sein.\n          example: \"http://www.example.com/support\"\n        email:\n          type: string\n          format: email\n          description: Der E-Mail Adresse der Kontaktperson / -Organisation.\n          example: \"support@example.com\"\n\n    License:\n      required:\n      - name\n      readOnly: true\n      description: Der Lizenzinformationen für diese Schnittstelle.\n      type: object\n      properties:\n        name:\n          type: string\n          description: Der Lizenzname\n          example: \"Apache 2.0\"\n        url:\n          type: string\n          description: Eine URL zu den Lizenzinformationen für dieses API.\n          example: \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n\n#  securitySchemes:\n#    TLS:\n#      type: mutualTLS\n#   Da \"mutualTLS\" erst ab OpenAPI 3.1 möglich ist - welches viele Tools noch nicht unterstützen -\n#   wird die beidseitige TLS Authentisierung nicht hier definiert.\n",
			"canonicalURL": "/github.com/gematik/api-vzd@bc7ff4619d154f365261ef13144f541e5f1b6ef1/-/blob/src/openapi/DirectoryApplicationMaintenance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gematik/api-vzd/blob/bc7ff4619d154f365261ef13144f541e5f1b6ef1/src/openapi/DirectoryApplicationMaintenance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}