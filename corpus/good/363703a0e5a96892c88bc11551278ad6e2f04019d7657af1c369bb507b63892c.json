{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cfpb/ccdb5-api"
		},
		"file": {
			"name": "swagger-config.yaml",
			"size": 0,
			"path": "swagger-config.yaml",
			"byteSize": 28168,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Consumer Complaint Database API\n  description: The API for searching the Consumer Complaint Database\n  termsOfService: 'https://cfpb.github.io/source-code-policy/'\n  contact:\n    name: Report API Issues\n    url: https://github.com/cfpb/ccdb5-api/issues  \n  license:\n    name: Creative Commons License CC0\n    url: 'https://github.com/cfpb/ccdb5-api/blob/main/LICENSE'\npaths:\n  /:\n    get:\n      tags:\n        - Complaints\n      summary: Search consumer complaints\n      description: Search the contents of the consumer complaint database\n      parameters:\n        - $ref: '#/components/parameters/search_term'\n        - $ref: '#/components/parameters/field'\n        - $ref: '#/components/parameters/from'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/sort'\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/no_aggs'\n        - $ref: '#/components/parameters/no_highlight'\n        - $ref: '#/components/parameters/company'\n        - $ref: '#/components/parameters/company_public_response'\n        - $ref: '#/components/parameters/company_received_max'\n        - $ref: '#/components/parameters/company_received_min'\n        - $ref: '#/components/parameters/company_response'\n        - $ref: '#/components/parameters/consumer_consent_provided'\n        - $ref: '#/components/parameters/consumer_disputed'\n        - $ref: '#/components/parameters/date_received_max'\n        - $ref: '#/components/parameters/date_received_min'\n        - $ref: '#/components/parameters/has_narrative'\n        - $ref: '#/components/parameters/issue'\n        - $ref: '#/components/parameters/product'\n        - $ref: '#/components/parameters/state'\n        - $ref: '#/components/parameters/submitted_via'\n        - $ref: '#/components/parameters/tags'\n        - $ref: '#/components/parameters/timely'\n        - $ref: '#/components/parameters/zip_code'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n            text/csv:\n              schema:\n                $ref: '#/components/schemas/SearchResult'\n        '400':\n          description: Invalid status value\n  /_suggest:\n    get:\n      tags:\n        - Typeahead\n      summary: Suggest possible searches\n      description: The endpoint for the main search box in the UI\n      parameters:\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/suggest_text'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuggestResult'\n        '400':\n          description: Invalid input\n  /_suggest_company:\n    get:\n      tags:\n        - Typeahead\n      summary: Suggest possible companies\n      description: Provide a list of companies that match the input text\n      parameters:\n        - $ref: '#/components/parameters/suggest_text'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/company_public_response'\n        - $ref: '#/components/parameters/company_received_max'\n        - $ref: '#/components/parameters/company_received_min'\n        - $ref: '#/components/parameters/company_response'\n        - $ref: '#/components/parameters/consumer_consent_provided'\n        - $ref: '#/components/parameters/consumer_disputed'\n        - $ref: '#/components/parameters/date_received_max'\n        - $ref: '#/components/parameters/date_received_min'\n        - $ref: '#/components/parameters/has_narrative'\n        - $ref: '#/components/parameters/issue'\n        - $ref: '#/components/parameters/product'\n        - $ref: '#/components/parameters/state'\n        - $ref: '#/components/parameters/submitted_via'\n        - $ref: '#/components/parameters/tags'\n        - $ref: '#/components/parameters/timely'\n        - $ref: '#/components/parameters/zip_code'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuggestResult'\n        '400':\n          description: Invalid input\n  /_suggest_zip:\n    get:\n      tags:\n        - Typeahead\n      summary: Suggest possible zip codes\n      description: Provide a list of zip codes that match the input text\n      parameters:\n        - $ref: '#/components/parameters/suggest_text'\n        - $ref: '#/components/parameters/size'\n        - $ref: '#/components/parameters/company_public_response'\n        - $ref: '#/components/parameters/company_received_max'\n        - $ref: '#/components/parameters/company_received_min'\n        - $ref: '#/components/parameters/company_response'\n        - $ref: '#/components/parameters/consumer_consent_provided'\n        - $ref: '#/components/parameters/consumer_disputed'\n        - $ref: '#/components/parameters/date_received_max'\n        - $ref: '#/components/parameters/date_received_min'\n        - $ref: '#/components/parameters/has_narrative'\n        - $ref: '#/components/parameters/issue'\n        - $ref: '#/components/parameters/product'\n        - $ref: '#/components/parameters/state'\n        - $ref: '#/components/parameters/submitted_via'\n        - $ref: '#/components/parameters/tags'\n        - $ref: '#/components/parameters/timely'\n        - $ref: '#/components/parameters/zip_code'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuggestResult'\n        '400':\n          description: Invalid input\n  '/{complaintId}':\n    get:\n      tags:\n        - Complaints\n      summary: Find consumer complaint by ID\n      description: Get complaint details for a specific ID\n      parameters:\n        - name: complaintId\n          in: path\n          description: ID of the complaint\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 0\n            maximum: 9999999999\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Complaint'\n        '400':\n          description: Invalid ID supplied\n        '404':\n          description: Complaint not found\n  /geo/states:\n    get:\n      tags:\n        - Complaints\n      summary: Get the state-by-state information\n      description: Get complaint information broken down by states\n      parameters:\n        - $ref: '#/components/parameters/search_term'\n        - $ref: '#/components/parameters/field'\n        - $ref: '#/components/parameters/company'\n        - $ref: '#/components/parameters/company_public_response'\n        - $ref: '#/components/parameters/company_received_max'\n        - $ref: '#/components/parameters/company_received_min'\n        - $ref: '#/components/parameters/company_response'\n        - $ref: '#/components/parameters/consumer_consent_provided'\n        - $ref: '#/components/parameters/consumer_disputed'\n        - $ref: '#/components/parameters/date_received_max'\n        - $ref: '#/components/parameters/date_received_min'\n        - $ref: '#/components/parameters/has_narrative'\n        - $ref: '#/components/parameters/issue'\n        - $ref: '#/components/parameters/product'\n        - $ref: '#/components/parameters/state'\n        - $ref: '#/components/parameters/submitted_via'\n        - $ref: '#/components/parameters/tags'\n        - $ref: '#/components/parameters/timely'\n        - $ref: '#/components/parameters/zip_code'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatesResult'\n  /trends:\n    get:\n      tags:\n        - Trends\n      summary: \"List trends\"\n      description: \"Return specific aggregations for a search\"\n      parameters:\n        - $ref: '#/components/parameters/search_term'\n        - $ref: '#/components/parameters/field'\n        - $ref: '#/components/parameters/company'\n        - $ref: '#/components/parameters/company_public_response'\n        - $ref: '#/components/parameters/company_received_max'\n        - $ref: '#/components/parameters/company_received_min'\n        - $ref: '#/components/parameters/company_response'\n        - $ref: '#/components/parameters/consumer_consent_provided'\n        - $ref: '#/components/parameters/consumer_disputed'\n        - $ref: '#/components/parameters/date_received_max'\n        - $ref: '#/components/parameters/date_received_min'\n        - $ref: '#/components/parameters/focus'\n        - $ref: '#/components/parameters/has_narrative'\n        - $ref: '#/components/parameters/issue'\n        - $ref: '#/components/parameters/lens'\n        - $ref: '#/components/parameters/product'\n        - $ref: '#/components/parameters/state'\n        - $ref: '#/components/parameters/submitted_via'\n        - $ref: '#/components/parameters/sub_lens'\n        - $ref: '#/components/parameters/sub_lens_depth'\n        - $ref: '#/components/parameters/tags'\n        - $ref: '#/components/parameters/timely'\n        - $ref: '#/components/parameters/trend_depth'\n        - $ref: '#/components/parameters/trend_interval'\n        - $ref: '#/components/parameters/zip_code'\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrendsResult'\n            text/csv:\n              schema:\n                $ref: '#/components/schemas/TrendsResult'\n        '400':\n          description: Invalid status value\ntags:\n  - name: Complaints\n    description: These endpoints provide access to consumer complaints\n  - name: Trends\n    description: These endpoints provide access aggregated consumer complaint data\n  - name: Typeahead\n    description: These endpoints support the typeahead boxes in the UI\nexternalDocs:\n  description: Additional API Information\n  url: 'https://cfpb.github.io/api/ccdb/'\nservers:\n  - url: 'https://www.consumerfinance.gov/data-research/consumer-complaints/search/api/v1/'\ncomponents:\n  parameters:\n    company:\n      name: company\n      in: query\n      description: Filter the results to only return these companies\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    company_public_response:\n      name: company_public_response\n      in: query\n      description: Filter the results to only return these types of public response by the company\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    company_received_max:\n      name: company_received_max\n      in: query\n      description: Return results with date \u003c company_received_max (i.e. 2017-03-04)\n      schema:\n        type: string\n        format: date\n    company_received_min:\n      name: company_received_min\n      in: query\n      description: Return results with date \u003e= company_received_min (i.e. 2017-03-04)\n      schema:\n        type: string\n        format: date\n    company_response:\n      name: company_response\n      in: query\n      description: Filter the results to only return these types of response by the company\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    consumer_consent_provided:\n      name: consumer_consent_provided\n      in: query\n      description: Filter the results to only return these types of consent consumer provided\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    consumer_disputed:\n      name: consumer_disputed\n      in: query\n      description: Filter the results to only return the specified state of consumer disputed, i.e. yes, no\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    date_received_max:\n      name: date_received_max\n      in: query\n      description: Return results with date \u003c date_received_max (i.e. 2017-03-04)\n      schema:\n        type: string\n        format: date\n    date_received_min:\n      name: date_received_min\n      in: query\n      description: Return results with date \u003e= date_received_min (i.e. 2017-03-04)\n      schema:\n        type: string\n        format: date\n    field:\n      name: field\n      in: query\n      description: If the parameter \"search_term\" has a value, use \"field\" to specify which field is searched. If not specified, \"complaint_what_happened\" will be searched.\n      schema:\n        type: string\n        enum:\n          - complaint_what_happened\n          - company_public_response\n          - all\n        default: complaint_what_happened\n    focus:\n      name: focus\n      in: query\n      description: The name of the product or company on which to focus charts for products and issues\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    format:\n      name: format\n      in: query\n      description: Format to be returned, if this parameter is not specified, frm/size parameters can be used properly, but if a format is specified for exporting, frm/size will be ignored\n      schema:\n        type: string\n        enum:\n          - json\n          - csv\n        default: json\n    from:\n      name: frm\n      in: query\n      description: Return results starting from a specific index, only if format parameter is not specified, ignore otherwise\n      schema:\n        type: integer\n        format: int64\n        minimum: 1\n        maximum: 100000\n        default: 0\n    has_narrative:\n      name: has_narrative\n      in: query\n      description: Filter the results to only return the specified state of whether it has narrative in the complaint or not, i.e. yes, no\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    issue:\n      name: issue\n      in: query\n      description: 'Filter the results to only return these types of issue and subissue, i.e. product-only: Getting a Loan, subproduct needs to include product, separated by ''•'', Getting a Loan•Can''t qualify for a loan'\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    lens:\n      name: lens\n      in: query\n      required: true\n      description: The data lens through which to view complaint trends over time.\n      explode: true\n      schema:\n        type: string\n        items:\n          type: string\n        enum:\n          - overview\n          - issue\n          - product\n          - tags\n        default: overview\n    no_aggs:\n      name: no_aggs\n      in: query\n      description: Include aggregations in result or not, True means no aggregations will be included, False means aggregations will be included.\n      schema:\n        type: boolean\n        default: false\n    no_highlight:\n      name: no_highlight\n      in: query\n      description: Include highlight of search term in result or not, True means no highlighting will be included, False means highlighting will be included.\n      schema:\n        type: boolean\n        default: false\n    product:\n      name: product\n      in: query\n      description: 'Filter the results to only return these types of product and subproduct, i.e. product-only: Mortgage, subproduct needs to include product, separated by ''•'', Mortgage•FHA mortgage'\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    search_term:\n      name: search_term\n      in: query\n      description: Return results containing specific term\n      schema:\n        type: string\n    size:\n      name: size\n      in: query\n      description: Limit the size of the results\n      schema:\n        type: integer\n        format: int64\n        minimum: 1\n        maximum: 100\n        default: 10\n    sort:\n      name: sort\n      in: query\n      description: Return results sort in a particular order\n      schema:\n        type: string\n        enum:\n          - relevance_desc\n          - relevance_asc\n          - created_date_desc\n          - created_date_asc\n        default: relevance_desc\n    state:\n      name: state\n      in: query\n      description: Filter the results to only return these states (use abbreviation, i.e. CA, VA)\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    sub_lens:\n      name: sub_lens\n      in: query\n      description: The sub-lens through which to view complaint trends over time.\n      explode: true\n      schema:\n        type: string\n        items:\n          type: string\n        enum:\n          - issue\n          - product\n          - sub_product\n          - sub_issue\n          - tags\n    sub_lens_depth:\n      name: sub_lens_depth\n      in: query\n      description: The top X trend sub aggregations will be returned, where X is the supplied sub_lens_depth.\n      schema:\n        type: integer\n        maximum: 10000000\n        minimum: 5\n        format: int64\n        default: 10\n    submitted_via:\n      name: submitted_via\n      in: query\n      description: Filter the results to only return these types of way consumers submitted their complaints\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    suggest_text:\n      name: text\n      in: query\n      description: text to use for suggestions\n      required: true\n      schema:\n        type: string\n    tags:\n      name: tags\n      in: query\n      description: Filter the results to only return these types of tag\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    timely:\n      name: timely\n      in: query\n      description: Filter the results to show whether a response was timely\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n    trend_depth:\n      name: trend_depth\n      in: query\n      description: The top X trend aggregations will be returned, where X is the supplied trend_depth.\n      schema:\n        type: integer\n        maximum: 10000000\n        minimum: 5\n        format: int64\n        default: 10\n    trend_interval:\n      name: trend_interval\n      in: query\n      description: The interval of time to use for trends aggregations histograms. When using day intervals, we recommend querying for date_received_min / max periods of less than one year.\n      required: true\n      schema:\n        type: string\n        enum:\n          - year\n          - quarter\n          - month\n          - week\n          - day\n    zip_code:\n      name: zip_code\n      in: query\n      description: Filter the results to only return these zip codes\n      explode: true\n      schema:\n        type: array\n        items:\n          type: string\n  schemas:\n    Aggregation:\n      type: object\n      description: An Elasticsearch aggregation\n      properties:\n        doc_count:\n          type: integer\n          description: The total number of complaints covered in this aggregation\n        field:\n          type: object\n          description: The name of the ` being aggregated\n          properties:\n            buckets:\n              type: array\n              items:\n                $ref: '#/components/schemas/Bucket'\n            doc_count_error_upper_bound:\n              type: integer\n              description: The number of possible errors that occurred when searching the shards\n            sum_other_doc_count:\n              type: integer\n              description: The number of complaints that were not included in this aggregation.\n    AggregationDate:\n      type: object\n      properties:\n        value_as_string:\n          type: string\n          format: date-time\n          description: ISO-8601 formatted date (yyyy-mm-ddTHH:MM:SSZZ)\n        value:\n          type: number\n          description: Seconds since 1970 (Unix Epoch)\n    Bucket:\n      type: object\n      properties:\n        doc_count:\n          type: integer\n          description: The number of complaints that match this key\n        key:\n          type: string\n    Complaint:\n      type: object\n      externalDocs:\n        description: Official documentation\n        url: 'https://cfpb.github.io/api/ccdb/fields.html'\n      properties:\n        company:\n          type: string\n          description: The complaint is about this company\n        company_public_response:\n          type: string\n          description: 'The company''s optional, public-facing response to a consumer''s complaint'\n        company_response:\n          type: string\n          description: The response from the company about this complaint\n        complaint_id:\n          type: integer\n          description: The unique identification number for a complaint\n        complaint_what_happened:\n          type: string\n          description: A description of the complaint provided by the consumer\n        consumer_consent_provided:\n          type: string\n          description: Identifies whether the consumer opted in to publish their complaint narrative\n        consumer_disputed:\n          type: string\n          description: Whether the consumer disputed the company's response\n        date_received:\n          type: string\n          format: date\n          description: The date the CFPB received the complaint\n        date_sent_to_company:\n          type: string\n          description: The date the CFPB sent the complaint to the company\n        has_narrative:\n          type: boolean\n          description: Indicates this complaint has a narrative\n        issue:\n          type: string\n          description: The issue the consumer identified in the complaint\n        product:\n          type: string\n          description: The type of product the consumer identified in the complaint\n        state:\n          type: string\n          description: The state of the mailing address provided by the consumer\n        sub_issue:\n          type: string\n          description: The sub-issue the consumer identified in the complaint\n        sub_product:\n          type: string\n          description: The type of sub-product the consumer identified in the complaint\n        submitted_via:\n          type: string\n          description: How the complaint was submitted to the CFPB\n        tags:\n          type: string\n          description: Data that supports easier searching and sorting of complaints\n        timely:\n          type: string\n          description: Indicates whether the company gave a timely response or not\n        zip_code:\n          type: string\n          description: The mailing ZIP code provided by the consumer\n    Hit:\n      type: object\n      description: A single Elasticsearch result\n      properties:\n        _source:\n          $ref: '#/components/schemas/Complaint'\n    Hits:\n      type: object\n      description: A set of complaints that matched the query\n      properties:\n        hits:\n          type: array\n          items:\n            $ref: '#/components/schemas/Hit'\n        max_score:\n          type: number\n          description: The highest score in the results\n          format: float\n        total:\n          type: object\n          properties:\n            value:\n              type: integer\n              description: \"The count of matching hits, accurate in our code even above 10,000 hits\"\n            relation:\n              type: string\n              description: \"Indicates the accuracy of the default ES response, whether the value is accurate (eq) or a lower bound (gte)\"\n    Meta:\n      type: object\n      properties:\n        has_data_issue:\n          type: boolean\n          description: Indicates there has been an issue with the most recent data load\n        is_data_stale:\n          type: boolean\n          description: Indicates the most recent data is over 5 business days old\n        is_narrative_stale:\n          type: boolean\n          description: Indicates the most recent narratives are over 5 busines days old\n        last_indexed:\n          type: string\n          description: The timestamp of the most recently indexed complaint\n          format: dateTime\n        last_updated:\n          type: string\n          description: The timestamp of the most recent complaint\n          format: dateTime\n        license:\n          type: string\n          description: The open source license under which the API operates\n        total_record_count:\n          type: integer\n          description: The total number of complaints currently indexed\n    MultiLevelAggregation:\n      properties:\n        doc_count:\n          type: integer\n          description: The total number of complaints covered in this aggregation\n        field:\n          type: object\n          description: The name of the field being aggregated\n          properties:\n            buckets:\n              type: array\n              items:\n                $ref: '#/components/schemas/MultiLevelBucket'\n            doc_count_error_upper_bound:\n              type: integer\n              description: The number of possible errors that occurred when searching the shards\n            sum_other_doc_count:\n              type: integer\n              description: The number of complaints that were not included in this aggregation.\n    MultiLevelBucket:\n      type: object\n      properties:\n        doc_count:\n          type: integer\n          description: The number of complaints that match this key\n        field.raw:\n          type: object\n          description: The next level of aggregations\n          properties:\n            buckets:\n              type: array\n              items:\n                $ref: '#/components/schemas/Aggregation'\n        key:\n          type: string\n    SearchResult:\n      type: object\n      properties:\n        _meta:\n          $ref: '#/components/schemas/Meta'\n        aggregations:\n          type: object\n          properties:\n            company_public_response:\n              $ref: '#/components/schemas/Aggregation'\n            company_response:\n              $ref: '#/components/schemas/Aggregation'\n            consumer_consent_provided:\n              $ref: '#/components/schemas/Aggregation'\n            consumer_disputed:\n              $ref: '#/components/schemas/Aggregation'\n            has_narrative:\n              $ref: '#/components/schemas/Aggregation'\n            issue:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            product:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            state:\n              $ref: '#/components/schemas/Aggregation'\n            submitted_via:\n              $ref: '#/components/schemas/Aggregation'\n            tags:\n              $ref: '#/components/schemas/Aggregation'\n            timely:\n              $ref: '#/components/schemas/Aggregation'\n            zip_code:\n              $ref: '#/components/schemas/Aggregation'\n        hits:\n          $ref: '#/components/schemas/Hits'\n    StatesResult:\n      type: object\n      properties:\n        aggregations:\n          type: object\n          properties:\n            issue:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            product:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            state:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n    SuggestResult:\n      type: array\n      items:\n        type: string\n    TrendsResult:\n      type: object\n      properties:\n        aggregations:\n          type: object\n          properties:\n            company:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            issue:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            product:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            sub_issue:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            sub_product:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n            tags:\n              $ref: '#/components/schemas/MultiLevelAggregation'\n  links: {}\n  callbacks: {}\nsecurity: []\n",
			"canonicalURL": "/github.com/cfpb/ccdb5-api@22707fb2f2253d7803937321578e4b3b995b5e2c/-/blob/swagger-config.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cfpb/ccdb5-api/blob/22707fb2f2253d7803937321578e4b3b995b5e2c/swagger-config.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}