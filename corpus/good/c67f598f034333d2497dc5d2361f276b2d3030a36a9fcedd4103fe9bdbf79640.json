{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-sql-blobAuditing-2015-05-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-sql-blobAuditing-2015-05-01-preview-swagger.yaml",
			"byteSize": 26857,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Azure SQL Database management API provides a RESTful set of web APIs\n    that interact with Azure SQL Database services to manage your databases. The\n    API enables users to create, retrieve, update, and delete databases,\n    servers, and other entities.\n  title: SqlManagementClient\n  version: 2015-05-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/blobAuditing.json\n      version: \"2.0\"\n  x-preferred: false\n  x-providerName: azure.com\n  x-serviceName: sql-blobAuditing\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings\":\n    get:\n      description: Lists auditing settings of a database.\n      operationId: DatabaseBlobAuditingPolicies_ListByDatabase\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved database auditing settings.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseBlobAuditingPolicyListResult\"\n              examples:\n                List audit settings of a database:\n                  $ref: \"#/components/examples/List_audit_settings_of_a_database\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n      tags:\n        - BlobAuditing\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}\":\n    get:\n      description: Gets a database's blob auditing policy.\n      operationId: DatabaseBlobAuditingPolicies_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - $ref: \"#/components/parameters/BlobAuditingPolicyNameParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved the database blob auditing policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseBlobAuditingPolicy\"\n              examples:\n                Get a database's blob auditing policy:\n                  $ref: \"#/components/examples/Get_a_database_s_blob_auditing_policy\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n      tags:\n        - BlobAuditing\n    put:\n      description: Creates or updates a database's blob auditing policy.\n      operationId: DatabaseBlobAuditingPolicies_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - $ref: \"#/components/parameters/ServerNameParameter\"\n        - $ref: \"#/components/parameters/DatabaseNameParameter\"\n        - $ref: \"#/components/parameters/BlobAuditingPolicyNameParameter\"\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DatabaseBlobAuditingPolicy\"\n        description: The database blob auditing policy.\n        required: true\n      responses:\n        \"200\":\n          description: Successfully set the database blob auditing policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseBlobAuditingPolicy\"\n              examples:\n                Create or update a database's azure monitor auditing policy with minimal parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_azure_\\\n                    monitor_auditing_policy_with_minimal_parameters\"\n                Create or update a database's blob auditing policy with all parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_blob_a\\\n                    uditing_policy_with_all_parameters\"\n                Create or update a database's blob auditing policy with minimal parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_blob_a\\\n                    uditing_policy_with_minimal_parameters\"\n        \"201\":\n          description: Successfully created the database blob auditing policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseBlobAuditingPolicy\"\n              examples:\n                Create or update a database's azure monitor auditing policy with minimal parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_azure_\\\n                    monitor_auditing_policy_with_minimal_parameters\"\n                Create or update a database's blob auditing policy with all parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_blob_a\\\n                    uditing_policy_with_all_parameters\"\n                Create or update a database's blob auditing policy with minimal parameters:\n                  $ref: \"#/components/examples/Create_or_update_a_database_s_blob_a\\\n                    uditing_policy_with_minimal_parameters\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n             * 400 InvalidDatabaseBlobAuditingPolicyCreateRequest - The create database blob auditing policy request does not exist or has no properties object.\n\n             * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.\n\n             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n             * 400 BlobAuditingInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n             * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n             * 400 BlobAuditingInvalidStorageAccountCredentials - The provided storage account or access key is not valid.\n\n             * 400 BlobAuditingIsNotSupportedOnGeoDr - Blob auditing can be configured on primary databases only.\n\n             * 400 InvalidBlobAuditActionsAndGroupsForDW - Unsupported audit actions or action groups for DW.\n\n             * 400 BlobAuditingInsufficientStorageAccountPermissions - Insufficient read or write permissions on the provided storage account.\n\n             * 400 BlobAuditingStorageAccountIsDisabled - The provided storage account is disabled.\n\n             * 400 InvalidBlobAuditActions - Invalid audit action\n\n             * 404 SourceDatabaseNotFound - The source database does not exist.\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n      tags:\n        - BlobAuditing\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    List_audit_settings_of_a_database:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb/auditingSettings/default\n            kind: V12\n            name: default\n            properties:\n              auditActionsAndGroups: []\n              isAzureMonitorTargetEnabled: false\n              isStorageSecondaryKeyInUse: false\n              retentionDays: 0\n              state: Disabled\n              storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000\n              storageEndpoint: \"\"\n            type: Microsoft.Sql/servers/databases/auditingSettings\n    Get_a_database_s_blob_auditing_policy:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          auditActionsAndGroups: []\n          isAzureMonitorTargetEnabled: false\n          isStorageSecondaryKeyInUse: false\n          retentionDays: 0\n          state: Disabled\n          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000\n          storageEndpoint: \"\"\n        type: Microsoft.Sql/servers/databases/auditingSettings\n    Create_or_update_a_database_s_azure_monitor_auditing_policy_with_minimal_parameters:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          auditActionsAndGroups:\n            - SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n            - FAILED_DATABASE_AUTHENTICATION_GROUP\n            - BATCH_COMPLETED_GROUP\n          isAzureMonitorTargetEnabled: true\n          isStorageSecondaryKeyInUse: false\n          retentionDays: 0\n          state: Enabled\n          storageAccountAccessKey: \"\"\n          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000\n        type: Microsoft.Sql/servers/databases/auditingSettings\n    Create_or_update_a_database_s_blob_auditing_policy_with_all_parameters:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          auditActionsAndGroups:\n            - DATABASE_LOGOUT_GROUP\n            - DATABASE_ROLE_MEMBER_CHANGE_GROUP\n            - UPDATE on database::TestDatabaseName by public\n          isAzureMonitorTargetEnabled: true\n          isStorageSecondaryKeyInUse: false\n          retentionDays: 0\n          state: Enabled\n          storageAccountAccessKey: \"\"\n          storageAccountSubscriptionId: 00000000-1234-0000-5678-000000000000\n          storageEndpoint: https://mystorage.blob.core.windows.net\n        type: Microsoft.Sql/servers/databases/auditingSettings\n    Create_or_update_a_database_s_blob_auditing_policy_with_minimal_parameters:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          auditActionsAndGroups:\n            - SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n            - FAILED_DATABASE_AUTHENTICATION_GROUP\n            - BATCH_COMPLETED_GROUP\n          isAzureMonitorTargetEnabled: false\n          isStorageSecondaryKeyInUse: false\n          retentionDays: 0\n          state: Enabled\n          storageAccountAccessKey: \"\"\n          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000\n          storageEndpoint: https://mystorage.blob.core.windows.net\n        type: Microsoft.Sql/servers/databases/auditingSettings\n  parameters:\n    ApiVersionParameter:\n      description: The API version to use for the request.\n      in: query\n      name: api-version\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        List audit settings of a database:\n          value: 2015-05-01-preview\n        Get a database's blob auditing policy:\n          value: 2015-05-01-preview\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: 2015-05-01-preview\n        Create or update a database's blob auditing policy with all parameters:\n          value: 2015-05-01-preview\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: 2015-05-01-preview\n    BlobAuditingPolicyNameParameter:\n      description: The name of the blob auditing policy.\n      in: path\n      name: blobAuditingPolicyName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - default\n      examples:\n        Get a database's blob auditing policy:\n          value: default\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: default\n        Create or update a database's blob auditing policy with all parameters:\n          value: default\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: default\n    DatabaseNameParameter:\n      description: The name of the database.\n      in: path\n      name: databaseName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List audit settings of a database:\n          value: testdb\n        Get a database's blob auditing policy:\n          value: testdb\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: testdb\n        Create or update a database's blob auditing policy with all parameters:\n          value: testdb\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: testdb\n    ManagedInstanceNameParameter:\n      description: The name of the managed instance.\n      in: path\n      name: managedInstanceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ResourceGroupParameter:\n      description: The name of the resource group that contains the resource. You can\n        obtain this value from the Azure Resource Manager API or the portal.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List audit settings of a database:\n          value: blobauditingtest-6852\n        Get a database's blob auditing policy:\n          value: blobauditingtest-6852\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: blobauditingtest-4799\n        Create or update a database's blob auditing policy with all parameters:\n          value: blobauditingtest-4799\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: blobauditingtest-4799\n    ServerNameParameter:\n      description: The name of the server.\n      in: path\n      name: serverName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        List audit settings of a database:\n          value: blobauditingtest-2080\n        Get a database's blob auditing policy:\n          value: blobauditingtest-2080\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: blobauditingtest-6440\n        Create or update a database's blob auditing policy with all parameters:\n          value: blobauditingtest-6440\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: blobauditingtest-6440\n    SqlVirtualMachineContainerNameParameter:\n      description: The name of the SqlVirtualMachineContainer.\n      in: path\n      name: sqlVirtualMachineContainerName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SqlVirtualMachineInstanceNameParameter:\n      description: The name of the SqlVirtualMachineInstance.\n      in: path\n      name: sqlVirtualMachineInstanceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: The subscription ID that identifies an Azure subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        List audit settings of a database:\n          value: 00000000-1111-2222-3333-444444444444\n        Get a database's blob auditing policy:\n          value: 00000000-1111-2222-3333-444444444444\n        Create or update a database's azure monitor auditing policy with minimal parameters:\n          value: 00000000-1111-2222-3333-444444444444\n        Create or update a database's blob auditing policy with all parameters:\n          value: 00000000-1111-2222-3333-444444444444\n        Create or update a database's blob auditing policy with minimal parameters:\n          value: 00000000-1111-2222-3333-444444444444\n    VirtualClusterNameParameter:\n      description: The name of the virtual cluster.\n      in: path\n      name: virtualClusterName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    DatabaseBlobAuditingPolicy:\n      allOf:\n        - allOf:\n            - description: ARM resource.\n              properties:\n                id:\n                  description: Resource ID.\n                  readOnly: true\n                  type: string\n                name:\n                  description: Resource name.\n                  readOnly: true\n                  type: string\n                type:\n                  description: Resource type.\n                  readOnly: true\n                  type: string\n              type: object\n              x-ms-azure-resource: true\n          description: ARM proxy resource.\n          properties: {}\n          type: object\n      description: A database blob auditing policy.\n      properties:\n        kind:\n          description: Resource kind.\n          readOnly: true\n          type: string\n        properties:\n          $ref: \"#/components/schemas/DatabaseBlobAuditingPolicyProperties\"\n      type: object\n    DatabaseBlobAuditingPolicyListResult:\n      description: A list of database auditing settings.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/DatabaseBlobAuditingPolicy\"\n          readOnly: true\n          type: array\n      type: object\n    DatabaseBlobAuditingPolicyProperties:\n      description: Properties of a database blob auditing policy.\n      properties:\n        auditActionsAndGroups:\n          description: \"Specifies the Actions-Groups and Actions to audit.\\r\n\n            \\r\n\n            The recommended set of action groups to use is the\n            following combination - this will audit all the queries and stored\n            procedures executed against the database, as well as successful and\n            failed logins:\\r\n\n            \\r\n\n            BATCH_COMPLETED_GROUP,\\r\n\n            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\\r\n\n            FAILED_DATABASE_AUTHENTICATION_GROUP.\\r\n\n            \\r\n\n            This above combination is also the set that is\n            configured by default when enabling auditing from the Azure\n            portal.\\r\n\n            \\r\n\n            The supported action groups to audit are (note: choose\n            only specific groups that cover your auditing needs. Using\n            unnecessary groups could lead to very large quantities of audit\n            records):\\r\n\n            \\r\n\n            APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\\r\n\n            BACKUP_RESTORE_GROUP\\r\n\n            DATABASE_LOGOUT_GROUP\\r\n\n            DATABASE_OBJECT_CHANGE_GROUP\\r\n\n            DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\\r\n\n            DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\\r\n\n            DATABASE_OPERATION_GROUP\\r\n\n            DATABASE_PERMISSION_CHANGE_GROUP\\r\n\n            DATABASE_PRINCIPAL_CHANGE_GROUP\\r\n\n            DATABASE_PRINCIPAL_IMPERSONATION_GROUP\\r\n\n            DATABASE_ROLE_MEMBER_CHANGE_GROUP\\r\n\n            FAILED_DATABASE_AUTHENTICATION_GROUP\\r\n\n            SCHEMA_OBJECT_ACCESS_GROUP\\r\n\n            SCHEMA_OBJECT_CHANGE_GROUP\\r\n\n            SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\\r\n\n            SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\\r\n\n            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\\r\n\n            USER_CHANGE_PASSWORD_GROUP\\r\n\n            BATCH_STARTED_GROUP\\r\n\n            BATCH_COMPLETED_GROUP\\r\n\n            \\r\n\n            These are groups that cover all sql statements and\n            stored procedures executed against the database, and should not be\n            used in combination with other groups as this will result in\n            duplicate audit logs.\\r\n\n            \\r\n\n            For more information, see [Database-Level Audit Action\n            Groups](https://docs.microsoft.com/en-us/sql/relational-databases/s\\\n            ecurity/auditing/sql-server-audit-action-groups-and-actions#databas\\\n            e-level-audit-action-groups).\\r\n\n            \\r\n\n            For Database auditing policy, specific Actions can also\n            be specified (note that Actions cannot be specified for Server\n            auditing policy). The supported actions to audit are:\\r\n\n            SELECT\\r\n\n            UPDATE\\r\n\n            INSERT\\r\n\n            DELETE\\r\n\n            EXECUTE\\r\n\n            RECEIVE\\r\n\n            REFERENCES\\r\n\n            \\r\n\n            The general form for defining an action to be audited\n            is:\\r\n\n            {action} ON {object} BY {principal}\\r\n\n            \\r\n\n            Note that \u003cobject\u003e in the above format can refer to an\n            object like a table, view, or stored procedure, or an entire\n            database or schema. For the latter cases, the forms\n            DATABASE::{db_name} and SCHEMA::{schema_name} are used,\n            respectively.\\r\n\n            \\r\n\n            For example:\\r\n\n            SELECT on dbo.myTable by public\\r\n\n            SELECT on DATABASE::myDatabase by public\\r\n\n            SELECT on SCHEMA::mySchema by public\\r\n\n            \\r\n\n            For more information, see [Database-Level Audit\n            Actions](https://docs.microsoft.com/en-us/sql/relational-databases/\\\n            security/auditing/sql-server-audit-action-groups-and-actions#databa\\\n            se-level-audit-actions)\"\n          items:\n            type: string\n          type: array\n        isAzureMonitorTargetEnabled:\n          description: \"Specifies whether audit events are sent to Azure Monitor. \\r\n\n            In order to send the events to Azure Monitor, specify\n            'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\\r\n\n            \\r\n\n            When using REST API to configure auditing, Diagnostic\n            Settings with 'SQLSecurityAuditEvents' diagnostic logs category on\n            the database should be also created.\\r\n\n            Note that for server level audit you should use the\n            'master' database as {databaseName}.\\r\n\n            \\r\n\n            Diagnostic Settings URI format:\\r\n\n            PUT\n            https://management.azure.com/subscriptions/{subscriptionId}/resourc\\\n            eGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName\\\n            }/databases/{databaseName}/providers/microsoft.insights/diagnosticS\\\n            ettings/{settingsName}?api-version=2017-05-01-preview\\r\n\n            \\r\n\n            For more information, see [Diagnostic Settings REST\n            API](https://go.microsoft.com/fwlink/?linkid=2033207)\\r\n\n            or [Diagnostic Settings\n            PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\\r\\n\"\n          type: boolean\n        isStorageSecondaryKeyInUse:\n          description: Specifies whether storageAccountAccessKey value is the storage's\n            secondary key.\n          type: boolean\n        retentionDays:\n          description: Specifies the number of days to keep in the audit logs in the\n            storage account.\n          format: int32\n          type: integer\n        state:\n          description: Specifies the state of the policy. If state is Enabled,\n            storageEndpoint or isAzureMonitorTargetEnabled are required.\n          enum:\n            - Enabled\n            - Disabled\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: BlobAuditingPolicyState\n        storageAccountAccessKey:\n          description: Specifies the identifier key of the auditing storage account. If\n            state is Enabled and storageEndpoint is specified,\n            storageAccountAccessKey is required.\n          type: string\n          x-ms-mutability:\n            - create\n            - update\n        storageAccountSubscriptionId:\n          description: Specifies the blob storage subscription Id.\n          format: uuid\n          type: string\n        storageEndpoint:\n          description: Specifies the blob storage endpoint (e.g.\n            https://MyAccount.blob.core.windows.net). If state is Enabled,\n            storageEndpoint is required.\n          type: string\n      required:\n        - state\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-sql-blobAuditing-2015-05-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-sql-blobAuditing-2015-05-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}