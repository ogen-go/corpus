{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/passbase/passbase-go"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "api/swagger.yaml",
			"byteSize": 32234,
			"content": "openapi: 3.0.0\ninfo:\n  title: Verification API\n  description: \"# Introduction\\n\\n\u003cspan class=\\\"subtext\\\"\u003e\\nWelcome to the Passbase\\\n    \\ Verifications API docs. This documentation will\\nhelp you understand our models\\\n    \\ and the Verification API with its endpoints.\\nBased on this you can build your\\\n    \\ own system (i.e. verification) and hook it\\nup to Passbase.\\n\\nIn case of feedback\\\n    \\ or questions you can reach us under this email address: [developer@passbase.com](mailto:developer@passbase.com).\\n\\\n    \u003c/span\u003e\\n\\nA User submits a video selfie and valid identifying __Resources__ during\\\n    \\ a\\n__Verification__ guided by the Passbase client-side integration. Once all\\n\\\n    the necessary __Resources__ are submitted, __Data points__ are extracted,\\ndigitized,\\\n    \\ and authenticated. These Data points then becomes part of the\\nUser's __Identity__.\\\n    \\ The User then consents to share __Resources__ and/or\\n__Data points__ from their\\\n    \\ Identity with you. This information is passed\\nto you and can be used to make\\\n    \\ decisions about a User (e.g. activate account).\\nThis table below explains our\\\n    \\ terminology further.\\n\\n| Term                                    | Description\\\n    \\ |\\n|-----------------------------------------|-------------|\\n| [Identity](#tag/identity_model)\\\n    \\         | A set of Data points and Resources related to and owned by one single\\\n    \\ User. This data can be accessed by you through a Verification. |\\n| Data points\\\n    \\                             | Any data about a User extracted from a Resource\\\n    \\ (E.g. Passport Number, or Age). |\\n| [Resource](#tag/resource_model)       \\\n    \\  | A source document used to generate the Data points for a User (E.g. Passport).\\\n    \\ |\\n| [User](#tag/user_model)                 | The owner of an email address\\\n    \\ associated with an Identity. |\\n| Verification                            |\\\n    \\ A transaction through which a User consents to share Data points with you. If\\\n    \\ the Data points you request are not already available in the User's Identity,\\\n    \\ the Passbase client will ask the User to submit the necessary Resource required\\\n    \\ to extract them. |\\n| Re-authentication (login)               | A transaction\\\n    \\ through which a User can certify the ownership of Personal data previously shared\\\n    \\ through an Authentication. |\\n\\n\\n# Authentication\\n\\n\u003cspan class=\\\"subtext\\\"\\\n    \u003e\\nThere are two forms of authentication for the API:\\n\u003cbr/\u003e\u0026bull; API Key\\n\u003cbr/\u003e\u0026bull;\\\n    \\ Bearer JWT Token\\n\\n\u003c/span\u003e\\n\"\n  version: 1.0.0\n  x-logo:\n    url: ./img/logo.png\n    backgroundColor: '#F5F7F9'\n    altText: Passbase Docs logo\nservers:\n- url: https://api.passbase.com/verification/v2\nsecurity:\n- SecretApiKey: []\ntags:\n- name: Identity\n  description: \"\u003cspan class=\\\"subtext\\\"\u003e\\nWe distinguish between a user and his digital\\\n    \\ identity.\\n\\nA user has to submit resources, like documents about himself, in\\\n    \\ order to create a valid\\ndigital identity. This information can be used to prove\\\n    \\ if the user is who he claims to be\\nand even uncover potential bad actors.\\n\\\n    \\nA verification is in the `\\\"processing\\\"` state when the Passbase Team is working\\\n    \\ on it and in the\\n`\\\"pending\\\"` one when it's the customers turn to accept or\\\n    \\ reject the verification.\\n\\nOnce the user was verified he can use his saved\\\n    \\ identity for gaining\\naccess to the provided services of a customer.\\n\u003c/span\u003e\\n\"\n- name: User\n- name: Project\n  description: |\n    \u003cspan class=\"subtext\"\u003e\n    Customers are able to create different projects in which they\n    define specifics on how the verification flow will look like and\n    also what documents are required for the verification.\n    \u003c/span\u003e\n- name: datapoints_model\n  description: |\n    \u003cSchemaDefinition schemaRef=\"#/components/schemas/DataPoints\" /\u003e\n  x-displayName: Data Points\n- name: resource_model\n  description: |\n    \u003cSchemaDefinition schemaRef=\"#/components/schemas/Resource\" /\u003e\n  x-displayName: Resource\n- name: identity_model\n  description: |\n    \u003cSchemaDefinition schemaRef=\"#/components/schemas/Identity\" /\u003e\n  x-displayName: Identity\n- name: user_model\n  description: |\n    \u003cSchemaDefinition schemaRef=\"#/components/schemas/User\" /\u003e\n  x-displayName: User\n- name: project_settings_model\n  description: |\n    \u003cSchemaDefinition schemaRef=\"#/components/schemas/ProjectSettings\" /\u003e\n  x-displayName: Project Settings\npaths:\n  /identities:\n    get:\n      tags:\n      - Identity\n      summary: List identities\n      description: List all the identities retrievable by the provided API Secret\n        Key.\n      operationId: listIdentities\n      parameters:\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n        example: 100\n      - name: cursor\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: aWQ6NDA3MQ%3D%3D\n      responses:\n        \"200\":\n          description: List of project identities\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedIdentities'\n        \"401\":\n          description: your api_key is invalid\n  /identities/{id}:\n    get:\n      tags:\n      - Identity\n      summary: Get identity\n      description: Retrieve an identity by providing the identity ID.\n      operationId: getIdentityById\n      parameters:\n      - name: id\n        in: path\n        description: Unique ID of the identity to return\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          format: uuid\n      responses:\n        \"200\":\n          description: identity data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Identity'\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: your api_key is invalid\n        \"404\":\n          description: identity not found with the given ID\n  /identity/{id}/resources:\n    get:\n      tags:\n      - Identity\n      summary: List resources\n      description: List resources attached to an identity by providing the identity\n        ID.\n      operationId: listIdentityResources\n      parameters:\n      - name: id\n        in: path\n        description: Identity id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: limit\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: integer\n        example: 100\n      - name: cursor\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n        example: aWQ6NDA3MQ%3D%3D\n      responses:\n        \"200\":\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResources'\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: your api_key is invalid\n        \"404\":\n          description: identity not found with the given ID\n  /identity/{id}/resources/{resource_id}:\n    get:\n      tags:\n      - Identity\n      summary: Get resource\n      description: |\n        Get a resource attached to an identity by providing the resource ID.\n      operationId: getIdentityResourceById\n      parameters:\n      - name: id\n        in: path\n        description: Identity id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: resource_id\n        in: path\n        description: Resource id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Resource'\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: your api_key is invalid\n        \"404\":\n          description: resource not found for the given resource ID\n  /identity/{id}/resources/{resource_id}/resource_files/{resource_file_id}:\n    get:\n      tags:\n      - Identity\n      summary: Get resource file\n      description: |\n        Get a raw resource file attached to an identity by providing the resource ID\n        and the resource file ID. This is a protected route and you'll need a\n        specific government authorization to access it.\n      operationId: getIdentityResourceFileById\n      parameters:\n      - name: id\n        in: path\n        description: Identity id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: resource_id\n        in: path\n        description: Resource id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: resource_file_id\n        in: path\n        description: Resource file id\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceFile'\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: your api_key is invalid\n        \"404\":\n          description: resource not found for the given resource file ID\n  /settings:\n    get:\n      tags:\n      - Project\n      summary: Get project settings\n      description: |\n        Get project settings\n      operationId: getSettings\n      responses:\n        \"200\":\n          description: Project settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectSettings'\n        \"400\":\n          description: bad input parameter\n        \"401\":\n          description: your api_key is invalid\ncomponents:\n  schemas:\n    ResourceInput:\n      type: object\n      properties:\n        type:\n          $ref: '#/components/schemas/ResourceType'\n        country:\n          type: string\n          description: 2-letter code of the country\n          example: DE\n        resource_files:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceFilesInput'\n        resourceData:\n          type: object\n        resourceRawData:\n          type: object\n          nullable: true\n    Resource:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID representing a resource\n          format: uuid\n        status:\n          type: string\n          description: Current state of the resource in Passbase's systems\n          enum:\n          - created\n          - processing\n          - processed\n        created:\n          type: integer\n          description: Unix-timestamp of when the resource was created\n          format: int64\n          example: 1600250430\n        updated:\n          type: integer\n          description: Unix-timestamp of when the resource was updated\n          format: int64\n          example: 1600250430\n        type:\n          $ref: '#/components/schemas/ResourceType'\n        resource_files:\n          $ref: '#/components/schemas/ResourceFiles'\n      example:\n        created: 1600250430\n        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        type: NATIONAL_ID_CARD\n        updated: 1600250430\n        resource_files:\n        - created: 1600250430\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          page: 0\n          type: face_video\n          updated: 1600250430\n        - created: 1600250430\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          page: 0\n          type: face_video\n          updated: 1600250430\n        status: created\n    ResourceFilesInput:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceFilesInput_inner'\n      x-schema-name: ResourceFilesInput\n    ResourceFiles:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceFiles_inner'\n      x-schema-name: ResourceFiles\n    ResourceFile:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID representing a resource file\n          format: uuid\n        created:\n          type: integer\n          description: Unix-timestamp of when the resource was created\n          format: int64\n          example: 1600250430\n        updated:\n          type: integer\n          description: Unix-timestamp of when the resource was updated\n          format: int64\n          example: 1600250430\n        file:\n          type: string\n          description: \"Raw bytes: the actual file\"\n          format: binary\n      example:\n        file: \"\"\n        created: 1600250430\n        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        updated: 1600250430\n    Identity:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the identity\n          example: 00000000-0000-0000-0000-000000000000\n        status:\n          type: string\n          description: Current state of the identity in Passbase's systems\n          enum:\n          - created\n          - processing\n          - pending\n          - approved\n          - declined\n        owner:\n          $ref: '#/components/schemas/IdentityOwner'\n        score:\n          type: number\n          description: \"Float between 0 and 1 representing our confidence that this\\\n            \\ identity is valid. 0 meaning we couldn't verify any of the information\\\n            \\ provided with accuracy, and 1 absolute confidence.\"\n          format: double\n          example: 0.01000000000000012\n        created:\n          type: integer\n          description: Unix-timestamp of when the identity was created\n          format: int64\n          example: 1600250430\n        updated:\n          type: integer\n          description: Unix-timestamp of when the identity was updated\n          format: int64\n          example: 1600250430\n        resources:\n          type: array\n          description: resources attached to a verification\n          items:\n            $ref: '#/components/schemas/IdentityResource'\n        metadata:\n          type: object\n          description: Customer defined arbitrary payload initially passed through\n            the client-sdk\n          example:\n            foo: bar\n        watchlist:\n          $ref: '#/components/schemas/WatchlistResponse'\n      example:\n        owner:\n          last_name: Doe\n          first_name: John\n          email: john.doe@example.com\n        score: 0.01000000000000012\n        metadata:\n          foo: bar\n        created: 1600250430\n        resources:\n        - datapoints:\n            date_of_birth: 1970-01-01\n            document_number: \"010101010101\"\n            first_names: Jessie\n            last_name: Smith\n          type: NATIONAL_ID_CARD\n        - datapoints:\n            date_of_birth: 1970-01-01\n            document_number: \"010101010101\"\n            first_names: Jessie\n            last_name: Smith\n          type: NATIONAL_ID_CARD\n        id: 00000000-0000-0000-0000-000000000000\n        updated: 1600250430\n        watchlist:\n          listings:\n            finanstilsynet:\n              url: https://www.finanstilsynet.dk\n              name: Denmark Finanstilsynet Foreign Regulators Warnings\n              aml_types:\n              - warning\n              listing_started_utc: 2020-02-17T00:00:00Z\n            \"...\": {}\n          types:\n          - adverse-media\n          - '...'\n          sources:\n          - african-development-bank\n          - '...'\n          media:\n          - url: http://www.macnn.com/searchcatnext/tag/Puccini/2\n            title: (no title)\n          clean: false\n        status: created\n    IdentityOwner:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Email of the user the identity belongs to\n          example: john.doe@example.com\n        first_name:\n          type: string\n          description: First name of the user the identity belongs to\n          example: John\n        last_name:\n          type: string\n          description: Last name of the user the identity belongs to\n          example: Doe\n      example:\n        last_name: Doe\n        first_name: John\n        email: john.doe@example.com\n    IdentityResource:\n      type: object\n      properties:\n        datapoints:\n          $ref: '#/components/schemas/DataPoints'\n        type:\n          $ref: '#/components/schemas/ResourceType'\n      example:\n        datapoints:\n          date_of_birth: 1970-01-01\n          document_number: \"010101010101\"\n          first_names: Jessie\n          last_name: Smith\n        type: NATIONAL_ID_CARD\n    ProjectSettings:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the project\n          example: 00000000-0000-0000-0000-000000000000\n        slug:\n          type: string\n          description: Slugs are meant to be a way to verify people just with the\n            link\n          example: passbase-demo\n        environment:\n          type: string\n          example: sandbox\n          enum:\n          - sandbox\n          - production\n        organization:\n          type: string\n          description: Name of the organization that owns this project\n          example: Passbase Inc.\n        customizations:\n          $ref: '#/components/schemas/ProjectSettings_customizations'\n        verification_steps:\n          type: array\n          description: |\n            List of the steps through which the user must go through to\n            complete their verification\n          example:\n          - step: email\n            resource_types:\n            - EMAIL\n          - step: liveness_check\n            resource_types:\n            - FACE_VIDEO\n          - step: country\n            resource_types:\n            - de\n            - us\n            - gb\n            - ca\n          - step: identity_document_check\n            resource_types:\n            - PASSPORT\n            - DRIVERS_LICENSE\n          - step: insurance_card_scan\n            resource_types:\n            - HEALTH_INSURANCE_CARD\n          items:\n            $ref: '#/components/schemas/ProjectSettings_verification_steps'\n      example:\n        environment: sandbox\n        organization: Passbase Inc.\n        id: 00000000-0000-0000-0000-000000000000\n        slug: passbase-demo\n        customizations:\n          accent_color: '#FAFAFA'\n          button_color: '#1E1E1E'\n          font_family: Arial\n        verification_steps:\n        - step: email\n          resource_types:\n          - EMAIL\n        - step: liveness_check\n          resource_types:\n          - FACE_VIDEO\n        - step: country\n          resource_types:\n          - de\n          - us\n          - gb\n          - ca\n        - step: identity_document_check\n          resource_types:\n          - PASSPORT\n          - DRIVERS_LICENSE\n        - step: insurance_card_scan\n          resource_types:\n          - HEALTH_INSURANCE_CARD\n    User:\n      type: object\n      properties:\n        email:\n          type: string\n          description: Email with which the user was created\n          example: jessie@example.com\n        identity_access_token:\n          type: string\n          description: |\n            Access token in the shape of a JsonWebToken used as a Bearer token\n            when submitting identity data\n          format: jwt\n          example: eyJhbGciOiJIUzI1NiIsI...\n        required_steps:\n          type: array\n          description: |\n            List of the steps through which the user must go through to\n            complete their verification\n          example:\n          - step: email\n            resource_types:\n            - EMAIL\n          - step: liveness_check\n            resource_types:\n            - FACE_VIDEO\n          - step: country\n            resource_types:\n            - de\n            - us\n            - vn\n            - zn\n          - step: identity_document_check\n            resource_types:\n            - PASSPORT\n            - DRIVERS_LICENSE\n          - step: insurance_card_scan\n            resource_types:\n            - HEALTH_INSURANCE_CARD\n          items:\n            $ref: '#/components/schemas/ProjectSettings_verification_steps'\n    ResourceType:\n      type: string\n      description: All resource types that passbase supports\n      example: NATIONAL_ID_CARD\n    WatchlistResponse:\n      type: object\n      properties:\n        clean:\n          type: boolean\n          description: Indicates whether the authentication watchlist check is clean\n            or not\n          example: false\n        listings:\n          type: object\n          description: Watchlist check findings\n          example:\n            finanstilsynet:\n              url: https://www.finanstilsynet.dk\n              name: Denmark Finanstilsynet Foreign Regulators Warnings\n              aml_types:\n              - warning\n              listing_started_utc: 2020-02-17T00:00:00Z\n            \"...\": {}\n        media:\n          type: array\n          description: \"List of media entries, with the date, title, and url parameters\"\n          example:\n          - url: http://www.macnn.com/searchcatnext/tag/Puccini/2\n            title: (no title)\n          items:\n            type: object\n        sources:\n          type: array\n          description: Array of listing sources (eg. sanction lists)\n          example:\n          - african-development-bank\n          - '...'\n          items:\n            type: string\n        types:\n          type: array\n          description: \"What kind of alert or warning is associated with the entity\\\n            \\ (eg. sanction, pep, warning)\"\n          example:\n          - adverse-media\n          - '...'\n          items:\n            type: string\n      description: \"Monitor politically exposed persons (PEPs), and track risky behavior\\n\\\n        with adverse media and watchlist checks for a comprehensive customer\\ndue\\\n        \\ diligence and Anti Money Laundering (AML) and Know Your Customer\\n(KYC)\\\n        \\ program.\\n\"\n      example:\n        listings:\n          finanstilsynet:\n            url: https://www.finanstilsynet.dk\n            name: Denmark Finanstilsynet Foreign Regulators Warnings\n            aml_types:\n            - warning\n            listing_started_utc: 2020-02-17T00:00:00Z\n          \"...\": {}\n        types:\n        - adverse-media\n        - '...'\n        sources:\n        - african-development-bank\n        - '...'\n        media:\n        - url: http://www.macnn.com/searchcatnext/tag/Puccini/2\n          title: (no title)\n        clean: false\n    Cursor:\n      type: object\n      properties:\n        next:\n          type: string\n          description: opaque token to pass back to the API to get the next batch\n            of data\n          nullable: true\n          example: aWQ6NDA3MQ==\n      description: |\n        object containing a cursor representing whether the data\n        is fully loaded or not\n      nullable: false\n      example:\n        next: aWQ6NDA3MQ==\n    PaginatedIdentities:\n      type: object\n      properties:\n        cursor:\n          $ref: '#/components/schemas/Cursor'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Identity'\n      example:\n        cursor:\n          next: aWQ6NDA3MQ==\n        data:\n        - owner:\n            last_name: Doe\n            first_name: John\n            email: john.doe@example.com\n          score: 0.01000000000000012\n          metadata:\n            foo: bar\n          created: 1600250430\n          resources:\n          - datapoints:\n              date_of_birth: 1970-01-01\n              document_number: \"010101010101\"\n              first_names: Jessie\n              last_name: Smith\n            type: NATIONAL_ID_CARD\n          - datapoints:\n              date_of_birth: 1970-01-01\n              document_number: \"010101010101\"\n              first_names: Jessie\n              last_name: Smith\n            type: NATIONAL_ID_CARD\n          id: 00000000-0000-0000-0000-000000000000\n          updated: 1600250430\n          watchlist:\n            listings:\n              finanstilsynet:\n                url: https://www.finanstilsynet.dk\n                name: Denmark Finanstilsynet Foreign Regulators Warnings\n                aml_types:\n                - warning\n                listing_started_utc: 2020-02-17T00:00:00Z\n              \"...\": {}\n            types:\n            - adverse-media\n            - '...'\n            sources:\n            - african-development-bank\n            - '...'\n            media:\n            - url: http://www.macnn.com/searchcatnext/tag/Puccini/2\n              title: (no title)\n            clean: false\n          status: created\n        - owner:\n            last_name: Doe\n            first_name: John\n            email: john.doe@example.com\n          score: 0.01000000000000012\n          metadata:\n            foo: bar\n          created: 1600250430\n          resources:\n          - datapoints:\n              date_of_birth: 1970-01-01\n              document_number: \"010101010101\"\n              first_names: Jessie\n              last_name: Smith\n            type: NATIONAL_ID_CARD\n          - datapoints:\n              date_of_birth: 1970-01-01\n              document_number: \"010101010101\"\n              first_names: Jessie\n              last_name: Smith\n            type: NATIONAL_ID_CARD\n          id: 00000000-0000-0000-0000-000000000000\n          updated: 1600250430\n          watchlist:\n            listings:\n              finanstilsynet:\n                url: https://www.finanstilsynet.dk\n                name: Denmark Finanstilsynet Foreign Regulators Warnings\n                aml_types:\n                - warning\n                listing_started_utc: 2020-02-17T00:00:00Z\n              \"...\": {}\n            types:\n            - adverse-media\n            - '...'\n            sources:\n            - african-development-bank\n            - '...'\n            media:\n            - url: http://www.macnn.com/searchcatnext/tag/Puccini/2\n              title: (no title)\n            clean: false\n          status: created\n    PaginatedResources:\n      type: object\n      properties:\n        cursor:\n          $ref: '#/components/schemas/Cursor'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Resource'\n      example:\n        cursor:\n          next: aWQ6NDA3MQ==\n        data:\n        - created: 1600250430\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          type: NATIONAL_ID_CARD\n          updated: 1600250430\n          resource_files:\n          - created: 1600250430\n            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n            page: 0\n            type: face_video\n            updated: 1600250430\n          - created: 1600250430\n            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n            page: 0\n            type: face_video\n            updated: 1600250430\n          status: created\n        - created: 1600250430\n          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n          type: NATIONAL_ID_CARD\n          updated: 1600250430\n          resource_files:\n          - created: 1600250430\n            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n            page: 0\n            type: face_video\n            updated: 1600250430\n          - created: 1600250430\n            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n            page: 0\n            type: face_video\n            updated: 1600250430\n          status: created\n    DataPoints:\n      type: object\n      description: |\n        Dynamic key/value hashmap of the data extracted from the resource.\n      example:\n        date_of_birth: 1970-01-01\n        document_number: \"010101010101\"\n        first_names: Jessie\n        last_name: Smith\n      x-description: test description\n    ResourceFilesInput_inner:\n      type: object\n      properties:\n        type:\n          type: string\n        file:\n          type: string\n          format: binary\n    ResourceFiles_inner:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID representing a resource file\n          format: uuid\n        type:\n          type: string\n          enum:\n          - face_video\n          - document_image\n        page:\n          type: integer\n          description: \"Page number of the document. Generally 1 would represent the\\n\\\n            front of a document, and 2 might represent the back of the same\\ndocument.\\n\"\n        created:\n          type: integer\n          description: Unix-timestamp of when the resource was created\n          format: int64\n          example: 1600250430\n        updated:\n          type: integer\n          description: Unix-timestamp of when the resource was updated\n          format: int64\n          example: 1600250430\n      example:\n        created: 1600250430\n        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91\n        page: 0\n        type: face_video\n        updated: 1600250430\n    ProjectSettings_customizations:\n      type: object\n      properties:\n        button_color:\n          type: string\n          description: \\\"Verify Me\\\" button background color\n          example: '#1E1E1E'\n        accent_color:\n          type: string\n          description: \"Accent color during the verification flow (button, breadcrumb,\\\n            \\ etc…)\"\n          example: '#FAFAFA'\n        font_family:\n          type: string\n          description: Font used in the verification flow\n          example: Arial\n      description: |\n        Object representing the UI customization done in app.passbase.com\n        to change the button color and other UI details\n      example:\n        accent_color: '#FAFAFA'\n        button_color: '#1E1E1E'\n        font_family: Arial\n    ProjectSettings_verification_steps:\n      type: object\n      properties:\n        step:\n          type: string\n          example: liveness_check\n        resource_types:\n          type: array\n          example:\n          - DRIVERS_LICENSE\n          - NATIONAL_ID_CARD\n          items:\n            $ref: '#/components/schemas/ResourceType'\n  securitySchemes:\n    IdentityAccessToken:\n      type: http\n      description: \"\u003cspan class=\\\"subtext\\\"\u003e\\n  Access token in the shape of a JsonWebToken\\\n        \\ (JWT), to be used as a Bearer token.\\n  \u003cbr/\u003e\\n  JWT is an open, industry-wide\\\n        \\ standard that defines a compact and self-contained\\n  way for securely transmitting\\\n        \\ information between parties as a JSON object.\\n  This information can be\\\n        \\ verified and trusted because it is digitally signed.\\n  \u003cbr/\u003e\u003cbr/\u003e\\n  In\\\n        \\ our systems, it represents the user's agreement to share their data with\\\n        \\ a\\n  third-party.\\n\u003c/span\u003e\\n\"\n      scheme: bearer\n      bearerFormat: JWT\n    SecretApiKey:\n      type: apiKey\n      description: \"\u003cspan class=\\\"subtext\\\"\u003e\\n  Each project has one Publishable API\\\n        \\ access key (see below), and one\\n  Secret API access key.\\n  The secret\\\n        \\ API access key, used for server-to-server communication,\\n  is used to fetch\\\n        \\ sensitive data that you already have access to.\\n\\n  ⚠️ \u003cb\u003eBe very careful\\\n        \\ with the secret API key.\u003c/b\u003e\\n  Never share it or send it through unencrypted\\\n        \\ communication methods!\\n\u003c/span\u003e\\n\"\n      name: X-API-KEY\n      in: header\n    PublishableApiKey:\n      type: apiKey\n      description: \"\u003cspan class=\\\"subtext\\\"\u003e\\n  Publishable API access key is used\\\n        \\ by the verification flow (Passbase\\n  button), to verify and re-authenticate\\\n        \\ users.\\n  This key can be safely be part of client bundles or artifacts\\n\\\n        \\  (eg: Javascript bundle, iOS/Android apps).\\n\u003c/span\u003e\\n\"\n      name: X-API-KEY\n      in: header\nx-tagGroups:\n- name: Endpoints\n  tags:\n  - Identity\n  - Project\n- name: Models\n  tags:\n  - resource_model\n  - identity_model\n  - user_model\n  - project_settings_model\n",
			"canonicalURL": "/github.com/passbase/passbase-go@199ef147208a114489be07c945d86419347a1185/-/blob/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/passbase/passbase-go/blob/199ef147208a114489be07c945d86419347a1185/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}