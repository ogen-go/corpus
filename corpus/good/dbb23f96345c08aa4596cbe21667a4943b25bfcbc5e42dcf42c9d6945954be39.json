{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/astarte-platform/astarte"
		},
		"file": {
			"name": "astarte_pairing_api.yaml",
			"size": 0,
			"path": "apps/astarte_pairing_api/priv/static/astarte_pairing_api.yaml",
			"byteSize": 21882,
			"content": "openapi: 3.0.0\nservers:\n  - url: '{base_url}/v1'\n    variables:\n      base_url:\n        default: http://localhost:4003\n        description: \u003e-\n          The base URL you're serving Astarte from. This should point to the base\n          path from which Pairing API is served. In case you are running\n          a local installation, this is likely `http://localhost:4003`. In case you have a\n          standard Astarte installation, it is most likely `https://\u003cyour host\u003e/pairing`.\ninfo:\n  description: 'Control device registration, authentication an authorization'\n  version: 1.1.0-dev\n  title: Astarte Pairing API\n  contact:\n    email: info@ispirata.com\ntags:\n  - name: agent\n    description: Device registration and credentials secret emission\n    externalDocs:\n      description: Find out more\n      url: 'https://docs.astarte-platform.org/1.0/050-pairing_mechanism.html'\n  - name: device\n    description: Device credentials emission and info\n    externalDocs:\n      description: Find out more\n      url: 'https://docs.astarte-platform.org/1.0/050-pairing_mechanism.html'\npaths:\n  '/{realm_name}/agent/devices':\n    post:\n      tags:\n        - agent\n      summary: Register a device\n      description: \u003e-\n        Register a device, obtaining its credentials secret. The registration\n        can be repeated as long as the device didn't request any credentials.\n        An optional initial introspection for the device can be passed in the\n        registration request.\n      operationId: registerDevice\n      security:\n        - JWT: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Name of the realm the device belongs to.\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: Device registered\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/DeviceRegistrationResponse'\n              examples:\n                response:\n                  value:\n                    data:\n                      credentials_secret: TTkd5OgB13X/3qU0LXU7OCxyTXz5QHM2NY1IgidtPOs=\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorResponse'\n              examples:\n                response:\n                  value:\n                    errors:\n                      hw_id:\n                        - can't be blank\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/DeviceRegistrationRequest'\n              example:\n                data:\n                  hw_id: YHjKs3SMTgqq09eD7fzm6w\n                  initial_introspection:\n                    org.astarte-platform.genericsensors.Values:\n                      major: 0\n                      minor: 1\n                    org.astarte-platform.genericsensors.AvailableSensors:\n                      major: 0\n                      minor: 1\n        description: Device parameters\n        required: true\n  '/{realm_name}/agent/devices/{device_id}':\n    delete:\n      tags:\n        - agent\n      summary: Unregister a device\n      description: \u003e-\n        Unregister a device. This makes it possible to register it again, even\n        if it already has requested its credentials. All data belonging to the\n        device will be kept as is.\n      operationId: unregisterDevice\n      security:\n        - JWT: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Name of the realm the device belongs to.\n          required: true\n          schema:\n            type: string\n        - name: device_id\n          in: path\n          description: The Device ID of the device that will be unregistered.\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: Device unregistered\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '404':\n          description: Device not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorResponse'\n              examples:\n                response:\n                  value:\n                    errors:\n                      detail: Device not found\n  '/{realm_name}/devices/{hw_id}':\n    get:\n      tags:\n        - device\n      summary: Obtain status informations for a device\n      operationId: getInfo\n      security:\n        - CredentialsSecret: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Name of the realm the device belongs to.\n          required: true\n          schema:\n            type: string\n        - name: hw_id\n          in: path\n          description: Hardware id of the device.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Info\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/InfoResponse'\n              examples:\n                response:\n                  value:\n                    data:\n                      version: 0.1.0\n                      status: confirmed\n                      protocols:\n                        astarte_mqtt_v1:\n                          broker_url: 'ssl://broker.astarte.example.com:8883'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n  '/{realm_name}/devices/{hw_id}/protocols/astarte_mqtt_v1/credentials':\n    post:\n      tags:\n        - device\n      summary: Obtain the credentials for Astarte MQTT v1 protocol\n      operationId: obtainCredentials\n      security:\n        - CredentialsSecret: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Name of the realm the device belongs to.\n          required: true\n          schema:\n            type: string\n        - name: hw_id\n          in: path\n          description: Hardware id of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: Credentials created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AstarteMQTTV1CredentialsResponse'\n              examples:\n                response:\n                  value:\n                    data:\n                      client_certificate: \u003e\n                        -----BEGIN CERTIFICATE-----\n                        MIIFfzCCA2egAwIBAgIJALsySXafOY1aMA0GCSqGSIb3DQEBCwUAMFYxCzAJBgNV\n                        BAYTAklUMRAwDgYDVQQIDAdFeGFtcGxlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRn\n                        aXRzIFB0eSBMdGQxEjAQBgNVBAMMCXRlc3QvaHdpZDAeFw0xNzEwMTgxNTE2MzBa\n                        Fw0xODEwMTgxNTE2MzBaMFYxCzAJBgNVBAYTAklUMRAwDgYDVQQIDAdFeGFtcGxl\n                        MSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMMCXRl\n                        c3QvaHdpZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKVsOtA5JoWo\n                        nOF7BASELrkbus/miu9ySu9u/DtQyrsQcUm5dYHbI0jET9CQv+mI46oNzNDkhQUJ\n                        +1d82fYgd8mkSglKE8QValmIDJzEwRTMVhsj8i8UydwAiuj0wRuW+hHZw1t3kLXL\n                        4e/CsLBejqKXAWBLxpDgYNulU5c11Dzof7+So8m/y1Kg9TMCgqF979u1jlHA19x8\n                        PVeUeAcFvrjiV+cr4XbzNCGBMH1f/bm93dBJjbOEuSVCEm4XE5XnvRT3hWSSp3eV\n                        9P1uRCNyUTkFuru/f/bkVQsvO+YU39IlNePIEozjvdiZeqXqAmei4JugLWhq/Qwy\n                        skCS/7avlOmgbGjJd8zSGAAl8/0hUH4YkJ4zcvp7rzc/Ze/E7VJuQOrxbmCpaIBo\n                        C8s3geMCu+7vzyixkgtvG6lWrX7xzMKPbAX5ciBXYMiNIB14GSlPEn6RqFmPnB0Z\n                        azUtMY8qYVSPSGo12vuWCt6grCh3cpFakWg6LnviW035iClPhup6JXs42jb1UMZv\n                        kY9eNWICJ+mOZYBEVgFqL5cTVwRis7ZDkBvcuhEOxn6OwkicQuvTWhmFNDttZM9M\n                        0YAvGzdQU6mtqH7GOHjqi5hSrZ8vthi275jL9sQv9fuEtjTM6r3zE+sFgwTbxSeq\n                        Rk2M/smGcy8NMfke63j/NFCKcAJeexkLAgMBAAGjUDBOMB0GA1UdDgQWBBTpVKpD\n                        FWDodB9WohGhL6Q3kMUITDAfBgNVHSMEGDAWgBTpVKpDFWDodB9WohGhL6Q3kMUI\n                        TDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAxlhkVPkKv2mKvXspj\n                        codSBTfIBMV+TdlwKKT+3A71k0fpS3HSvH98lLxkZLHPQuTi4/hpscITzvdfyLnG\n                        HFRrCwc3v2x8d3/Fny7MPJu+5HLRMdDXVOSQXOUcA+P1KwibXWwp6GG8kZJ+VWAW\n                        eRiOFwptBje8tdeF3YkEHS5GJ92DOyUc6As2UjCu+Psx0cB5Kevny4XFcekUs1Bd\n                        hYH1Hnr/WFZJQJz68Bp+APr36UusQRo7a4YrOwnlYszGqrZQtQNRY8XVP5pC/YhD\n                        cVtXOyU9NkCPlvxsCdTXObeQq38yxLm6gXi3cJBb1eAL0tBAXky0sLrzOHq462Cn\n                        nzvGySpFjMtO4ZTK9hOp4o9/vXx2U/AWk62yCrhDtD8mlV+ljIbw2V6rFJsFnBsX\n                        DFG3ljCR7sW+YCLtn/Fig/H07alBr3GiTjAG8vCSMAbvk/QMs1MNEj55FpXY/B6h\n                        EXK2dEY+KPwMSBSwxrrZ74BXw0TWcwTVTRpkmtZ8qLTnXYOQ5kYKJ+aDR389+Vy6\n                        d4NjjktgugxaL4tGkSMwiinZbBeG9oxtOgZOKQ/W+K1qzCb2ySH2hk5NTdbt7fQX\n                        1o2dS9VvunQFSNA8diqBSOjuyoEuR6qo1ejF0o7KW6cJWMsvqq+awKuNmqM7yG59\n                        ySj0xif2Z8U7MTfhmZs1cyDA/A==\n                        -----END CERTIFICATE-----\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorResponse'\n              examples:\n                response:\n                  value:\n                    errors:\n                      purpose:\n                        - can't be blank\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/AstarteMQTTV1CredentialsRequest'\n              example:\n                data:\n                  csr: \u003e\n                    -----BEGIN CERTIFICATE REQUEST-----\n                    MIICnTCCAYUCAQAwWDELMAkGA1UEBhMCSVQxFDASBgNVBAgMC0V4YW1wbGVMYW5k\n                    MSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEDAOBgNVBAMMB0V4\n                    YW1wbGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6B6eGPsTLsP09\n                    FzxFUKY95GaPnBU1niq1tx1vtA+r9BBnnoUn4JwNHtu5YTWMnlIJtfAs43ltLOrS\n                    Wyvcedg4e6Bh3nztqyD+4uSpzlSI54zexbztVAzzDvVlEuW0wMRgkqF7ez7OixGF\n                    BHdPgWKTxagVrYdqX/UjNm9f/Wnd3eCA9mEVwsARUlxRgLs0KPXPkqEGCxbcLSx3\n                    lJR28YE+OTJK7aLSUk3bjLml23SYhWSlmYbNghu3/2P3n4QO4s6+RAw1bMxEO0xr\n                    gvZThRcdllw+SQRY03VHzCiAAAYzKR8upy5strSbQfG9D38xHGb+A/Z6oSaJp4tR\n                    m+VknzINAgMBAAGgADANBgkqhkiG9w0BAQsFAAOCAQEALvDY6irBZJXuJ+AZ/5rL\n                    EEpWXl3f6ohdGkUE9oZFBsNQkCyejQbwYF4ujmxI7CqhZFrX6TA6KkjzDuWwqezt\n                    YcyYYBgxF8+HUO/66jseGuJiuPkeDQ5e2Kghit8PPutv9I1OVPaQkbNg6aDvaANT\n                    oB9IilYaxWM6en+RdtSg6p5dysfgOM3GbWqIjjZgU1rZsiuTOPRjxzXLc4Vq0v/A\n                    MvsV2OFBjcOPfqeTwuegl16reSy9+x79zmSfzapoji90Cc1hBQgqvPYCezEeuj+i\n                    hXQ3OSmKiyvSLJekdmgqdjsu7ks49Tm7wSUKC0QxlDh54k5Yo8uDM+4MLvOZOzL3\n                    FQ==\n                    -----END CERTIFICATE REQUEST-----\n        description: Credentials request\n        required: true\n  '/{realm_name}/devices/{hw_id}/protocols/astarte_mqtt_v1/credentials/verify':\n    post:\n      tags:\n        - device\n      summary: Verify the credentials for Astarte MQTT v1 protocol\n      operationId: verifyCredentials\n      security:\n        - CredentialsSecret: []\n      parameters:\n        - name: realm_name\n          in: path\n          description: Name of the realm the device belongs to.\n          required: true\n          schema:\n            type: string\n        - name: hw_id\n          in: path\n          description: Hardware id of the device\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Credentials verified\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: \u003e-\n                      #/components/schemas/AstarteMQTTV1VerifyCredentialsResponse\n              examples:\n                response:\n                  value:\n                    data:\n                      valid: false\n                      cause: INVALID_ISSUER\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForbiddenResponse'\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorResponse'\n              examples:\n                response:\n                  value:\n                    errors:\n                      purpose:\n                        - can't be blank\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/AstarteMQTTV1VerifyCredentialsRequest'\n              example:\n                data:\n                  client_certificate: \u003e\n                    -----BEGIN CERTIFICATE-----\n                    MIIFfzCCA2egAwIBAgIJALsySXafOY1aMA0GCSqGSIb3DQEBCwUAMFYxCzAJBgNV\n                    BAYTAklUMRAwDgYDVQQIDAdFeGFtcGxlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRn\n                    aXRzIFB0eSBMdGQxEjAQBgNVBAMMCXRlc3QvaHdpZDAeFw0xNzEwMTgxNTE2MzBa\n                    Fw0xODEwMTgxNTE2MzBaMFYxCzAJBgNVBAYTAklUMRAwDgYDVQQIDAdFeGFtcGxl\n                    MSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNVBAMMCXRl\n                    c3QvaHdpZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKVsOtA5JoWo\n                    nOF7BASELrkbus/miu9ySu9u/DtQyrsQcUm5dYHbI0jET9CQv+mI46oNzNDkhQUJ\n                    +1d82fYgd8mkSglKE8QValmIDJzEwRTMVhsj8i8UydwAiuj0wRuW+hHZw1t3kLXL\n                    4e/CsLBejqKXAWBLxpDgYNulU5c11Dzof7+So8m/y1Kg9TMCgqF979u1jlHA19x8\n                    PVeUeAcFvrjiV+cr4XbzNCGBMH1f/bm93dBJjbOEuSVCEm4XE5XnvRT3hWSSp3eV\n                    9P1uRCNyUTkFuru/f/bkVQsvO+YU39IlNePIEozjvdiZeqXqAmei4JugLWhq/Qwy\n                    skCS/7avlOmgbGjJd8zSGAAl8/0hUH4YkJ4zcvp7rzc/Ze/E7VJuQOrxbmCpaIBo\n                    C8s3geMCu+7vzyixkgtvG6lWrX7xzMKPbAX5ciBXYMiNIB14GSlPEn6RqFmPnB0Z\n                    azUtMY8qYVSPSGo12vuWCt6grCh3cpFakWg6LnviW035iClPhup6JXs42jb1UMZv\n                    kY9eNWICJ+mOZYBEVgFqL5cTVwRis7ZDkBvcuhEOxn6OwkicQuvTWhmFNDttZM9M\n                    0YAvGzdQU6mtqH7GOHjqi5hSrZ8vthi275jL9sQv9fuEtjTM6r3zE+sFgwTbxSeq\n                    Rk2M/smGcy8NMfke63j/NFCKcAJeexkLAgMBAAGjUDBOMB0GA1UdDgQWBBTpVKpD\n                    FWDodB9WohGhL6Q3kMUITDAfBgNVHSMEGDAWgBTpVKpDFWDodB9WohGhL6Q3kMUI\n                    TDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4ICAQAxlhkVPkKv2mKvXspj\n                    codSBTfIBMV+TdlwKKT+3A71k0fpS3HSvH98lLxkZLHPQuTi4/hpscITzvdfyLnG\n                    HFRrCwc3v2x8d3/Fny7MPJu+5HLRMdDXVOSQXOUcA+P1KwibXWwp6GG8kZJ+VWAW\n                    eRiOFwptBje8tdeF3YkEHS5GJ92DOyUc6As2UjCu+Psx0cB5Kevny4XFcekUs1Bd\n                    hYH1Hnr/WFZJQJz68Bp+APr36UusQRo7a4YrOwnlYszGqrZQtQNRY8XVP5pC/YhD\n                    cVtXOyU9NkCPlvxsCdTXObeQq38yxLm6gXi3cJBb1eAL0tBAXky0sLrzOHq462Cn\n                    nzvGySpFjMtO4ZTK9hOp4o9/vXx2U/AWk62yCrhDtD8mlV+ljIbw2V6rFJsFnBsX\n                    DFG3ljCR7sW+YCLtn/Fig/H07alBr3GiTjAG8vCSMAbvk/QMs1MNEj55FpXY/B6h\n                    EXK2dEY+KPwMSBSwxrrZ74BXw0TWcwTVTRpkmtZ8qLTnXYOQ5kYKJ+aDR389+Vy6\n                    d4NjjktgugxaL4tGkSMwiinZbBeG9oxtOgZOKQ/W+K1qzCb2ySH2hk5NTdbt7fQX\n                    1o2dS9VvunQFSNA8diqBSOjuyoEuR6qo1ejF0o7KW6cJWMsvqq+awKuNmqM7yG59\n                    ySj0xif2Z8U7MTfhmZs1cyDA/A==\n                    -----END CERTIFICATE-----\n        description: Credentials verification request\n        required: true\ncomponents:\n  securitySchemes:\n    JWT:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: \u003e\n        For accessing the agent API a valid JWT token must be passed in all the\n        queries in the 'Authorization' header.\n\n        The following syntax must be used in the 'Authorization' header :\n          Bearer xxxxxx.yyyyyyy.zzzzzz\n    CredentialsSecret:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: \u003e\n        For accessing the device API a valid Credentials Secret must be passed\n        in all the queries in the 'Authorization' header\n\n        The following syntax must be used in the 'Authorization' header :\n          Bearer xxxxxxxxxxxxxxxxxxxxx\n  schemas:\n    DeviceRegistrationRequest:\n      type: object\n      required:\n        - hw_id\n      properties:\n        hw_id:\n          type: string\n        initial_introspection:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/IntrospectionEntry'\n          description: \u003e-\n            An optional object specifying the initial introspection for the device. The keys\n            of the object are the interface names, while the values are objects with the \"major\"\n            and \"minor\" properties, specifying the major and minor version of the interface\n            that is going to be supported by the device.\n          example:\n            org.astarte-platform.genericsensors.Values:\n              major: 0\n              minor: 1\n            org.astarte-platform.genericsensors.AvailableSensors:\n              major: 0\n              minor: 1\n    IntrospectionEntry:\n      type: object\n      required:\n        - major\n        - minor\n      properties:\n        major:\n          type: integer\n          description: The major version of the interface\n        minor:\n          type: integer\n          description: The minor version of the interface\n    DeviceRegistrationResponse:\n      type: object\n      properties:\n        credentials_secret:\n          type: string\n    InfoResponse:\n      type: object\n      properties:\n        version:\n          type: string\n        status:\n          type: string\n        protocols:\n          type: object\n    CredentialsObject:\n      type: object\n    AstarteMQTTV1CredentialsRequest:\n      type: object\n      properties:\n        csr:\n          type: string\n    AstarteMQTTV1CredentialsResponse:\n      type: object\n      properties:\n        client_crt:\n          type: string\n    AstarteMQTTV1VerifyCredentialsRequest:\n      type: object\n      properties:\n        purpose:\n          type: string\n        credentials:\n          $ref: '#/components/schemas/CredentialsObject'\n    AstarteMQTTV1VerifyCredentialsResponse:\n      type: object\n      properties:\n        valid:\n          type: boolean\n          description: 'true if the credentials are valid, false otherwise'\n        timestamp:\n          type: integer\n          description: the timestamp of the credentials verification\n        until:\n          type: integer\n          description: \u003e-\n            if the certificate is valid, the timestamp after which it will be\n            invalid\n        cause:\n          type: string\n          description: the reason the certificate is invalid\n        details:\n          type: string\n          description: additional details on the verification\n    ForbiddenResponse:\n      description: Forbidden response\n      type: object\n      properties:\n        errors:\n          type: object\n          properties:\n            detail:\n              type: string\n      example:\n        errors:\n          detail: Forbidden\n    GenericErrorResponse:\n      type: object\n      properties:\n        errors:\n          type: object\n    UnauthorizedResponse:\n      description: Unauthorized response\n      properties:\n        errors:\n          type: object\n          properties:\n            detail:\n              type: string\n      example:\n        errors:\n          detail: Unauthorized\n",
			"canonicalURL": "/github.com/astarte-platform/astarte@ffad806921d493a4cf4eb7d3105acf423c28ac9b/-/blob/apps/astarte_pairing_api/priv/static/astarte_pairing_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/astarte-platform/astarte/blob/ffad806921d493a4cf4eb7d3105acf423c28ac9b/apps/astarte_pairing_api/priv/static/astarte_pairing_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}