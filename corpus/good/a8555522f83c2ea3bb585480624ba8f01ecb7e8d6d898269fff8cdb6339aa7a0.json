{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RadarCOVID/radar-covid-backend-dp3t-server"
		},
		"file": {
			"name": "sdk.yaml",
			"size": 0,
			"path": "documentation/yaml/sdk.yaml",
			"byteSize": 8229,
			"content": "openapi: 3.0.0\nservers:\n- url: https://demo.dpppt.org\n  description: ''\ninfo:\n  version: 1.0-gapple\n  description: DP3T API\n  title: DP3T API\npaths:\n  /v1/gaen/:\n    get:\n      summary: hello\n      description: Hello return\n      responses:\n        '200':\n          description: server live\n          content:\n            application/json:\n              schema:\n                type: string\n  /v1/gaen/exposed:\n    post:\n      summary: addExposed\n      description: Send exposed keys to server - includes a fix for the fact that\n        GAEN doesn't give access to the current day's exposed key\n      responses:\n        '200':\n          description: The exposed keys have been stored in the database\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Invalid base64 encoding in GaenRequest\n        '403':\n          description: Authentication failed\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/org.dpppt.backend.sdk.model.gaen.GaenRequest'\n        description: The GaenRequest contains the SecretKey from the guessed infection\n          date, the infection date itself, and some authentication data to verify\n          the test result\n      parameters:\n      - name: User-Agent\n        in: header\n        description: App Identifier (PackageName/BundleIdentifier) + App-Version +\n          OS (Android/iOS) + OS-Version\n        example: ch.ubique.android.starsdk;1.0;iOS;13.3\n        required: true\n        schema:\n          type: string\n  /v1/gaen/exposednextday:\n    post:\n      summary: addExposedSecond\n      description: Allows the client to send the last exposed key of the infection\n        to the backend server. The JWT must come from a previous call to /exposed\n      responses:\n        '200':\n          description: The exposed key has been stored in the backend\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: '- Ivnalid base64 encoded Temporary Exposure Key- TEK-date\n            does not match delayedKeyDAte claim in Jwt'\n        '403':\n          description: No delayedKeyDate claim in authentication\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/org.dpppt.backend.sdk.model.gaen.GaenSecondDay'\n        description: The last exposed key of the user\n      parameters:\n      - name: User-Agent\n        in: header\n        description: App Identifier (PackageName/BundleIdentifier) + App-Version +\n          OS (Android/iOS) + OS-Version\n        example: ch.ubique.android.starsdk;1.0;iOS;13.3\n        required: true\n        schema:\n          type: string\n  /v1/gaen/exposed/{keyDate}:\n    get:\n      summary: getExposedKeys\n      description: Request the exposed key from a given date\n      responses:\n        '200':\n          description: zipped export.bin and export.sig of all keys in that interval\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        '404':\n          description: '- invalid starting key date, doesn''t point to midnight UTC-\n            _publishedAfter_ is not at the beginning of a batch release time, currently\n            2h'\n      parameters:\n      - name: keyDate\n        in: path\n        description: Requested date for Exposed Keys retrieval, in milliseconds since\n          Unix epoch (1970-01-01). It must indicate the beginning of a TEKRollingPeriod,\n          currently midnight UTC.\n        example: '1593043200000'\n        required: true\n        schema:\n          type: integer\n          format: long\n      - name: publishedafter\n        in: query\n        description: Restrict returned Exposed Keys to dates after this parameter.\n          Given in milliseconds since Unix epoch (1970-01-01).\n        example: '1593043200000'\n        required: false\n        schema:\n          type: integer\n          format: long\n  /v1/gaen/buckets/{dayDateStr}:\n    get:\n      summary: getBuckets\n      description: Request the available release batch times for a given day\n      responses:\n        '200':\n          description: zipped export.bin and export.sig of all keys in that interval\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/org.dpppt.backend.sdk.model.gaen.DayBuckets'\n        '404':\n          description: invalid starting key date, points outside of the retention\n            range\n      parameters:\n      - name: dayDateStr\n        in: path\n        description: Starting date for exposed key retrieval, as ISO-8601 format\n        example: '2020-06-27'\n        required: true\n        schema:\n          type: string\ncomponents:\n  schemas:\n    org.dpppt.backend.sdk.model.gaen.DayBuckets:\n      type: object\n      properties:\n        dayTimestamp:\n          type: integer\n          format: long\n          description: The day of all buckets, as midnight in milliseconds since the\n            Unix epoch (1970-01-01)\n          example: '1593043200000'\n        day:\n          type: string\n          description: The day as given by the request in /v1/gaen/buckets/{dayDateStr}\n          example: '2020-06-27'\n        relativeUrls:\n          type: array\n          items:\n            type: string\n          description: Relative URLs for the available release buckets\n          example: '[''/exposed/1593043200000'', ''/exposed/1593046800000'''\n    org.dpppt.backend.sdk.model.gaen.GaenKey:\n      type: object\n      required:\n      - keyData\n      - rollingStartNumber\n      - rollingPeriod\n      - transmissionRiskLevel\n      properties:\n        keyData:\n          type: string\n          description: Represents the 16-byte Temporary Exposure Key in base64\n          example: ''\n        rollingStartNumber:\n          type: integer\n          description: The ENIntervalNumber as number of 10-minute intervals since\n            the Unix epoch (1970-01-01)\n          example: ''\n        rollingPeriod:\n          type: integer\n          description: The TEKRollingPeriod indicates for how many 10-minute intervals\n            the Temporary Exposure Key is valid\n          example: ''\n        transmissionRiskLevel:\n          type: integer\n          description: According to the Google API description a value between 0 and\n            4096, with higher values indicating a higher risk\n          example: ''\n        fake:\n          type: integer\n          description: If fake = 0, the key is a valid key. If fake = 1, the key will\n            be discarded.\n          example: ''\n    org.dpppt.backend.sdk.model.gaen.GaenRequest:\n      type: object\n      required:\n      - gaenKeys\n      - delayedKeyDate\n      properties:\n        gaenKeys:\n          type: array\n          items:\n            $ref: '#/components/schemas/org.dpppt.backend.sdk.model.gaen.GaenKey'\n          description: Between 14 and 30 Temporary Exposure Keys - zero or more of\n            them might be fake keys. Starting with EN 1.5 it is possible that clients\n            send more than 14 keys.\n          example: ''\n        delayedKeyDate:\n          type: integer\n          description: Prior to version 1.5 Exposure Keys for the day of report weren't\n            available (since they were still used throughout this day RPI=144), so\n            the submission of the last key had to be delayed. This Unix timestamp\n            in milliseconds specifies, which key date the last key (which will be\n            submitted on the next day) will have. The backend then issues a JWT to\n            allow the submission of this last key with specified key date. This should\n            not be necessary after the Exposure Framework is able to send and handle\n            keys with RollingPeriod \u003c 144 (e.g. only valid until submission).\n          example: ''\n    org.dpppt.backend.sdk.model.gaen.GaenSecondDay:\n      type: object\n      required:\n      - delayedKey\n      properties:\n        delayedKey:\n          $ref: '#/components/schemas/org.dpppt.backend.sdk.model.gaen.GaenKey'\n",
			"canonicalURL": "/github.com/RadarCOVID/radar-covid-backend-dp3t-server@969fb7672f66d3b9d937f5e81d2fa4ac58e8f8a5/-/blob/documentation/yaml/sdk.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RadarCOVID/radar-covid-backend-dp3t-server/blob/969fb7672f66d3b9d937f5e81d2fa4ac58e8f8a5/documentation/yaml/sdk.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}