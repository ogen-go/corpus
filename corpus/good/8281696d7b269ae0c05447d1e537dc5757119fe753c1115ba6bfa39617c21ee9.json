{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "packages.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.1/services/packages.yaml",
			"byteSize": 93500,
			"content": "paths:\n  /user/packages:\n    get:\n      summary: List packages for the authenticated user's namespace\n      description: |-\n        Lists packages owned by the authenticated user within the user's namespace.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/list-packages-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#list-packages-for-the-authenticated-user\n      parameters:\n        - name: package_type\n          description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - npm\n              - maven\n              - rubygems\n              - docker\n              - nuget\n              - container\n        - $ref: '#/components/parameters/package-visibility'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/package'\n              examples:\n                default:\n                  $ref: '#/components/examples/packages-for-user'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /user/packages/{package_type}/{package_name}:\n    get:\n      summary: Get a package for the authenticated user\n      description: |-\n        Gets a specific package for a package owned by the authenticated user.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-package-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-a-package-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/package'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-user'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n    delete:\n      summary: Delete a package for the authenticated user\n      description: |-\n        Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/delete-package-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#delete-a-package-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /user/packages/{package_type}/{package_name}/restore:\n    post:\n      summary: Restore a package for the authenticated user\n      description: |-\n        Restores a package owned by the authenticated user.\n\n        You can restore a deleted package under the following conditions:\n          - The package was deleted within the last 30 days.\n          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/restore-package-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#restore-a-package-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - name: token\n          description: package token\n          schema:\n            type: string\n          required: false\n          in: query\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /user/packages/{package_type}/{package_name}/versions:\n    get:\n      summary: Get all package versions for a package owned by the authenticated user\n      description: |-\n        Returns all package versions for a package owned by the authenticated user.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-all-package-versions-for-package-owned-by-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/page'\n        - $ref: '#/components/parameters/per-page'\n        - name: state\n          in: query\n          required: false\n          description: The state of the package, either active or deleted.\n          schema:\n            type: string\n            enum:\n              - active\n              - deleted\n            default: active\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/package-version'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-versions-for-authenticated-user'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /user/packages/{package_type}/{package_name}/versions/{package_version_id}:\n    get:\n      summary: Get a package version for the authenticated user\n      description: |-\n        Gets a specific package version for a package owned by the authenticated user.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-package-version-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-a-package-version-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/package-version-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/package-version'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-version-authenticated-user'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n    delete:\n      summary: Delete a package version for the authenticated user\n      description: |-\n        Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.\n\n        To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/delete-package-version-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#delete-a-package-version-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/package-version-id'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:\n    post:\n      summary: Restore a package version for the authenticated user\n      description: |-\n        Restores a package version owned by the authenticated user.\n\n        You can restore a deleted package version under the following conditions:\n          - The package was deleted within the last 30 days.\n          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/restore-package-version-for-authenticated-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#restore-a-package-version-for-the-authenticated-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/package-version-id'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages:\n    get:\n      summary: List packages for a user\n      description: |-\n        Lists all packages in a user's namespace for which the requesting user has access.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/list-packages-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#list-packages-for-user\n      parameters:\n        - name: package_type\n          description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - npm\n              - maven\n              - rubygems\n              - docker\n              - nuget\n              - container\n        - $ref: '#/components/parameters/package-visibility'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/package'\n              examples:\n                default:\n                  $ref: '#/components/examples/packages-for-user'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages/{package_type}/{package_name}:\n    get:\n      summary: Get a package for a user\n      description: |-\n        Gets a specific package metadata for a public package owned by a user.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-package-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-a-package-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/package'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-user'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n    delete:\n      summary: Delete a package for a user\n      description: |-\n        Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n        - If `package_type` is not `container`, your token must also include the `repo` scope.\n        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.\n      tags:\n        - packages\n      operationId: packages/delete-package-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#delete-a-package-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages/{package_type}/{package_name}/restore:\n    post:\n      summary: Restore a package for a user\n      description: |-\n        Restores an entire package for a user.\n\n        You can restore a deleted package under the following conditions:\n          - The package was deleted within the last 30 days.\n          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n        - If `package_type` is not `container`, your token must also include the `repo` scope.\n        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.\n      tags:\n        - packages\n      operationId: packages/restore-package-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#restore-a-package-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n        - name: token\n          description: package token\n          schema:\n            type: string\n          required: false\n          in: query\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages/{package_type}/{package_name}/versions:\n    get:\n      summary: Get all package versions for a package owned by a user\n      description: |-\n        Returns all package versions for a public package owned by a specified user.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-all-package-versions-for-package-owned-by-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/package-version'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-versions-for-user'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}:\n    get:\n      summary: Get a package version for a user\n      description: |-\n        Gets a specific package version for a public package owned by a specified user.\n\n        At this time, to use this endpoint, you must authenticate using an access token with the `packages:read` scope.\n        If `package_type` is not `container`, your token must also include the `repo` scope.\n      tags:\n        - packages\n      operationId: packages/get-package-version-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#get-a-package-version-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/package-version-id'\n        - $ref: '#/components/parameters/username'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/package-version'\n              examples:\n                default:\n                  $ref: '#/components/examples/package-version-user'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n    delete:\n      summary: Delete package version for a user\n      description: |-\n        Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n        - If `package_type` is not `container`, your token must also include the `repo` scope.\n        - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.\n      tags:\n        - packages\n      operationId: packages/delete-package-version-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#delete-a-package-version-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/package-version-id'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\n  /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore:\n    post:\n      summary: Restore package version for a user\n      description: |-\n        Restores a specific package version for a user.\n\n        You can restore a deleted package under the following conditions:\n          - The package was deleted within the last 30 days.\n          - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\n        To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n        - If `package_type` is not `container`, your token must also include the `repo` scope.\n        - If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.\n      tags:\n        - packages\n      operationId: packages/restore-package-version-for-user\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/packages#restore-a-package-version-for-a-user\n      parameters:\n        - $ref: '#/components/parameters/package-type'\n        - $ref: '#/components/parameters/package-name'\n        - $ref: '#/components/parameters/username'\n        - $ref: '#/components/parameters/package-version-id'\n      responses:\n        '204':\n          description: Response\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        category: packages\n        subcategory: null\ncomponents:\n  schemas:\n    package:\n      title: Package\n      description: A software package\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the package.\n          type: integer\n          example: 1\n        name:\n          description: The name of the package.\n          type: string\n          example: super-linter\n        package_type:\n          type: string\n          example: docker\n          enum:\n            - npm\n            - maven\n            - rubygems\n            - docker\n            - nuget\n            - container\n        url:\n          type: string\n          example: https://api.github.com/orgs/github/packages/container/super-linter\n        html_url:\n          type: string\n          example: https://github.com/orgs/github/packages/container/package/super-linter\n        version_count:\n          description: The number of versions of the package.\n          type: integer\n          example: 1\n        visibility:\n          type: string\n          example: private\n          enum:\n            - private\n            - public\n        owner:\n          $ref: '#/components/schemas/nullable-simple-user'\n        repository:\n          $ref: '#/components/schemas/nullable-minimal-repository'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      required:\n        - id\n        - name\n        - package_type\n        - visibility\n        - url\n        - html_url\n        - version_count\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    nullable-minimal-repository:\n      title: Minimal Repository\n      description: Minimal Repository\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1296269\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          type: string\n          example: Hello-World\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n        mirror_url:\n          type: string\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n        homepage:\n          type: string\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n        stargazers_count:\n          type: integer\n        watchers_count:\n          type: integer\n        size:\n          type: integer\n        default_branch:\n          type: string\n        open_issues_count:\n          type: integer\n        is_template:\n          type: boolean\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          type: boolean\n        has_projects:\n          type: boolean\n        has_wiki:\n          type: boolean\n        has_pages:\n          type: boolean\n        has_downloads:\n          type: boolean\n        archived:\n          type: boolean\n        disabled:\n          type: boolean\n        visibility:\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            maintain:\n              type: boolean\n            push:\n              type: boolean\n            triage:\n              type: boolean\n            pull:\n              type: boolean\n        role_name:\n          type: string\n          example: admin\n        template_repository:\n          $ref: '#/components/schemas/nullable-repository'\n        temp_clone_token:\n          type: string\n        delete_branch_on_merge:\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        code_of_conduct:\n          $ref: '#/components/schemas/code-of-conduct'\n        license:\n          type: object\n          properties:\n            key:\n              type: string\n            name:\n              type: string\n            spdx_id:\n              type: string\n            url:\n              type: string\n            node_id:\n              type: string\n          nullable: true\n        forks:\n          type: integer\n          example: 0\n        open_issues:\n          type: integer\n          example: 0\n        watchers:\n          type: integer\n          example: 0\n        allow_forking:\n          type: boolean\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n      nullable: true\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    nullable-repository:\n      title: Repository\n      description: A git repository\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the repository\n          example: 42\n          type: integer\n        node_id:\n          type: string\n          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5\n        name:\n          description: The name of the repository.\n          type: string\n          example: Team Environment\n        full_name:\n          type: string\n          example: octocat/Hello-World\n        license:\n          $ref: '#/components/schemas/nullable-license-simple'\n        organization:\n          $ref: '#/components/schemas/nullable-simple-user'\n        forks:\n          type: integer\n        permissions:\n          type: object\n          properties:\n            admin:\n              type: boolean\n            pull:\n              type: boolean\n            triage:\n              type: boolean\n            push:\n              type: boolean\n            maintain:\n              type: boolean\n          required:\n            - admin\n            - pull\n            - push\n        owner:\n          $ref: '#/components/schemas/simple-user'\n        private:\n          description: Whether the repository is private or public.\n          default: false\n          type: boolean\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat/Hello-World\n        description:\n          type: string\n          example: This your first repo!\n          nullable: true\n        fork:\n          type: boolean\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/repos/octocat/Hello-World\n        archive_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\n        assignees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}\n        blobs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\n        branches_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}\n        collaborators_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\n        comments_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}\n        commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}\n        compare_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\n        contents_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}\n        contributors_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/contributors\n        deployments_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/deployments\n        downloads_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/downloads\n        events_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/events\n        forks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/forks\n        git_commits_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\n        git_refs_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\n        git_tags_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\n        git_url:\n          type: string\n          example: git:github.com/octocat/Hello-World.git\n        issue_comment_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\n        issue_events_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\n        issues_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}\n        keys_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\n        labels_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}\n        languages_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/languages\n        merges_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/merges\n        milestones_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}\n        notifications_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\n        pulls_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}\n        releases_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}\n        ssh_url:\n          type: string\n          example: git@github.com:octocat/Hello-World.git\n        stargazers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/stargazers\n        statuses_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\n        subscribers_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscribers\n        subscription_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/subscription\n        tags_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/tags\n        teams_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/teams\n        trees_url:\n          type: string\n          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\n        clone_url:\n          type: string\n          example: https://github.com/octocat/Hello-World.git\n        mirror_url:\n          type: string\n          format: uri\n          example: git:git.example.com/octocat/Hello-World\n          nullable: true\n        hooks_url:\n          type: string\n          format: uri\n          example: http://api.github.com/repos/octocat/Hello-World/hooks\n        svn_url:\n          type: string\n          format: uri\n          example: https://svn.github.com/octocat/Hello-World\n        homepage:\n          type: string\n          format: uri\n          example: https://github.com\n          nullable: true\n        language:\n          type: string\n          nullable: true\n        forks_count:\n          type: integer\n          example: 9\n        stargazers_count:\n          type: integer\n          example: 80\n        watchers_count:\n          type: integer\n          example: 80\n        size:\n          type: integer\n          example: 108\n        default_branch:\n          description: The default branch of the repository.\n          type: string\n          example: master\n        open_issues_count:\n          type: integer\n          example: 0\n        is_template:\n          description: Whether this repository acts as a template that can be used to generate new repositories.\n          default: false\n          type: boolean\n          example: true\n        topics:\n          type: array\n          items:\n            type: string\n        has_issues:\n          description: Whether issues are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_projects:\n          description: Whether projects are enabled.\n          default: true\n          type: boolean\n          example: true\n        has_wiki:\n          description: Whether the wiki is enabled.\n          default: true\n          type: boolean\n          example: true\n        has_pages:\n          type: boolean\n        has_downloads:\n          description: Whether downloads are enabled.\n          default: true\n          type: boolean\n          example: true\n        archived:\n          description: Whether the repository is archived.\n          default: false\n          type: boolean\n        disabled:\n          type: boolean\n          description: Returns whether or not this repository disabled.\n        visibility:\n          description: 'The repository visibility: public, private, or internal.'\n          default: public\n          type: string\n        pushed_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:06:43Z'\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:01:12Z'\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-01-26T19:14:43Z'\n          nullable: true\n        allow_rebase_merge:\n          description: Whether to allow rebase merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        template_repository:\n          nullable: true\n          type: object\n          properties:\n            id:\n              type: integer\n            node_id:\n              type: string\n            name:\n              type: string\n            full_name:\n              type: string\n            owner:\n              type: object\n              properties:\n                login:\n                  type: string\n                id:\n                  type: integer\n                node_id:\n                  type: string\n                avatar_url:\n                  type: string\n                gravatar_id:\n                  type: string\n                url:\n                  type: string\n                html_url:\n                  type: string\n                followers_url:\n                  type: string\n                following_url:\n                  type: string\n                gists_url:\n                  type: string\n                starred_url:\n                  type: string\n                subscriptions_url:\n                  type: string\n                organizations_url:\n                  type: string\n                repos_url:\n                  type: string\n                events_url:\n                  type: string\n                received_events_url:\n                  type: string\n                type:\n                  type: string\n                site_admin:\n                  type: boolean\n            private:\n              type: boolean\n            html_url:\n              type: string\n            description:\n              type: string\n            fork:\n              type: boolean\n            url:\n              type: string\n            archive_url:\n              type: string\n            assignees_url:\n              type: string\n            blobs_url:\n              type: string\n            branches_url:\n              type: string\n            collaborators_url:\n              type: string\n            comments_url:\n              type: string\n            commits_url:\n              type: string\n            compare_url:\n              type: string\n            contents_url:\n              type: string\n            contributors_url:\n              type: string\n            deployments_url:\n              type: string\n            downloads_url:\n              type: string\n            events_url:\n              type: string\n            forks_url:\n              type: string\n            git_commits_url:\n              type: string\n            git_refs_url:\n              type: string\n            git_tags_url:\n              type: string\n            git_url:\n              type: string\n            issue_comment_url:\n              type: string\n            issue_events_url:\n              type: string\n            issues_url:\n              type: string\n            keys_url:\n              type: string\n            labels_url:\n              type: string\n            languages_url:\n              type: string\n            merges_url:\n              type: string\n            milestones_url:\n              type: string\n            notifications_url:\n              type: string\n            pulls_url:\n              type: string\n            releases_url:\n              type: string\n            ssh_url:\n              type: string\n            stargazers_url:\n              type: string\n            statuses_url:\n              type: string\n            subscribers_url:\n              type: string\n            subscription_url:\n              type: string\n            tags_url:\n              type: string\n            teams_url:\n              type: string\n            trees_url:\n              type: string\n            clone_url:\n              type: string\n            mirror_url:\n              type: string\n            hooks_url:\n              type: string\n            svn_url:\n              type: string\n            homepage:\n              type: string\n            language:\n              type: string\n            forks_count:\n              type: integer\n            stargazers_count:\n              type: integer\n            watchers_count:\n              type: integer\n            size:\n              type: integer\n            default_branch:\n              type: string\n            open_issues_count:\n              type: integer\n            is_template:\n              type: boolean\n            topics:\n              type: array\n              items:\n                type: string\n            has_issues:\n              type: boolean\n            has_projects:\n              type: boolean\n            has_wiki:\n              type: boolean\n            has_pages:\n              type: boolean\n            has_downloads:\n              type: boolean\n            archived:\n              type: boolean\n            disabled:\n              type: boolean\n            visibility:\n              type: string\n            pushed_at:\n              type: string\n            created_at:\n              type: string\n            updated_at:\n              type: string\n            permissions:\n              type: object\n              properties:\n                admin:\n                  type: boolean\n                maintain:\n                  type: boolean\n                push:\n                  type: boolean\n                triage:\n                  type: boolean\n                pull:\n                  type: boolean\n            allow_rebase_merge:\n              type: boolean\n            temp_clone_token:\n              type: string\n            allow_squash_merge:\n              type: boolean\n            allow_auto_merge:\n              type: boolean\n            delete_branch_on_merge:\n              type: boolean\n            allow_update_branch:\n              type: boolean\n            allow_merge_commit:\n              type: boolean\n            subscribers_count:\n              type: integer\n            network_count:\n              type: integer\n        temp_clone_token:\n          type: string\n        allow_squash_merge:\n          description: Whether to allow squash merges for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_auto_merge:\n          description: Whether to allow Auto-merge to be used on pull requests.\n          default: false\n          type: boolean\n          example: false\n        delete_branch_on_merge:\n          description: Whether to delete head branches when pull requests are merged\n          default: false\n          type: boolean\n          example: false\n        allow_merge_commit:\n          description: Whether to allow merge commits for pull requests.\n          default: true\n          type: boolean\n          example: true\n        allow_forking:\n          description: Whether to allow forking this repo\n          type: boolean\n        subscribers_count:\n          type: integer\n        network_count:\n          type: integer\n        open_issues:\n          type: integer\n        watchers:\n          type: integer\n        master_branch:\n          type: string\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:42Z\"'\n      required:\n        - archive_url\n        - assignees_url\n        - blobs_url\n        - branches_url\n        - collaborators_url\n        - comments_url\n        - commits_url\n        - compare_url\n        - contents_url\n        - contributors_url\n        - deployments_url\n        - description\n        - downloads_url\n        - events_url\n        - fork\n        - forks_url\n        - full_name\n        - git_commits_url\n        - git_refs_url\n        - git_tags_url\n        - hooks_url\n        - html_url\n        - id\n        - node_id\n        - issue_comment_url\n        - issue_events_url\n        - issues_url\n        - keys_url\n        - labels_url\n        - languages_url\n        - merges_url\n        - milestones_url\n        - name\n        - notifications_url\n        - owner\n        - private\n        - pulls_url\n        - releases_url\n        - stargazers_url\n        - statuses_url\n        - subscribers_url\n        - subscription_url\n        - tags_url\n        - teams_url\n        - trees_url\n        - url\n        - clone_url\n        - default_branch\n        - forks\n        - forks_count\n        - git_url\n        - has_downloads\n        - has_issues\n        - has_projects\n        - has_wiki\n        - has_pages\n        - homepage\n        - language\n        - archived\n        - disabled\n        - mirror_url\n        - open_issues\n        - open_issues_count\n        - license\n        - pushed_at\n        - size\n        - ssh_url\n        - stargazers_count\n        - svn_url\n        - watchers\n        - watchers_count\n        - created_at\n        - updated_at\n      nullable: true\n    code-of-conduct:\n      title: Code Of Conduct\n      description: Code Of Conduct\n      type: object\n      properties:\n        key:\n          type: string\n          example: contributor_covenant\n        name:\n          type: string\n          example: Contributor Covenant\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/codes_of_conduct/contributor_covenant\n        body:\n          type: string\n          example: |\n            # Contributor Covenant Code of Conduct\n\n            ## Our Pledge\n\n            In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n            ## Our Standards\n\n            Examples of behavior that contributes to creating a positive environment include:\n\n            * Using welcoming and inclusive language\n            * Being respectful of differing viewpoints and experiences\n            * Gracefully accepting constructive criticism\n            * Focusing on what is best for the community\n            * Showing empathy towards other community members\n\n            Examples of unacceptable behavior by participants include:\n\n            * The use of sexualized language or imagery and unwelcome sexual attention or advances\n            * Trolling, insulting/derogatory comments, and personal or political attacks\n            * Public or private harassment\n            * Publishing others' private information, such as a physical or electronic address, without explicit permission\n            * Other conduct which could reasonably be considered inappropriate in a professional setting\n\n            ## Our Responsibilities\n\n            Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                              to any instances of unacceptable behavior.\n\n            Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n            ## Scope\n\n            This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                              posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n            ## Enforcement\n\n            Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\n            Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n            ## Attribution\n\n            This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n            [homepage]: http://contributor-covenant.org\n            [version]: http://contributor-covenant.org/version/1/4/\n        html_url:\n          type: string\n          format: uri\n          nullable: true\n      required:\n        - url\n        - html_url\n        - key\n        - name\n    nullable-license-simple:\n      title: License Simple\n      description: License Simple\n      type: object\n      properties:\n        key:\n          type: string\n          example: mit\n        name:\n          type: string\n          example: MIT License\n        url:\n          type: string\n          nullable: true\n          format: uri\n          example: https://api.github.com/licenses/mit\n        spdx_id:\n          type: string\n          nullable: true\n          example: MIT\n        node_id:\n          type: string\n          example: MDc6TGljZW5zZW1pdA==\n        html_url:\n          type: string\n          format: uri\n      required:\n        - key\n        - name\n        - url\n        - spdx_id\n        - node_id\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    package-version:\n      title: Package Version\n      description: A version of a software package\n      type: object\n      properties:\n        id:\n          description: Unique identifier of the package version.\n          type: integer\n          example: 1\n        name:\n          description: The name of the package version.\n          type: string\n          example: latest\n        url:\n          type: string\n          example: https://api.github.com/orgs/github/packages/container/super-linter/versions/786068\n        package_html_url:\n          type: string\n          example: https://github.com/orgs/github/packages/container/package/super-linter\n        html_url:\n          type: string\n          example: https://github.com/orgs/github/packages/container/super-linter/786068\n        license:\n          type: string\n          example: MIT\n        description:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-04-10T20:09:31Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        deleted_at:\n          type: string\n          format: date-time\n          example: '2014-03-03T18:58:10Z'\n        metadata:\n          type: object\n          title: Package Version Metadata\n          properties:\n            package_type:\n              type: string\n              example: docker\n              enum:\n                - npm\n                - maven\n                - rubygems\n                - docker\n                - nuget\n                - container\n            container:\n              type: object\n              title: Container Metadata\n              properties:\n                tags:\n                  type: array\n                  items:\n                    type: string\n              required:\n                - tags\n            docker:\n              type: object\n              title: Docker Metadata\n              properties:\n                tag:\n                  type: array\n                  items:\n                    type: string\n              required:\n                - tags\n          required:\n            - package_type\n      required:\n        - id\n        - name\n        - url\n        - package_html_url\n        - created_at\n        - updated_at\n  parameters:\n    package-visibility:\n      name: visibility\n      description: The selected visibility of the packages. Can be one of `public`, `private`, or `internal`. Only `container` package_types currently support `internal` visibility properly. For other ecosystems `internal` is synonymous with `private`. This parameter is optional and only filters an existing result set.\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - public\n          - private\n          - internal\n    package-type:\n      name: package_type\n      description: The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.\n      in: path\n      required: true\n      schema:\n        type: string\n        enum:\n          - npm\n          - maven\n          - rubygems\n          - docker\n          - nuget\n          - container\n    package-name:\n      name: package_name\n      description: The name of the package.\n      in: path\n      required: true\n      schema:\n        type: string\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    package-version-id:\n      name: package_version_id\n      description: Unique identifier of the package version.\n      in: path\n      required: true\n      schema:\n        type: integer\n    username:\n      name: username\n      in: path\n      required: true\n      schema:\n        type: string\n  responses:\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    packages-for-user:\n      value:\n        - id: 197\n          name: hello_docker\n          package_type: container\n          owner:\n            login: monalisa\n            id: 9919\n            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=\n            avatar_url: https://avatars.monalisausercontent.com/u/9919?v=4\n            gravatar_id: ''\n            url: https://api.github.com/users/monalisa\n            html_url: https://github.com/github\n            followers_url: https://api.github.com/users/github/followers\n            following_url: https://api.github.com/users/github/following{/other_user}\n            gists_url: https://api.github.com/users/github/gists{/gist_id}\n            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/github/subscriptions\n            organizations_url: https://api.github.com/users/github/orgs\n            repos_url: https://api.github.com/users/github/repos\n            events_url: https://api.github.com/users/github/events{/privacy}\n            received_events_url: https://api.github.com/users/github/received_events\n            type: User\n            site_admin: false\n          version_count: 1\n          visibility: private\n          url: https://api.github.com/orgs/github/packages/container/hello_docker\n          created_at: '2020-05-19T22:19:11Z'\n          updated_at: '2020-05-19T22:19:11Z'\n          html_url: https://github.com/orgs/github/packages/container/package/hello_docker\n        - id: 198\n          name: goodbye_docker\n          package_type: container\n          owner:\n            login: github\n            id: 9919\n            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=\n            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4\n            gravatar_id: ''\n            url: https://api.github.com/users/monalisa\n            html_url: https://github.com/github\n            followers_url: https://api.github.com/users/github/followers\n            following_url: https://api.github.com/users/github/following{/other_user}\n            gists_url: https://api.github.com/users/github/gists{/gist_id}\n            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/github/subscriptions\n            organizations_url: https://api.github.com/users/github/orgs\n            repos_url: https://api.github.com/users/github/repos\n            events_url: https://api.github.com/users/github/events{/privacy}\n            received_events_url: https://api.github.com/users/github/received_events\n            type: User\n            site_admin: false\n          version_count: 2\n          visibility: private\n          url: https://api.github.com/user/monalisa/packages/container/goodbye_docker\n          created_at: '2020-05-20T22:19:11Z'\n          updated_at: '2020-05-20T22:19:11Z'\n          html_url: https://github.com/user/monalisa/packages/container/package/goodbye_docker\n    package-user:\n      value:\n        id: 40201\n        name: octo-name\n        package_type: rubygems\n        owner:\n          login: octocat\n          id: 209477\n          node_id: MDQ6VXNlcjIwOTQ3Nw==\n          avatar_url: https://avatars.githubusercontent.com/u/209477?v=4\n          gravatar_id: ''\n          url: https://api.github.com/users/octocat\n          html_url: https://github.com/octocat\n          followers_url: https://api.github.com/users/octocat/followers\n          following_url: https://api.github.com/users/octocat/following{/other_user}\n          gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n          subscriptions_url: https://api.github.com/users/octocat/subscriptions\n          organizations_url: https://api.github.com/users/octocat/orgs\n          repos_url: https://api.github.com/users/octocat/repos\n          events_url: https://api.github.com/users/octocat/events{/privacy}\n          received_events_url: https://api.github.com/users/octocat/received_events\n          type: User\n          site_admin: true\n        version_count: 3\n        visibility: public\n        url: https://api.github.com/users/octocat/packages/rubygems/octo-name\n        created_at: '2019-10-20T14:17:14Z'\n        updated_at: '2019-10-20T14:17:14Z'\n        repository:\n          id: 216219492\n          node_id: MDEwOlJlcG9zaXRvcnkyMTYyMTk0OTI=\n          name: octo-name-repo\n          full_name: octocat/octo-name-repo\n          private: false\n          owner:\n            login: octocat\n            id: 209477\n            node_id: MDQ6VXNlcjIwOTQ3Nw==\n            avatar_url: https://avatars.githubusercontent.com/u/209477?v=4\n            gravatar_id: ''\n            url: https://api.github.com/users/octocat\n            html_url: https://github.com/octocat\n            followers_url: https://api.github.com/users/octocat/followers\n            following_url: https://api.github.com/users/octocat/following{/other_user}\n            gists_url: https://api.github.com/users/octocat/gists{/gist_id}\n            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}\n            subscriptions_url: https://api.github.com/users/octocat/subscriptions\n            organizations_url: https://api.github.com/users/octocat/orgs\n            repos_url: https://api.github.com/users/octocat/repos\n            events_url: https://api.github.com/users/octocat/events{/privacy}\n            received_events_url: https://api.github.com/users/octocat/received_events\n            type: User\n            site_admin: true\n          html_url: https://github.com/octocat/octo-name-repo\n          description: Project for octocats\n          fork: false\n          url: https://api.github.com/repos/octocat/octo-name-repo\n          forks_url: https://api.github.com/repos/octocat/octo-name-repo/forks\n          keys_url: https://api.github.com/repos/octocat/octo-name-repo/keys{/key_id}\n          collaborators_url: https://api.github.com/repos/octocat/octo-name-repo/collaborators{/collaborator}\n          teams_url: https://api.github.com/repos/octocat/octo-name-repo/teams\n          hooks_url: https://api.github.com/repos/octocat/octo-name-repo/hooks\n          issue_events_url: https://api.github.com/repos/octocat/octo-name-repo/issues/events{/number}\n          events_url: https://api.github.com/repos/octocat/octo-name-repo/events\n          assignees_url: https://api.github.com/repos/octocat/octo-name-repo/assignees{/user}\n          branches_url: https://api.github.com/repos/octocat/octo-name-repo/branches{/branch}\n          tags_url: https://api.github.com/repos/octocat/octo-name-repo/tags\n          blobs_url: https://api.github.com/repos/octocat/octo-name-repo/git/blobs{/sha}\n          git_tags_url: https://api.github.com/repos/octocat/octo-name-repo/git/tags{/sha}\n          git_refs_url: https://api.github.com/repos/octocat/octo-name-repo/git/refs{/sha}\n          trees_url: https://api.github.com/repos/octocat/octo-name-repo/git/trees{/sha}\n          statuses_url: https://api.github.com/repos/octocat/octo-name-repo/statuses/{sha}\n          languages_url: https://api.github.com/repos/octocat/octo-name-repo/languages\n          stargazers_url: https://api.github.com/repos/octocat/octo-name-repo/stargazers\n          contributors_url: https://api.github.com/repos/octocat/octo-name-repo/contributors\n          subscribers_url: https://api.github.com/repos/octocat/octo-name-repo/subscribers\n          subscription_url: https://api.github.com/repos/octocat/octo-name-repo/subscription\n          commits_url: https://api.github.com/repos/octocat/octo-name-repo/commits{/sha}\n          git_commits_url: https://api.github.com/repos/octocat/octo-name-repo/git/commits{/sha}\n          comments_url: https://api.github.com/repos/octocat/octo-name-repo/comments{/number}\n          issue_comment_url: https://api.github.com/repos/octocat/octo-name-repo/issues/comments{/number}\n          contents_url: https://api.github.com/repos/octocat/octo-name-repo/contents/{+path}\n          compare_url: https://api.github.com/repos/octocat/octo-name-repo/compare/{base}...{head}\n          merges_url: https://api.github.com/repos/octocat/octo-name-repo/merges\n          archive_url: https://api.github.com/repos/octocat/octo-name-repo/{archive_format}{/ref}\n          downloads_url: https://api.github.com/repos/octocat/octo-name-repo/downloads\n          issues_url: https://api.github.com/repos/octocat/octo-name-repo/issues{/number}\n          pulls_url: https://api.github.com/repos/octocat/octo-name-repo/pulls{/number}\n          milestones_url: https://api.github.com/repos/octocat/octo-name-repo/milestones{/number}\n          notifications_url: https://api.github.com/repos/octocat/octo-name-repo/notifications{?since,all,participating}\n          labels_url: https://api.github.com/repos/octocat/octo-name-repo/labels{/name}\n          releases_url: https://api.github.com/repos/octocat/octo-name-repo/releases{/id}\n          deployments_url: https://api.github.com/repos/octocat/octo-name-repo/deployments\n        html_url: https://github.com/octocat/octo-name-repo/packages/40201\n    package-versions-for-authenticated-user:\n      value:\n        - id: 45763\n          name: sha256:08a44bab0bddaddd8837a8b381aebc2e4b933768b981685a9e088360af0d3dd9\n          url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/45763\n          package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker\n          created_at: '2020-09-11T21:56:40Z'\n          updated_at: '2021-02-05T21:32:32Z'\n          html_url: https://github.com/users/octocat/packages/container/hello_docker/45763\n          metadata:\n            package_type: container\n            container:\n              tags:\n                - latest\n        - id: 881\n          name: sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344\n          url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/881\n          package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker\n          created_at: '2020-05-21T22:22:20Z'\n          updated_at: '2021-02-05T21:32:32Z'\n          html_url: https://github.com/users/octocat/packages/container/hello_docker/881\n          metadata:\n            package_type: container\n            container:\n              tags: []\n    package-version-authenticated-user:\n      value:\n        id: 214\n        name: sha256:3561f0cff06caccddb99c93bd26e712fcc56a811de0f8ea7a17bb865f30b176a\n        url: https://api.github.com/users/octocat/packages/container/hello_docker/versions/214\n        package_html_url: https://github.com/users/octocat/packages/container/package/hello_docker\n        created_at: '2020-05-15T03:46:45Z'\n        updated_at: '2020-05-15T03:46:45Z'\n        html_url: https://github.com/users/octocat/packages/container/hello_docker/214\n        metadata:\n          package_type: container\n          container:\n            tags:\n              - 1.13.6\n    package-versions-for-user:\n      value:\n        - id: 3497268\n          name: 0.3.0\n          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/3497268\n          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201\n          license: MIT\n          created_at: '2020-08-31T15:22:11Z'\n          updated_at: '2020-08-31T15:22:12Z'\n          description: Project for octocats\n          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.3.0\n          metadata:\n            package_type: rubygems\n        - id: 387039\n          name: 0.2.0\n          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039\n          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201\n          license: MIT\n          created_at: '2019-12-01T20:49:29Z'\n          updated_at: '2019-12-01T20:49:30Z'\n          description: Project for octocats\n          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0\n          metadata:\n            package_type: rubygems\n        - id: 169770\n          name: 0.1.0\n          url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/169770\n          package_html_url: https://github.com/octocat/octo-name-repo/packages/40201\n          license: MIT\n          created_at: '2019-10-20T14:17:14Z'\n          updated_at: '2019-10-20T14:17:15Z'\n          html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.1.0\n          metadata:\n            package_type: rubygems\n    package-version-user:\n      value:\n        id: 387039\n        name: 0.2.0\n        url: https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039\n        package_html_url: https://github.com/octocat/octo-name-repo/packages/40201\n        license: MIT\n        created_at: '2019-12-01T20:49:29Z'\n        updated_at: '2019-12-01T20:49:30Z'\n        description: Octo-name client for Ruby\n        html_url: https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0\n        metadata:\n          package_type: rubygems\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    packages:\n      id: github.packages.packages\n      name: packages\n      title: packages\n      methods:\n        list_packages_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_package_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_package_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        restore_package_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1restore/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_all_package_versions_for_package_owned_by_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_package_version_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_package_version_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        restore_package_version_for_authenticated_user:\n          operation:\n            $ref: '#/paths/~1user~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}~1restore/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_packages_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_package_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_package_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        restore_package_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1restore/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        get_all_package_versions_for_package_owned_by_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_package_version_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_package_version_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        restore_package_version_for_user:\n          operation:\n            $ref: '#/paths/~1users~1{username}~1packages~1{package_type}~1{package_name}~1versions~1{package_version_id}~1restore/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_version_for_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_version_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_for_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/get_package_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/list_packages_for_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/list_packages_for_authenticated_user'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_version_for_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_version_for_authenticated_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_for_user'\n          - $ref: '#/components/x-stackQL-resources/packages/methods/delete_package_for_authenticated_user'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - packages\n  description: Manage packages for authenticated users and organizations.\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.1/services/packages.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.1/services/packages.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}