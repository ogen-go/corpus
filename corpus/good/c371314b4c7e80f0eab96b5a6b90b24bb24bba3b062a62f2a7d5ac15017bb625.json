{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "sportsdata.io-csgo-v3-scores-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/sportsdata.io-csgo-v3-scores-1.0-swagger.yaml",
			"byteSize": 22273,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: nfldata\n  description: CS:GO v3 Scores\n  title: CS:GO v3 Scores\n  version: \"1.0\"\n  x-apisguru-categories:\n    - entertainment\n  x-logo:\n    url: https://twitter.com/nfldata/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://fantasydata.com/downloads/swagger/csgo-v3-scores.json\n      version: \"2.0\"\n  x-providerName: sportsdata.io\n  x-serviceName: csgo-v3-scores\nsecurity:\n  - apiKeyHeader: []\n  - apiKeyQuery: []\ntags: []\npaths:\n  \"/{format}/ActiveMemberships\":\n    get:\n      description: Memberships (Active)\n      operationId: MembershipsActive\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships (Active)\n  \"/{format}/Areas\":\n    get:\n      description: Areas (Countries)\n      operationId: AreasCountries\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Area\"\n                type: array\n      summary: Areas (Countries)\n  \"/{format}/CompetitionDetails/{competitionid}\":\n    get:\n      description: Competition Fixtures (League Details)\n      operationId: CompetitionFixturesLeagueDetails\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \"A CS:GO competition/league unique CompetitionId. Possible values\n            include: \u003ccode\u003e100000009\u003c/code\u003e, etc.\"\n          in: path\n          name: competitionid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompetitionDetail\"\n      summary: Competition Fixtures (League Details)\n  \"/{format}/Competitions\":\n    get:\n      description: Competitions (Leagues)\n      operationId: CompetitionsLeagues\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Competition\"\n                type: array\n      summary: Competitions (Leagues)\n  \"/{format}/GamesByDate/{date}\":\n    get:\n      description: Games by Date\n      operationId: GamesByDate\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            The date of the game(s).\n            \u003cbr\u003eExamples: \u003ccode\u003e2018-01-13\u003c/code\u003e, \u003ccode\u003e2018-06-13\u003c/code\u003e.\n          in: path\n          name: date\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Game\"\n                type: array\n      summary: Games by Date\n  \"/{format}/HistoricalMemberships\":\n    get:\n      description: Memberships (Historical)\n      operationId: MembershipsHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships (Historical)\n  \"/{format}/HistoricalMembershipsByTeam/{teamid}\":\n    get:\n      description: Memberships by Team (Historical)\n      operationId: MembershipsByTeamHistorical\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e100000001\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Team (Historical)\n  \"/{format}/MembershipsByTeam/{teamid}\":\n    get:\n      description: Memberships by Team (Active)\n      operationId: MembershipsByTeamActive\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e100000001\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Membership\"\n                type: array\n      summary: Memberships by Team (Active)\n  \"/{format}/Player/{playerid}\":\n    get:\n      description: Player\n      operationId: Player\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Player ID.\n            Example:\u003ccode\u003e100000576\u003c/code\u003e.\n          in: path\n          name: playerid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Player\"\n      summary: Player\n  \"/{format}/Players\":\n    get:\n      description: Players\n      operationId: Players\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Player\"\n                type: array\n      summary: Players\n  \"/{format}/PlayersByTeam/{teamid}\":\n    get:\n      description: Players by Team\n      operationId: PlayersByTeam\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: |-\n            Unique FantasyData Team ID. \n            Example:\u003ccode\u003e100000001\u003c/code\u003e.\n          in: path\n          name: teamid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Player\"\n                type: array\n      summary: Players by Team\n  \"/{format}/Schedule/{roundid}\":\n    get:\n      description: Schedule\n      operationId: Schedule\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competitions and Competition Details endpoints. \n\n            Examples: \u003ccode\u003e100000138\u003c/code\u003e, \u003ccode\u003e1000001412\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Game\"\n                type: array\n      summary: Schedule\n  \"/{format}/SeasonTeams/{seasonid}\":\n    get:\n      description: Season Teams\n      operationId: SeasonTeams\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Season ID. SeasonIDs can be found in the\n            Competitions and Competition Details endpoints. \n\n            Examples: \u003ccode\u003e100000023\u003c/code\u003e, \u003ccode\u003e100000024\u003c/code\u003e, etc\n          in: path\n          name: seasonid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SeasonTeam\"\n                type: array\n      summary: Season Teams\n  \"/{format}/Standings/{roundid}\":\n    get:\n      description: Schedule\n      operationId: Standings\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n        - description: \u003e-\n            Unique FantasyData Round ID. RoundIDs can be found in the\n            Competitions and Competition Details endpoints. \n\n            Example: \u003ccode\u003e100000138\u003c/code\u003e, etc\n          in: path\n          name: roundid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Standing\"\n                type: array\n      summary: Standings\n  \"/{format}/Teams\":\n    get:\n      description: Teams\n      operationId: Teams\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Team\"\n                type: array\n      summary: Teams\n  \"/{format}/Venues\":\n    get:\n      description: Venues\n      operationId: Venues\n      parameters:\n        - description: Desired response format. Valid entries are \u003ccode\u003eXML\u003c/code\u003e or\n            \u003ccode\u003eJSON\u003c/code\u003e.\n          in: path\n          name: format\n          required: true\n          schema:\n            type: string\n            enum:\n              - xml\n              - json\n            default: xml\n      responses:\n        \"200\":\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Venue\"\n                type: array\n      summary: Venues\nservers:\n  - url: http://api.sportsdata.io\n  - url: https://api.sportsdata.io\n  - url: http://api.fantasydata.net\n  - url: https://api.fantasydata.net\ncomponents:\n  securitySchemes:\n    apiKeyHeader:\n      in: header\n      name: Ocp-Apim-Subscription-Key\n      type: apiKey\n    apiKeyQuery:\n      in: query\n      name: subscription-key\n      type: apiKey\n  schemas:\n    Area:\n      properties:\n        AreaId:\n          type: integer\n        CountryCode:\n          type: string\n        Name:\n          type: string\n    Competition:\n      properties:\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        CompetitionId:\n          type: integer\n        Format:\n          type: string\n        Gender:\n          type: string\n        Name:\n          type: string\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Type:\n          type: string\n    CompetitionDetail:\n      properties:\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        CompetitionId:\n          type: integer\n        CurrentSeason:\n          $ref: \"#/components/schemas/Season\"\n        Format:\n          type: string\n        Games:\n          items:\n            $ref: \"#/components/schemas/Game\"\n          type: array\n        Gender:\n          type: string\n        Name:\n          type: string\n        Seasons:\n          items:\n            $ref: \"#/components/schemas/Season\"\n          type: array\n        Teams:\n          items:\n            $ref: \"#/components/schemas/TeamDetail\"\n          type: array\n        Type:\n          type: string\n    Game:\n      properties:\n        BestOf:\n          type: string\n        DateTime:\n          type: string\n        Day:\n          type: string\n        DrawMoneyLine:\n          type: integer\n        GameId:\n          type: integer\n        Group:\n          type: string\n        PointSpread:\n          type: number\n        RoundId:\n          type: integer\n        Season:\n          type: integer\n        SeasonType:\n          type: integer\n        Status:\n          type: string\n        TeamAId:\n          type: integer\n        TeamAKey:\n          type: string\n        TeamAMoneyLine:\n          type: integer\n        TeamAName:\n          type: string\n        TeamAPointSpreadPayout:\n          type: integer\n        TeamAScore:\n          type: integer\n        TeamBId:\n          type: integer\n        TeamBKey:\n          type: string\n        TeamBMoneyLine:\n          type: integer\n        TeamBName:\n          type: string\n        TeamBPointSpreadPayout:\n          type: integer\n        TeamBScore:\n          type: integer\n        Updated:\n          type: string\n        UpdatedUtc:\n          type: string\n        VenueId:\n          type: integer\n        VenueType:\n          type: string\n        Week:\n          type: integer\n        Winner:\n          type: string\n    Membership:\n      properties:\n        Active:\n          type: boolean\n        EndDate:\n          type: string\n        MembershipId:\n          type: integer\n        PlayerId:\n          type: integer\n        PlayerName:\n          type: string\n        StartDate:\n          type: string\n        TeamArea:\n          type: string\n        TeamId:\n          type: integer\n        TeamName:\n          type: string\n        Updated:\n          type: string\n    Player:\n      properties:\n        BirthCity:\n          type: string\n        BirthCountry:\n          type: string\n        BirthDate:\n          type: string\n        CommonName:\n          type: string\n        FirstName:\n          type: string\n        Gender:\n          type: string\n        LastName:\n          type: string\n        MatchName:\n          type: string\n        Nationality:\n          type: string\n        PlayerId:\n          type: integer\n        Position:\n          type: string\n        Updated:\n          type: string\n    Round:\n      properties:\n        CurrentRound:\n          type: boolean\n        CurrentWeek:\n          type: integer\n        EndDate:\n          type: string\n        Name:\n          type: string\n        RoundId:\n          type: integer\n        Season:\n          type: integer\n        SeasonId:\n          type: integer\n        SeasonType:\n          type: integer\n        StartDate:\n          type: string\n        Type:\n          type: string\n    Season:\n      properties:\n        CompetitionId:\n          type: integer\n        CompetitionName:\n          type: string\n        CurrentSeason:\n          type: boolean\n        EndDate:\n          type: string\n        Name:\n          type: string\n        Rounds:\n          items:\n            $ref: \"#/components/schemas/Round\"\n          type: array\n        Season:\n          type: integer\n        SeasonId:\n          type: integer\n        StartDate:\n          type: string\n    SeasonTeam:\n      properties:\n        Active:\n          type: boolean\n        Gender:\n          type: string\n        SeasonId:\n          type: integer\n        SeasonTeamId:\n          type: integer\n        Team:\n          $ref: \"#/components/schemas/Team\"\n        TeamId:\n          type: integer\n        TeamName:\n          type: string\n        Type:\n          type: string\n    Standing:\n      properties:\n        Games:\n          type: integer\n        Group:\n          type: string\n        Losses:\n          type: integer\n        Name:\n          type: string\n        Points:\n          type: integer\n        RoundId:\n          type: integer\n        ScoreAgainst:\n          type: integer\n        ScoreDifference:\n          type: integer\n        ScoreFor:\n          type: integer\n        StandingId:\n          type: integer\n        TeamId:\n          type: integer\n        Wins:\n          type: integer\n        \"[Order]\":\n          type: integer\n    Team:\n      properties:\n        Active:\n          type: boolean\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        Email:\n          type: string\n        Facebook:\n          type: string\n        Founded:\n          type: integer\n        Gender:\n          type: string\n        Instagram:\n          type: string\n        Name:\n          type: string\n        PrimaryColor:\n          type: string\n        QuaternaryColor:\n          type: string\n        SecondaryColor:\n          type: string\n        ShortName:\n          type: string\n        TeamId:\n          type: integer\n        TertiaryColor:\n          type: string\n        Twitter:\n          type: string\n        Type:\n          type: string\n        Website:\n          type: string\n        YouTube:\n          type: string\n        \"[Key]\":\n          type: string\n    TeamDetail:\n      properties:\n        Active:\n          type: boolean\n        AreaId:\n          type: integer\n        AreaName:\n          type: string\n        Email:\n          type: string\n        Facebook:\n          type: string\n        Founded:\n          type: integer\n        Gender:\n          type: string\n        Instagram:\n          type: string\n        Name:\n          type: string\n        Players:\n          items:\n            $ref: \"#/components/schemas/Player\"\n          type: array\n        PrimaryColor:\n          type: string\n        QuaternaryColor:\n          type: string\n        SecondaryColor:\n          type: string\n        ShortName:\n          type: string\n        TeamId:\n          type: integer\n        TertiaryColor:\n          type: string\n        Twitter:\n          type: string\n        Type:\n          type: string\n        Website:\n          type: string\n        YouTube:\n          type: string\n        \"[Key]\":\n          type: string\n    Venue:\n      properties:\n        Address:\n          type: string\n        Capacity:\n          type: integer\n        City:\n          type: string\n        Country:\n          type: string\n        GeoLat:\n          type: number\n        GeoLong:\n          type: number\n        Name:\n          type: string\n        Nickname1:\n          type: string\n        Nickname2:\n          type: string\n        Opened:\n          type: integer\n        VenueId:\n          type: integer\n        Zip:\n          type: string\n        \"[Open]\":\n          type: boolean\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/sportsdata.io-csgo-v3-scores-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/sportsdata.io-csgo-v3-scores-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}