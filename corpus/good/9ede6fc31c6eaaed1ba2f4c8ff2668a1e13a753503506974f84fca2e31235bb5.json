{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "fecru.local-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/fecru.local-1.0.0-swagger.yaml",
			"byteSize": 43331,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: Atlassian\n  title: Fisheye Crucible\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/Atlassian/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.18\n      format: wadl\n      url: https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fecru.wadl\n      version: \"1.0\"\n  x-providerName: fecru.local\npaths:\n  /rest-service-fecru/admin/groups/:\n    get:\n      description: Retrieve a page of groups.\n      parameters:\n        - description: filter groups by name prefix\n          in: query\n          name: prefix\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    post:\n      description: Creates a new user group.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/groups/{name}\":\n    delete:\n      description: Deletes a group by name\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a group by name.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: group name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: Updates an existing group.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/groups/{name}/users\":\n    delete:\n      description: Removes user from group\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Lists group's user names\n      operationId: listGroupUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: group name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: Adds user to group\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/permission-schemes:\n    get:\n      description: Retrieve a page of permission schemes.\n      parameters:\n        - description: permission scheme name part filter, case insensitive, optional\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    post:\n      description: Creates a new permission scheme. The new permission scheme is blank or\n        can be created from another existing permission scheme.\n      parameters:\n        - description: if set, the new permission scheme will be a copy of\n            permissionSchemeName\n          in: query\n          name: copyFrom\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}\":\n    delete:\n      description: Deletes a permission scheme by name\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a permission scheme by name\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: Updates an existing permission scheme.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}/anonymous-users\":\n    delete:\n      description: Removes anonymous-user permission [action name] from given permission\n        scheme\n      operationId: deletePermissionSchemeAnonymousUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a page of anonymous users permissions [action name] for given\n        permission scheme.\n      operationId: listAnonymousUsersPrincipalAssociation\n      parameters:\n        - description: action name\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: |-\n        Add anonymous-user permission [action name] to given permission scheme\n         List of available action names:\n      operationId: addPermissionSchemeAnonymousUsers\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}/groups\":\n    delete:\n      description: Removes group permission [group name, action name] from given permission\n        scheme\n      operationId: deletePermissionSchemeGroup\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a page of group permissions [group name, action name] for given\n        permission scheme.\n      operationId: listGroupPrincipalAssociation\n      parameters:\n        - description: group name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: action name\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Add group permission [group name, action name] to given permission\n        scheme\n         List of available action names:\n      operationId: addPermissionSchemeGroup\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}/logged-in-users\":\n    delete:\n      description: Removes logged-in-users permission [action name] from given permission\n        scheme\n      operationId: deletePermissionSchemeLoggedUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a page of logged in users permissions [action name] for given\n        permission scheme.\n      operationId: listLoggedUsersPrincipalAssociation\n      parameters:\n        - description: action name\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: |-\n        Add logged-in-users permission [action name] to given permission scheme\n         List of available action names:\n      operationId: addPermissionSchemeLoggedUsers\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}/projects\":\n    get:\n      description: Retrieve a page of projects for given permission scheme.\n      operationId: listProjects\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n  \"/rest-service-fecru/admin/permission-schemes/{name}/review-roles\":\n    delete:\n      description: Removes review-role permission [role name, action name] from given\n        permission scheme\n      operationId: deletePermissionSchemeRole\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a page of review-roles permissions [role name, action name] for\n        given permission scheme.\n      operationId: listRolesPrincipalAssociation\n      parameters:\n        - description: role name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: action name\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Add review-role permission [role name, action name] to given permission\n        scheme\n         List of available action names:\n         \n\n         List of available role names:\n      operationId: addPermissionSchemeReviewRole\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/permission-schemes/{name}/users\":\n    delete:\n      description: Removes user permission [username, action name] from given permission\n        scheme\n      operationId: deletePermissionSchemeUser\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a page of user permissions [username, action name] for given\n        permission scheme.\n      operationId: listUserPrincipalAssociation\n      parameters:\n        - description: permission scheme name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: action name\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: permission scheme name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: |-\n        Add user permission [username, action name] to given permission scheme\n         List of available action names:\n      operationId: addPermissionSchemeUser\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/projects:\n    get:\n      description: Retrieve a page of projects.\n      parameters:\n        - description: project's name part filter, optional\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: project's key part filter, optional\n          in: query\n          name: key\n          required: false\n          schema:\n            type: string\n        - description: project's default repository key part filter, optional\n          in: query\n          name: defaultRepositoryName\n          required: false\n          schema:\n            type: string\n        - description: project's permission scheme pare name filter, optional\n          in: query\n          name: permissionSchemeName\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    post:\n      description: Creates a new project.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{key}\":\n    delete:\n      description: |-\n        Deletes a project by key (including all reviews in this project).\n         Use \n         to move reviews to another project.\n      parameters:\n        - description: if true deletes reviews in project\n          in: query\n          name: deleteProjectReviews\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a project by key.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: project key\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      description: Updates an existing project.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{key}/allowed-reviewer-groups\":\n    delete:\n      description: Delete group from project's allowed reviewer group list\n      operationId: deleteAllowedReviewerGroup\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieves project's allowed reviewer groups\n      operationId: allowedReviewerGroups\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: project key\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      description: Add group to project's allowed reviewer group list\n      operationId: addAllowedReviewerGroup\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{key}/allowed-reviewer-users\":\n    delete:\n      description: Remove user from project's allowed reviewer users list\n      operationId: deleteAllowedReviewerUser\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieves project's allowed reviewer users\n      operationId: allowedReviewerUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: project key\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      description: Add user to project's allowed reviewer users list\n      operationId: addAllowedReviewerUser\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{key}/default-reviewer-groups\":\n    delete:\n      description: Delete group from project's default reviewer group list\n      operationId: deleteDefaultReviewerGroup\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieves project's default reviewer groups\n      operationId: defaultReviewerGroups\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: project key\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      description: Add group to project's default reviewer group list\n      operationId: addDefaultReviewerGroup\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{key}/default-reviewer-users\":\n    delete:\n      description: Remove user from project's default reviewer users list\n      operationId: deleteDefaultReviewerUser\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieves project's default reviewer users\n      operationId: listDefaultReviewerUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: project key\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n    put:\n      description: Add user to project's default reviewer users list\n      operationId: addDefaultReviewerUser\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/projects/{sourceProjectKey}/move-reviews/{destinationProjectKey}\":\n    parameters:\n      - description: project key of reviews and snippets source project\n        in: path\n        name: sourceProjectKey\n        required: true\n        schema:\n          type: string\n      - description: project key of reviews and snippets destination project\n        in: path\n        name: destinationProjectKey\n        required: true\n        schema:\n          type: string\n    put:\n      description: Move reviews and snippets from source project to destination project\n      operationId: moveAllReviews\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/repositories:\n    get:\n      description: Retrieve a page of repositories. Repository properties with default\n        values may not be returned.\n      parameters:\n        - description: \"filter repositories by repository type: svn, git, hg, cvs, p4, ...\"\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: filter repositories by enabled flag\n          in: query\n          name: enabled\n          required: false\n          schema:\n            type: boolean\n        - description: filter repositories by started flag\n          in: query\n          name: started\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    post:\n      description: Creates a repository.\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/repositories-v1:\n    parameters: []\n    post:\n      description: Adds repository\n      operationId: addRepository\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}\":\n    get:\n      description: Returns information about the status of the repository and the current\n        indexing status\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/\":\n    delete:\n      description: |-\n        Deletes repository.\n         Warning: you can not undo this operation\n      operationId: deleteRepository\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository to delete\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/disable\":\n    parameters:\n      - description: the key of the repository to disable\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Disables repository.\n      operationId: disableRepository\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/enable\":\n    parameters:\n      - description: the key of the repository to enable\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Enables repository.\n      operationId: enableRepository\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/reindex-discussions\":\n    parameters:\n      - description: the key of the repository to perform the operation for\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: \u003e-\n        Rebuilds the changeset discussion index for the specified repository.\n        The index is used to display changeset\n         discussions in activity streams.\n      operationId: reindexChangesetComments\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/reindex-linecount\":\n    parameters:\n      - description: the key of the repository to re-index\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: \u003e-\n        Re-indexes the linecount data used to generate the LOC graphs. The\n        linecount data will be recalculated in daily\n         buckets based on the server timezone.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/reindex-reviews\":\n    parameters:\n      - description: the key of the repository to reindex\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Re-indexes all the Crucible revision data (which revisions have been\n        reviewed)\n      operationId: doReviewRevisionReindex\n      parameters:\n        - description: if true will wait for the indexing to finish before returning\n          in: query\n          name: synchronous\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/reindex-search\":\n    parameters:\n      - description: the key of the repository to re-index.\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: \u003e-\n        Rebuilds the search index data for the given repository. This will\n        rebuild the data used to search by path,\n         commit message and comitter, also used for activity streams and JIRA integration.\n      operationId: rebuildSearchIndex\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/reindex-source\":\n    parameters:\n      - description: the key of the repository to reindex\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: \u003e-\n        Deletes the existing cache and re-indexes the repository from scratch.\n         For large or slow repositories this may take some time, during which some functionality will be unavailable.\n         This action will also restart the repository.\n      parameters:\n        - description: \u003e-\n            if true and the repository is a dvcs repository (git or mercurial)\n            it will re-clone the repository\n             before re-indexing\n          in: query\n          name: clone\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/rescan-metadata\":\n    parameters:\n      - description: the key of the repository to re-scan\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Re-scans the repository metadata for SVN and Perforce repositories. Only\n        valid for Perforce and SVN repositories.\n      parameters:\n        - description: the revision number to start at\n          in: query\n          name: from\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - description: the revision number to end at\n          in: query\n          name: to\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/scan\":\n    parameters:\n      - description: the key of the repository to run scan for\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: \u003e-\n        Runs an incremental repository index now.  This is the same operation as\n        triggered by scheduled indexing.\n         Can be called using the REST Api Token to authorize.\n      operationId: scan\n      parameters:\n        - description: if true will wait for the indexing to finish before returning\n          in: query\n          name: synchronous\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/scan-cvs\":\n    parameters:\n      - description: the key of the repository to scan\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Scans the whole CVS repository for any changes since the last scan. Only\n        valid for CVS repositories.\n      operationId: scanCvs\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/start\":\n    parameters:\n      - description: the key of the repository to start\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Starts the repository.\n      operationId: startRepository\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories-v1/{repository}/stop\":\n    parameters:\n      - description: the key of the repository to stop\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    post:\n      description: Stops the repository. Does not wait for the repository to stop before\n        returning.\n      operationId: stopRepository\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}\":\n    delete:\n      description: Deletes a repository by key\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a repository by key. Repository properties with default values\n        may not be returned.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: Updates an existing repository.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/full-incremental-index\":\n    parameters:\n      - description: the key of the repository to scan\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Runs an full incremental repository index.\n         For CVS: scans the whole CVS repository for any changes since the last scan.\n         For other repository types will trigger an incremental index.\n      operationId: fullIncrementalIndex\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/incremental-index\":\n    parameters:\n      - description: the key of the repository to stop\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Runs an incremental repository index.  This is the same operation as\n        triggered by scheduled indexing.\n         Can be called using the REST API Token to authorize.\n      operationId: incrementalIndex\n      parameters:\n        - description: if true will wait for the indexing to finish before returning\n          in: query\n          name: wait\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/permissions\":\n    get:\n      description: Retrieve repository permissions properties.\n      operationId: permissions\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Updates repository permissions properties.\n\n         Valid permission settings: any combination of useDefaults, allowAnonymous, allowLoggedIn.\n      operationId: updatePermissions\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/permissions/groups\":\n    delete:\n      description: Delete group from repository allowed groups\n      operationId: removeGroupToPermissions\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: \u003e-\n        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for\n        full repository permission administration functionality\n         Lists groups allowed to access repository.\n      operationId: permissionsGroups\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Note: use /rest-service-fecru/admin/repository-permissions/ endpoint for\n        full repository permission administration functionality\n         Adds group to repository allowed groups\n      operationId: addGroupToPermissions\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/reindex-changeset-discussion\":\n    parameters:\n      - description: the key of the repository to perform the operation for\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Rebuilds the changeset discussion index for the specified repository.\n        The index is used to display changeset\n         discussions in activity streams.\n      operationId: reindexChangesetDiscussion\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/reindex-linecount\":\n    parameters:\n      - description: the key of the repository to re-index\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Re-indexes the linecount data used to generate the LOC graphs. The\n        linecount data will be recalculated in daily\n         buckets based on the server timezone.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/reindex-reviews\":\n    parameters:\n      - description: the key of the repository to reindex\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: Re-indexes all the Crucible revision data (which revisions have been\n        reviewed)\n      operationId: reindexReviews\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/reindex-search\":\n    parameters:\n      - description: the key of the repository to re-index.\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Rebuilds the search index data for the given repository. This will\n        rebuild the data used to search by path,\n         commit message and committer, also used for activity streams and JIRA integration.\n      operationId: reindexSearch\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/reindex-source\":\n    parameters:\n      - description: the key of the repository to reindex\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e-\n        Deletes the existing cache and re-indexes the repository from scratch.\n         For large or slow repositories this may take some time, during which some functionality will be unavailable.\n         This action will also restart the repository.\n      parameters:\n        - description: if true and the repository is a dvcs repository (git or mercurial)\n            it will re-clone the repository before re-indexing\n          in: query\n          name: clone\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/rescan-metadata\":\n    parameters:\n      - description: the key of the repository to re-scan\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: Re-scans the repository metadata. Only valid for Perforce and SVN\n        repositories.\n      parameters:\n        - description: the revision number to start at\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: the revision number to end at\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/start\":\n    parameters:\n      - description: the key of the repository to start\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: Starts repository. Does not wait for the repository to start before\n        returning.\n      operationId: start\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/stop\":\n    parameters:\n      - description: the key of the repository to stop\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      description: Stops repository. Does not wait for the repository to stop before\n        returning.\n      operationId: stop\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/repositories/{repository}/updates\":\n    get:\n      description: Retrieves repository updates properties.\n      operationId: repositoryUpdates\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: repository key\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: updateRepositoryUpdates\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/repositories/~defaults/permissions:\n    get:\n      description: Retrieve default repository permissions properties.\n      operationId: defaultPermissions\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    put:\n      description: \u003e-\n        Updates default repository permissions properties.\n\n         Valid permission settings: any combination of allowAnonymous, allowLoggedIn\n      operationId: updateDefaultPermissions\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/admin/users/:\n    get:\n      description: Retrieve a page of users.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n    post:\n      description: Creates a new user. Tries to add the user to fisheye-users and\n        crucible-users groups if those exist.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/users/{name}\":\n    delete:\n      description: Deletes a user by name\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Retrieve a user by name.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: user name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: Updates an existing user.\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/admin/users/{name}/groups\":\n    delete:\n      description: Removes user from group\n      responses:\n        \"200\":\n          description: Successful Response\n    get:\n      description: Lists user's group names\n      operationId: listUserGroups\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: user name\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: Adds user to group\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/auth/login:\n    parameters: []\n    post:\n      description: Get the user authentication token.\n      operationId: login\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/indexing-status-v1/status/{repository}\":\n    get:\n      description: Returns indexing status of given repository.\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the key of the repository to get status of\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\n  /rest-service-fecru/recently-visited-v1:\n    get:\n      description: Get a list of recently visited items for the currently logged in user.\n      operationId: getRecent\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/detailed:\n    get:\n      description: Get a list of recently visisted items for the currently logged in user,\n        including the detailed entities.\n      operationId: getRecentDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/projects:\n    get:\n      description: Get a list of recently visited projects for the currently logged in user.\n      operationId: getRecentProjects\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/projects/detailed:\n    get:\n      description: Get a list of recently visited projects for the currently logged in\n        Project, including the detailed entities.\n      operationId: getRecentProjectsDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/repositories:\n    get:\n      description: Get a list of recently visited repositories for the currently logged in\n        user.\n      operationId: getRecentRepositories\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/repositories/detailed:\n    get:\n      description: Get a list of recently visisted repositories for the currently logged in\n        user, including the detailed entities.\n      operationId: getRecentRepositoriesDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/reviews:\n    get:\n      description: Get a list of recently visited reviews for the currently logged in user.\n      operationId: getRecentReviews\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/reviews/detailed:\n    get:\n      description: Get a list of recently visited reviews for the currently logged in user,\n        including the detailed entities.\n      operationId: getRecentReviewsDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/snippets:\n    get:\n      description: Get a list of recently visited snippets for the currently logged in user.\n      operationId: getRecentSnippets\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/snippets/detailed:\n    get:\n      description: Get a list of recently visited snippets for the currently logged in\n        user, including the detailed entities.\n      operationId: getRecentSnippetsDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/users:\n    get:\n      description: Get a list of recently visited users for the currently logged in user.\n      operationId: getRecentUsers\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/recently-visited-v1/users/detailed:\n    get:\n      description: Get a list of recently visited users for the currently logged in user,\n        including the detailed entities.\n      operationId: getRecentUsersDetailed\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/server-v1:\n    get:\n      description: Provides general information about the server's configuration.\n      operationId: getInfo\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters: []\n  /rest-service-fecru/share-content-v1/share:\n    parameters: []\n    post:\n      operationId: doShareContent\n      responses:\n        \"200\":\n          description: Successful Response\n  /rest-service-fecru/user-prefs-v1:\n    parameters: []\n    post:\n      description: \u003e-\n        Using POST method to set a user preference.\n         If repo is not set, the preference will be recognised as a global preference.\n      operationId: setPref\n      responses:\n        \"200\":\n          description: Successful Response\n  \"/rest-service-fecru/user-prefs-v1/{property}\":\n    get:\n      description: Getting user's global preference\n      operationId: getGlobalPref\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the property(preference) name\n        in: path\n        name: property\n        required: true\n        schema:\n          type: string\n  \"/rest-service-fecru/user-prefs-v1/{repository}/{property}\":\n    get:\n      description: Getting user's preference related to a certain repository\n      operationId: getRepoPref\n      responses:\n        \"200\":\n          description: Successful Response\n    parameters:\n      - description: the property(preference) name\n        in: path\n        name: property\n        required: true\n        schema:\n          type: string\n      - description: the key of the repository\n        in: path\n        name: repository\n        required: true\n        schema:\n          type: string\nservers:\n  - url: http://fecru.local/context/\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/fecru.local-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/fecru.local-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}