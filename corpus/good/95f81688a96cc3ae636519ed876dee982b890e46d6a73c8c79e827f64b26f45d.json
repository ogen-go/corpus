{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Lelberto/kaktus"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "config/swagger.yml",
			"byteSize": 10002,
			"content": "openapi: 3.0.0\ninfo:\n  description: API documentation\n  version: \"1.0.0\"\n  title: API documentation\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: \"https://virtserver.swaggerhub.com/Lelberto/kaktus/1.0.0\"\n  - url: \"https://api.example.com/server1\"\n  - url: \"https://api.example.com/server2\"\ntags:\n  - name: auth\n    description: Authentication\n  - name: users\n    description: Access to users\npaths:\n  /auth/accessToken:\n    post:\n      tags:\n        - auth\n      summary: Access token generation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                refresh_token:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: Access token generated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n        '404':\n          description: Invalid refresh token\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n  /auth/refreshToken:\n    post:\n      tags:\n        - auth\n      summary: Refresh token and access token generation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: Refresh token and access token generated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                  refresh_token:\n                    type: string\n                  links:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Link\"\n        '404':\n          description: Email not found or invalid password\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n  /users:\n    get:\n      tags:\n        - users\n      summary: Gets all users\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n    post:\n      tags:\n        - users\n      summary: Creates a new user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  links:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Link\"\n        \"400\":\n          description: Validation failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n  \"/users/{userId}\":\n    parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: integer\n    get:\n      tags:\n        - users\n      summary: Gets a specific user\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  user:\n                    $ref: \"#/components/schemas/User\"\n                  links:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Link\"\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n    put:\n      tags:\n        - users\n      summary: Modifies an user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  links:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Link\"\n        \"400\":\n          description: Validation failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n    patch:\n      tags:\n        - users\n      summary: Updates an user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  links:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Link\"\n        \"400\":\n          description: Validation failed\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n    delete:\n      tags:\n        - users\n      summary: Deletes an user\n      responses:\n        \"204\":\n          description: Deleted\n        \"404\":\n          description: User not found\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/APIError\"\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        password:\n          type: string\n    Link:\n      type: object\n      properties:\n        rel:\n          type: string\n        action:\n          type: string\n          enum: [GET, POST, PUT, PATCH, DELETE]\n        href:\n          type: string\n    APIError:\n      type: object\n      properties:\n        error:\n          type: string\n        error_description:\n          type: string\n",
			"canonicalURL": "/github.com/Lelberto/kaktus@895e613b7a16347ac8c1a6418224ad39bf2923cb/-/blob/config/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Lelberto/kaktus/blob/895e613b7a16347ac8c1a6418224ad39bf2923cb/config/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}