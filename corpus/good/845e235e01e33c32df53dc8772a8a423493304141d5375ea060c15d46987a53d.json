{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/notesclub/old-notesclub"
		},
		"file": {
			"name": "notes.yaml",
			"size": 0,
			"path": "docs/API/v1/notes.yaml",
			"byteSize": 4756,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\npaths:\n  \"/v1/notes/{id}/related\":\n    get:\n      summary: retrieves related notes\n      tags:\n      - notes\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: include_ancestors\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: include_descendants\n        in: query\n        required: false\n        schema:\n          type: boolean\n      - name: include_user\n        in: query\n        required: false\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/notes_array\"\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/rfc7807\"\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/rfc7807\"\nservers:\n- url: https://{defaultHost}\n  variables:\n    defaultHost:\n      default: api.notes.club\ncomponents:\n  schemas:\n    notes_array:\n      description: Array of Notes\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/note\"\n    user:\n      description: User data\n      additionalProperties: false\n      properties:\n        id:\n          description: User id\n          type: integer\n        name:\n          description: Name of the user\n          type: string\n          nullable: true\n        username:\n          description: Username\n          type: string\n        avatar_url:\n          description: URL of user's avatar\n          type: string\n          format: URI\n          nullable: true\n        created_at:\n          description: Creation date and time\n          type: string\n          format: date-time\n        updated_at:\n          description: Last modification date and time\n          type: string\n          format: date-time\n      required:\n      - id\n      - name\n      - username\n      - created_at\n      - updated_at\n    note:\n      description: Note with user and descendants\n      type: object\n      allOf:\n      - \"$ref\": \"#/components/schemas/note_basic\"\n      properties:\n        descendants:\n          \"$ref\": \"#/components/schemas/note_descendants\"\n        user:\n          \"$ref\": \"#/components/schemas/user\"\n    note_descendants:\n      description: Descendants notes of a note\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/note_basic\"\n    rfc7807:\n      description: Schema for rfc7807 (errors)\n      properties:\n        type:\n          description: A URI reference [RFC3986] that identifies the problem type.\n          type: string\n          format: uri\n        title:\n          description: A short, human-readable summary of the problem type.\n          type: string\n        status:\n          description: The HTTP status code ([RFC7231], Section 6) generated by the\n            origin server for this occurrence of the problem.\n          type: number\n        instance:\n          description: A URI reference that identifies the specific occurrence of\n            the problem.\n          type: string\n        detail:\n          description: A human-readable explanation specific to this occurrence of\n            the problem.\n          type: string\n      required:\n      - type\n    note_basic:\n      description: Basic Note data\n      properties:\n        id:\n          description: Note id\n          type: integer\n        content:\n          description: Note content\n          type: string\n          nullable: true\n        user_id:\n          description: Id of the note's user\n          type: integer\n          nullable: true\n        ancestry:\n          description: 'Id of the note''s parents separated by ''/''. For example:\n            ''46/51/52/53'' where 53 would be the parent, 52 the grandparent, etc.'\n          type: string\n          nullable: true\n        created_at:\n          description: Creation date and time\n          type: string\n          format: date-time\n        updated_at:\n          description: Last modification date and time\n          type: string\n          format: date-time\n        slug:\n          description: Slug of the note\n          type: string\n        position:\n          description: Note's position respect to its siblings, if any. Starts at\n            1. For root notes its value is 1\n          type: integer\n          nullable: true\n      required:\n      - id\n      - content\n      - user_id\n      - ancestry\n      - created_at\n      - updated_at\n      - slug\n      - position\n",
			"canonicalURL": "/github.com/notesclub/old-notesclub@b043403516592a01c9b9d8af11ff81bbcdf62483/-/blob/docs/API/v1/notes.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/notesclub/old-notesclub/blob/b043403516592a01c9b9d8af11ff81bbcdf62483/docs/API/v1/notes.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}