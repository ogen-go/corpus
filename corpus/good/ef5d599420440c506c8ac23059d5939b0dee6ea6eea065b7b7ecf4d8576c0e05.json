{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gojek/turing"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "engines/router/api/openapi.yaml",
			"byteSize": 8510,
			"content": "openapi: 3.0.0\ninfo:\n  description: Turing Service API Spec\n  version: 0.0.1\n  title: TURING API\ntags:\n  - name: Router\n    description: |\n      Router type is chosen at deployment and can either be a Default Router or an Ensembling Router.\n      \n      Both routers broadcast the request to all configured routes.\n      \n      The Default Router selects one response from an ordered list of preferred routes.\n      'Preferred Route' depends on two configurations.\n      Firstly, if an experiment runner is used, the segmentation unit is extracted from the request,\n      its treatment retrieved from the experiment engine, and the corresponding route is chosen.\n      Secondly, a default route may be configured for the router whose response will be selected if the treatment's route fails\n      or if there is no experiment.\n\n      The Ensembling Router collects responses from all configured routes, along with the experiment treatment, if a runner is used.\n      The combined response is returned. This is intended to be used as input to the Turing Service's Ensembler component.\n  - name: Internal\n    description: A set of internal APIs that are not intended for external users but may be used to get additional information about the app.\n\npaths:\n  \"/predict\":\n    post:\n      tags: [\"Router\"]\n      summary: Exercise the Turing Service workflow (Enricher -\u003e Router -\u003e Ensembler).\n      description: |\n        Both the Enricher and the Ensembler are optional.\n\n        Using an Experiment Planner is optional and has an impact on the input and the output.\n        When Experiment Planner is used, a segmentation field is expected to be set, either in the header or in the request body.\n        The name of this field is configurable per router deployment. In the example below, 'customer_id' is used as the segmentation field.\n\n        The request and response schemas are defined by the Enricher / Route / Ensembler endpoints and the Turing Service has no control over these.\n        However, there are some components of the request / response body that are expected /\n        determined by the Turing Service.\n        This section only describes those components.\n\n        When the Default Router is used, the response from the Route Endpoint is returned as is, according to the chosen route.\n        When the Ensembling Router is used, the route responses, along with the experiment treatment, if used, are collected and returned.\n      parameters:\n        - in: header\n          name: customer_id\n          description: Segmentation Field\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: |\n          The request body schema is defined by the Enricher (if enabled) and endpoints configured for the Router.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JSONBodyWithSegField'\n      responses:\n        200:\n          description: \"OK\"\n          headers:\n            turing-req-id:\n              schema:\n                $ref: '#/components/schemas/TuringReqId'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnsemblingRouterResponse'\n              examples:\n                EnsemblingRouterSuccess:\n                  value:\n                    request:\n                      customer_id: UW34n8Ds\n                    response:\n                      experiment:\n                        configuration:\n                          experiment_name: turing_experiment_001_pricing\n                          variant: surge-v2\n                          configuration:\n                            additive_weight: 0.2\n                            multiplicative_weight: 0.005\n                      route_responses:\n                        - route: surge-v2\n                          data:\n                            score: 25\n                          is_default: false\n                        - route: control\n                          data:\n                            score: 22\n                          is_default: true\n                EnsemblingRouterPartialFailure:\n                  value:\n                    request:\n                      customer_id: UW34n8Ds\n                    response:\n                      experiment:\n                          error: Could not retrieve experiment treatment - access denied\n                      route_responses:\n                        - route: surge-v2\n                          data:\n                            code: 500\n                            error: Cross domain request only supports POST\n                          is_default: false\n                        - route: control\n                          data:\n                            score: 22\n                          is_default: true\n                DefaultRouterSuccess:\n                  value:\n                    score: 25\n                  \n        \n        500:\n          description: |\n            Internal Server Error - this is returned by the Router when unexpected errors occur\n            (eg: the enricher / ensembler endpoints are not reachable)\n          headers:\n            turing-req-id:\n              schema:\n                $ref: '#/components/schemas/TuringReqId'\n\n        502:\n          description: |\n            Bad Gateway Error - this is returned by the Router on upstream failures\n            (eg: the model endpoint is not reachable or no response is received within the timeout)\n          headers:\n            turing-req-id:\n              schema:\n                $ref: '#/components/schemas/TuringReqId'\n        \n  \"/internal/version\":\n    get:\n      tags: [\"Internal\"]\n      summary: Display build and release information\n      responses:\n        200:\n          description: \"OK\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionInfoResponse'\n      \ncomponents:\n  schemas:\n    VersionInfoResponse:\n      type: object\n      description: Build and Release Version info\n      properties:\n        version:\n          type: string\n          example: 0.0.4-build.4-c01d8fc\n        branch:\n          type: string\n          example: HEAD\n        build_user:\n          type: string\n          example: root@runner-9SUxwXaC-project-13869-concurrent-0\n        build_date:\n          type: string\n          example: 2020-04-01T03:09:30+0000\n        go_version:\n          type: string\n          example: go1.14\n\n    TuringReqId:\n      type: string\n      description: Unique per-request Id generated by the Turing Service\n      example: \"11111111-2222-3333-aaaa-bbbbbbbbbbbb\"\n    \n    Treatment:\n      type: object\n      description: Raw JSON treatment from the experiment engine\n      example:\n        experiment_name: turing-experiment-001\n        variant: treatment-1\n        configuration:\n          additive_weight: 0.2\n          multiplicative_weight: 0.005\n    \n    RouteResponse:\n      type: object\n      properties:\n        route:\n          type: string\n          description: Route name\n          example: control\n        data:\n          type: object\n          description: Raw JSON route response\n          example:\n            id: g0387mdk\n            score: 25\n        is_default:\n          type: boolean\n          description: If the route was specified as the default route in the deployment\n          example: true\n    \n    JSONBodyWithSegField:\n      type: object\n      properties:\n        customer_id:\n          type: string\n          description: The field name must match the segmentation field configured in the deployment\n          example: UW34n8Ds\n    \n    EnsemblingRouterResponse:\n      type: object\n      properties:\n        request:\n          type: object\n          description: The original JSON request payload, unmodified\n        response:\n          type: object\n          description: The JSON response from the (default / ensembling) router, unmodified\n          properties:\n            experiment:\n              type: object\n              properties:\n                configuration:\n                  $ref: '#/components/schemas/Treatment'\n                error:\n                  type: string\n                  description: Error message from experiment engine\n            route_responses:\n              type: array\n              description: A list of responses from all configured routes\n              items:\n                $ref: '#/components/schemas/RouteResponse'\n",
			"canonicalURL": "/github.com/gojek/turing@1af7d9a5519ec6632f1150e53132bd1bb8d62084/-/blob/engines/router/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gojek/turing/blob/1af7d9a5519ec6632f1150e53132bd1bb8d62084/engines/router/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}