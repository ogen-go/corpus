{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/epam/covid-resistance-back-end"
		},
		"file": {
			"name": "public_endpoints.yaml",
			"size": 0,
			"path": "deployment/open-api/public_endpoints.yaml",
			"byteSize": 11346,
			"content": "openapi: 3.0.6\ninfo:\n  title: Public endpoints\n  version: v1\n  description: Available API's.\npaths:\n  /user/register:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - User Service\n      summary: Registers the user. \n      description: Called on initial registration. Validate the uniqueness of the user token.\n      operationId: \"registerUser\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequest'\n      responses:\n        '200':\n          description: Registration is successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenAndProfileResponse'\n  /user/refresh:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - User Service\n      summary: Refreshes the access token. \n      description: Called when the access token has expired.\n      operationId: \"refreshToken\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefreshTokenRequest'\n      responses:\n        '200':\n          description: New token is provided.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n  /user/login:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - User Service\n      summary: Logins the user.  \n      description: Called when an existing user reinstalls the app.\n      operationId: \"login\"      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n      responses:\n        '200':\n          description: Login is successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginResponse'\n  /user/profile:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    get:\n      tags:\n        - User Service\n      summary: Gets the user profile.  \n      description: Called whenever the mobile needs the user state and profile metadata.\n      operationId: \"getUserProfile\"\n      responses:\n        '200':\n          description: Returns the user state and profile metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileResponse'\n  /medical/register:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - User Service\n      summary: Registers the user as a doctor. \n      description: Called when a user wants to register as a doctor.\n      operationId: \"registerMedical\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterDoctorRequest'\n      responses:\n        '200':\n          description: Registration is successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileResponse'\n  /notification/setup:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - User Service\n      summary: Setups push notifications. \n      description: Called by the mobile to share the push notification token and mobile OS identification.\n      operationId: \"setupNotifications\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationInfo'\n      responses:\n        '200':\n          description: Push notification token is saved successfully.\n  /infection/status/init:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - Infection Service\n      summary: Initiates a status change request.\n      description: Called when a doctor initiates a status change request.\n      operationId: \"initStatusChange\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeRequest'\n      responses:\n        '200':\n          description: Successful initiation of a status change request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalCode'\n  /infection/status/accept:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    post:\n      tags:\n        - Infection Service\n      summary: Accepts the status change request. \n      description: Called when the user accepts the status change request.\n      operationId: \"acceptStatusChange\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptRequest'\n      responses:\n        '200':\n          description: Status change request is accepted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileResponse'\n  /info/recommendations:\n    parameters:\n      - $ref: '#/components/parameters/correlationId'\n    get:\n      tags:\n        - Info Service\n      summary: Searches for recommendations.  \n      description: Retrieves recommendations according to the status.\n      operationId: \"getRecommendations\"\n      parameters:\n        - in: query\n          name: statusId\n          required: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n      responses:\n        '200':\n          description: Recommendations according to the status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RecommendationsList'\ncomponents:\n  parameters:\n    correlationId:\n      in: header\n      name: X-Correlation-Id\n      schema:\n        type: string\n  schemas:\n    AcceptRequest:\n      type: object\n      properties:\n        meetings:\n          $ref: '#/components/schemas/MeetingsList'\n        medicalCode:\n          type: string\n      required:\n        - medicalCode\n    RegisterRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          example: \"username\"\n        password:\n          type: string\n          example: \"password\"\n        userToken:\n          type: string\n          example: \"6pEACc2lSTCSt4x1FcWCNw\"\n      required:\n        - username\n        - password\n        - userToken\n    RegisterDoctorRequest:\n      type: object\n      properties:\n        healthSecurityId:\n          type: string\n          example: \"UCS265DA\"\n      required:\n        - healthSecurityId\n    NotificationInfo:\n      type: object\n      properties:\n        pushNotificationToken:\n          type: string\n        pushNotificationTarget:\n          type: string\n      required:\n        - pushNotificationToken\n        - pushNotificationTarget\n    LoginRequest:\n      type: object\n      properties:\n        username:\n          type: string\n          example: \"Username\"\n        password:\n          type: string\n          example: \"Password\"\n      required:\n        - username\n        - password\n    MeetingsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Meeting'\n    Meeting:\n      type: object\n      properties:\n        userToken:\n          type: string\n          example: \"6pEACc2lSTCSt4x1FcWCNw\"\n        timestamp:\n          type: string\n          format: date-time\n      required:\n        - userToken\n        - timestamp\n    ChangeRequest:\n      type: object\n      properties:\n        statusId:\n          type: integer\n          format: int32\n          example: 3\n        statusChangedOn:\n          type: string\n          format: date-time\n        comment:\n          type: string\n          example: \"The patient was tested at XXX hospital and is positive.\"\n      required:\n        - statusId\n        - statusChangedOn          \n    MedicalCode:\n      type: object\n      properties:\n        medicalCode:\n          type: string\n          description: \"One-time-use medical code\"\n          example: \"DHB6FXS1\"\n        expiresAt:\n          type: string\n          format: date-time\n    RecommendationsList:\n      type: object\n      properties:\n        status:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Recommendation'\n    Recommendation:\n      type: object\n      properties:\n        title:\n          type: string\n          example: \"UK Government\"\n        subTitle:\n          type: string\n          example: \"Coronavirus (COVID-19): What you need to do\"\n        description:\n          type: string\n          example: \"Stay at home\"\n    Statuses:\n      type: object\n      properties:\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/Status'\n        default:\n          type: integer\n          format: int32\n          example: 1\n        onExposure: \n          type: integer\n          format: int32\n          example: 2\n    Status:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 2\n        name:\n          type: string\n          example: \"At Risk\"\n        severity:\n          type: integer\n          format: int32\n          example: 1\n          enum: [0, 1, 2]\n        description:\n          type: string\n          example: \"Your Health Status has changed. Please follow urgently your behaviour recommendations.\"\n        url:\n          type: string\n        requiresContactDiscovery:\n          type: boolean\n          example: false\n    UserProfileResponse:\n      type: object\n      properties:\n        userProfile:\n          $ref: '#/components/schemas/UserState'\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n    Metadata:\n      type: object\n      properties:\n        statuses:\n          $ref: '#/components/schemas/Statuses'\n    UserState:\n      type: object\n      properties:\n        statusId:\n          type: integer\n          format: int32\n          example: 1\n        statusChangedOn:\n          type: string\n          format: date-time\n        username:\n          type: string\n        roles:\n          type: array\n          items:\n            type: string\n    Token:\n      type: object\n      properties:\n        accessToken: \n          type: string\n        refreshToken:\n          type: string\n        expiresIn:\n          type: integer\n          format: int32\n    TokenResponse:\n      type: object\n      properties:\n        token:\n          $ref: '#/components/schemas/Token'\n    RefreshTokenRequest:\n      type: object\n      properties:\n        refreshToken:\n          type: string\n      required:\n        - refreshToken\n    TokenAndProfileResponse:\n      type: object\n      properties:\n        token:\n          $ref: '#/components/schemas/Token'\n        userProfile:\n          $ref: '#/components/schemas/UserState'\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n    LoginResponse:\n      type: object\n      properties:\n        userToken:\n          type: string\n        token:\n          $ref: '#/components/schemas/Token'\n        userProfile:\n          $ref: '#/components/schemas/UserState'\n        metadata:\n          $ref: '#/components/schemas/Metadata'",
			"canonicalURL": "/github.com/epam/covid-resistance-back-end@4a28ec3456eb0df6469732cb59fde443f15df432/-/blob/deployment/open-api/public_endpoints.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/epam/covid-resistance-back-end/blob/4a28ec3456eb0df6469732cb59fde443f15df432/deployment/open-api/public_endpoints.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}