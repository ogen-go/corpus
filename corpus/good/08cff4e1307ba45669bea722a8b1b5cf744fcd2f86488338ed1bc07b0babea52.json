{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "oauth_authorizations.yaml",
			"size": 0,
			"path": "providers/src/github/v0.1.1/services/oauth_authorizations.yaml",
			"byteSize": 65296,
			"content": "paths:\n  /applications/grants:\n    get:\n      summary: List your grants\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        You can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/list-grants\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#list-your-grants\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n        - name: client_id\n          in: query\n          required: false\n          description: The client ID of your GitHub app.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/application-grant'\n              examples:\n                default:\n                  $ref: '#/components/examples/application-grant-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n  /applications/grants/{grant_id}:\n    get:\n      summary: Get a single grant\n      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/get-grant\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-grant\n      parameters:\n        - $ref: '#/components/parameters/grant-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/application-grant'\n              examples:\n                default:\n                  $ref: '#/components/examples/application-grant'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n    delete:\n      summary: Delete a grant\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        Deleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized).\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/delete-grant\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#delete-a-grant\n      parameters:\n        - $ref: '#/components/parameters/grant-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n  /authorizations:\n    get:\n      summary: List your authorizations\n      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/list-authorizations\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations\n      parameters:\n        - $ref: '#/components/parameters/per-page'\n        - $ref: '#/components/parameters/page'\n        - name: client_id\n          in: query\n          required: false\n          description: The client ID of your GitHub app.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization-items'\n          headers:\n            Link:\n              $ref: '#/components/headers/link'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '404':\n          $ref: '#/components/responses/not_found'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n    post:\n      summary: Create a new authorization\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\n        Creates OAuth tokens using [Basic Authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n        To create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\n        You can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://docs.github.com/articles/creating-an-access-token-for-command-line-use).\n\n        Organizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://docs.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on).\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/create-authorization\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#create-a-new-authorization\n      parameters: []\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                scopes:\n                  description: A list of scopes that this authorization is in.\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - public_repo\n                    - user\n                  nullable: true\n                note:\n                  description: A note to remind you what the OAuth token is for.\n                  type: string\n                  example: Update all gems\n                note_url:\n                  description: A URL to remind you what app the OAuth token is for.\n                  type: string\n                client_id:\n                  description: The OAuth app client key for which to create the token.\n                  maxLength: 20\n                  type: string\n                client_secret:\n                  description: The OAuth app client secret for which to create the token.\n                  maxLength: 40\n                  type: string\n                fingerprint:\n                  description: A unique string to distinguish an authorization from others created for the same client ID and user.\n                  type: string\n      responses:\n        '201':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization'\n          headers:\n            Location:\n              example: https://api.github.com/authorizations/1\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '410':\n          $ref: '#/components/responses/gone'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n  /authorizations/clients/{client_id}:\n    put:\n      summary: Get-or-create an authorization for a specific app\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\n        Creates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\n        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/get-or-create-authorization-for-app\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app\n      parameters:\n        - $ref: '#/components/parameters/client-id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                client_secret:\n                  description: The OAuth app client secret for which to create the token.\n                  maxLength: 40\n                  type: string\n                scopes:\n                  description: A list of scopes that this authorization is in.\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - public_repo\n                    - user\n                  nullable: true\n                note:\n                  description: A note to remind you what the OAuth token is for.\n                  type: string\n                  example: Update all gems\n                note_url:\n                  description: A URL to remind you what app the OAuth token is for.\n                  type: string\n                fingerprint:\n                  description: A unique string to distinguish an authorization from others created for the same client ID and user.\n                  type: string\n              required:\n                - client_secret\n              type: object\n      responses:\n        '200':\n          description: if returning an existing token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                response-if-returning-an-existing-token:\n                  $ref: '#/components/examples/authorization-response-if-returning-an-existing-token-2'\n          headers:\n            Location:\n              example: https://api.github.com/authorizations/1\n              schema:\n                type: string\n        '201':\n          description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization'\n          headers:\n            Location:\n              example: https://api.github.com/authorizations/1\n              schema:\n                type: string\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n  /authorizations/clients/{client_id}/{fingerprint}:\n    put:\n      summary: Get-or-create an authorization for a specific app and fingerprint\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        **Warning:** Apps must use the [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\n        This method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\n        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/get-or-create-authorization-for-app-and-fingerprint\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#get-or-create-an-authorization-for-a-specific-app-and-fingerprint\n      parameters:\n        - $ref: '#/components/parameters/client-id'\n        - name: fingerprint\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                client_secret:\n                  description: The OAuth app client secret for which to create the token.\n                  maxLength: 40\n                  type: string\n                scopes:\n                  description: A list of scopes that this authorization is in.\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - public_repo\n                    - user\n                  nullable: true\n                note:\n                  description: A note to remind you what the OAuth token is for.\n                  type: string\n                  example: Update all gems\n                note_url:\n                  description: A URL to remind you what app the OAuth token is for.\n                  type: string\n              required:\n                - client_secret\n              type: object\n      responses:\n        '200':\n          description: if returning an existing token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                response-if-returning-an-existing-token:\n                  $ref: '#/components/examples/authorization-response-if-returning-an-existing-token'\n          headers:\n            Location:\n              example: https://api.github.com/authorizations/1\n              schema:\n                type: string\n        '201':\n          description: Response if returning a new token\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization-3'\n          headers:\n            Location:\n              example: https://api.github.com/authorizations/1\n              schema:\n                type: string\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n  /authorizations/{authorization_id}:\n    get:\n      summary: Get a single authorization\n      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/get-authorization\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#get-a-single-authorization\n      parameters:\n        - $ref: '#/components/parameters/authorization-id'\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization-2'\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n    patch:\n      summary: Update an existing authorization\n      description: |-\n        **Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n        If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://docs.github.com/rest/overview/other-authentication-methods#working-with-two-factor-authentication).\"\n\n        You can only send one of these scope keys at a time.\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/update-authorization\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#update-an-existing-authorization\n      parameters:\n        - $ref: '#/components/parameters/authorization-id'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                scopes:\n                  description: A list of scopes that this authorization is in.\n                  type: array\n                  items:\n                    type: string\n                  example:\n                    - public_repo\n                    - user\n                  nullable: true\n                add_scopes:\n                  description: A list of scopes to add to this authorization.\n                  type: array\n                  items:\n                    type: string\n                remove_scopes:\n                  description: A list of scopes to remove from this authorization.\n                  type: array\n                  items:\n                    type: string\n                note:\n                  description: A note to remind you what the OAuth token is for.\n                  type: string\n                  example: Update all gems\n                note_url:\n                  description: A URL to remind you what app the OAuth token is for.\n                  type: string\n                fingerprint:\n                  description: A unique string to distinguish an authorization from others created for the same client ID and user.\n                  type: string\n      responses:\n        '200':\n          description: Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/authorization'\n              examples:\n                default:\n                  $ref: '#/components/examples/authorization-2'\n        '422':\n          $ref: '#/components/responses/validation_failed'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\n    delete:\n      summary: Delete an authorization\n      description: '**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).'\n      tags:\n        - oauth-authorizations\n      operationId: oauth-authorizations/delete-authorization\n      externalDocs:\n        description: API method documentation\n        url: https://docs.github.com/rest/reference/oauth-authorizations#delete-an-authorization\n      parameters:\n        - $ref: '#/components/parameters/authorization-id'\n      responses:\n        '204':\n          description: Response\n        '304':\n          $ref: '#/components/responses/not_modified'\n        '401':\n          $ref: '#/components/responses/requires_authentication'\n        '403':\n          $ref: '#/components/responses/forbidden'\n      x-github:\n        githubCloudOnly: false\n        enabledForGitHubApps: false\n        removalDate: '2020-11-13'\n        deprecationDate: '2020-02-14'\n        category: oauth-authorizations\n        subcategory: null\n      deprecated: true\ncomponents:\n  schemas:\n    application-grant:\n      title: Application Grant\n      description: The authorization associated with an OAuth Access.\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/applications/grants/1\n        app:\n          type: object\n          properties:\n            client_id:\n              type: string\n            name:\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - client_id\n            - name\n            - url\n        created_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T17:26:27Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2011-09-06T20:39:23Z'\n        scopes:\n          type: array\n          items:\n            type: string\n          example:\n            - public_repo\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n      required:\n        - app\n        - id\n        - scopes\n        - url\n        - created_at\n        - updated_at\n    nullable-simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n      nullable: true\n    basic-error:\n      title: Basic Error\n      description: Basic Error\n      type: object\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        url:\n          type: string\n        status:\n          type: string\n    authorization:\n      title: Authorization\n      description: The authorization for an OAuth app, GitHub App, or a Personal Access Token.\n      type: object\n      properties:\n        id:\n          type: integer\n        url:\n          type: string\n          format: uri\n        scopes:\n          description: A list of scopes that this authorization is in.\n          type: array\n          items:\n            type: string\n          nullable: true\n        token:\n          type: string\n        token_last_eight:\n          type: string\n          nullable: true\n        hashed_token:\n          type: string\n          nullable: true\n        app:\n          type: object\n          properties:\n            client_id:\n              type: string\n            name:\n              type: string\n            url:\n              type: string\n              format: uri\n          required:\n            - client_id\n            - name\n            - url\n        note:\n          type: string\n          nullable: true\n        note_url:\n          type: string\n          format: uri\n          nullable: true\n        updated_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        fingerprint:\n          type: string\n          nullable: true\n        user:\n          $ref: '#/components/schemas/nullable-simple-user'\n        installation:\n          $ref: '#/components/schemas/nullable-scoped-installation'\n        expires_at:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n        - app\n        - id\n        - note\n        - note_url\n        - scopes\n        - token\n        - hashed_token\n        - token_last_eight\n        - fingerprint\n        - url\n        - created_at\n        - updated_at\n        - expires_at\n    nullable-scoped-installation:\n      title: Scoped Installation\n      type: object\n      properties:\n        permissions:\n          $ref: '#/components/schemas/app-permissions'\n        repository_selection:\n          description: Describe whether all repositories have been selected or there's a selection involved\n          type: string\n          enum:\n            - all\n            - selected\n        single_file_name:\n          type: string\n          example: config.yaml\n          nullable: true\n        has_multiple_single_files:\n          type: boolean\n          example: true\n        single_file_paths:\n          type: array\n          items:\n            type: string\n          example:\n            - config.yml\n            - .github/issue_TEMPLATE.md\n        repositories_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        account:\n          $ref: '#/components/schemas/simple-user'\n      required:\n        - permissions\n        - repository_selection\n        - single_file_name\n        - repositories_url\n        - account\n      nullable: true\n    app-permissions:\n      title: App Permissions\n      type: object\n      description: The permissions granted to the user-to-server access token.\n      properties:\n        actions:\n          type: string\n          description: 'The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        administration:\n          type: string\n          description: 'The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        checks:\n          type: string\n          description: 'The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        contents:\n          type: string\n          description: 'The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        deployments:\n          type: string\n          description: 'The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        environments:\n          type: string\n          description: 'The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        issues:\n          type: string\n          description: 'The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        metadata:\n          type: string\n          description: 'The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        packages:\n          type: string\n          description: 'The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pages:\n          type: string\n          description: 'The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        pull_requests:\n          type: string\n          description: 'The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        repository_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        secret_scanning_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        security_events:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        single_file:\n          type: string\n          description: 'The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        statuses:\n          type: string\n          description: 'The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        vulnerability_alerts:\n          type: string\n          description: 'The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        workflows:\n          type: string\n          description: 'The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.'\n          enum:\n            - write\n        members:\n          type: string\n          description: 'The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_administration:\n          type: string\n          description: 'The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_hooks:\n          type: string\n          description: 'The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_plan:\n          type: string\n          description: 'The level of permission to grant the access token for viewing an organization''s plan. Can be one of: `read`.'\n          enum:\n            - read\n        organization_projects:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.'\n          enum:\n            - read\n            - write\n            - admin\n        organization_packages:\n          type: string\n          description: 'The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_secrets:\n          type: string\n          description: 'The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_self_hosted_runners:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        organization_user_blocking:\n          type: string\n          description: 'The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n        team_discussions:\n          type: string\n          description: 'The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.'\n          enum:\n            - read\n            - write\n      example:\n        contents: read\n        issues: read\n        deployments: write\n        single_file: read\n    simple-user:\n      title: Simple User\n      description: Simple User\n      type: object\n      properties:\n        name:\n          nullable: true\n          type: string\n        email:\n          nullable: true\n          type: string\n        login:\n          type: string\n          example: octocat\n        id:\n          type: integer\n          example: 1\n        node_id:\n          type: string\n          example: MDQ6VXNlcjE=\n        avatar_url:\n          type: string\n          format: uri\n          example: https://github.com/images/error/octocat_happy.gif\n        gravatar_id:\n          type: string\n          example: 41d064eb2195891e12d0413f63227ea7\n          nullable: true\n        url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat\n        html_url:\n          type: string\n          format: uri\n          example: https://github.com/octocat\n        followers_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/followers\n        following_url:\n          type: string\n          example: https://api.github.com/users/octocat/following{/other_user}\n        gists_url:\n          type: string\n          example: https://api.github.com/users/octocat/gists{/gist_id}\n        starred_url:\n          type: string\n          example: https://api.github.com/users/octocat/starred{/owner}{/repo}\n        subscriptions_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/subscriptions\n        organizations_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/orgs\n        repos_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/repos\n        events_url:\n          type: string\n          example: https://api.github.com/users/octocat/events{/privacy}\n        received_events_url:\n          type: string\n          format: uri\n          example: https://api.github.com/users/octocat/received_events\n        type:\n          type: string\n          example: User\n        site_admin:\n          type: boolean\n        starred_at:\n          type: string\n          example: '\"2020-07-09T00:17:55Z\"'\n      required:\n        - avatar_url\n        - events_url\n        - followers_url\n        - following_url\n        - gists_url\n        - gravatar_id\n        - html_url\n        - id\n        - node_id\n        - login\n        - organizations_url\n        - received_events_url\n        - repos_url\n        - site_admin\n        - starred_url\n        - subscriptions_url\n        - type\n        - url\n    validation-error:\n      title: Validation Error\n      description: Validation Error\n      type: object\n      required:\n        - message\n        - documentation_url\n      properties:\n        message:\n          type: string\n        documentation_url:\n          type: string\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - code\n            properties:\n              resource:\n                type: string\n              field:\n                type: string\n              message:\n                type: string\n              code:\n                type: string\n              index:\n                type: integer\n              value:\n                oneOf:\n                  - type: string\n                    nullable: true\n                  - type: integer\n                    nullable: true\n                  - type: array\n                    nullable: true\n                    items:\n                      type: string\n  parameters:\n    per-page:\n      name: per_page\n      description: Results per page (max 100)\n      in: query\n      schema:\n        type: integer\n        default: 30\n    page:\n      name: page\n      description: Page number of the results to fetch.\n      in: query\n      schema:\n        type: integer\n        default: 1\n    grant-id:\n      name: grant_id\n      description: grant_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n    client-id:\n      name: client_id\n      in: path\n      required: true\n      description: The client ID of your GitHub app.\n      schema:\n        type: string\n    authorization-id:\n      name: authorization_id\n      description: authorization_id parameter\n      in: path\n      required: true\n      schema:\n        type: integer\n  responses:\n    not_modified:\n      description: Not modified\n    requires_authentication:\n      description: Requires authentication\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    not_found:\n      description: Resource not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    gone:\n      description: Gone\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/basic-error'\n    validation_failed:\n      description: Validation failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/validation-error'\n  securitySchemes: {}\n  callbacks: {}\n  examples:\n    application-grant-items:\n      value:\n        - id: 1\n          url: https://api.github.com/applications/grants/1\n          app:\n            url: http://my-github-app.com\n            name: my github app\n            client_id: abcde12345fghij67890\n          created_at: '2011-09-06T17:26:27Z'\n          updated_at: '2011-09-06T20:39:23Z'\n          scopes:\n            - public_repo\n    application-grant:\n      value:\n        id: 1\n        url: https://api.github.com/applications/grants/1\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        created_at: '2011-09-06T17:26:27Z'\n        updated_at: '2011-09-06T20:39:23Z'\n        scopes:\n          - public_repo\n    authorization-items:\n      value:\n        - id: 1\n          url: https://api.github.com/authorizations/1\n          scopes:\n            - public_repo\n          token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n          token_last_eight: Ae178B4a\n          hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n          app:\n            url: http://my-github-app.com\n            name: my github app\n            client_id: abcde12345fghij67890\n          note: optional note\n          note_url: http://optional/note/url\n          updated_at: '2011-09-06T20:39:23Z'\n          created_at: '2011-09-06T17:26:27Z'\n          expires_at: '2011-09-08T17:26:27Z'\n          fingerprint: jklmnop12345678\n    authorization:\n      value:\n        id: 1\n        url: https://api.github.com/authorizations/1\n        scopes:\n          - public_repo\n        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n        token_last_eight: Ae178B4a\n        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        note: optional note\n        note_url: http://optional/note/url\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        expires_at: '2011-10-06T17:26:27Z'\n        fingerprint: ''\n    authorization-response-if-returning-an-existing-token-2:\n      value:\n        id: 1\n        url: https://api.github.com/authorizations/1\n        scopes:\n          - public_repo\n        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n        token_last_eight: Ae178B4a\n        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        note: optional note\n        note_url: http://optional/note/url\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        expires_at: '2011-10-06T17:26:27Z'\n        fingerprint: ''\n    authorization-response-if-returning-an-existing-token:\n      value:\n        id: 1\n        url: https://api.github.com/authorizations/1\n        scopes:\n          - public_repo\n        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n        token_last_eight: Ae178B4a\n        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        note: optional note\n        note_url: http://optional/note/url\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        expires_at: '2011-10-06T17:26:27Z'\n        fingerprint: jklmnop12345678\n    authorization-3:\n      value:\n        id: 1\n        url: https://api.github.com/authorizations/1\n        scopes:\n          - public_repo\n        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n        token_last_eight: Ae178B4a\n        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        note: optional note\n        note_url: http://optional/note/url\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        expires_at: '2012-10-06T17:26:27Z'\n        fingerprint: jklmnop12345678\n    authorization-2:\n      value:\n        id: 1\n        url: https://api.github.com/authorizations/1\n        scopes:\n          - public_repo\n        token: ghu_16C7e42F292c6912E7710c838347Ae178B4a\n        token_last_eight: Ae178B4a\n        hashed_token: 25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\n        app:\n          url: http://my-github-app.com\n          name: my github app\n          client_id: abcde12345fghij67890\n        note: optional note\n        note_url: http://optional/note/url\n        updated_at: '2011-09-06T20:39:23Z'\n        created_at: '2011-09-06T17:26:27Z'\n        expires_at: '2011-10-06T17:26:27Z'\n        fingerprint: jklmnop12345678\n  requestBodies: {}\n  headers:\n    link:\n      example: \u003chttps://api.github.com/resource?page=2\u003e; rel=\"next\", \u003chttps://api.github.com/resource?page=5\u003e; rel=\"last\"\n      schema:\n        type: string\n  links: {}\n  x-stackQL-resources:\n    oauth_authorizations:\n      id: github.oauth_authorizations.oauth_authorizations\n      name: oauth_authorizations\n      title: oauth_authorizations\n      methods:\n        list_grants:\n          operation:\n            $ref: '#/paths/~1applications~1grants/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get_grant:\n          operation:\n            $ref: '#/paths/~1applications~1grants~1{grant_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_grant:\n          operation:\n            $ref: '#/paths/~1applications~1grants~1{grant_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        list_authorizations:\n          operation:\n            $ref: '#/paths/~1authorizations/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        create_authorization:\n          operation:\n            $ref: '#/paths/~1authorizations/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_or_create_authorization_for_app:\n          operation:\n            $ref: '#/paths/~1authorizations~1clients~1{client_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_or_create_authorization_for_app_and_fingerprint:\n          operation:\n            $ref: '#/paths/~1authorizations~1clients~1{client_id}~1{fingerprint}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        get_authorization:\n          operation:\n            $ref: '#/paths/~1authorizations~1{authorization_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update_authorization:\n          operation:\n            $ref: '#/paths/~1authorizations~1{authorization_id}/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete_authorization:\n          operation:\n            $ref: '#/paths/~1authorizations~1{authorization_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/get_or_create_authorization_for_app_and_fingerprint'\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/get_grant'\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/get_or_create_authorization_for_app'\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/get_authorization'\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/list_authorizations'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/create_authorization'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/delete_grant'\n          - $ref: '#/components/x-stackQL-resources/oauth_authorizations/methods/delete_authorization'\nopenapi: 3.0.3\nservers:\n  - url: https://api.github.com\ntags:\n  - name: actions\n    description: Endpoints to manage GitHub Actions using the REST API.\n  - name: activity\n    description: Activity APIs provide access to notifications, subscriptions, and timelines.\n  - name: apps\n    description: Information for integrations and installations.\n  - name: billing\n    description: Monitor charges and usage from Actions and Packages.\n  - name: checks\n    description: Rich interactions with checks run by your integrations.\n  - name: code-scanning\n    description: Retrieve code scanning alerts from a repository.\n  - name: codes-of-conduct\n    description: Insight into codes of conduct for your communities.\n  - name: codespaces\n    description: Endpoints to manage Codespaces using the REST API.\n  - name: emojis\n    description: List emojis available to use on GitHub.\n  - name: enterprise-admin\n    description: Administer a GitHub enterprise.\n  - name: dependabot\n    description: Endpoints to manage Dependabot.\n  - name: gists\n    description: View, modify your gists.\n  - name: git\n    description: Raw Git functionality.\n  - name: gitignore\n    description: View gitignore templates\n  - name: interactions\n    description: Owner or admin management of users interactions.\n  - name: issues\n    description: Interact with GitHub Issues.\n  - name: licenses\n    description: View various OSS licenses.\n  - name: markdown\n    description: Render GitHub flavored markdown\n  - name: meta\n    description: Endpoints that give information about the API.\n  - name: migrations\n    description: Move projects to or from GitHub.\n  - name: oauth-authorizations\n    description: Manage access of OAuth applications\n  - name: orgs\n    description: Interact with GitHub Orgs.\n  - name: packages\n    description: Manage packages for authenticated users and organizations.\n  - name: projects\n    description: Interact with GitHub Projects.\n  - name: pulls\n    description: Interact with GitHub Pull Requests.\n  - name: rate-limit\n    description: Check your current rate limit status\n  - name: reactions\n    description: Interact with reactions to various GitHub entities.\n  - name: repos\n    description: Interact with GitHub Repos.\n  - name: scim\n    description: Provisioning of GitHub organization membership for SCIM-enabled providers.\n  - name: search\n    description: Look for stuff on GitHub.\n  - name: secret-scanning\n    description: Retrieve secret scanning alerts from a repository.\n  - name: server-statistics\n    description: GHES statistics\n  - name: teams\n    description: Interact with GitHub Teams.\n  - name: users\n    description: Interact with and view information about users and also current user.\nexternalDocs:\n  description: GitHub v3 REST API\n  url: https://docs.github.com/rest/\ninfo:\n  version: 1.1.4\n  title: GitHub v3 REST API - oauth_authorizations\n  description: oauth_authorizations\n  license:\n    name: MIT\n    url: https://spdx.org/licenses/MIT\n  termsOfService: https://docs.github.com/articles/github-terms-of-service\n  contact:\n    name: Support\n    url: https://support.github.com/contact?tags=dotcom-rest-api\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/github/v0.1.1/services/oauth_authorizations.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/github/v0.1.1/services/oauth_authorizations.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}