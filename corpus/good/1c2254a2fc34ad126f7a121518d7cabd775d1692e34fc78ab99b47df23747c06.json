{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "tokens.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/tokens.yml",
			"byteSize": 8899,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /tokens:\n        get:\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Token\"\n                                type: array\n                    description: Success\n            tags:\n                - Tokens\n            summary: Get a list of access token IDs for the current user.\n        post:\n            responses:\n                \"201\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Token\"\n                    description: Success\n            tags:\n                - Tokens\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Token\"\n                required: true\n            summary: Issue a new access token for the current user.\n    \"/tokens/{id}\":\n        delete:\n            parameters:\n                - description: |\n                      The numeric ID of a token.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"204\":\n                    description: Success\n            tags:\n                - Tokens\n            summary: Revoke an access token.\n        get:\n            parameters:\n                - description: |\n                      The numeric ID of a token.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: |\n                      A valid CSRF token for the current user.\n                  in: query\n                  name: transientKey\n                  required: true\n                  schema:\n                      minLength: 1\n                      type: string\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Token\"\n                    description: Success\n            tags:\n                - Tokens\n            summary: Reveal a usable access token.\n    /tokens/oauth:\n        post:\n            summary: Exchange an OAuth access token for a Vanilla access token.\n            description: |-\n                This endpoint takes an access token from your OAuth 2 provider and exchanges it for a Vanilla access token. If no matching user exists in Vanilla, one will be created and an access token will be issued for them.\n\n                In order to use this endpoint, the access token calls out to the API defined in the OAuth connection so it must have a scope that has access to the user's profile or else it will fail.\n\n                The access tokens provided by this endpoint are relatively short lived, so make sure you take note of the `dateExpires` in the response and have a strategy for refreshing the access token for long lived client sessions.\n            tags:\n                - Tokens\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                clientID:\n                                    type: string\n                                    description: Your OAuth client ID used to identify the specific OAuth connection.\n                                oauthAccessToken:\n                                    type: string\n                                    description: Your OAuth access token with scope to access the user's profile information.\n                            required:\n                                - clientID\n                                - oauthAccessToken\n                required: true\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: object\n                                properties:\n                                    accessToken:\n                                        type: string\n                                        description: The access token for Vanilla.\n                                    dateExpires:\n                                        type: string\n                                        format: date-time\n                                        description: The date/time that the access token will expire.\n                                required:\n                                    - accessToken\n                                    - dateExpires\n                            example:\n                                accessToken: va.MtVMRtHgB5Hipdb3HI86VqrdBlI4qWMz.QCw5cA.WkNNEV_\n                                dateExpires: \"2019-08-30T14:37:52Z\"\n                \"400\":\n                    description: The user profile was successfully fetched, but was malformed in some way.\n                \"403\":\n                    description: |\n                        Forbidden. The OAuth access token didn't have permission to access the user information or failed in some other way.\n\n                        If you get this error then make sure that the profile endpoint on **your** site returns a profile the access tokens you are providing to this site.\n                \"404\":\n                    description: The provided client ID did not match the client ID that was configured within Vanilla.\n                \"500\":\n                    description: OAuth is either not enabled or is not configured on Vanilla.\n    /tokens/roles:\n        post:\n            summary: Issue a JWT that includes the current user's roles as its claims\n            description: |-\n                This is primarily intended for internal use on client-side code to authenticate to specific API endpoints where the response generated depends on the set of roles and associated permissions, but does not depend on the identity of the requesting user.\n\n                As many users may share a limited set of roles, this approach allows for caching responses to these endpoints for short periods, to improve overall page responsiveness while reducing server-side load.\n            tags:\n                - Tokens\n            responses:\n                \"201\":\n                    description: Success\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: object\n                                properties:\n                                    roleToken:\n                                        type: string\n                                        description: A signed JWT issued for the current user containing the set of roles assigned to this user in its claims.\n                                    expires:\n                                        type: string\n                                        format: date-time\n                                        description: The UTC date/time that the role token expires.\n                                required:\n                                    - roleToken\n                                    - expires\n                            example:\n                                roleToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                                expires: \"2024-11-19T19:17:45\"\n                \"403\":\n                    description: |\n                        Forbidden. Role tokens cannot be issued to unauthenticated users.\ncomponents:\n    schemas:\n        Token:\n            properties:\n                accessToken:\n                    description: A signed version of the token.\n                    minLength: 1\n                    type: string\n                accessTokenID:\n                    description: The unique numeric ID.\n                    type: integer\n                dateInserted:\n                    description: When the token was generated.\n                    format: date-time\n                    type: string\n                name:\n                    description: A user-specified label.\n                    minLength: 1\n                    nullable: true\n                    type: string\n            required:\n                - accessTokenID\n                - name\n                - accessToken\n                - dateInserted\n            type: object\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/tokens.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/tokens.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}