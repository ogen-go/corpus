{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "sheetlabs.com-rig-veda-1.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/sheetlabs.com-rig-veda-1.1-swagger.yaml",
			"byteSize": 5066,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: ab.techwriter@gmail.com\n    x-twitter: sheetlabs\n  description: This API returns information about all of the verses in Rig Veda. The\n    results are JSON objects that contain the name of the god, poet, and meter\n    of the verses in Rig Veda, the category of the god and the poet, and the\n    mandal and sukta number.\n  license:\n    name: Distributed under the MIT license\n    url: https://opensource.org/licenses/MIT\n  title: rv\n  version: \"1.1\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    url: https://twitter.com/sheetlabs/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/AninditaBasu/indica/master/rv_SDKs/rv.yaml\n      version: \"2.0\"\n  x-providerName: sheetlabs.com\n  x-serviceName: rig-veda\nexternalDocs:\n  description: Documentation\n  url: https://aninditabasu.github.io/indica/\npaths:\n  /:\n    get:\n      responses:\n        \"200\":\n          description: Records fetched\n        \"401\":\n          description: The API needs an authentication key.\n      summary: Fetch all records from the database\n  /mandal:\n    get:\n      parameters:\n        - description: Click to select the mandal number from the list.\n          in: query\n          name: mandal\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 1\n              - 2\n              - 3\n              - 4\n              - 5\n              - 6\n              - 7\n              - 8\n              - 9\n              - 10\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n      summary: Fetch all verses in a specific book\n  /meter:\n    get:\n      parameters:\n        - description: The name of the meter. Wildcard characters allowed, for example *tri\n          in: query\n          name: meter\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n        \"404\":\n          description: Rig Veda does not have any verses in that meter.\n      summary: Fetch all verses composed in a specific meter\n  /sungby:\n    get:\n      parameters:\n        - description: The name of the rishi. Wildcard characters allowed, for example\n            *mitra\n          in: query\n          name: sungby\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n        \"404\":\n          description: No such rishi composed anything that went into the Rig Veda.\n      summary: Fetch all verses composed by a specific rishi\n  /sungbycategory:\n    get:\n      parameters:\n        - description: Click to select from the list.\n          in: query\n          name: sungbycategory\n          required: true\n          schema:\n            type: string\n            enum:\n              - animal\n              - demon male\n              - divine female\n              - divine male\n              - human female\n              - human male\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n        \"404\":\n          description: No such poet category exists in this API.\n      summary: Fetch all verses composed by a specific category of beings\n  /sungfor:\n    get:\n      parameters:\n        - description: The name of the god, goddess, or object. Wildcard characters\n            allowed, for example *dra\n          in: query\n          name: sungfor\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n        \"404\":\n          description: No such god or thing had verses composed in their honour.\n      summary: Fetch all verses addressed to a specific god, goddess, or object\n  /sungforcategory:\n    get:\n      parameters:\n        - description: Click to select from the list.\n          in: query\n          name: sungforcategory\n          required: true\n          schema:\n            type: string\n            enum:\n              - abstract\n              - animal\n              - demon male\n              - divine female\n              - divine human\n              - divine male\n              - human couple\n              - human female\n              - human male\n              - human unborn\n              - object\n              - plant\n      responses:\n        \"200\":\n          description: Verses fetched successfully.\n        \"401\":\n          description: You need an authentication key.\n        \"404\":\n          description: No such category exists in this API.\n      summary: Fetch all verses composed for a specific category\nservers:\n  - url: https://sheetlabs.com/IND/rv\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/sheetlabs.com-rig-veda-1.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/sheetlabs.com-rig-veda-1.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}