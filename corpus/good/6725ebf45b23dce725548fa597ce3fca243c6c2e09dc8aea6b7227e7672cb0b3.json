{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger/cactus"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "examples/cactus-example-carbon-accounting-business-logic-plugin/src/main/json/openapi.json",
			"byteSize": 10138,
			"content": "{\n    \"openapi\": \"3.0.3\",\n    \"info\": {\n        \"title\": \"Hyperledger Cactus Example - Carbon Accounting App\",\n        \"description\": \"Demonstrates how a business use case can be satisfied with Cactus when multiple distinct ledgers are involved.\",\n        \"version\": \"0.2.0\",\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"AuthzScope\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"group:admin\",\n                    \"group:user\"\n                ],\n                \"x-enum-descriptions\": [\n                    \"Identities with the group:admin scope are administrators of the system.\",\n                    \"Identities with the group:user scope are end users of the system who only have authorization to perform a limited set of actions.\"\n                ],\n                \"x-enum-varnames\": [\n                    \"GroupAdmin\",\n                    \"GroupUser\"\n                ]\n            },\n            \"AuthzJwtClaim\": {\n                \"description\": \"Stores global constants related to the authorization of the application. Specifically enumerates the claims to validate for as per RFC 7519, section 4.1. See: https://tools.ietf.org/html/rfc7519#section-4.1\",\n                \"type\": \"string\",\n                \"enum\": [\n                    \"Hyperledger Labs - Carbon Accounting Tool\"\n                ],\n                \"x-enum-descriptions\": [\n                    \"The \\\"iss\\\" (issuer) claim identifies the principal that issued the JWT.  The processing of this claim is generally application specific. The \\\"iss\\\" value is a case-sensitive string containing a StringOrURI value.  Use of this claim is OPTIONAL.\"\n                ],\n                \"x-enum-varnames\": [\n                    \"iss\"\n                ]\n            },\n            \"Checkpoint\": {\n                \"required\": [\n                    \"fromBlock\",\n                    \"votes\"\n                ],\n                \"properties\": {\n                    \"fromBlock\": {\n                        \"type\": \"integer\",\n                        \"format\": \"uint32\",\n                        \"nullable\": false\n                    },\n                    \"votes\": {\n                        \"type\": \"string\",\n                        \"nullable\": false,\n                        \"format\": \"uint96\"\n                    }\n                }\n            },\n            \"EnrollAdminInfo\": {\n                \"type\": \"string\",\n                \"enum\": [\n                    \"Successfully enrolled admin user and imported it into the wallet\",\n                    \"ORG ADMIN REGISTERED\"\n                ],\n                \"x-enum-varnames\": [\n                    \"SUCCESSFULLY_ENROLLED_ADMIN\",\n                    \"ORG_ADMIN_REGISTERED\"\n                ]\n            },\n            \"EnrollAdminV1Request\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"orgName\"\n                ],\n                \"properties\": {\n                    \"orgName\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 1024\n                    }\n                }\n            },\n            \"EnrollAdminV1Response\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"info\",\n                    \"orgName\",\n                    \"msp\",\n                    \"caName\"\n                ],\n                \"properties\": {\n                    \"info\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    },\n                    \"orgName\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    },\n                    \"msp\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    },\n                    \"caName\": {\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    },\n                    \"identityId\": {\n                        \"description\": \"The key under which the identity created will be persisted to the keychain for later retrieval.\",\n                        \"type\": \"string\",\n                        \"minLength\": 1,\n                        \"maxLength\": 2048,\n                        \"nullable\": false\n                    }\n                }\n            },\n            \"DaoTokenGetAllowanceRequest\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"account\",\n                    \"spender\"\n                ],\n                \"properties\": {\n                    \"account\": {\n                        \"description\": \"The address of the account holding the funds\",\n                        \"type\": \"string\",\n                        \"minLength\": 40,\n                        \"maxLength\": 42\n                    },\n                    \"spender\": {\n                        \"description\": \"The address of the account spending the funds\",\n                        \"type\": \"string\",\n                        \"minLength\": 40,\n                        \"maxLength\": 42\n                    }\n                }\n            },\n            \"DaoTokenGetAllowanceResponse\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"allowance\"\n                ],\n                \"properties\": {\n                    \"allowance\": {\n                        \"type\": \"integer\",\n                        \"nullable\": false,\n                        \"description\": \"The number of tokens approved\"\n                    }\n                }\n            },\n            \"DaoTokenGetAllowanceNotFoundResponse\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"accountFound\",\n                    \"spenderFound\"\n                ],\n                \"properties\": {\n                    \"accountFound\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates whether the account was found or not.\"\n                    },\n                    \"spenderFound\": {\n                        \"type\": \"boolean\",\n                        \"nullable\": false,\n                        \"description\": \"Indicates whether the spender was found or not.\"\n                    }\n                }\n            }\n        }\n    },\n    \"paths\": {\n        \"/api/v1/utilityemissionchannel/registerEnroll/admin\": {\n            \"post\": {\n                \"operationId\": \"enrollAdminV1\",\n                \"summary\": \"Registers an admin account within the Fabric organization specified.\",\n                \"x-hyperledger-cactus\": {\n                    \"authz\": {\n                        \"isProtected\": true,\n                        \"requiredRoles\": [\"group:admin\"]\n                    },\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/utilityemissionchannel/registerEnroll/admin\"\n                    }\n                },\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EnrollAdminV1Request\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EnrollAdminV1Response\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/plugins/@hyperledger/cactus-example-carbon-accounting-backend/dao-token/get-allowance\": {\n            \"post\": {\n                \"operationId\": \"daoTokenGetAllowanceV1\",\n                \"summary\": \"Get the number of tokens `spender` is approved to spend on behalf of `account`\",\n                \"x-hyperledger-cactus\": {\n                    \"http\": {\n                        \"verbLowerCase\": \"post\",\n                        \"path\": \"/api/v1/plugins/@hyperledger/cactus-example-carbon-accounting-backend/dao-token/get-allowance\"\n                    }\n                },\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DaoTokenGetAllowanceRequest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"NOT_FOUND\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DaoTokenGetAllowanceNotFoundResponse\"\n                                }\n                            }\n                        }\n                    },\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DaoTokenGetAllowanceResponse\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/hyperledger/cactus@a69a9578c4e8f1334758690f77c35ee75ccc0884/-/blob/examples/cactus-example-carbon-accounting-business-logic-plugin/src/main/json/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger/cactus/blob/a69a9578c4e8f1334758690f77c35ee75ccc0884/examples/cactus-example-carbon-accounting-business-logic-plugin/src/main/json/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}