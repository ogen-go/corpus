{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/springframeworkguru/spring-cloud-contract-oa3"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "src/test/resources/openapi/openapi.yml",
			"byteSize": 5748,
			"content": "openapi: 3.0.0\ninfo:\n    description: Spring Cloud Contract Verifier Http Server OA3 Sample\n    version: \"1.0.0\"\n    title: Fraud Service API\npaths:\n    /fraudcheck:\n        put:\n            summary: Perform Fraud Check\n            x-contracts:\n            - contractId: 1\n              name: Should Mark Client as Fraud\n              priority: 1\n            - contractId: 2\n              name: Should Not Mark Client as Fraud\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                \"client.id\":\n                                    type: integer\n                                loanAmount:\n                                    type: integer\n                x-contracts:\n                - contractId: 1\n                  body:\n                      \"client.id\": 1234567890\n                      loanAmount: 99999\n                  matchers:\n                      body:\n                      - path: $.['client.id']\n                        type: by_regex\n                        value: \"[0-9]{10}\"\n                - contractId: 2\n                  body:\n                      \"client.id\": 1234567890\n                      loanAmount: 123.123\n                  matchers:\n                      body:\n                      - path: $.['client.id']\n                        type: by_regex\n                        value: \"[0-9]{10}\"\n            responses:\n                '200':\n                    description: created ok\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    fraudCheckStatus:\n                                        type: string\n                                    \"rejection.reason\":\n                                        type: string\n                    x-contracts:\n                    - contractId: 1\n                      body:\n                          fraudCheckStatus: \"FRAUD\"\n                          \"rejection.reason\": \"Amount too high\"\n                      headers:\n                          Content-Type: application/json;charset=UTF-8\n                    - contractId: 2\n                      body:\n                          fraudCheckStatus: \"OK\"\n                          \"rejection.reason\": null\n                      headers:\n                          Content-Type: application/json;charset=UTF-8\n                      matchers:\n                          body:\n                          - path: $.['rejection.reason']\n                            type: by_command\n                            value: assertThatRejectionReasonIsNull($it)\n    /frauds:\n        get:\n            x-contracts:\n            - contractId: 3\n              name: should return all frauds - should count all frauds\n            responses:\n                '200':\n                    description: okay\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    count:\n                                        type: integer\n                    x-contracts:\n                    - contractId: 3\n                      body:\n                          count: 200\n    /frauds/name:\n        put:\n            x-contracts:\n            - contractId: 4\n              name: Should Return a Fraud for the Name\n              priority: 1\n            - contractId: 5\n              name: Should Return Non-Fraud for the Name\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                name:\n                                    type: string\n                x-contracts:\n                - contractId: 4\n                  body:\n                      name: \"fraud\"\n                - contractId: 5\n                  body:\n                      name: \"non fraud\"\n                  matchers:\n                      body:\n                      - path: $.name\n                        type: by_regex\n                        predefined: only_alpha_unicode\n            responses:\n                '200':\n                    description: okay\n                    x-contracts:\n                    - contractId: 4\n                      body:\n                          result: \"Sorry {{{ jsonpath this '$.name' }}} but you're a fraud\"\n                          headers:\n                              Content-Type: \"{{{ request.headers.Content-Type.0 }}}\"\n                    - contractId: 5\n                      body:\n                          result: \"Don't worry {{{ jsonpath this '$.name' }}} you're not a fraud\"\n                          headers:\n                              Content-Type: \"{{{ request.headers.Content-Type.0 }}};charset=UTF-8\"\n    /drunks:\n        get:\n            x-contracts:\n            - contractId: 6\n              name: should return all frauds\n            responses:\n                '200':\n                    description: okay\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    count:\n                                        type: integer\n                    x-contracts:\n                    - contractId: 6\n                      body:\n                          count: 200\n",
			"canonicalURL": "/github.com/springframeworkguru/spring-cloud-contract-oa3@20cec69a6f9b7e37d2a11e6e8b7469e73f513630/-/blob/src/test/resources/openapi/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/springframeworkguru/spring-cloud-contract-oa3/blob/20cec69a6f9b7e37d2a11e6e8b7469e73f513630/src/test/resources/openapi/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}