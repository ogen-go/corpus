{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/firmalyzer.com/iotvas/1.0/openapi.yaml",
			"byteSize": 19463,
			"content": "openapi: 3.0.2\nservers:\n  - url: /api/v1\ninfo:\n  description: |-\n    IOTVAS API enables you to discover IoT/Connected devices in the network and provides \n        detailed real-time risk analysis, including firmware vulnerability analysis without requiring the user to upload the firmware file.\n        Please visit the [signup page](https://iotvas-api.firmalyzer.com/portal/signup) to create an API key.\n        IoTVAS API can be easily integrated with vulnerability scanning and network port scanner tools. For example,\n        we have also released the [IOTVAS NSE script](https://github.com/firmalyzer/iotvas-nmap) that turns the nmap port scanner \n        to a IoT/connected device discovery and real-time risk assessment tool. For more infromation on IoTVAS and other \n        solutions please visit [Firmalyzer web site](https://www.firmalyzer.com).\n  title: IoTVAS API\n  version: \"1.0\"\n  x-apisguru-categories:\n    - iot\n    - security\n  x-logo:\n    url: https://firmalyzer.com/static/img/apple-icon-57x57.png\n  x-origin:\n    - format: openapi\n      url: https://iotvas-api.firmalyzer.com/api/v1/openapi.json\n      version: \"3.0\"\n  x-providerName: firmalyzer.com\n  x-serviceName: iotvas\npaths:\n  /device/detect:\n    post:\n      description: Use device service banners and mac address captured by your network port scanner, vulnerability assessment or asset discovery tools to detect device maker, model and firmware information\n      operationId: detect_device_detect_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceFeatures\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceInfo\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Detect iot device by service banners and mac address\n      tags:\n        - device\n  \"/firmware/{firmware_hash}/accounts\":\n    get:\n      operationId: firmware_accounts_firmware__firmware_hash__accounts_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/DefaultAccount\"\n                title: Response Firmware Accounts Firmware  Firmware Hash  Accounts Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get default accounts and password hashes of a firmware\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/config-issues\":\n    get:\n      operationId: firmware_config_issues_firmware__firmware_hash__config_issues_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: aa96e4d41a4b0ceb3f1ae4d94f3cb445621b9501e3a9c69e6b9eb37c5888a03c\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ConfigIssue\"\n                title: Response Firmware Config Issues Firmware  Firmware Hash  Config Issues Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get default OS configuration issues of a device firmware\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/expired-certs\":\n    get:\n      operationId: firmware_expired_certs_firmware__firmware_hash__expired_certs_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ExpiredCert\"\n                title: Response Firmware Expired Certs Firmware  Firmware Hash  Expired Certs Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get expired digital certificates embedded in a device firmware\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/private-keys\":\n    get:\n      operationId: firmware_private_keys_firmware__firmware_hash__private_keys_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: 90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CryptoKey\"\n                title: Response Firmware Private Keys Firmware  Firmware Hash  Private Keys Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get private crypto keys embedded in a device firmware\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/risk\":\n    get:\n      operationId: firmware_risk_firmware__firmware_hash__risk_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FirmwareRisk\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get iot device firmware risk analysis\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/weak-certs\":\n    get:\n      operationId: firmware_weak_certs_firmware__firmware_hash__weak_certs_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: 52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/WeakCert\"\n                title: Response Firmware Weak Certs Firmware  Firmware Hash  Weak Certs Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get certificates with weak fingerprinting algorithms that are mebedded in a device firmware\n      tags:\n        - firmware\n  \"/firmware/{firmware_hash}/weak-keys\":\n    get:\n      operationId: firmware_weak_keys_firmware__firmware_hash__weak_keys_get\n      parameters:\n        - description: SHA2 hash of device firmware\n          in: path\n          name: firmware_hash\n          required: true\n          schema:\n            description: SHA2 hash of device firmware\n            example: 852031776c09f8152c90496f2c3fac85b46a938d20612d7fc03eea8aab46f23e\n            title: Firmware Hash\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CryptoKey\"\n                title: Response Firmware Weak Keys Firmware  Firmware Hash  Weak Keys Get\n                type: array\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      security:\n        - api-key-header: []\n      summary: Get weak crypto keys with short length\n      tags:\n        - firmware\ncomponents:\n  schemas:\n    ConfigIssue:\n      properties:\n        config_file:\n          title: Vulnerable configuration file name\n          type: string\n        issues:\n          items:\n            type: string\n          title: List of detected issues\n          type: array\n        service_name:\n          title: Affected network service name\n          type: string\n        suggestions:\n          items:\n            type: string\n          title: List of suggestions to fix the issues\n          type: array\n      title: ConfigIssue\n      type: object\n    CryptoKey:\n      properties:\n        algorithm:\n          title: Crypto algorithm name of the key\n          type: string\n        bits:\n          title: Key length in bits\n          type: integer\n        file_hash:\n          title: SHA2 hash of the crypto key file\n          type: string\n        file_name:\n          title: Crypto key file name\n          type: string\n        pem_type:\n          title: Key type, e.g., RSAPrivateKey, ECPublicKey, etc\n          type: string\n      title: CryptoKey\n      type: object\n    DefaultAccount:\n      properties:\n        gid:\n          title: Group id of the account\n          type: integer\n        hash_algorithm:\n          title: \"Hash algorithm, '0': DES, '1': '5': SHA2, '2a': Blowfish\"\n          type: string\n        home_dir:\n          title: Path to the home folder of the account\n          type: string\n        name:\n          title: OS account name\n          type: string\n        pwd_hash:\n          title: Password hash of the account\n          type: string\n        shell:\n          title: Path to the shell binary of the account\n          type: string\n        uid:\n          title: \"*nix user id of the account\"\n          type: integer\n      title: DefaultAccount\n      type: object\n    DeviceFeatures:\n      example:\n        ftp_banner: AXIS P3346 Fixed Dome Network Camera 5.20 (2017) ready.\n        hostname: \"\"\n        http_response: \"\"\n        https_response: \"\"\n        nic_mac: \"\"\n        snmp_sysdescr: \"\"\n        snmp_sysoid: \"\"\n        telnet_banner: \"\"\n        upnp_response: \"\"\n      properties:\n        ftp_banner:\n          default: \"\"\n          title: FTP service banner(excluding status code, eg. 220)\n          type: string\n        hostname:\n          default: \"\"\n          title: Device hostname\n          type: string\n        http_response:\n          default: \"\"\n          title: Raw response of the http service\n          type: string\n        https_response:\n          default: \"\"\n          title: Raw response of the https service\n          type: string\n        nic_mac:\n          default: \"\"\n          title: MAC address of the device network interface in dash or dot separated format\n          type: string\n        snmp_sysdescr:\n          default: \"\"\n          title: sysDescr OID string of the SNMP service\n          type: string\n        snmp_sysoid:\n          default: \"\"\n          title: sysObjectID OID string of the SNMP service\n          type: string\n        telnet_banner:\n          default: \"\"\n          title: Telnet service banner\n          type: string\n        upnp_response:\n          default: \"\"\n          title: UPnP service response\n          type: string\n      title: DeviceFeatures\n      type: object\n    DeviceInfo:\n      properties:\n        cve_list:\n          items:\n            $ref: \"#/components/schemas/Vulnerability\"\n          title: List of CVEs for the specified firmware version\n          type: array\n        device_type:\n          title: Device type,e.g., IP camera, etc\n          type: string\n        firmware_info:\n          allOf:\n            - $ref: \"#/components/schemas/FirmwareInfo\"\n          title: Device firmware infromation, release date, download Url, etc\n        firmware_version:\n          title: Device firmware version\n          type: string\n        is_discontinued:\n          title: Device discontinued/retired indicator\n          type: boolean\n        latest_firmware_info:\n          allOf:\n            - $ref: \"#/components/schemas/FirmwareInfo\"\n          title: Latest firmware infromation of the device\n        manufacturer:\n          title: Device manufacturer name\n          type: string\n        model_name:\n          title: Device model name\n          type: string\n      title: DeviceInfo\n      type: object\n    ExpiredCert:\n      properties:\n        file_hash:\n          title: SHA2 hash of the certificate file\n          type: string\n        file_name:\n          title: Certificate file name\n          type: string\n        public_key:\n          allOf:\n            - $ref: \"#/components/schemas/PublicKey\"\n          title: Public key infromation of the certificate\n        subject_name:\n          title: Certificate subject name\n          type: string\n        thumb_print:\n          title: Certificate fingerprint\n          type: string\n        valid_from:\n          title: Certificate validity start date\n          type: string\n        valid_to:\n          title: Certificate expiry date\n          type: string\n      title: ExpiredCert\n      type: object\n    FirmwareInfo:\n      properties:\n        download_url:\n          title: Download url of the firmware file on vendor's site\n          type: string\n        name:\n          title: Title of the firmware file published by the device vendor\n          type: string\n        release_date:\n          title: Release date of the firmware file\n          type: string\n        sha2:\n          title: Firmware file SHA2 hash\n          type: string\n        version:\n          title: Published firmware file version\n          type: string\n      title: FirmwareInfo\n      type: object\n    FirmwareRisk:\n      properties:\n        risk_summary:\n          allOf:\n            - $ref: \"#/components/schemas/RiskSummary\"\n          title: Qualitative risk levels of network services, crypto libraries, kernel and client tools in the analyzed firmware\n        vulnerable_components:\n          items:\n            $ref: \"#/components/schemas/VulnerableComponent\"\n          title: Details of vulnerable firmware components\n          type: array\n      title: FirmwareRisk\n      type: object\n    HTTPValidationError:\n      properties:\n        detail:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          title: Detail\n          type: array\n      title: HTTPValidationError\n      type: object\n    PublicKey:\n      properties:\n        algorithm:\n          title: Crypto algorithm name\n          type: string\n        bits:\n          title: key length in bits\n          type: integer\n      title: PublicKey\n      type: object\n    RiskSummary:\n      properties:\n        client_tools_risk:\n          title: Risk level of client tools such as busybox\n          type: string\n        crypto_risk:\n          title: Crypto libraries risk level\n          type: string\n        kernel_risk:\n          title: Kernel risk level\n          type: string\n        net_services_risk:\n          title: Qualitative risk level of device network services in the scale of 'Critical' to 'None'\n          type: string\n      title: RiskSummary\n      type: object\n    ValidationError:\n      properties:\n        loc:\n          items:\n            type: string\n          title: Location\n          type: array\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n      required:\n        - loc\n        - msg\n        - type\n      title: ValidationError\n      type: object\n    Vulnerability:\n      properties:\n        cve_id:\n          title: CVE ID of the vulnerability\n          type: string\n        cvss:\n          title: CVSS v3 score of the vulnerability\n          type: number\n      title: Vulnerability\n      type: object\n    VulnerableComponent:\n      properties:\n        category:\n          title: \"Component category: 'UPnP Server', 'Web Server', etc\"\n          type: string\n        cvss_max:\n          title: Maximum CVSS score of the detected vulnerabilities\n          type: number\n        name:\n          title: Vulnerable component name, e.g., upnp, busybox, etc\n          type: string\n        version:\n          title: Vulnerable component version\n          type: string\n        vulnerabilities:\n          items:\n            $ref: \"#/components/schemas/Vulnerability\"\n          title: List of component vulnerabilities\n          type: array\n      title: VulnerableComponent\n      type: object\n    WeakCert:\n      properties:\n        file_hash:\n          title: SHA2 hash of the certificate file\n          type: string\n        file_name:\n          title: Certificate file name\n          type: string\n        sign_algorithm:\n          title: Ceritifcate signing algorithm name, e.g., sha1\n          type: string\n        subject_name:\n          title: Certificate subject name\n          type: string\n        thumb_print:\n          title: Certificate fingerprint\n          type: string\n        valid_from:\n          title: Certificate validity start date\n          type: string\n        valid_to:\n          title: Certificate expiry date\n          type: string\n      title: WeakCert\n      type: object\n  securitySchemes:\n    api-key-header:\n      in: header\n      name: x-api-key\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/firmalyzer.com/iotvas/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/firmalyzer.com/iotvas/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}