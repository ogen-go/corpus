{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/semuxproject/semux-core"
		},
		"file": {
			"name": "v2.5.0.yml",
			"size": 0,
			"path": "src/main/resources/org/semux/api/swagger/v2.5.0.yml",
			"byteSize": 75195,
			"content": "openapi: 3.0.0\ninfo:\n  description: Semux is an experimental high-performance blockchain platform that powers\n    decentralized application.\n  version: 2.5.0\n  title: Semux API\n  contact:\n    name: Semux Foundation\n    url: https://www.semux.org\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/mit-license.php\npaths:\n  /info:\n    get:\n      tags:\n        - Node\n      summary: Get node info\n      description: Returns kernel info.\n      operationId: getInfo\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetInfoResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /peers:\n    get:\n      tags:\n        - Node\n      summary: Get all peers\n      description: Returns all connected peers.\n      operationId: getPeers\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPeersResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /syncing:\n    get:\n      tags:\n        - Node\n      summary: Get syncing status\n      description: Returns an object with data about the sync status\n      operationId: getSyncingStatus\n      responses:\n        \"200\":\n          description: An object about the current sync status\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSyncingStatusResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /pending-transactions:\n    get:\n      tags:\n        - Node\n      summary: Get pending transactions\n      description: Returns all the pending transactions.\n      operationId: getPendingTransactions\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetPendingTransactionsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /node:\n    post:\n      tags:\n        - Node\n      summary: Add a node to connect\n      description: Adds a node to node manager.\n      operationId: addNode\n      parameters:\n        - name: node\n          in: query\n          description: Address of the node in host:port format\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddNodeResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /blacklist:\n    post:\n      tags:\n        - Node\n      summary: Add an IP to blacklist\n      description: Adds an IP address to blacklist.\n      operationId: addToBlacklist\n      parameters:\n        - name: ip\n          in: query\n          description: IP address\n          required: true\n          schema:\n            type: string\n            pattern: ^(\\d{1,3}\\.){3}\\d{1,3}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddToBlacklistResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /whitelist:\n    post:\n      tags:\n        - Node\n      summary: Add an IP to whitelist\n      description: Adds an IP address to whitelist.\n      operationId: addToWhitelist\n      parameters:\n        - name: ip\n          in: query\n          description: IP address\n          required: true\n          schema:\n            type: string\n            pattern: ^(\\d{1,3}\\.){3}\\d{1,3}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddToWhitelistResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /account:\n    get:\n      tags:\n        - Account\n      summary: Get account info\n      description: Returns the basic information about an account.\n      operationId: getAccount\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /account/transactions:\n    get:\n      tags:\n        - Account\n      summary: Get account transactions\n      description: Returns transactions from/to an account.\n      operationId: getAccountTransactions\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: from\n          in: query\n          description: Starting range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n        - name: to\n          in: query\n          description: Ending range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountTransactionsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /account/internal-transactions:\n    get:\n      tags:\n        - Account\n      summary: Get account internal transactions\n      description: Returns internal transactions from/to an account.\n      operationId: getAccountInternalTransactions\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: from\n          in: query\n          description: Starting range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n        - name: to\n          in: query\n          description: Ending range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountInternalTransactionsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /account/pending-transactions:\n    get:\n      tags:\n        - Account\n      summary: Get pending transactions of the account\n      description: Returns pending transactions from/to an account.\n      operationId: getAccountPendingTransactions\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: from\n          in: query\n          description: Starting range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n        - name: to\n          in: query\n          description: Ending range of transactions\n          required: true\n          schema:\n            type: string\n            format: int32\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountPendingTransactionsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n  /account/votes:\n    get:\n      tags:\n        - Account\n      summary: Get account votes\n      description: Returns votes from the account.\n      operationId: getAccountVotes\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountVotesResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /account/code:\n    get:\n      tags:\n        - Account\n      summary: Get account code\n      description: Returns the code of an account.\n      operationId: getAccountCode\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountCodeResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n  /account/storage:\n    get:\n      tags:\n        - Account\n      summary: Get account storage\n      description: Returns the storage value mapped to the given key of an account.\n      operationId: getAccountStorage\n      parameters:\n        - name: address\n          in: query\n          description: Address of account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: key\n          in: query\n          description: The storage key\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]*$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountStorageResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n  /latest-block:\n    get:\n      tags:\n        - Blockchain\n      summary: Get the latest block\n      description: Returns the latest block.\n      operationId: getLatestBlock\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetLatestBlockResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /latest-block-number:\n    get:\n      tags:\n        - Blockchain\n      summary: Get the number of the latest block\n      description: Returns the number of the latest block.\n      operationId: getLatestBlockNumber\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetLatestBlockNumberResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /block-by-hash:\n    get:\n      tags:\n        - Blockchain\n      summary: Get block by hash\n      description: Returns a block by block hash.\n      operationId: getBlockByHash\n      parameters:\n        - name: hash\n          in: query\n          description: Hash of block\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{64}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBlockResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /block-by-number:\n    get:\n      tags:\n        - Blockchain\n      summary: Get block by number\n      description: Returns a block by block number.\n      operationId: getBlockByNumber\n      parameters:\n        - name: number\n          in: query\n          description: Number of block\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBlockResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction:\n    get:\n      tags:\n        - Blockchain\n      summary: Get transaction\n      description: Returns a transactions if exists.\n      operationId: getTransaction\n      parameters:\n        - name: hash\n          in: query\n          description: Transaction hash\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{64}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction-result:\n    get:\n      tags:\n        - Blockchain\n      summary: Get transaction result\n      description: Returns the result of the requested transaction.\n      operationId: getTransactionResult\n      parameters:\n        - name: hash\n          in: query\n          description: Transaction hash\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{64}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTransactionResultResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction-limits:\n    get:\n      tags:\n        - Blockchain\n      summary: Get transaction limits\n      description: Returns transaction limitations including minimum transaction fee and\n        maximum transaction size.\n      operationId: getTransactionLimits\n      parameters:\n        - name: type\n          in: query\n          description: Type of transaction\n          required: true\n          schema:\n            type: string\n            enum:\n              - COINBASE\n              - TRANSFER\n              - DELEGATE\n              - VOTE\n              - UNVOTE\n              - CREATE\n              - CALL\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTransactionLimitsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /delegate:\n    get:\n      tags:\n        - Delegate\n      summary: Get delegate info\n      description: Returns the information about delegate.\n      operationId: getDelegate\n      parameters:\n        - name: address\n          in: query\n          description: Delegate address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDelegateResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /delegates:\n    get:\n      tags:\n        - Delegate\n      summary: Get all delegates\n      description: Returns a list of delegates.\n      operationId: getDelegates\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDelegatesResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /validators:\n    get:\n      tags:\n        - Delegate\n      summary: Get all validators\n      description: Returns a list of validators in Semux addresses.\n      operationId: getValidators\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetValidatorsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /vote:\n    get:\n      tags:\n        - Delegate\n      summary: Get the vote between a delegate and a voter\n      description: Returns the vote from a voter to a delegate.\n      operationId: getVote\n      parameters:\n        - name: delegate\n          in: query\n          description: Delegate address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: voter\n          in: query\n          description: Voter address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetVoteResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /votes:\n    get:\n      tags:\n        - Delegate\n      summary: Get all votes of a delegate\n      description: Returns all the votes to a delegate as a map of [voter address] =\u003e\n        [votes]\n      operationId: getVotes\n      parameters:\n        - name: delegate\n          in: query\n          description: Delegate address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetVotesResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /accounts:\n    get:\n      tags:\n        - Wallet\n      summary: List all accounts in wallet\n      description: Returns accounts in the wallet.\n      operationId: getAccounts\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAccountsResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /create-account:\n    post:\n      tags:\n        - Wallet\n      summary: Create or import an account to wallet\n      description: Creates a new account by generating a new private key or importing an\n        existing private key when parameter 'privateKey' is provided.\n      operationId: createAccount\n      parameters:\n        - name: name\n          in: query\n          description: Assigned alias to the created account.\n          required: false\n          schema:\n            type: string\n        - name: privateKey\n          in: query\n          description: The private key to be imported, create a new key if omitted\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{96}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateAccountResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /delete-account:\n    post:\n      tags:\n        - Wallet\n      summary: Delete an account from wallet\n      description: Deletes an account from this wallet.\n      operationId: deleteAccount\n      parameters:\n        - name: address\n          in: query\n          description: Address of the account\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteAccountResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/transfer:\n    post:\n      tags:\n        - Wallet\n      summary: Transfer coins\n      description: Transfers coins to another address.\n      operationId: transfer\n      parameters:\n        - name: from\n          in: query\n          description: Sender's address. The account must exist in the wallet of this node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: to\n          in: query\n          description: Recipient's address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: fee\n          in: query\n          description: Transaction fee in nano SEM, default to minimum fee if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Transaction data encoded in hexadecimal string\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/create:\n    post:\n      tags:\n        - Wallet\n      summary: Deploy a contract\n      description: Create a VM contract.\n      operationId: create\n      parameters:\n        - name: from\n          in: query\n          description: Sender's address. The address must exist in the wallet.data of this\n            Semux node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of SEM to transfer in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: The contract data encoded in hexadecimal string\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/call:\n    post:\n      tags:\n        - Wallet\n      summary: Call a contract\n      description: Call a VM contract.\n      operationId: call\n      parameters:\n        - name: from\n          in: query\n          description: Sender's address. The address must exist in the wallet.data of this\n            Semux node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: to\n          in: query\n          description: Recipient's address (the contract address)\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Transaction data encoded in hexadecimal string\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price in nano SEM\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/unvote:\n    post:\n      tags:\n        - Wallet\n      summary: Unvote for a delegate\n      description: Unvotes for a delegate.\n      operationId: unvote\n      parameters:\n        - name: from\n          in: query\n          description: Voter's address. The address must exist in the wallet.data of this\n            Semux node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: to\n          in: query\n          description: Delegate address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Number of votes in nano SEM\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: fee\n          in: query\n          description: Transaction fee in nano SEM, default to minimum fee if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/vote:\n    post:\n      tags:\n        - Wallet\n      summary: Vote for a delegate\n      description: Votes for a delegate.\n      operationId: vote\n      parameters:\n        - name: from\n          in: query\n          description: Voter's address. The address must exist in the wallet.data of this\n            Semux node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: to\n          in: query\n          description: Delegate address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Number of votes in nano SEM\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: fee\n          in: query\n          description: Transaction fee in nano SEM, default to minimum fee if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /transaction/delegate:\n    post:\n      tags:\n        - Wallet\n      summary: Register as delegate\n      description: Registers as a delegate\n      operationId: delegate\n      parameters:\n        - name: from\n          in: query\n          description: Registering address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: fee\n          in: query\n          description: Transaction fee in nano SEM, default to minimum fee if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Delegate name in hexadecimal encoded UTF-8 string, 16 bytes of data\n            at maximum\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /sign-message:\n    post:\n      tags:\n        - Wallet\n      summary: Sign a message\n      description: Sign a message.\n      operationId: signMessage\n      parameters:\n        - name: address\n          in: query\n          description: Signing address. The address must exist in the wallet.data of this\n            Semux node.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: message\n          in: query\n          description: Message to sign in UTF-8 string\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignMessageResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /sign-raw-transaction:\n    post:\n      tags:\n        - Wallet\n      summary: Sign an unsigned raw transaction\n      description: Sign an unsigned raw transaction then return its hexadecimal encoded\n        string. An unsigned raw transaction can be created using\n        /compose-raw-transaction API.\n      operationId: signRawTransaction\n      parameters:\n        - name: raw\n          in: query\n          description: Unsigned raw transaction encoded in hexadecimal string.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: address\n          in: query\n          description: Signer's address. This address must exist in the wallet.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SignRawTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /local-call:\n    get:\n      tags:\n        - Tool\n      summary: Make a local call\n      description: Executes a new message call immediately without creating a transaction\n        on the block chain.\n      operationId: localCall\n      parameters:\n        - name: to\n          in: query\n          description: Recipient's address (the contract address)\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Transaction data encoded in hexadecimal string\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocalCallResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /local-create:\n    get:\n      tags:\n        - Tool\n      summary: Make a local create\n      description: Executes a contract deployment immediately without creating a\n        transaction on the block chain.\n      operationId: localCreate\n      parameters:\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Transaction data encoded in hexadecimal string\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LocalCreateResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /estimate-gas:\n    get:\n      tags:\n        - Tool\n      summary: Estimate gas usage\n      description: Estimate the gas usage of a transaction.\n      operationId: estimateGas\n      parameters:\n        - name: to\n          in: query\n          description: Recipient's address (the contract address)\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Transaction data encoded in hexadecimal string\n          required: false\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price in nano SEM\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EstimateGasResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /verify-message:\n    get:\n      tags:\n        - Tool\n      summary: Verify a message\n      description: Verify a signed message.\n      operationId: verifyMessage\n      parameters:\n        - name: address\n          in: query\n          description: Address of the message signer\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: message\n          in: query\n          description: Message in UTF-8 string\n          required: true\n          schema:\n            type: string\n        - name: signature\n          in: query\n          description: Signature to verify\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{192}$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyMessageResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /compose-raw-transaction:\n    get:\n      tags:\n        - Tool\n      summary: Compose an unsigned raw transaction\n      description: Compose an unsigned raw transaction then return its hexadecimal encoded\n        string. An unsigned raw transaction can be signed using\n        /sign-raw-transaction API.\n      operationId: composeRawTransaction\n      parameters:\n        - name: network\n          in: query\n          description: Network name\n          required: true\n          schema:\n            type: string\n            enum:\n              - MAINNET\n              - TESTNET\n              - DEVNET\n        - name: type\n          in: query\n          description: Transaction type\n          required: true\n          schema:\n            type: string\n            enum:\n              - TRANSFER\n              - DELEGATE\n              - VOTE\n              - UNVOTE\n              - CREATE\n              - CALL\n        - name: to\n          in: query\n          description: Recipient's address\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n        - name: value\n          in: query\n          description: Amount of value to transfer in nano SEM\n          required: true\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: fee\n          in: query\n          description: Transaction fee in nano SEM, default to minimum fee if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: nonce\n          in: query\n          description: Transaction nonce, default to sender's nonce if omitted\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: timestamp\n          in: query\n          description: Transaction timestamp in milliseconds. Default to current time.\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: data\n          in: query\n          description: Hexadecimal encoded transaction data.\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^(0x)?[0-9a-fA-F]+$\n        - name: gas\n          in: query\n          description: The gas limit for the call\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n        - name: gasPrice\n          in: query\n          description: The gas price\n          required: false\n          schema:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ComposeRawTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\n  /broadcast-raw-transaction:\n    post:\n      tags:\n        - Tool\n      summary: Broadcast a raw transaction\n      description: Broadcasts a signed raw transaction to the network.\n      operationId: broadcastRawTransaction\n      parameters:\n        - name: raw\n          in: query\n          description: Raw transaction encoded in hexadecimal string.\n          required: true\n          schema:\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]+$\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DoTransactionResponse\"\n        \"400\":\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FailureResponse\"\n      security:\n        - basicAuth: []\nsecurity:\n  - basicAuth: []\nservers:\n  - url: /v2.5.0\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    FailureResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always false\n          type: boolean\n        message:\n          description: The exact failing cause\n          type: string\n    AddNodeResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n    AddToBlacklistResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n    AddToWhitelistResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n    CreateAccountResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The address of the newly created account\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n    DoTransactionResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The transaction hash\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n    GetAccountResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/AccountType\"\n    DeleteAccountResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n    GetAccountTransactionsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionType\"\n    GetAccountInternalTransactionsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/InternalTransactionType\"\n    GetAccountPendingTransactionsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionType\"\n    GetAccountVotesResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountVoteType\"\n    GetAccountCodeResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: Account code encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n          nullable: true\n    GetAccountStorageResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: Account storage encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n          nullable: true\n    GetBlockResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/BlockType\"\n    GetDelegateResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/DelegateType\"\n    GetDelegatesResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DelegateType\"\n    GetInfoResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/InfoType\"\n    GetLatestBlockNumberResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The number of the latest block\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    GetLatestBlockResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/BlockType\"\n    GetPeersResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PeerType\"\n    GetPendingTransactionsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionType\"\n    GetTransactionLimitsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/TransactionLimitsType\"\n    GetTransactionResultResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/TransactionResultType\"\n    GetTransactionResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/TransactionType\"\n    GetValidatorsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: A list of validator addresses\n          type: array\n          items:\n            description: Validator address\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n    GetVoteResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: Total votes in nanoSEM\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    GetVotesResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: A map of [voter address] =\u003e [votes]\n          type: object\n          additionalProperties:\n            type: string\n            format: int64\n            pattern: ^\\d+$\n    GetAccountsResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: A list of account addresses\n          type: array\n          items:\n            description: Account address\n            type: string\n            pattern: ^(0x)?[0-9a-fA-F]{40}$\n    SignMessageResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The message signature encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{192}$\n    VerifyMessageResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        valid:\n          description: Whether the signature is valid\n          type: boolean\n    ComposeRawTransactionResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The composed raw transaction encoded in hexadecimal string\n          type: string\n    SignRawTransactionResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The signed raw transaction encoded in hexadecimal string\n          type: string\n    GetSyncingStatusResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/SyncingStatusType\"\n    LocalCallResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/TransactionResultType\"\n    LocalCreateResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          $ref: \"#/components/schemas/TransactionResultType\"\n    EstimateGasResponse:\n      type: object\n      properties:\n        success:\n          description: This property is deprecated, always true\n          type: boolean\n        message:\n          description: Success/error message\n          type: string\n        result:\n          description: The estimated gas usage\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    AccountType:\n      type: object\n      properties:\n        address:\n          description: The address of this account\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        available:\n          description: The available balance of this account\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        locked:\n          description: The locked balance of this account\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        nonce:\n          description: The nonce of this account\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        transactionCount:\n          description: The number of transactions received/sent\n          type: integer\n          format: int32\n        internalTransactionCount:\n          description: The number of internal transactions received/sent\n          type: integer\n          format: int32\n        pendingTransactionCount:\n          description: The number of pending transaction from/to this account\n          type: integer\n          format: int32\n    BlockType:\n      type: object\n      properties:\n        hash:\n          description: The block hash\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        number:\n          description: The block number\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        view:\n          description: \"The view number. # of additional BFT rounds to generated this block\"\n          type: integer\n          format: int32\n        coinbase:\n          description: The block producer's address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        parentHash:\n          description: The hash of the parent block\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        timestamp:\n          description: Block timestamp in milliseconds specified by the block producer.\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        transactionsRoot:\n          description: The Merkle root hash of the transactions\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        resultsRoot:\n          description: The Merkle root hash of the results\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        stateRoot:\n          description: The state root hash. Not enabled yet!\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        data:\n          description: The extra data of this block\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n        transactions:\n          description: A list of transaction in the block\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransactionType\"\n    DelegateType:\n      type: object\n      properties:\n        address:\n          description: Delegate address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        name:\n          description: Delegate name\n          type: string\n        registeredAt:\n          description: Delegate registration block number\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        votes:\n          description: Total votes of the delegate\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        blocksForged:\n          description: The number of blocks produced by this delegate\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        turnsHit:\n          description: Forged blocks when the delegate is a primary validator\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        turnsMissed:\n          description: Missed blocks when the delegate is a primary validator\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        validator:\n          description: Whether the delegate is currently a validator\n          type: boolean\n    AccountVoteType:\n      type: object\n      properties:\n        delegate:\n          $ref: \"#/components/schemas/DelegateType\"\n        votes:\n          description: Total votes from this account to the delegate\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    InfoType:\n      type: object\n      properties:\n        network:\n          description: The connected network\n          type: string\n          enum:\n            - MAINNET\n            - TESTNET\n            - DEVNET\n        capabilities:\n          description: The features supported\n          type: array\n          items:\n            type: string\n        clientId:\n          description: The client identifier string\n          type: string\n        coinbase:\n          description: The address used for establishing connections to the network\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        latestBlockNumber:\n          description: The number of the last block\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        latestBlockHash:\n          description: The hash of the last block\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        activePeers:\n          description: The number of actively connected peers\n          type: integer\n          format: int32\n        pendingTransactions:\n          description: The number of transactions in pending pool\n          type: integer\n          format: int32\n    PeerType:\n      type: object\n      properties:\n        ip:\n          description: The IP address\n          type: string\n          pattern: ^(\\d{1,3}\\.){3}\\d{1,3}$\n        port:\n          description: The port number\n          type: integer\n          format: int32\n        networkVersion:\n          description: The network version\n          type: integer\n          format: int32\n        clientId:\n          description: The client the peer is using\n          type: string\n        peerId:\n          description: The id of the peer\n          type: string\n        latestBlockNumber:\n          description: The latest block number of the peer\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        latency:\n          description: Latency between this node and the peer\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        capabilities:\n          description: The features supported by the peer\n          type: array\n          items:\n            type: string\n    TransactionLimitsType:\n      type: object\n      properties:\n        maxTransactionDataSize:\n          description: The maximum transaction size in bytes\n          type: integer\n          format: int32\n        minTransactionFee:\n          description: The minimum transaction fee in nano SEM\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        minDelegateBurnAmount:\n          description: The amount of nano SEM required to burn for delegate registration\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    TransactionType:\n      type: object\n      properties:\n        hash:\n          description: The transaction hash\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        type:\n          description: The transaction type\n          type: string\n          enum:\n            - COINBASE\n            - TRANSFER\n            - DELEGATE\n            - VOTE\n            - UNVOTE\n            - CREATE\n            - CALL\n        from:\n          description: Sender's address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        to:\n          description: Recipient's address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        value:\n          description: Transaction value in nano SEM\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        fee:\n          description: Transaction fee in nano SEM. For CREATE/CALL, this field is zero;\n            use gas instead\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        nonce:\n          description: The nonce of the sender\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        timestamp:\n          description: Transaction timestamp in milliseconds specified by the sender. There\n            can be a time drift up to 2 hours.\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        data:\n          description: Transaction data encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n        gas:\n          description: The gas limit set by the sender\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        gasPrice:\n          description: The gas Price set by the sender\n          type: string\n          format: int64\n          pattern: ^\\d+$\n    TransactionResultType:\n      type: object\n      properties:\n        blockNumber:\n          description: The number of block that included the transaction\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        code:\n          description: The status of the transaction\n          type: string\n        logs:\n          description: Logs produced when executing this transaction\n          type: array\n          items:\n            $ref: \"#/components/schemas/LogInfoType\"\n        returnData:\n          description: Return data encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n        contractAddress:\n          description: Contract address if this is a CREATE transaction, or NULL\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        gas:\n          description: The gas limit set by the sender\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        gasPrice:\n          description: The gas Price set by the sender\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        gasUsed:\n          description: The gas consumed. For non-VM transactions, this field is zero\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        fee:\n          description: The transaction fee in nano SEM. For VM transactions, this field is\n            zero\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        internalTransactions:\n          description: Internal transactions generated when executing this transaction\n          type: array\n          items:\n            $ref: \"#/components/schemas/InternalTransactionType\"\n    InternalTransactionType:\n      type: object\n      properties:\n        rootTransactionHash:\n          description: The root transaction hash\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        rejected:\n          description: Whether this transaction is rejected\n          type: boolean\n        depth:\n          description: Call depth\n          type: string\n          format: int32\n          pattern: ^\\d+$\n        index:\n          description: Call index\n          type: string\n          format: int32\n          pattern: ^\\d+$\n        type:\n          description: Call type, possibly CALL, DELEGATECALL, CALLCODE, CREATE, CREATE2\n          type: string\n        from:\n          description: Sender address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        to:\n          description: Receiver address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{40}$\n        nonce:\n          description: The sender's nonce\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        gas:\n          description: The gas limit\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        gasPrice:\n          description: The gas Price\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        value:\n          description: The value being passed, in nano SEM\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        data:\n          description: The data being passed, in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n    LogInfoType:\n      type: object\n      properties:\n        address:\n          description: Contract address\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]{64}$\n        data:\n          description: Log data encoded in hexadecimal string\n          type: string\n          pattern: ^(0x)?[0-9a-fA-F]*$\n        topics:\n          description: Log topics encoded in hexadecimal string\n          type: array\n          items:\n            type: string\n    SyncingStatusType:\n      type: object\n      required:\n        - syncing\n      properties:\n        syncing:\n          description: Whether the node is syncing\n          type: boolean\n        startingHeight:\n          description: The block height at which the sync started\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        currentHeight:\n          description: The current block height\n          type: string\n          format: int64\n          pattern: ^\\d+$\n        targetHeight:\n          description: The target block height\n          type: string\n          format: int64\n          pattern: ^\\d+$",
			"canonicalURL": "/github.com/semuxproject/semux-core@3ac4bf663f3eb4e0ab4976bb049ba30ffe8181f4/-/blob/src/main/resources/org/semux/api/swagger/v2.5.0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/semuxproject/semux-core/blob/3ac4bf663f3eb4e0ab4976bb049ba30ffe8181f4/src/main/resources/org/semux/api/swagger/v2.5.0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}