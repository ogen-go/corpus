{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kollalabs/protoc-gen-openapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "examples/google/example/library/v1/openapi.yaml",
			"byteSize": 21881,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/kollalabs/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: LibraryService API\n    description: |-\n        This API represents a simple digital library.  It lets you manage Shelf\n         resources and Book resources in the library. It defines the following\n         resource model:\n\n         - The API has a collection of [Shelf][google.example.library.v1.Shelf]\n           resources, named `shelves/*`\n\n         - Each Shelf has a collection of [Book][google.example.library.v1.Book]\n           resources, named `shelves/*/books/*`\n    version: 0.0.1\nservers:\n    - url: https://library-example.googleapis.com\npaths:\n    /v1/shelves:\n        get:\n            tags:\n                - LibraryService\n            summary: ListShelves\n            description: |-\n                Lists shelves. The order is unspecified but deterministic. Newly created\n                 shelves will not necessarily be added to the end of this list.\n            operationId: LibraryService_ListShelves\n            parameters:\n                - name: page_size\n                  in: query\n                  description: Requested page size. Server may return fewer shelves than requested. If unspecified, server will pick an appropriate default.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: page_token\n                  in: query\n                  description: A token identifying a page of results the server should return. Typically, this is the value of [ListShelvesResponse.next_page_token][google.example.library.v1.ListShelvesResponse.next_page_token] returned from the previous call to `ListShelves` method.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListShelvesResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - LibraryService\n            summary: CreateShelf\n            description: Creates a shelf, and returns the new Shelf.\n            operationId: LibraryService_CreateShelf\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Shelf'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Shelf'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/shelves/{shelf}:\n        get:\n            tags:\n                - LibraryService\n            summary: GetShelf\n            description: Gets a shelf. Returns NOT_FOUND if the shelf does not exist.\n            operationId: LibraryService_GetShelf\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Shelf'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - LibraryService\n            summary: DeleteShelf\n            description: Deletes a shelf. Returns NOT_FOUND if the shelf does not exist.\n            operationId: LibraryService_DeleteShelf\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/shelves/{shelf}/books:\n        get:\n            tags:\n                - LibraryService\n            summary: ListBooks\n            description: |-\n                Lists books in a shelf. The order is unspecified but deterministic. Newly\n                 created books will not necessarily be added to the end of this list.\n                 Returns NOT_FOUND if the shelf does not exist.\n            operationId: LibraryService_ListBooks\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n                - name: page_size\n                  in: query\n                  description: Requested page size. Server may return fewer books than requested. If unspecified, server will pick an appropriate default.\n                  schema:\n                    type: integer\n                    format: int32\n                - name: page_token\n                  in: query\n                  description: A token identifying a page of results the server should return. Typically, this is the value of [ListBooksResponse.next_page_token][google.example.library.v1.ListBooksResponse.next_page_token]. returned from the previous call to `ListBooks` method.\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListBooksResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        post:\n            tags:\n                - LibraryService\n            summary: CreateBook\n            description: Creates a book, and returns the new Book.\n            operationId: LibraryService_CreateBook\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Book'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/shelves/{shelf}/books/{book}:\n        get:\n            tags:\n                - LibraryService\n            summary: GetBook\n            description: Gets a book. Returns NOT_FOUND if the book does not exist.\n            operationId: LibraryService_GetBook\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n                - name: book\n                  in: path\n                  description: The book id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        put:\n            tags:\n                - LibraryService\n            summary: UpdateBook\n            description: |-\n                Updates a book. Returns INVALID_ARGUMENT if the name of the book\n                 is non-empty and does not equal the existing name.\n            operationId: LibraryService_UpdateBook\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n                - name: book\n                  in: path\n                  description: The book id.\n                  required: true\n                  schema:\n                    type: string\n                - name: name\n                  in: query\n                  description: The name of the book to update.\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Book'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n        delete:\n            tags:\n                - LibraryService\n            summary: DeleteBook\n            description: Deletes a book. Returns NOT_FOUND if the book does not exist.\n            operationId: LibraryService_DeleteBook\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n                - name: book\n                  in: path\n                  description: The book id.\n                  required: true\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content: {}\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/shelves/{shelf}/books/{book}:move:\n        post:\n            tags:\n                - LibraryService\n            summary: MoveBook\n            description: |-\n                Moves a book to another shelf, and returns the new book. The book\n                 id of the new book may not be the same as the original book.\n            operationId: LibraryService_MoveBook\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n                - name: book\n                  in: path\n                  description: The book id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/MoveBookRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Book'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/shelves/{shelf}:merge:\n        post:\n            tags:\n                - LibraryService\n            summary: MergeShelves\n            description: |-\n                Merges two shelves by adding all books from the shelf named\n                 `other_shelf_name` to shelf `name`, and deletes\n                 `other_shelf_name`. Returns the updated shelf.\n                 The book ids of the moved books may not be the same as the original books.\n\n                 Returns NOT_FOUND if either shelf does not exist.\n                 This call is a no-op if the specified shelves are the same.\n            operationId: LibraryService_MergeShelves\n            parameters:\n                - name: shelf\n                  in: path\n                  description: The shelf id.\n                  required: true\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/MergeShelvesRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Shelf'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        Book:\n            required:\n                - name\n            type: object\n            properties:\n                name:\n                    pattern: ^shelves/[a-z2-7]{26}/books/[a-z2-7]{26}$\n                    type: string\n                    description: The resource name of the book. Book names have the form `shelves/{shelf_id}/books/{book_id}`. The name is ignored when creating a book.\n                author:\n                    type: string\n                    description: The name of the book author.\n                title:\n                    type: string\n                    description: The title of the book.\n                read:\n                    type: boolean\n                    description: Value indicating whether the book has been read.\n                borrow_time:\n                    readOnly: true\n                    type: string\n                    description: The previous borrowing timestamp.\n                    format: date-time\n                created_at:\n                    readOnly: true\n                    type: string\n                    description: The creation date and time.\n                    format: date-time\n                updated_at:\n                    readOnly: true\n                    type: string\n                    description: The last update date and time.\n                    format: date-time\n            description: A single book in the library.\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        ListBooksResponse:\n            type: object\n            properties:\n                books:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Book'\n                    description: The list of books.\n                next_page_token:\n                    type: string\n                    description: A token to retrieve next page of results. Pass this value in the [ListBooksRequest.page_token][google.example.library.v1.ListBooksRequest.page_token] field in the subsequent call to `ListBooks` method to retrieve the next page of results.\n            description: Response message for LibraryService.ListBooks.\n        ListShelvesResponse:\n            type: object\n            properties:\n                shelves:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Shelf'\n                    description: The list of shelves.\n                next_page_token:\n                    type: string\n                    description: A token to retrieve next page of results. Pass this value in the [ListShelvesRequest.page_token][google.example.library.v1.ListShelvesRequest.page_token] field in the subsequent call to `ListShelves` method to retrieve the next page of results.\n            description: Response message for LibraryService.ListShelves.\n        MergeShelvesRequest:\n            required:\n                - name\n                - other_shelf_name\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: The name of the shelf we're adding books to.\n                other_shelf_name:\n                    type: string\n                    description: The name of the shelf we're removing books from and deleting.\n            description: Describes the shelf being removed (other_shelf_name) and updated (name) in this merge.\n        MoveBookRequest:\n            required:\n                - name\n                - other_shelf_name\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: The name of the book to move.\n                other_shelf_name:\n                    type: string\n                    description: The name of the destination shelf.\n            description: Describes what book to move (name) and what shelf we're moving it to (other_shelf_name).\n        Shelf:\n            required:\n                - name\n            type: object\n            properties:\n                name:\n                    pattern: ^shelves/[a-z2-7]{26}$\n                    type: string\n                    description: The resource name of the shelf. Shelf names have the form `shelves/{shelf_id}`. The name is ignored when creating a shelf.\n                theme:\n                    type: string\n                    description: The theme of the shelf\n                next_sort_at:\n                    readOnly: true\n                    type: string\n                    description: The next sorting date.\n                    format: date\n                created_at:\n                    readOnly: true\n                    type: string\n                    description: The creation date and time.\n                    format: date-time\n                updated_at:\n                    readOnly: true\n                    type: string\n                    description: The last update date and time.\n                    format: date-time\n            description: A Shelf contains a collection of books with a theme.\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\ntags:\n    - name: LibraryService\n",
			"canonicalURL": "/github.com/kollalabs/protoc-gen-openapi@167dfc54728a0f04c16c8dec89ba5c0b72b78281/-/blob/examples/google/example/library/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kollalabs/protoc-gen-openapi/blob/167dfc54728a0f04c16c8dec89ba5c0b72b78281/examples/google/example/library/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}