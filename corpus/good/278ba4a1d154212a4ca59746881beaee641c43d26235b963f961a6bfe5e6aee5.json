{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "nebl.io-1.2.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/nebl.io-1.2.1-swagger.yaml",
			"byteSize": 73633,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: NeblioTeam\n  description: APIs for Interacting with NTP1 Tokens \u0026 The Neblio Blockchain\n  title: Neblio REST API Suite\n  version: 1.2.1\n  x-apisguru-categories:\n    - enterprise\n  x-logo:\n    url: https://twitter.com/NeblioTeam/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/NeblioTeam/neblio-api-swagger-docs/master/swagger.yaml\n      version: \"2.0\"\n  x-providerName: nebl.io\npaths:\n  \"/ins/addr/{address}\":\n    get:\n      description: Returns NEBL address object containing information on a specific address\n      operationId: getAddress\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing address info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressResponse\"\n      summary: Returns address object\n      tags:\n        - Insight\n  \"/ins/addr/{address}/balance\":\n    get:\n      description: Returns NEBL address balance in satoshis\n      operationId: getAddressBalance\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Address balance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressBalanceResponse\"\n      summary: Returns address balance in sats\n      tags:\n        - Insight\n  \"/ins/addr/{address}/totalReceived\":\n    get:\n      description: Returns total NEBL received by address in satoshis\n      operationId: getAddressTotalReceived\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Total received by address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressTotalReceivedResponse\"\n      summary: Returns total received by address in sats\n      tags:\n        - Insight\n  \"/ins/addr/{address}/totalSent\":\n    get:\n      description: Returns total NEBL sent by address in satoshis\n      operationId: getAddressTotalSent\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Total sent by address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressTotalSentResponse\"\n      summary: Returns total sent by address in sats\n      tags:\n        - Insight\n  \"/ins/addr/{address}/unconfirmedBalance\":\n    get:\n      description: Returns NEBL address unconfirmed balance in satoshis\n      operationId: getAddressUnconfirmedBalance\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Address unconfirmed balance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressUnconfirmedBalanceResponse\"\n      summary: Returns address unconfirmed balance in sats\n      tags:\n        - Insight\n  \"/ins/addr/{address}/utxo\":\n    get:\n      description: Returns information on each Unspent Transaction Output contained at an\n        address\n      operationId: getAddressUtxos\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: UTXOs at an address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressUtxosResponse\"\n      summary: Returns all UTXOs at a given address\n      tags:\n        - Insight\n  \"/ins/block-index/{blockindex}\":\n    get:\n      description: Returns the block hash of a block at a given block index\n      operationId: getBlockIndex\n      parameters:\n        - description: Block Index\n          in: path\n          name: blockindex\n          required: true\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: Object containing block hash\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getBlockIndexResponse\"\n      summary: Returns block hash of block\n      tags:\n        - Insight\n  \"/ins/block/{blockhash}\":\n    get:\n      description: Returns blockchain data for a given block based upon the block hash\n      operationId: getBlock\n      parameters:\n        - description: Block Hash\n          in: path\n          name: blockhash\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing all information on a blockchain block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getBlockResponse\"\n      summary: Returns information regarding a Neblio block\n      tags:\n        - Insight\n  \"/ins/rawtx/{txid}\":\n    get:\n      description: Returns raw transaction hex representing a NEBL transaction\n      operationId: getRawTx\n      parameters:\n        - description: Transaction ID\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing raw hex of transaction\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getRawTxResponse\"\n      summary: Returns raw transaction hex\n      tags:\n        - Insight\n  /ins/status:\n    get:\n      description: Utility API for calling several blockchain node functions - getInfo,\n        getDifficulty, getBestBlockHash, getLastBlockHash\n      operationId: getStatus\n      parameters:\n        - description: Function to call, getInfo, getDifficulty, getBestBlockHash, or\n            getLastBlockHash\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Function Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getStatusResponse\"\n      summary: Utility API for calling several blockchain node functions\n      tags:\n        - Insight\n  /ins/sync:\n    get:\n      description: Returns information on the node's sync progress\n      operationId: getSync\n      responses:\n        \"200\":\n          description: Sync Info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getSyncResponse\"\n      summary: Get node sync status\n      tags:\n        - Insight\n  /ins/tx/send:\n    post:\n      description: \u003e\n        Broadcasts a signed raw transaction to the network. If successful\n        returns the txid of the broadcast trasnaction.\n      operationId: sendTx\n      requestBody:\n        $ref: \"#/components/requestBodies/sendTxRequest\"\n      responses:\n        \"200\":\n          description: An object containing the TXID if the broadcast was successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/broadcastTxResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Broadcasts a signed raw transaction to the network (not NTP1 specific)\n      tags:\n        - Insight\n  \"/ins/tx/{txid}\":\n    get:\n      description: Returns NEBL transaction object representing a NEBL transaction\n      operationId: getTx\n      parameters:\n        - description: Transaction ID\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing transaction info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTxResponse\"\n      summary: Returns transaction object\n      tags:\n        - Insight\n  /ins/txs:\n    get:\n      description: Returns all transactions by block or address\n      operationId: getTxs\n      parameters:\n        - description: Address\n          in: query\n          name: address\n          required: false\n          schema:\n            type: string\n        - description: Block Hash\n          in: query\n          name: block\n          required: false\n          schema:\n            type: string\n        - description: Page number to display\n          in: query\n          name: pageNum\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: List of transactions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTxsResponse\"\n      summary: Get transactions by block or address\n      tags:\n        - Insight\n  \"/ntp1/addressinfo/{address}\":\n    get:\n      description: |\n        Returns both NEBL and NTP1 token UTXOs held at the given address.\n      operationId: getAddressInfo\n      parameters:\n        - description: Neblio Address to get information on.\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object with an array of UTXOs for this address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressInfoResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Information On a Neblio Address\n      tags:\n        - NTP1\n  /ntp1/broadcast:\n    post:\n      description: \u003e\n        Broadcasts a signed raw transaction to the network. If successful\n        returns the txid of the broadcast trasnaction.\n      operationId: broadcastTx\n      requestBody:\n        $ref: \"#/components/requestBodies/broadcastTxRequest\"\n      responses:\n        \"200\":\n          description: An object containing the TXID if the broadcast was successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/broadcastTxResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Broadcasts a signed raw transaction to the network\n      tags:\n        - NTP1\n  /ntp1/burntoken:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that burns an NTP1 token on the\n        Neblio blockchain.\n      operationId: burnToken\n      requestBody:\n        $ref: \"#/components/requestBodies/burnTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the tx to burn the token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/burnTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that burns an NTP1 Token\n      tags:\n        - NTP1\n  /ntp1/issue:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that issues a new NTP1 token on the\n        Neblio blockchain.\n      operationId: issueToken\n      requestBody:\n        $ref: \"#/components/requestBodies/issueTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the token created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/issueTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that issues a new NTP1 Token\n      tags:\n        - NTP1\n  /ntp1/sendtoken:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that sends an NTP1 token on the\n        Neblio blockchain.\n      operationId: sendToken\n      requestBody:\n        $ref: \"#/components/requestBodies/sendTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the tx to send the token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/sendTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that sends an NTP1 Token\n      tags:\n        - NTP1\n  \"/ntp1/stakeholders/{tokenid}\":\n    get:\n      description: \u003e\n        Returns the the the addresses holding a token and how many tokens are\n        held\n      operationId: getTokenHolders\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing all of the addresses holding a token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenHoldersResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get Addresses Holding a Token\n      tags:\n        - NTP1\n  \"/ntp1/tokenid/{tokensymbol}\":\n    get:\n      description: \u003e\n        Translates a token symbol to a tokenId if a token exists with that\n        symbol on the network\n      operationId: getTokenId\n      parameters:\n        - description: Token symbol\n          in: path\n          name: tokensymbol\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing the token symbol and ID, if token symbol does not\n            exist on network, empty object is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenIdResponse\"\n      summary: Returns the tokenId representing a token\n      tags:\n        - NTP1\n  \"/ntp1/tokenmetadata/{tokenid}\":\n    get:\n      description: |\n        Returns the metadata associated with a token at time of issuance.\n      operationId: getTokenMetadataOfIssuance\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing the metadata of a token at issuance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenMetadataResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get Issuance Metadata of Token\n      tags:\n        - NTP1\n  \"/ntp1/tokenmetadata/{tokenid}/{utxo}\":\n    get:\n      description: \u003e\n        Returns the metadata associated with a token for that specific utxo\n        instead of the issuance transaction.\n      operationId: getTokenMetadataOfUtxo\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n        - description: Specific UTXO to request metadata for\n          in: path\n          name: utxo\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing the metadata of a token for a UTXO\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenMetadataResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get UTXO Metadata of Token\n      tags:\n        - NTP1\n  \"/ntp1/transactioninfo/{txid}\":\n    get:\n      description: |\n        Returns detailed information regarding an NTP1 transaction.\n      operationId: getTransactionInfo\n      parameters:\n        - description: Neblio txid to get information on.\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object represending this transaction\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTransactionInfoResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Information On an NTP1 Transaction\n      tags:\n        - NTP1\n  /testnet/faucet:\n    get:\n      description: \u003e\n        Withdraw testnet NEBL to your Neblio Testnet address. By default amount\n        is 1500000000 or 15 NEBL and has a max of 50 NEBL. Only 2 withdrawals\n        allowed per 24 hour period.\n      operationId: testnet_getFaucet\n      parameters:\n        - description: Your Neblio Testnet Address\n          in: query\n          name: address\n          required: true\n          schema:\n            type: string\n        - description: Amount of NEBL to withdrawal in satoshis\n          in: query\n          name: amount\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: Object containing the transaction ID of the withdrawal.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getFaucetResponse\"\n      summary: Withdraws testnet NEBL to the specified address\n      tags:\n        - Testnet-Faucet\n  \"/testnet/ins/addr/{address}\":\n    get:\n      description: Returns NEBL address object containing information on a specific address\n      operationId: testnet_getAddress\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing address info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressResponse\"\n      summary: Returns address object\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/addr/{address}/balance\":\n    get:\n      description: Returns NEBL address balance in satoshis\n      operationId: testnet_getAddressBalance\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Address balance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressBalanceResponse\"\n      summary: Returns address balance in sats\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/addr/{address}/totalReceived\":\n    get:\n      description: Returns total NEBL received by address in satoshis\n      operationId: testnet_getAddressTotalReceived\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Total received by address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressTotalReceivedResponse\"\n      summary: Returns total received by address in sats\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/addr/{address}/totalSent\":\n    get:\n      description: Returns total NEBL sent by address in satoshis\n      operationId: testnet_getAddressTotalSent\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Total sent by address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressTotalSentResponse\"\n      summary: Returns total sent by address in sats\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/addr/{address}/unconfirmedBalance\":\n    get:\n      description: Returns NEBL address unconfirmed balance in satoshis\n      operationId: testnet_getAddressUnconfirmedBalance\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Address unconfirmed balance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressUnconfirmedBalanceResponse\"\n      summary: Returns address unconfirmed balance in sats\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/addr/{address}/utxo\":\n    get:\n      description: Returns information on each Unspent Transaction Output contained at an\n        address\n      operationId: testnet_getAddressUtxos\n      parameters:\n        - description: Address\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: UTXOs at an address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressUtxosResponse\"\n      summary: Returns all UTXOs at a given address\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/block-index/{blockindex}\":\n    get:\n      description: Returns the block hash of a block at a given block index\n      operationId: testnet_getBlockIndex\n      parameters:\n        - description: Block Index\n          in: path\n          name: blockindex\n          required: true\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: Object containing block hash\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getBlockIndexResponse\"\n      summary: Returns block hash of block\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/block/{blockhash}\":\n    get:\n      description: Returns blockchain data for a given block based upon the block hash\n      operationId: testnet_getBlock\n      parameters:\n        - description: Block Hash\n          in: path\n          name: blockhash\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing all information on a blockchain block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getBlockResponse\"\n      summary: Returns information regarding a Neblio block\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/rawtx/{txid}\":\n    get:\n      description: Returns raw transaction hex representing a NEBL transaction\n      operationId: testnet_getRawTx\n      parameters:\n        - description: Transaction ID\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing raw hex of transaction\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getRawTxResponse\"\n      summary: Returns raw transaction hex\n      tags:\n        - Testnet-Insight\n  /testnet/ins/status:\n    get:\n      description: Utility API for calling several blockchain node functions - getInfo,\n        getDifficulty, getBestBlockHash, getLastBlockHash\n      operationId: testnet_getStatus\n      parameters:\n        - description: Function to call, getInfo, getDifficulty, getBestBlockHash, or\n            getLastBlockHash\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Function Response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getStatusResponse\"\n      summary: Utility API for calling several blockchain node functions\n      tags:\n        - Testnet-Insight\n  /testnet/ins/sync:\n    get:\n      description: Returns information on the node's sync progress\n      operationId: testnet_getSync\n      responses:\n        \"200\":\n          description: Sync Info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getSyncResponse\"\n      summary: Get node sync status\n      tags:\n        - Testnet-Insight\n  /testnet/ins/tx/send:\n    post:\n      description: \u003e\n        Broadcasts a signed raw transaction to the network. If successful\n        returns the txid of the broadcast trasnaction.\n      operationId: testnet_sendTx\n      requestBody:\n        $ref: \"#/components/requestBodies/sendTxRequest\"\n      responses:\n        \"200\":\n          description: An object containing the TXID if the broadcast was successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/broadcastTxResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Broadcasts a signed raw transaction to the network (not NTP1 specific)\n      tags:\n        - Testnet-Insight\n  \"/testnet/ins/tx/{txid}\":\n    get:\n      description: Returns NEBL transaction object representing a NEBL transaction\n      operationId: testnet_getTx\n      parameters:\n        - description: Transaction ID\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing transaction info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTxResponse\"\n      summary: Returns transaction object\n      tags:\n        - Testnet-Insight\n  /testnet/ins/txs:\n    get:\n      description: Returns all transactions by block or address\n      operationId: testnet_getTxs\n      parameters:\n        - description: Address\n          in: query\n          name: address\n          required: false\n          schema:\n            type: string\n        - description: Block Hash\n          in: query\n          name: block\n          required: false\n          schema:\n            type: string\n        - description: Page number to display\n          in: query\n          name: pageNum\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: List of transactions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTxsResponse\"\n      summary: Get transactions by block or address\n      tags:\n        - Testnet-Insight\n  \"/testnet/ntp1/addressinfo/{address}\":\n    get:\n      description: |\n        Returns both NEBL and NTP1 token UTXOs held at the given address.\n      operationId: testnet_getAddressInfo\n      parameters:\n        - description: Neblio Address to get information on.\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object with an array of UTXOs for this address\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getAddressInfoResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Information On a Neblio Address\n      tags:\n        - Testnet-NTP1\n  /testnet/ntp1/broadcast:\n    post:\n      description: \u003e\n        Broadcasts a signed raw transaction to the network. If successful\n        returns the txid of the broadcast trasnaction.\n      operationId: testnet_broadcastTx\n      requestBody:\n        $ref: \"#/components/requestBodies/broadcastTxRequest\"\n      responses:\n        \"200\":\n          description: An object containing the TXID if the broadcast was successful\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/broadcastTxResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Broadcasts a signed raw transaction to the network\n      tags:\n        - Testnet-NTP1\n  /testnet/ntp1/burntoken:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that burns an NTP1 token on the\n        Neblio blockchain.\n      operationId: testnet_burnToken\n      requestBody:\n        $ref: \"#/components/requestBodies/burnTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the tx to burn the token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/burnTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that burns an NTP1 Token\n      tags:\n        - Testnet-NTP1\n  /testnet/ntp1/issue:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that issues a new NTP1 token on the\n        Neblio blockchain.\n      operationId: testnet_issueToken\n      requestBody:\n        $ref: \"#/components/requestBodies/issueTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the token created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/issueTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that issues a new NTP1 Token\n      tags:\n        - Testnet-NTP1\n  /testnet/ntp1/sendtoken:\n    post:\n      description: \u003e\n        Builds an unsigned raw transaction that sends an NTP1 token on the\n        Neblio blockchain.\n      operationId: testnet_sendToken\n      requestBody:\n        $ref: \"#/components/requestBodies/sendTokenRequest\"\n      responses:\n        \"200\":\n          description: An object representing the tx to send the token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/sendTokenResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Builds a transaction that sends an NTP1 Token\n      tags:\n        - Testnet-NTP1\n  \"/testnet/ntp1/stakeholders/{tokenid}\":\n    get:\n      description: \u003e\n        Returns the the the addresses holding a token and how many tokens are\n        held\n      operationId: testnet_getTokenHolders\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing all of the addresses holding a token\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenHoldersResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get Addresses Holding a Token\n      tags:\n        - Testnet-NTP1\n  \"/testnet/ntp1/tokenid/{tokensymbol}\":\n    get:\n      description: \u003e\n        Translates a token symbol to a tokenId if a token exists with that\n        symbol on the network\n      operationId: testnet_getTokenId\n      parameters:\n        - description: Token symbol\n          in: path\n          name: tokensymbol\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Object containing the token symbol and ID, if token symbol does not\n            exist on network, empty object is returned.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenIdResponse\"\n      summary: Returns the tokenId representing a token\n      tags:\n        - Testnet-NTP1\n  \"/testnet/ntp1/tokenmetadata/{tokenid}\":\n    get:\n      description: |\n        Returns the metadata associated with a token at time of issuance.\n      operationId: testnet_getTokenMetadataOfIssuance\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing the metadata of a token at issuance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenMetadataResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get Issuance Metadata of Token\n      tags:\n        - Testnet-NTP1\n  \"/testnet/ntp1/tokenmetadata/{tokenid}/{utxo}\":\n    get:\n      description: \u003e\n        Returns the metadata associated with a token for that specific utxo\n        instead of the issuance transaction.\n      operationId: testnet_getTokenMetadataOfUtxo\n      parameters:\n        - description: TokenId to request metadata for\n          in: path\n          name: tokenid\n          required: true\n          schema:\n            type: string\n        - description: Specific UTXO to request metadata for\n          in: path\n          name: utxo\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object containing the metadata of a token for a UTXO\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTokenMetadataResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Get UTXO Metadata of Token\n      tags:\n        - Testnet-NTP1\n  \"/testnet/ntp1/transactioninfo/{txid}\":\n    get:\n      description: |\n        Returns detailed information regarding an NTP1 transaction.\n      operationId: testnet_getTransactionInfo\n      parameters:\n        - description: Neblio txid to get information on.\n          in: path\n          name: txid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: An object represending this transaction\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getTransactionInfoResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n      summary: Information On an NTP1 Transaction\n      tags:\n        - Testnet-NTP1\nservers:\n  - url: https://ntp1node.nebl.io/\ncomponents:\n  requestBodies:\n    sendTokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/sendTokenRequest\"\n      description: Object representing the token to be sent\n      required: true\n    broadcastTxRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/broadcastTxRequest\"\n      description: Object representing a transaction to broadcast\n      required: true\n    issueTokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/issueTokenRequest\"\n      description: Object representing the token to be created\n      required: true\n    sendTxRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/sendTxRequest\"\n      description: Object representing a transaction to broadcast\n      required: true\n    burnTokenRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/burnTokenRequest\"\n      description: Object representing the token to be burned\n      required: true\n  schemas:\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        fields:\n          type: string\n        message:\n          type: string\n      type: object\n    broadcastTxRequest:\n      properties:\n        txHex:\n          description: Signed raw tx hex to broadcast\n          type: string\n      required:\n        - txHex\n      type: object\n    broadcastTxResponse:\n      properties:\n        txid:\n          description: Txid of successfully broadcasted transaction\n          type: string\n      type: object\n    burnTokenRequest:\n      properties:\n        burn:\n          description: Array of objects representing tokens to be burned\n          items:\n            properties:\n              amount:\n                description: Amount of tokens to burn\n                type: number\n              tokenId:\n                description: Unique token id we are burning\n                type: string\n            type: object\n          type: array\n        fee:\n          description: Fee in satoshi to include in the issuance transaction min 10000\n            (0.0001 NEBL)\n          type: number\n        from:\n          description: Array of addresses to send the token from\n          items:\n            type: string\n          type: array\n        transfer:\n          items:\n            properties:\n              address:\n                description: Address to transfer tokens to\n                type: string\n              amount:\n                description: Number of tokens to send\n                type: number\n              tokenId:\n                description: ID of token we are sending\n                type: string\n            type: object\n          type: array\n      required:\n        - fee\n        - burn\n      type: object\n    burnTokenResponse:\n      properties:\n        multisigOutputs:\n          description: Array of indexes of multisig outputs\n          items:\n            type: number\n          type: array\n        ntp1OutputIndexes:\n          description: Array of indexes transfering NTP1 tokens\n          items:\n            type: number\n          type: array\n        txHex:\n          description: Unsigned, raw transaction hex of the transaction to burn the token\n          type: string\n      type: object\n    getAddressBalanceResponse:\n      description: Address balance in satoshis\n      type: number\n    getAddressInfoResponse:\n      properties:\n        address:\n          description: The Neblio Address\n          type: string\n        utxos:\n          description: Array of UTXOs held at this address.\n          items:\n            properties:\n              blockheight:\n                description: Blockheight of the UTXO\n                type: number\n              blocktime:\n                description: Blocktime of the UTXO\n                type: number\n              index:\n                description: Index of the UTXO at this address\n                type: number\n              scriptPubKey:\n                description: Object representing the scruptPubKey of the UTXO\n                type: object\n              tokens:\n                description: Array of NTP1 tokens in this UTXO.\n                items:\n                  properties:\n                    aggregationPolicy:\n                      description: Whether the tokens can be aggregated together\n                      type: string\n                    amount:\n                      description: Number of Tokens\n                      type: number\n                    divisibility:\n                      description: Decimal places the token is divisible to\n                      type: number\n                    issueTxid:\n                      description: TXID the token originally was issued in\n                      type: string\n                    lockStatus:\n                      description: Whether the token is locked, preventing more from being\n                        issued\n                      type: boolean\n                    tokenId:\n                      description: Unique NTP1 identifier for this token\n                      type: string\n                  type: object\n                type: array\n              txid:\n                description: Txid of this UTXO\n                type: string\n              used:\n                description: Whether the UTXO has been used\n                type: boolean\n              value:\n                description: Value of the UTXO in NEBL satoshi\n                type: number\n            type: object\n          type: array\n      type: object\n    getAddressResponse:\n      properties:\n        addrStr:\n          description: Address in string form\n          type: string\n        balance:\n          description: NEBL balance\n          type: number\n        balanceSat:\n          description: NEBL balance in satoshis\n          type: number\n        totalReceived:\n          description: Total NEBL received\n          type: number\n        totalReceivedSat:\n          description: Total NEBL received in satoshis\n          type: number\n        totalSent:\n          description: Total NEBL sent\n          type: number\n        totalSentSat:\n          description: Total NEBL sent satoshis\n          type: number\n        transactions:\n          description: Array of transaction ids for this address\n          items:\n            type: string\n          type: array\n        txAppearances:\n          description: Number of transactions for this address\n          type: number\n        unconfirmedBalance:\n          description: Unconfirmed NEBL balance\n          type: number\n        unconfirmedBalanceSat:\n          description: Unconfirmed NEBL balance in satoshis\n          type: number\n        unconfirmedTxAppearances:\n          description: Number of unconfirmed transactions for this address\n          type: number\n      type: object\n    getAddressTotalReceivedResponse:\n      description: Address total received in satoshis\n      type: number\n    getAddressTotalSentResponse:\n      description: Address total sent in satoshis\n      type: number\n    getAddressUnconfirmedBalanceResponse:\n      description: Address unconfirmed balance in satoshis\n      type: number\n    getAddressUtxosResponse:\n      description: Array of objects representing this address' UTXOs\n      items:\n        properties:\n          address:\n            description: Address\n            type: string\n          amount:\n            description: NEBL amount\n            type: number\n          confirmations:\n            description: Number of confirmations\n            type: number\n          scriptPubKey:\n            description: scriptPubKey\n            type: string\n          ts:\n            description: Timestamp\n            type: number\n          txid:\n            description: Transaction ID\n            type: string\n          vout:\n            description: vout\n            type: number\n        type: object\n      type: array\n    getBlockIndexResponse:\n      properties:\n        blockHash:\n          description: Hash of the requested block\n          type: string\n      type: object\n    getBlockResponse:\n      properties:\n        bits:\n          description: Block bits\n          type: string\n        confirmations:\n          description: Number of confirmations block has\n          type: number\n        difficulty:\n          description: Block difficulty\n          type: number\n        hash:\n          description: Block hash\n          type: string\n        height:\n          description: Block height\n          type: number\n        merkleroot:\n          description: Merkleroot of block\n          type: string\n        nextblockhash:\n          description: Hash of the next block on the chain\n          type: string\n        nonce:\n          description: Block nonce\n          type: number\n        previousblockhash:\n          description: Hash of the previous block on the chain\n          type: string\n        reward:\n          description: Number of NEBL awarded in this block\n          type: number\n        size:\n          description: Block size in bytes\n          type: number\n        time:\n          description: Block time relative to epoch\n          type: number\n        tx:\n          description: Array of tx ids in the block\n          items:\n            type: string\n          type: array\n        version:\n          description: Block version\n          type: number\n      type: object\n    getFaucetResponse:\n      properties:\n        data:\n          properties:\n            txId:\n              description: TXID of a successful withdrawal\n              type: string\n          type: object\n        status:\n          description: Whether the withdrawal was successful\n          type: string\n      type: object\n    getRawTxResponse:\n      properties:\n        rawtx:\n          description: Raw hex representing the transaction\n          type: string\n      type: object\n    getStatusResponse:\n      description: Depending on the function called, the structure and information\n        contained in this object will vary\n      type: object\n    getSyncResponse:\n      description: Object containing node sync status\n      properties:\n        blockChainHeight:\n          description: Current blockchain height\n          type: number\n        error:\n          description: Recent sync error messages\n          type: string\n        height:\n          description: Height node is synced to\n          type: number\n        status:\n          description: Current sync status\n          type: string\n        syncPercentage:\n          description: Current sync percentage\n          type: number\n        type:\n          description: Node type\n          type: string\n      type: object\n    getTokenHoldersResponse:\n      properties:\n        aggregationPolicy:\n          description: Whether the tokesn are aggregatable\n          type: string\n        divibility:\n          description: How many decimal points the token is divisble to\n          type: number\n        holders:\n          items:\n            properties:\n              address:\n                type: string\n              amount:\n                type: number\n            type: object\n          type: array\n        lockStatus:\n          description: Whether new issuances of this token are locked\n          type: boolean\n        someUtxo:\n          description: A UTXO of this token\n          type: string\n        tokenId:\n          description: TokenId of the token\n          type: string\n      type: object\n    getTokenIdResponse:\n      properties:\n        tokenId:\n          description: Unique ID of the token\n          type: string\n        tokenName:\n          description: String representing the token Symbol\n          type: string\n      type: object\n    getTokenMetadataResponse:\n      properties:\n        aggregationPolicy:\n          description: Whether the tokens are aggregatable\n          type: string\n        divisibility:\n          description: Decimal places the token is divisible to\n          type: number\n        firstBlock:\n          description: Block number token was issued in\n          type: number\n        issuanceTxid:\n          description: TXID the token was issued with\n          type: string\n        issueAddress:\n          description: Address that issued the tokens\n          type: string\n        lockStatus:\n          description: Whether issuance of more tokens is locked\n          type: boolean\n        metadataOfIssuance:\n          description: Metadata set at issuance\n          properties:\n            data:\n              properties:\n                description:\n                  description: Token description\n                  type: string\n                issuer:\n                  description: Name of token issuer\n                  type: string\n                tokenName:\n                  description: Token symbol\n                  type: string\n                userData:\n                  description: Metadata set by user on token\n                  properties:\n                    meta:\n                      items:\n                        properties:\n                          key:\n                            type: string\n                          value:\n                            type: string\n                        type: object\n                      type: array\n                  type: object\n              type: object\n          type: object\n        metadataOfUtxo:\n          description: Metadata set at issuance\n          properties:\n            data:\n              properties:\n                description:\n                  description: Token description\n                  type: string\n                issuer:\n                  description: Name of token issuer\n                  type: string\n                tokenName:\n                  description: Token symbol\n                  type: string\n                userData:\n                  description: Metadata set by user on token\n                  properties:\n                    meta:\n                      items:\n                        properties:\n                          key:\n                            type: string\n                          value:\n                            type: string\n                        type: object\n                      type: array\n                  type: object\n              type: object\n          type: object\n        numOfBurns:\n          description: Number of times tokens have been burned\n          type: number\n        numOfHolders:\n          description: Total number of addresses this token is held at\n          type: number\n        numOfTransfers:\n          description: Total number of transactions of this token\n          type: number\n        numofIssuance:\n          description: Total number of times this token has been issued\n          type: number\n        tokenId:\n          description: ID of the token\n          type: string\n        totalSupply:\n          description: Total number of tokens in supply\n          type: number\n      type: object\n    getTransactionInfoResponse:\n      properties:\n        blockhash:\n          description: Hash of the block this transaction is in\n          type: string\n        blockheight:\n          description: Block height of this transaction\n          type: number\n        blocktime:\n          description: Block time of this transaction\n          type: number\n        confirmations:\n          description: Number of transaction confirmations\n          type: number\n        fee:\n          description: Total NEBL used as fee for this transcation in satoshis\n          type: number\n        hex:\n          description: Transaction in raw hex\n          type: string\n        locktime:\n          description: Transaction locktime\n          type: number\n        time:\n          description: Transaction time\n          type: number\n        totalsent:\n          description: Total NEBL sent in this transaction in satoshis\n          type: number\n        txid:\n          description: TXID of transaction\n          type: string\n        version:\n          description: Transaction version\n          type: number\n        vin:\n          description: Array of transaction inputs\n          items:\n            properties:\n              previousOutput:\n                properties:\n                  addresses:\n                    items:\n                      type: string\n                    type: array\n                  asm:\n                    type: string\n                  hex:\n                    type: string\n                  reqSigs:\n                    type: number\n                  type:\n                    type: string\n                type: object\n              scriptSig:\n                properties:\n                  asm:\n                    type: string\n                  hex:\n                    type: string\n                type: object\n              sequence:\n                type: number\n              tokens:\n                items:\n                  properties:\n                    aggregationPolicy:\n                      description: Whether the tokens are aggregatable\n                      type: string\n                    amount:\n                      description: Number of tokens\n                      type: number\n                    divisibility:\n                      description: Decimal places the token is divisible to\n                      type: number\n                    issueTxid:\n                      description: TXID the token was issued in\n                      type: string\n                    lockStatus:\n                      description: Whether issuance of more tokens is locked\n                      type: boolean\n                    tokenId:\n                      description: ID of the token\n                      type: string\n                  type: object\n                type: array\n              txid:\n                description: TXID of the input\n                type: string\n              value:\n                description: Value of input in NEBL satoshi\n                type: number\n              vout:\n                description: output index\n                type: number\n            type: object\n          type: array\n        vout:\n          description: Array of transaction outputs\n          items:\n            properties:\n              blockheight:\n                description: Blockheight of this transaction\n                type: number\n              n:\n                description: Output index\n                type: number\n              scriptPubKey:\n                properties:\n                  addresses:\n                    items:\n                      type: string\n                    type: array\n                  asm:\n                    type: string\n                  hex:\n                    type: string\n                  reqSigs:\n                    type: number\n                  type:\n                    type: string\n                type: object\n              tokens:\n                items:\n                  properties:\n                    aggregationPolicy:\n                      description: Whether the tokens are aggregatable\n                      type: string\n                    amount:\n                      description: Number of tokens\n                      type: number\n                    divisibility:\n                      description: Decimal places the token is divisible to\n                      type: number\n                    issueTxid:\n                      description: TXID the token was issued in\n                      type: string\n                    lockStatus:\n                      description: Whether issuance of more tokens is locked\n                      type: boolean\n                    tokenId:\n                      description: ID of the token\n                      type: string\n                  type: object\n                type: array\n              used:\n                description: Whether this output has now been used\n                type: boolean\n              usedBlockheight:\n                description: Blockheight this output was used in\n                type: number\n              usedTxid:\n                description: TXID this output was used in\n                type: string\n              value:\n                description: Value of the output in NEBL satoshi\n                type: number\n            type: object\n          type: array\n      type: object\n    getTxResponse:\n      properties:\n        blockhash:\n          description: Hash of the block this transaction is in\n          type: string\n        blockheight:\n          description: Block height of this transaction\n          type: number\n        blocktime:\n          description: Block time of this transaction\n          type: number\n        confirmations:\n          description: Number of transaction confirmations\n          type: number\n        fee:\n          description: Total NEBL used as fee for this transcation in satoshis\n          type: number\n        fees:\n          description: Total NEBL used in fees for this transaction\n          type: number\n        locktime:\n          description: Transaction locktime\n          type: number\n        size:\n          description: Transcation size in bytes\n          type: number\n        time:\n          description: Transaction time\n          type: number\n        totalsent:\n          description: Total NEBL sent in this transaction in satoshis\n          type: number\n        txid:\n          description: TXID of transaction\n          type: string\n        valueIn:\n          description: Total NEBL input in this transaction\n          type: number\n        valueOut:\n          description: Total NEBL output in this transaction\n          type: number\n        version:\n          description: Transaction version\n          type: number\n        vin:\n          description: Array of transaction inputs\n          items:\n            properties:\n              n:\n                description: input index\n                type: number\n              scriptSig:\n                properties:\n                  asm:\n                    type: string\n                  hex:\n                    type: string\n                type: object\n              sequence:\n                type: number\n              txid:\n                description: TXID of the input\n                type: string\n              value:\n                description: Value of input in NEBL\n                type: number\n              valueSat:\n                description: Value of input in NEBL satoshi\n                type: number\n              vout:\n                description: output index\n                type: number\n            type: object\n          type: array\n        vout:\n          description: Array of transaction outputs\n          items:\n            properties:\n              blockheight:\n                description: Blockheight of this transaction\n                type: number\n              n:\n                description: Output index\n                type: number\n              scriptPubKey:\n                properties:\n                  addresses:\n                    items:\n                      type: string\n                    type: array\n                  asm:\n                    type: string\n                  hex:\n                    type: string\n                  reqSigs:\n                    type: number\n                  type:\n                    type: string\n                type: object\n              used:\n                description: Whether this output has now been used\n                type: boolean\n              usedBlockheight:\n                description: Blockheight this output was used in\n                type: number\n              usedTxid:\n                description: TXID this output was used in\n                type: string\n              value:\n                description: Value of the output in NEBL\n                type: number\n            type: object\n          type: array\n      type: object\n    getTxsResponse:\n      description: Object containing an array of transaction objects\n      properties:\n        pagesTotal:\n          description: Number of pages of transactions\n          type: number\n        txs:\n          description: Array of transaction objects\n          items:\n            $ref: \"#/components/schemas/getTxResponse\"\n          type: array\n      type: object\n    issueTokenRequest:\n      properties:\n        amount:\n          description: Number of tokens to issue\n          type: number\n        divisibility:\n          description: Number of decimal places the token should be divisble by (0-7)\n          type: number\n        fee:\n          description: Fee in satoshi to include in the issuance transaction min 1000000000\n            (10 NEBL)\n          type: number\n        flags:\n          description: Object representing flags that potentialy modify this transaction\n          properties:\n            splitChange:\n              description: If true change will be split into 2 outputs, one for NEBL change\n                and one for NTP1 change (recommended)\n              type: boolean\n          type: object\n        issueAddress:\n          description: Address issuing the token\n          type: string\n        metadata:\n          description: Object representing all metadata at token issuance\n          properties:\n            description:\n              description: Long name or description of token (ex. Nibble)\n              type: string\n            encryptions:\n              description: Array of encryption instruction objects for encrypting userData\n              items:\n                properties:\n                  format:\n                    description: key format (pem or der)\n                    type: string\n                  key:\n                    description: userData key to encrypt\n                    type: string\n                  pubkey:\n                    description: RSA public key used for encryption\n                    type: string\n                  type:\n                    description: pkcs1 or pkcs8\n                    type: string\n                type: object\n              type: array\n            issuer:\n              description: Name of token issuer\n              type: string\n            rules:\n              description: Object describing token rules\n              properties:\n                expiration:\n                  description: Object describing expiration rules of the token\n                  properties:\n                    locked:\n                      description: Whether this rule can be modified in future transactions\n                      type: boolean\n                    validUntil:\n                      description: Blockheight at wh\n                      type: number\n                  type: object\n                fees:\n                  properties:\n                    items:\n                      description: Array of objects describing fee rules\n                      items:\n                        properties:\n                          address:\n                            description: Address fee is auto sent to\n                            type: string\n                          tokenId:\n                            description: How fee should be paid, either with a tokenId, or\n                              with NEBL if null\n                            type: string\n                          value:\n                            description: Amount of NTP1 token, or NEBL (in satoshi) to pay\n                              as fee\n                            type: string\n                        type: object\n                      type: array\n                    locked:\n                      description: Whether this rule can be modified in future transactions\n                      type: boolean\n                  type: object\n                holders:\n                  description: Array of objects describing what addresses can hold the token\n                  items:\n                    properties:\n                      address:\n                        description: Address that can hold the token\n                        type: string\n                      locked:\n                        description: Whether this rule can be modified in future\n                          transactions\n                        type: boolean\n                    type: object\n                  type: array\n              type: object\n            tokenName:\n              description: Token Symbol it will be identified by (ex. NIBBL)\n              type: string\n            urls:\n              items:\n                properties:\n                  dataHash:\n                    description: Hash of data at the URL, used for verification\n                    type: string\n                  mimeType:\n                    description: mimeType of URL content\n                    type: string\n                  name:\n                    description: Name of the URL\n                    type: string\n                  url:\n                    description: Actual URL\n                    type: string\n                type: object\n              type: array\n            userData:\n              description: Metadata set by user on token\n              properties:\n                meta:\n                  items:\n                    properties:\n                      key:\n                        type: string\n                      value:\n                        type: string\n                    type: object\n                  type: array\n              type: object\n          type: object\n        reissuable:\n          description: whether the token should be reissuable\n          type: boolean\n        transfer:\n          items:\n            properties:\n              address:\n                description: Address to send the amount of issued tokens to\n                type: string\n              amount:\n                type: number\n            type: object\n          type: array\n      required:\n        - issueAddress\n        - amount\n        - divisibility\n        - fee\n        - reissuable\n        - transfer\n      type: object\n    issueTokenResponse:\n      properties:\n        tokenId:\n          description: TokenId of the to be issued token\n          type: string\n        txHex:\n          description: Unsigned, raw transaction hex of the transaction to issue the token\n          type: string\n      type: object\n    sendTokenRequest:\n      properties:\n        fee:\n          description: Fee in satoshi to include in the issuance transaction min 10000\n            (0.0001 NEBL)\n          type: number\n        flags:\n          description: Object representing flags that potentialy modify this transaction\n          properties:\n            splitChange:\n              description: If true change will be split into 2 outputs, one for NEBL change\n                and one for NTP1 change (recommended)\n              type: boolean\n          type: object\n        from:\n          description: Array of addresses to send the token from\n          items:\n            type: string\n          type: array\n        metadata:\n          description: Object representing all metadata at token issuance\n          properties:\n            description:\n              description: Long name or description of token (ex. Nibble)\n              type: string\n            encryptions:\n              description: Array of encryption instruction objects for encrypting userData\n              items:\n                properties:\n                  format:\n                    description: key format (pem or der)\n                    type: string\n                  key:\n                    description: userData key to encrypt\n                    type: string\n                  pubkey:\n                    description: RSA public key used for encryption\n                    type: string\n                  type:\n                    description: pkcs1 or pkcs8\n                    type: string\n                type: object\n              type: array\n            issuer:\n              description: Name of token issuer\n              type: string\n            rules:\n              description: Object describing token rules\n              properties:\n                expiration:\n                  description: Object describing expiration rules of the token\n                  properties:\n                    locked:\n                      description: Whether this rule can be modified in future transactions\n                      type: boolean\n                    validUntil:\n                      description: Blockheight at wh\n                      type: number\n                  type: object\n                fees:\n                  properties:\n                    items:\n                      description: Array of objects describing fee rules\n                      items:\n                        properties:\n                          address:\n                            description: Address fee is auto sent to\n                            type: string\n                          tokenId:\n                            description: How fee should be paid, either with a tokenId, or\n                              with NEBL if null\n                            type: string\n                          value:\n                            description: Amount of NTP1 token, or NEBL (in satoshi) to pay\n                              as fee\n                            type: string\n                        type: object\n                      type: array\n                    locked:\n                      description: Whether this rule can be modified in future transactions\n                      type: boolean\n                  type: object\n                holders:\n                  description: Array of objects describing what addresses can hold the token\n                  items:\n                    properties:\n                      address:\n                        description: Address that can hold the token\n                        type: string\n                      locked:\n                        description: Whether this rule can be modified in future\n                          transactions\n                        type: boolean\n                    type: object\n                  type: array\n              type: object\n            tokenName:\n              description: Token Symbol it will be identified by (ex. NIBBL)\n              type: string\n            urls:\n              items:\n                properties:\n                  dataHash:\n                    description: Hash of data at the URL, used for verification\n                    type: string\n                  mimeType:\n                    description: mimeType of URL content\n                    type: string\n                  name:\n                    description: Name of the URL\n                    type: string\n                  url:\n                    description: Actual URL\n                    type: string\n                type: object\n              type: array\n            userData:\n              description: Metadata set by user on token\n              properties:\n                meta:\n                  items:\n                    properties:\n                      key:\n                        type: string\n                      value:\n                        type: string\n                    type: object\n                  type: array\n              type: object\n          type: object\n        sendutxo:\n          description: Array of UTXOs to send the token from\n          items:\n            type: string\n          type: array\n        to:\n          items:\n            properties:\n              address:\n                description: Address to transfer tokens to\n                type: string\n              amount:\n                description: Number of tokens to send\n                type: number\n              tokenId:\n                description: ID of token we are sending\n                type: string\n            type: object\n          type: array\n      required:\n        - fee\n        - to\n      type: object\n    sendTokenResponse:\n      properties:\n        multisigOutputs:\n          description: Array of indexes of multisig outputs\n          items:\n            type: number\n          type: array\n        ntp1OutputIndexes:\n          description: Array of indexes transfering NTP1 tokens\n          items:\n            type: number\n          type: array\n        txHex:\n          description: Unsigned, raw transaction hex of the transaction to send the token\n          type: string\n      type: object\n    sendTxRequest:\n      properties:\n        txHex:\n          description: Signed raw tx hex to broadcast\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/nebl.io-1.2.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/nebl.io-1.2.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}