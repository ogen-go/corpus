{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Fintan-contents/example-chat"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api-document/openapi.yaml",
			"byteSize": 31371,
			"content": "openapi: 3.0.0\ninfo:\n  title: openapi.yml\n  version: '1.0'\n  description: チャットExampleアプリケーションAPI\nservers:\n  - url: 'http://localhost:9080/api'\npaths:\n  /signup:\n    parameters: []\n    post:\n      summary: サインアップをリクエストする\n      operationId: post-signup\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userName:\n                  type: string\n                  description: ユーザー名\n                mailAddress:\n                  type: string\n                  description: メールアドレス\n                password:\n                  type: string\n                  description: パスワード\n              required:\n                - userName\n                - mailAddress\n                - password\n            examples:\n              example:\n                value:\n                  userName: hoge\n                  mailAddress: hoge@example.com\n                  password: password\n      parameters: []\n      description: ''\n  /signup/verify:\n    post:\n      summary: サインアップする\n      operationId: post-signup-verify\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userToken:\n                  type: string\n                  description: 検証用トークン\n              required:\n                - userToken\n            examples:\n              example:\n                value:\n                  userToken: 472ed5ff-c609-4ead-a9f2-71caeb0f22e1\n  /accounts/me:\n    get:\n      summary: アカウント情報を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  accountId:\n                    type: integer\n                    description: アカウントID\n                  userName:\n                    type: string\n                    description: ユーザー名\n                  mailAddress:\n                    type: string\n                    description: メールアドレス\n                required:\n                  - accountId\n              examples:\n                example:\n                  value:\n                    accountId: 1\n                    userName: user1\n                    mailAddress: user1@example.com\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      operationId: get-accouunts\n    parameters: []\n  /login:\n    post:\n      summary: ログインする\n      operationId: post-login\n      responses:\n        '200':\n          description: No Content\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - COMPLETE\n                      - WAITING_2FA\n                required:\n                  - status\n              examples:\n                example:\n                  value:\n                    status: COMPLETE\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mailAddress:\n                  type: string\n                  description: メールアドレス\n                password:\n                  type: string\n                  description: パスワード\n              required:\n                - mailAddress\n                - password\n            examples:\n              example:\n                value:\n                  mailAddress: user1@example.com\n                  password: pass123-\n      parameters: []\n      description: ''\n  /logout:\n    post:\n      summary: ログアウトする\n      operationId: post-logout\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      description: ''\n  /2fa:\n    parameters: []\n    post:\n      summary: 二要素認証を行う\n      operationId: post-2fa\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                  description: 認証コード\n              required:\n                - code\n            examples:\n              example:\n                value:\n                  code: '123456'\n      description: ''\n  /reset_password:\n    post:\n      summary: パスワードリセットを開始する\n      operationId: post-reset_password\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                mailAddress:\n                  type: string\n                  description: メールアドレス\n              required:\n                - mailAddress\n            examples:\n              example:\n                value:\n                  mailAddress: user1@example.com\n        description: ''\n  /reset_password/verify:\n    post:\n      summary: パスワードリセットの認証トークンを検証する\n      operationId: post-reset_password-verify\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                  description: 検証用トークン\n              required:\n                - token\n            examples:\n              example:\n                value:\n                  token: ebdbf091-f110-4d36-ab86-bd4466912106\n  /reset_password/new:\n    post:\n      summary: 新しいパスワードを設定する\n      operationId: post-reset_password-new\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          description: Not Found\n          $ref: '#/components/responses/NotFound'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                  description: 検証用トークン\n                newPassword:\n                  type: string\n                  description: 新しいパスワード\n              required:\n                - token\n                - newPassword\n            examples:\n              example:\n                value:\n                  token: ebdbf091-f110-4d36-ab86-bd4466912106\n                  newPassword: password2\n  /channels:\n    get:\n      summary: チャンネル一覧を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Channel'\n              examples:\n                example:\n                  value:\n                    - id: 1\n                      name: dummy\n                      type: CHANNEL\n                      allRead: false\n                    - id: 2\n                      name: chatbot\n                      type: SYSTEM\n                      allRead: true\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      operationId: get-channels\n    post:\n      summary: チャンネルを作成する\n      operationId: post-channels\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                channelName:\n                  type: string\n                  description: チャンネル名\n              required:\n                - channelName\n            examples:\n              example:\n                value:\n                  channelName: hoge\n  '/channels/{channelId}':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    get:\n      summary: チャンネル情報を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Channel'\n              examples:\n                example:\n                  value:\n                    id: 1\n                    name: dummy\n                    type: CHANNEL\n                    allRead: false\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: get-channels-channelId\n    delete:\n      summary: チャンネルを削除する\n      operationId: delete-channels-channelId\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  '/channels/{channelId}/messages':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    get:\n      summary: メッセージ一覧を取得する\n      tags: []\n      parameters:\n        - in: query\n          name: latestMessageId\n          required: false\n          schema:\n            type: integer\n          description: 最新のメッセージID\n          example: 30001\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  messages:\n                    type: array\n                    description: メッセージ\n                    items:\n                      type: object\n                      properties:\n                        messageId:\n                          description: メッセージID\n                          type: integer\n                        channelId:\n                          description: チャンネルID\n                          type: integer\n                        accountId:\n                          description: アカウントID\n                          type: integer\n                        userName:\n                          description: ユーザ名\n                          type: string\n                        text:\n                          description: メッセージ\n                          type: string\n                  nextMessageId:\n                    type: integer\n                    description: 次のメッセージID\n                    nullable: true\n                required:\n                  - messages\n              examples:\n                example:\n                  value:\n                    - messageId: 1\n                      channelId: 1\n                      accountId: 0\n                      userName: chatbot\n                      text: '#dummyに参加しました。'\n                    - messageId: 2\n                      channelId: 1\n                      accountId: 1\n                      userName: dummy\n                      text: よろしくお願いします。\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: get-channels-channelId-messages\n    post:\n      summary: メッセージを投稿する\n      operationId: post-channels-channelId-messages\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                text:\n                  type: string\n                  description: メッセージ\n              required:\n                - text\n            examples:\n              example:\n                value:\n                  text: よろしくお願いします\n  '/channels/{channelId}/files':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    post:\n      summary: ファイルを投稿する\n      operationId: post-channels-channelId-files\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '413':\n          $ref: '#/components/responses/PayloadTooLarge'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                image:\n                  type: string\n                  format: binary\n              required:\n                - image\n        description: ''\n  '/channels/{channelId}/members':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    get:\n      summary: メンバー一覧を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      description: アカウントID\n                    name:\n                      type: string\n                      description: ユーザー名\n                    isOwner:\n                      type: boolean\n                      description: 所有チャンネル\n                  required:\n                    - id\n                    - name\n                    - isOwner\n              examples:\n                example:\n                  value:\n                    - id: 1\n                      name: dummy\n                      isOwner: true\n                    - id: 5\n                      name: hoge\n                      isOwner: false\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: get-channels-channelId-members\n    post:\n      summary: メンバーに追加する\n      operationId: post-channels-channelId-members\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                accountId:\n                  type: integer\n                  description: アカウントID\n              required:\n                - accountId\n            examples:\n              example-1:\n                value:\n                  accountId: 10010\n  '/channels/{channelId}/members/me':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    delete:\n      summary: チャンネルから退出する\n      operationId: delete-channels-channelId-members-me\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  '/channels/{channelId}/settings/name':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    put:\n      summary: チャンネルの名前を変更する\n      operationId: put-channels-channelId-settings-name\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '409':\n          $ref: '#/components/responses/Conflict'\n      description: ''\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                channelName:\n                  type: string\n                  description: チャンネル名\n              required:\n                - channelName\n            examples:\n              example:\n                value:\n                  channelName: fuga\n  '/channels/{channelId}/invitable_accounts':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    get:\n      summary: チャンネルに招待可能なアカウント一覧を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      description: アカウントID\n                    name:\n                      type: string\n                      description: ユーザー名\n                  required:\n                    - id\n                    - name\n              examples:\n                example:\n                  value:\n                    - id: 10\n                      name: user1\n                    - id: 20\n                      name: user2\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: get-channels-channelId-invitable_members\n  '/read/{channelId}':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    put:\n      summary: メッセージを既読にする\n      operationId: put-read-channelId\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                messageId:\n                  type: integer\n                  description: メッセージID\n              required:\n                - messageId\n            examples:\n              example:\n                value:\n                  messageId: 30001\n        description: ''\n  /settings/password:\n    put:\n      summary: アカウントのパスワードを変更する\n      operationId: put-settings-password\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n                  format: password\n                  description: 現在のパスワード\n                newPassword:\n                  type: string\n                  format: password\n                  description: 新しいパスワード\n              required:\n                - password\n                - newPassword\n            examples:\n              example:\n                value:\n                  password: password\n                  newPassword: password2\n  /settings/2fa:\n    get:\n      summary: アカウントの二要素認証設定を取得する\n      operationId: get-settings-2fa\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - ENABLED\n                      - DISABLED\n                    description: 2FA認証の設定有無\n              examples:\n                example:\n                  value:\n                    status: DISABLED\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      parameters: []\n  /settings/2fa/enable:\n    post:\n      summary: 二要素認証設定の有効化手続きを開始する\n      operationId: post-settings-2fa-enable\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  secretString:\n                    type: string\n                    description: 秘密鍵\n              examples:\n                example:\n                  value:\n                    secretString: YECBDPTDBOIG2UJOCIADCSL6FIUK4CUY\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /settings/2fa/enable/verify:\n    post:\n      summary: 二要素認証設定を有効にする\n      operationId: post-settings-2fa-enable-verify\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                  description: 認証コード\n              required:\n                - code\n            examples:\n              example:\n                value:\n                  code: '123456'\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /settings/2fa/disable:\n    post:\n      summary: 二要素認証設定を無効にする\n      operationId: post-settings-2fa-disable\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      description: ''\n      parameters: []\n  /systeminfo/notification:\n    post:\n      summary: 通知設定情報を取得する\n      tags: []\n      operationId: get-systeminfo-notification\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  websocketUri:\n                    type: string\n                    description: 認証用トークンを含んだWebSocket URI\n                required:\n                  - websocketUri\n              examples:\n                example:\n                  value:\n                    websocketUri: 'ws://localhost:9080/websocket/chat?token=xxxxxx'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /systeminfo/messages:\n    get:\n      summary: メッセージ一覧を取得する\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                description: メッセージIDをキーとしたメッセージ一覧\n                additionalProperties:\n                  type: string\n              examples:\n                example:\n                  value:\n                    label.welcome: Welcome\n                    validation.upload.notAllowFileExtension: 'アップロードできるファイルの拡張子は「jpg, jpeg, png, gif」のみです。'\n                    validation.upload.fileUnread: ファイルが壊れているため、読み取ることができません。\n        '503':\n          $ref: '#/components/responses/ServiceUnavailable'\n      operationId: get-systeminfo-messages\n  /accounts/me/delete:\n    post:\n      summary: アカウントを削除する\n      operationId: delete-accounts-me-delete\n      responses:\n        '204':\n          description: No Content\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n                  description: パスワード\n              required:\n                - password\n            examples:\n              example:\n                value:\n                  password: 'password'\n  '/channels/{channelId}/history/archive':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n    post:\n      summary: メッセージ履歴ファイルをエクスポートする\n      operationId: post-channels-channelId-history-archive\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  fileKey:\n                    type: string\n                    description: ファイル名\n              examples:\n                example:\n                  value:\n                    secretString: filename\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  '/channels/{channelId}/history/archive/{filekey}':\n    parameters:\n      - in: path\n        schema:\n          type: string\n        example: '20001'\n        name: channelId\n        required: true\n        description: チャンネルID\n      - in: path\n        name: filekey\n        required: true\n        schema:\n          type: string\n        description: ファイル名\n        example: filename\n    get:\n      summary: メッセージ履歴ファイルをダウンロードする\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            text/csv:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n      operationId: get-channels-channelId-history-archive\ncomponents:\n  responses:\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    PayloadTooLarge:\n      description: Payload Too Large\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    ServiceUnavailable:\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Channel:\n      title: Channel\n      type: object\n      description: チャンネル情報\n      properties:\n        id:\n          type: integer\n          description: チャンネルID\n        name:\n          type: string\n          description: チャンネル名\n        type:\n          type: string\n          description: チャンネル種別\n          enum:\n            - CHANNEL\n            - SYSTEM\n        allRead:\n          description: 全メッセージ既読\n          type: boolean\n      required:\n        - id\n        - name\n        - type\n        - allRead\n    Error:\n      title: Error\n      type: object\n      description: エラーレスポンス\n      properties:\n        code:\n          type: string\n          description: エラーコード\n        message:\n          type: string\n          description: エラーメッセージ\n      required:\n        - code\n        - message\n  parameters:\n    channelIdPath:\n      in: path\n      schema:\n        type: string\n      example: '20001'\n      name: channelId\n      required: true\n      description: チャンネルID\n  securitySchemes: {}\n",
			"canonicalURL": "/github.com/Fintan-contents/example-chat@f1285cd5bf1af50a80d6660f0be927fc33f64d37/-/blob/api-document/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Fintan-contents/example-chat/blob/f1285cd5bf1af50a80d6660f0be927fc33f64d37/api-document/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}