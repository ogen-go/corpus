{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/langhua/OFBiz-CAS"
		},
		"file": {
			"name": "oauth2.yaml",
			"size": 0,
			"path": "webapp/openapi-demo/yaml/oauth2.yaml",
			"byteSize": 10443,
			"content": "###############################################################\n# Licensed to the Tianjin Langhua Ltd. under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n###############################################################\n \nopenapi: 3.0.0\ninfo:\n  description: OAuth2 OpenAPI of OFBiz CAS plugin\n  version: 1.0.0\n  title: OAuth2 OpenAPI\n  license:\n    name: Apache License V2\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - description: Localhost Server\n    url: https://localhost:8443/oauth/v2\ntags:\n  - name: Authorization\n    description: Authorize a user by clientId, username and password or by clientId and clientSecret\n  - name: Profile\n    description: Get a user's profile by access token\n  - name: Demo\n    description: OpenAPI demo\npaths:\n  /accessToken:\n    post:\n      tags:\n        - Authorization\n      summary: one step authorization\n      description: one step authorization to get an access_token for a user\n      operationId: authorize\n      parameters:\n        - in: query\n          name: grant_type\n          description: \u003e\n            grant type:\n              - password: grant by password\n          required: true\n          schema:\n            type: string\n            enum:\n              - 'password'\n        - in: query\n          name: client_id\n          description: client id\n          required: true\n          schema:\n            type: string\n          example: SandFlower\n        - in: query\n          name: client_secret\n          description: client secret, app secret and etc., if this parameter exists, username and password will be ignored.\n          required: false\n          schema:\n            type: string\n          example: sandflower\n        - in: query\n          name: username\n          description: user name\n          required: false\n          schema:\n            type: string\n          example: admin\n        - in: query\n          name: password\n          description: user's password\n          required: false\n          schema:\n            type: string\n          example: ofbiz\n      responses:\n        200:\n          description: authorized successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginSuccess'\n        401:\n          description: failed to authorize\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginError'\n\n  /profile:\n    get:\n      tags:\n        - Profile\n      summary: Fetch a user's profile by access token\n      description: Profile may include firstName, lastName, partyId, currentPassword, permissions and roles\n      operationId: profile\n      parameters:\n        - $ref: '#/components/parameters/access_token'\n      responses:\n        200:\n          description: Fetched profile successfully\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/ProfileClientSuccess'\n                  - $ref: '#/components/schemas/ProfileUserSuccess'\n              examples: \n                ProfileClientSuccess:\n                  $ref: '#/components/examples/ProfileClientSuccess'\n                ProfileUserSuccess:\n                  $ref: '#/components/examples/ProfileUserSuccess'\n        401:\n          description: Failed to fetch profile\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileError'\n        405:\n          description: Request method not supported, only 'GET' method is supported\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileMethodError'\n\ncomponents:\n  schemas:\n    LoginSuccess:\n      description: Return authorization success info.\n      type: object\n      properties:\n        access_token:\n          description: access token\n          type: string\n          example: \"AT-7--cEerwho2pOGI2Tw2Mm1hN838KGzvSR1\"\n        token_type:\n          description: token type\n          type: string\n          example: bearer\n        expires_in:\n          description: how many seconds the access token will be expired\n          type: number\n          format: long\n          example: 2592000\n        refresh_token:\n          description: refresh token\n          type: string\n          example: \"RT-6-ZgZuQG7ph7ZnfzI-K-WCbfKyWDUQ8Wqd\"\n      required:\n        - access_token\n        - expires_in\n      example: {\n                 \"access_token\": \"AT-7--cEerwho2pOGI2Tw2Mm1hN838KGzvSR1\",\n                 \"token_type\": \"bearer\",\n                 \"expires_in\": 2592000,\n                 \"refresh_token\": \"RT-6-ZgZuQG7ph7ZnfzI-K-WCbfKyWDUQ8Wqd\"\n               }\n\n    LoginError:\n      description: Return login failed info.\n      type: object\n      properties:\n        status:\n          description: status\n          type: number\n          format: int\n          enum:\n            - 401\n        error:\n          description: error\n          type: string\n          example: \"Unauthorized\"\n        message:\n          description: error message\n          type: string\n          example: \"No message available\"\n        timestamp:\n          description: time stamp of this operation\n          type: number\n          format: long\n          example: 1544518149125\n        path:\n          description: uri requested\n          type: string\n          example: \"/oauth/v2/accessToken\"\n      required:\n        - status\n        - error\n        - timestamp\n      example: {\n                 \"timestamp\": 1544518149125,\n                 \"status\": 401,\n                 \"error\": \"Unauthorized\",\n                 \"message\": \"No message available\",\n                 \"path\": \"/oauth/v2/accessToken\"\n               }\n        \n    ProfileClientSuccess:\n      description: Fetch client profile successfully.\n      type: object\n      properties:\n        service:\n          description: service name\n          type: string\n        client_id:\n          description: client id\n          type: string\n      required:\n        - service\n        - client_id\n\n    ProfileUserSuccess:\n      description: Fetch user profile successfully.\n      type: object\n      properties:\n        service:\n          description: service name\n          type: string\n        client_id:\n          description: client id\n          type: string\n        username:\n          description: user name\n          type: string\n        userprofile:\n          description: user profile\n          type: object\n        permissions:\n          description: user permissions\n          type: array\n          items:\n            type: string\n        roles:\n          description: user roles\n          type: array\n          items:\n            type: string\n      required:\n        - service\n        - client_id\n        - username\n\n    ProfileError:\n      description: Access token not found or expired.\n      type: object\n      properties:\n        error:\n          description: error message\n          type: array\n          items:\n            type: string\n      required:\n        - error\n      example: {\n                 \"error\": [\n                            \"expired_accessToken\"\n                          ]\n               }\n\n    ProfileMethodError:\n      description: Request method error.\n      type: object\n      properties:\n        status:\n          description: http response code\n          type: number\n          format: int\n          enum:\n            - 405\n        error:\n          description: brief message\n          type: string\n          example: \"Method Not Allowed\"\n        message:\n          description: detail message\n          type: string\n          example: \"Request method 'POST' not supported\"\n        timestamp:\n          description: time stamp of this operation\n          type: number\n          format: long\n          example: 1544553057099\n        path:\n          description: uri requested\n          type: string\n          example: \"/oauth/v2/accessToken\"\n        exception:\n          description: exception class name\n          type: string\n          example: \"org.springframework.web.HttpRequestMethodNotSupportedException\"\n      required:\n        - error\n        - status\n      example: {\n                 \"timestamp\": 1544553057099,\n                 \"status\": 405,\n                 \"error\": \"Method Not Allowed\",\n                 \"exception\": \"org.springframework.web.HttpRequestMethodNotSupportedException\",\n                 \"message\": \"Request method 'POST' not supported\",\n                 \"path\": \"/oauth/v2/profile\"\n               }\n\n  examples:\n    ProfileClientSuccess:\n      summary: Fetch client profile success\n      value: {\n               \"service\" : \"OFBiz OAuth2\",\n               \"client_id\" : \"clientId\"\n             }\n\n    ProfileUserSuccess:\n      summary: Fetch user profile success\n      value: {\n               \"permissions\" : [ \"FULLADMIN\" ],\n               \"service\" : \"OFBiz OAuth2\",\n               \"roles\" : [ \"_NA_\", \"CONTACT\", \"ORDER_CLERK\", \"BILL_FROM_VENDOR\", \"CAL_ATTENDEE\", \"ADDRESSEE\", \"APPROVER\", \"CAL_OWNER\", \"SHIPMENT_CLERK\", \"EMAIL_ADMIN\", \"IMAGEAPPROVER\", \"SALES_REP\", \"MANAGER\", \"BUYER\", \"REQ_TAKER\" ],\n               \"userprofile\" : {\n                 \"currentPassword\" : \"$SHA$/0$quENtfe_Lp34wqWP6K0CbCveevU\",\n                 \"firstName\" : \"THE\",\n                 \"lastName\" : \"ADMINISTRATOR\",\n                 \"partyId\" : \"admin\",\n                 \"userLoginId\" : \"admin\"\n               },\n               \"client_id\" : \"clientId\",\n               \"username\" : \"admin\"\n             }\n\n  parameters:\n    access_token:\n      in: query\n      name: access_token\n      description: access token\n      required: true\n      schema:\n        type: string\n      example: \"AT-7--cEerwho2pOGI2Tw2Mm1hN838KGzvSR1\"\n",
			"canonicalURL": "/github.com/langhua/OFBiz-CAS@89311e32f3c1a7cdc2bd8d33efd6b961ddd05c56/-/blob/webapp/openapi-demo/yaml/oauth2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/langhua/OFBiz-CAS/blob/89311e32f3c1a7cdc2bd8d33efd6b961ddd05c56/webapp/openapi-demo/yaml/oauth2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}