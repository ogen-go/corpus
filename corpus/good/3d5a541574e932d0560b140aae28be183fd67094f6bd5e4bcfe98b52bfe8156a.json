{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Nitrokey/nethsm-pkcs11"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/api/openapi.yaml",
			"byteSize": 66739,
			"content": "openapi: 3.0.1\ninfo:\n  description: All endpoints expect exactly the specified JSON. Additional properties\n    will cause a Bad Request Error (400). All HTTP errors contain a JSON structure\n    with an explanation of type string. All \u003ca href=\"https://tools.ietf.org/html/rfc4648#section-4\"\u003ebase64\u003c/a\u003e\n    encoded values are Big Endian.\n  title: NetHSM\n  version: v1\nservers:\n- url: https://nethsmdemo.nitrokey.com/api/v1\npaths:\n  /info:\n    get:\n      description: Information about the vendor and product.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InfoData'\n          description: \"\"\n          x-amf-mediaType: application/json\n      x-state:\n      - Locked\n      - Operational\n      - Unprovisioned\n      x-role:\n      - Public\n    x-amf-description: Public\n  /health:\n    x-amf-description: Public\n  /health/alive:\n    get:\n      description: Retrieve wether NetHSM is alive (powered up). This corresponds\n        to the state \u003ci\u003eLocked\u003c/i\u003e or \u003ci\u003eUnprovisioned\u003c/i\u003e.\n      responses:\n        \"200\":\n          content: {}\n          description: Yes, it is alive.\n        \"412\":\n          content: {}\n          description: Not locked or unprovisioned (in operational state).\n      x-role:\n      - Public\n      x-state:\n      - Locked\n      - Unprovisioned\n  /health/ready:\n    get:\n      description: Retrieve wether NetHSM is alive and ready to take traffic. This\n        corresponds to the state \u003ci\u003eOperational\u003c/i\u003e.\n      responses:\n        \"200\":\n          content: {}\n          description: Yes, it is alive and ready.\n        \"412\":\n          content: {}\n          description: Not alive and ready (not in operational state).\n      x-role:\n      - Public\n      x-state:\n      - Operational\n  /health/state:\n    get:\n      description: Retrieve the state of NetHSM.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthStateData'\n          description: \"\"\n          x-amf-mediaType: application/json\n      x-role:\n      - Public\n      x-state:\n      - Locked\n      - Operational\n      - Unprovisioned\n  /metrics:\n    get:\n      description: 'Get metrics. Precondition: NetHSM is \u003ci\u003eOperational\u003c/i\u003e and a\n        \u003cb\u003eR-Metrics\u003c/b\u003e can be authenticated.'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsData'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Metrics\n      x-state:\n      - Operational\n    x-amf-description: 'Role: \u003cb\u003eR-Metrics\u003c/b\u003e'\n  /provision:\n    post:\n      description: Initial provisioning, only available in \u003ci\u003eUnprovisioned\u003c/i\u003e state.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProvisionRequestData'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Provisioning was successful, NetHSM is \u003ci\u003eOperational\u003c/i\u003e now.\n        \"400\":\n          content: {}\n          description: Malformed request data (e.g. malformed time, weak passphrase).\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eUnprovisioned\u003c/i\u003e).\n      x-role:\n      - Public\n      x-state:\n      - Unprovisioned\n      x-codegen-request-body-name: body\n    x-amf-description: Public\n  /unlock:\n    post:\n      description: Brings a \u003ci\u003eLocked\u003c/i\u003e NetHSM into \u003ci\u003eOperational\u003c/i\u003e state.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlockRequestData'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Unlock was successful, NetHSM is \u003ci\u003eOperational\u003c/i\u003e now.\n        \"400\":\n          content: {}\n          description: Bad request (invalid passphrase).\n        \"403\":\n          content: {}\n          description: Unlock failed (access denied).\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eLocked\u003c/i\u003e).\n      x-role:\n      - Public\n      x-state:\n      - Locked\n      x-codegen-request-body-name: body\n    x-amf-description: Public\n  /lock:\n    post:\n      description: Brings an \u003ci\u003eOperational\u003c/i\u003e NetHSM into \u003ci\u003eLocked\u003c/i\u003e state.\n      responses:\n        \"204\":\n          content: {}\n          description: Lock was successful, NetHSM is \u003ci\u003eLocked\u003c/i\u003e now.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Lock failed (access denied).\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    x-amf-description: Administrator\n  /random:\n    post:\n      description: 'Retrieve cryptographically strong random bytes from NetHSM. Precondition:\n        NetHSM is \u003ci\u003eOperational\u003c/i\u003e and a \u003cb\u003eR-Operator\u003c/b\u003e can be authenticated.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RandomRequestData'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RandomData'\n          description: Successful request for \u003ci\u003elength\u003c/i\u003e random bytes.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Operator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Operator\u003c/b\u003e'\n  /keys:\n    get:\n      description: Get a list of the identifiers of all keys that are currently stored\n        in NetHSM. Separate requests need to be made to request the individual key\n        data.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyList'\n          description: Successful request for the list of keys.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n    post:\n      description: Import a private key into NetHSM and let NetHSM generate a KeyID.\n        The public key will be automatically derived.\n      parameters:\n      - explode: false\n        in: query\n        name: mechanisms\n        schema:\n          items:\n            $ref: '#/components/schemas/KeyMechanism'\n          type: array\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrivateKey'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyItem'\n          description: Successful import of a private key. The response contains a\n            Location header, e.g. \"https://nethsm.local/v1/keys/I8mhHYJ1T3uk2lXrwXehVaw9KZzg7K\".\n          x-amf-mediaType: application/json\n        \"400\":\n          content: {}\n          description: Bad request (specified properties are invalid).\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-amf-requestPayloads:\n      - mediaType: application/x-pem-file\n        schema:\n          $ref: '#/definitions/PemPrivateKey'\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Operator\u003c/b\u003e can GET keys. \u003cb\u003eR-Administrator\u003c/b\u003e\n      can GET and POST keys, and also POST /generate.'\n  /keys/generate:\n    post:\n      description: Generate a pair of public and private key and store it in NetHSM.\n        KeyID is optional as a parameter and will be generated by NetHSM if not present.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KeyGenerateRequestData'\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Successful creation of new public and private key pair. Set\n            Location header to the new KeyID.\n        \"400\":\n          content: {}\n          description: Bad request (specified properties are invalid).\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Administrator\u003c/b\u003e'\n  /keys/{KeyID}:\n    delete:\n      description: Delete a pair of public and private key.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: Key was successfully deleted.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    get:\n      description: Retrieve the public key.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicKey'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n    put:\n      description: Import a private key into NetHSM and store it under the \u003ci\u003eKeyID\u003c/i\u003e\n        path. The public key will be automatically derived.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrivateKey'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful import of a private key.\n        \"400\":\n          content: {}\n          description: Bad request (specified properties are invalid).\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"409\":\n          content: {}\n          description: Conflict, key already exists for this keyID.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Operator\u003c/b\u003e can GET, \u003cb\u003eR-Administrator\u003c/b\u003e can\n      GET, PUT and DELETE. Also, \u003cb\u003eR-Operator\u003c/b\u003e can POST /sign and /decrypt.'\n  /keys/{KeyID}/public.pem:\n    get:\n      description: Retrieve public key in PEM format.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemPublicKey'\n          description: \"\"\n          x-amf-mediaType: application/x-pem-file\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n  /keys/{KeyID}/csr.pem:\n    post:\n      description: Retrieve a certificate signing request in PEM format.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DistinguishedName'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemCSR'\n          description: Successful generation of certificate signing request.\n          x-amf-mediaType: application/x-pem-file\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /keys/{KeyID}/decrypt:\n    post:\n      description: Decrypt an encrypted message with the secret key.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DecryptRequestData'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DecryptData'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"400\":\n          content: {}\n          description: Bad Request, e.g. invalid encryption mode.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Operator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /keys/{KeyID}/sign:\n    post:\n      description: Sign a message with the secret key.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SignRequestData'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignData'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"400\":\n          content: {}\n          description: Bad Request, e.g. invalid signing mode.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Key for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Operator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /keys/{KeyID}/cert:\n    delete:\n      description: Delete the certificate.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: Successful deletion of a certificate.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Certificate with this KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    get:\n      description: Retrieve stored certificate. The content-type header will display\n        the media type of the stored data.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemCert'\n          description: \"\"\n          x-amf-mediaType: application/x-pem-file\n          x-amf-responsePayloads:\n          - mediaType: application/x-x509-ca-cert\n          - mediaType: application/pgp-keys\n            schema:\n              $ref: '#/definitions/PGPPrivateKey'\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: Certificate for KeyID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n    put:\n      description: Store a certificate. Maximum size 1MB. The content-type header\n        provides the media type. Only application/json, application/x-pem-file, application/x-x509-ca-cert,\n        application/octet-stream, text/plain and application/pgp-keys is allowed.\n      parameters:\n      - in: path\n        name: KeyID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PemCert'\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Successful import of a certificate.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"409\":\n          content: {}\n          description: Conflict, certificate already exists for this KeyID.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-amf-requestPayloads:\n      - mediaType: application/x-x509-ca-cert\n      - mediaType: application/pgp-keys\n        schema:\n          $ref: '#/definitions/PGPPrivateKey'\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Operator\u003c/b\u003e can GET, \u003cb\u003eR-Administrator\u003c/b\u003e can\n      GET, PUT and DELETE.'\n  /users:\n    get:\n      description: Get a list of all user ids that have accounts on NetHSM.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserList'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    post:\n      description: Create a new user on NetHSM. The user-ID is generated by NetHSM.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostData'\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Successful creation of user. The response contains a Location\n            header, e.g. \"https://nethsm.local/v1/users/I8mhHYJ1T3uk2lXrwXehVaw9KZzg7K\".\n        \"400\":\n          content: {}\n          description: Bad request (specified properties are invalid, e.g. weak passphrase).\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Administrator\u003c/b\u003e can GET, POST'\n  /users/{UserID}:\n    delete:\n      description: Delete a user from keyfender.\n      parameters:\n      - in: path\n        name: UserID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content: {}\n          description: Successful deletion of user.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: User not found for this user-ID.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    get:\n      description: 'Get user info: name and role.'\n      parameters:\n      - in: path\n        name: UserID\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserData'\n          description: \"\"\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: User for UserID not found.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n    put:\n      description: Create a user on keyfender.\n      parameters:\n      - in: path\n        name: UserID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostData'\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Successful creation of user.\n        \"400\":\n          content: {}\n          description: Bad request (specified properties are invalid, e.g. weak passphrase).\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"409\":\n          content: {}\n          description: Conflict - user already exists for this user-ID.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n    x-amf-description: 'Role: \u003cb\u003eR-Operator\u003c/b\u003e can GET users, and POST their own\n      passphrase, \u003cb\u003eR-Administrator\u003c/b\u003e can GET, PUT and DELETE, and POST the passphrase\n      for everyone.'\n  /users/{UserID}/passphrase:\n    post:\n      description: Update the passphrase.\n      parameters:\n      - in: path\n        name: UserID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPassphrasePostData'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful change of passphrase.\n        \"400\":\n          content: {}\n          description: Bad request - weak passphrase.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"404\":\n          content: {}\n          description: User not found for this user-ID.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      - Operator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config:\n    x-amf-description: 'Role: \u003cb\u003eR-Administrator\u003c/b\u003e'\n  /config/unlock-passphrase:\n    put:\n      description: Update the unlock passphrase.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnlockPassphraseConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful change of passphrase.\n        \"400\":\n          content: {}\n          description: Bad request - weak passphrase.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/unattended-boot:\n    get:\n      description: 'Read unattended boot configuration: is it on or off?'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnattendedBootConfig'\n          description: Successful read of unattended boot configuration.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    put:\n      description: 'Configure unattended boot: switch it on or off (flip the switch).'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnattendedBootConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful change of unattended boot mode.\n        \"400\":\n          content: {}\n          description: Bad request - invalid status setting.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/tls: {}\n  /config/tls/public.pem:\n    get:\n      description: Get public key for NetHSMs https API.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemPublicKey'\n          description: Successful retrieval of public key.\n          x-amf-mediaType: application/x-pem-file\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /config/tls/cert.pem:\n    get:\n      description: Get certificate for NetHSMs https API.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemCert'\n          description: Successful retrieval of certificate.\n          x-amf-mediaType: application/x-pem-file\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    put:\n      description: Set certificate for NetHSMs https API e.g. to replace self-signed\n        intital certificate.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PemCert'\n        required: false\n      responses:\n        \"201\":\n          content: {}\n          description: Successfully set certificate.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/tls/csr.pem:\n    put:\n      description: Get NetHSM certificate signing request e.g. to replace self-signed\n        intital certificate.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DistinguishedName'\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PemCSR'\n          description: Successful generation of certificate signing request.\n          x-amf-mediaType: application/x-pem-file\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/network:\n    get:\n      description: Get network configuration. IP address, netmask, router.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkConfig'\n          description: Successful retrieval of network configuration.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    put:\n      description: Configure network.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NetworkConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Succesful update of network configuration.\n        \"400\":\n          content: {}\n          description: Bad request - invalid input format.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/logging:\n    get:\n      description: Get logging configuration. Protocol is always syslog over UDP.\n        Configurable are IP adress and port, log level.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoggingConfig'\n          description: Successful retrieval of logging configuration.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    put:\n      description: Configure log level and destination.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoggingConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Succesful update of logging configuration.\n        \"400\":\n          content: {}\n          description: Bad request - invalid input format.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/backup-passphrase:\n    put:\n      description: Update the backup passphrase.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BackupPassphraseConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful change of passphrase.\n        \"400\":\n          content: {}\n          description: Bad request - weak passphrase.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /config/time:\n    get:\n      description: Get system time.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeConfig'\n          description: Successful retrieval of system time.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n    put:\n      description: Configure system time.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TimeConfig'\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Succesful update of system time.\n        \"400\":\n          content: {}\n          description: Bad request - invalid input format.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /system:\n    x-amf-description: 'Role: \u003cb\u003eR-Administrator\u003c/b\u003e'\n  /system/info:\n    get:\n      description: Get detailed system information, including firmware version, system\n        software version, hardware version.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemInfo'\n          description: Successful retrieval of system information.\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/reboot:\n    post:\n      description: Reboot NetHSM.\n      responses:\n        \"204\":\n          content: {}\n          description: About to reboot NetHSM.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/shutdown:\n    post:\n      description: Shut down NetHSM.\n      responses:\n        \"204\":\n          content: {}\n          description: About to shut down NetHSM.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/reset:\n    post:\n      description: Reset NetHSM to factory settings.\n      responses:\n        \"204\":\n          content: {}\n          description: About to reset NetHSM.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/update:\n    post:\n      description: Update NetHSM software.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemUpdateData'\n          description: Successfully verified update image (authenticity, integrity,\n            and version number).\n          x-amf-mediaType: application/json\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"409\":\n          content: {}\n          description: Conflict - Major version downgrade is not allowed.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n      x-codegen-request-body-name: body\n  /system/commit-update:\n    post:\n      description: Commit update of NetHSM software.\n      responses:\n        \"204\":\n          content: {}\n          description: About to update NetHSM.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e or update\n            image is not present - call /update first).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/cancel-update:\n    post:\n      description: Cancel update of NetHSM software.\n      responses:\n        \"204\":\n          content: {}\n          description: Update successfully cancelled.\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e or update\n            image is not present - call /update first).\n      security:\n      - basic: []\n      x-role:\n      - Administrator\n      x-state:\n      - Operational\n  /system/backup:\n    post:\n      description: Back up the key store to a backup file.\n      responses:\n        \"200\":\n          content: {}\n          description: Successful retrieval of backup data.\n          x-amf-mediaType: application/octet-stream\n        \"401\":\n          content: {}\n          description: Authentication required but none provided.\n        \"403\":\n          content: {}\n          description: Access denied.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eOperational\u003c/i\u003e or \u003ci\u003eBackup\n            Passphrase\u003c/i\u003e was not set).\n      security:\n      - basic: []\n      x-role:\n      - Backup\n      x-state:\n      - Operational\n  /system/restore:\n    post:\n      description: Restore the key store from a backup file. Only available in \u003ci\u003eUnprovisioned\u003c/i\u003e\n        state.\n      parameters:\n      - in: query\n        name: backupPassphrase\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: systemTime\n        required: true\n        schema:\n          format: date-time\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Successful restore from backup data.\n        \"400\":\n          content: {}\n          description: Bad request - restore did not apply.\n        \"412\":\n          content: {}\n          description: Precondition failed (NetHSM was not \u003ci\u003eUnprovisioned\u003c/i\u003e).\n      x-role:\n      - Public\n      x-state:\n      - Unprovisioned\n      x-codegen-request-body-name: body\ncomponents:\n  schemas:\n    KeyPublicData:\n      properties:\n        modulus:\n          type: string\n        publicExponent:\n          type: string\n        data:\n          type: string\n      type: object\n    KeyMechanism:\n      enum:\n      - RSA_Decryption_RAW\n      - RSA_Decryption_PKCS1\n      - RSA_Decryption_OAEP_MD5\n      - RSA_Decryption_OAEP_SHA1\n      - RSA_Decryption_OAEP_SHA224\n      - RSA_Decryption_OAEP_SHA256\n      - RSA_Decryption_OAEP_SHA384\n      - RSA_Decryption_OAEP_SHA512\n      - RSA_Signature_PKCS1\n      - RSA_Signature_PSS_MD5\n      - RSA_Signature_PSS_SHA1\n      - RSA_Signature_PSS_SHA224\n      - RSA_Signature_PSS_SHA256\n      - RSA_Signature_PSS_SHA384\n      - RSA_Signature_PSS_SHA512\n      - EdDSA_Signature\n      - ECDSA_Signature\n      type: string\n    ID:\n      maxLength: 128\n      minLength: 1\n      pattern: ^[a-zA-Z0-9]+$\n      type: string\n    UnlockPassphraseConfig:\n      example:\n        passphrase: This is my unlock passphrase\n      properties:\n        passphrase:\n          minLength: 1\n          type: string\n      required:\n      - passphrase\n      type: object\n    SignRequestData:\n      example:\n        mode: PKCS1\n        message: nhrfotu32409ru0rgert45z54z099u23r03498uhtr==\n      properties:\n        mode:\n          $ref: '#/components/schemas/SignMode'\n        message:\n          pattern: ^[a-zA-Z0-9+/]+={0,3}$\n          type: string\n      required:\n      - message\n      - mode\n      type: object\n    MetricsData:\n      example:\n        keyOperations: 1132412\n        someOtherMetric: 2222\n      type: object\n    SystemUpdateData:\n      example:\n        releaseNotes: Some new feature is available.\n      properties:\n        releaseNotes:\n          type: string\n      required:\n      - releaseNotes\n      type: object\n    DecryptData:\n      example:\n        decrypted: IBCS8Sc4NkG/O+kqInz7mq/+Pr+5eJUJ/QpfwMp7pPjLn02U7ggyUrxJfN97MChHGekvGEK4Q1LCJ2juHTgjxJ94/QoEAN0dWZ7x3NxjlUgw7yBm7ylldVvToum3lWOVo3wPm5ozSGxpslrqgz2Rid9+uH5ytV8//CrkMOlqlUoj0DWMYbp/sUbYDGwG8lcfvKua67AxT3X/exSKCAwBuxPBr2p3DCTHepdmZCyexL809ZvBRopOQ41ve9X1jXqKzihrCPeoCwEok06EGYhPt3/EKFoer401S0MYtz5J1BvO1cv7ITDOYUCG4Ze8aXEjtnt6MMRx4jY7IqssYO8GrA==\n      properties:\n        decrypted:\n          pattern: ^[a-zA-Z0-9+/]+={0,3}$\n          type: string\n      required:\n      - decrypted\n      type: object\n    SystemInfo:\n      example:\n        firmwareVersion: N/A\n        softwareVersion: \"1.7\"\n        hardwareVersion: N/A\n        buildTag: TAG-NN-g1234567-dirty\n      properties:\n        firmwareVersion:\n          type: string\n        softwareVersion:\n          type: string\n        hardwareVersion:\n          type: string\n        buildTag:\n          type: string\n      required:\n      - buildTag\n      - firmwareVersion\n      - hardwareVersion\n      - softwareVersion\n      type: object\n    UserPassphrasePostData:\n      example:\n        passphrase: Some cool new passphrase\n      properties:\n        passphrase:\n          minLength: 1\n          type: string\n      required:\n      - passphrase\n      type: object\n    UserItem:\n      properties:\n        user:\n          maxLength: 128\n          minLength: 1\n          pattern: ^[a-zA-Z0-9]+$\n          type: string\n      required:\n      - user\n      type: object\n    PemPrivateKey:\n      example: |\n        -----BEGIN RSA PRIVATE KEY-----\n        MIIEpAIBAAKCAQEAseU3o1Ix2euXUi50ht/mpDYnE2J4maJrIOLmDrmz+jv20hsR\n        vPsWnKevYZqEYmvQFNO2Mv9DB5MZfnJ3jL3Aq71Ls1wqOnW9++bZAvqvEVUtlHh0\n        5Rz9k1Ga32/OaHHEZj+lG9PlKI8y63K+sKZLuDYiVy1/gzARjpf2hCmTyQSAvtcA\n        07WXAqorNI8mhcbIhnrGCeKfB8HYJ1T3uk2lXrwXehVaw9KZzg7KuRO0Qnk+IfR6\n        LZjiKiEB9malzqSx3N20vibI672bMR+fqID2oC+ovNOEdRhPlCnztaY1HsnDhJt8\n        MDTjlVGveCElvesuSVnNVHmVugDjEYTU1KV3TwIDAQABAoIBAQClSL5QDX9p5R28\n        apMz+XYW3oWh2h0JScHVVVvBFMNm3S3vet0ZRAV3Wcl2mxUjSN6Vazte2JKTyBWo\n        yXvQFUGdj4x1Qk2t8VWqZYr93KKqLQTjbKPXd/8WUHzf2sbhfcqn4bxrRY4mCB6c\n        aglIocm6hvmTHB/caN33KbQOiX7ZBbwoZG3AKgoJU3SMXnVUfQzl/xnVrWLKESqm\n        5kL0OTGLP091jZyMhcceh54RIuaJjPU4opL0bm46DLeQE4z20GfGCcRK/CUt4bNc\n        c0wvuOyyzGI5p7QB/HCUJqR33m9ydwDkqC4vrORDxpMaSRNerpoGA+cNHREULh2P\n        gaPydXq5AoGBAN3xIhci5LpIVvscNjPyxD6WQq5EZx251IzTnwQ/5E/+qxfYHvwe\n        qAuLJ2+QvNQBuNKk85jwZsfUgPR6kku9dOt3n61lnrBRgGcqWnR0j8/NbpVe1qOe\n        WArLeijpKKnCZ6uwpE6NND398dCmm3WLZZH64+1eLT8PbX/AIzId5zyzAoGBAM0x\n        vWEsKi4pjNMBdaawJMbHEoDmMuib4t+FkbHDkqqSe/OIkHZ9tDQuHWpzDHmb30Na\n        KNwQSNLwu3QK64z1NcjZUJFmu0+3NxSyI/EvNA9tiGCT5iSonsz04oa51AYt+IK5\n        7JjMjo128INrQwtRFSYHx3hoVVW06tZNE037NiD1AoGABqeNOx5bt04l9X+CDIqx\n        4aKFu03nvZdtzQ8nTGxR/ygGnz9mpm6Q4U+5zfmL/9tRXFd/yk0i98jiWPI34rd6\n        gvjiO8O5P1YiQHWforBAA54IO8hNLTi5MRGqxwE+q+BdVWOFeal4MIelsXjdXmfg\n        ksDwBpT1TFe9E8CCDaWh4ksCgYAhHCiR2H2J61x04+RnHD8i8BZ1RC/sxtKp/LSQ\n        uZ0d9vsXRe8Bn7EHRnWqqpvVt6gkBxVWxS3rE7s7s1Nk8GBYY3CTtb790vOJXGFe\n        Vp6Q6ry50MOvIKJXMiCnWq7yvFJATd32nfNWsl2G5zTvS4sdEt5F+Jfkd4f5QoCd\n        8a4/TQKBgQDEdY3XTibkDt80zUFIP6RRAyfM6p2grk+o08De0BBZD/1GX9V9ARNT\n        bC3+2qXXDYGxbMWgsoqsQTREJD78+sdD3q+IfIc1m7XvuIgyLMAalm+Kd1HlUF/J\n        7VCKjgchT0OKwmi0d52TEOiz6U35Jv4GWBstsh1KVpHYiTnwnhAwKg==\n        -----END RSA PRIVATE KEY-----\n      type: string\n    NetworkConfig:\n      example:\n        ipAddress: 192.168.1.1\n        netmask: 255.255.255.0\n        gateway: 0.0.0.0\n      properties:\n        ipAddress:\n          type: string\n        netmask:\n          type: string\n        gateway:\n          type: string\n      required:\n      - gateway\n      - ipAddress\n      - netmask\n      type: object\n    ProvisionRequestData:\n      example:\n        unlockPassphrase: UnlockPassphrase\n        adminPassphrase: Administrator\n        systemTime: 2018-10-30T11:20:50Z\n      properties:\n        unlockPassphrase:\n          minLength: 1\n          type: string\n        adminPassphrase:\n          minLength: 1\n          type: string\n        systemTime:\n          format: date-time\n          type: string\n      required:\n      - adminPassphrase\n      - systemTime\n      - unlockPassphrase\n      type: object\n    UserData:\n      example:\n        realName: Jane User\n        role: Administrator\n      properties:\n        realName:\n          type: string\n        role:\n          $ref: '#/components/schemas/UserRole'\n      required:\n      - realName\n      - role\n      type: object\n    KeyList:\n      items:\n        $ref: '#/components/schemas/KeyItem'\n      type: array\n    TimeConfig:\n      example:\n        time: 2018-10-30T11:20:50Z\n      properties:\n        time:\n          format: date-time\n          type: string\n      required:\n      - time\n      type: object\n    KeyItem:\n      example:\n        key: key\n      properties:\n        key:\n          maxLength: 128\n          minLength: 1\n          pattern: ^[a-zA-Z0-9]+$\n          type: string\n      required:\n      - key\n      type: object\n    LogLevel:\n      enum:\n      - debug\n      - info\n      - warning\n      - error\n      type: string\n    UnlockRequestData:\n      example:\n        passphrase: UnlockPassphrase\n      properties:\n        passphrase:\n          minLength: 1\n          type: string\n      required:\n      - passphrase\n      type: object\n    PrivateKey:\n      example:\n        mechanisms:\n        - RSA_Signature_PSS_SHA256\n        type: RSA\n        key:\n          primeP: frtz7u89gft89uz\n          primeQ: FhJQl11CiY0ifRHXeAqFh4rdSl6\n          publicExponent: w367rg90jhj0asdf98gz\n      properties:\n        mechanisms:\n          items:\n            $ref: '#/components/schemas/KeyMechanism'\n          type: array\n        type:\n          $ref: '#/components/schemas/KeyType'\n        key:\n          $ref: '#/components/schemas/KeyPrivateData'\n      required:\n      - key\n      - mechanisms\n      - type\n      type: object\n    PemCSR:\n      example: |\n        -----BEGIN CERTIFICATE REQUEST-----\n        MIICpzCCAY8CAQAwYjFgMAkGA1UEBhMCREUwDQYDVQQHDAZCZXJsaW4wDwYDVQQK\n        DAhOaXRyb2tleTATBgNVBAMMDG5ldGhzbS5sb2NhbDAeBgkqhkiG9w0BCQEWEWlu\n        Zm9Abml0cm9rZXkuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\n        x7ghfro+VEepYmy2V7HPn5PSRdmGzxewcpmzxTtrZ10BygbEqhPsAr4fWI9pG7iR\n        Xzeza7DMjrQptzKsfSy6dBFmSEZer+hJxuOdhBG/FX6pjwRrZpbOQxyr+aTlE3jm\n        2XP12Cqx0wsYGIoJlWHbGb90IAx9zpdYQgHoJZ4x5ims5vo7h3puPEyVycJH5fMB\n        B9h+2Bxc4BxaPKMm15JR1B7ToB3g16SJY2B1t/aqNmqSBZC4HP1fCuSbBm83OgqR\n        hdk1P6r/vqOVKrxVupDqKkdcf/dRBiQalJ9tQbVbs9OOYfQ6n25GvJTvGtqOEugg\n        it32tV16JXCZjnYePAvtNwIDAQABoAAwDQYJKoZIhvcNAQELBQADggEBABVz67ib\n        ngef9acHkwTYHHQk3MHxQRSLOxUKoDjk1URMgJ2hgL5HR91yQ3gBPxVuEGWdEQXJ\n        C4sM9S3OoM5yFJFj56Y8MaASHFo58V5N1FaFqf3BbVKNzM4Jgrtghw1teJU45xZR\n        0+sjA0YjVJwGnNXfBJdQVNXgWJcXy4bmPSaF7khxDnoP7dmxMcpQ2HKL8X9E/kef\n        KOhz+HtlCWoqwD77aR3wKrYWdn+fwMeTRGNpJLPdKl7vyleb8pjtWUYnNTIP4Zh+\n        BLX93udZxl8sVpJBnLcIWplwJB16hxk5ZODjWUOrhkwZ0MbiPFbKkihc8GMLLEyp\n        dHRjrbgAUrx5DuY=\n        -----END CERTIFICATE REQUEST-----\n      type: string\n    DecryptRequestData:\n      example:\n        mode: RAW\n        encrypted: nhrfotu32409ru0rgert45z54z099u23r03498uhtr==\n      properties:\n        mode:\n          $ref: '#/components/schemas/DecryptMode'\n        encrypted:\n          pattern: ^[a-zA-Z0-9+/]+={0,3}$\n          type: string\n      required:\n      - encrypted\n      - mode\n      type: object\n    SignMode:\n      enum:\n      - PKCS1\n      - PSS_MD5\n      - PSS_SHA1\n      - PSS_SHA224\n      - PSS_SHA256\n      - PSS_SHA384\n      - PSS_SHA512\n      - EdDSA\n      - ECDSA\n      type: string\n    UserPostData:\n      example:\n        realName: Jane User\n        role: Administrator\n        passphrase: My cool passphrase\n      properties:\n        realName:\n          type: string\n        role:\n          $ref: '#/components/schemas/UserRole'\n        passphrase:\n          minLength: 1\n          type: string\n      required:\n      - passphrase\n      - realName\n      - role\n      type: object\n    PemCert:\n      example: |\n        -----BEGIN CERTIFICATE-----\n        MIIEvDCCAqQCCQCZ9VKHZSKydDANBgkqhkiG9w0BAQsFADAgMQ4wDAYDVQQIDAVo\n        ZWxsbzEOMAwGA1UEBwwFaGVsbG8wHhcNMTgxMDMwMTI0MDQ3WhcNMTkxMDMwMTI0\n        MDQ3WjAgMQ4wDAYDVQQIDAVoZWxsbzEOMAwGA1UEBwwFaGVsbG8wggIiMA0GCSqG\n        SIb3DQEBAQUAA4ICDwAwggIKAoICAQC8WRImgeu4U6Yg5q0/SvoieQL5JwPHaCrN\n        6Cc0mj8pnzTBu/f0QYNentcnu0EclD99kla6/gdiJnt0b/IT23o37+t2n0BvEgVQ\n        MJxJ/BjIqSZCykq4SWHKia1OS7tJKE2Q/hgGq/RQJ0zecWKA9SuafXDt0plw0saz\n        P8ZosFyToMYnPB54SzXj4qeD5t2L2dOamTTyziw/GJDGdwssImEDfeWyMRRyHcIa\n        u9HNGaTxjCdBGzCR+PEX3ZHhGzl5iMlgtZUICgXMgAvFZHHEYNtyCW9ZzUB2ZKE2\n        nMbu8hbl7GXRCdJaAqlJfKiGp/WvbmrLhCzcwqhu4UnqGXOxeEQryrkPAbiLafqb\n        fPLHB7dr8OEGlUzp1SCHR1JxwdBVohuO2lL+O5nMD3ZVdVnh2F5Et6I9lO4w9+5n\n        aI6pmO4oy9PsqKvUjxVnEeo1Ee1n9o/4T6fe6XBIQLPqEmy2IXynZP0eJn1Yu9SF\n        TkTSmJ+jRiU7EMaagQrM4Ds5seVNVWKOvUjDQCV+QRZaaPcrkMoFtjLCVMhLgy7M\n        /Dfl63qCcdVkPwdbI/apjfG8qMrez4k3qAZDYgS3fujyuq9wv7xbq2+o0Ck4Ono2\n        mMAA6JDSZr8XwR3ac/UK1KGv+weh1fOVO+c6mSN9M+W1MtkJS+i4/Aj2yDCJzVk3\n        GZpd5/E6WwIDAQABMA0GCSqGSIb3DQEBCwUAA4ICAQAB+8+1dk20P6R+RvDRs1mo\n        e1CegaPH2bl9t1WVuXJIUkrIGDceVr5f19pcaNQRYwZuoQd8VQXCZUpWbo//TWxl\n        ItS3prQgcrfcTi7gCzp1+q1bZk6H21tzESDJTXPFp019/ypdUB4Jsty7qQL73sE3\n        nj67DH+srPCknAhfFag0dPOOjAY19IrIomtBMlvYNpb5XupEUAQFCjk6VdLVAzzl\n        M5Swj+kmLA0OUHTF2zAwj2k+B9RAkbetu/lXLwUiiQNG00j8YP03lErxDd29m2jl\n        NFlSn8YYsgzmihF5fUFTJXP5tS7lF4FnLNbw9pfdeVZBT1uTOcckmFv6n6edttZS\n        FhC70hBB8tFFtemGFquZ0N7w8O7DmIYI936n283rzxyuWdi+JqOUQ0KzpGbFOP3t\n        AOdVcx/JW8kjDdWRcRDr85M4MnkG6HEzW4uzGBtxBplL7KH0L8LX+lx6ySjIrbRD\n        QtwBxwZGtHZJAqskO6vobzzybCKuVUaQwkPrQsK5iLA6Nn1Yxu6XmtlvoPeNIc63\n        Pa3ix8vNFbBTtS6iBdbOPse5qgRV0DC94ocedzKw4QzQRa5REIniJ2X8hVoVAcBh\n        3nQKyZApl2I/pZMlbZ0Cg5yxjhBaxKwci7jyoMerMMo2EdbZN87gP+2x6tKuY1MO\n        35mqzHn+FjWq0eAtpzhO5Q==\n        -----END CERTIFICATE-----\n      type: string\n    KeyMechanisms:\n      items:\n        $ref: '#/components/schemas/KeyMechanism'\n      type: array\n    DecryptMode:\n      enum:\n      - RAW\n      - PKCS1\n      - OAEP_MD5\n      - OAEP_SHA1\n      - OAEP_SHA224\n      - OAEP_SHA256\n      - OAEP_SHA384\n      - OAEP_SHA512\n      type: string\n    PemPublicKey:\n      example: |\n        -----BEGIN PUBLIC KEY-----\n        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx7ghfro+VEepYmy2V7HP\n        n5PSRdmGzxewcpmzxTtrZ10BygbEqhPsAr4fWI9pG7iRXzeza7DMjrQptzKsfSy6\n        dBFmSEZer+hJxuOdhBG/FX6pjwRrZpbOQxyr+aTlE3jm2XP12Cqx0wsYGIoJlWHb\n        Gb90IAx9zpdYQgHoJZ4x5ims5vo7h3puPEyVycJH5fMBB9h+2Bxc4BxaPKMm15JR\n        1B7ToB3g16SJY2B1t/aqNmqSBZC4HP1fCuSbBm83OgqRhdk1P6r/vqOVKrxVupDq\n        Kkdcf/dRBiQalJ9tQbVbs9OOYfQ6n25GvJTvGtqOEuggit32tV16JXCZjnYePAvt\n        NwIDAQAB\n        -----END PUBLIC KEY-----\n      type: string\n    LoggingConfig:\n      example:\n        ipAddress: 0.0.0.0\n        port: 514\n        logLevel: info\n      properties:\n        ipAddress:\n          type: string\n        port:\n          type: integer\n        logLevel:\n          $ref: '#/components/schemas/LogLevel'\n      required:\n      - ipAddress\n      - logLevel\n      - port\n      type: object\n    SystemState:\n      enum:\n      - Unprovisioned\n      - Locked\n      - Operational\n      type: string\n    KeyPrivateData:\n      properties:\n        primeP:\n          type: string\n        primeQ:\n          type: string\n        publicExponent:\n          type: string\n        data:\n          type: string\n      type: object\n    UserList:\n      example:\n      - user: admin\n      - user: backup\n      - user: metrics\n      - user: operator\n      items:\n        $ref: '#/components/schemas/UserItem'\n      type: array\n    DistinguishedName:\n      example:\n        countryName: DE\n        stateOrProvinceName: \"\"\n        localityName: Berlin\n        organizationName: Nitrokey\n        organizationalUnitName: \"\"\n        commonName: nethsm.local\n        emailAddress: info@nitrokey.com\n      properties:\n        countryName:\n          type: string\n        stateOrProvinceName:\n          type: string\n        localityName:\n          type: string\n        organizationName:\n          type: string\n        organizationalUnitName:\n          type: string\n        commonName:\n          type: string\n        emailAddress:\n          type: string\n      required:\n      - commonName\n      - countryName\n      - emailAddress\n      - localityName\n      - organizationName\n      - organizationalUnitName\n      - stateOrProvinceName\n      type: object\n    BackupPassphraseConfig:\n      example:\n        passphrase: This is my backup passphrase\n      properties:\n        passphrase:\n          minLength: 1\n          type: string\n      required:\n      - passphrase\n      type: object\n    HealthStateData:\n      example:\n        state: Unprovisioned\n      properties:\n        state:\n          $ref: '#/components/schemas/SystemState'\n      required:\n      - state\n      type: object\n    Passphrase:\n      minLength: 1\n      type: string\n    RandomRequestData:\n      example:\n        length: 5\n      properties:\n        length:\n          maximum: 1024\n          minimum: 1\n          type: integer\n      required:\n      - length\n      type: object\n    UserRole:\n      enum:\n      - Administrator\n      - Operator\n      - Metrics\n      - Backup\n      type: string\n    PGPPrivateKey:\n      example: |\n        -----BEGIN PGP PRIVATE KEY BLOCK-----\n        Version: GnuPG v2\n\n        MIIEvDCCAqQCCQCZ9VKHZSKydDANBgkqhkiG9w0BAQsFADAgMQ4wDAYDVQQIDAVo\n        ZWxsbzEOMAwGA1UEBwwFaGVsbG8wHhcNMTgxMDMwMTI0MDQ3WhcNMTkxMDMwMTI0\n        MDQ3WjAgMQ4wDAYDVQQIDAVoZWxsbzEOMAwGA1UEBwwFaGVsbG8wggIiMA0GCSqG\n        SIb3DQEBAQUAA4ICDwAwggIKAoICAQC8WRImgeu4U6Yg5q0/SvoieQL5JwPHaCrN\n        6Cc0mj8pnzTBu/f0QYNentcnu0EclD99kla6/gdiJnt0b/IT23o37+t2n0BvEgVQ\n        MJxJ/BjIqSZCykq4SWHKia1OS7tJKE2Q/hgGq/RQJ0zecWKA9SuafXDt0plw0saz\n        P8ZosFyToMYnPB54SzXj4qeD5t2L2dOamTTyziw/GJDGdwssImEDfeWyMRRyHcIa\n        u9HNGaTxjCdBGzCR+PEX3ZHhGzl5iMlgtZUICgXMgAvFZHHEYNtyCW9ZzUB2ZKE2\n        nMbu8hbl7GXRCdJaAqlJfKiGp/WvbmrLhCzcwqhu4UnqGXOxeEQryrkPAbiLafqb\n        fPLHB7dr8OEGlUzp1SCHR1JxwdBVohuO2lL+O5nMD3ZVdVnh2F5Et6I9lO4w9+5n\n        aI6pmO4oy9PsqKvUjxVnEeo1Ee1n9o/4T6fe6XBIQLPqEmy2IXynZP0eJn1Yu9SF\n        TkTSmJ+jRiU7EMaagQrM4Ds5seVNVWKOvUjDQCV+QRZaaPcrkMoFtjLCVMhLgy7M\n        /Dfl63qCcdVkPwdbI/apjfG8qMrez4k3qAZDYgS3fujyuq9wv7xbq2+o0Ck4Ono2\n        mMAA6JDSZr8XwR3ac/UK1KGv+weh1fOVO+c6mSN9M+W1MtkJS+i4/Aj2yDCJzVk3\n        GZpd5/E6WwIDAQABMA0GCSqGSIb3DQEBCwUAA4ICAQAB+8+1dk20P6R+RvDRs1mo\n        e1CegaPH2bl9t1WVuXJIUkrIGDceVr5f19pcaNQRYwZuoQd8VQXCZUpWbo//TWxl\n        ItS3prQgcrfcTi7gCzp1+q1bZk6H21tzESDJTXPFp019/ypdUB4Jsty7qQL73sE3\n        nj67DH+srPCknAhfFag0dPOOjAY19IrIomtBMlvYNpb5XupEUAQFCjk6VdLVAzzl\n        M5Swj+kmLA0OUHTF2zAwj2k+B9RAkbetu/lXLwUiiQNG00j8YP03lErxDd29m2jl\n        NFlSn8YYsgzmihF5fUFTJXP5tS7lF4FnLNbw9pfdeVZBT1uTOcckmFv6n6edttZS\n        FhC70hBB8tFFtemGFquZ0N7w8O7DmIYI936n283rzxyuWdi+JqOUQ0KzpGbFOP3t\n        AOdVcx/JW8kjDdWRcRDr85M4MnkG6HEzW4uzGBtxBplL7KH0L8LX+lx6ySjIrbRD\n        QtwBxwZGtHZJAqskO6vobzzybCKuVUaQwkPrQsK5iLA6Nn1Yxu6XmtlvoPeNIc63\n        Pa3ix8vNFbBTtS6iBdbOPse5qgRV0DC94ocedzKw4QzQRa5REIniJ2X8hVoVAcBh\n        3nQKyZApl2I/pZMlbZ0Cg5yxjhBaxKwci7jyoMerMMo2EdbZN87gP+2x6tKuY1MO\n        35mqzHn+FjWq0eAtpzhO5Q==\n        -----END PGP PRIVATE KEY BLOCK-----\n      type: string\n    PublicKey:\n      example:\n        mechanisms:\n        - RSA_Signature_PSS_SHA256\n        type: RSA\n        key:\n          modulus: FhJQl11CiY0ifRHXeAqFh4rdSl6\n          publicExponent: FhJQl11CiY0ifRHXeAqFh4rdSl6\n        operations: 242\n      properties:\n        mechanisms:\n          items:\n            $ref: '#/components/schemas/KeyMechanism'\n          type: array\n        type:\n          $ref: '#/components/schemas/KeyType'\n        key:\n          $ref: '#/components/schemas/KeyPublicData'\n        operations:\n          type: integer\n      required:\n      - key\n      - mechanisms\n      - operations\n      - type\n      type: object\n    UnattendedBootConfig:\n      example:\n        status: \"off\"\n      properties:\n        status:\n          $ref: '#/components/schemas/Switch'\n      required:\n      - status\n      type: object\n    SignData:\n      example:\n        signature: n4geMX1g8zcfipfcmn+XjM1ccWZULemAa0cuYoh1aXG9UhbE6f54NMp4NjboLf63SQyieJYjjV8q+/o1rFlkZCtKtHAheds+g90zdjOMmXFlXyBTKMhGOSHuleGz0c99x7Alg19KN9wB3Jj2niwweBOR/F4Qv0mdBUv+oO8uPl6vM1fS4tX/VJoCZkDnZzL8duKRNFT0SNQZ+ryLiqQMG53fEPhTplK/wK0Cco8JAYCMh9cxSzpBoCEO+9woxoBGehAjHuLxs6ed6q08W67leuibxZ8c6Q6upmwDlca/gSw0y4w1VIxxts2PORZdNsTWcr3lojcNgWXJcfAqF9/n4A==\n      properties:\n        signature:\n          pattern: ^[a-zA-Z0-9+/]+={0,3}$\n          type: string\n      required:\n      - signature\n      type: object\n    Base64:\n      pattern: ^[a-zA-Z0-9+/]+={0,3}$\n      type: string\n    KeyGenerateRequestData:\n      example:\n        mechanisms:\n        - RSA_Signature_PSS_SHA256\n        type: RSA\n        length: 2048\n        id: myKey2\n      properties:\n        mechanisms:\n          items:\n            $ref: '#/components/schemas/KeyMechanism'\n          type: array\n        type:\n          $ref: '#/components/schemas/KeyType'\n        length:\n          maximum: 8192\n          minimum: 1024\n          type: integer\n        id:\n          type: string\n      required:\n      - mechanisms\n      - type\n      type: object\n    KeyType:\n      enum:\n      - RSA\n      - Curve25519\n      - EC_P224\n      - EC_P256\n      - EC_P384\n      - EC_P521\n      type: string\n    Switch:\n      enum:\n      - \"on\"\n      - \"off\"\n      type: string\n    RandomData:\n      example:\n        random: VGhlIHE=\n      properties:\n        random:\n          pattern: ^[a-zA-Z0-9+/]+={0,3}$\n          type: string\n      required:\n      - random\n      type: object\n    InfoData:\n      example:\n        vendor: Nitrokey GmbH\n        product: NetHSM\n      properties:\n        vendor:\n          type: string\n        product:\n          type: string\n      required:\n      - product\n      - vendor\n      type: object\n  securitySchemes:\n    basic:\n      description: |\n        NetHSM supports Basic Authentication.\n      scheme: basic\n      type: http\nx-amf-baseUriParameters:\n  host:\n    description: NetHSM hostname or IP address. For TLS certificate validation to\n      succeed this should be the same as the \u003ci\u003ecommonName\u003c/i\u003e set in \u003ca href=\"#config_tls_csr_pem_post\"\u003e/config/tls/csr.pem\u003c/a\u003e.\n      In an \u003ci\u003eUnprovisioned\u003c/i\u003e state, this is always 192.168.1.1.\n    default: nethsmdemo.nitrokey.com\nx-amf-annotationTypes:\n  state:\n    schema:\n      type: array\n      items:\n        $ref: '#/definitions/SystemState'\n  role:\n    schema:\n      type: array\n      items:\n        enum:\n        - Administrator\n        - Operator\n        - Metrics\n        - Backup\n        - Public\n        type: string\nx-original-swagger-version: \"2.0\"\n",
			"canonicalURL": "/github.com/Nitrokey/nethsm-pkcs11@d086e623a445f971362c1309bab89ce496796b17/-/blob/api/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Nitrokey/nethsm-pkcs11/blob/d086e623a445f971362c1309bab89ce496796b17/api/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}