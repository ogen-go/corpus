{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/scorelab/LabelLab"
		},
		"file": {
			"name": "labellab.v2.yaml",
			"size": 0,
			"path": "reference/labellab.v2.yaml",
			"byteSize": 24262,
			"content": "openapi: 3.0.0\ninfo:\n  title: LabelLab API\n  version: \"2.0.0\"\n  description: Rest API for machine learning supported web-base image labelling tool.\n  contact:\n    name: SCoRe Lab\n    url: \"http://www.scorelab.org/\"\n    email: info@scorelab.org\n  license:\n    name: Apache 2.0\n    url: \"https://github.com/scorelab/LabelLab/blob/master/LICENSE\"\nservers:\n  - url: \"http://localhost:8000\"\n    description: Local Development\ntags:\n  - name: Authentication\n    description: Auth endpoints\n  - name: Analytics\n    description: Analytics endpoints\n  - name: Classification\n    description: Image classification endpoints\n  - name: Group\n    description: Group endpoints\n  - name: Image\n    description: Image endpoints\n  - name: Label\n    description: Label endpoints\n  - name: Project\n    description: Project endpoints\n  - name: User\n    description: User endpoints\npaths:\n  /auth/register:\n    post:\n      tags:\n        - Authentication\n      summary: Register with email \u0026 password\n      operationId: register\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /auth/login:\n    post:\n      tags:\n        - Authentication\n      summary: Login with email \u0026 password\n      operationId: login\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /auth/google:\n    get:\n      tags:\n        - Authentication\n      summary: Login with google\n      operationId: googleAuth\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /auth/google/callback:\n    get:\n      tags:\n        - Authentication\n      summary: Login with google callback\n      operationId: googleCallback\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /auth/google/moblie:\n    post:\n      tags:\n        - Authentication\n      summary: Login with google callback for mobile app\n      operationId: googleMobile\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /auth/github:\n    get:\n      tags:\n        - Authentication\n      summary: Login with github\n      operationId: githubAuth\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /auth/github/callback:\n    get:\n      tags:\n        - Authentication\n      summary: Login with github callback\n      operationId: githubCallback\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /auth/reset-password:\n    post:\n      tags:\n        - Authentication\n      summary: Reset password\n      operationId: resetPassword\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /auth/reset-password/{userId}/{token}:\n    get:\n      tags:\n        - Authentication\n      summary: Reset password with user id\n      operationId: resetPasswordCallback\n      parameters:\n        - schema:\n            type: string\n          name: userId\n          in: path\n          required: true\n        - schema:\n            type: string\n          name: token\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /auth/update-password:\n    put:\n      tags:\n        - Authentication\n      summary: Update password\n      operationId: updatePassword\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /analytics/{projectId}/timeLabel/get:\n    get:\n      tags:\n        - Analytics\n      summary: Get analytics\n      operationId: getTimeLabel\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /analytics/{projectId}/labelCount/get:\n    get:\n      tags:\n        - Analytics\n      summary: Get label count\n      operationId: getLabelCount\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /classification/classify:\n    post:\n      tags:\n        - Classification\n      summary: Classify a single image\n      operationId: classify\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/classification\"\n        description: Inventory item to add\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /classification/get:\n    get:\n      tags:\n        - Classification\n      summary: Get all classification results\n      operationId: getclassifications\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/classification\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /classification/get/{classificationId}:\n    get:\n      tags:\n        - Classification\n      summary: Get single classification result\n      operationId: getSingleclassification\n      parameters:\n        - schema:\n            type: string\n          name: classificationId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/classification\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /classification/delete/{classificationId}:\n    delete:\n      tags:\n        - Classification\n      summary: Delete classification\n      operationId: deleteclassification\n      parameters:\n        - schema:\n            type: string\n          name: classificationId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /group/{projectId}/create:\n    post:\n      tags:\n        - Group\n      summary: Create a group\n      operationId: createGroup\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /group/{groupId}/get:\n    get:\n      tags:\n        - Group\n      summary: Get a single group data\n      operationId: getGroup\n      parameters:\n        - schema:\n            type: string\n          name: groupId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /group/{groupId}/update:\n    put:\n      tags:\n        - Group\n      summary: Update group data\n      operationId: updateGroup\n      parameters:\n        - schema:\n            type: string\n          name: groupId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /group/{groupId}/delete:\n    delete:\n      tags:\n        - Group\n      summary: Delete group data\n      operationId: deleteGroup\n      parameters:\n        - schema:\n            type: string\n          name: groupId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /image/{projectId}/create:\n    post:\n      tags:\n        - Image\n      summary: Create a image and upload\n      operationId: createImage\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/classification\"\n        description: Inventory item to add\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /image/{imageId}/get:\n    get:\n      tags:\n        - Image\n      summary: Get single image data\n      operationId: getImage\n      parameters:\n        - schema:\n            type: string\n          name: imageId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/classification\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /image/{imageId}/update:\n    put:\n      tags:\n        - Image\n      summary: Update image data\n      operationId: updateImage\n      parameters:\n        - schema:\n            type: string\n          name: imageId\n          in: path\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/classification\"\n        description: Inventory item to add\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /image/{imageId}/delete:\n    delete:\n      tags:\n        - Image\n      summary: Delete image data\n      operationId: deleteImage\n      parameters:\n        - schema:\n            type: string\n          name: imageId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/classification\"\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /label/{projectId}/create:\n    post:\n      tags:\n        - Label\n      summary: Create a label\n      operationId: createLabel\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /label/{labelId}/get:\n    get:\n      tags:\n        - Label\n      summary: Get a single label\n      operationId: getLabel\n      parameters:\n        - schema:\n            type: string\n          name: labelId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /label/{labelId}/update:\n    put:\n      tags:\n        - Label\n      summary: Update label\n      operationId: updateLabel\n      parameters:\n        - schema:\n            type: string\n          name: labelId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /label/{labelId}/delete:\n    delete:\n      tags:\n        - Label\n      summary: Delete label\n      operationId: deleteLabel\n      parameters:\n        - schema:\n            type: string\n          name: labelId\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /project/create:\n    post:\n      tags:\n        - Project\n      summary: Create a single project\n      operationId: createProject\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /project/get/{id}:\n    get:\n      tags:\n        - Project\n      summary: Get project by id\n      operationId: getProject\n      parameters:\n        - schema:\n            type: string\n          name: id\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /project/get:\n    get:\n      tags:\n        - Project\n      summary: Get project by user token\n      operationId: getProjectByToken\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /project/update/{id}:\n    put:\n      tags:\n        - Project\n      summary: Update project\n      operationId: updateProject\n      parameters:\n        - schema:\n            type: string\n          name: id\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /project/delete/{id}:\n    delete:\n      tags:\n        - Project\n      summary: Delete project\n      operationId: deleteProject\n      parameters:\n        - schema:\n            type: string\n          name: id\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /project/add/{projectId}:\n    post:\n      tags:\n        - Project\n      summary: Add member to project\n      operationId: addMember\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /remove/{projectId}:\n    post:\n      tags:\n        - Project\n      summary: Remove member from project\n      operationId: removeMember\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /project/search/{query}:\n    get:\n      tags:\n        - Project\n      summary: Search project\n      operationId: searchProject\n      parameters:\n        - schema:\n            type: string\n          name: query\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /users/info:\n    get:\n      tags:\n        - User\n      summary: searches inventory\n      operationId: getUser\n      description: Test description\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /users/edit:\n    put:\n      tags:\n        - User\n      summary: adds an inventory item\n      operationId: updateUser\n      description: Test description\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\n  /users/search/{query}:\n    get:\n      tags:\n        - User\n      summary: searches inventory\n      operationId: searchUser\n      description: Test description\n      parameters:\n        - schema:\n            type: string\n          name: query\n          in: path\n          required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /users/fetchCount:\n    get:\n      tags:\n        - User\n      summary: searches inventory\n      operationId: getUserCount\n      description: Test description\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n  /users/uploadImage:\n    post:\n      tags:\n        - User\n      summary: adds an inventory item\n      operationId: uploadUserImage\n      description: Test description\n      parameters:\n        - schema:\n            type: string\n          name: projectId\n          in: path\n          required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          description: Conflict\ncomponents:\n  securitySchemes:\n    accessToken:\n      type: http\n      scheme: bearer\n  schemas:\n    classification:\n      type: object\n      required:\n        - id\n        - image_url\n      properties:\n        image_url:\n          type: string\n        label:\n          type: string\n          format: date-time\n        date:\n          type: string\n          format: date-time\n    point:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        label_data:\n          type: string\n        x_coordinate:\n          type: number\n        y_coordinate:\n          type: number\n    image:\n      type: object\n      required:\n        - id\n        - image_name\n      properties:\n        id:\n          type: string\n        image_name:\n          type: string\n        image_url:\n          type: string\n        height:\n          type: string\n        width:\n          type: string\n        labelled:\n          type: integer\n        date:\n          type: string\n          format: date-time\n        latitude:\n          type: number\n        longitude:\n          type: number\n        project_id:\n          type: integer\n    group:\n      type: object\n      required:\n        - id\n        - group_name\n      properties:\n        id:\n          type: string\n        group_name:\n          type: string\n        project_id:\n          type: string\n    label:\n      type: object\n      required:\n        - id\n        - label_naem\n      properties:\n        id:\n          type: string\n        label_name:\n          type: string\n        type:\n          type: string\n        count:\n          type: number\n        project_id:\n          type: string\n    project:\n      type: object\n      required:\n        - id\n        - project_name\n      properties:\n        id:\n          type: string\n        project_name:\n          type: string\n        project_description:\n          type: string\n        admin_id:\n          type: string\n    team:\n      type: object\n      required:\n        - id\n        - team_name\n      properties:\n        id:\n          type: string\n        roles:\n          type: string\n        team_name:\n          type: string\n        project_id:\n          type: string\n    model:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n        source:\n          type: string\n        preprocessing_steps_json_url:\n          type: string\n        layers_json_url:\n          type: string\n        train:\n          type: string\n        test:\n          type: string\n        validation:\n          type: string\n        epochs:\n          type: string\n        batch_size:\n          type: string\n        learning_rate:\n          type: string\n        loss:\n          type: string\n        optimizer:\n          type: string\n        metric:\n          type: string\n        loss_graph_url:\n          type: string\n        accuracy_graph_url:\n          type: string\n        saved_model_url:\n          type: string\n        transfer_source:\n          type: string\n        project_id:\n          type: number\n    user:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        date:\n          type: string\n          format: date-time\n        thumbnail:\n          type: string\n        projects:\n          type: string\n",
			"canonicalURL": "/github.com/scorelab/LabelLab@64eea7cd4a3275e4d53aac8d8b2067bc1953acd4/-/blob/reference/labellab.v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/scorelab/LabelLab/blob/64eea7cd4a3275e4d53aac8d8b2067bc1953acd4/reference/labellab.v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}