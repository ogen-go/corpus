{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "rummblelabs.com-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/rummblelabs.com-1.0.0-swagger.yaml",
			"byteSize": 14081,
			"content": "openapi: 3.0.0\ninfo:\n  description: Seldon is an Open Predictive Platform that currently allows item\n    recommendations and general predictive models to be deployed based on\n    structured historical data.\n  title: Seldon\n  version: 1.0.0\n  x-apisguru-categories:\n    - machine_learning\n  x-logo:\n    url: https://twitter.com/seldon_io/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: http://recsvm.rummblelabs.com/api-spec/seldon.json\n      version: \"2.0\"\n  x-providerName: rummblelabs.com\npaths:\n  /actions:\n    post:\n      description: \"\"\n      operationId: postAction\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Action\"\n        description: the json details\n        required: true\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: post new action between a user and an item\n      tags:\n        - oauth actions\n  /items:\n    get:\n      description: \"\"\n      operationId: getItems\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: get all attributes for item\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n        - description: keywords to match\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: limit items to a particular dimension\n          in: query\n          name: dimension\n          required: false\n          schema:\n            type: integer\n        - description: limit items to a particular type\n          in: query\n          name: type\n          required: false\n          schema:\n            type: integer\n        - description: limit number of items returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get items\n      tags:\n        - oauth items\n    post:\n      description: \"\"\n      operationId: postItem\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Item\"\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: post new item\n      tags:\n        - oauth items\n    put:\n      description: \"\"\n      operationId: putItem\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Item\"\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: update item\n      tags:\n        - oauth items\n  /items/type:\n    get:\n      description: \"\"\n      operationId: getItemTypes\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get item type\n      tags:\n        - oauth items\n  \"/items/{itemId}\":\n    get:\n      description: \"\"\n      operationId: getItem\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: the item id to get\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: get all attributes for item\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get item\n      tags:\n        - oauth items\n  /js/action/new:\n    get:\n      description: \"\"\n      operationId: addAction\n      parameters:\n        - description: consumer key\n          in: query\n          name: consumer_key\n          required: true\n          schema:\n            type: string\n            default: uggyecofcz\n        - description: user id\n          in: query\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: item id\n          in: query\n          name: item\n          required: true\n          schema:\n            type: string\n        - description: type\n          in: query\n          name: type\n          required: true\n          schema:\n            type: string\n        - description: JSONP callback\n          in: query\n          name: jsonpCallback\n          required: true\n          schema:\n            type: string\n        - description: time\n          in: query\n          name: timestamp\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: Add a user interaction\n      tags:\n        - js actions\n  /js/recommendations:\n    get:\n      description: \"\"\n      operationId: getRecommendation\n      parameters:\n        - description: consumer key\n          in: query\n          name: consumer_key\n          required: true\n          schema:\n            type: string\n            default: uggyecofcz\n        - description: user id\n          in: query\n          name: user\n          required: true\n          schema:\n            type: string\n        - description: currently viewed item id\n          in: query\n          name: item\n          required: false\n          schema:\n            type: string\n        - description: max number of recommendations to return\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: get recommendations for a particular item dimension (e.g., just\n            sports articles)\n          in: query\n          name: dimension\n          required: false\n          schema:\n            type: integer\n        - description: the fields to return\n          in: query\n          name: attributes\n          required: false\n          schema:\n            type: string\n            format: command separated list\n        - description: override default algorithms with specified algorithms\n          in: query\n          name: algorithms\n          required: false\n          schema:\n            type: string\n        - description: JSONP callback\n          in: query\n          name: jsonpCallback\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: Get recommendations for a user\n      tags:\n        - js recommendations\n  /token:\n    get:\n      description: \"\"\n      operationId: getToken\n      parameters:\n        - description: consumer key\n          in: query\n          name: consumer_key\n          required: true\n          schema:\n            type: string\n        - description: consumer secret\n          in: query\n          name: consumer_secret\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get token\n      tags:\n        - token\n  /users:\n    get:\n      description: \"\"\n      operationId: getUsers\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: get all attributes for user\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n        - description: keywords to match\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: limit number of users returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get users\n      tags:\n        - oauth users\n    post:\n      description: \"\"\n      operationId: postUser\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: post new user\n      tags:\n        - oauth users\n    put:\n      description: \"\"\n      operationId: updateUser\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/User\"\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: update user\n      tags:\n        - oauth users\n  \"/users/{userId}\":\n    get:\n      description: \"\"\n      operationId: getUser\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: the user id to get\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - description: get all attributes for user\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get a user\n      tags:\n        - oauth users\n  \"/users/{userId}/actions\":\n    get:\n      description: \"\"\n      operationId: getUserActions\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: the user id to get\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - description: get all attributes for user\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n        - description: limit number of actions returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get a user's recent actions\n      tags:\n        - oauth users\n        - oauth actions\n  \"/users/{userId}/recommendations\":\n    get:\n      description: \"\"\n      operationId: getUserRecommendations\n      parameters:\n        - description: oauth token\n          in: query\n          name: oauth_token\n          required: false\n          schema:\n            type: string\n        - description: the user id to get\n          in: path\n          name: userId\n          required: true\n          schema:\n            type: string\n        - description: get all attributes for user\n          in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n        - description: limit number of actions returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: get recommendations for a particular item dimension (e.g., just\n            sports articles)\n          in: query\n          name: dimension\n          required: false\n          schema:\n            type: integer\n        - description: override default algorithms with specified algorithms\n          in: query\n          name: algorithms\n          required: false\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid parameters\n      summary: get recommendations for a user\n      tags:\n        - oauth users\n        - oauth recommendations\nservers:\n  - url: http://recsvm.rummblelabs.com\n  - url: https://recsvm.rummblelabs.com\ncomponents:\n  requestBodies:\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/User\"\n      description: the json details\n      required: true\n    Item:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Item\"\n      description: the json details\n      required: true\n  schemas:\n    Action:\n      properties:\n        item:\n          example: item1234\n          type: string\n        type:\n          description: action type\n          type: integer\n        user:\n          example: user1234\n          type: string\n        value:\n          description: action value (e.g. a rating)\n          type: number\n      required:\n        - user\n        - item\n        - type\n    AttributesName:\n      properties:\n        attrName1:\n          example: attrValue1\n          type: string\n        attrName2:\n          example: attrValue2\n          type: string\n    Item:\n      properties:\n        attributesName:\n          $ref: \"#/components/schemas/AttributesName\"\n        id:\n          example: myid1234\n          type: string\n        type:\n          description: type of item\n          example: 1\n          type: integer\n      required:\n        - id\n    User:\n      properties:\n        active:\n          description: whether user is active\n          type: boolean\n        attributesName:\n          $ref: \"#/components/schemas/AttributesName\"\n        id:\n          example: myid1234\n          type: string\n        username:\n          description: name of user\n          example: Joe Bloggs\n          type: string\n      required:\n        - id\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/rummblelabs.com-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/rummblelabs.com-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}