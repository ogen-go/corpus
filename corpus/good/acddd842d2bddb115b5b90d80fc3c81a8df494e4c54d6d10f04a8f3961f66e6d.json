{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mojaloop/contrib-pisp-demo-svc"
		},
		"file": {
			"name": "app.yaml",
			"size": 0,
			"path": "src/interface/app.yaml",
			"byteSize": 7089,
			"content": "openapi: 3.0.1\ninfo:\n  title: PISP Demo Server Open API\n  description: \u003e-\n    This is part of the PISP demo server that handles communication with a front\n    end mobile app it is _not_ a canonical Mojaloop API, but a custom API for\n    this demo.\n  license:\n    name: Apache 2.0\n  version: '1.1'\nservers:\n  - url: /\npaths:\n  /health:\n    get:\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: '#/components/responses/200'\n        '400':\n          $ref: '#/components/responses/400'\n        '401':\n          $ref: '#/components/responses/401'\n        '403':\n          $ref: '#/components/responses/403'\n        '404':\n          $ref: '#/components/responses/404'\n        '405':\n          $ref: '#/components/responses/405'\n        '406':\n          $ref: '#/components/responses/406'\n        '501':\n          $ref: '#/components/responses/501'\n        '503':\n          $ref: '#/components/responses/503'\n      operationId: HealthGet\n      summary: Health check endpoint\n      description: \u003e-\n        The HTTP request GET /health is used to return the current status of the\n        API.\ncomponents:\n  responses:\n    '200':\n      description: OK\n    '400':\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '401':\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '403':\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '404':\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '405':\n      description: Method Not Allowed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '406':\n      description: Not Acceptable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '501':\n      description: Not Implemented\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n    '503':\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n      headers:\n        Content-Length:\n          $ref: '#/components/headers/Content-Length'\n        Content-Type:\n          $ref: '#/components/headers/Content-Type'\n  headers:\n    Content-Length:\n      required: false\n      schema:\n        type: integer\n      description: \u003e-\n        The `Content-Length` header field indicates the anticipated size of the\n        payload body. Only sent if there is a body.\n\n\n        **Note:** The API supports a maximum size of 5242880 bytes (5\n        Megabytes).\n    Content-Type:\n      schema:\n        type: string\n      required: true\n      description: \u003e-\n        The `Content-Type` header indicates the specific version of the API used\n        to send the payload body.\n  schemas:\n    ErrorCode:\n      title: ErrorCode\n      type: string\n      pattern: '^[1-9]\\d{3}$'\n      description: \u003e-\n        The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading\n        zero is not allowed. Each error code in the API is a four-digit number,\n        for example, 1234, where the first number (1 in the example) represents\n        the high-level error category, the second number (2 in the example)\n        represents the low-level error category, and the last two numbers (34 in\n        the example) represent the specific error.\n      example: '5100'\n    ErrorDescription:\n      title: ErrorDescription\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Error description string.\n    ExtensionKey:\n      title: ExtensionKey\n      type: string\n      minLength: 1\n      maxLength: 32\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      type: string\n      minLength: 1\n      maxLength: 128\n      description: Extension value.\n    Extension:\n      title: Extension\n      type: object\n      description: Data model for the complex type Extension.\n      properties:\n        key:\n          $ref: '#/components/schemas/ExtensionKey'\n        value:\n          $ref: '#/components/schemas/ExtensionValue'\n      required:\n        - key\n        - value\n    ExtensionList:\n      title: ExtensionList\n      type: object\n      description: \u003e-\n        Data model for the complex type ExtensionList. An optional list of\n        extensions, specific to deployment.\n      properties:\n        extension:\n          type: array\n          items:\n            $ref: '#/components/schemas/Extension'\n          minItems: 1\n          maxItems: 16\n          description: Number of Extension elements.\n      required:\n        - extension\n    ErrorInformation:\n      title: ErrorInformation\n      type: object\n      description: Data model for the complex type ErrorInformation.\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/ErrorCode'\n        errorDescription:\n          $ref: '#/components/schemas/ErrorDescription'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      required:\n        - errorCode\n        - errorDescription\n    ErrorInformationResponse:\n      title: ErrorInformationResponse\n      type: object\n      description: \u003e-\n        Data model for the complex type object that contains an optional element\n        ErrorInformation used along with 4xx and 5xx responses.\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n",
			"canonicalURL": "/github.com/mojaloop/contrib-pisp-demo-svc@2fc633d0d8e9e075da88bd1250fdd3816b53ed3d/-/blob/src/interface/app.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mojaloop/contrib-pisp-demo-svc/blob/2fc633d0d8e9e075da88bd1250fdd3816b53ed3d/src/interface/app.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}