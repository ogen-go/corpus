{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clouditor/clouditor"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/evidence/openapi.yaml",
			"byteSize": 5760,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: EvidenceStore API\n    description: Manages the storage of evidences\n    version: 0.0.1\npaths:\n    /v1/evidence_store/evidence:\n        post:\n            tags:\n                - EvidenceStore\n            description: |-\n                Stores an evidence to the evidence storage. Part of the public API, also\n                 exposed as REST.\n            operationId: EvidenceStore_StoreEvidence\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Evidence'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/StoreEvidenceResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/evidence_store/evidences:\n        get:\n            tags:\n                - EvidenceStore\n            description: Returns all stored evidences. Part of the public API, also exposed as REST.\n            operationId: EvidenceStore_ListEvidences\n            parameters:\n                - name: pageSize\n                  in: query\n                  schema:\n                    type: integer\n                    format: int32\n                - name: pageToken\n                  in: query\n                  schema:\n                    type: string\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ListEvidencesResponse'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        Evidence:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: the ID in a uuid format\n                timestamp:\n                    type: string\n                    description: time of evidence creation\n                    format: date-time\n                serviceId:\n                    type: string\n                    description: Reference to a service this evidence was gathered from\n                toolId:\n                    type: string\n                    description: Reference to the tool which provided the evidence\n                raw:\n                    type: string\n                    description: Contains the evidence in its original form without following a defined schema, e.g. the raw JSON\n                resource:\n                    $ref: '#/components/schemas/GoogleProtobufValue'\n            description: An evidence resource\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        GoogleProtobufValue:\n            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.\n        ListEvidencesResponse:\n            type: object\n            properties:\n                evidences:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/Evidence'\n                nextPageToken:\n                    type: string\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\n        StoreEvidenceResponse:\n            type: object\n            properties:\n                status:\n                    type: boolean\n                statusMessage:\n                    type: string\ntags:\n    - name: EvidenceStore\n",
			"canonicalURL": "/github.com/clouditor/clouditor@4296b5e2ecb9c33601fe45231f026cde1b71940c/-/blob/openapi/evidence/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/clouditor/clouditor/blob/4296b5e2ecb9c33601fe45231f026cde1b71940c/openapi/evidence/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}