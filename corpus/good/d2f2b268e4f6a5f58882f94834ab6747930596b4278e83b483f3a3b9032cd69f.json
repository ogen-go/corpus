{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/disqus/openapi.yml",
			"byteSize": 20894,
			"content": "openapi: 3.0.0\ninfo:\n  title: Disqus API\n  description: |\n    This is a generated connector for [Disqus API v1](https://disqus.com/api/docs) OpenAPI specification.\n    Disqus is a service for web comments and discussions. \n    Disqus makes commenting easier and more interactive, helping publishers power online discussions.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create a [Disqus account](https://disqus.com) and obtain tokens by following [this guide](https://help.disqus.com/en/articles/1717212-using-the-api).\n  x-ballerina-display:\n    label: Disqus\n    iconPath: \"icon.png\"\n  version: \"v3\"\nsecurity:\n- access_token: []\n- api_key: []\n- api_secret: []\nservers:\n  - url: 'https://disqus.com/api/3.0'\ntags:\n  - name: categories\n  - name: forums\n  - name: posts\n  - name: threads\npaths:\n  /categories/list.json:\n    get:\n      summary: \"Returns a list of categories within a forum.\"\n      description: \"https://disqus.com/api/docs/categories/list\"\n      parameters: \n        - in: \"query\"\n          name: \"forum\"\n          description: \"Looks up a forum by ID (aka short name)\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"since_id\"\n          description: \"since_id. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"cursor\"\n          description: \"cursor. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"limit\"\n          description: \"limit. Defaults to 25. Maximum value of 100.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"order\"\n          description: \"order. Defaults to 'asc'. Choices: asc, desc.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"categories\"\n      responses:\n        200:\n          description: \"An object with a single property response which is an array of Category objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Categories'\n      operationId: \"list_categories\"\n  /categories/details.json:\n    get:\n      summary: \"Returns category details.\"\n      description: \"https://disqus.com/api/docs/categories/details\"\n      parameters: \n        - in: \"query\"\n          name: \"category\"\n          description: \"Looks up a category by ID.\"\n          schema:\n            type: string\n          required: true\n      tags:\n        - \"categories\"\n      responses:\n        200:\n          description: \"An object with a single property response which is a Category object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Category'\n      operationId: \"get_category_details\"\n  /forums/details.json:\n    get:\n      summary: \"Returns forum details.\"\n      description: \"https://disqus.com/api/docs/forums/details\"\n      parameters: \n        - in: \"query\"\n          name: \"forum\"\n          description: \"Looks up a forum by ID (aka short name)\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"attach\"\n          description: \"Choices: followsForum, forumCanDisableAds, forumForumCategory, counters, forumDaysAlive, forumFeatures, forumIntegration, forumNewPolicy, forumPermissions. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"related\"\n          description: \"You may specify relations to include with your response. Choices: author. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"forums\"\n      responses:\n        200:\n          description: \"An object with a single property response which is a Forum object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Forum'\n      operationId: \"get_forum_details\"\n  /posts/list.json:\n    get:\n      summary: \"Returns a list of posts ordered by the date created.\"\n      description: \"https://disqus.com/api/docs/posts/list\"\n      parameters: \n        - in: \"query\"\n          name: \"category\"\n          description: \"Looks up a category by ID. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"end\"\n          description: \"Unix timestamp (or ISO datetime standard). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"sortType\"\n          description: \"Choices: date, priority. Defaults to 'date'.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"thread\"\n          description: \"Looks up a thread by ID. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"forum\"\n          description: \"Defaults to all forums you moderate. Use :all to retrieve all forums. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"start\"\n          description: \"Unix timestamp (or ISO datetime standard). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"since\"\n          description: \"Unix timestamp (or ISO datetime standard). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"related\"\n          description: \"You may specify relations to include with your response. Choices: forum, thread. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"cursor\"\n          description: \"Cursor. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"limit\"\n          description: \"Limit. Maximum value of 100. Defaults to 25.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"filters\"\n          description: \"Filters. Defaults to []. Valid values are Is_Anonymous, Has_Link, Has_Low_Rep_Author, Has_Bad_Word, Is_Flagged, No_Issue, Is_Toxic, Modified_By_Rule, Shadow_Banned, Has_Media, Is_At_Flag_Limit, Shadow_Banned_Global.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"query\"\n          description: \"Query. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"include\"\n          description: \"Choices: unapproved, approved, spam, deleted, flagged, highlighted. Defaults to [ 'approved' ].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"order\"\n          description: \"Choices: asc, desc. Defaults to 'desc'\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"posts\"\n      responses:\n        200:\n          description: \"An object with a single property response which is an array of Post objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Posts'\n      operationId: \"list_posts\"\n  /posts/details.json:\n    get:\n      summary: \"Returns information about a post.\"\n      description: \"https://disqus.com/api/docs/posts/details\"\n      parameters: \n        - in: \"query\"\n          name: \"post\"\n          description: \"Looks up a post by ID.\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"related\"\n          description: \"You may specify relations to include with your response. Choices: forum, thread. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"posts\"\n      responses:\n        200:\n          description: \"An object with a single property response which is a Post object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Post'\n      operationId: \"get_post_details\"\n  /threads/list.json:\n    get:\n      summary: \"Returns a list of threads sorted by the date created.\"\n      description: \"https://disqus.com/api/docs/threads/list\"\n      parameters: \n        - in: \"query\"\n          name: \"category\"\n          description: \"Looks up a category by ID. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"forum\"\n          description: \"Looks up a forum by ID (aka short name). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"thread\"\n          description: \"Looks up a thread by ID. You may pass us the 'ident' query type instead of an ID by including 'forum'. You may pass us the 'link' query type to filter by URL. You must pass the 'forum' if you do not have the Pro API Access addon. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"author\"\n          description: \"Looks up a user by ID. You may look up a user by username using the 'username' query type. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"since\"\n          description: \"Unix timestamp (or ISO datetime standard). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"related\"\n          description: \"You may specify relations to include with your response. Choices: forum, author, category. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"cursor\"\n          description: \"Cursor. Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"attach\"\n          description: \"Attach. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"limit\"\n          description: \"Limit. Maximum value of 100. Defaults to 25.\"\n          schema:\n            type: integer\n          required: false\n        - in: \"query\"\n          name: \"include\"\n          description: \"Choices: open, closed, killed. Defaults to [ 'open', 'closed' ]\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"order\"\n          description: \"Choices: asc, desc. Defaults to 'desc'.\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"threads\"\n      responses:\n        200:\n          description: \"An object with a single property response which is an array of Thread objects.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/Threads'\n      operationId: \"list_threads\"\n  /threads/details.json:\n    get:\n      summary: \"Returns thread details.\"\n      description: \"https://disqus.com/api/docs/threads/details\"\n      parameters: \n        - in: \"query\"\n          name: \"thread\"\n          description: \"Looks up a thread by ID. You may pass us the 'ident' or 'link' query types instead of an ID by including 'forum'.\"\n          schema:\n            type: string\n          required: true\n        - in: \"query\"\n          name: \"forum\"\n          description: \"Looks up a forum by ID (aka short name). Defaults to null.\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"related\"\n          description: \"You may specify relations to include with your response. Choices: forum, author, category. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n        - in: \"query\"\n          name: \"attach\"\n          description: \"Choices: topics. Defaults to [].\"\n          schema:\n            type: string\n          required: false\n      tags:\n        - \"threads\"\n      responses:\n        200:\n          description: \"An object with a single property response which is a Thread object.\"\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/DisqusThread'\n      operationId: \"get_thread_details\"\n\ncomponents:\n  schemas:\n    Categories:\n      type: object\n      properties:\n        cursor:\n            $ref: '#/components/schemas/Cursor'\n        code:\n          type: number\n          description: Code\n        response:\n          type: array\n          items:\n            $ref: '#/components/schemas/CategoryObject'\n          description: An array of Category objects.\n      description: An object with a single property response which is an array of Category objects.\n    Category:\n      type: object\n      properties:\n        code:\n          type: number\n          description: Code\n        response:\n          $ref: '#/components/schemas/CategoryObject'\n      description: An object with a single property response which is a Category object.\n    Cursor:\n      type: object\n      properties:\n        prev:\n          type: string\n          description: Prev\n        hasNext:\n          type: boolean\n          description: Has next\n        next:\n          type: string\n          description: Next\n        hasPrev:\n          type: boolean\n          description: Has prev\n        total:\n          type: string\n          description: Total\n        id:\n          type: string\n          description: ID\n        more:\n          type: boolean\n          description: More\n      description: Cursor\n    CategoryObject:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Category ID\n        forum:\n          type: string\n          description: Forum\n        order:\n          type: number\n          description: Order\n        isDefault:\n          type: boolean\n          description: Is Default\n        title:\n          type: string\n          description: Title\n      description: Category\n    Forum:\n      type: object\n      properties:\n        code:\n          type: number\n          description: Code\n        response:\n          $ref: '#/components/schemas/ForumObject'\n      description: An object with a single property response which is a Forum object.\n    ForumObject:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Forum ID\n        name:\n          type: string\n          description: Forum name\n        founder:\n          type: string\n          description: Founder\n        favicon:\n          $ref: '#/components/schemas/Favicon'\n      description: Forum\n    Favicon:\n      type: object\n      properties:\n        permalink:\n          type: string\n          description: Permalink\n        cache:\n          type: string\n          description: Cache\n      description: Favicon\n    Posts:\n      type: object\n      properties:\n        cursor:\n            $ref: '#/components/schemas/Cursor'\n        code:\n          type: number\n          description: Code\n        response:\n          type: array\n          items:\n            $ref: '#/components/schemas/PostObject'\n          description: An array of Post objects.\n      description: An object with a single property response which is an array of Post objects.\n    Post:\n      type: object\n      properties:\n        code:\n          type: number\n          description: Code\n        response:\n          $ref: '#/components/schemas/PostObject'\n      description: An object with a single property response which is a Post object.\n    PostObject:\n      type: object\n      properties:\n        isJuliaFlagged:\n          type: boolean\n          description: Is Julia Flagged\n        isFlagged:\n          type: boolean\n          description: Is Flagged\n        forum:\n          type: string\n          description: Forum\n        parent:\n          type: number\n          description: Is Default\n        author:\n            $ref: '#/components/schemas/Author'\n        isApproved:\n          type: boolean\n          description: Is Approved\n        dislikes:\n          type: number\n          description: Dislikes\n        raw_message:\n          type: string\n          description: Raw message\n        id:\n          type: string\n          description: Post ID\n        thread:\n          type: string\n          description: Thread\n        points:\n          type: number\n          description: Points\n        createdAt:\n          type: string\n          description: Created At\n        isEdited:\n          type: boolean\n          description: Is Edited\n        message:\n          type: string\n          description: Message\n        isHighlighted:\n          type: boolean\n          description: Is Highlighted\n        ipAddress:\n          type: string\n          description: IP Address\n        isSpam:\n          type: boolean\n          description: Is Spam\n        isDeleted:\n          type: boolean\n          description: Is Deleted\n        likes:\n          type: number\n          description: Likes\n      description: Category\n    Author:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Username\n        about:\n          type: string\n          description: About\n        name:\n          type: string\n          description: Name\n        url:\n          type: string\n          description: Url\n        isFollowing:\n          type: boolean\n          description: Is Following\n        isFollowedBy:\n          type: boolean\n          description: Is Followed By\n        profileUrl:\n          type: string\n          description: Profile Url\n        avatar:\n          $ref: '#/components/schemas/Avatar'\n        id:\n          type: string\n          description: Author ID\n        isAnonymous:\n          type: boolean\n          description: Is Anonymous\n        email:\n          type: string\n          description: Email\n      description: Author\n    Avatar:\n      type: object\n      properties:\n        permalink:\n          type: string\n          description: Permalink\n        cache:\n          type: string\n          description: Cache\n      description: Avatar\n    Threads:\n      type: object\n      properties:\n        cursor:\n            $ref: '#/components/schemas/Cursor'\n        code:\n          type: number\n          description: Code\n        response:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThreadObject'\n          description: An array of Thread objects.\n      description: An object with a single property response which is an array of Thread objects.\n    DisqusThread:\n      type: object\n      properties:\n        code:\n          type: number\n          description: Code\n        response:\n          $ref: '#/components/schemas/ThreadObject'\n      description: An object with a single property response which is a Thread object.\n    ThreadObject:\n      type: object\n      properties:\n        category:\n          type: string\n          description: Category ID\n        reactions:\n          type: number\n          description: Reactions\n        forum:\n          type: string\n          description: Forum\n        title:\n          type: string\n          description: Title\n        dislikes:\n          type: number\n          description: Dislikes\n        isDeleted:\n          type: boolean\n          description: Is Deleted\n        author:\n          type: string\n          description: Author\n        userScore:\n          type: number\n          description: UserScore\n        id:\n          type: string\n          description: Thread ID\n        isClosed:\n          type: boolean\n          description: Is Closed\n        posts:\n          type: number\n          description: Posts\n        link:\n          type: string\n          description: Link\n        likes:\n          type: number\n          description: Likes\n        message:\n          type: string\n          description: Message\n        ipAddress:\n          type: string\n          description: IP Address\n        slug:\n          type: string\n          description: Slug\n        createdAt:\n          type: string\n          description: Created At\n      description: Thread\n    \n\n  securitySchemes:\n    access_token:\n      type: apiKey\n      name: access_token\n      in: query\n      description: Represents API Key `access_token`\n    api_key:\n      type: apiKey\n      name: api_key\n      in: query\n      description: Represents API Key `api_key`\n    api_secret:\n      type: apiKey\n      name: api_secret\n      in: query\n      description: Represents API Key `api_secret`\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/disqus/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/disqus/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}