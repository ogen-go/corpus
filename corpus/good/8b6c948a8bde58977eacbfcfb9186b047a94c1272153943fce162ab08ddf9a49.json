{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/XeniasDimitris/SmartX-Project"
		},
		"file": {
			"name": "openapi_doc.yaml",
			"size": 0,
			"path": "back-end/api/api_docs/openapi_doc.yaml",
			"byteSize": 35879,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This is the API Documentation for SmartX-City Project and is compliant with the OpenAPI Specification v3.0. The source code of the project is [here (Github)](https://github.com/XeniasDimitris/SmartX-Project) .\n  version: 1.0.0\n  title: SmartX-City Project\n  contact:\n    name: Xenias Dimitris\n    email: dimitrisxenias@gmail.com\nservers:\n  - url: 'http://localhost:8000/api'\n    description: SmartX City API server\ntags:\n  - name: Weather\n    description: Get info about weather records\n  - name: Parkings\n    description: Get info about Aarhus' Parking Areas\n  - name: Dokk1\n    description: Get sensors info about Dokk1 building\n  - name: Demographics\n    description: Get demographics for all local communities of Aarhus\n  - name: Traffic\n    description: Get info about Traffic Sensors\n  - name: Pollution\n    description: Get info about Pollution Sensors\n  - name: Events\n    description: Get events that happen in Town\npaths:\n  /weather/humidity:\n    get:\n      tags:\n        - Weather\n      summary: Get Humidity records\n      operationId: getHumidity\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled  with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    datetime:\n                      type: string\n                      format: date-time\n                    value:\n                      type: number\n                      format: float\n              example:\n                - datetime: '2014-08-01T00:00:00'\n                  value: 56\n                - datetime: '2014-08-01T00:20:00'\n                  value: 68\n  /weather/temperature:\n    get:\n      tags:\n        - Weather\n      summary: Get Temperature records\n      operationId: getTemperature\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with  the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    datetime:\n                      type: string\n                      format: date-time\n                    value:\n                      type: number\n                      format: float\n              example:\n                - datetime: '2014-08-01T00:00:00'\n                  value: 18.2\n                - datetime: '2014-08-01T00:20:00'\n                  value: 19.5\n  /weather/pressure:\n    get:\n      tags:\n        - Weather\n      summary: Get Pressure records\n      operationId: getPressure\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with  the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    datetime:\n                      type: string\n                      format: date-time\n                    value:\n                      type: number\n                      format: int32\n              example:\n                - datetime: '2014-08-01T00:00:00'\n                  value: 1012\n                - datetime: '2014-08-01T00:20:00'\n                  value: 1013\n  /weather/wind_speed:\n    get:\n      tags:\n        - Weather\n      summary: Get Wind Speed records\n      operationId: getWindSpeed\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    datetime:\n                      type: string\n                      format: date-time\n                    value:\n                      type: number\n                      format: float\n              example:\n                - datetime: '2014-08-01T00:00:00'\n                  value: 7.4\n                - datetime: '2014-08-01T00:20:00'\n                  value: 7.5\n  /weather/wind_direction:\n    get:\n      tags:\n        - Weather\n      summary: Get Wind Direction records\n      operationId: getWindDirection\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    datetime:\n                      type: string\n                      format: date-time\n                    value:\n                      type: number\n                      format: int32\n              example:\n                - datetime: '2014-08-01T00:00:00'\n                  value: 220\n                - datetime: '2014-08-01T00:20:00'\n                  value: 210\n  /parkings/info:\n    get:\n      tags:\n        - Parkings\n      summary: Get metadata about Aarhus' Parking Areas\n      operationId: getParkingsInfo\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    garagecode:\n                      type: string\n                    city:\n                      type: string\n                    postalcode:\n                      type: string\n                    housenumber:\n                      type: number\n                      format: int32\n                    latitude:\n                      type: number\n                      format: float\n                    longtitude:\n                      type: number\n                      format: float\n              example:\n                - garagecode: NORREPORT\n                  city: Aarhus\n                  postalcode: 8000\n                  street: Kærlighedsstien\n                  housenumber: 0\n                  latitude: 56.161840000000005\n                  longitude: 10.21284\n                - garagecode: BUSGADEHUSET\n                  city: Aarhus\n                  postalcode: 8000\n                  street: Frederiksgade\n                  housenumber: 25\n                  latitude: 56.155609999999996\n                  longitude: 10.206\n  /parkings/records:\n    get:\n      tags:\n        - Parkings\n      summary: Get Aarhus' Parking Areas Records\n      operationId: getParkingRecords\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-05-22*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-05-22'\n            YYYY-MM:\n              value: 2014-05\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2014-11-04*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-11-04'\n            YYYY-MM:\n              value: 2014-11\n            YYYY:\n              value: '2014'\n        - name: parking\n          in: query\n          description: 'If filled, the records are only about this particular parking area'\n          required: false\n          schema:\n            type: string\n          examples:\n            Parking:\n              value: NORREPORT\n        - name: groupBy\n          in: query\n          description: 'If filled, the records will be returned grouped by the given frequency'\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: D\n            Month:\n              value: M\n            Hour:\n              value: H\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    vehiclecount:\n                      type: number\n                      format: int32\n                    datetime:\n                      type: string\n                      format: date-time\n                    totalspaces:\n                      type: number\n                      format: int32\n                    garagecode:\n                      type: string\n              example:\n                - vehiclecount: 0\n                  datetime: '2014-05-22 09:09:04.145'\n                  totalspaces: 65\n                  garagecode: NORREPORT\n                - vehiclecount: 0\n                  datetime: '2014-05-22 09:09:04.145'\n                  totalspaces: 512\n                  garagecode: SKOLEBAKKEN\n  /dokk1/sensors:\n    get:\n      tags:\n        - Dokk1\n      summary: Get metadata about Dokk1's sensors\n      operationId: getDokk1Info\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    location:\n                      type: string\n                    room:\n                      type: string\n                    latitude:\n                      type: number\n                      format: float\n                    longtitude:\n                      type: number\n                      format: float\n              example:\n                - id: 72f3d\n                  location: DOKK1\n                  room: A2-1\n                  latitude: 56.1534\n                  longitude: 10.2139\n                - id: 72e3c\n                  location: DOKK1\n                  room: A2-2\n                  latitude: 56.1534\n                  longitude: 10.214\n  /dokk1/records:\n    get:\n      tags:\n        - Dokk1\n      summary: Get Dokk1's records for a particular sensor\n      operationId: getDokk1Records\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2020-05-04*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2020-05-04'\n            YYYY-MM:\n              value: 2020-05\n            YYYY:\n              value: '2020'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2020-09-19*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2020-09-19'\n            YYYY-MM:\n              value: 2020-09\n            YYYY:\n              value: '2020'\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The sensor's id from which to retrieve records.\n          examples:\n            Sensor:\n              value: 71c3e\n        - name: groupBy\n          in: query\n          description: 'If filled, the records will be returned grouped by the given frequency'\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: D\n            Month:\n              value: M\n            Hour:\n              value: H\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    _id:\n                      type: number\n                      format: int32\n                    datetime:\n                      type: string\n                      format: date-time\n                    sensor:\n                      type: string\n                    temperature:\n                      type: number\n                      format: float\n                    humidity:\n                      type: number\n                      format: float\n                    co2:\n                      type: number\n                      format: int32\n                    voc:\n                      type: number\n                      format: float\n                    light_level:\n                      type: number\n                      format: int32\n                    light_colour\":\n                      type: number\n                      format: int32\n                    sound:\n                      type: number\n                      format: int32\n                    sound_low:\n                      type: number\n                      format: int32\n                    sound_high:\n                      type: number\n                      format: int32\n                    occupancy:\n                      type: number\n                      format: int32\n                    voltage:\n                      type: number\n                      format: int32\n                    rssi:\n                      type: number\n                      format: int32\n              example:\n                - _id: '3831,'\n                  datetime: '2020-05-10T00:10:41'\n                  sensor: 71c3e\n                  temperature: 24.76\n                  humidity: 32.99\n                  co2: 465\n                  voc: 87\n                  light_level: 0\n                  light_colour: 0\n                  sound: 40\n                  sound_low: 40\n                  sound_high: 42\n                  occupancy: 0\n                  voltage: 2853\n                  rssi: -80\n  /demographics:\n    get:\n      tags:\n        - Demographics\n      summary: Get demographics\n      operationId: Demographics\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    Local community:\n                      type: string\n                    Women:\n                      type: number\n                      format: int32\n                    Men:\n                      type: number\n                      format: int32\n                    Total:\n                      type: number\n                      format: int32\n                    0-2 yr:\n                      type: number\n                      format: int32\n                    3-5 yr:\n                      type: number\n                      format: int32\n                    6-15:\n                      type: number\n                      format: int32\n                    16-19 yr:\n                      type: number\n                      format: int32\n                    20-24 yr:\n                      type: number\n                      format: int32\n                    25-64 yr:\n                      type: number\n                      format: int32\n                    65 yr -:\n                      type: number\n                      format: int32\n                    total:\n                      type: number\n                      format: int32\n              example:\n                - Local community: 'City '\n                  Women: 5092\n                  Men: 5711\n                  Total: 10803\n                  0-2  yr: 251\n                  3-5 yr: 124\n                  6-15 yr: 287\n                  16-19 yr: 256\n                  20-24 yr: 3086\n                  25-64 yr: 6126\n                  65 yr -: 673\n                  total: 10803\n  /traffic/sensors:\n    get:\n      tags:\n        - Traffic\n      summary: Get Meta Data about Traffic Sensors across Town\n      operationId: TrafficSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                      format: int32\n                    city:\n                      type: string\n                    street:\n                      type: string\n                    lng:\n                      type: number\n                      format: float\n                    lat:\n                      type: number\n                      format: float\n              example:\n                - id: 4364\n                  lng: 10.13969570304107\n                  lat: 56.214978916354895\n                  street: Søftenvej\n                  city: Aarhus\n                  number: '0'\n  /traffic/cor_sensors:\n    get:\n      tags:\n        - Traffic\n      summary: Get Meta Data about Traffic Records\n      operationId: TrafficCorSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    POINT_1_STREET:\n                      type: string\n                    DURATION_IN_SEC:\n                      type: number\n                      format: int32\n                    POINT_1_NAME:\n                      type: number\n                      format: int32\n                    POINT_1_CITY:\n                      type: string\n                    POINT_2_NAME:\n                      type: number\n                      format: int32\n                    POINT_2_LNG:\n                      type: number\n                      format: float\n                    POINT_2_STREET:\n                      type: string\n                    NDT_IN_KMH:\n                      type: number\n                      format: int32\n                    POINT_2_POSTAL_CODE:\n                      type: number\n                      format: int32\n                    POINT_2_COUNTRY:\n                      type: string\n                    POINT_1_STREET_NUMBER:\n                      type: string\n                    POINT_1_LAT:\n                      type: number\n                      format: float\n                    POINT_2_LAT:\n                      type: number\n                      format: float\n                    POINT_1_POSTAL_CODE:\n                      type: number\n                      format: int32\n                    POINT_2_STREET_NUMBER:\n                      type: string\n                    POINT_2_CITY:\n                      type: string\n                    ROAD_TYPE:\n                      type: string\n                    POINT_1_LNG:\n                      type: number\n                      format: float\n                    REPORT_ID:\n                      type: number\n                      format: int32\n                    POINT_1_COUNTRY:\n                      type: string\n              example:\n                - POINT_1_STREET: Søftenvej\n                  DURATION_IN_SEC: 77\n                  POINT_1_NAME: 4364\n                  POINT_1_CITY: Aarhus\n                  POINT_2_NAME: 4349\n                  POINT_2_LNG: 10.161038385250095\n                  POINT_2_STREET: Søftenvej\n                  NDT_IN_KMH: 70\n                  POINT_2_POSTAL_CODE: 8200\n                  POINT_2_COUNTRY: Denmark\n                  POINT_1_STREET_NUMBER: '0'\n                  POINT_1_LAT: 56.214978916354895\n                  POINT_2_LAT: 56.20852026816215\n                  POINT_1_POSTAL_CODE: 8200\n                  POINT_2_STREET_NUMBER: '0'\n                  POINT_2_CITY: Aarhus\n                  ROAD_TYPE: MAJOR_ROAD\n                  POINT_1_LNG: 10.13969570304107\n                  REPORT_ID: 158895\n                  POINT_1_COUNTRY: Denmark\n  /traffic/records:\n    get:\n      tags:\n        - Traffic\n      summary: Get Traffic records from a particular traffic report_id\n      operationId: TrafficRecords\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The report id from which to retrieve records.\n          examples:\n            Sensor:\n              value: '158895'\n        - name: groupBy\n          in: query\n          description: 'If filled, the records will be returned grouped by the given frequency'\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: D\n            Month:\n              value: M\n            Hour:\n              value: H\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    avgMeasuredTime:\n                      type: number\n                      format: int32\n                    avgSpeed:\n                      type: number\n                      format: int32\n                    medianMeasuredTime:\n                      type: number\n                      format: int32\n                    datetime:\n                      type: string\n                      format: date-time\n                    vehicleCount:\n                      type: number\n                      format: int32\n              example:\n                - avgMeasuredTime: 0\n                  avgSpeed: 0\n                  medianMeasuredTime: 0\n                  datetime: '2014-09-30T23:50:00'\n                  vehicleCount: 0\n  /pollution/sensors:\n    get:\n      tags:\n        - Pollution\n      summary: Get Meta Data about Pollution Sensors across Town\n      operationId: PollutionSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  type: object\n                  properties:\n                    report_id:\n                      type: number\n                      format: int32\n                    longitude:\n                      type: number\n                      format: float\n                    latitude:\n                      type: number\n                      format: float\n              example:\n                - longitude: 10.13969570304107\n                  latitude: 56.2149789163549\n                  report_id: 158895\n  /pollution/records:\n    get:\n      tags:\n        - Pollution\n      summary: Get Pollution Records from a given report_id\n      operationId: PollutionRecords\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: 2014-08\n            YYYY:\n              value: '2014'\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The report id from which to retrieve records.\n          examples:\n            Sensor:\n              value: '158895'\n        - name: groupBy\n          in: query\n          description: 'If filled, the records will be returned grouped by the given frequency'\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: D\n            Month:\n              value: M\n            Hour:\n              value: H\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    ozone:\n                      type: number\n                      format: int32\n                    particullate_matter:\n                      type: number\n                      format: int32\n                    carbon_monoxide:\n                      type: number\n                      format: int32\n                    sulfure_dioxide:\n                      type: number\n                      format: int32\n                    nitrogen_dioxide:\n                      type: number\n                      format: int32\n                    datetime:\n                      type: string\n                      format: date-time\n              example:\n                - ozone: 34\n                  particullate_matter: 90\n                  carbon_monoxide: 69\n                  sulfure_dioxide: 75\n                  nitrogen_dioxide: 80\n                  datetime: '2014-08-01 00:05:00'\n  /events:\n    get:\n      tags:\n        - Events\n      summary: Get Events\n      operationId: Events\n      parameters:\n        - name: start\n          in: query\n          description: 'The first Date of requesting records. If it''s not filled, it will be auto-filled with the first available datetime (here  *2013-11-04*)'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2013-11-04'\n            YYYY-MM:\n              value: 2013-11\n            YYYY:\n              value: '2013'\n        - name: end\n          in: query\n          description: 'The final Date of requesting records. If it''s not filled, it will be auto-filled with the last available datetime. (here *2015-03-11*)  \u003c/br\u003e **!!!NOTE that end datetime  MUST be bigger than start datetime.**'\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2015-03-11'\n            YYYY-MM:\n              value: 2015-03\n            YYYY:\n              value: '2015'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    city:\n                      type: string\n                    endtime:\n                      type: string\n                      format: date-time\n                    title:\n                      type: string\n                    url:\n                      type: string\n                    price:\n                      type: number\n                      format: int32\n                    content:\n                      type: string\n                    zipcode:\n                      type: number\n                      format: int32\n                    library:\n                      type: string\n                    imageurl:\n                      type: string\n                    teaser:\n                      type: string\n                    street:\n                      type: string\n                    longitude:\n                      type: number\n                      format: float\n                    starttime:\n                      type: string\n                      format: date-time\n                    latitude:\n                      type: number\n                      format: float\n              example:\n                - city: Aarhus\n                  endtime: '2013-11-05 17:00:00'\n                  title: \"Lav din egen 'bogæder'\\t\\t\"\n                  url: 'https://www.aakb.dk/node/8989'\n                  price: 0\n                  changed: '2013-11-04T11:53:11'\n                  content: |\n\n                    \u003cp\u003e\u003cimg title=\"\" src=\"https://www.aakb.dk/files/content_images/bogmaerkertilweb.jpg\" alt=\"\" width=\"267\" height=\"200\" /\u003e\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003eHar du nogensinde læst en bog, der var så god, at du nærmest slugte den?\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003eEn god bog, kan næsten blive endnu bedre, hvis du har et sjovt bogmærke.\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003eDerfor laver vi ’bogædere’ på Hovedbiblioteket denne tirsdag fra klokken 15.00 til 17.00 i børnebiblioteket.\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003eTag din fantasi med, og lav dit eget søde, sjove, uhyggelige eller skøre bogmærke.\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003eDu er selvfølgelig også velkommen til at låne en god bog eller to med hjem til det bogmærke, du får lavet :-)\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                    \u003cp\u003e\u0026nbsp;\u003c/p\u003e\n                  zipcode: 8000\n                  library: Hovedbiblioteket\n                  imageurl: 'https://www.aakb.dk/files/list_images/bogmaerkertilweb.jpg'\n                  teaser: 'Kom og vær med, når vi tirsdag eftermiddag laver vores egne bogmærker.'\n                  street: Møllegade 1\n                  longitude: 10.200178999999999\n                  starttime: '2013-11-05 15:00:00'\n                  latitude: 56.156617000000004\n",
			"canonicalURL": "/github.com/XeniasDimitris/SmartX-Project@b934968fad55bca7e85c48d42bbfbd00a2516245/-/blob/back-end/api/api_docs/openapi_doc.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/XeniasDimitris/SmartX-Project/blob/b934968fad55bca7e85c48d42bbfbd00a2516245/back-end/api/api_docs/openapi_doc.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}