{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mojaloop/ml-testing-toolkit"
		},
		"file": {
			"name": "api_spec.yaml",
			"size": 0,
			"path": "spec_files/api_definitions/als_admin_1.1/api_spec.yaml",
			"byteSize": 25078,
			"content": "openapi: 3.0.1\ninfo:\n  title: Open API for ALS Admin API\n  description: Open API for ALS Admin API\n  license:\n    name: Apache 2.0\n  version: \"1.1\"\nservers:\n  - url: /\npaths:\n  /oracles:\n    parameters:\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n    get:\n      tags:\n        - admin\n        - sampled\n      summary: Get Oracles\n      description: The HTTP request GET /oracles is used to return the list of all\n        oracle endpoints. There are optional fields for type and currency i.e. /admin/oracles?type=MSISDN\u0026currency=USD\n        which can be used to get more filtered results or a specific entry\n      operationId: OraclesGet\n      parameters:\n        - $ref: '#/components/parameters/type'\n        - $ref: '#/components/parameters/currency'\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        200:\n          $ref: '#/components/responses/Response200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    post:\n      tags:\n        - admin\n        - sampled\n      summary: Create Oracles\n      description: The HTTP request POST /oracles is used to create information in\n        the server regarding the provided oracles. This request should be used for\n        creation of Oracle information.\n      operationId: OraclesPost\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OracleInfo'\n        required: true\n      responses:\n        201:\n          $ref: '#/components/responses/Response201'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /oracles/{ID}:\n    parameters:\n      - $ref: '#/components/parameters/Content-Type'\n      - $ref: '#/components/parameters/Date'\n      - $ref: '#/components/parameters/ID'\n    put:\n      tags:\n        - admin\n        - sampled\n      summary: Update Oracle\n      description: The HTTP request PUT /oracles/{ID} is used to update information\n        in the server regarding the provided oracle. This request should be used for\n        individual update of Oracle information.\n      operationId: OraclesByIdPut\n      parameters:\n        - $ref: '#/components/parameters/Content-Length'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OracleInfo'\n        required: true\n      responses:\n        204:\n          $ref: '#/components/responses/Response204'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n    delete:\n      tags:\n        - admin\n        - sampled\n      summary: Delete Oracle\n      description: The HTTP request DELETE /oracles/{ID} is used to delete information\n        in the server regarding the provided oracle.\n      operationId: OraclesByIdDelete\n      parameters:\n        - $ref: '#/components/parameters/Accept'\n      responses:\n        204:\n          $ref: '#/components/responses/Response204'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\n  /health:\n    get:\n      tags:\n        - admin\n      summary: Get Oracles\n      description: The HTTP request GET /health is used to return the current status\n        of the Admin API.\n      operationId: HealthGet\n      responses:\n        200:\n          $ref: '#/components/responses/ResponseHealth200'\n        400:\n          $ref: '#/components/responses/ErrorResponse400'\n        401:\n          $ref: '#/components/responses/ErrorResponse401'\n        403:\n          $ref: '#/components/responses/ErrorResponse403'\n        404:\n          $ref: '#/components/responses/ErrorResponse404'\n        405:\n          $ref: '#/components/responses/ErrorResponse405'\n        406:\n          $ref: '#/components/responses/ErrorResponse406'\n        501:\n          $ref: '#/components/responses/ErrorResponse501'\n        503:\n          $ref: '#/components/responses/ErrorResponse503'\ncomponents:\n  schemas:\n    ErrorCode:\n      title: ErrorCode\n      pattern: ^[1-9]\\d{3}$\n      type: string\n      description: The API data type ErrorCode is a JSON String of four characters,\n        consisting of digits only. Negative numbers are not allowed. A leading zero\n        is not allowed. Each error code in the API is a four-digit number, for example,\n        1234, where the first number (1 in the example) represents the high-level\n        error category, the second number (2 in the example) represents the low-level\n        error category, and the last two numbers (34 in the example) represents the\n        specific error.\n    ErrorDescription:\n      title: ErrorDescription\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Error description string.\n    ExtensionKey:\n      title: ExtensionKey\n      maxLength: 32\n      minLength: 1\n      type: string\n      description: Extension key.\n    ExtensionValue:\n      title: ExtensionValue\n      maxLength: 128\n      minLength: 1\n      type: string\n      description: Extension value.\n    Currency:\n      title: CurrencyEnum\n      maxLength: 3\n      minLength: 3\n      type: string\n      description: The currency codes defined in ISO 4217 as three-letter alphabetic\n        codes are used as the standard naming representation for currencies.\n      enum:\n        - AED\n        - AFN\n        - ALL\n        - AMD\n        - ANG\n        - AOA\n        - ARS\n        - AUD\n        - AWG\n        - AZN\n        - BAM\n        - BBD\n        - BDT\n        - BGN\n        - BHD\n        - BIF\n        - BMD\n        - BND\n        - BOB\n        - BRL\n        - BSD\n        - BTN\n        - BWP\n        - BYN\n        - BZD\n        - CAD\n        - CDF\n        - CHF\n        - CLP\n        - CNY\n        - COP\n        - CRC\n        - CUC\n        - CUP\n        - CVE\n        - CZK\n        - DJF\n        - DKK\n        - DOP\n        - DZD\n        - EGP\n        - ERN\n        - ETB\n        - EUR\n        - FJD\n        - FKP\n        - GBP\n        - GEL\n        - GGP\n        - GHS\n        - GIP\n        - GMD\n        - GNF\n        - GTQ\n        - GYD\n        - HKD\n        - HNL\n        - HRK\n        - HTG\n        - HUF\n        - IDR\n        - ILS\n        - IMP\n        - INR\n        - IQD\n        - IRR\n        - ISK\n        - JEP\n        - JMD\n        - JOD\n        - JPY\n        - KES\n        - KGS\n        - KHR\n        - KMF\n        - KPW\n        - KRW\n        - KWD\n        - KYD\n        - KZT\n        - LAK\n        - LBP\n        - LKR\n        - LRD\n        - LSL\n        - LYD\n        - MAD\n        - MDL\n        - MGA\n        - MKD\n        - MMK\n        - MNT\n        - MOP\n        - MRO\n        - MUR\n        - MVR\n        - MWK\n        - MXN\n        - MYR\n        - MZN\n        - NAD\n        - NGN\n        - NIO\n        - NOK\n        - NPR\n        - NZD\n        - OMR\n        - PAB\n        - PEN\n        - PGK\n        - PHP\n        - PKR\n        - PLN\n        - PYG\n        - QAR\n        - RON\n        - RSD\n        - RUB\n        - RWF\n        - SAR\n        - SBD\n        - SCR\n        - SDG\n        - SEK\n        - SGD\n        - SHP\n        - SLL\n        - SOS\n        - SPL\n        - SRD\n        - STD\n        - SVC\n        - SYP\n        - SZL\n        - THB\n        - TJS\n        - TMT\n        - TND\n        - TOP\n        - TRY\n        - TTD\n        - TVD\n        - TWD\n        - TZS\n        - UAH\n        - UGX\n        - USD\n        - UYU\n        - UZS\n        - VEF\n        - VND\n        - VUV\n        - WST\n        - XAF\n        - XCD\n        - XDR\n        - XOF\n        - XPF\n        - XTS\n        - XXX\n        - YER\n        - ZAR\n        - ZMW\n        - ZWD\n    ErrorInformation:\n      title: ErrorInformation\n      required:\n        - errorCode\n        - errorDescription\n      type: object\n      properties:\n        errorCode:\n          $ref: '#/components/schemas/ErrorCode'\n        errorDescription:\n          $ref: '#/components/schemas/ErrorDescription'\n        extensionList:\n          $ref: '#/components/schemas/ExtensionList'\n      description: Data model for the complex type ErrorInformation.\n    ErrorInformationResponse:\n      title: ErrorInformationResponse\n      type: object\n      properties:\n        errorInformation:\n          $ref: '#/components/schemas/ErrorInformation'\n      description: Data model for the complex type object that contains an optional\n        element ErrorInformation used along with 4xx and 5xx responses.\n    Extension:\n      title: Extension\n      required:\n        - key\n        - value\n      type: object\n      properties:\n        key:\n          $ref: '#/components/schemas/ExtensionKey'\n        value:\n          $ref: '#/components/schemas/ExtensionValue'\n      description: Data model for the complex type Extension\n    ExtensionList:\n      title: ExtensionList\n      required:\n        - extension\n      type: object\n      properties:\n        extension:\n          maxItems: 16\n          minItems: 1\n          type: array\n          description: Number of Extension elements\n          items:\n            $ref: '#/components/schemas/Extension'\n      description: Data model for the complex type ExtensionList\n    Endpoint:\n      title: Endpoint\n      required:\n        - endpointType\n        - value\n      type: object\n      properties:\n        value:\n          type: string\n          description: An endpoint for the Oracle.\n        endpointType:\n          $ref: '#/components/schemas/EndpointType'\n      description: Contains information about an endpoint\n    EndpointType:\n      title: EndpointType\n      type: string\n      description: The type of endpoint requested\n      enum:\n        - URL\n    HealthStatusType:\n      title: HealthStatusType\n      type: string\n      description: Below are the allowed values for the enumeration HealthStatusType\n        - OK - DOWN\n      enum:\n        - OK\n        - DOWN\n    HealthServicesType:\n      title: HealthServicesType\n      type: object\n      properties:\n        name:\n          type: string\n        status:\n          $ref: '#/components/schemas/HealthStatusType'\n      description: Data model for the complex type HealthServicesType. Contains health\n        services information.\n    OracleInfo:\n      title: OracleInfo\n      required:\n        - endpoint\n        - oracleIdType\n      type: object\n      properties:\n        oracleIdType:\n          $ref: '#/components/schemas/PartyIdType'\n        endpoint:\n          $ref: '#/components/schemas/Endpoint'\n        currency:\n          $ref: '#/components/schemas/Currency'\n        isDefault:\n          type: boolean\n          description: Is the endpoint default or not\n      description: Data model for the complex type OracleInfo.\n    OracleInfoGetResponse:\n      title: OracleInfoGetResponse\n      required:\n        - endpoint\n        - oracleIdType\n      type: object\n      properties:\n        oracleId:\n          type: string\n          description: Oracle type entry's unique identified\n        oracleIdType:\n          $ref: '#/components/schemas/PartyIdType'\n        endpoint:\n          $ref: '#/components/schemas/Endpoint'\n        currency:\n          $ref: '#/components/schemas/Currency'\n        isDefault:\n          type: boolean\n          description: Is the endpoint default or not\n      description: Data model for the complex type OracleInfo.\n    OracleInfoGetResponseList:\n      title: OracleInfoGetResponseList\n      type: array\n      description: List of OracleInfoGetResponse\n      items:\n        $ref: '#/components/schemas/OracleInfoGetResponse'\n    PartyIdType:\n      title: PartyIdTypeEnum\n      type: string\n      description: Below are the allowed values for the enumeration - MSISDN An MSISDN\n        (Mobile Station International Subscriber Directory Number, that is, the phone\n        number) is used as reference to a participant. The MSISDN identifier should\n        be in international format according to the ITU-T E.164 standard. Optionally,\n        the MSISDN may be prefixed by a single plus sign, indicating the international\n        prefix. - EMAIL An email is used as reference to a participant. The format\n        of the email should be according to the informational RFC 3696. - PERSONAL_ID\n        A personal identifier is used as reference to a participant. Examples of personal\n        identification are passport number, birth certificate number, and national\n        registration number. The identifier number is added in the PartyIdentifier\n        element. The personal identifier type is added in the PartySubIdOrType element.\n        - BUSINESS A specific Business (for example, an organization or a company)\n        is used as reference to a participant. The BUSINESS identifier can be in any\n        format. To make a transaction connected to a specific username or bill number\n        in a Business, the PartySubIdOrType element should be used. - DEVICE A specific\n        device (for example, a POS or ATM) ID connected to a specific business or\n        organization is used as reference to a Party. For referencing a specific device\n        under a specific business or organization, use the PartySubIdOrType element.\n        - ACCOUNT_ID A bank account number or FSP account ID should be used as reference\n        to a participant. The ACCOUNT_ID identifier can be in any format, as formats\n        can greatly differ depending on country and FSP. - IBAN A bank account number\n        or FSP account ID is used as reference to a participant. The IBAN identifier\n        can consist of up to 34 alphanumeric characters and should be entered without\n        whitespace. - ALIAS An alias is used as reference to a participant. The alias\n        should be created in the FSP as an alternative reference to an account owner.\n        Another example of an alias is a username in the FSP system. The ALIAS identifier\n        can be in any format. It is also possible to use the PartySubIdOrType element\n        for identifying an account under an Alias defined by the PartyIdentifier.\n      enum:\n        - MSISDN\n        - EMAIL\n        - PERSONAL_ID\n        - BUSINESS\n        - DEVICE\n        - ACCOUNT_ID\n        - IBAN\n        - ALIAS\n    Status:\n      title: Status\n      type: object\n      properties:\n        status:\n          type: string\n          description: The return status, usually \"OK\"\n        uptime:\n          type: number\n          description: The amount of time in seconds that the server has been up for.\n        startTime:\n          type: string\n          description: The UTC time that the server started up\n        versionNumber:\n          type: string\n          description: Current version of the API\n        services:\n          type: array\n          description: An list of the statuses of services that the API requires\n          items:\n            $ref: '#/components/schemas/HealthServicesType'\n      description: Data model for the api status.\n  responses:\n    ErrorResponse400:\n      description: Bad Request - The application cannot process the request; for example,\n        due to malformed syntax or the payload exceeded size restrictions.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse401:\n      description: Unauthorized - The request requires authentication in order to\n        be processed.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse403:\n      description: Forbidden - The request was denied and will be denied in the future.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse404:\n      description: Not Found - The resource specified in the URI was not found.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse405:\n      description: Method Not Allowed - An unsupported HTTP method for the request\n        was used.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse406:\n      description: Not acceptable - The server is not capable of generating content\n        according to the Accept headers sent in the request. Used in the API to indicate\n        that the server does not support the version that the client is requesting.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse501:\n      description: Not Implemented - The server does not support the requested service.\n        The client should not retry.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    ErrorResponse503:\n      description: Service Unavailable - The server is currently unavailable to accept\n        any new service requests. This should be a temporary state, and the client\n        should retry within a reasonable time frame.\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorInformationResponse'\n    Response200:\n      description: OK\n      headers:\n        Content-Length:\n          description: The Content-Length header field indicates the anticipated size\n            of the payload body. Only sent if there is a body.\n          schema:\n            type: integer\n        Content-Type:\n          description: The Content-Type header indicates the specific version of the\n            API used to send the payload body.\n          schema:\n            type: string\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OracleInfoGetResponseList'\n    Response201:\n      description: Created\n      content: {}\n    Response204:\n      description: No Content\n      content: {}\n    ResponseHealth200:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Status'\n  parameters:\n    Accept:\n      name: accept\n      in: header\n      description: The Accept header field indicates the version of the API the client\n        would like the server to use.\n      required: true\n      schema:\n        type: string\n    Accept-Optional:\n      name: accept\n      in: header\n      description: The Accept header field indicates the version of the API the client\n        would like the server to use.\n      schema:\n        type: string\n    Content-Length:\n      name: content-length\n      in: header\n      description: The Content-Length header field indicates the anticipated size\n        of the payload body. Only sent if there is a body. Note - The API supports\n        a maximum size of 5242880 bytes (5 Megabytes)\n      schema:\n        type: integer\n    Content-Type:\n      name: content-type\n      in: header\n      description: The Content-Type header indicates the specific version of the API\n        used to send the payload body.\n      required: true\n      schema:\n        type: string\n    Date:\n      name: date\n      in: header\n      description: The Date header field indicates the date when the request was sent.\n      required: true\n      schema:\n        type: string\n    ID:\n      name: ID\n      in: path\n      description: ID relating to the oracle endpoint entry\n      required: true\n      schema:\n        type: string\n    type:\n      name: type\n      in: query\n      description: type of oracle entry\n      schema:\n        type: string\n    currency:\n      name: currency\n      in: query\n      description: currency relating to the oracle endpoint entry\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/mojaloop/ml-testing-toolkit@a07d17f48bd27ab5aa66ab2d765d54599d9e3e53/-/blob/spec_files/api_definitions/als_admin_1.1/api_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mojaloop/ml-testing-toolkit/blob/a07d17f48bd27ab5aa66ab2d765d54599d9e3e53/spec_files/api_definitions/als_admin_1.1/api_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}