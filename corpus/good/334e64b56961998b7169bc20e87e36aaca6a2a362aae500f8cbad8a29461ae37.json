{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "azure.com-sql-DatabaseSecurityAlertPolicies-2018-06-01-preview-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/azure.com-sql-DatabaseSecurityAlertPolicies-2018-06-01-preview-swagger.yaml",
			"byteSize": 24113,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Azure SQL Database management API provides a RESTful set of web APIs\n    that interact with Azure SQL Database services to manage your databases. The\n    API enables users to create, retrieve, update, and delete databases,\n    servers, and other entities.\n  title: SqlManagementClient\n  version: 2018-06-01-preview\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2018-06-01-preview/DatabaseSecurityAlertPolicies.json\n      version: \"2.0\"\n  x-providerName: azure.com\n  x-serviceName: sql-DatabaseSecurityAlertPolicies\n  x-tags:\n    - Azure\n    - Microsoft\npaths:\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies\":\n    get:\n      description: Gets a list of database's security alert policies.\n      operationId: DatabaseSecurityAlertPolicies_ListByDatabase\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: The name of the  server.\n          in: path\n          name: serverName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get the database's threat detection policies:\n              value: securityalert-2080\n        - description: The name of the  database for which the security alert policy is\n            defined.\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get the database's threat detection policies:\n              value: testdb\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved the  database security alert policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSecurityAlertListResult\"\n              examples:\n                Get the database's threat detection policies:\n                  $ref: \"#/components/examples/Get_the_database_s_threat_detection_\\\n                    policies\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n             * 400 InvalidDatabaseSecurityAlertPolicyCreateRequest - The create database Threat Detection security alert policy request does not exist or has no properties object.\n\n             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 409 DatabaseSecurityAlertPolicyInProgress - Set database security alert policy is already in progress\n\n             * 409 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n             * 500 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get Threat Detection settings\n      tags:\n        - DatabaseSecurityAlertPolicies\n      x-ms-pageable:\n        nextLinkName: nextLink\n  \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}\":\n    get:\n      description: Gets a  database's security alert policy.\n      operationId: DatabaseSecurityAlertPolicies_Get\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: The name of the  server.\n          in: path\n          name: serverName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get a database's threat detection policy:\n              value: securityalert-2080\n        - description: The name of the  database for which the security alert policy is\n            defined.\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n          examples:\n            Get a database's threat detection policy:\n              value: testdb\n        - description: The name of the security alert policy.\n          in: path\n          name: securityAlertPolicyName\n          required: true\n          x-ms-enum:\n            modelAsString: true\n            name: SecurityAlertPolicyName\n          schema:\n            type: string\n            enum:\n              - default\n          examples:\n            Get a database's threat detection policy:\n              value: default\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      responses:\n        \"200\":\n          description: Successfully retrieved the  database security alert policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSecurityAlertPolicy\"\n              examples:\n                Get a database's threat detection policy:\n                  $ref: \"#/components/examples/Get_a_database_s_threat_detection_po\\\n                    licy\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n             * 400 InvalidDatabaseSecurityAlertPolicyCreateRequest - The create database Threat Detection security alert policy request does not exist or has no properties object.\n\n             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 409 DatabaseSecurityAlertPolicyInProgress - Set database security alert policy is already in progress\n\n             * 409 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n             * 500 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get Threat Detection settings\n      tags:\n        - DatabaseSecurityAlertPolicies\n    put:\n      description: Creates or updates a database's security alert policy.\n      operationId: DatabaseSecurityAlertPolicies_CreateOrUpdate\n      parameters:\n        - $ref: \"#/components/parameters/ResourceGroupParameter\"\n        - description: The name of the  server.\n          in: path\n          name: serverName\n          required: true\n          schema:\n            type: string\n          examples:\n            Update a database's threat detection policy with all parameters:\n              value: securityalert-6440\n            Update a database's threat detection policy with minimal parameters:\n              value: securityalert-6440\n        - description: The name of the  database for which the security alert policy is\n            defined.\n          in: path\n          name: databaseName\n          required: true\n          schema:\n            type: string\n          examples:\n            Update a database's threat detection policy with all parameters:\n              value: testdb\n            Update a database's threat detection policy with minimal parameters:\n              value: testdb\n        - description: The name of the security alert policy.\n          in: path\n          name: securityAlertPolicyName\n          required: true\n          x-ms-enum:\n            modelAsString: true\n            name: SecurityAlertPolicyName\n          schema:\n            type: string\n            enum:\n              - default\n          examples:\n            Update a database's threat detection policy with all parameters:\n              value: default\n            Update a database's threat detection policy with minimal parameters:\n              value: default\n        - $ref: \"#/components/parameters/SubscriptionIdParameter\"\n        - $ref: \"#/components/parameters/ApiVersionParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DatabaseSecurityAlertPolicy\"\n        description: The database security alert policy.\n        required: true\n      responses:\n        \"200\":\n          description: Successfully set the  database security alert policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSecurityAlertPolicy\"\n              examples:\n                Update a database's threat detection policy with all parameters:\n                  $ref: \"#/components/examples/Update_a_database_s_threat_detection\\\n                    _policy_with_all_parameters\"\n                Update a database's threat detection policy with minimal parameters:\n                  $ref: \"#/components/examples/Update_a_database_s_threat_detection\\\n                    _policy_with_minimal_parameters\"\n        \"201\":\n          description: Successfully created the  database security alert policy.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DatabaseSecurityAlertPolicy\"\n              examples:\n                Update a database's threat detection policy with all parameters:\n                  $ref: \"#/components/examples/Update_a_database_s_threat_detection\\\n                    _policy_with_all_parameters\"\n                Update a database's threat detection policy with minimal parameters:\n                  $ref: \"#/components/examples/Update_a_database_s_threat_detection\\\n                    _policy_with_minimal_parameters\"\n        default:\n          description: \u003e-\n            *** Error Responses: ***\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n             * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n             * 400 InvalidDatabaseSecurityAlertPolicyCreateRequest - The create database Threat Detection security alert policy request does not exist or has no properties object.\n\n             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 400 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n             * 404 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 409 DatabaseSecurityAlertPolicyInProgress - Set database security alert policy is already in progress\n\n             * 409 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n             * 500 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n             * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get Threat Detection settings\n      tags:\n        - DatabaseSecurityAlertPolicies\nservers:\n  - url: https://management.azure.com\ncomponents:\n  examples:\n    Get_the_database_s_threat_detection_policies:\n      value:\n        value:\n          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-6852/providers/Microsoft.Sql/servers/securityalert-2080/databases/testdb\n            kind: V12\n            location: Japan East\n            name: default\n            properties:\n              creationTime: 10/8/2018 12:00:00 AM\n              disabledAlerts:\n                - Usage_Anomaly\n              emailAccountAdmins: true\n              emailAddresses:\n                - test@microsoft.com\n                - user@microsoft.com\n              retentionDays: 0\n              state: Enabled\n              storageAccountAccessKey: \"\"\n            type: Microsoft.Sql/servers/databases/securityAlertPolicies\n    Get_a_database_s_threat_detection_policy:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-6852/providers/Microsoft.Sql/servers/securityalert-2080/databases/testdb\n        kind: V12\n        location: Japan East\n        name: default\n        properties:\n          creationTime: 10/8/2018 12:00:00 AM\n          disabledAlerts:\n            - Usage_Anomaly\n          emailAccountAdmins: true\n          emailAddresses:\n            - test@microsoft.com\n            - user@microsoft.com\n          retentionDays: 0\n          state: Enabled\n          storageAccountAccessKey: \"\"\n        type: Microsoft.Sql/servers/databases/securityAlertPolicies\n    Update_a_database_s_threat_detection_policy_with_all_parameters:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          disabledAlerts:\n            - Access_Anomaly\n            - Usage_Anomaly\n          emailAccountAdmins: true\n          emailAddresses:\n            - test@microsoft.com\n            - user@microsoft.com\n          retentionDays: 6\n          state: Enabled\n          storageAccountAccessKey: sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==\n          storageEndpoint: https://mystorage.blob.core.windows.net\n          useServerDefault: Disabled\n        type: Microsoft.Sql/servers/databases/securityAlertPolicies\n    Update_a_database_s_threat_detection_policy_with_minimal_parameters:\n      value:\n        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/securityalert-4799/providers/Microsoft.Sql/servers/securityalert-6440/databases/testdb\n        kind: V12\n        name: default\n        properties:\n          disabledAlerts: []\n          emailAccountAdmins: true\n          emailAddresses: []\n          retentionDays: 0\n          state: Enabled\n          storageAccountAccessKey: \"\"\n          storageEndpoint: \"\"\n        type: Microsoft.Sql/servers/databases/securityAlertPolicies\n  parameters:\n    ApiVersionParameter:\n      description: The API version to use for the request.\n      in: query\n      name: api-version\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        Get the database's threat detection policies:\n          value: 2018-06-01=preview\n        Get a database's threat detection policy:\n          value: 2018-06-01=preview\n        Update a database's threat detection policy with all parameters:\n          value: 2018-06-01-preview\n        Update a database's threat detection policy with minimal parameters:\n          value: 2018-06-01-preview\n    BlobAuditingPolicyNameParameter:\n      description: The name of the blob auditing policy.\n      in: path\n      name: blobAuditingPolicyName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n        enum:\n          - default\n    DatabaseNameParameter:\n      description: The name of the database.\n      in: path\n      name: databaseName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ManagedInstanceNameParameter:\n      description: The name of the managed instance.\n      in: path\n      name: managedInstanceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ResourceGroupParameter:\n      description: The name of the resource group that contains the resource. You can\n        obtain this value from the Azure Resource Manager API or the portal.\n      in: path\n      name: resourceGroupName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n      examples:\n        Get the database's threat detection policies:\n          value: securityalert-6852\n        Get a database's threat detection policy:\n          value: securityalert-6852\n        Update a database's threat detection policy with all parameters:\n          value: securityalert-4799\n        Update a database's threat detection policy with minimal parameters:\n          value: securityalert-4799\n    ServerNameParameter:\n      description: The name of the server.\n      in: path\n      name: serverName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SqlVirtualMachineContainerNameParameter:\n      description: The name of the SqlVirtualMachineContainer.\n      in: path\n      name: sqlVirtualMachineContainerName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SqlVirtualMachineInstanceNameParameter:\n      description: The name of the SqlVirtualMachineInstance.\n      in: path\n      name: sqlVirtualMachineInstanceName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubscriptionIdParameter:\n      description: The subscription ID that identifies an Azure subscription.\n      in: path\n      name: subscriptionId\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n      examples:\n        Get the database's threat detection policies:\n          value: 00000000-1111-2222-3333-444444444444\n        Get a database's threat detection policy:\n          value: 00000000-1111-2222-3333-444444444444\n        Update a database's threat detection policy with all parameters:\n          value: 00000000-1111-2222-3333-444444444444\n        Update a database's threat detection policy with minimal parameters:\n          value: 00000000-1111-2222-3333-444444444444\n    VirtualClusterNameParameter:\n      description: The name of the virtual cluster.\n      in: path\n      name: virtualClusterName\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    DatabaseSecurityAlertListResult:\n      description: A list of the database's security alert policies.\n      properties:\n        nextLink:\n          description: Link to retrieve next page of results.\n          readOnly: true\n          type: string\n        value:\n          description: Array of results.\n          items:\n            $ref: \"#/components/schemas/DatabaseSecurityAlertPolicy\"\n          readOnly: true\n          type: array\n      type: object\n    DatabaseSecurityAlertPolicy:\n      allOf:\n        - allOf:\n            - description: ARM resource.\n              properties:\n                id:\n                  description: Resource ID.\n                  readOnly: true\n                  type: string\n                name:\n                  description: Resource name.\n                  readOnly: true\n                  type: string\n                type:\n                  description: Resource type.\n                  readOnly: true\n                  type: string\n              type: object\n              x-ms-azure-resource: true\n          description: ARM proxy resource.\n          properties: {}\n          type: object\n      description: A database security alert policy.\n      properties:\n        properties:\n          $ref: \"#/components/schemas/SecurityAlertPolicyProperties\"\n      type: object\n    SecurityAlertPolicyProperties:\n      description: Properties of a security alert policy.\n      properties:\n        creationTime:\n          description: Specifies the UTC creation time of the policy.\n          format: date-time\n          readOnly: true\n          type: string\n        disabledAlerts:\n          description: \"Specifies an array of alerts that are disabled. Allowed values are:\n            Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly,\n            Data_Exfiltration, Unsafe_Action\"\n          items:\n            type: string\n          type: array\n        emailAccountAdmins:\n          description: Specifies that the alert is sent to the account administrators.\n          type: boolean\n        emailAddresses:\n          description: Specifies an array of e-mail addresses to which the alert is sent.\n          items:\n            type: string\n          type: array\n        retentionDays:\n          description: Specifies the number of days to keep in the Threat Detection audit\n            logs.\n          format: int32\n          type: integer\n        state:\n          description: Specifies the state of the policy, whether it is enabled or disabled\n            or a policy has not been applied yet on the specific database.\n          enum:\n            - New\n            - Enabled\n            - Disabled\n          type: string\n          x-ms-enum:\n            modelAsString: false\n            name: SecurityAlertPolicyState\n        storageAccountAccessKey:\n          description: Specifies the identifier key of the Threat Detection audit storage\n            account.\n          type: string\n        storageEndpoint:\n          description: Specifies the blob storage endpoint (e.g.\n            https://MyAccount.blob.core.windows.net). This blob storage will\n            hold all Threat Detection audit logs.\n          type: string\n      required:\n        - state\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/azure.com-sql-DatabaseSecurityAlertPolicies-2018-06-01-preview-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/azure.com-sql-DatabaseSecurityAlertPolicies-2018-06-01-preview-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	}
}